
// ==================================================================
// AcquaintanceTaskAcquainters.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagement.Client
{
  public class AcquaintanceTaskAcquainters :
    global::Sungero.Domain.Client.ChildEntityProxy, global::Sungero.RecordManagement.IAcquaintanceTaskAcquainters
  {
    #region Fields and properties

    public static new readonly global::System.Guid ClassTypeGuid = global::System.Guid.Parse("be141725-abac-4ecb-a6ff-00051643f4a1");

    public override global::System.Guid TypeGuid
    {
      get { return global::Sungero.RecordManagement.Client.AcquaintanceTaskAcquainters.ClassTypeGuid; }
    }

    public override string TypeName
    {
      get { return "Sungero.RecordManagement.IAcquaintanceTaskAcquainters, Sungero.Domain.Interfaces"; }
    }

    public new global::Sungero.RecordManagement.IAcquaintanceTaskAcquaintersState State
    {
      get
      {
        return (global::Sungero.RecordManagement.IAcquaintanceTaskAcquaintersState)base.State;
      }
    }

    protected override global::Sungero.Domain.Shared.IEntityState CreateState()
    {
      return new global::Sungero.RecordManagement.Shared.AcquaintanceTaskAcquaintersState(this);
    }

    public new global::Sungero.RecordManagement.IAcquaintanceTaskAcquaintersInfo Info
    {
      get
      {
        return (global::Sungero.RecordManagement.IAcquaintanceTaskAcquaintersInfo)base.Info;
      }
    }

    protected global::Sungero.Domain.Client.NavigationProperty<global::Sungero.RecordManagement.IAcquaintanceTask> _AcquaintanceTask;

    public global::Sungero.RecordManagement.IAcquaintanceTask AcquaintanceTask
    {
      get { return this._AcquaintanceTask.Value; }
      set { this._AcquaintanceTask.Value = value; }
    }

    public override global::Sungero.Domain.Shared.IEntity RootEntity
    {
      get { return this.AcquaintanceTask; }
      set { this.AcquaintanceTask = (global::Sungero.RecordManagement.IAcquaintanceTask)value; }
    }




              protected global::Sungero.Domain.Client.INavigationProperty<global::Sungero.Company.IEmployee> _Acquainter;

              public virtual global::Sungero.Company.IEmployee Acquainter
              {
              get
              {
                return this._Acquainter.Value as global::Sungero.Company.IEmployee;
              }

              set
              {
                (this._Acquainter as global::Sungero.Domain.Client.IProperty).Value = value;
              }
            }










    #endregion

    #region Methods

    protected override object CreateHandlers() {
      return new global::Sungero.RecordManagement.AcquaintanceTaskAcquaintersClientHandlers(this);
    }
    protected override object CreateSharedHandlers() {
      return new global::Sungero.RecordManagement.AcquaintanceTaskAcquaintersSharedHandlers(this);
    }

    #endregion

    #region Framework events

    protected void AcquainterChangedHandler()
    {
      var args = new global::Sungero.RecordManagement.Shared.AcquaintanceTaskAcquaintersAcquainterChangedEventArgs(this.State.Properties.Acquainter, this.Acquainter, this);
     ((global::Sungero.RecordManagement.AcquaintanceTaskAcquaintersSharedHandlers)this.SharedHandlers).AcquaintersAcquainterChanged(args);
    }



  protected global::Sungero.Company.IEmployee AcquainterValueInputHandler(global::Sungero.Company.IEmployee value)
  {
    var args = new global::Sungero.RecordManagement.Client.AcquaintanceTaskAcquaintersAcquainterValueInputEventArgs(this.Acquainter, value, this, this.Info.Properties.Acquainter);
    ((global::Sungero.RecordManagement.AcquaintanceTaskAcquaintersClientHandlers)this.Handlers).AcquaintersAcquainterValueInput(args);
    return args.NewValue;
  }



    #endregion

    #region Constructors



              protected virtual void InitAcquainterNavigationProperty()
              {
                this._Acquainter = new global::Sungero.Domain.Client.NavigationProperty<global::Sungero.Company.IEmployee>("Acquainter", this);
                this._Acquainter.ValueChanged += (sender, e) => { this.AcquainterChangedHandler(); };
                this.AddProperty(this._Acquainter as global::Sungero.Domain.Client.IProperty);
              }




    public AcquaintanceTaskAcquainters()
    {
      this._AcquaintanceTask = new global::Sungero.Domain.Client.NavigationProperty<global::Sungero.RecordManagement.IAcquaintanceTask>("AcquaintanceTask", this, true);


            this.InitAcquainterNavigationProperty();








    }

    #endregion

  }
}
