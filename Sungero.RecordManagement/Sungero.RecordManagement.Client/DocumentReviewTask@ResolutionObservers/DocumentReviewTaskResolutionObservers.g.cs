
// ==================================================================
// DocumentReviewTaskResolutionObservers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagement.Client
{
  public class DocumentReviewTaskResolutionObservers :
    global::Sungero.Domain.Client.ChildEntityProxy, global::Sungero.RecordManagement.IDocumentReviewTaskResolutionObservers
  {
    #region Fields and properties

    public static new readonly global::System.Guid ClassTypeGuid = global::System.Guid.Parse("67733707-1758-4d72-bc40-0acecb8e9fd8");

    public override global::System.Guid TypeGuid
    {
      get { return global::Sungero.RecordManagement.Client.DocumentReviewTaskResolutionObservers.ClassTypeGuid; }
    }

    public override string TypeName
    {
      get { return "Sungero.RecordManagement.IDocumentReviewTaskResolutionObservers, Sungero.Domain.Interfaces"; }
    }

    public new global::Sungero.RecordManagement.IDocumentReviewTaskResolutionObserversState State
    {
      get
      {
        return (global::Sungero.RecordManagement.IDocumentReviewTaskResolutionObserversState)base.State;
      }
    }

    protected override global::Sungero.Domain.Shared.IEntityState CreateState()
    {
      return new global::Sungero.RecordManagement.Shared.DocumentReviewTaskResolutionObserversState(this);
    }

    public new global::Sungero.RecordManagement.IDocumentReviewTaskResolutionObserversInfo Info
    {
      get
      {
        return (global::Sungero.RecordManagement.IDocumentReviewTaskResolutionObserversInfo)base.Info;
      }
    }

    protected global::Sungero.Domain.Client.NavigationProperty<global::Sungero.RecordManagement.IDocumentReviewTask> _DocumentReviewTask;

    public global::Sungero.RecordManagement.IDocumentReviewTask DocumentReviewTask
    {
      get { return this._DocumentReviewTask.Value; }
      set { this._DocumentReviewTask.Value = value; }
    }

    public override global::Sungero.Domain.Shared.IEntity RootEntity
    {
      get { return this.DocumentReviewTask; }
      set { this.DocumentReviewTask = (global::Sungero.RecordManagement.IDocumentReviewTask)value; }
    }




              protected global::Sungero.Domain.Client.INavigationProperty<global::Sungero.CoreEntities.IRecipient> _Observer;

              public virtual global::Sungero.CoreEntities.IRecipient Observer
              {
              get
              {
                return this._Observer.Value as global::Sungero.CoreEntities.IRecipient;
              }

              set
              {
                (this._Observer as global::Sungero.Domain.Client.IProperty).Value = value;
              }
            }










    #endregion

    #region Methods

    protected override object CreateHandlers() {
      return new global::Sungero.RecordManagement.DocumentReviewTaskResolutionObserversClientHandlers(this);
    }
    protected override object CreateSharedHandlers() {
      return new global::Sungero.RecordManagement.DocumentReviewTaskResolutionObserversSharedHandlers(this);
    }

    #endregion

    #region Framework events

    protected void ObserverChangedHandler()
    {
      var args = new global::Sungero.RecordManagement.Shared.DocumentReviewTaskResolutionObserversObserverChangedEventArgs(this.State.Properties.Observer, this.Observer, this);
     ((global::Sungero.RecordManagement.DocumentReviewTaskResolutionObserversSharedHandlers)this.SharedHandlers).ResolutionObserversObserverChanged(args);
    }



  protected global::Sungero.CoreEntities.IRecipient ObserverValueInputHandler(global::Sungero.CoreEntities.IRecipient value)
  {
    var args = new global::Sungero.RecordManagement.Client.DocumentReviewTaskResolutionObserversObserverValueInputEventArgs(this.Observer, value, this, this.Info.Properties.Observer);
    ((global::Sungero.RecordManagement.DocumentReviewTaskResolutionObserversClientHandlers)this.Handlers).ResolutionObserversObserverValueInput(args);
    return args.NewValue;
  }



    #endregion

    #region Constructors



              protected virtual void InitObserverNavigationProperty()
              {
                this._Observer = new global::Sungero.Domain.Client.NavigationProperty<global::Sungero.CoreEntities.IRecipient>("Observer", this);
                this._Observer.ValueChanged += (sender, e) => { this.ObserverChangedHandler(); };
                this.AddProperty(this._Observer as global::Sungero.Domain.Client.IProperty);
              }




    public DocumentReviewTaskResolutionObservers()
    {
      this._DocumentReviewTask = new global::Sungero.Domain.Client.NavigationProperty<global::Sungero.RecordManagement.IDocumentReviewTask>("DocumentReviewTask", this, true);


            this.InitObserverNavigationProperty();








    }

    #endregion

  }
}
