
// ==================================================================
// ActionItemExecutionTaskCoAssignees.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagement.Client
{
  public class ActionItemExecutionTaskCoAssignees :
    global::Sungero.Domain.Client.ChildEntityProxy, global::Sungero.RecordManagement.IActionItemExecutionTaskCoAssignees
  {
    #region Fields and properties

    public static new readonly global::System.Guid ClassTypeGuid = global::System.Guid.Parse("f87455f2-4292-42f8-9e2c-0b3bf34eac87");

    public override global::System.Guid TypeGuid
    {
      get { return global::Sungero.RecordManagement.Client.ActionItemExecutionTaskCoAssignees.ClassTypeGuid; }
    }

    public override string TypeName
    {
      get { return "Sungero.RecordManagement.IActionItemExecutionTaskCoAssignees, Sungero.Domain.Interfaces"; }
    }

    public new global::Sungero.RecordManagement.IActionItemExecutionTaskCoAssigneesState State
    {
      get
      {
        return (global::Sungero.RecordManagement.IActionItemExecutionTaskCoAssigneesState)base.State;
      }
    }

    protected override global::Sungero.Domain.Shared.IEntityState CreateState()
    {
      return new global::Sungero.RecordManagement.Shared.ActionItemExecutionTaskCoAssigneesState(this);
    }

    public new global::Sungero.RecordManagement.IActionItemExecutionTaskCoAssigneesInfo Info
    {
      get
      {
        return (global::Sungero.RecordManagement.IActionItemExecutionTaskCoAssigneesInfo)base.Info;
      }
    }

    protected global::Sungero.Domain.Client.NavigationProperty<global::Sungero.RecordManagement.IActionItemExecutionTask> _ActionItemExecutionTask;

    public global::Sungero.RecordManagement.IActionItemExecutionTask ActionItemExecutionTask
    {
      get { return this._ActionItemExecutionTask.Value; }
      set { this._ActionItemExecutionTask.Value = value; }
    }

    public override global::Sungero.Domain.Shared.IEntity RootEntity
    {
      get { return this.ActionItemExecutionTask; }
      set { this.ActionItemExecutionTask = (global::Sungero.RecordManagement.IActionItemExecutionTask)value; }
    }

        protected global::Sungero.Domain.Client.SimpleProperty<global::System.Boolean?> _AssignmentCreated;

        public virtual global::System.Boolean? AssignmentCreated
        {
          get { return this._AssignmentCreated.Value; }
          set { this._AssignmentCreated.Value = value; }
        }




              protected global::Sungero.Domain.Client.INavigationProperty<global::Sungero.Company.IEmployee> _Assignee;

              public virtual global::Sungero.Company.IEmployee Assignee
              {
              get
              {
                return this._Assignee.Value as global::Sungero.Company.IEmployee;
              }

              set
              {
                (this._Assignee as global::Sungero.Domain.Client.IProperty).Value = value;
              }
            }










    #endregion

    #region Methods

    protected override object CreateHandlers() {
      return new global::Sungero.RecordManagement.ActionItemExecutionTaskCoAssigneesClientHandlers(this);
    }
    protected override object CreateSharedHandlers() {
      return new global::Sungero.RecordManagement.ActionItemExecutionTaskCoAssigneesSharedHandlers(this);
    }

    #endregion

    #region Framework events

    protected void AssigneeChangedHandler()
    {
      var args = new global::Sungero.RecordManagement.Shared.ActionItemExecutionTaskCoAssigneesAssigneeChangedEventArgs(this.State.Properties.Assignee, this.Assignee, this);
     ((global::Sungero.RecordManagement.ActionItemExecutionTaskCoAssigneesSharedHandlers)this.SharedHandlers).CoAssigneesAssigneeChanged(args);
    }

    protected void AssignmentCreatedChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.BooleanPropertyChangedEventArgs(this.State.Properties.AssignmentCreated, this.AssignmentCreated, this);
     ((global::Sungero.RecordManagement.ActionItemExecutionTaskCoAssigneesSharedHandlers)this.SharedHandlers).CoAssigneesAssignmentCreatedChanged(args);
    }



  protected global::Sungero.Company.IEmployee AssigneeValueInputHandler(global::Sungero.Company.IEmployee value)
  {
    var args = new global::Sungero.RecordManagement.Client.ActionItemExecutionTaskCoAssigneesAssigneeValueInputEventArgs(this.Assignee, value, this, this.Info.Properties.Assignee);
    ((global::Sungero.RecordManagement.ActionItemExecutionTaskCoAssigneesClientHandlers)this.Handlers).CoAssigneesAssigneeValueInput(args);
    return args.NewValue;
  }

  protected global::System.Boolean? AssignmentCreatedValueInputHandler(global::System.Boolean? value)
  {
    var args = new global::Sungero.Presentation.BooleanValueInputEventArgs(this.AssignmentCreated, value, this, this.Info.Properties.AssignmentCreated);
    ((global::Sungero.RecordManagement.ActionItemExecutionTaskCoAssigneesClientHandlers)this.Handlers).CoAssigneesAssignmentCreatedValueInput(args);
    return args.NewValue;
  }



    #endregion

    #region Constructors



              protected virtual void InitAssigneeNavigationProperty()
              {
                this._Assignee = new global::Sungero.Domain.Client.NavigationProperty<global::Sungero.Company.IEmployee>("Assignee", this);
                this._Assignee.ValueChanged += (sender, e) => { this.AssigneeChangedHandler(); };
                this.AddProperty(this._Assignee as global::Sungero.Domain.Client.IProperty);
              }




    public ActionItemExecutionTaskCoAssignees()
    {
      this._ActionItemExecutionTask = new global::Sungero.Domain.Client.NavigationProperty<global::Sungero.RecordManagement.IActionItemExecutionTask>("ActionItemExecutionTask", this, true);

            this._AssignmentCreated = new global::Sungero.Domain.Client.SimpleProperty<global::System.Boolean?>("AssignmentCreated", this);
            this._AssignmentCreated.ValueChanged += (sender, e) => { this.AssignmentCreatedChangedHandler(); };
            this.AddProperty(this._AssignmentCreated);

            this.InitAssigneeNavigationProperty();








    }

    #endregion

  }
}
