
// ==================================================================
// AcquaintanceTaskPerformers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagement.Client
{
  public class AcquaintanceTaskPerformers :
    global::Sungero.Domain.Client.ChildEntityProxy, global::Sungero.RecordManagement.IAcquaintanceTaskPerformers
  {
    #region Fields and properties

    public static new readonly global::System.Guid ClassTypeGuid = global::System.Guid.Parse("7c55bb29-1afc-47cf-97ad-42a813feae35");

    public override global::System.Guid TypeGuid
    {
      get { return global::Sungero.RecordManagement.Client.AcquaintanceTaskPerformers.ClassTypeGuid; }
    }

    public override string TypeName
    {
      get { return "Sungero.RecordManagement.IAcquaintanceTaskPerformers, Sungero.Domain.Interfaces"; }
    }

    public new global::Sungero.RecordManagement.IAcquaintanceTaskPerformersState State
    {
      get
      {
        return (global::Sungero.RecordManagement.IAcquaintanceTaskPerformersState)base.State;
      }
    }

    protected override global::Sungero.Domain.Shared.IEntityState CreateState()
    {
      return new global::Sungero.RecordManagement.Shared.AcquaintanceTaskPerformersState(this);
    }

    public new global::Sungero.RecordManagement.IAcquaintanceTaskPerformersInfo Info
    {
      get
      {
        return (global::Sungero.RecordManagement.IAcquaintanceTaskPerformersInfo)base.Info;
      }
    }

    protected global::Sungero.Domain.Client.NavigationProperty<global::Sungero.RecordManagement.IAcquaintanceTask> _AcquaintanceTask;

    public global::Sungero.RecordManagement.IAcquaintanceTask AcquaintanceTask
    {
      get { return this._AcquaintanceTask.Value; }
      set { this._AcquaintanceTask.Value = value; }
    }

    public override global::Sungero.Domain.Shared.IEntity RootEntity
    {
      get { return this.AcquaintanceTask; }
      set { this.AcquaintanceTask = (global::Sungero.RecordManagement.IAcquaintanceTask)value; }
    }




              protected global::Sungero.Domain.Client.INavigationProperty<global::Sungero.CoreEntities.IRecipient> _Performer;

              public virtual global::Sungero.CoreEntities.IRecipient Performer
              {
              get
              {
                return this._Performer.Value as global::Sungero.CoreEntities.IRecipient;
              }

              set
              {
                (this._Performer as global::Sungero.Domain.Client.IProperty).Value = value;
              }
            }










    #endregion

    #region Methods

    protected override object CreateHandlers() {
      return new global::Sungero.RecordManagement.AcquaintanceTaskPerformersClientHandlers(this);
    }
    protected override object CreateSharedHandlers() {
      return new global::Sungero.RecordManagement.AcquaintanceTaskPerformersSharedHandlers(this);
    }

    #endregion

    #region Framework events

    protected void PerformerChangedHandler()
    {
      var args = new global::Sungero.RecordManagement.Shared.AcquaintanceTaskPerformersPerformerChangedEventArgs(this.State.Properties.Performer, this.Performer, this);
     ((global::Sungero.RecordManagement.AcquaintanceTaskPerformersSharedHandlers)this.SharedHandlers).PerformersPerformerChanged(args);
    }



  protected global::Sungero.CoreEntities.IRecipient PerformerValueInputHandler(global::Sungero.CoreEntities.IRecipient value)
  {
    var args = new global::Sungero.RecordManagement.Client.AcquaintanceTaskPerformersPerformerValueInputEventArgs(this.Performer, value, this, this.Info.Properties.Performer);
    ((global::Sungero.RecordManagement.AcquaintanceTaskPerformersClientHandlers)this.Handlers).PerformersPerformerValueInput(args);
    return args.NewValue;
  }



    #endregion

    #region Constructors



              protected virtual void InitPerformerNavigationProperty()
              {
                this._Performer = new global::Sungero.Domain.Client.NavigationProperty<global::Sungero.CoreEntities.IRecipient>("Performer", this);
                this._Performer.ValueChanged += (sender, e) => { this.PerformerChangedHandler(); };
                this.AddProperty(this._Performer as global::Sungero.Domain.Client.IProperty);
              }




    public AcquaintanceTaskPerformers()
    {
      this._AcquaintanceTask = new global::Sungero.Domain.Client.NavigationProperty<global::Sungero.RecordManagement.IAcquaintanceTask>("AcquaintanceTask", this, true);


            this.InitPerformerNavigationProperty();








    }

    #endregion

  }
}
