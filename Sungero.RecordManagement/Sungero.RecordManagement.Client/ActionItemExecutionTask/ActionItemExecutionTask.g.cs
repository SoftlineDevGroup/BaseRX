
// ==================================================================
// ActionItemExecutionTask.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagement.Client
{
  public class ActionItemExecutionTask :
    global::Sungero.Workflow.Client.Task, global::Sungero.RecordManagement.IActionItemExecutionTask
  {
    #region Fields and properties

    public static new readonly global::System.Guid ClassTypeGuid = global::System.Guid.Parse("c290b098-12c7-487d-bb38-73e2c98f9789");

    public override global::System.Guid TypeGuid
    {
      get { return global::Sungero.RecordManagement.Client.ActionItemExecutionTask.ClassTypeGuid; }
    }

    public override string TypeName
    {
      get { return "Sungero.RecordManagement.IActionItemExecutionTask, Sungero.Domain.Interfaces"; }
    }

      public override string DisplayValue
      {
        get { return this.Subject; }
        set { this.Subject = value; }
      }

      public override string DisplayPropertyName
      {
        get { return "Subject"; }
      }


    public new global::Sungero.RecordManagement.IActionItemExecutionTaskState State
    {
      get
      {
        return (global::Sungero.RecordManagement.IActionItemExecutionTaskState)base.State;
      }
    }

    protected override global::Sungero.Domain.Shared.IEntityState CreateState()
    {
      return new global::Sungero.RecordManagement.Shared.ActionItemExecutionTaskState(this);
    }

    public new global::Sungero.RecordManagement.IActionItemExecutionTaskInfo Info
    {
      get
      {
        return (global::Sungero.RecordManagement.IActionItemExecutionTaskInfo)base.Info;
      }
    }

    public new global::Sungero.RecordManagement.IActionItemExecutionTaskAccessRights AccessRights
    {
      get
      {
        return (global::Sungero.RecordManagement.IActionItemExecutionTaskAccessRights)base.AccessRights;
      }
    }

    protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
    {
      return new global::Sungero.RecordManagement.Client.ActionItemExecutionTaskAccessRights(this);
    }

        protected global::Sungero.Domain.Client.SimpleProperty<global::System.DateTime?> _Deadline;

        public virtual global::System.DateTime? Deadline
        {
          get { return this._Deadline.Value; }
          set { this._Deadline.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.Boolean?> _IsCompoundActionItem;

        public virtual global::System.Boolean? IsCompoundActionItem
        {
          get { return this._IsCompoundActionItem.Value; }
          set { this._IsCompoundActionItem.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.String> _ActionItem;

        public virtual global::System.String ActionItem
        {
          get { return this._ActionItem.Value; }
          set { this._ActionItem.Value = value; }
        }
        protected global::Sungero.Domain.Client.EnumSimpleProperty<global::Sungero.Core.Enumeration?> _ExecutionState;

        public virtual global::Sungero.Core.Enumeration? ExecutionState
        {
          get { return this._ExecutionState.Value; }
          set { this._ExecutionState.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.DateTime?> _ActualDate;

        public virtual global::System.DateTime? ActualDate
        {
          get { return this._ActualDate.Value; }
          set { this._ActualDate.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.Boolean?> _IsUnderControl;

        public virtual global::System.Boolean? IsUnderControl
        {
          get { return this._IsUnderControl.Value; }
          set { this._IsUnderControl.Value = value; }
        }
        protected global::Sungero.Domain.Client.EnumSimpleProperty<global::Sungero.Core.Enumeration?> _ActionItemType;

        public virtual global::Sungero.Core.Enumeration? ActionItemType
        {
          get { return this._ActionItemType.Value; }
          set { this._ActionItemType.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.Boolean?> _IsDraftResolution;

        public virtual global::System.Boolean? IsDraftResolution
        {
          get { return this._IsDraftResolution.Value; }
          set { this._IsDraftResolution.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.DateTime?> _FinalDeadline;

        public virtual global::System.DateTime? FinalDeadline
        {
          get { return this._FinalDeadline.Value; }
          set { this._FinalDeadline.Value = value; }
        }


        private static global::Sungero.Domain.Shared.EnumerationItems _ExecutionStateItems = new global::Sungero.Domain.Shared.EnumerationItems(
          null,
          typeof(global::Sungero.RecordManagement.ActionItemExecutionTask.ExecutionState),
          typeof(global::Sungero.RecordManagement.Client.ActionItemExecutionTask),
          "ExecutionState");

        public static global::Sungero.Domain.Shared.EnumerationItems ExecutionStateItems
        {
          get { return global::Sungero.RecordManagement.Client.ActionItemExecutionTask._ExecutionStateItems; }
        }

        public virtual global::Sungero.Domain.Shared.EnumerationItems ExecutionStateAllowedItems
        {
          get { return global::Sungero.RecordManagement.Client.ActionItemExecutionTask.ExecutionStateItems; }
        }

        private static global::Sungero.Domain.Shared.EnumerationItems _ActionItemTypeItems = new global::Sungero.Domain.Shared.EnumerationItems(
          null,
          typeof(global::Sungero.RecordManagement.ActionItemExecutionTask.ActionItemType),
          typeof(global::Sungero.RecordManagement.Client.ActionItemExecutionTask),
          "ActionItemType");

        public static global::Sungero.Domain.Shared.EnumerationItems ActionItemTypeItems
        {
          get { return global::Sungero.RecordManagement.Client.ActionItemExecutionTask._ActionItemTypeItems; }
        }

        public virtual global::Sungero.Domain.Shared.EnumerationItems ActionItemTypeAllowedItems
        {
          get { return global::Sungero.RecordManagement.Client.ActionItemExecutionTask.ActionItemTypeItems; }
        }




              protected global::Sungero.Domain.Client.INavigationProperty<global::Sungero.Company.IEmployee> _Supervisor;

              public virtual global::Sungero.Company.IEmployee Supervisor
              {
              get
              {
                return this._Supervisor.Value as global::Sungero.Company.IEmployee;
              }

              set
              {
                (this._Supervisor as global::Sungero.Domain.Client.IProperty).Value = value;
              }
            }



              protected global::Sungero.Domain.Client.INavigationProperty<global::Sungero.Company.IEmployee> _AssignedBy;

              public virtual global::Sungero.Company.IEmployee AssignedBy
              {
              get
              {
                return this._AssignedBy.Value as global::Sungero.Company.IEmployee;
              }

              set
              {
                (this._AssignedBy as global::Sungero.Domain.Client.IProperty).Value = value;
              }
            }



              protected global::Sungero.Domain.Client.INavigationProperty<global::Sungero.Company.IEmployee> _Assignee;

              public virtual global::Sungero.Company.IEmployee Assignee
              {
              get
              {
                return this._Assignee.Value as global::Sungero.Company.IEmployee;
              }

              set
              {
                (this._Assignee as global::Sungero.Domain.Client.IProperty).Value = value;
              }
            }







          protected global::Sungero.Domain.Client.IListProperty<global::Sungero.RecordManagement.IActionItemExecutionTaskCoAssignees> _CoAssignees;

          virtual public global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.RecordManagement.IActionItemExecutionTaskCoAssignees> CoAssignees
          {
            get { return this._CoAssignees.Value; }
          }


          protected global::Sungero.Domain.Client.IListProperty<global::Sungero.RecordManagement.IActionItemExecutionTaskActionItemParts> _ActionItemParts;

          virtual public global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.RecordManagement.IActionItemExecutionTaskActionItemParts> ActionItemParts
          {
            get { return this._ActionItemParts.Value; }
          }


          protected global::Sungero.Domain.Client.IListProperty<global::Sungero.RecordManagement.IActionItemExecutionTaskActionItemObservers> _ActionItemObservers;

          virtual public global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.RecordManagement.IActionItemExecutionTaskActionItemObservers> ActionItemObservers
          {
            get { return this._ActionItemObservers.Value; }
          }




      protected global::Sungero.Domain.Client.TextProperty _AbortingReason;

      [global::Sungero.Domain.Shared.DoNotSavePreviousValue]
      public virtual System.String AbortingReason
      {
        get { return this._AbortingReason.Value; }
        set { this._AbortingReason.Value = value; }
      }
      protected global::Sungero.Domain.Client.TextProperty _Report;

      [global::Sungero.Domain.Shared.DoNotSavePreviousValue]
      public virtual System.String Report
      {
        get { return this._Report.Value; }
        set { this._Report.Value = value; }
      }
      protected global::Sungero.Domain.Client.TextProperty _ReportNote;

      [global::Sungero.Domain.Shared.DoNotSavePreviousValue]
      public virtual System.String ReportNote
      {
        get { return this._ReportNote.Value; }
        set { this._ReportNote.Value = value; }
      }



    private object _CoAssigneesActionsHandlers;

    public object CoAssigneesActionsHandlers
    {
      get
      {
        if (this._CoAssigneesActionsHandlers == null)
          this._CoAssigneesActionsHandlers = this.CreateCoAssigneesActionsHandlers();
        return this._CoAssigneesActionsHandlers;
      }
    }

    private object _CoAssigneesCollectionActionsHandlers;

    public object CoAssigneesCollectionActionsHandlers
    {
      get
      {
        if (this._CoAssigneesCollectionActionsHandlers == null)
          this._CoAssigneesCollectionActionsHandlers = this.CreateCoAssigneesCollectionActionsHandlers();
        return this._CoAssigneesCollectionActionsHandlers;
      }
    }
    private object _ActionItemPartsActionsHandlers;

    public object ActionItemPartsActionsHandlers
    {
      get
      {
        if (this._ActionItemPartsActionsHandlers == null)
          this._ActionItemPartsActionsHandlers = this.CreateActionItemPartsActionsHandlers();
        return this._ActionItemPartsActionsHandlers;
      }
    }

    private object _ActionItemPartsCollectionActionsHandlers;

    public object ActionItemPartsCollectionActionsHandlers
    {
      get
      {
        if (this._ActionItemPartsCollectionActionsHandlers == null)
          this._ActionItemPartsCollectionActionsHandlers = this.CreateActionItemPartsCollectionActionsHandlers();
        return this._ActionItemPartsCollectionActionsHandlers;
      }
    }
    private object _ActionItemObserversActionsHandlers;

    public object ActionItemObserversActionsHandlers
    {
      get
      {
        if (this._ActionItemObserversActionsHandlers == null)
          this._ActionItemObserversActionsHandlers = this.CreateActionItemObserversActionsHandlers();
        return this._ActionItemObserversActionsHandlers;
      }
    }

    private object _ActionItemObserversCollectionActionsHandlers;

    public object ActionItemObserversCollectionActionsHandlers
    {
      get
      {
        if (this._ActionItemObserversCollectionActionsHandlers == null)
          this._ActionItemObserversCollectionActionsHandlers = this.CreateActionItemObserversCollectionActionsHandlers();
        return this._ActionItemObserversCollectionActionsHandlers;
      }
    }

    #endregion

    #region Methods

    protected override object CreateActionsHandlers()
    {
      return new global::Sungero.RecordManagement.Client.ActionItemExecutionTaskActions(this);
    }

    protected override object CreateCollectionActionsHandlers()
    {
      return new global::Sungero.RecordManagement.Client.ActionItemExecutionTaskCollectionActions();
    }

    protected override object CreateAnyChildEntityActionsHandlers()
    {
      return new global::Sungero.RecordManagement.Client.ActionItemExecutionTaskAnyChildEntityActions();
    }

    protected override object CreateAnyChildEntityCollectionActionsHandlers()
    {
      return new global::Sungero.RecordManagement.Client.ActionItemExecutionTaskAnyChildEntityCollectionActions();
    }

    protected object CreateCoAssigneesActionsHandlers()
    {
      return null;
    }

    protected object CreateCoAssigneesCollectionActionsHandlers()
    {
      return null;
    }
    protected object CreateActionItemPartsActionsHandlers()
    {
      return null;
    }

    protected object CreateActionItemPartsCollectionActionsHandlers()
    {
      return null;
    }
    protected object CreateActionItemObserversActionsHandlers()
    {
      return null;
    }

    protected object CreateActionItemObserversCollectionActionsHandlers()
    {
      return null;
    }


    protected override global::Sungero.Domain.Client.EntityFunctions CreateClientFunctions()
    {
      return new global::Sungero.RecordManagement.Client.ActionItemExecutionTaskFunctions(this);
    }

    protected override global::Sungero.Domain.Shared.EntityFunctions CreateSharedFunctions()
    {
      return new global::Sungero.RecordManagement.Shared.ActionItemExecutionTaskFunctions(this);
    }
    protected override object CreateHandlers() {
      return new global::Sungero.RecordManagement.ActionItemExecutionTaskClientHandlers(this);
    }
    protected override object CreateSharedHandlers() {
      return new global::Sungero.RecordManagement.ActionItemExecutionTaskSharedHandlers(this);
    }

    #endregion

    #region Framework events

    protected void DeadlineChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.DateTimePropertyChangedEventArgs(this.State.Properties.Deadline, this.Deadline, this);
     ((global::Sungero.RecordManagement.ActionItemExecutionTaskSharedHandlers)this.SharedHandlers).DeadlineChanged(args);
    }

    protected void SupervisorChangedHandler()
    {
      var args = new global::Sungero.RecordManagement.Shared.ActionItemExecutionTaskSupervisorChangedEventArgs(this.State.Properties.Supervisor, this.Supervisor, this);
     ((global::Sungero.RecordManagement.ActionItemExecutionTaskSharedHandlers)this.SharedHandlers).SupervisorChanged(args);
    }

    protected void IsCompoundActionItemChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.BooleanPropertyChangedEventArgs(this.State.Properties.IsCompoundActionItem, this.IsCompoundActionItem, this);
     ((global::Sungero.RecordManagement.ActionItemExecutionTaskSharedHandlers)this.SharedHandlers).IsCompoundActionItemChanged(args);
    }

    protected void CoAssigneesChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.CollectionPropertyChangedEventArgs(this);
     ((global::Sungero.RecordManagement.ActionItemExecutionTaskSharedHandlers)this.SharedHandlers).CoAssigneesChanged(args);
    }

    protected void ActionItemPartsChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.CollectionPropertyChangedEventArgs(this);
     ((global::Sungero.RecordManagement.ActionItemExecutionTaskSharedHandlers)this.SharedHandlers).ActionItemPartsChanged(args);
    }

    protected void ActionItemChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.ActionItem, this.ActionItem, this);
     ((global::Sungero.RecordManagement.ActionItemExecutionTaskSharedHandlers)this.SharedHandlers).ActionItemChanged(args);
    }

    protected void AssignedByChangedHandler()
    {
      var args = new global::Sungero.RecordManagement.Shared.ActionItemExecutionTaskAssignedByChangedEventArgs(this.State.Properties.AssignedBy, this.AssignedBy, this);
     ((global::Sungero.RecordManagement.ActionItemExecutionTaskSharedHandlers)this.SharedHandlers).AssignedByChanged(args);
    }

    protected void AbortingReasonChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.TextPropertyChangedEventArgs(this.State.Properties.AbortingReason, this.AbortingReason, this);
     ((global::Sungero.RecordManagement.ActionItemExecutionTaskSharedHandlers)this.SharedHandlers).AbortingReasonChanged(args);
    }

    protected void AssigneeChangedHandler()
    {
      var args = new global::Sungero.RecordManagement.Shared.ActionItemExecutionTaskAssigneeChangedEventArgs(this.State.Properties.Assignee, this.Assignee, this);
     ((global::Sungero.RecordManagement.ActionItemExecutionTaskSharedHandlers)this.SharedHandlers).AssigneeChanged(args);
    }

    protected void ExecutionStateChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.EnumerationPropertyChangedEventArgs(this.State.Properties.ExecutionState, this.ExecutionState, this);
     ((global::Sungero.RecordManagement.ActionItemExecutionTaskSharedHandlers)this.SharedHandlers).ExecutionStateChanged(args);
    }

    protected void ReportChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.TextPropertyChangedEventArgs(this.State.Properties.Report, this.Report, this);
     ((global::Sungero.RecordManagement.ActionItemExecutionTaskSharedHandlers)this.SharedHandlers).ReportChanged(args);
    }

    protected void ActualDateChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.DateTimePropertyChangedEventArgs(this.State.Properties.ActualDate, this.ActualDate, this);
     ((global::Sungero.RecordManagement.ActionItemExecutionTaskSharedHandlers)this.SharedHandlers).ActualDateChanged(args);
    }

    protected void ReportNoteChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.TextPropertyChangedEventArgs(this.State.Properties.ReportNote, this.ReportNote, this);
     ((global::Sungero.RecordManagement.ActionItemExecutionTaskSharedHandlers)this.SharedHandlers).ReportNoteChanged(args);
    }

    protected void IsUnderControlChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.BooleanPropertyChangedEventArgs(this.State.Properties.IsUnderControl, this.IsUnderControl, this);
     ((global::Sungero.RecordManagement.ActionItemExecutionTaskSharedHandlers)this.SharedHandlers).IsUnderControlChanged(args);
    }

    protected void ActionItemTypeChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.EnumerationPropertyChangedEventArgs(this.State.Properties.ActionItemType, this.ActionItemType, this);
     ((global::Sungero.RecordManagement.ActionItemExecutionTaskSharedHandlers)this.SharedHandlers).ActionItemTypeChanged(args);
    }

    protected void ActionItemObserversChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.CollectionPropertyChangedEventArgs(this);
     ((global::Sungero.RecordManagement.ActionItemExecutionTaskSharedHandlers)this.SharedHandlers).ActionItemObserversChanged(args);
    }

    protected void IsDraftResolutionChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.BooleanPropertyChangedEventArgs(this.State.Properties.IsDraftResolution, this.IsDraftResolution, this);
     ((global::Sungero.RecordManagement.ActionItemExecutionTaskSharedHandlers)this.SharedHandlers).IsDraftResolutionChanged(args);
    }

    protected void FinalDeadlineChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.DateTimePropertyChangedEventArgs(this.State.Properties.FinalDeadline, this.FinalDeadline, this);
     ((global::Sungero.RecordManagement.ActionItemExecutionTaskSharedHandlers)this.SharedHandlers).FinalDeadlineChanged(args);
    }




    protected virtual global::Sungero.RecordManagement.ActionItemExecutionTaskCoAssigneesSharedCollectionHandlers CreateCoAssigneesAddedHandler(global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.RecordManagement.ActionItemExecutionTaskCoAssigneesSharedCollectionHandlers(this, e.Value, null, e.Source);
    }

    protected virtual global::Sungero.RecordManagement.ActionItemExecutionTaskCoAssigneesSharedCollectionHandlers CreateCoAssigneesDeletedHandler(global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.RecordManagement.ActionItemExecutionTaskCoAssigneesSharedCollectionHandlers(this, null, e.Value, null);
    }

    protected virtual void CoAssigneesAddedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {  
      var collectionHandlers = this.CreateCoAssigneesAddedHandler(e);
      if (collectionHandlers != null)
      {
        var args = new global::Sungero.Domain.Shared.CollectionPropertyAddedEventArgs(this);
        collectionHandlers.CoAssigneesAdded(args);
      }
    }

    protected virtual void CoAssigneesDeletedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {  
      var collectionHandlers = this.CreateCoAssigneesDeletedHandler(e);
      if (collectionHandlers != null)
      {
        var args = new global::Sungero.Domain.Shared.CollectionPropertyDeletedEventArgs(this);
        collectionHandlers.CoAssigneesDeleted(args);
      }
    }


    protected virtual global::Sungero.RecordManagement.ActionItemExecutionTaskActionItemPartsSharedCollectionHandlers CreateActionItemPartsAddedHandler(global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.RecordManagement.ActionItemExecutionTaskActionItemPartsSharedCollectionHandlers(this, e.Value, null, e.Source);
    }

    protected virtual global::Sungero.RecordManagement.ActionItemExecutionTaskActionItemPartsSharedCollectionHandlers CreateActionItemPartsDeletedHandler(global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.RecordManagement.ActionItemExecutionTaskActionItemPartsSharedCollectionHandlers(this, null, e.Value, null);
    }

    protected virtual void ActionItemPartsAddedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {  
      var collectionHandlers = this.CreateActionItemPartsAddedHandler(e);
      if (collectionHandlers != null)
      {
        var args = new global::Sungero.Domain.Shared.CollectionPropertyAddedEventArgs(this);
        collectionHandlers.ActionItemPartsAdded(args);
      }
    }

    protected virtual void ActionItemPartsDeletedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {  
      var collectionHandlers = this.CreateActionItemPartsDeletedHandler(e);
      if (collectionHandlers != null)
      {
        var args = new global::Sungero.Domain.Shared.CollectionPropertyDeletedEventArgs(this);
        collectionHandlers.ActionItemPartsDeleted(args);
      }
    }


    protected virtual global::Sungero.RecordManagement.ActionItemExecutionTaskActionItemObserversSharedCollectionHandlers CreateActionItemObserversAddedHandler(global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.RecordManagement.ActionItemExecutionTaskActionItemObserversSharedCollectionHandlers(this, e.Value, null, e.Source);
    }

    protected virtual global::Sungero.RecordManagement.ActionItemExecutionTaskActionItemObserversSharedCollectionHandlers CreateActionItemObserversDeletedHandler(global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.RecordManagement.ActionItemExecutionTaskActionItemObserversSharedCollectionHandlers(this, null, e.Value, null);
    }

    protected virtual void ActionItemObserversAddedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {  
      var collectionHandlers = this.CreateActionItemObserversAddedHandler(e);
      if (collectionHandlers != null)
      {
        var args = new global::Sungero.Domain.Shared.CollectionPropertyAddedEventArgs(this);
        collectionHandlers.ActionItemObserversAdded(args);
      }
    }

    protected virtual void ActionItemObserversDeletedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {  
      var collectionHandlers = this.CreateActionItemObserversDeletedHandler(e);
      if (collectionHandlers != null)
      {
        var args = new global::Sungero.Domain.Shared.CollectionPropertyDeletedEventArgs(this);
        collectionHandlers.ActionItemObserversDeleted(args);
      }
    }


  protected global::System.DateTime? DeadlineValueInputHandler(global::System.DateTime? value)
  {
    var args = new global::Sungero.Presentation.DateTimeValueInputEventArgs(this.Deadline, value, this, this.Info.Properties.Deadline);
    ((global::Sungero.RecordManagement.ActionItemExecutionTaskClientHandlers)this.Handlers).DeadlineValueInput(args);
    return args.NewValue;
  }

  protected global::Sungero.Company.IEmployee SupervisorValueInputHandler(global::Sungero.Company.IEmployee value)
  {
    var args = new global::Sungero.RecordManagement.Client.ActionItemExecutionTaskSupervisorValueInputEventArgs(this.Supervisor, value, this, this.Info.Properties.Supervisor);
    ((global::Sungero.RecordManagement.ActionItemExecutionTaskClientHandlers)this.Handlers).SupervisorValueInput(args);
    return args.NewValue;
  }

  protected global::System.Boolean? IsCompoundActionItemValueInputHandler(global::System.Boolean? value)
  {
    var args = new global::Sungero.Presentation.BooleanValueInputEventArgs(this.IsCompoundActionItem, value, this, this.Info.Properties.IsCompoundActionItem);
    ((global::Sungero.RecordManagement.ActionItemExecutionTaskClientHandlers)this.Handlers).IsCompoundActionItemValueInput(args);
    return args.NewValue;
  }



  protected global::System.String ActionItemValueInputHandler(global::System.String value)
  {
    var args = new global::Sungero.Presentation.StringValueInputEventArgs(this.ActionItem, value, this, this.Info.Properties.ActionItem);
    ((global::Sungero.RecordManagement.ActionItemExecutionTaskClientHandlers)this.Handlers).ActionItemValueInput(args);
    return args.NewValue;
  }

  protected global::Sungero.Company.IEmployee AssignedByValueInputHandler(global::Sungero.Company.IEmployee value)
  {
    var args = new global::Sungero.RecordManagement.Client.ActionItemExecutionTaskAssignedByValueInputEventArgs(this.AssignedBy, value, this, this.Info.Properties.AssignedBy);
    ((global::Sungero.RecordManagement.ActionItemExecutionTaskClientHandlers)this.Handlers).AssignedByValueInput(args);
    return args.NewValue;
  }

  protected global::System.String AbortingReasonValueInputHandler(global::System.String value)
  {
    var args = new global::Sungero.Presentation.TextValueInputEventArgs(this.AbortingReason, value, this, this.Info.Properties.AbortingReason);
    ((global::Sungero.RecordManagement.ActionItemExecutionTaskClientHandlers)this.Handlers).AbortingReasonValueInput(args);
    return args.NewValue;
  }

  protected global::Sungero.Company.IEmployee AssigneeValueInputHandler(global::Sungero.Company.IEmployee value)
  {
    var args = new global::Sungero.RecordManagement.Client.ActionItemExecutionTaskAssigneeValueInputEventArgs(this.Assignee, value, this, this.Info.Properties.Assignee);
    ((global::Sungero.RecordManagement.ActionItemExecutionTaskClientHandlers)this.Handlers).AssigneeValueInput(args);
    return args.NewValue;
  }

  protected global::Sungero.Core.Enumeration? ExecutionStateValueInputHandler(global::Sungero.Core.Enumeration? value)
  {
    var args = new global::Sungero.Presentation.EnumerationValueInputEventArgs(this.ExecutionState, value, this, this.Info.Properties.ExecutionState);
    ((global::Sungero.RecordManagement.ActionItemExecutionTaskClientHandlers)this.Handlers).ExecutionStateValueInput(args);
    return args.NewValue;
  }

  protected global::System.String ReportValueInputHandler(global::System.String value)
  {
    var args = new global::Sungero.Presentation.TextValueInputEventArgs(this.Report, value, this, this.Info.Properties.Report);
    ((global::Sungero.RecordManagement.ActionItemExecutionTaskClientHandlers)this.Handlers).ReportValueInput(args);
    return args.NewValue;
  }

  protected global::System.DateTime? ActualDateValueInputHandler(global::System.DateTime? value)
  {
    var args = new global::Sungero.Presentation.DateTimeValueInputEventArgs(this.ActualDate, value, this, this.Info.Properties.ActualDate);
    ((global::Sungero.RecordManagement.ActionItemExecutionTaskClientHandlers)this.Handlers).ActualDateValueInput(args);
    return args.NewValue;
  }

  protected global::System.String ReportNoteValueInputHandler(global::System.String value)
  {
    var args = new global::Sungero.Presentation.TextValueInputEventArgs(this.ReportNote, value, this, this.Info.Properties.ReportNote);
    ((global::Sungero.RecordManagement.ActionItemExecutionTaskClientHandlers)this.Handlers).ReportNoteValueInput(args);
    return args.NewValue;
  }

  protected global::System.Boolean? IsUnderControlValueInputHandler(global::System.Boolean? value)
  {
    var args = new global::Sungero.Presentation.BooleanValueInputEventArgs(this.IsUnderControl, value, this, this.Info.Properties.IsUnderControl);
    ((global::Sungero.RecordManagement.ActionItemExecutionTaskClientHandlers)this.Handlers).IsUnderControlValueInput(args);
    return args.NewValue;
  }

  protected global::Sungero.Core.Enumeration? ActionItemTypeValueInputHandler(global::Sungero.Core.Enumeration? value)
  {
    var args = new global::Sungero.Presentation.EnumerationValueInputEventArgs(this.ActionItemType, value, this, this.Info.Properties.ActionItemType);
    ((global::Sungero.RecordManagement.ActionItemExecutionTaskClientHandlers)this.Handlers).ActionItemTypeValueInput(args);
    return args.NewValue;
  }


  protected global::System.Boolean? IsDraftResolutionValueInputHandler(global::System.Boolean? value)
  {
    var args = new global::Sungero.Presentation.BooleanValueInputEventArgs(this.IsDraftResolution, value, this, this.Info.Properties.IsDraftResolution);
    ((global::Sungero.RecordManagement.ActionItemExecutionTaskClientHandlers)this.Handlers).IsDraftResolutionValueInput(args);
    return args.NewValue;
  }

  protected global::System.DateTime? FinalDeadlineValueInputHandler(global::System.DateTime? value)
  {
    var args = new global::Sungero.Presentation.DateTimeValueInputEventArgs(this.FinalDeadline, value, this, this.Info.Properties.FinalDeadline);
    ((global::Sungero.RecordManagement.ActionItemExecutionTaskClientHandlers)this.Handlers).FinalDeadlineValueInput(args);
    return args.NewValue;
  }


  protected global::System.Collections.Generic.IEnumerable<global::Sungero.Core.Enumeration> ExecutionStateFilteringHandler()
  {
    return ((global::Sungero.RecordManagement.ActionItemExecutionTaskClientHandlers)this.Handlers).ExecutionStateFiltering(this.ExecutionStateAllowedItems);
  }





  protected global::System.Collections.Generic.IEnumerable<global::Sungero.Core.Enumeration> ActionItemTypeFilteringHandler()
  {
    return ((global::Sungero.RecordManagement.ActionItemExecutionTaskClientHandlers)this.Handlers).ActionItemTypeFiltering(this.ActionItemTypeAllowedItems);
  }





    #endregion

    #region Constructors








              protected virtual void InitSupervisorNavigationProperty()
              {
                this._Supervisor = new global::Sungero.Domain.Client.NavigationProperty<global::Sungero.Company.IEmployee>("Supervisor", this);
                this._Supervisor.ValueChanged += (sender, e) => { this.SupervisorChangedHandler(); };
                this.AddProperty(this._Supervisor as global::Sungero.Domain.Client.IProperty);
              }




              protected virtual void InitAssignedByNavigationProperty()
              {
                this._AssignedBy = new global::Sungero.Domain.Client.NavigationProperty<global::Sungero.Company.IEmployee>("AssignedBy", this);
                this._AssignedBy.ValueChanged += (sender, e) => { this.AssignedByChangedHandler(); };
                this.AddProperty(this._AssignedBy as global::Sungero.Domain.Client.IProperty);
              }




              protected virtual void InitAssigneeNavigationProperty()
              {
                this._Assignee = new global::Sungero.Domain.Client.NavigationProperty<global::Sungero.Company.IEmployee>("Assignee", this);
                this._Assignee.ValueChanged += (sender, e) => { this.AssigneeChangedHandler(); };
                this.AddProperty(this._Assignee as global::Sungero.Domain.Client.IProperty);
              }



            protected override void InitObserversCollectionProperty()
            {
              this._Observers = new global::Sungero.Domain.Client.ListProperty<global::Sungero.RecordManagement.IActionItemExecutionTaskObservers>("Observers", this);
              this._Observers.ValueChanged += (sender, e) => { this.ObserversChangedHandler(); };
              this.AddProperty((global::Sungero.Domain.Client.IProperty)this._Observers);
              this.SetObserversEventHandlers();
            }

            protected virtual void InitCoAssigneesCollectionProperty()
            {
              this._CoAssignees = new global::Sungero.Domain.Client.ListProperty<global::Sungero.RecordManagement.IActionItemExecutionTaskCoAssignees>("CoAssignees", this);
              this._CoAssignees.ValueChanged += (sender, e) => { this.CoAssigneesChangedHandler(); };
              this.AddProperty((global::Sungero.Domain.Client.IProperty)this._CoAssignees);
              this.SetCoAssigneesEventHandlers();
            }

            protected void SetCoAssigneesEventHandlers()
            {
              this._CoAssignees.ChildEntityAdded += this.CoAssigneesAddedHandler;
              this._CoAssignees.ChildEntityDeleted += this.CoAssigneesDeletedHandler;
            }

            protected virtual void InitActionItemPartsCollectionProperty()
            {
              this._ActionItemParts = new global::Sungero.Domain.Client.ListProperty<global::Sungero.RecordManagement.IActionItemExecutionTaskActionItemParts>("ActionItemParts", this);
              this._ActionItemParts.ValueChanged += (sender, e) => { this.ActionItemPartsChangedHandler(); };
              this.AddProperty((global::Sungero.Domain.Client.IProperty)this._ActionItemParts);
              this.SetActionItemPartsEventHandlers();
            }

            protected void SetActionItemPartsEventHandlers()
            {
              this._ActionItemParts.ChildEntityAdded += this.ActionItemPartsAddedHandler;
              this._ActionItemParts.ChildEntityDeleted += this.ActionItemPartsDeletedHandler;
            }

            protected virtual void InitActionItemObserversCollectionProperty()
            {
              this._ActionItemObservers = new global::Sungero.Domain.Client.ListProperty<global::Sungero.RecordManagement.IActionItemExecutionTaskActionItemObservers>("ActionItemObservers", this);
              this._ActionItemObservers.ValueChanged += (sender, e) => { this.ActionItemObserversChangedHandler(); };
              this.AddProperty((global::Sungero.Domain.Client.IProperty)this._ActionItemObservers);
              this.SetActionItemObserversEventHandlers();
            }

            protected void SetActionItemObserversEventHandlers()
            {
              this._ActionItemObservers.ChildEntityAdded += this.ActionItemObserversAddedHandler;
              this._ActionItemObservers.ChildEntityDeleted += this.ActionItemObserversDeletedHandler;
            }


    public ActionItemExecutionTask()
    {
            this._Deadline = new global::Sungero.Domain.Client.SimpleProperty<global::System.DateTime?>("Deadline", this);
            this._Deadline.ValueChanged += (sender, e) => { this.DeadlineChangedHandler(); };
            this.AddProperty(this._Deadline);

            this._IsCompoundActionItem = new global::Sungero.Domain.Client.SimpleProperty<global::System.Boolean?>("IsCompoundActionItem", this);
            this._IsCompoundActionItem.ValueChanged += (sender, e) => { this.IsCompoundActionItemChangedHandler(); };
            this.AddProperty(this._IsCompoundActionItem);

            this._ActionItem = new global::Sungero.Domain.Client.SimpleProperty<global::System.String>("ActionItem", this);
            this._ActionItem.ValueChanged += (sender, e) => { this.ActionItemChangedHandler(); };
            this.AddProperty(this._ActionItem);

            this._ExecutionState = new global::Sungero.Domain.Client.EnumSimpleProperty<global::Sungero.Core.Enumeration?>("ExecutionState", this);
            this._ExecutionState.ValueChanged += (sender, e) => { this.ExecutionStateChangedHandler(); };
            this.AddProperty(this._ExecutionState);

            this._ActualDate = new global::Sungero.Domain.Client.SimpleProperty<global::System.DateTime?>("ActualDate", this);
            this._ActualDate.ValueChanged += (sender, e) => { this.ActualDateChangedHandler(); };
            this.AddProperty(this._ActualDate);

            this._IsUnderControl = new global::Sungero.Domain.Client.SimpleProperty<global::System.Boolean?>("IsUnderControl", this);
            this._IsUnderControl.ValueChanged += (sender, e) => { this.IsUnderControlChangedHandler(); };
            this.AddProperty(this._IsUnderControl);

            this._ActionItemType = new global::Sungero.Domain.Client.EnumSimpleProperty<global::Sungero.Core.Enumeration?>("ActionItemType", this);
            this._ActionItemType.ValueChanged += (sender, e) => { this.ActionItemTypeChangedHandler(); };
            this.AddProperty(this._ActionItemType);

            this._IsDraftResolution = new global::Sungero.Domain.Client.SimpleProperty<global::System.Boolean?>("IsDraftResolution", this);
            this._IsDraftResolution.ValueChanged += (sender, e) => { this.IsDraftResolutionChangedHandler(); };
            this.AddProperty(this._IsDraftResolution);

            this._FinalDeadline = new global::Sungero.Domain.Client.SimpleProperty<global::System.DateTime?>("FinalDeadline", this);
            this._FinalDeadline.ValueChanged += (sender, e) => { this.FinalDeadlineChangedHandler(); };
            this.AddProperty(this._FinalDeadline);

            this.InitSupervisorNavigationProperty();

            this.InitAssignedByNavigationProperty();

            this.InitAssigneeNavigationProperty();


            this.InitCoAssigneesCollectionProperty();

            this.InitActionItemPartsCollectionProperty();

            this.InitActionItemObserversCollectionProperty();


            this._AbortingReason = new global::Sungero.Domain.Client.TextProperty("AbortingReason", this);
            this._AbortingReason.ValueChanged += (sender, e) => { this.AbortingReasonChangedHandler(); };
            this.AddProperty(this._AbortingReason);

            this._Report = new global::Sungero.Domain.Client.TextProperty("Report", this);
            this._Report.ValueChanged += (sender, e) => { this.ReportChangedHandler(); };
            this.AddProperty(this._Report);

            this._ReportNote = new global::Sungero.Domain.Client.TextProperty("ReportNote", this);
            this._ReportNote.ValueChanged += (sender, e) => { this.ReportNoteChangedHandler(); };
            this.AddProperty(this._ReportNote);






      ((global::Sungero.Workflow.Interfaces.IWorkflowEntity)this).AttachmentCreated += this.AttachmentCreatedHandler;
      ((global::Sungero.Workflow.Interfaces.IWorkflowEntity)this).AttachmentAdded += this.AttachmentAddedHandler;
      ((global::Sungero.Workflow.Interfaces.IWorkflowEntity)this).AttachmentDeleted += this.AttachmentDeletedHandler;


    }

    #endregion

    #region Workflow attachments
    public virtual global::Sungero.RecordManagement.IActionItemExecutionTaskDocumentsGroupAttachments DocumentsGroup
    {
      get
      {
        return new global::Sungero.RecordManagement.Shared.ActionItemExecutionTaskDocumentsGroupAttachments(this);
      }
    }
    public virtual global::Sungero.RecordManagement.IActionItemExecutionTaskAddendaGroupAttachments AddendaGroup
    {
      get
      {
        return new global::Sungero.RecordManagement.Shared.ActionItemExecutionTaskAddendaGroupAttachments(this);
      }
    }
    public virtual global::Sungero.RecordManagement.IActionItemExecutionTaskOtherGroupAttachments OtherGroup
    {
      get
      {
        return new global::Sungero.RecordManagement.Shared.ActionItemExecutionTaskOtherGroupAttachments(this);
      }
    }
    public virtual global::Sungero.RecordManagement.IActionItemExecutionTaskResultGroupAttachments ResultGroup
    {
      get
      {
        return new global::Sungero.RecordManagement.Shared.ActionItemExecutionTaskResultGroupAttachments(this);
      }
    }


    private void AttachmentCreatedHandler(object sender, global::Sungero.Workflow.Interfaces.AttachmentCreatedEventArgs e)
    {
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "DocumentsGroup")
      {
        ((global::Sungero.RecordManagement.ActionItemExecutionTaskSharedHandlers)this.SharedHandlers).DocumentsGroupCreated(e);
        return;
      }
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "AddendaGroup")
      {
        ((global::Sungero.RecordManagement.ActionItemExecutionTaskSharedHandlers)this.SharedHandlers).AddendaGroupCreated(e);
        return;
      }
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "OtherGroup")
      {
        ((global::Sungero.RecordManagement.ActionItemExecutionTaskSharedHandlers)this.SharedHandlers).OtherGroupCreated(e);
        return;
      }
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "ResultGroup")
      {
        ((global::Sungero.RecordManagement.ActionItemExecutionTaskSharedHandlers)this.SharedHandlers).ResultGroupCreated(e);
        return;
      }

    }

    private void AttachmentAddedHandler(object sender, global::Sungero.Workflow.Interfaces.AttachmentAddedEventArgs e)
    {
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "DocumentsGroup")
      {
        ((global::Sungero.RecordManagement.ActionItemExecutionTaskSharedHandlers)this.SharedHandlers).DocumentsGroupAdded(e);
        return;
      }
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "AddendaGroup")
      {
        ((global::Sungero.RecordManagement.ActionItemExecutionTaskSharedHandlers)this.SharedHandlers).AddendaGroupAdded(e);
        return;
      }
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "OtherGroup")
      {
        ((global::Sungero.RecordManagement.ActionItemExecutionTaskSharedHandlers)this.SharedHandlers).OtherGroupAdded(e);
        return;
      }
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "ResultGroup")
      {
        ((global::Sungero.RecordManagement.ActionItemExecutionTaskSharedHandlers)this.SharedHandlers).ResultGroupAdded(e);
        return;
      }

    }

    private void AttachmentDeletedHandler(object sender, global::Sungero.Workflow.Interfaces.AttachmentDeletedEventArgs e)
    {
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "DocumentsGroup")
      {
        ((global::Sungero.RecordManagement.ActionItemExecutionTaskSharedHandlers)this.SharedHandlers).DocumentsGroupDeleted(e);
        return;
      }
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "AddendaGroup")
      {
        ((global::Sungero.RecordManagement.ActionItemExecutionTaskSharedHandlers)this.SharedHandlers).AddendaGroupDeleted(e);
        return;
      }
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "OtherGroup")
      {
        ((global::Sungero.RecordManagement.ActionItemExecutionTaskSharedHandlers)this.SharedHandlers).OtherGroupDeleted(e);
        return;
      }
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "ResultGroup")
      {
        ((global::Sungero.RecordManagement.ActionItemExecutionTaskSharedHandlers)this.SharedHandlers).ResultGroupDeleted(e);
        return;
      }

    }
    #endregion

  }
}

// ==================================================================
// ActionItemExecutionTaskPresenter.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagement.Client
{
  public class ActionItemExecutionTaskPresenter<T> :
    global::Sungero.Workflow.Client.TaskPresenter<T>
    where T : class, global::Sungero.RecordManagement.IActionItemExecutionTask
  {
    #region Fields and properties

          private global::System.Windows.Input.ICommand _RequireReportCommand;

          public global::System.Windows.Input.ICommand RequireReportCommand
          {
            get
            {
              if (this._RequireReportCommand == null)
                  this._RequireReportCommand = new global::Sungero.Domain.Client.SingleEntityCommand<T>("RequireReport", this, this.RequireReport, this.CanRequireReport) { IsEmptyParameterAllowed = true };
              return this._RequireReportCommand;
            }
          }
          private global::System.Windows.Input.ICommand _AddPerformerCommand;

          public global::System.Windows.Input.ICommand AddPerformerCommand
          {
            get
            {
              if (this._AddPerformerCommand == null)
                  this._AddPerformerCommand = new global::Sungero.Domain.Client.SingleEntityCommand<T>("AddPerformer", this, this.AddPerformer, this.CanAddPerformer) { IsEmptyParameterAllowed = true };
              return this._AddPerformerCommand;
            }
          }
          private global::System.Windows.Input.ICommand _ChangeCompoundModeCommand;

          public global::System.Windows.Input.ICommand ChangeCompoundModeCommand
          {
            get
            {
              if (this._ChangeCompoundModeCommand == null)
                  this._ChangeCompoundModeCommand = new global::Sungero.Domain.Client.SingleEntityCommand<T>("ChangeCompoundMode", this, this.ChangeCompoundMode, this.CanChangeCompoundMode) { IsEmptyParameterAllowed = true };
              return this._ChangeCompoundModeCommand;
            }
          }




    #endregion

    #region Methods

              private bool CanRequireReport(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfCanExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this);
                return ((Sungero.RecordManagement.Client.ActionItemExecutionTaskActions)(entity as Sungero.RecordManagement.Client.ActionItemExecutionTask).ActionsHandlers).CanRequireReport(args);
              }

              private void RequireReport(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this, entity.Info.Actions.RequireReport);
                ((Sungero.RecordManagement.Client.ActionItemExecutionTaskActions)(entity as Sungero.RecordManagement.Client.ActionItemExecutionTask).ActionsHandlers).RequireReport(args);
              }

              private bool CanAddPerformer(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfCanExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this);
                return ((Sungero.RecordManagement.Client.ActionItemExecutionTaskActions)(entity as Sungero.RecordManagement.Client.ActionItemExecutionTask).ActionsHandlers).CanAddPerformer(args);
              }

              private void AddPerformer(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this, entity.Info.Actions.AddPerformer);
                ((Sungero.RecordManagement.Client.ActionItemExecutionTaskActions)(entity as Sungero.RecordManagement.Client.ActionItemExecutionTask).ActionsHandlers).AddPerformer(args);
              }

              private bool CanChangeCompoundMode(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfCanExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this);
                return ((Sungero.RecordManagement.Client.ActionItemExecutionTaskActions)(entity as Sungero.RecordManagement.Client.ActionItemExecutionTask).ActionsHandlers).CanChangeCompoundMode(args);
              }

              private void ChangeCompoundMode(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this, entity.Info.Actions.ChangeCompoundMode);
                ((Sungero.RecordManagement.Client.ActionItemExecutionTaskActions)(entity as Sungero.RecordManagement.Client.ActionItemExecutionTask).ActionsHandlers).ChangeCompoundMode(args);
              }


    #endregion

    #region Framework events

    protected override void EntityPropertyChangedEventHandler(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
    {
      base.EntityPropertyChangedEventHandler(sender, e);
    }

    #endregion

              protected global::Sungero.Domain.Client.IEntityCollectionPresenter _SupervisorCollectionPresenter;
              public global::Sungero.Domain.Client.IEntityCollectionPresenter SupervisorCollectionPresenter
              {
          get { return this._SupervisorCollectionPresenter; }
        }
              protected global::Sungero.Domain.Client.IEntityCollectionPresenter _AssignedByCollectionPresenter;
              public global::Sungero.Domain.Client.IEntityCollectionPresenter AssignedByCollectionPresenter
              {
          get { return this._AssignedByCollectionPresenter; }
        }
              protected global::Sungero.Domain.Client.IEntityCollectionPresenter _AssigneeCollectionPresenter;
              public global::Sungero.Domain.Client.IEntityCollectionPresenter AssigneeCollectionPresenter
              {
          get { return this._AssigneeCollectionPresenter; }
        }


                          protected global::Sungero.Domain.Client.IEntityCollectionPresenter _CoAssigneesAssigneeCollectionPresenter;
                          public global::Sungero.Domain.Client.IEntityCollectionPresenter CoAssigneesAssigneeCollectionPresenter
                          {
                  get { return this._CoAssigneesAssigneeCollectionPresenter; }
                }

                          protected global::Sungero.Domain.Client.IEntityCollectionPresenter _ActionItemPartsAssigneeCollectionPresenter;
                          public global::Sungero.Domain.Client.IEntityCollectionPresenter ActionItemPartsAssigneeCollectionPresenter
                          {
                  get { return this._ActionItemPartsAssigneeCollectionPresenter; }
                }
                          protected global::Sungero.Domain.Client.IEntityCollectionPresenter _ActionItemPartsActionItemPartExecutionTaskCollectionPresenter;
                          public global::Sungero.Domain.Client.IEntityCollectionPresenter ActionItemPartsActionItemPartExecutionTaskCollectionPresenter
                          {
                  get { return this._ActionItemPartsActionItemPartExecutionTaskCollectionPresenter; }
                }

                          protected global::Sungero.Domain.Client.IEntityCollectionPresenter _ActionItemObserversObserverCollectionPresenter;
                          public global::Sungero.Domain.Client.IEntityCollectionPresenter ActionItemObserversObserverCollectionPresenter
                          {
                  get { return this._ActionItemObserversObserverCollectionPresenter; }
                }



    #region Constructors

    private void Init()
    {
              this._AuthorCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationProperty<global::Sungero.CoreEntities.IUser>(() => this.Entity, typeof(T), "Author");

              this._StartedByCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.CoreEntities.IUser>(() => this.Entity.Id, typeof(T), "StartedBy");

              this._ParentTaskCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Workflow.ITask>(() => this.Entity.Id, typeof(T), "ParentTask");

              this._ParentAssignmentCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Workflow.IAssignmentBase>(() => this.Entity.Id, typeof(T), "ParentAssignment");

              this._MainTaskCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Workflow.ITask>(() => this.Entity.Id, typeof(T), "MainTask");

                  this._SupervisorCollectionPresenter = this.CreateCollectionPresenterForNavigationProperty<global::Sungero.Company.IEmployee>(global::System.Guid.Parse("1ae03970-b01e-4565-842e-0d66a7502aa4"));
              this._SupervisorCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Company.IEmployee>(() => this.Entity.Id, typeof(T), "Supervisor");

                  this._AssignedByCollectionPresenter = this.CreateCollectionPresenterForNavigationProperty<global::Sungero.Company.IEmployee>(global::System.Guid.Parse("57ae3670-578d-455f-8dd6-65638b9e912a"));
              this._AssignedByCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationProperty<global::Sungero.Company.IEmployee>(() => this.Entity, typeof(T), "AssignedBy");

                  this._AssigneeCollectionPresenter = this.CreateCollectionPresenterForNavigationProperty<global::Sungero.Company.IEmployee>(global::System.Guid.Parse("30ff1aee-de08-4e86-9265-a28d8916a4f7"));
              this._AssigneeCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Company.IEmployee>(() => this.Entity.Id, typeof(T), "Assignee");


                        this._ObserversObserverCollectionPresenter
                        .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.CoreEntities.IRecipient>(() => this.Entity.Id, typeof(Sungero.RecordManagement.IActionItemExecutionTaskObservers), "Observer");


                          this._CoAssigneesAssigneeCollectionPresenter = this.CreateCollectionPresenterForNavigationProperty<global::Sungero.Company.IEmployee>(global::System.Guid.Parse("0b5a48d1-ba03-490b-9747-745da6814c8c"));
                        this._CoAssigneesAssigneeCollectionPresenter
                        .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Company.IEmployee>(() => this.Entity.Id, typeof(Sungero.RecordManagement.IActionItemExecutionTaskCoAssignees), "Assignee");

                          this._ActionItemPartsAssigneeCollectionPresenter = this.CreateCollectionPresenterForNavigationProperty<global::Sungero.Company.IEmployee>(global::System.Guid.Parse("1342581d-3cf5-4de6-adb1-476483722bf0"));
                        this._ActionItemPartsAssigneeCollectionPresenter
                        .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Company.IEmployee>(() => this.Entity.Id, typeof(Sungero.RecordManagement.IActionItemExecutionTaskActionItemParts), "Assignee");

                          this._ActionItemPartsActionItemPartExecutionTaskCollectionPresenter = this.CreateCollectionPresenterForNavigationProperty<global::Sungero.RecordManagement.IActionItemExecutionTask>(global::System.Guid.Parse("ba73d5e6-134a-409b-ba34-bb4f9c6fe5dc"));
                        this._ActionItemPartsActionItemPartExecutionTaskCollectionPresenter
                        .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.RecordManagement.IActionItemExecutionTask>(() => this.Entity.Id, typeof(Sungero.RecordManagement.IActionItemExecutionTaskActionItemParts), "ActionItemPartExecutionTask");

                          this._ActionItemObserversObserverCollectionPresenter = this.CreateCollectionPresenterForNavigationProperty<global::Sungero.CoreEntities.IRecipient>(global::System.Guid.Parse("e929dbc4-7b23-4683-830e-48b97e4417a2"));
                        this._ActionItemObserversObserverCollectionPresenter
                        .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.CoreEntities.IRecipient>(() => this.Entity.Id, typeof(Sungero.RecordManagement.IActionItemExecutionTaskActionItemObservers), "Observer");


    }

    public ActionItemExecutionTaskPresenter()
    {
      this.Init();
    }

    #endregion
  }
}

// ==================================================================
// ActionItemExecutionTaskCollectionPresenter.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagement.Client
{
  public class ActionItemExecutionTaskCollectionPresenter<T> : 
    global::Sungero.Workflow.Client.TaskCollectionPresenter<T>
    where T: class, global::Sungero.RecordManagement.IActionItemExecutionTask
  {
    #region Actions

          private global::System.Windows.Input.ICommand _FollowUpExecutionCommand;  

          public global::System.Windows.Input.ICommand FollowUpExecutionCommand 
          { 
            get
            { 
              if (this._FollowUpExecutionCommand == null)
                this._FollowUpExecutionCommand = new global::Sungero.Domain.Client.PresenterCommand("FollowUpExecution", this, this.FollowUpExecution, this.CanFollowUpExecution);
              return this._FollowUpExecutionCommand; 
            }
          }



    #endregion

    #region Methods

        protected virtual bool CanFollowUpExecution()
        {
          var args = new global::Sungero.Domain.Client.WpfCanExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Collection, null, this);
          return Sungero.RecordManagement.Client.ActionItemExecutionTaskStaticActions.CanFollowUpExecution(args);
        }

        protected virtual void FollowUpExecution()
        {
          var args = new global::Sungero.Domain.Client.WpfExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Collection, null, this);
          Sungero.RecordManagement.Client.ActionItemExecutionTaskStaticActions.FollowUpExecution(args);
        }



    #endregion

    public ActionItemExecutionTaskCollectionPresenter(global::System.Linq.IQueryable<T> query, OnLookup onLookup)
      : base(query, onLookup)
    {
    }

    public ActionItemExecutionTaskCollectionPresenter(global::System.Linq.IQueryable<T> query)
      : this(query, null) { }

    public ActionItemExecutionTaskCollectionPresenter(OnLookup onLookup)
      : this(null, onLookup) { }

    public ActionItemExecutionTaskCollectionPresenter()
      : this(null, null) { }
  }
}

// ==================================================================
// ActionItemExecutionTaskRepositoryImplementer.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagement.Client
{ 
  public class ActionItemExecutionTaskRepositoryImplementer<T> : 
      global::Sungero.Workflow.Client.TaskRepositoryImplementer<T>,
      global::Sungero.RecordManagement.IActionItemExecutionTaskRepositoryImplementer<T>
      where T : global::Sungero.RecordManagement.IActionItemExecutionTask
    {
       public new global::Sungero.RecordManagement.IActionItemExecutionTaskAccessRights AccessRights
       {
          get { return (global::Sungero.RecordManagement.IActionItemExecutionTaskAccessRights)base.AccessRights; }
       }

       public new global::Sungero.RecordManagement.IActionItemExecutionTaskInfo Info
       {
          get { return (global::Sungero.RecordManagement.IActionItemExecutionTaskInfo)base.Info; }
       }

       protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
       {
         return new global::Sungero.RecordManagement.Client.ActionItemExecutionTaskTypeAccessRights(typeof(T));
       }
    }
}

// ==================================================================
// ActionItemExecutionTaskAccessRights.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagement.Client
{
  public class ActionItemExecutionTaskAccessRights : 
    Sungero.Workflow.Client.TaskAccessRights, Sungero.RecordManagement.IActionItemExecutionTaskAccessRights
  {

    public ActionItemExecutionTaskAccessRights(global::Sungero.Domain.Shared.IEntity entity) : base(entity)
    {
    }
  }

  public class ActionItemExecutionTaskTypeAccessRights : 
    Sungero.Workflow.Client.TaskTypeAccessRights, Sungero.RecordManagement.IActionItemExecutionTaskAccessRights
  {

    public ActionItemExecutionTaskTypeAccessRights(global::System.Type entityType) : base(entityType)
    {
    }
  }
}
