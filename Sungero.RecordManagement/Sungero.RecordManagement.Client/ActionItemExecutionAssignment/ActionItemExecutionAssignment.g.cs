
// ==================================================================
// ActionItemExecutionAssignment.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagement.Client
{
  public class ActionItemExecutionAssignment :
    global::Sungero.Workflow.Client.Assignment, global::Sungero.RecordManagement.IActionItemExecutionAssignment
  {
    #region Fields and properties

    public static new readonly global::System.Guid ClassTypeGuid = global::System.Guid.Parse("d238ef51-607e-46a5-b86a-ede4482f7f19");

    public override global::System.Guid TypeGuid
    {
      get { return global::Sungero.RecordManagement.Client.ActionItemExecutionAssignment.ClassTypeGuid; }
    }

    public override string TypeName
    {
      get { return "Sungero.RecordManagement.IActionItemExecutionAssignment, Sungero.Domain.Interfaces"; }
    }

      public override string DisplayValue
      {
        get { return this.Subject; }
        set { this.Subject = value; }
      }

      public override string DisplayPropertyName
      {
        get { return "Subject"; }
      }


    public new global::Sungero.RecordManagement.IActionItemExecutionAssignmentState State
    {
      get
      {
        return (global::Sungero.RecordManagement.IActionItemExecutionAssignmentState)base.State;
      }
    }

    protected override global::Sungero.Domain.Shared.IEntityState CreateState()
    {
      return new global::Sungero.RecordManagement.Shared.ActionItemExecutionAssignmentState(this);
    }

    public new global::Sungero.RecordManagement.IActionItemExecutionAssignmentInfo Info
    {
      get
      {
        return (global::Sungero.RecordManagement.IActionItemExecutionAssignmentInfo)base.Info;
      }
    }

    public new global::Sungero.RecordManagement.IActionItemExecutionAssignmentAccessRights AccessRights
    {
      get
      {
        return (global::Sungero.RecordManagement.IActionItemExecutionAssignmentAccessRights)base.AccessRights;
      }
    }

    protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
    {
      return new global::Sungero.RecordManagement.Client.ActionItemExecutionAssignmentAccessRights(this);
    }

        protected global::Sungero.Domain.Client.SimpleProperty<global::System.String> _ActionItem;

        public virtual global::System.String ActionItem
        {
          get { return this._ActionItem.Value; }
          set { this._ActionItem.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.DateTime?> _ScheduledDate;

        public virtual global::System.DateTime? ScheduledDate
        {
          get { return this._ScheduledDate.Value; }
          set { this._ScheduledDate.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.Boolean?> _NeedAbortChildActionItems;

        public virtual global::System.Boolean? NeedAbortChildActionItems
        {
          get { return this._NeedAbortChildActionItems.Value; }
          set { this._NeedAbortChildActionItems.Value = value; }
        }


        private static global::Sungero.Domain.Shared.EnumerationItems _ResultItems = new global::Sungero.Domain.Shared.EnumerationItems(
          global::Sungero.Workflow.Client.Assignment.ResultItems,
          typeof(global::Sungero.RecordManagement.ActionItemExecutionAssignment.Result),
          typeof(global::Sungero.RecordManagement.Client.ActionItemExecutionAssignment),
          "Result");

        public static new global::Sungero.Domain.Shared.EnumerationItems ResultItems
        {
          get { return global::Sungero.RecordManagement.Client.ActionItemExecutionAssignment._ResultItems; }
        }

        public override global::Sungero.Domain.Shared.EnumerationItems ResultAllowedItems
        {
          get { return global::Sungero.RecordManagement.Client.ActionItemExecutionAssignment.ResultItems; }
        }




              protected global::Sungero.Domain.Client.INavigationProperty<global::Sungero.Company.IEmployee> _AssignedBy;

              public virtual global::Sungero.Company.IEmployee AssignedBy
              {
              get
              {
                return this._AssignedBy.Value as global::Sungero.Company.IEmployee;
              }

              set
              {
                (this._AssignedBy as global::Sungero.Domain.Client.IProperty).Value = value;
              }
            }










    #endregion

    #region Methods

    protected override object CreateActionsHandlers()
    {
      return new global::Sungero.RecordManagement.Client.ActionItemExecutionAssignmentActions(this);
    }

    protected override object CreateCollectionActionsHandlers()
    {
      return new global::Sungero.RecordManagement.Client.ActionItemExecutionAssignmentCollectionActions();
    }

    protected override object CreateAnyChildEntityActionsHandlers()
    {
      return new global::Sungero.RecordManagement.Client.ActionItemExecutionAssignmentAnyChildEntityActions();
    }

    protected override object CreateAnyChildEntityCollectionActionsHandlers()
    {
      return new global::Sungero.RecordManagement.Client.ActionItemExecutionAssignmentAnyChildEntityCollectionActions();
    }


    protected override global::Sungero.Domain.Client.EntityFunctions CreateClientFunctions()
    {
      return new global::Sungero.RecordManagement.Client.ActionItemExecutionAssignmentFunctions(this);
    }

    protected override global::Sungero.Domain.Shared.EntityFunctions CreateSharedFunctions()
    {
      return new global::Sungero.RecordManagement.Shared.ActionItemExecutionAssignmentFunctions(this);
    }
    protected override object CreateHandlers() {
      return new global::Sungero.RecordManagement.ActionItemExecutionAssignmentClientHandlers(this);
    }
    protected override object CreateSharedHandlers() {
      return new global::Sungero.RecordManagement.ActionItemExecutionAssignmentSharedHandlers(this);
    }

    #endregion

    #region Framework events

    protected void ActionItemChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.ActionItem, this.ActionItem, this);
     ((global::Sungero.RecordManagement.ActionItemExecutionAssignmentSharedHandlers)this.SharedHandlers).ActionItemChanged(args);
    }

    protected void AssignedByChangedHandler()
    {
      var args = new global::Sungero.RecordManagement.Shared.ActionItemExecutionAssignmentAssignedByChangedEventArgs(this.State.Properties.AssignedBy, this.AssignedBy, this);
     ((global::Sungero.RecordManagement.ActionItemExecutionAssignmentSharedHandlers)this.SharedHandlers).AssignedByChanged(args);
    }

    protected void ScheduledDateChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.DateTimePropertyChangedEventArgs(this.State.Properties.ScheduledDate, this.ScheduledDate, this);
     ((global::Sungero.RecordManagement.ActionItemExecutionAssignmentSharedHandlers)this.SharedHandlers).ScheduledDateChanged(args);
    }

    protected void NeedAbortChildActionItemsChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.BooleanPropertyChangedEventArgs(this.State.Properties.NeedAbortChildActionItems, this.NeedAbortChildActionItems, this);
     ((global::Sungero.RecordManagement.ActionItemExecutionAssignmentSharedHandlers)this.SharedHandlers).NeedAbortChildActionItemsChanged(args);
    }



  protected global::System.String ActionItemValueInputHandler(global::System.String value)
  {
    var args = new global::Sungero.Presentation.StringValueInputEventArgs(this.ActionItem, value, this, this.Info.Properties.ActionItem);
    ((global::Sungero.RecordManagement.ActionItemExecutionAssignmentClientHandlers)this.Handlers).ActionItemValueInput(args);
    return args.NewValue;
  }

  protected global::Sungero.Company.IEmployee AssignedByValueInputHandler(global::Sungero.Company.IEmployee value)
  {
    var args = new global::Sungero.RecordManagement.Client.ActionItemExecutionAssignmentAssignedByValueInputEventArgs(this.AssignedBy, value, this, this.Info.Properties.AssignedBy);
    ((global::Sungero.RecordManagement.ActionItemExecutionAssignmentClientHandlers)this.Handlers).AssignedByValueInput(args);
    return args.NewValue;
  }

  protected global::System.DateTime? ScheduledDateValueInputHandler(global::System.DateTime? value)
  {
    var args = new global::Sungero.Presentation.DateTimeValueInputEventArgs(this.ScheduledDate, value, this, this.Info.Properties.ScheduledDate);
    ((global::Sungero.RecordManagement.ActionItemExecutionAssignmentClientHandlers)this.Handlers).ScheduledDateValueInput(args);
    return args.NewValue;
  }

  protected global::System.Boolean? NeedAbortChildActionItemsValueInputHandler(global::System.Boolean? value)
  {
    var args = new global::Sungero.Presentation.BooleanValueInputEventArgs(this.NeedAbortChildActionItems, value, this, this.Info.Properties.NeedAbortChildActionItems);
    ((global::Sungero.RecordManagement.ActionItemExecutionAssignmentClientHandlers)this.Handlers).NeedAbortChildActionItemsValueInput(args);
    return args.NewValue;
  }



    #endregion

    #region Constructors








              protected virtual void InitAssignedByNavigationProperty()
              {
                this._AssignedBy = new global::Sungero.Domain.Client.NavigationProperty<global::Sungero.Company.IEmployee>("AssignedBy", this);
                this._AssignedBy.ValueChanged += (sender, e) => { this.AssignedByChangedHandler(); };
                this.AddProperty(this._AssignedBy as global::Sungero.Domain.Client.IProperty);
              }




    public ActionItemExecutionAssignment()
    {
            this._ActionItem = new global::Sungero.Domain.Client.SimpleProperty<global::System.String>("ActionItem", this);
            this._ActionItem.ValueChanged += (sender, e) => { this.ActionItemChangedHandler(); };
            this.AddProperty(this._ActionItem);

            this._ScheduledDate = new global::Sungero.Domain.Client.SimpleProperty<global::System.DateTime?>("ScheduledDate", this);
            this._ScheduledDate.ValueChanged += (sender, e) => { this.ScheduledDateChangedHandler(); };
            this.AddProperty(this._ScheduledDate);

            this._NeedAbortChildActionItems = new global::Sungero.Domain.Client.SimpleProperty<global::System.Boolean?>("NeedAbortChildActionItems", this);
            this._NeedAbortChildActionItems.ValueChanged += (sender, e) => { this.NeedAbortChildActionItemsChangedHandler(); };
            this.AddProperty(this._NeedAbortChildActionItems);

            this.InitAssignedByNavigationProperty();








      ((global::Sungero.Workflow.Interfaces.IWorkflowEntity)this).AttachmentCreated += this.AttachmentCreatedHandler;
      ((global::Sungero.Workflow.Interfaces.IWorkflowEntity)this).AttachmentAdded += this.AttachmentAddedHandler;
      ((global::Sungero.Workflow.Interfaces.IWorkflowEntity)this).AttachmentDeleted += this.AttachmentDeletedHandler;


    }

    #endregion

    #region Workflow attachments
    public virtual global::Sungero.RecordManagement.IActionItemExecutionAssignmentAddendaGroupAttachments AddendaGroup
    {
      get
      {
        return new global::Sungero.RecordManagement.Shared.ActionItemExecutionAssignmentAddendaGroupAttachments(this);
      }
    }
    public virtual global::Sungero.RecordManagement.IActionItemExecutionAssignmentOtherGroupAttachments OtherGroup
    {
      get
      {
        return new global::Sungero.RecordManagement.Shared.ActionItemExecutionAssignmentOtherGroupAttachments(this);
      }
    }
    public virtual global::Sungero.RecordManagement.IActionItemExecutionAssignmentResultGroupAttachments ResultGroup
    {
      get
      {
        return new global::Sungero.RecordManagement.Shared.ActionItemExecutionAssignmentResultGroupAttachments(this);
      }
    }
    public virtual global::Sungero.RecordManagement.IActionItemExecutionAssignmentDocumentsGroupAttachments DocumentsGroup
    {
      get
      {
        return new global::Sungero.RecordManagement.Shared.ActionItemExecutionAssignmentDocumentsGroupAttachments(this);
      }
    }


    private void AttachmentCreatedHandler(object sender, global::Sungero.Workflow.Interfaces.AttachmentCreatedEventArgs e)
    {
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "AddendaGroup")
      {
        ((global::Sungero.RecordManagement.ActionItemExecutionAssignmentSharedHandlers)this.SharedHandlers).AddendaGroupCreated(e);
        return;
      }
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "OtherGroup")
      {
        ((global::Sungero.RecordManagement.ActionItemExecutionAssignmentSharedHandlers)this.SharedHandlers).OtherGroupCreated(e);
        return;
      }
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "ResultGroup")
      {
        ((global::Sungero.RecordManagement.ActionItemExecutionAssignmentSharedHandlers)this.SharedHandlers).ResultGroupCreated(e);
        return;
      }
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "DocumentsGroup")
      {
        ((global::Sungero.RecordManagement.ActionItemExecutionAssignmentSharedHandlers)this.SharedHandlers).DocumentsGroupCreated(e);
        return;
      }

    }

    private void AttachmentAddedHandler(object sender, global::Sungero.Workflow.Interfaces.AttachmentAddedEventArgs e)
    {
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "AddendaGroup")
      {
        ((global::Sungero.RecordManagement.ActionItemExecutionAssignmentSharedHandlers)this.SharedHandlers).AddendaGroupAdded(e);
        return;
      }
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "OtherGroup")
      {
        ((global::Sungero.RecordManagement.ActionItemExecutionAssignmentSharedHandlers)this.SharedHandlers).OtherGroupAdded(e);
        return;
      }
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "ResultGroup")
      {
        ((global::Sungero.RecordManagement.ActionItemExecutionAssignmentSharedHandlers)this.SharedHandlers).ResultGroupAdded(e);
        return;
      }
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "DocumentsGroup")
      {
        ((global::Sungero.RecordManagement.ActionItemExecutionAssignmentSharedHandlers)this.SharedHandlers).DocumentsGroupAdded(e);
        return;
      }

    }

    private void AttachmentDeletedHandler(object sender, global::Sungero.Workflow.Interfaces.AttachmentDeletedEventArgs e)
    {
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "AddendaGroup")
      {
        ((global::Sungero.RecordManagement.ActionItemExecutionAssignmentSharedHandlers)this.SharedHandlers).AddendaGroupDeleted(e);
        return;
      }
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "OtherGroup")
      {
        ((global::Sungero.RecordManagement.ActionItemExecutionAssignmentSharedHandlers)this.SharedHandlers).OtherGroupDeleted(e);
        return;
      }
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "ResultGroup")
      {
        ((global::Sungero.RecordManagement.ActionItemExecutionAssignmentSharedHandlers)this.SharedHandlers).ResultGroupDeleted(e);
        return;
      }
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "DocumentsGroup")
      {
        ((global::Sungero.RecordManagement.ActionItemExecutionAssignmentSharedHandlers)this.SharedHandlers).DocumentsGroupDeleted(e);
        return;
      }

    }
    #endregion

  }
}

// ==================================================================
// ActionItemExecutionAssignmentPresenter.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagement.Client
{
  public class ActionItemExecutionAssignmentPresenter<T> :
    global::Sungero.Workflow.Client.AssignmentPresenter<T>
    where T : class, global::Sungero.RecordManagement.IActionItemExecutionAssignment
  {
    #region Fields and properties

          private global::System.Windows.Input.ICommand _DoneCommand;

          public global::System.Windows.Input.ICommand DoneCommand
          {
            get
            {
              if (this._DoneCommand == null)
                  this._DoneCommand = new global::Sungero.Workflow.Client.SingleAssignmentCommand<T>("Done", this, this.Done, this.CanDone) { IsEmptyParameterAllowed = true };
              return this._DoneCommand;
            }
          }
          private global::System.Windows.Input.ICommand _CreateChildActionItemCommand;

          public global::System.Windows.Input.ICommand CreateChildActionItemCommand
          {
            get
            {
              if (this._CreateChildActionItemCommand == null)
                  this._CreateChildActionItemCommand = new global::Sungero.Domain.Client.SingleEntityCommand<T>("CreateChildActionItem", this, this.CreateChildActionItem, this.CanCreateChildActionItem) { IsEmptyParameterAllowed = true };
              return this._CreateChildActionItemCommand;
            }
          }
          private global::System.Windows.Input.ICommand _ExtendDeadlineCommand;

          public global::System.Windows.Input.ICommand ExtendDeadlineCommand
          {
            get
            {
              if (this._ExtendDeadlineCommand == null)
                  this._ExtendDeadlineCommand = new global::Sungero.Domain.Client.SingleEntityCommand<T>("ExtendDeadline", this, this.ExtendDeadline, this.CanExtendDeadline) { IsEmptyParameterAllowed = true };
              return this._ExtendDeadlineCommand;
            }
          }
          private global::System.Windows.Input.ICommand _RequireReportCommand;

          public global::System.Windows.Input.ICommand RequireReportCommand
          {
            get
            {
              if (this._RequireReportCommand == null)
                  this._RequireReportCommand = new global::Sungero.Domain.Client.SingleEntityCommand<T>("RequireReport", this, this.RequireReport, this.CanRequireReport) { IsEmptyParameterAllowed = true };
              return this._RequireReportCommand;
            }
          }
          private global::System.Windows.Input.ICommand _CreateReplyLetterCommand;

          public global::System.Windows.Input.ICommand CreateReplyLetterCommand
          {
            get
            {
              if (this._CreateReplyLetterCommand == null)
                  this._CreateReplyLetterCommand = new global::Sungero.Domain.Client.SingleEntityCommand<T>("CreateReplyLetter", this, this.CreateReplyLetter, this.CanCreateReplyLetter) { IsEmptyParameterAllowed = true };
              return this._CreateReplyLetterCommand;
            }
          }
          private global::System.Windows.Input.ICommand _PrintActionItemCommand;

          public global::System.Windows.Input.ICommand PrintActionItemCommand
          {
            get
            {
              if (this._PrintActionItemCommand == null)
                  this._PrintActionItemCommand = new global::Sungero.Domain.Client.SingleEntityCommand<T>("PrintActionItem", this, this.PrintActionItem, this.CanPrintActionItem) { IsEmptyParameterAllowed = true };
              return this._PrintActionItemCommand;
            }
          }




    #endregion

    #region Methods

              private bool CanDone(T entity)
              {
                var args = new global::Sungero.Workflow.Client.CanExecuteResultActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity);
                return ((Sungero.RecordManagement.Client.ActionItemExecutionAssignmentActions)(entity as Sungero.RecordManagement.Client.ActionItemExecutionAssignment).ActionsHandlers).CanDone(args);
              }

              private void Done(T entity)
              {
                var args = new global::Sungero.Workflow.Client.ExecuteResultActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, entity.Info.Actions.Done);
                ((Sungero.RecordManagement.Client.ActionItemExecutionAssignmentActions)(entity as Sungero.RecordManagement.Client.ActionItemExecutionAssignment).ActionsHandlers).Done(args);
              }

              private bool CanCreateChildActionItem(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfCanExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this);
                return ((Sungero.RecordManagement.Client.ActionItemExecutionAssignmentActions)(entity as Sungero.RecordManagement.Client.ActionItemExecutionAssignment).ActionsHandlers).CanCreateChildActionItem(args);
              }

              private void CreateChildActionItem(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this, entity.Info.Actions.CreateChildActionItem);
                ((Sungero.RecordManagement.Client.ActionItemExecutionAssignmentActions)(entity as Sungero.RecordManagement.Client.ActionItemExecutionAssignment).ActionsHandlers).CreateChildActionItem(args);
              }

              private bool CanExtendDeadline(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfCanExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this);
                return ((Sungero.RecordManagement.Client.ActionItemExecutionAssignmentActions)(entity as Sungero.RecordManagement.Client.ActionItemExecutionAssignment).ActionsHandlers).CanExtendDeadline(args);
              }

              private void ExtendDeadline(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this, entity.Info.Actions.ExtendDeadline);
                ((Sungero.RecordManagement.Client.ActionItemExecutionAssignmentActions)(entity as Sungero.RecordManagement.Client.ActionItemExecutionAssignment).ActionsHandlers).ExtendDeadline(args);
              }

              private bool CanRequireReport(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfCanExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this);
                return ((Sungero.RecordManagement.Client.ActionItemExecutionAssignmentActions)(entity as Sungero.RecordManagement.Client.ActionItemExecutionAssignment).ActionsHandlers).CanRequireReport(args);
              }

              private void RequireReport(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this, entity.Info.Actions.RequireReport);
                ((Sungero.RecordManagement.Client.ActionItemExecutionAssignmentActions)(entity as Sungero.RecordManagement.Client.ActionItemExecutionAssignment).ActionsHandlers).RequireReport(args);
              }

              private bool CanCreateReplyLetter(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfCanExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this);
                return ((Sungero.RecordManagement.Client.ActionItemExecutionAssignmentActions)(entity as Sungero.RecordManagement.Client.ActionItemExecutionAssignment).ActionsHandlers).CanCreateReplyLetter(args);
              }

              private void CreateReplyLetter(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this, entity.Info.Actions.CreateReplyLetter);
                ((Sungero.RecordManagement.Client.ActionItemExecutionAssignmentActions)(entity as Sungero.RecordManagement.Client.ActionItemExecutionAssignment).ActionsHandlers).CreateReplyLetter(args);
              }

              private bool CanPrintActionItem(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfCanExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this);
                return ((Sungero.RecordManagement.Client.ActionItemExecutionAssignmentActions)(entity as Sungero.RecordManagement.Client.ActionItemExecutionAssignment).ActionsHandlers).CanPrintActionItem(args);
              }

              private void PrintActionItem(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this, entity.Info.Actions.PrintActionItem);
                ((Sungero.RecordManagement.Client.ActionItemExecutionAssignmentActions)(entity as Sungero.RecordManagement.Client.ActionItemExecutionAssignment).ActionsHandlers).PrintActionItem(args);
              }


    #endregion

    #region Framework events

    protected override void EntityPropertyChangedEventHandler(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
    {
      base.EntityPropertyChangedEventHandler(sender, e);
    }

    #endregion

              protected global::Sungero.Domain.Client.IEntityCollectionPresenter _AssignedByCollectionPresenter;
              public global::Sungero.Domain.Client.IEntityCollectionPresenter AssignedByCollectionPresenter
              {
          get { return this._AssignedByCollectionPresenter; }
        }



    #region Constructors

    private void Init()
    {
              this._AuthorCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.CoreEntities.IUser>(() => this.Entity.Id, typeof(T), "Author");

              this._PerformerCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.CoreEntities.IUser>(() => this.Entity.Id, typeof(T), "Performer");

              this._TaskCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Workflow.ITask>(() => this.Entity.Id, typeof(T), "Task");

              this._MainTaskCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Workflow.ITask>(() => this.Entity.Id, typeof(T), "MainTask");

              this._CompletedByCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.CoreEntities.IUser>(() => this.Entity.Id, typeof(T), "CompletedBy");

                  this._AssignedByCollectionPresenter = this.CreateCollectionPresenterForNavigationProperty<global::Sungero.Company.IEmployee>(global::System.Guid.Parse("fc364cc7-8a57-4c30-bc60-a29f872b4be2"));
              this._AssignedByCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Company.IEmployee>(() => this.Entity.Id, typeof(T), "AssignedBy");


    }

    public ActionItemExecutionAssignmentPresenter()
    {
      this.Init();
    }

    #endregion
  }
}

// ==================================================================
// ActionItemExecutionAssignmentCollectionPresenter.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagement.Client
{
  public class ActionItemExecutionAssignmentCollectionPresenter<T> : 
    global::Sungero.Workflow.Client.AssignmentCollectionPresenter<T>
    where T: class, global::Sungero.RecordManagement.IActionItemExecutionAssignment
  {
    #region Actions



    #endregion

    #region Methods


    #endregion

    public ActionItemExecutionAssignmentCollectionPresenter(global::System.Linq.IQueryable<T> query, OnLookup onLookup)
      : base(query, onLookup)
    {
    }

    public ActionItemExecutionAssignmentCollectionPresenter(global::System.Linq.IQueryable<T> query)
      : this(query, null) { }

    public ActionItemExecutionAssignmentCollectionPresenter(OnLookup onLookup)
      : this(null, onLookup) { }

    public ActionItemExecutionAssignmentCollectionPresenter()
      : this(null, null) { }
  }
}

// ==================================================================
// ActionItemExecutionAssignmentRepositoryImplementer.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagement.Client
{ 
  public class ActionItemExecutionAssignmentRepositoryImplementer<T> : 
      global::Sungero.Workflow.Client.AssignmentRepositoryImplementer<T>,
      global::Sungero.RecordManagement.IActionItemExecutionAssignmentRepositoryImplementer<T>
      where T : global::Sungero.RecordManagement.IActionItemExecutionAssignment
    {
       public new global::Sungero.RecordManagement.IActionItemExecutionAssignmentAccessRights AccessRights
       {
          get { return (global::Sungero.RecordManagement.IActionItemExecutionAssignmentAccessRights)base.AccessRights; }
       }

       public new global::Sungero.RecordManagement.IActionItemExecutionAssignmentInfo Info
       {
          get { return (global::Sungero.RecordManagement.IActionItemExecutionAssignmentInfo)base.Info; }
       }

       protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
       {
         return new global::Sungero.RecordManagement.Client.ActionItemExecutionAssignmentTypeAccessRights(typeof(T));
       }
    }
}

// ==================================================================
// ActionItemExecutionAssignmentAccessRights.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagement.Client
{
  public class ActionItemExecutionAssignmentAccessRights : 
    Sungero.Workflow.Client.AssignmentAccessRights, Sungero.RecordManagement.IActionItemExecutionAssignmentAccessRights
  {

    public ActionItemExecutionAssignmentAccessRights(global::Sungero.Domain.Shared.IEntity entity) : base(entity)
    {
    }
  }

  public class ActionItemExecutionAssignmentTypeAccessRights : 
    Sungero.Workflow.Client.AssignmentTypeAccessRights, Sungero.RecordManagement.IActionItemExecutionAssignmentAccessRights
  {

    public ActionItemExecutionAssignmentTypeAccessRights(global::System.Type entityType) : base(entityType)
    {
    }
  }
}
