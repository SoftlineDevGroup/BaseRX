
// ==================================================================
// AcquaintanceTaskExcludedPerformersState.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagement.Shared
{
  public class AcquaintanceTaskExcludedPerformersState : 
    global::Sungero.Domain.Shared.ChildEntityState, global::Sungero.RecordManagement.IAcquaintanceTaskExcludedPerformersState
  {
    public AcquaintanceTaskExcludedPerformersState(global::Sungero.RecordManagement.IAcquaintanceTaskExcludedPerformers entity) : base(entity) { }

    public new global::Sungero.RecordManagement.IAcquaintanceTaskExcludedPerformersPropertyStates Properties
    {
      get { return (global::Sungero.RecordManagement.IAcquaintanceTaskExcludedPerformersPropertyStates)base.Properties; }
    }

    protected override global::Sungero.Domain.Shared.IEntityPropertyStates CreatePropertyStates(global::Sungero.Domain.Shared.IEntity entity)
    {
      return new global::Sungero.RecordManagement.Shared.AcquaintanceTaskExcludedPerformersPropertyStates(entity);
    }


  }


  public class AcquaintanceTaskExcludedPerformersPropertyStates : 
    global::Sungero.Domain.Shared.ChildEntityPropertyStates, global::Sungero.RecordManagement.IAcquaintanceTaskExcludedPerformersPropertyStates
  {
            public global::Sungero.Domain.Shared.IPropertyState<global::Sungero.RecordManagement.IAcquaintanceTask> AcquaintanceTask 
            {
              get { return this.InternalAcquaintanceTask; }
            }

            protected virtual global::Sungero.Domain.Shared.IPropertyState<global::Sungero.RecordManagement.IAcquaintanceTask> InternalAcquaintanceTask
            {
              get { return this.GetPropertyState<global::Sungero.RecordManagement.IAcquaintanceTask>("AcquaintanceTask"); }
            }
            public global::Sungero.Domain.Shared.IPropertyState<global::Sungero.CoreEntities.IRecipient> ExcludedPerformer 
            {
              get { return this.InternalExcludedPerformer; }
            }

            protected virtual global::Sungero.Domain.Shared.IPropertyState<global::Sungero.CoreEntities.IRecipient> InternalExcludedPerformer
            {
              get { return this.GetPropertyState<global::Sungero.CoreEntities.IRecipient>("ExcludedPerformer"); }
            }


    protected internal AcquaintanceTaskExcludedPerformersPropertyStates(global::Sungero.Domain.Shared.IEntity entity) : base(entity) { }
  }

  public class AcquaintanceTaskExcludedPerformersCollectionPropertyState<T> :
    global::Sungero.Domain.Shared.ChildEntityCollectionPropertyState<T>, global::Sungero.RecordManagement.IAcquaintanceTaskExcludedPerformersCollectionPropertyState<T>
    where T : global::Sungero.RecordManagement.IAcquaintanceTaskExcludedPerformers
  {
    public new global::Sungero.RecordManagement.IAcquaintanceTaskExcludedPerformersCollectionPropertyStates Properties
    {
      get { return (global::Sungero.RecordManagement.IAcquaintanceTaskExcludedPerformersCollectionPropertyStates)base.Properties; }
    }

    protected override global::Sungero.Domain.Shared.IChildEntityCollectionPropertyStates CreatePropertyStates()
    {
      return new global::Sungero.RecordManagement.Shared.AcquaintanceTaskExcludedPerformersCollectionPropertyStates(this.ChildEntityMetadata);
    }

    protected internal AcquaintanceTaskExcludedPerformersCollectionPropertyState(global::Sungero.Domain.Shared.IEntity entity, string propertyName) : base(entity, propertyName) { }
  }

  public class AcquaintanceTaskExcludedPerformersCollectionPropertyStates :
    global::Sungero.Domain.Shared.ChildEntityCollectionPropertyStates, global::Sungero.RecordManagement.IAcquaintanceTaskExcludedPerformersCollectionPropertyStates
  {
        public global::Sungero.Domain.Shared.IChildPropertySummaryState AcquaintanceTask
        {
          get { return this.GetChildPropertySummaryState("AcquaintanceTask"); }
        }
        public global::Sungero.Domain.Shared.IChildPropertySummaryState ExcludedPerformer
        {
          get { return this.GetChildPropertySummaryState("ExcludedPerformer"); }
        }


    protected internal AcquaintanceTaskExcludedPerformersCollectionPropertyStates(global::Sungero.Metadata.EntityMetadata childEntityMetadata) : base(childEntityMetadata) { }
  }
}

// ==================================================================
// AcquaintanceTaskExcludedPerformersEventArgs.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagement.Shared
{  
    public class AcquaintanceTaskExcludedPerformersExcludedPerformerChangedEventArgs : global::Sungero.Domain.Shared.PropertyChangedEventArgs<global::Sungero.CoreEntities.IRecipient>
    {
      public AcquaintanceTaskExcludedPerformersExcludedPerformerChangedEventArgs(global::Sungero.Domain.Shared.IPropertyState<global::Sungero.CoreEntities.IRecipient> state, global::Sungero.CoreEntities.IRecipient newValue, global::Sungero.Domain.Shared.IEntity entity): base(state, newValue, entity) { }
    }

}

// ==================================================================
// AcquaintanceTaskExcludedPerformersInfo.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagement.Shared
{
  public class AcquaintanceTaskExcludedPerformersInfo : 
    global::Sungero.Domain.Shared.ChildEntityInfo, global::Sungero.RecordManagement.IAcquaintanceTaskExcludedPerformersInfo
  {
    public AcquaintanceTaskExcludedPerformersInfo(global::System.Type entityType) : base(entityType) { }

    public new global::Sungero.RecordManagement.IAcquaintanceTaskExcludedPerformersPropertiesInfo Properties
    {
      get { return (global::Sungero.RecordManagement.IAcquaintanceTaskExcludedPerformersPropertiesInfo)base.Properties; }
    }

    protected override global::Sungero.Domain.Shared.IEntityPropertiesInfo CreateEntityPropertiesInfo(global::System.Type entityType)
    {
      return new global::Sungero.RecordManagement.Shared.AcquaintanceTaskExcludedPerformersPropertiesInfo(entityType);
    }

  }

  public class AcquaintanceTaskExcludedPerformersPropertiesInfo : 
    global::Sungero.Domain.Shared.ChildEntityPropertiesInfo, global::Sungero.RecordManagement.IAcquaintanceTaskExcludedPerformersPropertiesInfo
  {
        public global::Sungero.Domain.Shared.INavigationPropertyInfo<global::Sungero.RecordManagement.IAcquaintanceTaskInfo, global::Sungero.RecordManagement.IAcquaintanceTask> AcquaintanceTask 
        {
          get
          {
             var propertyMetadata = this.GetPropertyMetadata<global::Sungero.Metadata.NavigationPropertyMetadata>("AcquaintanceTask");
             return new global::Sungero.Domain.Shared.NavigationPropertyInfo<global::Sungero.RecordManagement.IAcquaintanceTaskInfo, global::Sungero.RecordManagement.IAcquaintanceTask>(propertyMetadata);
          }
        }
        public global::Sungero.Domain.Shared.INavigationPropertyInfo<global::Sungero.CoreEntities.IRecipientInfo, global::Sungero.CoreEntities.IRecipient> ExcludedPerformer 
        {
          get
          {
             var propertyMetadata = this.GetPropertyMetadata<global::Sungero.Metadata.NavigationPropertyMetadata>("ExcludedPerformer");
             return new global::Sungero.Domain.Shared.NavigationPropertyInfo<global::Sungero.CoreEntities.IRecipientInfo, global::Sungero.CoreEntities.IRecipient>(propertyMetadata);
          }
        }


    protected internal AcquaintanceTaskExcludedPerformersPropertiesInfo(global::System.Type entityType) : base(entityType) { }
  }

}
