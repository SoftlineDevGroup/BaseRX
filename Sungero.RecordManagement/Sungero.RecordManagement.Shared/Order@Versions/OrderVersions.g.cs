
// ==================================================================
// OrderVersionsState.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagement.Shared
{
  public class OrderVersionsState : 
    global::Sungero.RecordManagement.Shared.OrderBaseVersionsState, global::Sungero.RecordManagement.IOrderVersionsState
  {
    public OrderVersionsState(global::Sungero.RecordManagement.IOrderVersions entity) : base(entity) { }

    public new global::Sungero.RecordManagement.IOrderVersionsPropertyStates Properties
    {
      get { return (global::Sungero.RecordManagement.IOrderVersionsPropertyStates)base.Properties; }
    }

    protected override global::Sungero.Domain.Shared.IEntityPropertyStates CreatePropertyStates(global::Sungero.Domain.Shared.IEntity entity)
    {
      return new global::Sungero.RecordManagement.Shared.OrderVersionsPropertyStates(entity);
    }


  }


  public class OrderVersionsPropertyStates : 
    global::Sungero.RecordManagement.Shared.OrderBaseVersionsPropertyStates, global::Sungero.RecordManagement.IOrderVersionsPropertyStates
  {
            public new global::Sungero.Domain.Shared.IPropertyState<global::Sungero.RecordManagement.IOrder> ElectronicDocument
            {
              get { return (global::Sungero.Domain.Shared.IPropertyState<global::Sungero.RecordManagement.IOrder>)base.ElectronicDocument; }
            }

            protected override global::Sungero.Domain.Shared.IPropertyState<global::Sungero.Content.IElectronicDocument> InternalElectronicDocument
            {
              get { return this.GetPropertyState<global::Sungero.RecordManagement.IOrder>("ElectronicDocument"); }
            }


    protected internal OrderVersionsPropertyStates(global::Sungero.Domain.Shared.IEntity entity) : base(entity) { }
  }

  public class OrderVersionsCollectionPropertyState<T> :
    global::Sungero.RecordManagement.Shared.OrderBaseVersionsCollectionPropertyState<T>, global::Sungero.RecordManagement.IOrderVersionsCollectionPropertyState<T>
    where T : global::Sungero.RecordManagement.IOrderVersions
  {
    public new global::Sungero.RecordManagement.IOrderVersionsCollectionPropertyStates Properties
    {
      get { return (global::Sungero.RecordManagement.IOrderVersionsCollectionPropertyStates)base.Properties; }
    }

    protected override global::Sungero.Domain.Shared.IChildEntityCollectionPropertyStates CreatePropertyStates()
    {
      return new global::Sungero.RecordManagement.Shared.OrderVersionsCollectionPropertyStates(this.ChildEntityMetadata);
    }

    protected internal OrderVersionsCollectionPropertyState(global::Sungero.Domain.Shared.IEntity entity, string propertyName) : base(entity, propertyName) { }
  }

  public class OrderVersionsCollectionPropertyStates :
    global::Sungero.RecordManagement.Shared.OrderBaseVersionsCollectionPropertyStates, global::Sungero.RecordManagement.IOrderVersionsCollectionPropertyStates
  {

    protected internal OrderVersionsCollectionPropertyStates(global::Sungero.Metadata.EntityMetadata childEntityMetadata) : base(childEntityMetadata) { }
  }
}

// ==================================================================
// OrderVersionsEventArgs.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagement.Shared
{  
}

// ==================================================================
// OrderVersionsInfo.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagement.Shared
{
  public class OrderVersionsInfo : 
    global::Sungero.RecordManagement.Shared.OrderBaseVersionsInfo, global::Sungero.RecordManagement.IOrderVersionsInfo
  {
    public OrderVersionsInfo(global::System.Type entityType) : base(entityType) { }

    public new global::Sungero.RecordManagement.IOrderVersionsPropertiesInfo Properties
    {
      get { return (global::Sungero.RecordManagement.IOrderVersionsPropertiesInfo)base.Properties; }
    }

    protected override global::Sungero.Domain.Shared.IEntityPropertiesInfo CreateEntityPropertiesInfo(global::System.Type entityType)
    {
      return new global::Sungero.RecordManagement.Shared.OrderVersionsPropertiesInfo(entityType);
    }

  }

  public class OrderVersionsPropertiesInfo : 
    global::Sungero.RecordManagement.Shared.OrderBaseVersionsPropertiesInfo, global::Sungero.RecordManagement.IOrderVersionsPropertiesInfo
  {
        public new global::Sungero.Domain.Shared.INavigationPropertyInfo<global::Sungero.RecordManagement.IOrderInfo, global::Sungero.RecordManagement.IOrder> ElectronicDocument
        {
          get
          {
             var propertyMetadata = this.GetPropertyMetadata<global::Sungero.Metadata.NavigationPropertyMetadata>("ElectronicDocument");
             return new global::Sungero.Domain.Shared.NavigationPropertyInfo<global::Sungero.RecordManagement.IOrderInfo, global::Sungero.RecordManagement.IOrder>(propertyMetadata);
          }
        }


    protected internal OrderVersionsPropertiesInfo(global::System.Type entityType) : base(entityType) { }
  }

}
