
// ==================================================================
// OrderState.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagement.Shared
{
  public class OrderState : 
    global::Sungero.RecordManagement.Shared.OrderBaseState, global::Sungero.RecordManagement.IOrderState
  {
    public OrderState(global::Sungero.RecordManagement.IOrder entity) : base(entity) { }

    public new global::Sungero.RecordManagement.IOrderPropertyStates Properties
    {
      get { return (global::Sungero.RecordManagement.IOrderPropertyStates)base.Properties; }
    }

    protected override global::Sungero.Domain.Shared.IEntityPropertyStates CreatePropertyStates(global::Sungero.Domain.Shared.IEntity entity)
    {
      return new global::Sungero.RecordManagement.Shared.OrderPropertyStates(entity);
    }


    public new global::Sungero.RecordManagement.IOrderControlStates Controls
    {
      get { return (global::Sungero.RecordManagement.IOrderControlStates)base.Controls; }
    }

    protected override global::Sungero.Domain.Shared.IEntityControlStates CreateControlStates(global::Sungero.Domain.Shared.IEntity entity)
    {
      return new global::Sungero.RecordManagement.Shared.OrderControlStates(entity);
    }

    public new global::Sungero.RecordManagement.IOrderPageStates Pages
    {
      get { return (global::Sungero.RecordManagement.IOrderPageStates)base.Pages; }
    }

    protected override global::Sungero.Domain.Shared.IEntityPageStates CreatePageStates(global::Sungero.Domain.Shared.IEntity entity)
    {
      return new global::Sungero.RecordManagement.Shared.OrderPageStates(entity);
    }

  }


  public class OrderControlStates : 
    global::Sungero.RecordManagement.Shared.OrderBaseControlStates, global::Sungero.RecordManagement.IOrderControlStates
  {

    protected internal OrderControlStates(global::Sungero.Domain.Shared.IEntity entity) : base(entity) { }
  }
  public class OrderPageStates : 
    global::Sungero.RecordManagement.Shared.OrderBasePageStates, global::Sungero.RecordManagement.IOrderPageStates
  {

    protected internal OrderPageStates(global::Sungero.Domain.Shared.IEntity entity) : base(entity) { }
  }

  public class OrderPropertyStates : 
    global::Sungero.RecordManagement.Shared.OrderBasePropertyStates, global::Sungero.RecordManagement.IOrderPropertyStates
  {
            public new global::Sungero.RecordManagement.IOrderVersionsCollectionPropertyState<global::Sungero.RecordManagement.IOrderVersions> Versions
            {
              get { return (global::Sungero.RecordManagement.IOrderVersionsCollectionPropertyState<global::Sungero.RecordManagement.IOrderVersions>)base.Versions; }
            }

            protected override global::Sungero.Content.IElectronicDocumentVersionsCollectionPropertyState<global::Sungero.Content.IElectronicDocumentVersions> CreateVersionsState(global::Sungero.Domain.Shared.IEntity entity, string propertyName)
            {
              return new global::Sungero.RecordManagement.Shared.OrderVersionsCollectionPropertyState<global::Sungero.RecordManagement.IOrderVersions>(entity, propertyName);
            }
            public new global::Sungero.RecordManagement.IOrderTrackingCollectionPropertyState<global::Sungero.RecordManagement.IOrderTracking> Tracking
            {
              get { return (global::Sungero.RecordManagement.IOrderTrackingCollectionPropertyState<global::Sungero.RecordManagement.IOrderTracking>)base.Tracking; }
            }

            protected override global::Sungero.Docflow.IOfficialDocumentTrackingCollectionPropertyState<global::Sungero.Docflow.IOfficialDocumentTracking> CreateTrackingState(global::Sungero.Domain.Shared.IEntity entity, string propertyName)
            {
              return new global::Sungero.RecordManagement.Shared.OrderTrackingCollectionPropertyState<global::Sungero.RecordManagement.IOrderTracking>(entity, propertyName);
            }


    protected internal OrderPropertyStates(global::Sungero.Domain.Shared.IEntity entity) : base(entity) { }
  }

}

// ==================================================================
// OrderEventArgs.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagement.Shared
{  
}

// ==================================================================
// OrderInfo.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagement.Shared
{
  public class OrderInfo : 
    global::Sungero.RecordManagement.Shared.OrderBaseInfo, global::Sungero.RecordManagement.IOrderInfo
  {
    public OrderInfo(global::System.Type entityType) : base(entityType) { }

    public new global::Sungero.RecordManagement.IOrderPropertiesInfo Properties
    {
      get { return (global::Sungero.RecordManagement.IOrderPropertiesInfo)base.Properties; }
    }

    protected override global::Sungero.Domain.Shared.IEntityPropertiesInfo CreateEntityPropertiesInfo(global::System.Type entityType)
    {
      return new global::Sungero.RecordManagement.Shared.OrderPropertiesInfo(entityType);
    }

  }

  public class OrderPropertiesInfo : 
    global::Sungero.RecordManagement.Shared.OrderBasePropertiesInfo, global::Sungero.RecordManagement.IOrderPropertiesInfo
  {
        public new global::Sungero.Domain.Shared.ICollectionPropertyInfo<global::Sungero.RecordManagement.IOrderVersionsPropertiesInfo> Versions
        {
          get
          {
             var propertyMetadata = this.GetPropertyMetadata<global::Sungero.Metadata.CollectionPropertyMetadata>("Versions");
             return new global::Sungero.Domain.Shared.CollectionPropertyInfo<global::Sungero.RecordManagement.IOrderVersionsPropertiesInfo>(propertyMetadata);
          }
        }
        public new global::Sungero.Domain.Shared.ICollectionPropertyInfo<global::Sungero.RecordManagement.IOrderTrackingPropertiesInfo> Tracking
        {
          get
          {
             var propertyMetadata = this.GetPropertyMetadata<global::Sungero.Metadata.CollectionPropertyMetadata>("Tracking");
             return new global::Sungero.Domain.Shared.CollectionPropertyInfo<global::Sungero.RecordManagement.IOrderTrackingPropertiesInfo>(propertyMetadata);
          }
        }


    protected internal OrderPropertiesInfo(global::System.Type entityType) : base(entityType) { }
  }

}

// ==================================================================
// OrderHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagement
{
  public partial class OrderSharedHandlers : global::Sungero.RecordManagement.OrderBaseSharedHandlers
  {
    private global::Sungero.RecordManagement.IOrder _obj
    {
      get { return (global::Sungero.RecordManagement.IOrder)this.Entity; }
    }


    public OrderSharedHandlers(global::Sungero.RecordManagement.IOrder entity) : base(entity)
    {
    }
  }

}

// ==================================================================
// OrderResources.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagement.Shared.Order
{
  /// <summary>
  /// Represents Order resources.
  /// </summary>
  public class OrderResources : global::Sungero.RecordManagement.Shared.OrderBase.OrderBaseResources, global::Sungero.RecordManagement.Order.IOrderResources
  {
  }
}

// ==================================================================
// OrderSharedFunctions.g.cs
// ==================================================================

namespace Sungero.RecordManagement.Shared
{
  public partial class OrderFunctions : global::Sungero.RecordManagement.Shared.OrderBaseFunctions
  {
    private global::Sungero.RecordManagement.IOrder _obj
    {
      get { return (global::Sungero.RecordManagement.IOrder)this.Entity; }
    }

    public OrderFunctions(global::Sungero.RecordManagement.IOrder entity) : base(entity) { }
  }
}

// ==================================================================
// OrderFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagement.Functions
{
  internal static class Order
  {
  }
}

// ==================================================================
// OrderFilterState.g.cs
// ==================================================================

namespace Sungero.RecordManagement.Shared.Order
{

  public class OrderFilterInfo : global::Sungero.RecordManagement.Shared.OrderBase.OrderBaseFilterInfo,
    global::Sungero.RecordManagement.IOrderFilterInfo
  {
  }

  public class OrderFilterState : global::Sungero.RecordManagement.Shared.OrderBase.OrderBaseFilterState,
    global::Sungero.RecordManagement.IOrderFilterState
  {



    public new Sungero.RecordManagement.IOrderFilterInfo Info
    {
      get
      {
        return (Sungero.RecordManagement.IOrderFilterInfo) base.Info;
      }
    }
    protected override global::Sungero.Domain.Shared.IFilterInfo CreateFilterInfo()
    {
      return new Sungero.RecordManagement.Shared.Order.OrderFilterInfo();
    }

  }
}

// ==================================================================
// OrderSharedPublicFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagement.Shared
{
  public class OrderSharedPublicFunctions : global::Sungero.RecordManagement.Shared.IOrderSharedPublicFunctions
  {
  }
}
