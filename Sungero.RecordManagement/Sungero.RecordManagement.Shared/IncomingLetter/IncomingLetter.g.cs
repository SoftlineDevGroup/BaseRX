
// ==================================================================
// IncomingLetterState.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagement.Shared
{
  public class IncomingLetterState : 
    global::Sungero.Docflow.Shared.IncomingDocumentBaseState, global::Sungero.RecordManagement.IIncomingLetterState
  {
    public IncomingLetterState(global::Sungero.RecordManagement.IIncomingLetter entity) : base(entity) { }

    public new global::Sungero.RecordManagement.IIncomingLetterPropertyStates Properties
    {
      get { return (global::Sungero.RecordManagement.IIncomingLetterPropertyStates)base.Properties; }
    }

    protected override global::Sungero.Domain.Shared.IEntityPropertyStates CreatePropertyStates(global::Sungero.Domain.Shared.IEntity entity)
    {
      return new global::Sungero.RecordManagement.Shared.IncomingLetterPropertyStates(entity);
    }


    public new global::Sungero.RecordManagement.IIncomingLetterControlStates Controls
    {
      get { return (global::Sungero.RecordManagement.IIncomingLetterControlStates)base.Controls; }
    }

    protected override global::Sungero.Domain.Shared.IEntityControlStates CreateControlStates(global::Sungero.Domain.Shared.IEntity entity)
    {
      return new global::Sungero.RecordManagement.Shared.IncomingLetterControlStates(entity);
    }

    public new global::Sungero.RecordManagement.IIncomingLetterPageStates Pages
    {
      get { return (global::Sungero.RecordManagement.IIncomingLetterPageStates)base.Pages; }
    }

    protected override global::Sungero.Domain.Shared.IEntityPageStates CreatePageStates(global::Sungero.Domain.Shared.IEntity entity)
    {
      return new global::Sungero.RecordManagement.Shared.IncomingLetterPageStates(entity);
    }

  }


  public class IncomingLetterControlStates : 
    global::Sungero.Docflow.Shared.IncomingDocumentBaseControlStates, global::Sungero.RecordManagement.IIncomingLetterControlStates
  {

    protected internal IncomingLetterControlStates(global::Sungero.Domain.Shared.IEntity entity) : base(entity) { }
  }
  public class IncomingLetterPageStates : 
    global::Sungero.Docflow.Shared.IncomingDocumentBasePageStates, global::Sungero.RecordManagement.IIncomingLetterPageStates
  {

    protected internal IncomingLetterPageStates(global::Sungero.Domain.Shared.IEntity entity) : base(entity) { }
  }

  public class IncomingLetterPropertyStates : 
    global::Sungero.Docflow.Shared.IncomingDocumentBasePropertyStates, global::Sungero.RecordManagement.IIncomingLetterPropertyStates
  {
            public new global::Sungero.RecordManagement.IIncomingLetterVersionsCollectionPropertyState<global::Sungero.RecordManagement.IIncomingLetterVersions> Versions
            {
              get { return (global::Sungero.RecordManagement.IIncomingLetterVersionsCollectionPropertyState<global::Sungero.RecordManagement.IIncomingLetterVersions>)base.Versions; }
            }

            protected override global::Sungero.Content.IElectronicDocumentVersionsCollectionPropertyState<global::Sungero.Content.IElectronicDocumentVersions> CreateVersionsState(global::Sungero.Domain.Shared.IEntity entity, string propertyName)
            {
              return new global::Sungero.RecordManagement.Shared.IncomingLetterVersionsCollectionPropertyState<global::Sungero.RecordManagement.IIncomingLetterVersions>(entity, propertyName);
            }
            public new global::Sungero.RecordManagement.IIncomingLetterTrackingCollectionPropertyState<global::Sungero.RecordManagement.IIncomingLetterTracking> Tracking
            {
              get { return (global::Sungero.RecordManagement.IIncomingLetterTrackingCollectionPropertyState<global::Sungero.RecordManagement.IIncomingLetterTracking>)base.Tracking; }
            }

            protected override global::Sungero.Docflow.IOfficialDocumentTrackingCollectionPropertyState<global::Sungero.Docflow.IOfficialDocumentTracking> CreateTrackingState(global::Sungero.Domain.Shared.IEntity entity, string propertyName)
            {
              return new global::Sungero.RecordManagement.Shared.IncomingLetterTrackingCollectionPropertyState<global::Sungero.RecordManagement.IIncomingLetterTracking>(entity, propertyName);
            }
            public global::Sungero.Domain.Shared.IPropertyState<global::Sungero.Parties.IContact> SignedBy 
            {
              get { return this.InternalSignedBy; }
            }

            protected virtual global::Sungero.Domain.Shared.IPropertyState<global::Sungero.Parties.IContact> InternalSignedBy
            {
              get { return this.GetPropertyState<global::Sungero.Parties.IContact>("SignedBy"); }
            }
            public global::Sungero.Domain.Shared.IPropertyState<global::Sungero.Parties.IContact> Contact 
            {
              get { return this.InternalContact; }
            }

            protected virtual global::Sungero.Domain.Shared.IPropertyState<global::Sungero.Parties.IContact> InternalContact
            {
              get { return this.GetPropertyState<global::Sungero.Parties.IContact>("Contact"); }
            }


    protected internal IncomingLetterPropertyStates(global::Sungero.Domain.Shared.IEntity entity) : base(entity) { }
  }

}

// ==================================================================
// IncomingLetterEventArgs.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagement.Shared
{  
    public class IncomingLetterSignedByChangedEventArgs : global::Sungero.Domain.Shared.PropertyChangedEventArgs<global::Sungero.Parties.IContact>
    {
      public IncomingLetterSignedByChangedEventArgs(global::Sungero.Domain.Shared.IPropertyState<global::Sungero.Parties.IContact> state, global::Sungero.Parties.IContact newValue, global::Sungero.Domain.Shared.IEntity entity): base(state, newValue, entity) { }
    }

    public class IncomingLetterContactChangedEventArgs : global::Sungero.Domain.Shared.PropertyChangedEventArgs<global::Sungero.Parties.IContact>
    {
      public IncomingLetterContactChangedEventArgs(global::Sungero.Domain.Shared.IPropertyState<global::Sungero.Parties.IContact> state, global::Sungero.Parties.IContact newValue, global::Sungero.Domain.Shared.IEntity entity): base(state, newValue, entity) { }
    }

}

// ==================================================================
// IncomingLetterInfo.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagement.Shared
{
  public class IncomingLetterInfo : 
    global::Sungero.Docflow.Shared.IncomingDocumentBaseInfo, global::Sungero.RecordManagement.IIncomingLetterInfo
  {
    public IncomingLetterInfo(global::System.Type entityType) : base(entityType) { }

    public new global::Sungero.RecordManagement.IIncomingLetterPropertiesInfo Properties
    {
      get { return (global::Sungero.RecordManagement.IIncomingLetterPropertiesInfo)base.Properties; }
    }

    public new global::Sungero.RecordManagement.IIncomingLetterActionsInfo Actions
    {
      get { return (global::Sungero.RecordManagement.IIncomingLetterActionsInfo)base.Actions; }
    }

    protected override global::Sungero.Domain.Shared.IEntityPropertiesInfo CreateEntityPropertiesInfo(global::System.Type entityType)
    {
      return new global::Sungero.RecordManagement.Shared.IncomingLetterPropertiesInfo(entityType);
    }

    protected override global::Sungero.Domain.Shared.IEntityActionsInfo CreateEntityActionsInfo(global::System.Type entityType)
    {
      return new global::Sungero.RecordManagement.Shared.IncomingLetterActionsInfo(entityType);
    }
  }

  public class IncomingLetterPropertiesInfo : 
    global::Sungero.Docflow.Shared.IncomingDocumentBasePropertiesInfo, global::Sungero.RecordManagement.IIncomingLetterPropertiesInfo
  {
        public new global::Sungero.Domain.Shared.ICollectionPropertyInfo<global::Sungero.RecordManagement.IIncomingLetterVersionsPropertiesInfo> Versions
        {
          get
          {
             var propertyMetadata = this.GetPropertyMetadata<global::Sungero.Metadata.CollectionPropertyMetadata>("Versions");
             return new global::Sungero.Domain.Shared.CollectionPropertyInfo<global::Sungero.RecordManagement.IIncomingLetterVersionsPropertiesInfo>(propertyMetadata);
          }
        }
        public new global::Sungero.Domain.Shared.ICollectionPropertyInfo<global::Sungero.RecordManagement.IIncomingLetterTrackingPropertiesInfo> Tracking
        {
          get
          {
             var propertyMetadata = this.GetPropertyMetadata<global::Sungero.Metadata.CollectionPropertyMetadata>("Tracking");
             return new global::Sungero.Domain.Shared.CollectionPropertyInfo<global::Sungero.RecordManagement.IIncomingLetterTrackingPropertiesInfo>(propertyMetadata);
          }
        }
        public global::Sungero.Domain.Shared.INavigationPropertyInfo<global::Sungero.Parties.IContactInfo, global::Sungero.Parties.IContact> SignedBy 
        {
          get
          {
             var propertyMetadata = this.GetPropertyMetadata<global::Sungero.Metadata.NavigationPropertyMetadata>("SignedBy");
             return new global::Sungero.Domain.Shared.NavigationPropertyInfo<global::Sungero.Parties.IContactInfo, global::Sungero.Parties.IContact>(propertyMetadata);
          }
        }
        public global::Sungero.Domain.Shared.INavigationPropertyInfo<global::Sungero.Parties.IContactInfo, global::Sungero.Parties.IContact> Contact 
        {
          get
          {
             var propertyMetadata = this.GetPropertyMetadata<global::Sungero.Metadata.NavigationPropertyMetadata>("Contact");
             return new global::Sungero.Domain.Shared.NavigationPropertyInfo<global::Sungero.Parties.IContactInfo, global::Sungero.Parties.IContact>(propertyMetadata);
          }
        }


    protected internal IncomingLetterPropertiesInfo(global::System.Type entityType) : base(entityType) { }
  }

  public class IncomingLetterActionsInfo : 
    global::Sungero.Docflow.Shared.IncomingDocumentBaseActionsInfo, global::Sungero.RecordManagement.IIncomingLetterActionsInfo
  {
        public global::Sungero.Domain.Shared.IActionInfo ShowDuplicates 
        {
          get { return new global::Sungero.Domain.Shared.ActionInfo(this.GetActionMetadata("ShowDuplicates")); }
        }


    protected internal IncomingLetterActionsInfo(global::System.Type entityType) : base(entityType) { }
  }
}

// ==================================================================
// IncomingLetterHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagement
{
  public partial class IncomingLetterSharedHandlers : global::Sungero.Docflow.IncomingDocumentBaseSharedHandlers
  {
    private global::Sungero.RecordManagement.IIncomingLetter _obj
    {
      get { return (global::Sungero.RecordManagement.IIncomingLetter)this.Entity; }
    }


    public IncomingLetterSharedHandlers(global::Sungero.RecordManagement.IIncomingLetter entity) : base(entity)
    {
    }
  }

}

// ==================================================================
// IncomingLetterResources.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagement.Shared.IncomingLetter
{
  /// <summary>
  /// Represents IncomingLetter resources.
  /// </summary>
  public class IncomingLetterResources : global::Sungero.Docflow.Shared.IncomingDocumentBase.IncomingDocumentBaseResources, global::Sungero.RecordManagement.IncomingLetter.IIncomingLetterResources
  {
    public virtual global::CommonLibrary.LocalizedString CorrespondentFrom
    {
      get
      {
        return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.RecordManagement.IIncomingLetter) , "CorrespondentFrom");
      }
    }

    public virtual global::CommonLibrary.LocalizedString CorrespondentFromFormat(params object[] args)
    {
      return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.RecordManagement.IIncomingLetter), "CorrespondentFrom", false, args);
    }
    public virtual global::CommonLibrary.LocalizedString DuplicateNotFound
    {
      get
      {
        return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.RecordManagement.IIncomingLetter) , "DuplicateNotFound");
      }
    }

    public virtual global::CommonLibrary.LocalizedString DuplicateNotFoundFormat(params object[] args)
    {
      return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.RecordManagement.IIncomingLetter), "DuplicateNotFound", false, args);
    }
    public virtual global::CommonLibrary.LocalizedString DuplicateDetected
    {
      get
      {
        return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.RecordManagement.IIncomingLetter) , "DuplicateDetected");
      }
    }

    public virtual global::CommonLibrary.LocalizedString DuplicateDetectedFormat(params object[] args)
    {
      return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.RecordManagement.IIncomingLetter), "DuplicateDetected", false, args);
    }

  }
}

// ==================================================================
// IncomingLetterSharedFunctions.g.cs
// ==================================================================

namespace Sungero.RecordManagement.Shared
{
  public partial class IncomingLetterFunctions : global::Sungero.Docflow.Shared.IncomingDocumentBaseFunctions
  {
    private global::Sungero.RecordManagement.IIncomingLetter _obj
    {
      get { return (global::Sungero.RecordManagement.IIncomingLetter)this.Entity; }
    }

    public IncomingLetterFunctions(global::Sungero.RecordManagement.IIncomingLetter entity) : base(entity) { }
  }
}

// ==================================================================
// IncomingLetterFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagement.Functions
{
  internal static class IncomingLetter
  {
    /// <redirect project="Sungero.RecordManagement.Shared" type="Sungero.RecordManagement.Shared.IncomingLetterFunctions" />
    internal static  global::System.Boolean HaveDuplicates(global::Sungero.RecordManagement.IIncomingLetter letter, global::Sungero.Docflow.IDocumentKind documentKind, global::Sungero.Company.IBusinessUnit businessUnit, global::System.String correspondentNumber, global::System.Nullable<global::System.DateTime> dated, global::Sungero.Parties.ICounterparty correspondent)
    {
      return global::Sungero.RecordManagement.Shared.IncomingLetterFunctions.HaveDuplicates(letter, documentKind, businessUnit, correspondentNumber, dated, correspondent);
    }
    /// <redirect project="Sungero.RecordManagement.Shared" type="Sungero.RecordManagement.Shared.IncomingLetterFunctions" />
    internal static  void FillName(global::Sungero.RecordManagement.IIncomingLetter incomingLetter)
    {
      var functions = (global::Sungero.RecordManagement.Shared.IncomingLetterFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)incomingLetter).FunctionsContainer.SharedFunctions;
    functions.FillName();
    }
    /// <redirect project="Sungero.RecordManagement.Shared" type="Sungero.RecordManagement.Shared.IncomingLetterFunctions" />
    internal static  void ChangeDocumentPropertiesAccess(global::Sungero.RecordManagement.IIncomingLetter incomingLetter, global::System.Boolean isEnabled, global::System.Boolean isRepeatRegister)
    {
      var functions = (global::Sungero.RecordManagement.Shared.IncomingLetterFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)incomingLetter).FunctionsContainer.SharedFunctions;
    functions.ChangeDocumentPropertiesAccess(isEnabled, isRepeatRegister);
    }
    /// <redirect project="Sungero.RecordManagement.Shared" type="Sungero.RecordManagement.Shared.IncomingLetterFunctions" />
    internal static  void SetRequiredProperties(global::Sungero.RecordManagement.IIncomingLetter incomingLetter)
    {
      var functions = (global::Sungero.RecordManagement.Shared.IncomingLetterFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)incomingLetter).FunctionsContainer.SharedFunctions;
    functions.SetRequiredProperties();
    }
    /// <redirect project="Sungero.RecordManagement.Shared" type="Sungero.RecordManagement.Shared.IncomingLetterFunctions" />
    internal static  global::System.Boolean IsVerificationModeSupported(global::Sungero.RecordManagement.IIncomingLetter incomingLetter)
    {
      var functions = (global::Sungero.RecordManagement.Shared.IncomingLetterFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)incomingLetter).FunctionsContainer.SharedFunctions;
      return functions.IsVerificationModeSupported();
    }
    /// <redirect project="Sungero.RecordManagement.Shared" type="Sungero.RecordManagement.Shared.IncomingLetterFunctions" />
    internal static  global::System.Boolean HasEmptyRequiredProperties(global::Sungero.RecordManagement.IIncomingLetter incomingLetter)
    {
      var functions = (global::Sungero.RecordManagement.Shared.IncomingLetterFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)incomingLetter).FunctionsContainer.SharedFunctions;
      return functions.HasEmptyRequiredProperties();
    }

    internal static class Remote
    {
      /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.IncomingLetterFunctions" />
      internal static  global::System.Linq.IQueryable<global::Sungero.RecordManagement.IIncomingLetter> GetDuplicates(global::Sungero.RecordManagement.IIncomingLetter letter, global::Sungero.Docflow.IDocumentKind documentKind, global::Sungero.Company.IBusinessUnit businessUnit, global::System.String inNumber, global::System.Nullable<global::System.DateTime> dated, global::Sungero.Parties.ICounterparty correspondent)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::System.Linq.IQueryable<global::Sungero.RecordManagement.IIncomingLetter>>(
          global::System.Guid.Parse("8dd00491-8fd0-4a7a-9cf3-8b6dc2e6455d"),
          "GetDuplicates(global::Sungero.RecordManagement.IIncomingLetter,global::Sungero.Docflow.IDocumentKind,global::Sungero.Company.IBusinessUnit,global::System.String,global::System.Nullable<global::System.DateTime>,global::Sungero.Parties.ICounterparty)"
      , letter, documentKind, businessUnit, inNumber, dated, correspondent);
      }

    }
  }
}

// ==================================================================
// IncomingLetterFilterState.g.cs
// ==================================================================

namespace Sungero.RecordManagement.Shared.IncomingLetter
{

  public class IncomingLetterFilterInfo : global::Sungero.Docflow.Shared.IncomingDocumentBase.IncomingDocumentBaseFilterInfo,
    global::Sungero.RecordManagement.IIncomingLetterFilterInfo
  {
  }

  public class IncomingLetterFilterState : global::Sungero.Docflow.Shared.IncomingDocumentBase.IncomingDocumentBaseFilterState,
    global::Sungero.RecordManagement.IIncomingLetterFilterState
  {



    public new Sungero.RecordManagement.IIncomingLetterFilterInfo Info
    {
      get
      {
        return (Sungero.RecordManagement.IIncomingLetterFilterInfo) base.Info;
      }
    }
    protected override global::Sungero.Domain.Shared.IFilterInfo CreateFilterInfo()
    {
      return new Sungero.RecordManagement.Shared.IncomingLetter.IncomingLetterFilterInfo();
    }

  }
}

// ==================================================================
// IncomingLetterSharedPublicFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagement.Shared
{
  public class IncomingLetterSharedPublicFunctions : global::Sungero.RecordManagement.Shared.IIncomingLetterSharedPublicFunctions
  {
  }
}
