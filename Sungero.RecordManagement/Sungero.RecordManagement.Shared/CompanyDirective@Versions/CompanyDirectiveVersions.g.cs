
// ==================================================================
// CompanyDirectiveVersionsState.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagement.Shared
{
  public class CompanyDirectiveVersionsState : 
    global::Sungero.RecordManagement.Shared.OrderBaseVersionsState, global::Sungero.RecordManagement.ICompanyDirectiveVersionsState
  {
    public CompanyDirectiveVersionsState(global::Sungero.RecordManagement.ICompanyDirectiveVersions entity) : base(entity) { }

    public new global::Sungero.RecordManagement.ICompanyDirectiveVersionsPropertyStates Properties
    {
      get { return (global::Sungero.RecordManagement.ICompanyDirectiveVersionsPropertyStates)base.Properties; }
    }

    protected override global::Sungero.Domain.Shared.IEntityPropertyStates CreatePropertyStates(global::Sungero.Domain.Shared.IEntity entity)
    {
      return new global::Sungero.RecordManagement.Shared.CompanyDirectiveVersionsPropertyStates(entity);
    }


  }


  public class CompanyDirectiveVersionsPropertyStates : 
    global::Sungero.RecordManagement.Shared.OrderBaseVersionsPropertyStates, global::Sungero.RecordManagement.ICompanyDirectiveVersionsPropertyStates
  {
            public new global::Sungero.Domain.Shared.IPropertyState<global::Sungero.RecordManagement.ICompanyDirective> ElectronicDocument
            {
              get { return (global::Sungero.Domain.Shared.IPropertyState<global::Sungero.RecordManagement.ICompanyDirective>)base.ElectronicDocument; }
            }

            protected override global::Sungero.Domain.Shared.IPropertyState<global::Sungero.Content.IElectronicDocument> InternalElectronicDocument
            {
              get { return this.GetPropertyState<global::Sungero.RecordManagement.ICompanyDirective>("ElectronicDocument"); }
            }


    protected internal CompanyDirectiveVersionsPropertyStates(global::Sungero.Domain.Shared.IEntity entity) : base(entity) { }
  }

  public class CompanyDirectiveVersionsCollectionPropertyState<T> :
    global::Sungero.RecordManagement.Shared.OrderBaseVersionsCollectionPropertyState<T>, global::Sungero.RecordManagement.ICompanyDirectiveVersionsCollectionPropertyState<T>
    where T : global::Sungero.RecordManagement.ICompanyDirectiveVersions
  {
    public new global::Sungero.RecordManagement.ICompanyDirectiveVersionsCollectionPropertyStates Properties
    {
      get { return (global::Sungero.RecordManagement.ICompanyDirectiveVersionsCollectionPropertyStates)base.Properties; }
    }

    protected override global::Sungero.Domain.Shared.IChildEntityCollectionPropertyStates CreatePropertyStates()
    {
      return new global::Sungero.RecordManagement.Shared.CompanyDirectiveVersionsCollectionPropertyStates(this.ChildEntityMetadata);
    }

    protected internal CompanyDirectiveVersionsCollectionPropertyState(global::Sungero.Domain.Shared.IEntity entity, string propertyName) : base(entity, propertyName) { }
  }

  public class CompanyDirectiveVersionsCollectionPropertyStates :
    global::Sungero.RecordManagement.Shared.OrderBaseVersionsCollectionPropertyStates, global::Sungero.RecordManagement.ICompanyDirectiveVersionsCollectionPropertyStates
  {

    protected internal CompanyDirectiveVersionsCollectionPropertyStates(global::Sungero.Metadata.EntityMetadata childEntityMetadata) : base(childEntityMetadata) { }
  }
}

// ==================================================================
// CompanyDirectiveVersionsEventArgs.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagement.Shared
{  
}

// ==================================================================
// CompanyDirectiveVersionsInfo.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagement.Shared
{
  public class CompanyDirectiveVersionsInfo : 
    global::Sungero.RecordManagement.Shared.OrderBaseVersionsInfo, global::Sungero.RecordManagement.ICompanyDirectiveVersionsInfo
  {
    public CompanyDirectiveVersionsInfo(global::System.Type entityType) : base(entityType) { }

    public new global::Sungero.RecordManagement.ICompanyDirectiveVersionsPropertiesInfo Properties
    {
      get { return (global::Sungero.RecordManagement.ICompanyDirectiveVersionsPropertiesInfo)base.Properties; }
    }

    protected override global::Sungero.Domain.Shared.IEntityPropertiesInfo CreateEntityPropertiesInfo(global::System.Type entityType)
    {
      return new global::Sungero.RecordManagement.Shared.CompanyDirectiveVersionsPropertiesInfo(entityType);
    }

  }

  public class CompanyDirectiveVersionsPropertiesInfo : 
    global::Sungero.RecordManagement.Shared.OrderBaseVersionsPropertiesInfo, global::Sungero.RecordManagement.ICompanyDirectiveVersionsPropertiesInfo
  {
        public new global::Sungero.Domain.Shared.INavigationPropertyInfo<global::Sungero.RecordManagement.ICompanyDirectiveInfo, global::Sungero.RecordManagement.ICompanyDirective> ElectronicDocument
        {
          get
          {
             var propertyMetadata = this.GetPropertyMetadata<global::Sungero.Metadata.NavigationPropertyMetadata>("ElectronicDocument");
             return new global::Sungero.Domain.Shared.NavigationPropertyInfo<global::Sungero.RecordManagement.ICompanyDirectiveInfo, global::Sungero.RecordManagement.ICompanyDirective>(propertyMetadata);
          }
        }


    protected internal CompanyDirectiveVersionsPropertiesInfo(global::System.Type entityType) : base(entityType) { }
  }

}
