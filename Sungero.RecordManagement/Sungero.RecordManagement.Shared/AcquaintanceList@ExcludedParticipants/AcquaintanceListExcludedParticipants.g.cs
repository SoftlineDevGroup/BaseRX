
// ==================================================================
// AcquaintanceListExcludedParticipantsState.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagement.Shared
{
  public class AcquaintanceListExcludedParticipantsState : 
    global::Sungero.Domain.Shared.ChildEntityState, global::Sungero.RecordManagement.IAcquaintanceListExcludedParticipantsState
  {
    public AcquaintanceListExcludedParticipantsState(global::Sungero.RecordManagement.IAcquaintanceListExcludedParticipants entity) : base(entity) { }

    public new global::Sungero.RecordManagement.IAcquaintanceListExcludedParticipantsPropertyStates Properties
    {
      get { return (global::Sungero.RecordManagement.IAcquaintanceListExcludedParticipantsPropertyStates)base.Properties; }
    }

    protected override global::Sungero.Domain.Shared.IEntityPropertyStates CreatePropertyStates(global::Sungero.Domain.Shared.IEntity entity)
    {
      return new global::Sungero.RecordManagement.Shared.AcquaintanceListExcludedParticipantsPropertyStates(entity);
    }


  }


  public class AcquaintanceListExcludedParticipantsPropertyStates : 
    global::Sungero.Domain.Shared.ChildEntityPropertyStates, global::Sungero.RecordManagement.IAcquaintanceListExcludedParticipantsPropertyStates
  {
            public global::Sungero.Domain.Shared.IPropertyState<global::Sungero.RecordManagement.IAcquaintanceList> AcquaintanceList 
            {
              get { return this.InternalAcquaintanceList; }
            }

            protected virtual global::Sungero.Domain.Shared.IPropertyState<global::Sungero.RecordManagement.IAcquaintanceList> InternalAcquaintanceList
            {
              get { return this.GetPropertyState<global::Sungero.RecordManagement.IAcquaintanceList>("AcquaintanceList"); }
            }
            public global::Sungero.Domain.Shared.IPropertyState<global::Sungero.CoreEntities.IRecipient> ExcludedParticipant 
            {
              get { return this.InternalExcludedParticipant; }
            }

            protected virtual global::Sungero.Domain.Shared.IPropertyState<global::Sungero.CoreEntities.IRecipient> InternalExcludedParticipant
            {
              get { return this.GetPropertyState<global::Sungero.CoreEntities.IRecipient>("ExcludedParticipant"); }
            }


    protected internal AcquaintanceListExcludedParticipantsPropertyStates(global::Sungero.Domain.Shared.IEntity entity) : base(entity) { }
  }

  public class AcquaintanceListExcludedParticipantsCollectionPropertyState<T> :
    global::Sungero.Domain.Shared.ChildEntityCollectionPropertyState<T>, global::Sungero.RecordManagement.IAcquaintanceListExcludedParticipantsCollectionPropertyState<T>
    where T : global::Sungero.RecordManagement.IAcquaintanceListExcludedParticipants
  {
    public new global::Sungero.RecordManagement.IAcquaintanceListExcludedParticipantsCollectionPropertyStates Properties
    {
      get { return (global::Sungero.RecordManagement.IAcquaintanceListExcludedParticipantsCollectionPropertyStates)base.Properties; }
    }

    protected override global::Sungero.Domain.Shared.IChildEntityCollectionPropertyStates CreatePropertyStates()
    {
      return new global::Sungero.RecordManagement.Shared.AcquaintanceListExcludedParticipantsCollectionPropertyStates(this.ChildEntityMetadata);
    }

    protected internal AcquaintanceListExcludedParticipantsCollectionPropertyState(global::Sungero.Domain.Shared.IEntity entity, string propertyName) : base(entity, propertyName) { }
  }

  public class AcquaintanceListExcludedParticipantsCollectionPropertyStates :
    global::Sungero.Domain.Shared.ChildEntityCollectionPropertyStates, global::Sungero.RecordManagement.IAcquaintanceListExcludedParticipantsCollectionPropertyStates
  {
        public global::Sungero.Domain.Shared.IChildPropertySummaryState AcquaintanceList
        {
          get { return this.GetChildPropertySummaryState("AcquaintanceList"); }
        }
        public global::Sungero.Domain.Shared.IChildPropertySummaryState ExcludedParticipant
        {
          get { return this.GetChildPropertySummaryState("ExcludedParticipant"); }
        }


    protected internal AcquaintanceListExcludedParticipantsCollectionPropertyStates(global::Sungero.Metadata.EntityMetadata childEntityMetadata) : base(childEntityMetadata) { }
  }
}

// ==================================================================
// AcquaintanceListExcludedParticipantsEventArgs.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagement.Shared
{  
    public class AcquaintanceListExcludedParticipantsExcludedParticipantChangedEventArgs : global::Sungero.Domain.Shared.PropertyChangedEventArgs<global::Sungero.CoreEntities.IRecipient>
    {
      public AcquaintanceListExcludedParticipantsExcludedParticipantChangedEventArgs(global::Sungero.Domain.Shared.IPropertyState<global::Sungero.CoreEntities.IRecipient> state, global::Sungero.CoreEntities.IRecipient newValue, global::Sungero.Domain.Shared.IEntity entity): base(state, newValue, entity) { }
    }

}

// ==================================================================
// AcquaintanceListExcludedParticipantsInfo.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagement.Shared
{
  public class AcquaintanceListExcludedParticipantsInfo : 
    global::Sungero.Domain.Shared.ChildEntityInfo, global::Sungero.RecordManagement.IAcquaintanceListExcludedParticipantsInfo
  {
    public AcquaintanceListExcludedParticipantsInfo(global::System.Type entityType) : base(entityType) { }

    public new global::Sungero.RecordManagement.IAcquaintanceListExcludedParticipantsPropertiesInfo Properties
    {
      get { return (global::Sungero.RecordManagement.IAcquaintanceListExcludedParticipantsPropertiesInfo)base.Properties; }
    }

    protected override global::Sungero.Domain.Shared.IEntityPropertiesInfo CreateEntityPropertiesInfo(global::System.Type entityType)
    {
      return new global::Sungero.RecordManagement.Shared.AcquaintanceListExcludedParticipantsPropertiesInfo(entityType);
    }

  }

  public class AcquaintanceListExcludedParticipantsPropertiesInfo : 
    global::Sungero.Domain.Shared.ChildEntityPropertiesInfo, global::Sungero.RecordManagement.IAcquaintanceListExcludedParticipantsPropertiesInfo
  {
        public global::Sungero.Domain.Shared.INavigationPropertyInfo<global::Sungero.RecordManagement.IAcquaintanceListInfo, global::Sungero.RecordManagement.IAcquaintanceList> AcquaintanceList 
        {
          get
          {
             var propertyMetadata = this.GetPropertyMetadata<global::Sungero.Metadata.NavigationPropertyMetadata>("AcquaintanceList");
             return new global::Sungero.Domain.Shared.NavigationPropertyInfo<global::Sungero.RecordManagement.IAcquaintanceListInfo, global::Sungero.RecordManagement.IAcquaintanceList>(propertyMetadata);
          }
        }
        public global::Sungero.Domain.Shared.INavigationPropertyInfo<global::Sungero.CoreEntities.IRecipientInfo, global::Sungero.CoreEntities.IRecipient> ExcludedParticipant 
        {
          get
          {
             var propertyMetadata = this.GetPropertyMetadata<global::Sungero.Metadata.NavigationPropertyMetadata>("ExcludedParticipant");
             return new global::Sungero.Domain.Shared.NavigationPropertyInfo<global::Sungero.CoreEntities.IRecipientInfo, global::Sungero.CoreEntities.IRecipient>(propertyMetadata);
          }
        }


    protected internal AcquaintanceListExcludedParticipantsPropertiesInfo(global::System.Type entityType) : base(entityType) { }
  }

}
