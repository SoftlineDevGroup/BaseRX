
// ==================================================================
// ReviewManagerAssignmentState.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagement.Shared
{
  public class ReviewManagerAssignmentState : 
    global::Sungero.Workflow.Shared.AssignmentState, global::Sungero.RecordManagement.IReviewManagerAssignmentState
  {
    public ReviewManagerAssignmentState(global::Sungero.RecordManagement.IReviewManagerAssignment entity) : base(entity) { }

    public new global::Sungero.RecordManagement.IReviewManagerAssignmentPropertyStates Properties
    {
      get { return (global::Sungero.RecordManagement.IReviewManagerAssignmentPropertyStates)base.Properties; }
    }

    protected override global::Sungero.Domain.Shared.IEntityPropertyStates CreatePropertyStates(global::Sungero.Domain.Shared.IEntity entity)
    {
      return new global::Sungero.RecordManagement.Shared.ReviewManagerAssignmentPropertyStates(entity);
    }


    public new global::Sungero.RecordManagement.IReviewManagerAssignmentControlStates Controls
    {
      get { return (global::Sungero.RecordManagement.IReviewManagerAssignmentControlStates)base.Controls; }
    }

    protected override global::Sungero.Domain.Shared.IEntityControlStates CreateControlStates(global::Sungero.Domain.Shared.IEntity entity)
    {
      return new global::Sungero.RecordManagement.Shared.ReviewManagerAssignmentControlStates(entity);
    }

    public new global::Sungero.RecordManagement.IReviewManagerAssignmentPageStates Pages
    {
      get { return (global::Sungero.RecordManagement.IReviewManagerAssignmentPageStates)base.Pages; }
    }

    protected override global::Sungero.Domain.Shared.IEntityPageStates CreatePageStates(global::Sungero.Domain.Shared.IEntity entity)
    {
      return new global::Sungero.RecordManagement.Shared.ReviewManagerAssignmentPageStates(entity);
    }

    #region Workflow attachments extention

    public global::Sungero.RecordManagement.IReviewManagerAssignmentAttachmentStates Attachments { get { return (global::Sungero.RecordManagement.IReviewManagerAssignmentAttachmentStates)this.AttachmentStates; }}

      protected override global::Sungero.Workflow.Interfaces.IWorkflowEntityAttachmentStates CreateAttachmentStates(global::Sungero.Workflow.Interfaces.IWorkflowEntity entity) 
      {
        return new ReviewManagerAssignmentAttachmentStates(entity);
      }

    #endregion
  }

  #region Workflow attachments extention

    public class ReviewManagerAssignmentAttachmentStates :
      global::Sungero.Workflow.Shared.AssignmentAttachmentStates, global::Sungero.RecordManagement.IReviewManagerAssignmentAttachmentStates
    {
      public global::Sungero.Workflow.Interfaces.IAttachmentGroupState ResolutionGroup 
      {
        get
        {
          return this.AttachmentGroups.GetAttachmentGroupState(global::System.Guid.Parse("2f76847e-e2a7-4414-92fe-5cfa01b1d9ea"));
        }
      }
      public global::Sungero.Workflow.Interfaces.IAttachmentGroupState AddendaGroup 
      {
        get
        {
          return this.AttachmentGroups.GetAttachmentGroupState(global::System.Guid.Parse("5320f83f-1364-4035-a7ab-44e457b9b388"));
        }
      }
      public global::Sungero.Workflow.Interfaces.IAttachmentGroupState OtherGroup 
      {
        get
        {
          return this.AttachmentGroups.GetAttachmentGroupState(global::System.Guid.Parse("4cee386f-c292-4735-af4c-3e2069c6b057"));
        }
      }
      public global::Sungero.Workflow.Interfaces.IAttachmentGroupState DocumentForReviewGroup 
      {
        get
        {
          return this.AttachmentGroups.GetAttachmentGroupState(global::System.Guid.Parse("88ec82fb-d8a8-4a36-a0d8-5c0bf42ff820"));
        }
      }


      protected internal ReviewManagerAssignmentAttachmentStates(global::Sungero.Workflow.Interfaces.IWorkflowEntity entity) : base(entity) { }
    }

  #endregion

  public class ReviewManagerAssignmentControlStates : 
    global::Sungero.Workflow.Shared.AssignmentControlStates, global::Sungero.RecordManagement.IReviewManagerAssignmentControlStates
  {

    protected internal ReviewManagerAssignmentControlStates(global::Sungero.Domain.Shared.IEntity entity) : base(entity) { }
  }
  public class ReviewManagerAssignmentPageStates : 
    global::Sungero.Workflow.Shared.AssignmentPageStates, global::Sungero.RecordManagement.IReviewManagerAssignmentPageStates
  {

    protected internal ReviewManagerAssignmentPageStates(global::Sungero.Domain.Shared.IEntity entity) : base(entity) { }
  }

  public class ReviewManagerAssignmentPropertyStates : 
    global::Sungero.Workflow.Shared.AssignmentPropertyStates, global::Sungero.RecordManagement.IReviewManagerAssignmentPropertyStates
  {
            public global::Sungero.Domain.Shared.IPropertyState<global::System.DateTime?> ReworkDeadline 
            {
              get { return this.GetPropertyState<global::System.DateTime?>("ReworkDeadline"); }
            }
            public global::Sungero.Domain.Shared.IPropertyState<global::Sungero.Company.IEmployee> Addressee 
            {
              get { return this.InternalAddressee; }
            }

            protected virtual global::Sungero.Domain.Shared.IPropertyState<global::Sungero.Company.IEmployee> InternalAddressee
            {
              get { return this.GetPropertyState<global::Sungero.Company.IEmployee>("Addressee"); }
            }


    protected internal ReviewManagerAssignmentPropertyStates(global::Sungero.Domain.Shared.IEntity entity) : base(entity) { }
  }

}

// ==================================================================
// ReviewManagerAssignmentEventArgs.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagement.Shared
{  
    public class ReviewManagerAssignmentAddresseeChangedEventArgs : global::Sungero.Domain.Shared.PropertyChangedEventArgs<global::Sungero.Company.IEmployee>
    {
      public ReviewManagerAssignmentAddresseeChangedEventArgs(global::Sungero.Domain.Shared.IPropertyState<global::Sungero.Company.IEmployee> state, global::Sungero.Company.IEmployee newValue, global::Sungero.Domain.Shared.IEntity entity): base(state, newValue, entity) { }
    }

}

// ==================================================================
// ReviewManagerAssignmentInfo.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagement.Shared
{
  public class ReviewManagerAssignmentInfo : 
    global::Sungero.Workflow.Shared.AssignmentInfo, global::Sungero.RecordManagement.IReviewManagerAssignmentInfo
  {
    public ReviewManagerAssignmentInfo(global::System.Type entityType) : base(entityType) { }

    public new global::Sungero.RecordManagement.IReviewManagerAssignmentPropertiesInfo Properties
    {
      get { return (global::Sungero.RecordManagement.IReviewManagerAssignmentPropertiesInfo)base.Properties; }
    }

    public new global::Sungero.RecordManagement.IReviewManagerAssignmentActionsInfo Actions
    {
      get { return (global::Sungero.RecordManagement.IReviewManagerAssignmentActionsInfo)base.Actions; }
    }

    protected override global::Sungero.Domain.Shared.IEntityPropertiesInfo CreateEntityPropertiesInfo(global::System.Type entityType)
    {
      return new global::Sungero.RecordManagement.Shared.ReviewManagerAssignmentPropertiesInfo(entityType);
    }

    protected override global::Sungero.Domain.Shared.IEntityActionsInfo CreateEntityActionsInfo(global::System.Type entityType)
    {
      return new global::Sungero.RecordManagement.Shared.ReviewManagerAssignmentActionsInfo(entityType);
    }
  }

  public class ReviewManagerAssignmentPropertiesInfo : 
    global::Sungero.Workflow.Shared.AssignmentPropertiesInfo, global::Sungero.RecordManagement.IReviewManagerAssignmentPropertiesInfo
  {
        public global::Sungero.Domain.Shared.IDateTimePropertyInfo ReworkDeadline 
        {
          get
          {
             var propertyMetadata = this.GetPropertyMetadata<global::Sungero.Metadata.DateTimePropertyMetadata>("ReworkDeadline");
             return new global::Sungero.Domain.Shared.DateTimePropertyInfo(propertyMetadata);
          }
        }
        public global::Sungero.Domain.Shared.INavigationPropertyInfo<global::Sungero.Company.IEmployeeInfo, global::Sungero.Company.IEmployee> Addressee 
        {
          get
          {
             var propertyMetadata = this.GetPropertyMetadata<global::Sungero.Metadata.NavigationPropertyMetadata>("Addressee");
             return new global::Sungero.Domain.Shared.NavigationPropertyInfo<global::Sungero.Company.IEmployeeInfo, global::Sungero.Company.IEmployee>(propertyMetadata);
          }
        }


    protected internal ReviewManagerAssignmentPropertiesInfo(global::System.Type entityType) : base(entityType) { }
  }

  public class ReviewManagerAssignmentActionsInfo : 
    global::Sungero.Workflow.Shared.AssignmentActionsInfo, global::Sungero.RecordManagement.IReviewManagerAssignmentActionsInfo
  {
        public global::Sungero.Domain.Shared.IActionInfo AddAssignment 
        {
          get { return new global::Sungero.Domain.Shared.ActionInfo(this.GetActionMetadata("AddAssignment")); }
        }
        public global::Sungero.Domain.Shared.IActionInfo AddResolution 
        {
          get { return new global::Sungero.Domain.Shared.ActionInfo(this.GetActionMetadata("AddResolution")); }
        }
        public global::Sungero.Domain.Shared.IActionInfo Explored 
        {
          get { return new global::Sungero.Domain.Shared.ActionInfo(this.GetActionMetadata("Explored")); }
        }
        public global::Sungero.Domain.Shared.IActionInfo CreateActionItem 
        {
          get { return new global::Sungero.Domain.Shared.ActionInfo(this.GetActionMetadata("CreateActionItem")); }
        }
        public global::Sungero.Domain.Shared.IActionInfo Forward 
        {
          get { return new global::Sungero.Domain.Shared.ActionInfo(this.GetActionMetadata("Forward")); }
        }


    protected internal ReviewManagerAssignmentActionsInfo(global::System.Type entityType) : base(entityType) { }
  }
}

// ==================================================================
// ReviewManagerAssignmentHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagement
{
  public partial class ReviewManagerAssignmentSharedHandlers : global::Sungero.Workflow.AssignmentSharedHandlers
  {
    private global::Sungero.RecordManagement.IReviewManagerAssignment _obj
    {
      get { return (global::Sungero.RecordManagement.IReviewManagerAssignment)this.Entity; }
    }
    public virtual void ReworkDeadlineChanged(global::Sungero.Domain.Shared.DateTimePropertyChangedEventArgs e) { }


    public virtual void AddresseeChanged(global::Sungero.RecordManagement.Shared.ReviewManagerAssignmentAddresseeChangedEventArgs e) { }



    #region Workflow attachments extention

        public virtual void ResolutionGroupCreated(global::Sungero.Workflow.Interfaces.AttachmentCreatedEventArgs e) { }
        public virtual void ResolutionGroupAdded(global::Sungero.Workflow.Interfaces.AttachmentAddedEventArgs e) { }
        public virtual void ResolutionGroupDeleted(global::Sungero.Workflow.Interfaces.AttachmentDeletedEventArgs e) { }

        public virtual void AddendaGroupCreated(global::Sungero.Workflow.Interfaces.AttachmentCreatedEventArgs e) { }
        public virtual void AddendaGroupAdded(global::Sungero.Workflow.Interfaces.AttachmentAddedEventArgs e) { }
        public virtual void AddendaGroupDeleted(global::Sungero.Workflow.Interfaces.AttachmentDeletedEventArgs e) { }

        public virtual void OtherGroupCreated(global::Sungero.Workflow.Interfaces.AttachmentCreatedEventArgs e) { }
        public virtual void OtherGroupAdded(global::Sungero.Workflow.Interfaces.AttachmentAddedEventArgs e) { }
        public virtual void OtherGroupDeleted(global::Sungero.Workflow.Interfaces.AttachmentDeletedEventArgs e) { }

        public virtual void DocumentForReviewGroupCreated(global::Sungero.Workflow.Interfaces.AttachmentCreatedEventArgs e) { }
        public virtual void DocumentForReviewGroupAdded(global::Sungero.Workflow.Interfaces.AttachmentAddedEventArgs e) { }
        public virtual void DocumentForReviewGroupDeleted(global::Sungero.Workflow.Interfaces.AttachmentDeletedEventArgs e) { }


    #endregion

    public ReviewManagerAssignmentSharedHandlers(global::Sungero.RecordManagement.IReviewManagerAssignment entity) : base(entity)
    {
    }
  }

}

// ==================================================================
// ReviewManagerAssignmentResources.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagement.Shared.ReviewManagerAssignment
{
  /// <summary>
  /// Represents ReviewManagerAssignment resources.
  /// </summary>
  public class ReviewManagerAssignmentResources : global::Sungero.Workflow.Shared.Assignment.AssignmentResources, global::Sungero.RecordManagement.ReviewManagerAssignment.IReviewManagerAssignmentResources
  {
    public virtual global::CommonLibrary.LocalizedString ResolutionTextNeeded
    {
      get
      {
        return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.RecordManagement.IReviewManagerAssignment) , "ResolutionTextNeeded");
      }
    }

    public virtual global::CommonLibrary.LocalizedString ResolutionTextNeededFormat(params object[] args)
    {
      return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.RecordManagement.IReviewManagerAssignment), "ResolutionTextNeeded", false, args);
    }
    public virtual global::CommonLibrary.LocalizedString ConfirmResultIsExploredDescription
    {
      get
      {
        return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.RecordManagement.IReviewManagerAssignment) , "ConfirmResultIsExploredDescription");
      }
    }

    public virtual global::CommonLibrary.LocalizedString ConfirmResultIsExploredDescriptionFormat(params object[] args)
    {
      return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.RecordManagement.IReviewManagerAssignment), "ConfirmResultIsExploredDescription", false, args);
    }
    public virtual global::CommonLibrary.LocalizedString ResolutionAdded
    {
      get
      {
        return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.RecordManagement.IReviewManagerAssignment) , "ResolutionAdded");
      }
    }

    public virtual global::CommonLibrary.LocalizedString ResolutionAddedFormat(params object[] args)
    {
      return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.RecordManagement.IReviewManagerAssignment), "ResolutionAdded", false, args);
    }
    public virtual global::CommonLibrary.LocalizedString Explored
    {
      get
      {
        return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.RecordManagement.IReviewManagerAssignment) , "Explored");
      }
    }

    public virtual global::CommonLibrary.LocalizedString ExploredFormat(params object[] args)
    {
      return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.RecordManagement.IReviewManagerAssignment), "Explored", false, args);
    }
    public virtual global::CommonLibrary.LocalizedString AssignmentCreated
    {
      get
      {
        return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.RecordManagement.IReviewManagerAssignment) , "AssignmentCreated");
      }
    }

    public virtual global::CommonLibrary.LocalizedString AssignmentCreatedFormat(params object[] args)
    {
      return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.RecordManagement.IReviewManagerAssignment), "AssignmentCreated", false, args);
    }

  }
}

// ==================================================================
// ReviewManagerAssignmentSharedFunctions.g.cs
// ==================================================================

namespace Sungero.RecordManagement.Shared
{
  public partial class ReviewManagerAssignmentFunctions : global::Sungero.Workflow.Shared.AssignmentFunctions
  {
    private global::Sungero.RecordManagement.IReviewManagerAssignment _obj
    {
      get { return (global::Sungero.RecordManagement.IReviewManagerAssignment)this.Entity; }
    }

    public ReviewManagerAssignmentFunctions(global::Sungero.RecordManagement.IReviewManagerAssignment entity) : base(entity) { }
  }
}

// ==================================================================
// ReviewManagerAssignmentFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagement.Functions
{
  internal static class ReviewManagerAssignment
  {
  }
}

// ==================================================================
// ReviewManagerAssignmentFilterState.g.cs
// ==================================================================

namespace Sungero.RecordManagement.Shared.ReviewManagerAssignment
{

  public class ReviewManagerAssignmentFilterInfo : global::Sungero.Workflow.Shared.Assignment.AssignmentFilterInfo,
    global::Sungero.RecordManagement.IReviewManagerAssignmentFilterInfo
  {
  }

  public class ReviewManagerAssignmentFilterState : global::Sungero.Workflow.Shared.Assignment.AssignmentFilterState,
    global::Sungero.RecordManagement.IReviewManagerAssignmentFilterState
  {



    public new Sungero.RecordManagement.IReviewManagerAssignmentFilterInfo Info
    {
      get
      {
        return (Sungero.RecordManagement.IReviewManagerAssignmentFilterInfo) base.Info;
      }
    }
    protected override global::Sungero.Domain.Shared.IFilterInfo CreateFilterInfo()
    {
      return new Sungero.RecordManagement.Shared.ReviewManagerAssignment.ReviewManagerAssignmentFilterInfo();
    }

  }
}

// ==================================================================
// ReviewManagerAssignmentSharedPublicFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagement.Shared
{
  public class ReviewManagerAssignmentSharedPublicFunctions : global::Sungero.RecordManagement.Shared.IReviewManagerAssignmentSharedPublicFunctions
  {
  }
}

// ==================================================================
// ReviewManagerAssignmentAttachmentGroups.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagement.Shared
{

  public class ReviewManagerAssignmentResolutionGroupAttachments : global::Sungero.Workflow.Shared.WorkflowEntityAttachmentGroupDecorator,
    global::Sungero.RecordManagement.IReviewManagerAssignmentResolutionGroupAttachments
  {
      public global::System.Collections.Generic.ICollection<global::Sungero.RecordManagement.IActionItemExecutionTask> ActionItemExecutionTasks
      { 
        get 
        { 
          return this.GetAttachmentGroupCollection<global::Sungero.RecordManagement.IActionItemExecutionTask>();
        } 
      }


    public ReviewManagerAssignmentResolutionGroupAttachments(global::Sungero.Workflow.Interfaces.IWorkflowEntity entity) : base(entity, "2f76847e-e2a7-4414-92fe-5cfa01b1d9ea") { }
  }

  public class ReviewManagerAssignmentAddendaGroupAttachments : global::Sungero.Workflow.Shared.WorkflowEntityAttachmentGroupDecorator,
    global::Sungero.RecordManagement.IReviewManagerAssignmentAddendaGroupAttachments
  {

    public ReviewManagerAssignmentAddendaGroupAttachments(global::Sungero.Workflow.Interfaces.IWorkflowEntity entity) : base(entity, "5320f83f-1364-4035-a7ab-44e457b9b388") { }
  }

  public class ReviewManagerAssignmentOtherGroupAttachments : global::Sungero.Workflow.Shared.WorkflowEntityAttachmentGroupDecorator,
    global::Sungero.RecordManagement.IReviewManagerAssignmentOtherGroupAttachments
  {

    public ReviewManagerAssignmentOtherGroupAttachments(global::Sungero.Workflow.Interfaces.IWorkflowEntity entity) : base(entity, "4cee386f-c292-4735-af4c-3e2069c6b057") { }
  }

  public class ReviewManagerAssignmentDocumentForReviewGroupAttachments : global::Sungero.Workflow.Shared.WorkflowEntityAttachmentGroupDecorator,
    global::Sungero.RecordManagement.IReviewManagerAssignmentDocumentForReviewGroupAttachments
  {
      public global::System.Collections.Generic.ICollection<global::Sungero.Docflow.IOfficialDocument> OfficialDocuments
      { 
        get 
        { 
          return this.GetAttachmentGroupCollection<global::Sungero.Docflow.IOfficialDocument>();
        } 
      }


    public ReviewManagerAssignmentDocumentForReviewGroupAttachments(global::Sungero.Workflow.Interfaces.IWorkflowEntity entity) : base(entity, "88ec82fb-d8a8-4a36-a0d8-5c0bf42ff820") { }
  }

}

// ==================================================================
// ReviewManagerAssignmentExtendedSchemeVersions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagement.ReviewManagerAssignment
{

    /// <summary>
    /// Список версий схемы.
    /// </summary>
    public static class LayerSchemeVersions
    {
      public static readonly global::Sungero.Workflow.Shared.ExtendedSchemeVersion V1 =
        new global::Sungero.Workflow.Shared.ExtendedSchemeVersion(1, global::System.Guid.Parse("0745199f-eaac-4875-8563-40ed1e5ce317"));
      public static readonly global::Sungero.Workflow.Shared.ExtendedSchemeVersion V3 =
        new global::Sungero.Workflow.Shared.ExtendedSchemeVersion(3, global::System.Guid.Parse("443902d4-83db-485b-8b9c-af83507128d2"));
}

    public static class TaskExtensions
    {
      /// <summary>
      /// Получить версию схемы запущенной задачи.
      /// </summary>
      /// <param name="task">Задача.</param>
      /// <returns>Версия схемы запущенной задачи.</returns>
      public static global::Sungero.Workflow.Shared.ExtendedSchemeVersion GetStartedSchemeVersion(this global::Sungero.Workflow.ITask task)
      {
        return global::Sungero.Workflow.Shared.OverriddenTaskHelper.FindLayerSchemeVersionForTask(task,
          global::System.Guid.Parse("4ef03457-8b42-4239-a3c5-d4d05e61f0b6"));
      }
    }

}
