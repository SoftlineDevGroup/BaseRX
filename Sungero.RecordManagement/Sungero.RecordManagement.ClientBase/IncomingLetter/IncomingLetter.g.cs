
// ==================================================================
// IncomingLetterEventArgs.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagement.Client
{ 
  public class IncomingLetterSignedByValueInputEventArgs : global::Sungero.Presentation.ValueInputEventArgs<global::Sungero.Parties.IContact>
  {
    public IncomingLetterSignedByValueInputEventArgs(global::Sungero.Parties.IContact oldValue, global::Sungero.Parties.IContact newValue, global::Sungero.Domain.Shared.IEntity entity, global::Sungero.Domain.Shared.IPropertyInfo propertyInfo): base(oldValue, newValue, entity, propertyInfo) { }
  }

  public class IncomingLetterContactValueInputEventArgs : global::Sungero.Presentation.ValueInputEventArgs<global::Sungero.Parties.IContact>
  {
    public IncomingLetterContactValueInputEventArgs(global::Sungero.Parties.IContact oldValue, global::Sungero.Parties.IContact newValue, global::Sungero.Domain.Shared.IEntity entity, global::Sungero.Domain.Shared.IPropertyInfo propertyInfo): base(oldValue, newValue, entity, propertyInfo) { }
  }

}

// ==================================================================
// IncomingLetterHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagement
{

  public partial class IncomingLetterFilteringClientHandler
    : global::Sungero.Docflow.IncomingDocumentBaseFilteringClientHandler
  {
    private global::Sungero.RecordManagement.IIncomingLetterFilterState _filter
    {
      get
      {
        return (Sungero.RecordManagement.IIncomingLetterFilterState)this.Filter;
      }
    }

    public IncomingLetterFilteringClientHandler(global::Sungero.RecordManagement.IIncomingLetterFilterState filter)
    : base(filter)
    {
    }

    protected IncomingLetterFilteringClientHandler()
    {
    }

    public override void ValidateFilterPanel(global::Sungero.Domain.Client.ValidateFilterPanelEventArgs e)
    {
      base.ValidateFilterPanel(e);
    }
  }


  public partial class IncomingLetterClientHandlers : global::Sungero.Docflow.IncomingDocumentBaseClientHandlers
  {
    private global::Sungero.RecordManagement.IIncomingLetter _obj
    {
      get { return (global::Sungero.RecordManagement.IIncomingLetter)this.Entity; }
    }

    public IncomingLetterClientHandlers(global::Sungero.RecordManagement.IIncomingLetter entity) : base(entity)
    {
    }
  }

}

// ==================================================================
// IncomingLetterClientFunctions.g.cs
// ==================================================================

namespace Sungero.RecordManagement.Client
{
  public partial class IncomingLetterFunctions : global::Sungero.Docflow.Client.IncomingDocumentBaseFunctions
  {
    private global::Sungero.RecordManagement.IIncomingLetter _obj
    {
      get { return (global::Sungero.RecordManagement.IIncomingLetter)this.Entity; }
    }

    public IncomingLetterFunctions(global::Sungero.RecordManagement.IIncomingLetter entity) : base(entity) { }
  }
}

// ==================================================================
// IncomingLetterFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagement.Functions
{
  internal static class IncomingLetter
  {
    /// <redirect project="Sungero.RecordManagement.Shared" type="Sungero.RecordManagement.Shared.IncomingLetterFunctions" />
    internal static  global::System.Boolean HaveDuplicates(global::Sungero.RecordManagement.IIncomingLetter letter, global::Sungero.Docflow.IDocumentKind documentKind, global::Sungero.Company.IBusinessUnit businessUnit, global::System.String correspondentNumber, global::System.Nullable<global::System.DateTime> dated, global::Sungero.Parties.ICounterparty correspondent)
    {
      return global::Sungero.RecordManagement.Shared.IncomingLetterFunctions.HaveDuplicates(letter, documentKind, businessUnit, correspondentNumber, dated, correspondent);
    }
    /// <redirect project="Sungero.RecordManagement.Shared" type="Sungero.RecordManagement.Shared.IncomingLetterFunctions" />
    internal static  void FillName(global::Sungero.RecordManagement.IIncomingLetter incomingLetter)
    {
      var functions = (global::Sungero.RecordManagement.Shared.IncomingLetterFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)incomingLetter).FunctionsContainer.SharedFunctions;
    functions.FillName();
    }
    /// <redirect project="Sungero.RecordManagement.Shared" type="Sungero.RecordManagement.Shared.IncomingLetterFunctions" />
    internal static  void ChangeDocumentPropertiesAccess(global::Sungero.RecordManagement.IIncomingLetter incomingLetter, global::System.Boolean isEnabled, global::System.Boolean isRepeatRegister)
    {
      var functions = (global::Sungero.RecordManagement.Shared.IncomingLetterFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)incomingLetter).FunctionsContainer.SharedFunctions;
    functions.ChangeDocumentPropertiesAccess(isEnabled, isRepeatRegister);
    }
    /// <redirect project="Sungero.RecordManagement.Shared" type="Sungero.RecordManagement.Shared.IncomingLetterFunctions" />
    internal static  void SetRequiredProperties(global::Sungero.RecordManagement.IIncomingLetter incomingLetter)
    {
      var functions = (global::Sungero.RecordManagement.Shared.IncomingLetterFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)incomingLetter).FunctionsContainer.SharedFunctions;
    functions.SetRequiredProperties();
    }
    /// <redirect project="Sungero.RecordManagement.Shared" type="Sungero.RecordManagement.Shared.IncomingLetterFunctions" />
    internal static  global::System.Boolean IsVerificationModeSupported(global::Sungero.RecordManagement.IIncomingLetter incomingLetter)
    {
      var functions = (global::Sungero.RecordManagement.Shared.IncomingLetterFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)incomingLetter).FunctionsContainer.SharedFunctions;
      return functions.IsVerificationModeSupported();
    }
    /// <redirect project="Sungero.RecordManagement.Shared" type="Sungero.RecordManagement.Shared.IncomingLetterFunctions" />
    internal static  global::System.Boolean HasEmptyRequiredProperties(global::Sungero.RecordManagement.IIncomingLetter incomingLetter)
    {
      var functions = (global::Sungero.RecordManagement.Shared.IncomingLetterFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)incomingLetter).FunctionsContainer.SharedFunctions;
      return functions.HasEmptyRequiredProperties();
    }

    internal static class Remote
    {
      /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.IncomingLetterFunctions" />
      internal static  global::System.Linq.IQueryable<global::Sungero.RecordManagement.IIncomingLetter> GetDuplicates(global::Sungero.RecordManagement.IIncomingLetter letter, global::Sungero.Docflow.IDocumentKind documentKind, global::Sungero.Company.IBusinessUnit businessUnit, global::System.String inNumber, global::System.Nullable<global::System.DateTime> dated, global::Sungero.Parties.ICounterparty correspondent)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::System.Linq.IQueryable<global::Sungero.RecordManagement.IIncomingLetter>>(
          global::System.Guid.Parse("8dd00491-8fd0-4a7a-9cf3-8b6dc2e6455d"),
          "GetDuplicates(global::Sungero.RecordManagement.IIncomingLetter,global::Sungero.Docflow.IDocumentKind,global::Sungero.Company.IBusinessUnit,global::System.String,global::System.Nullable<global::System.DateTime>,global::Sungero.Parties.ICounterparty)"
      , letter, documentKind, businessUnit, inNumber, dated, correspondent);
      }

    }
  }
}

// ==================================================================
// IncomingLetterClientPublicFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagement.Client
{
  public class IncomingLetterClientPublicFunctions : global::Sungero.RecordManagement.Client.IIncomingLetterClientPublicFunctions
  {
  }
}

// ==================================================================
// IncomingLetterActions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagement.Client
{
  public partial class IncomingLetterActions : global::Sungero.Docflow.Client.IncomingDocumentBaseActions
  {
    private global::Sungero.RecordManagement.IIncomingLetter _obj { get { return (global::Sungero.RecordManagement.IIncomingLetter)this.Entity; } }
    public IncomingLetterActions(global::Sungero.RecordManagement.IIncomingLetter entity) : base(entity) { }
  }

  public partial class IncomingLetterCollectionActions : global::Sungero.Docflow.Client.IncomingDocumentBaseCollectionActions
  {
    private global::System.Collections.Generic.IEnumerable<global::Sungero.RecordManagement.IIncomingLetter> _objs
    { 
      get { return global::System.Linq.Enumerable.Cast<global::Sungero.RecordManagement.IIncomingLetter>(this.Entities); }
    }
  }

  public partial class IncomingLetterAnyChildEntityActions : global::Sungero.Docflow.Client.IncomingDocumentBaseAnyChildEntityActions
  {
  }

  public partial class IncomingLetterAnyChildEntityCollectionActions : global::Sungero.Docflow.Client.IncomingDocumentBaseAnyChildEntityCollectionActions
  {
  }

}
