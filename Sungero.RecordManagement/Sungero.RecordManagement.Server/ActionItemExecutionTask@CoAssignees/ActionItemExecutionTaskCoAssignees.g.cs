
// ==================================================================
// ActionItemExecutionTaskCoAssignees.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagement.Server
{
  public class ActionItemExecutionTaskCoAssigneesFilterForAssignee<TQueryEntity, TSourceEntity, TRootEntity>
    : global::Sungero.Domain.ChildEntityPropertyFilterBase<TQueryEntity, TSourceEntity, TRootEntity>
    where TQueryEntity : class, global::Sungero.Company.IEmployee
    where TSourceEntity : class, global::Sungero.RecordManagement.IActionItemExecutionTaskCoAssignees
    where TRootEntity : class, global::Sungero.RecordManagement.IActionItemExecutionTask
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, TSourceEntity sourceEntity, TRootEntity rootEntity)
    {
      var args = new global::Sungero.Domain.PropertyFilteringEventArgs(sourceEntity);
      var result = new global::Sungero.RecordManagement.ActionItemExecutionTaskCoAssigneesAssigneePropertyFilteringServerHandler<TQueryEntity>(sourceEntity, rootEntity).CoAssigneesAssigneeFiltering(query, args);
      if (args.DisableUiFiltering)
        global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public ActionItemExecutionTaskCoAssigneesFilterForAssignee(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class ActionItemExecutionTaskCoAssigneesSearchFilterForAssignee<TQueryEntity>
    : global::Sungero.Domain.SearchDialogPropertyFilter<TQueryEntity>
    where TQueryEntity : class, global::Sungero.CoreEntities.IRecipient
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, System.Guid entityType)
    {
      var args = new global::Sungero.Domain.PropertySearchDialogFilteringEventArgs(entityType);
      var result = new global::Sungero.RecordManagement.ActionItemExecutionTaskCoAssigneesAssigneeSearchPropertyFilteringServerHandler<TQueryEntity>().CoAssigneesAssigneeSearchDialogFiltering(query, args);
      if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public ActionItemExecutionTaskCoAssigneesSearchFilterForAssignee(string propertyName)
      : base(propertyName)
    {
    }
  }



  [global::Sungero.Domain.PropertyFilter(typeof(global::Sungero.RecordManagement.Server.ActionItemExecutionTaskCoAssigneesFilterForAssignee<global::Sungero.Company.IEmployee, global::Sungero.RecordManagement.IActionItemExecutionTaskCoAssignees, global::Sungero.RecordManagement.IActionItemExecutionTask>), "Assignee")]
  [global::Sungero.Domain.SearchPropertyFilter(typeof(global::Sungero.RecordManagement.Server.ActionItemExecutionTaskCoAssigneesSearchFilterForAssignee<global::Sungero.CoreEntities.IRecipient>), "Assignee")]


  public class ActionItemExecutionTaskCoAssignees :
    global::Sungero.Domain.ChildEntity, global::Sungero.RecordManagement.IActionItemExecutionTaskCoAssignees
  {
    public static new readonly global::System.Guid ClassTypeGuid = global::System.Guid.Parse("f87455f2-4292-42f8-9e2c-0b3bf34eac87");

    public override global::System.Guid TypeGuid
    {
      get { return global::Sungero.RecordManagement.Server.ActionItemExecutionTaskCoAssignees.ClassTypeGuid; }
    }

    public override string TypeName
    {
      get { return "Sungero.RecordManagement.IActionItemExecutionTaskCoAssignees, Sungero.Domain.Interfaces"; }
    }

    public new virtual global::Sungero.RecordManagement.IActionItemExecutionTaskCoAssigneesState State
    {
      get { return (global::Sungero.RecordManagement.IActionItemExecutionTaskCoAssigneesState)base.State; }
    }

    protected override global::Sungero.Domain.Shared.IEntityState CreateState()
    {
      return new global::Sungero.RecordManagement.Shared.ActionItemExecutionTaskCoAssigneesState(this);
    }

    public new virtual global::Sungero.RecordManagement.IActionItemExecutionTaskCoAssigneesInfo Info
    {
      get { return (global::Sungero.RecordManagement.IActionItemExecutionTaskCoAssigneesInfo)base.Info; }
    }


    public global::Sungero.RecordManagement.IActionItemExecutionTask ActionItemExecutionTask { get; set; }

    public override global::Sungero.Domain.Shared.IEntity RootEntity
    {
      get { return this.ActionItemExecutionTask; }
      set { this.ActionItemExecutionTask = (global::Sungero.RecordManagement.IActionItemExecutionTask)value; }
    }

    protected override object CreateSharedHandlers() {
      return new global::Sungero.RecordManagement.ActionItemExecutionTaskCoAssigneesSharedHandlers(this);
    }

    private global::System.Boolean? _AssignmentCreated;
    public virtual global::System.Boolean? AssignmentCreated
    {
      get
      {
        return this._AssignmentCreated;
      }

      set
      {
        this.SetPropertyValue("AssignmentCreated", this._AssignmentCreated, value, (propertyValue) => { this._AssignmentCreated = propertyValue; }, this.AssignmentCreatedChangedHandler);
      }
    }







    private global::Sungero.Company.IEmployee _Assignee;
    public virtual global::Sungero.Company.IEmployee Assignee
    {
      get
      {
        return this._Assignee;
      }

      set
      {
        this.SetPropertyValue("Assignee", this._Assignee, value, (propertyValue) => { this._Assignee = propertyValue; }, this.AssigneeChangedHandler);
      }
    }




    #region Framework events

    protected void AssigneeChangedHandler()
    {
      var args = new global::Sungero.RecordManagement.Shared.ActionItemExecutionTaskCoAssigneesAssigneeChangedEventArgs(this.State.Properties.Assignee, this.Assignee, this);
     ((global::Sungero.RecordManagement.ActionItemExecutionTaskCoAssigneesSharedHandlers)this.SharedHandlers).CoAssigneesAssigneeChanged(args);
    }

    protected void AssignmentCreatedChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.BooleanPropertyChangedEventArgs(this.State.Properties.AssignmentCreated, this.AssignmentCreated, this);
     ((global::Sungero.RecordManagement.ActionItemExecutionTaskCoAssigneesSharedHandlers)this.SharedHandlers).CoAssigneesAssignmentCreatedChanged(args);
    }



    #endregion


    public ActionItemExecutionTaskCoAssignees()
    {
    }

  }
}

// ==================================================================
// ActionItemExecutionTaskCoAssigneesHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagement
{
  public partial class ActionItemExecutionTaskCoAssigneesAssigneePropertyFilteringServerHandler<T>
    : global::Sungero.Domain.ChildEntityPropertyFilteringServerHandler
    where T : class, global::Sungero.Company.IEmployee
  {
    private global::Sungero.RecordManagement.IActionItemExecutionTaskCoAssignees _obj
    {
      get { return (global::Sungero.RecordManagement.IActionItemExecutionTaskCoAssignees)this.Entity; }
    }

    private global::Sungero.RecordManagement.IActionItemExecutionTask _root
    {
      get { return (global::Sungero.RecordManagement.IActionItemExecutionTask)this.Root; }
    }

    public virtual global::System.Linq.IQueryable<T> CoAssigneesAssigneeFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertyFilteringEventArgs e)
    {
      return query;
    }

    public ActionItemExecutionTaskCoAssigneesAssigneePropertyFilteringServerHandler(global::Sungero.RecordManagement.IActionItemExecutionTaskCoAssignees entity, global::Sungero.RecordManagement.IActionItemExecutionTask root)
      : base(entity, root)
    {
    }
  }

  public partial class ActionItemExecutionTaskCoAssigneesAssigneeSearchPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.SearchPropertyFilteringServerHandler
    where T : class, global::Sungero.CoreEntities.IRecipient
  {

    public virtual global::System.Linq.IQueryable<T> CoAssigneesAssigneeSearchDialogFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertySearchDialogFilteringEventArgs e)
    {
      return query;
    }

    public ActionItemExecutionTaskCoAssigneesAssigneeSearchPropertyFilteringServerHandler()
      : base()
    {
    }
  }



}

// ==================================================================
// ActionItemExecutionTaskCoAssigneesEventArgs.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagement.Server
{
}
