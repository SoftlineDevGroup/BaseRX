
// ==================================================================
// Module.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagement.Server
{
  public partial class RecordManagementModule : global::Sungero.Domain.Shared.ModuleBase
  {
    public override global::System.Guid Id
    {
      get { return global::System.Guid.Parse("4e25caec-c722-4740-bcfd-c4f803840ac6"); }
    }

    public override string Name
    {
      get { return "Sungero.RecordManagement"; }
    }

    public override void RegisterTypes()
    {
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.RecordManagement.Server.IModuleServerInitializationFunctions, global::Sungero.RecordManagement.Server.ModuleServerInitializationFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("8fee99ee-b3fd-49dd-9b48-e51b83597227"), new Sungero.RecordManagement.Shared.AcquaintanceAssignmentInfo(typeof(global::Sungero.RecordManagement.IAcquaintanceAssignment)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.RecordManagement.Server.IAcquaintanceAssignmentServerPublicFunctions, global::Sungero.RecordManagement.Server.AcquaintanceAssignmentServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.RecordManagement.Shared.IAcquaintanceAssignmentSharedPublicFunctions, global::Sungero.RecordManagement.Shared.AcquaintanceAssignmentSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("21540d9d-4b87-45b3-9a28-7bb1adebfe65"), new Sungero.RecordManagement.Shared.AcquaintanceAssignmentAcquaintanceVersionsInfo(typeof(global::Sungero.RecordManagement.IAcquaintanceAssignmentAcquaintanceVersions)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("e04a433b-5b48-40c2-993a-41370b9ebb8a"), new Sungero.RecordManagement.Shared.AcquaintanceFinishAssignmentInfo(typeof(global::Sungero.RecordManagement.IAcquaintanceFinishAssignment)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.RecordManagement.Server.IAcquaintanceFinishAssignmentServerPublicFunctions, global::Sungero.RecordManagement.Server.AcquaintanceFinishAssignmentServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.RecordManagement.Shared.IAcquaintanceFinishAssignmentSharedPublicFunctions, global::Sungero.RecordManagement.Shared.AcquaintanceFinishAssignmentSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("763e5d49-c131-4acc-9faf-b11371fe910b"), new Sungero.RecordManagement.Shared.AcquaintanceListInfo(typeof(global::Sungero.RecordManagement.IAcquaintanceList)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.RecordManagement.Server.IAcquaintanceListServerPublicFunctions, global::Sungero.RecordManagement.Server.AcquaintanceListServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.RecordManagement.Shared.IAcquaintanceListSharedPublicFunctions, global::Sungero.RecordManagement.Shared.AcquaintanceListSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("0f1e26fd-415a-4f74-a806-3bd76afb7fca"), new Sungero.RecordManagement.Shared.AcquaintanceListExcludedParticipantsInfo(typeof(global::Sungero.RecordManagement.IAcquaintanceListExcludedParticipants)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("8fe622f7-f208-498d-b00f-196b38edba14"), new Sungero.RecordManagement.Shared.AcquaintanceListParticipantsInfo(typeof(global::Sungero.RecordManagement.IAcquaintanceListParticipants)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("2d53959b-2cee-41f7-83c2-98ae1dbbd538"), new Sungero.RecordManagement.Shared.AcquaintanceTaskInfo(typeof(global::Sungero.RecordManagement.IAcquaintanceTask)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.RecordManagement.Server.IAcquaintanceTaskServerPublicFunctions, global::Sungero.RecordManagement.Server.AcquaintanceTaskServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.RecordManagement.Shared.IAcquaintanceTaskSharedPublicFunctions, global::Sungero.RecordManagement.Shared.AcquaintanceTaskSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("236c08d4-11cf-4438-b9fc-dfdbbccb1245"), new Sungero.RecordManagement.Shared.AcquaintanceTaskAcquaintanceVersionsInfo(typeof(global::Sungero.RecordManagement.IAcquaintanceTaskAcquaintanceVersions)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("be141725-abac-4ecb-a6ff-00051643f4a1"), new Sungero.RecordManagement.Shared.AcquaintanceTaskAcquaintersInfo(typeof(global::Sungero.RecordManagement.IAcquaintanceTaskAcquainters)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("8af4c702-7ab0-4fbb-b466-5dc39898c443"), new Sungero.RecordManagement.Shared.AcquaintanceTaskExcludedPerformersInfo(typeof(global::Sungero.RecordManagement.IAcquaintanceTaskExcludedPerformers)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("e30843c8-907a-47e1-8934-384f4ec21de4"), new Sungero.RecordManagement.Shared.AcquaintanceTaskObserversInfo(typeof(global::Sungero.RecordManagement.IAcquaintanceTaskObservers)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("7c55bb29-1afc-47cf-97ad-42a813feae35"), new Sungero.RecordManagement.Shared.AcquaintanceTaskPerformersInfo(typeof(global::Sungero.RecordManagement.IAcquaintanceTaskPerformers)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("481ce37a-03d3-43b6-ac5b-3d8bcf9d3f9b"), new Sungero.RecordManagement.Shared.AcquaintanceTaskParticipantInfo(typeof(global::Sungero.RecordManagement.IAcquaintanceTaskParticipant)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.RecordManagement.Server.IAcquaintanceTaskParticipantServerPublicFunctions, global::Sungero.RecordManagement.Server.AcquaintanceTaskParticipantServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.RecordManagement.Shared.IAcquaintanceTaskParticipantSharedPublicFunctions, global::Sungero.RecordManagement.Shared.AcquaintanceTaskParticipantSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("955eb1eb-e18a-48d9-b56d-164a7366bf4c"), new Sungero.RecordManagement.Shared.AcquaintanceTaskParticipantEmployeesInfo(typeof(global::Sungero.RecordManagement.IAcquaintanceTaskParticipantEmployees)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("d238ef51-607e-46a5-b86a-ede4482f7f19"), new Sungero.RecordManagement.Shared.ActionItemExecutionAssignmentInfo(typeof(global::Sungero.RecordManagement.IActionItemExecutionAssignment)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.RecordManagement.Server.IActionItemExecutionAssignmentServerPublicFunctions, global::Sungero.RecordManagement.Server.ActionItemExecutionAssignmentServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.RecordManagement.Shared.IActionItemExecutionAssignmentSharedPublicFunctions, global::Sungero.RecordManagement.Shared.ActionItemExecutionAssignmentSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("dfe429f9-8bbe-4920-b911-fe278031315a"), new Sungero.RecordManagement.Shared.ActionItemExecutionNotificationInfo(typeof(global::Sungero.RecordManagement.IActionItemExecutionNotification)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.RecordManagement.Server.IActionItemExecutionNotificationServerPublicFunctions, global::Sungero.RecordManagement.Server.ActionItemExecutionNotificationServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.RecordManagement.Shared.IActionItemExecutionNotificationSharedPublicFunctions, global::Sungero.RecordManagement.Shared.ActionItemExecutionNotificationSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("c290b098-12c7-487d-bb38-73e2c98f9789"), new Sungero.RecordManagement.Shared.ActionItemExecutionTaskInfo(typeof(global::Sungero.RecordManagement.IActionItemExecutionTask)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.RecordManagement.Server.IActionItemExecutionTaskServerPublicFunctions, global::Sungero.RecordManagement.Server.ActionItemExecutionTaskServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.RecordManagement.Shared.IActionItemExecutionTaskSharedPublicFunctions, global::Sungero.RecordManagement.Shared.ActionItemExecutionTaskSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("5bb73a81-d4cb-4a63-a00d-fffb8cf91956"), new Sungero.RecordManagement.Shared.ActionItemExecutionTaskActionItemObserversInfo(typeof(global::Sungero.RecordManagement.IActionItemExecutionTaskActionItemObservers)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("e2e199fe-7c2e-403f-8986-7a6801f86191"), new Sungero.RecordManagement.Shared.ActionItemExecutionTaskActionItemPartsInfo(typeof(global::Sungero.RecordManagement.IActionItemExecutionTaskActionItemParts)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("f87455f2-4292-42f8-9e2c-0b3bf34eac87"), new Sungero.RecordManagement.Shared.ActionItemExecutionTaskCoAssigneesInfo(typeof(global::Sungero.RecordManagement.IActionItemExecutionTaskCoAssignees)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("65471a50-e16c-4c58-bf20-d4362cdb4e83"), new Sungero.RecordManagement.Shared.ActionItemExecutionTaskObserversInfo(typeof(global::Sungero.RecordManagement.IActionItemExecutionTaskObservers)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("ab194340-550c-41c7-badd-adc2ee208741"), new Sungero.RecordManagement.Shared.ActionItemObserversNotificationInfo(typeof(global::Sungero.RecordManagement.IActionItemObserversNotification)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.RecordManagement.Server.IActionItemObserversNotificationServerPublicFunctions, global::Sungero.RecordManagement.Server.ActionItemObserversNotificationServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.RecordManagement.Shared.IActionItemObserversNotificationSharedPublicFunctions, global::Sungero.RecordManagement.Shared.ActionItemObserversNotificationSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("f44faafc-cd55-4c5b-b16d-93b6fc966ffb"), new Sungero.RecordManagement.Shared.ActionItemSupervisorAssignmentInfo(typeof(global::Sungero.RecordManagement.IActionItemSupervisorAssignment)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.RecordManagement.Server.IActionItemSupervisorAssignmentServerPublicFunctions, global::Sungero.RecordManagement.Server.ActionItemSupervisorAssignmentServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.RecordManagement.Shared.IActionItemSupervisorAssignmentSharedPublicFunctions, global::Sungero.RecordManagement.Shared.ActionItemSupervisorAssignmentSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("da4946ab-6876-4bae-b35b-fc63e76974fd"), new Sungero.RecordManagement.Shared.ActionItemSupervisorNotificationInfo(typeof(global::Sungero.RecordManagement.IActionItemSupervisorNotification)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.RecordManagement.Server.IActionItemSupervisorNotificationServerPublicFunctions, global::Sungero.RecordManagement.Server.ActionItemSupervisorNotificationServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.RecordManagement.Shared.IActionItemSupervisorNotificationSharedPublicFunctions, global::Sungero.RecordManagement.Shared.ActionItemSupervisorNotificationSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("264ada4e-b272-4ecc-a115-1246c9556bfa"), new Sungero.RecordManagement.Shared.CompanyDirectiveInfo(typeof(global::Sungero.RecordManagement.ICompanyDirective)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.RecordManagement.Server.ICompanyDirectiveServerPublicFunctions, global::Sungero.RecordManagement.Server.CompanyDirectiveServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.RecordManagement.Shared.ICompanyDirectiveSharedPublicFunctions, global::Sungero.RecordManagement.Shared.CompanyDirectiveSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("96a79305-3ed5-4e36-9691-6bc1f8f463e5"), new Sungero.RecordManagement.Shared.CompanyDirectiveTrackingInfo(typeof(global::Sungero.RecordManagement.ICompanyDirectiveTracking)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("aa3b17b3-87de-42bd-8b11-cc9dba29f58c"), new Sungero.RecordManagement.Shared.CompanyDirectiveVersionsInfo(typeof(global::Sungero.RecordManagement.ICompanyDirectiveVersions)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("8a5b9f7b-0c69-455f-95b2-8b525b4e7bb1"), new Sungero.RecordManagement.Shared.DeadlineExtensionAssignmentInfo(typeof(global::Sungero.RecordManagement.IDeadlineExtensionAssignment)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.RecordManagement.Server.IDeadlineExtensionAssignmentServerPublicFunctions, global::Sungero.RecordManagement.Server.DeadlineExtensionAssignmentServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.RecordManagement.Shared.IDeadlineExtensionAssignmentSharedPublicFunctions, global::Sungero.RecordManagement.Shared.DeadlineExtensionAssignmentSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("db855988-d42a-4cc5-a610-afff7ffb9560"), new Sungero.RecordManagement.Shared.DeadlineExtensionNotificationInfo(typeof(global::Sungero.RecordManagement.IDeadlineExtensionNotification)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.RecordManagement.Server.IDeadlineExtensionNotificationServerPublicFunctions, global::Sungero.RecordManagement.Server.DeadlineExtensionNotificationServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.RecordManagement.Shared.IDeadlineExtensionNotificationSharedPublicFunctions, global::Sungero.RecordManagement.Shared.DeadlineExtensionNotificationSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("67b46acc-07a9-43ed-86dc-8f9dc3ccf12f"), new Sungero.RecordManagement.Shared.DeadlineExtensionTaskInfo(typeof(global::Sungero.RecordManagement.IDeadlineExtensionTask)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.RecordManagement.Server.IDeadlineExtensionTaskServerPublicFunctions, global::Sungero.RecordManagement.Server.DeadlineExtensionTaskServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.RecordManagement.Shared.IDeadlineExtensionTaskSharedPublicFunctions, global::Sungero.RecordManagement.Shared.DeadlineExtensionTaskSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("808f882a-086b-49e6-ad67-814cff51ab0b"), new Sungero.RecordManagement.Shared.DeadlineExtensionTaskObserversInfo(typeof(global::Sungero.RecordManagement.IDeadlineExtensionTaskObservers)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("dea721dd-12f9-498a-93e9-451a1fbfad67"), new Sungero.RecordManagement.Shared.DeadlineRejectionAssignmentInfo(typeof(global::Sungero.RecordManagement.IDeadlineRejectionAssignment)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.RecordManagement.Server.IDeadlineRejectionAssignmentServerPublicFunctions, global::Sungero.RecordManagement.Server.DeadlineRejectionAssignmentServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.RecordManagement.Shared.IDeadlineRejectionAssignmentSharedPublicFunctions, global::Sungero.RecordManagement.Shared.DeadlineRejectionAssignmentSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("4ef03457-8b42-4239-a3c5-d4d05e61f0b6"), new Sungero.RecordManagement.Shared.DocumentReviewTaskInfo(typeof(global::Sungero.RecordManagement.IDocumentReviewTask)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.RecordManagement.Server.IDocumentReviewTaskServerPublicFunctions, global::Sungero.RecordManagement.Server.DocumentReviewTaskServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.RecordManagement.Shared.IDocumentReviewTaskSharedPublicFunctions, global::Sungero.RecordManagement.Shared.DocumentReviewTaskSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("420873fa-33fe-4759-ba41-f803b40d11b8"), new Sungero.RecordManagement.Shared.DocumentReviewTaskObserversInfo(typeof(global::Sungero.RecordManagement.IDocumentReviewTaskObservers)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("67733707-1758-4d72-bc40-0acecb8e9fd8"), new Sungero.RecordManagement.Shared.DocumentReviewTaskResolutionObserversInfo(typeof(global::Sungero.RecordManagement.IDocumentReviewTaskResolutionObservers)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("8dd00491-8fd0-4a7a-9cf3-8b6dc2e6455d"), new Sungero.RecordManagement.Shared.IncomingLetterInfo(typeof(global::Sungero.RecordManagement.IIncomingLetter)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.RecordManagement.Server.IIncomingLetterServerPublicFunctions, global::Sungero.RecordManagement.Server.IncomingLetterServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.RecordManagement.Shared.IIncomingLetterSharedPublicFunctions, global::Sungero.RecordManagement.Shared.IncomingLetterSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("a677ae45-b487-48f6-a9df-b486e2b720f7"), new Sungero.RecordManagement.Shared.IncomingLetterTrackingInfo(typeof(global::Sungero.RecordManagement.IIncomingLetterTracking)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("085982c0-327d-46a1-8451-d0c12b0f6877"), new Sungero.RecordManagement.Shared.IncomingLetterVersionsInfo(typeof(global::Sungero.RecordManagement.IIncomingLetterVersions)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("9570e517-7ab7-4f23-a959-3652715efad3"), new Sungero.RecordManagement.Shared.OrderInfo(typeof(global::Sungero.RecordManagement.IOrder)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.RecordManagement.Server.IOrderServerPublicFunctions, global::Sungero.RecordManagement.Server.OrderServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.RecordManagement.Shared.IOrderSharedPublicFunctions, global::Sungero.RecordManagement.Shared.OrderSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("4f5d1390-f658-4569-81e1-005f518cc51a"), new Sungero.RecordManagement.Shared.OrderTrackingInfo(typeof(global::Sungero.RecordManagement.IOrderTracking)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("3f74cb9d-8ab1-4760-b236-23d413d4626c"), new Sungero.RecordManagement.Shared.OrderVersionsInfo(typeof(global::Sungero.RecordManagement.IOrderVersions)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("8a57d8c1-a05a-405e-95e7-913565b3e29d"), new Sungero.RecordManagement.Shared.OrderBaseInfo(typeof(global::Sungero.RecordManagement.IOrderBase)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.RecordManagement.Server.IOrderBaseServerPublicFunctions, global::Sungero.RecordManagement.Server.OrderBaseServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.RecordManagement.Shared.IOrderBaseSharedPublicFunctions, global::Sungero.RecordManagement.Shared.OrderBaseSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("6364c3f8-891d-4cf4-9bf4-23f938805084"), new Sungero.RecordManagement.Shared.OrderBaseTrackingInfo(typeof(global::Sungero.RecordManagement.IOrderBaseTracking)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("0c7ec286-3ea5-4727-a833-a92358db4115"), new Sungero.RecordManagement.Shared.OrderBaseVersionsInfo(typeof(global::Sungero.RecordManagement.IOrderBaseVersions)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("d1d2a452-7732-4ba8-b199-0a4dc78898ac"), new Sungero.RecordManagement.Shared.OutgoingLetterInfo(typeof(global::Sungero.RecordManagement.IOutgoingLetter)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.RecordManagement.Server.IOutgoingLetterServerPublicFunctions, global::Sungero.RecordManagement.Server.OutgoingLetterServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.RecordManagement.Shared.IOutgoingLetterSharedPublicFunctions, global::Sungero.RecordManagement.Shared.OutgoingLetterSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("cb1f24e1-84e2-47e0-b08e-59c651168b56"), new Sungero.RecordManagement.Shared.OutgoingLetterAddresseesInfo(typeof(global::Sungero.RecordManagement.IOutgoingLetterAddressees)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("0a340145-d37f-43bc-9376-8a3196327b25"), new Sungero.RecordManagement.Shared.OutgoingLetterTrackingInfo(typeof(global::Sungero.RecordManagement.IOutgoingLetterTracking)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("f15b30f3-99b5-49d7-9452-770b3925ae41"), new Sungero.RecordManagement.Shared.OutgoingLetterVersionsInfo(typeof(global::Sungero.RecordManagement.IOutgoingLetterVersions)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("7cca016a-80f0-4562-9042-57bb748d5b30"), new Sungero.RecordManagement.Shared.PreparingDraftResolutionAssignmentInfo(typeof(global::Sungero.RecordManagement.IPreparingDraftResolutionAssignment)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.RecordManagement.Server.IPreparingDraftResolutionAssignmentServerPublicFunctions, global::Sungero.RecordManagement.Server.PreparingDraftResolutionAssignmentServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.RecordManagement.Shared.IPreparingDraftResolutionAssignmentSharedPublicFunctions, global::Sungero.RecordManagement.Shared.PreparingDraftResolutionAssignmentSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("3c8d9436-3368-4dfc-9154-a125b95c600e"), new Sungero.RecordManagement.Shared.ReportRequestAssignmentInfo(typeof(global::Sungero.RecordManagement.IReportRequestAssignment)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.RecordManagement.Server.IReportRequestAssignmentServerPublicFunctions, global::Sungero.RecordManagement.Server.ReportRequestAssignmentServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.RecordManagement.Shared.IReportRequestAssignmentSharedPublicFunctions, global::Sungero.RecordManagement.Shared.ReportRequestAssignmentSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("5f794b11-e700-4fba-9021-39006a567729"), new Sungero.RecordManagement.Shared.ReportRequestCheckAssignmentInfo(typeof(global::Sungero.RecordManagement.IReportRequestCheckAssignment)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.RecordManagement.Server.IReportRequestCheckAssignmentServerPublicFunctions, global::Sungero.RecordManagement.Server.ReportRequestCheckAssignmentServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.RecordManagement.Shared.IReportRequestCheckAssignmentSharedPublicFunctions, global::Sungero.RecordManagement.Shared.ReportRequestCheckAssignmentSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("4ca82b63-1b51-4aef-a42b-57b7c97dab64"), new Sungero.RecordManagement.Shared.ReviewClerkNotificationInfo(typeof(global::Sungero.RecordManagement.IReviewClerkNotification)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.RecordManagement.Server.IReviewClerkNotificationServerPublicFunctions, global::Sungero.RecordManagement.Server.ReviewClerkNotificationServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.RecordManagement.Shared.IReviewClerkNotificationSharedPublicFunctions, global::Sungero.RecordManagement.Shared.ReviewClerkNotificationSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("e2dd5bf3-54c8-4846-b158-9c42d09fbc33"), new Sungero.RecordManagement.Shared.ReviewDraftResolutionAssignmentInfo(typeof(global::Sungero.RecordManagement.IReviewDraftResolutionAssignment)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.RecordManagement.Server.IReviewDraftResolutionAssignmentServerPublicFunctions, global::Sungero.RecordManagement.Server.ReviewDraftResolutionAssignmentServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.RecordManagement.Shared.IReviewDraftResolutionAssignmentSharedPublicFunctions, global::Sungero.RecordManagement.Shared.ReviewDraftResolutionAssignmentSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("69ac657a-0e74-46be-acba-f6bbbbd2bc73"), new Sungero.RecordManagement.Shared.ReviewManagerAssignmentInfo(typeof(global::Sungero.RecordManagement.IReviewManagerAssignment)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.RecordManagement.Server.IReviewManagerAssignmentServerPublicFunctions, global::Sungero.RecordManagement.Server.ReviewManagerAssignmentServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.RecordManagement.Shared.IReviewManagerAssignmentSharedPublicFunctions, global::Sungero.RecordManagement.Shared.ReviewManagerAssignmentSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("75d6c458-7725-4133-8ff4-848e16ec5bd3"), new Sungero.RecordManagement.Shared.ReviewObserverNotificationInfo(typeof(global::Sungero.RecordManagement.IReviewObserverNotification)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.RecordManagement.Server.IReviewObserverNotificationServerPublicFunctions, global::Sungero.RecordManagement.Server.ReviewObserverNotificationServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.RecordManagement.Shared.IReviewObserverNotificationSharedPublicFunctions, global::Sungero.RecordManagement.Shared.ReviewObserverNotificationSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("8724ada0-fa56-481d-b3d0-ae3e46ff3e31"), new Sungero.RecordManagement.Shared.ReviewObserversNotificationInfo(typeof(global::Sungero.RecordManagement.IReviewObserversNotification)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.RecordManagement.Server.IReviewObserversNotificationServerPublicFunctions, global::Sungero.RecordManagement.Server.ReviewObserversNotificationServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.RecordManagement.Shared.IReviewObserversNotificationSharedPublicFunctions, global::Sungero.RecordManagement.Shared.ReviewObserversNotificationSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("018e582e-5b0e-4e4f-af57-be1e0a468efa"), new Sungero.RecordManagement.Shared.ReviewResolutionAssignmentInfo(typeof(global::Sungero.RecordManagement.IReviewResolutionAssignment)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.RecordManagement.Server.IReviewResolutionAssignmentServerPublicFunctions, global::Sungero.RecordManagement.Server.ReviewResolutionAssignmentServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.RecordManagement.Shared.IReviewResolutionAssignmentSharedPublicFunctions, global::Sungero.RecordManagement.Shared.ReviewResolutionAssignmentSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("c8aed854-ad26-4ee3-88a3-080bc98c12e1"), new Sungero.RecordManagement.Shared.StatusReportRequestTaskInfo(typeof(global::Sungero.RecordManagement.IStatusReportRequestTask)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.RecordManagement.Server.IStatusReportRequestTaskServerPublicFunctions, global::Sungero.RecordManagement.Server.StatusReportRequestTaskServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.RecordManagement.Shared.IStatusReportRequestTaskSharedPublicFunctions, global::Sungero.RecordManagement.Shared.StatusReportRequestTaskSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("adebba88-9756-4449-b0f9-393ec35f6fc3"), new Sungero.RecordManagement.Shared.StatusReportRequestTaskObserversInfo(typeof(global::Sungero.RecordManagement.IStatusReportRequestTaskObservers)));


      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.RecordManagement.IAcquaintanceAssignmentFilterState, global::Sungero.RecordManagement.Shared.AcquaintanceAssignment.AcquaintanceAssignmentFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.RecordManagement.IAcquaintanceFinishAssignmentFilterState, global::Sungero.RecordManagement.Shared.AcquaintanceFinishAssignment.AcquaintanceFinishAssignmentFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.RecordManagement.IAcquaintanceListFilterState, global::Sungero.RecordManagement.Shared.AcquaintanceList.AcquaintanceListFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.RecordManagement.IAcquaintanceTaskFilterState, global::Sungero.RecordManagement.Shared.AcquaintanceTask.AcquaintanceTaskFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.RecordManagement.IAcquaintanceTaskParticipantFilterState, global::Sungero.RecordManagement.Shared.AcquaintanceTaskParticipant.AcquaintanceTaskParticipantFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.RecordManagement.IActionItemExecutionAssignmentFilterState, global::Sungero.RecordManagement.Shared.ActionItemExecutionAssignment.ActionItemExecutionAssignmentFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.RecordManagement.IActionItemExecutionNotificationFilterState, global::Sungero.RecordManagement.Shared.ActionItemExecutionNotification.ActionItemExecutionNotificationFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.RecordManagement.IActionItemExecutionTaskFilterState, global::Sungero.RecordManagement.Shared.ActionItemExecutionTask.ActionItemExecutionTaskFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.RecordManagement.IActionItemObserversNotificationFilterState, global::Sungero.RecordManagement.Shared.ActionItemObserversNotification.ActionItemObserversNotificationFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.RecordManagement.IActionItemSupervisorAssignmentFilterState, global::Sungero.RecordManagement.Shared.ActionItemSupervisorAssignment.ActionItemSupervisorAssignmentFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.RecordManagement.IActionItemSupervisorNotificationFilterState, global::Sungero.RecordManagement.Shared.ActionItemSupervisorNotification.ActionItemSupervisorNotificationFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.RecordManagement.ICompanyDirectiveFilterState, global::Sungero.RecordManagement.Shared.CompanyDirective.CompanyDirectiveFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.RecordManagement.IDeadlineExtensionAssignmentFilterState, global::Sungero.RecordManagement.Shared.DeadlineExtensionAssignment.DeadlineExtensionAssignmentFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.RecordManagement.IDeadlineExtensionNotificationFilterState, global::Sungero.RecordManagement.Shared.DeadlineExtensionNotification.DeadlineExtensionNotificationFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.RecordManagement.IDeadlineExtensionTaskFilterState, global::Sungero.RecordManagement.Shared.DeadlineExtensionTask.DeadlineExtensionTaskFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.RecordManagement.IDeadlineRejectionAssignmentFilterState, global::Sungero.RecordManagement.Shared.DeadlineRejectionAssignment.DeadlineRejectionAssignmentFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.RecordManagement.IDocumentReviewTaskFilterState, global::Sungero.RecordManagement.Shared.DocumentReviewTask.DocumentReviewTaskFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.RecordManagement.IIncomingLetterFilterState, global::Sungero.RecordManagement.Shared.IncomingLetter.IncomingLetterFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.RecordManagement.IOrderFilterState, global::Sungero.RecordManagement.Shared.Order.OrderFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.RecordManagement.IOrderBaseFilterState, global::Sungero.RecordManagement.Shared.OrderBase.OrderBaseFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.RecordManagement.IOutgoingLetterFilterState, global::Sungero.RecordManagement.Shared.OutgoingLetter.OutgoingLetterFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.RecordManagement.IPreparingDraftResolutionAssignmentFilterState, global::Sungero.RecordManagement.Shared.PreparingDraftResolutionAssignment.PreparingDraftResolutionAssignmentFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.RecordManagement.IReportRequestAssignmentFilterState, global::Sungero.RecordManagement.Shared.ReportRequestAssignment.ReportRequestAssignmentFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.RecordManagement.IReportRequestCheckAssignmentFilterState, global::Sungero.RecordManagement.Shared.ReportRequestCheckAssignment.ReportRequestCheckAssignmentFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.RecordManagement.IReviewClerkNotificationFilterState, global::Sungero.RecordManagement.Shared.ReviewClerkNotification.ReviewClerkNotificationFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.RecordManagement.IReviewDraftResolutionAssignmentFilterState, global::Sungero.RecordManagement.Shared.ReviewDraftResolutionAssignment.ReviewDraftResolutionAssignmentFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.RecordManagement.IReviewManagerAssignmentFilterState, global::Sungero.RecordManagement.Shared.ReviewManagerAssignment.ReviewManagerAssignmentFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.RecordManagement.IReviewObserverNotificationFilterState, global::Sungero.RecordManagement.Shared.ReviewObserverNotification.ReviewObserverNotificationFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.RecordManagement.IReviewObserversNotificationFilterState, global::Sungero.RecordManagement.Shared.ReviewObserversNotification.ReviewObserversNotificationFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.RecordManagement.IReviewResolutionAssignmentFilterState, global::Sungero.RecordManagement.Shared.ReviewResolutionAssignment.ReviewResolutionAssignmentFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.RecordManagement.IStatusReportRequestTaskFilterState, global::Sungero.RecordManagement.Shared.StatusReportRequestTask.StatusReportRequestTaskFilterState>();


      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.RecordManagement.FolderFilterState.IForExecutionFilterState, global::Sungero.RecordManagement.Shared.ForExecutionFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.RecordManagement.FolderFilterState.IActionItemsFilterState, global::Sungero.RecordManagement.Shared.ActionItemsFilterState>();


      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.RecordManagement.Server.IModuleServerPublicFunctions, global::Sungero.RecordManagement.Server.ModuleServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.RecordManagement.Shared.IModuleSharedPublicFunctions, global::Sungero.RecordManagement.Shared.ModuleSharedPublicFunctions>();
    }
  }
}

// ==================================================================
// ModuleHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagement.Server
{
  public partial class ForExecutionFolderHandlers
  {
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    protected global::Sungero.RecordManagement.FolderFilterState.IForExecutionFilterState Filter { get; private set; }

    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    public global::System.Boolean _disableUiFiltering { get; protected set; }

    private global::Sungero.RecordManagement.FolderFilterState.IForExecutionFilterState _filter
    {
      get
      {
        return this.Filter;
      }
    }


    public ForExecutionFolderHandlers(global::Sungero.RecordManagement.FolderFilterState.IForExecutionFilterState filter)
    {
      this.Filter = filter;
    }
  }

  public partial class ActionItemsFolderHandlers
  {
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    protected global::Sungero.RecordManagement.FolderFilterState.IActionItemsFilterState Filter { get; private set; }

    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    public global::System.Boolean _disableUiFiltering { get; protected set; }

    private global::Sungero.RecordManagement.FolderFilterState.IActionItemsFilterState _filter
    {
      get
      {
        return this.Filter;
      }
    }


    public ActionItemsFolderHandlers(global::Sungero.RecordManagement.FolderFilterState.IActionItemsFilterState filter)
    {
      this.Filter = filter;
    }
  }

}

// ==================================================================
// ModuleFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagement.Functions
{
  internal static partial class Module
  {
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ModuleFunctions" />
    internal static global::System.Linq.IQueryable<global::Sungero.RecordManagement.IActionItemExecutionTask> GetActionItemsToWidgets(global::System.Boolean onlyOverdue, global::System.Boolean substitution)
    {
        return ((global::Sungero.RecordManagement.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server)).GetActionItemsToWidgets(onlyOverdue, substitution);
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<global::Sungero.RecordManagement.Structures.Module.ActionItemStatistic> GetActionItemCompletionStatisticForChart(global::Sungero.Core.Enumeration performer)
    {
        return ((global::Sungero.RecordManagement.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server)).GetActionItemCompletionStatisticForChart(performer);
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static global::System.Collections.Generic.List<global::Sungero.RecordManagement.Structures.Module.LightActiomItem> GetActionItemCompletionData(global::System.Nullable<global::System.DateTime> beginDate, global::System.Nullable<global::System.DateTime> endDate, global::Sungero.Company.IEmployee author)
    {
        return ((global::Sungero.RecordManagement.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server)).GetActionItemCompletionData(beginDate, endDate, author);
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<global::Sungero.RecordManagement.Structures.Module.LightActiomItem> GetActionItemCompletionData(global::Sungero.Meetings.IMeeting meeting, global::Sungero.Docflow.IOfficialDocument document, global::System.Nullable<global::System.DateTime> beginDate, global::System.Nullable<global::System.DateTime> endDate, global::Sungero.Company.IEmployee author, global::Sungero.Company.IBusinessUnit businessUnit, global::Sungero.Company.IDepartment department, global::Sungero.CoreEntities.IUser performer, global::Sungero.Docflow.IDocumentType documentType, global::System.Nullable<global::System.Boolean> isMeetingsCoverContext, global::System.Boolean getCoAssignees)
    {
        return ((global::Sungero.RecordManagement.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server)).GetActionItemCompletionData(meeting, document, beginDate, endDate, author, businessUnit, department, performer, documentType, isMeetingsCoverContext, getCoAssignees);
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static global::System.Boolean ActionItemCompletionDataIsPresent(global::Sungero.Meetings.IMeeting meeting, global::Sungero.Docflow.IOfficialDocument document)
    {
        return ((global::Sungero.RecordManagement.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server)).ActionItemCompletionDataIsPresent(meeting, document);
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute(PackResultEntityEagerly = true)]
    internal static global::Sungero.Workflow.ITask CreateDocumentReview(global::Sungero.Docflow.IOfficialDocument document)
    {
        return global::Sungero.RecordManagement.Server.ModuleFunctions.CreateDocumentReview(document);
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute(PackResultEntityEagerly = true)]
    internal static global::Sungero.RecordManagement.IActionItemExecutionTask CreateActionItemExecution(global::Sungero.Docflow.IOfficialDocument document)
    {
        return global::Sungero.RecordManagement.Server.ModuleFunctions.CreateActionItemExecution(document);
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute(PackResultEntityEagerly = true)]
    internal static global::Sungero.RecordManagement.IActionItemExecutionTask CreateActionItemExecution(global::Sungero.Docflow.IOfficialDocument document, global::System.Int32 parentAssignmentId)
    {
        return global::Sungero.RecordManagement.Server.ModuleFunctions.CreateActionItemExecution(document, parentAssignmentId);
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute(PackResultEntityEagerly = true)]
    internal static global::Sungero.RecordManagement.IActionItemExecutionTask CreateActionItemExecutionWithResolution(global::Sungero.Docflow.IOfficialDocument document, global::System.Int32 parentAssignmentId, global::System.String resolution, global::Sungero.Company.IEmployee assignedBy)
    {
        return global::Sungero.RecordManagement.Server.ModuleFunctions.CreateActionItemExecutionWithResolution(document, parentAssignmentId, resolution, assignedBy);
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute(PackResultEntityEagerly = true)]
    internal static global::Sungero.RecordManagement.IActionItemExecutionTask CreateActionItemExecution(global::Sungero.Docflow.IOfficialDocument document, global::Sungero.Workflow.IAssignment parentAssignment)
    {
        return global::Sungero.RecordManagement.Server.ModuleFunctions.CreateActionItemExecution(document, parentAssignment);
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute(PackResultEntityEagerly = true)]
    internal static global::Sungero.RecordManagement.IAcquaintanceTask CreateAcquaintanceTask(global::Sungero.Docflow.IOfficialDocument document)
    {
        return global::Sungero.RecordManagement.Server.ModuleFunctions.CreateAcquaintanceTask(document);
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute(PackResultEntityEagerly = true)]
    internal static global::Sungero.RecordManagement.IAcquaintanceTask CreateAcquaintanceTaskAsSubTask(global::Sungero.Docflow.IOfficialDocument document, global::Sungero.Workflow.IAssignment parentAssignment)
    {
        return global::Sungero.RecordManagement.Server.ModuleFunctions.CreateAcquaintanceTaskAsSubTask(document, parentAssignment);
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static global::Sungero.RecordManagement.IActionItemExecutionTask CreateActionItemExecution()
    {
        return global::Sungero.RecordManagement.Server.ModuleFunctions.CreateActionItemExecution();
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ModuleFunctions" />
    internal static void AbortSubtasksAndSendNotices(global::Sungero.RecordManagement.IActionItemExecutionTask actionItem)
    {
    global::Sungero.RecordManagement.Server.ModuleFunctions.AbortSubtasksAndSendNotices(actionItem);
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ModuleFunctions" />
    internal static void AbortSubtasksAndSendNotices(global::Sungero.RecordManagement.IActionItemExecutionTask actionItem, global::Sungero.CoreEntities.IUser performer, global::System.String abortingReason)
    {
    global::Sungero.RecordManagement.Server.ModuleFunctions.AbortSubtasksAndSendNotices(actionItem, performer, abortingReason);
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<global::Sungero.Workflow.ITask> GetSubtasksForTaskRecursive(global::Sungero.Workflow.ITask task)
    {
        return global::Sungero.RecordManagement.Server.ModuleFunctions.GetSubtasksForTaskRecursive(task);
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static global::System.Collections.Generic.List<global::Sungero.Docflow.IDocumentKind> GetFilteredDocumentKinds(global::Sungero.Core.Enumeration direction)
    {
        return global::Sungero.RecordManagement.Server.ModuleFunctions.GetFilteredDocumentKinds(direction);
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static global::Sungero.Docflow.IOutgoingDocumentBase GetIncomingLetterById(global::System.Int32 letterId)
    {
        return global::Sungero.RecordManagement.Server.ModuleFunctions.GetIncomingLetterById(letterId);
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<global::System.String> GetDocumentSignatureValidationErrors(global::Sungero.Domain.Shared.IEntity document, global::System.Boolean onlyLastSignature)
    {
        return global::Sungero.RecordManagement.Server.ModuleFunctions.GetDocumentSignatureValidationErrors(document, onlyLastSignature);
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ModuleFunctions" />
    internal static global::System.String GetSignatureValidationErrors(Sungero.Domain.Shared.ISignature signature)
    {
        return global::Sungero.RecordManagement.Server.ModuleFunctions.GetSignatureValidationErrors(signature);
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ModuleFunctions" />
    internal static void ExecuteSQLCommandFormat(global::System.String format, System.Object[] args)
    {
    global::Sungero.RecordManagement.Server.ModuleFunctions.ExecuteSQLCommandFormat(format, args);
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ModuleFunctions" />
    internal static global::System.Linq.IQueryable<global::Sungero.Workflow.IAssignmentBase> ApplyCommonSubfolderFilters(global::System.Linq.IQueryable<global::Sungero.Workflow.IAssignmentBase> query)
    {
        return ((global::Sungero.RecordManagement.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server)).ApplyCommonSubfolderFilters(query);
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ModuleFunctions" />
    internal static global::System.Linq.IQueryable<global::Sungero.Workflow.IAssignmentBase> ApplyCommonSubfolderFilters(global::System.Linq.IQueryable<global::Sungero.Workflow.IAssignmentBase> query, global::System.Boolean inProcess, global::System.Boolean shortPeriod, global::System.Boolean middlePeriod, global::System.Boolean longPeriod, global::System.Boolean longPeriodToCompleted)
    {
        return ((global::Sungero.RecordManagement.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server)).ApplyCommonSubfolderFilters(query, inProcess, shortPeriod, middlePeriod, longPeriod, longPeriodToCompleted);
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ModuleFunctions" />
    internal static global::System.Linq.IQueryable<global::Sungero.Workflow.ITask> ApplyCommonSubfolderFilters(global::System.Linq.IQueryable<global::Sungero.Workflow.ITask> query)
    {
        return ((global::Sungero.RecordManagement.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server)).ApplyCommonSubfolderFilters(query);
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ModuleFunctions" />
    internal static global::System.Linq.IQueryable<global::Sungero.Workflow.ITask> ApplyCommonSubfolderFilters(global::System.Linq.IQueryable<global::Sungero.Workflow.ITask> query, global::System.Boolean inProcess, global::System.Boolean shortPeriod, global::System.Boolean middlePeriod, global::System.Boolean longPeriod, global::System.Boolean longPeriodToCompleted)
    {
        return ((global::Sungero.RecordManagement.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server)).ApplyCommonSubfolderFilters(query, inProcess, shortPeriod, middlePeriod, longPeriod, longPeriodToCompleted);
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ModuleFunctions" />
    internal static global::System.String GetSupervisorInfoForActionItem(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemTask)
    {
        return ((global::Sungero.RecordManagement.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server)).GetSupervisorInfoForActionItem(actionItemTask);
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<Structures.DraftResolutionReport.DraftResolutionReportParameters> GetDraftResolutionReportData(global::System.Collections.Generic.List<global::Sungero.RecordManagement.IActionItemExecutionTask> resolution, global::System.String reportSessionId)
    {
        return global::Sungero.RecordManagement.Server.ModuleFunctions.GetDraftResolutionReportData(resolution, reportSessionId);
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ModuleFunctions" />
    internal static Structures.DraftResolutionReport.DraftResolutionReportParameters GetActionItemDraftResolutionReportData(global::Sungero.Company.IEmployee assignee, global::System.Collections.Generic.List<global::Sungero.Company.IEmployee> subAssignees, global::System.DateTime deadline, global::System.String actionItem, global::System.String supervisorLabel, global::System.String reportSessionId)
    {
        return global::Sungero.RecordManagement.Server.ModuleFunctions.GetActionItemDraftResolutionReportData(assignee, subAssignees, deadline, actionItem, supervisorLabel, reportSessionId);
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ModuleFunctions" />
    internal static global::System.Linq.IQueryable<global::Sungero.CoreEntities.IRecipient> ObserversFiltering(global::System.Linq.IQueryable<global::Sungero.CoreEntities.IRecipient> query)
    {
        return ((global::Sungero.RecordManagement.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server)).ObserversFiltering(query);
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static global::System.Int32 GetDocumentReviewDefaultDays()
    {
        return ((global::Sungero.RecordManagement.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server)).GetDocumentReviewDefaultDays();
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static global::System.Collections.Generic.List<global::Sungero.Docflow.IDocumentRegister> GetFilteredDocumentRegistersForReport(global::Sungero.Core.Enumeration direction)
    {
        return global::Sungero.RecordManagement.Server.ModuleFunctions.GetFilteredDocumentRegistersForReport(direction);
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static void DeleteActionItemExecutionTasks(global::System.Collections.Generic.List<global::Sungero.RecordManagement.IActionItemExecutionTask> actionItems)
    {
    global::Sungero.RecordManagement.Server.ModuleFunctions.DeleteActionItemExecutionTasks(actionItems);
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static global::System.Linq.IQueryable<global::Sungero.RecordManagement.IAcquaintanceList> GetAcquaintanceLists()
    {
        return ((global::Sungero.RecordManagement.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server)).GetAcquaintanceLists();
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static global::Sungero.RecordManagement.IAcquaintanceList CreateAcquaintanceList()
    {
        return ((global::Sungero.RecordManagement.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server)).CreateAcquaintanceList();
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static global::Sungero.RecordManagement.IActionItemExecutionTask GetActionitemById(global::System.Int32 id)
    {
        return ((global::Sungero.RecordManagement.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server)).GetActionitemById(id);
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<global::Sungero.Company.IEmployee> GetAcquaintanceTaskPerformers(global::System.Collections.Generic.List<global::Sungero.CoreEntities.IRecipient> recipients)
    {
        return ((global::Sungero.RecordManagement.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server)).GetAcquaintanceTaskPerformers(recipients);
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ModuleFunctions" />
    internal static global::System.String GetAcquaintanceAssignmentState(global::Sungero.RecordManagement.IAcquaintanceAssignment assignment, global::System.Boolean isElectronicAcquaintance, global::System.Boolean isCompleted)
    {
        return ((global::Sungero.RecordManagement.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server)).GetAcquaintanceAssignmentState(assignment, isElectronicAcquaintance, isCompleted);
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static global::System.Collections.Generic.List<global::Sungero.Content.IElectronicDocument> GetAcquintanceTaskAddendas(global::System.Collections.Generic.List<global::Sungero.RecordManagement.IAcquaintanceTask> tasks)
    {
        return ((global::Sungero.RecordManagement.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server)).GetAcquintanceTaskAddendas(tasks);
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static global::System.Collections.Generic.List<global::Sungero.Content.IElectronicDocument> GetAcquintanceTaskAddendas(global::Sungero.RecordManagement.IAcquaintanceTask task)
    {
        return ((global::Sungero.RecordManagement.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server)).GetAcquintanceTaskAddendas(task);
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static global::System.Linq.IQueryable<global::Sungero.CoreEntities.IRecipient> GetAllRecipients()
    {
        return ((global::Sungero.RecordManagement.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server)).GetAllRecipients();
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ModuleFunctions" />
    internal static global::System.String GetOutgoingDocumentReportAddressee(global::System.Int32 letterId)
    {
        return ((global::Sungero.RecordManagement.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server)).GetOutgoingDocumentReportAddressee(letterId);
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<Structures.DraftResolutionReport.DraftResolutionReportParameters> GetDraftResolutionReportData(global::System.Collections.Generic.List<global::Sungero.RecordManagement.IActionItemExecutionTask> actionItems, global::System.String reportSessionId, global::System.String textResolution)
    {
        return ((global::Sungero.RecordManagement.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server)).GetDraftResolutionReportData(actionItems, reportSessionId, textResolution);
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ModuleFunctions" />
    internal static global::System.String GetDraftResolutionReportDocumentShortName(global::Sungero.Docflow.IOfficialDocument document)
    {
        return ((global::Sungero.RecordManagement.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server)).GetDraftResolutionReportDocumentShortName(document);
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ModuleFunctions" />
    internal static global::System.String GetActionItemPrintReportDocumentShortName(global::Sungero.Docflow.IOfficialDocument document, global::Sungero.Workflow.IAssignment actionItem)
    {
        return ((global::Sungero.RecordManagement.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server)).GetActionItemPrintReportDocumentShortName(document, actionItem);
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<Structures.ActionItemPrintReport.ActionItemPrintReportParameters> GetActionItemPrintReportData(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemTask, global::System.String reportId)
    {
        return ((global::Sungero.RecordManagement.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server)).GetActionItemPrintReportData(actionItemTask, reportId);
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ModuleFunctions" />
    internal static Structures.ActionItemPrintReport.ActionItemPrintReportParameters GetActionItemPrintReportData(global::System.String assigneeShortName, global::System.String deadline, global::System.String fromAuthor, global::System.String supervisor, global::System.String actionItemText, global::System.String reportId)
    {
        return ((global::Sungero.RecordManagement.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server)).GetActionItemPrintReportData(assigneeShortName, deadline, fromAuthor, supervisor, actionItemText, reportId);
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ModuleFunctions" />
    internal static global::System.String GetAuthorLineInfoForActionItem(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemTask)
    {
        return ((global::Sungero.RecordManagement.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server)).GetAuthorLineInfoForActionItem(actionItemTask);
    }

    private static object GetFunctionsContainer()
    {
      return new global::Sungero.RecordManagement.Server.ModuleFunctions();
    }

    private static object GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType projectType)
    {
      var moduleId = new global::System.Guid("4e25caec-c722-4740-bcfd-c4f803840ac6");
      var finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(moduleId));
      var assemblyName = finalModuleMetadatda.GetAssemblyName(projectType);
      var moduleFunctionsType = global::System.Type.GetType(global::System.String.Format("{0}.{1}, {2}", finalModuleMetadatda.FunctionNamespace, "Module", assemblyName));
      return moduleFunctionsType.GetMethod("GetFunctionsContainer", global::System.Reflection.BindingFlags.NonPublic | global::System.Reflection.BindingFlags.Static).Invoke(null, null);
    }
  }
}

// ==================================================================
// ModuleInitializationInstantiation.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagement.ModuleInitialization
{
  internal static partial class Module
  {
     /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ModuleInitializer" />
     internal static void Initializing(Sungero.Domain.ModuleInitializingEventArgs e)
     {
     ((global::Sungero.RecordManagement.Server.ModuleInitializer)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server)).Initializing(e);
     }
     /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ModuleInitializer" />
     internal static void GrantRightsOnDatabooks(global::Sungero.CoreEntities.IRole allUsers)
     {
     global::Sungero.RecordManagement.Server.ModuleInitializer.GrantRightsOnDatabooks(allUsers);
     }
     /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ModuleInitializer" />
     internal static void GrantRightsOnDocuments(global::Sungero.CoreEntities.IRole allUsers)
     {
     global::Sungero.RecordManagement.Server.ModuleInitializer.GrantRightsOnDocuments(allUsers);
     }
     /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ModuleInitializer" />
     internal static void GrantRightsOnTasks(global::Sungero.CoreEntities.IRole allUsers)
     {
     global::Sungero.RecordManagement.Server.ModuleInitializer.GrantRightsOnTasks(allUsers);
     }
     /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ModuleInitializer" />
     internal static void GrantRightOnFolders(global::Sungero.CoreEntities.IRole allUsers)
     {
     global::Sungero.RecordManagement.Server.ModuleInitializer.GrantRightOnFolders(allUsers);
     }
     /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ModuleInitializer" />
     internal static void GrantRightsToClerk()
     {
     global::Sungero.RecordManagement.Server.ModuleInitializer.GrantRightsToClerk();
     }
     /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ModuleInitializer" />
     internal static void GrantRightsToRegistrationIncomingRole()
     {
     global::Sungero.RecordManagement.Server.ModuleInitializer.GrantRightsToRegistrationIncomingRole();
     }
     /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ModuleInitializer" />
     internal static void GrantRightsToRegistrationOutgoingRole()
     {
     global::Sungero.RecordManagement.Server.ModuleInitializer.GrantRightsToRegistrationOutgoingRole();
     }
     /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ModuleInitializer" />
     internal static void GrantRightsToRegistrationInternalRole()
     {
     global::Sungero.RecordManagement.Server.ModuleInitializer.GrantRightsToRegistrationInternalRole();
     }
     /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ModuleInitializer" />
     internal static void CreateDocumentTypes()
     {
     global::Sungero.RecordManagement.Server.ModuleInitializer.CreateDocumentTypes();
     }
     /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ModuleInitializer" />
     internal static void CreateDocumentKinds()
     {
     global::Sungero.RecordManagement.Server.ModuleInitializer.CreateDocumentKinds();
     }
     /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ModuleInitializer" />
     internal static void CreateAssignmentIndex()
     {
     global::Sungero.RecordManagement.Server.ModuleInitializer.CreateAssignmentIndex();
     }
     /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ModuleInitializer" />
     internal static void CreateTaskIndex()
     {
     global::Sungero.RecordManagement.Server.ModuleInitializer.CreateTaskIndex();
     }
     /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ModuleInitializer" />
     internal static void CreateReportsTables()
     {
     global::Sungero.RecordManagement.Server.ModuleInitializer.CreateReportsTables();
     }
     /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ModuleInitializer" />
     internal static void AddAcquaintanceTaskPerformersLimit()
     {
     global::Sungero.RecordManagement.Server.ModuleInitializer.AddAcquaintanceTaskPerformersLimit();
     }


    private static object GetFunctionsContainer()
    {
      return new global::Sungero.RecordManagement.Server.ModuleInitializer();
    }

    private static object GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType projectType)
    {
      var moduleId = new global::System.Guid("4e25caec-c722-4740-bcfd-c4f803840ac6");
      var finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(moduleId));
      var assemblyName = finalModuleMetadatda.GetAssemblyName(projectType);
      var moduleFunctionsType = global::System.Type.GetType(global::System.String.Format("{0}.{1}, {2}", finalModuleMetadatda.ModuleInitializationNamespace, "Module", assemblyName));
      return moduleFunctionsType.GetMethod("GetFunctionsContainer", global::System.Reflection.BindingFlags.NonPublic | global::System.Reflection.BindingFlags.Static).Invoke(null, null);
    }

  }
}


// ==================================================================
// ModuleEventArgs.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagement.Server
{
}

// ==================================================================
// ModuleServerPublicFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagement.Server
{
  public partial class ModuleServerPublicFunctions : global::Sungero.RecordManagement.Server.IModuleServerPublicFunctions
  {
    public global::System.Linq.IQueryable<global::Sungero.Workflow.IAssignmentBase> ApplyCommonSubfolderFilters(global::System.Linq.IQueryable<global::Sungero.Workflow.IAssignmentBase> query)
    {
      return global::Sungero.RecordManagement.Functions.Module.ApplyCommonSubfolderFilters(query);
    }
    public global::System.Linq.IQueryable<global::Sungero.Workflow.IAssignmentBase> ApplyCommonSubfolderFilters(global::System.Linq.IQueryable<global::Sungero.Workflow.IAssignmentBase> query, global::System.Boolean inProcess, global::System.Boolean shortPeriod, global::System.Boolean middlePeriod, global::System.Boolean longPeriod, global::System.Boolean longPeriodToCompleted)
    {
      return global::Sungero.RecordManagement.Functions.Module.ApplyCommonSubfolderFilters(query, inProcess, shortPeriod, middlePeriod, longPeriod, longPeriodToCompleted);
    }
    public global::System.Linq.IQueryable<global::Sungero.Workflow.ITask> ApplyCommonSubfolderFilters(global::System.Linq.IQueryable<global::Sungero.Workflow.ITask> query)
    {
      return global::Sungero.RecordManagement.Functions.Module.ApplyCommonSubfolderFilters(query);
    }
    public global::System.Linq.IQueryable<global::Sungero.Workflow.ITask> ApplyCommonSubfolderFilters(global::System.Linq.IQueryable<global::Sungero.Workflow.ITask> query, global::System.Boolean inProcess, global::System.Boolean shortPeriod, global::System.Boolean middlePeriod, global::System.Boolean longPeriod, global::System.Boolean longPeriodToCompleted)
    {
      return global::Sungero.RecordManagement.Functions.Module.ApplyCommonSubfolderFilters(query, inProcess, shortPeriod, middlePeriod, longPeriod, longPeriodToCompleted);
    }
    public global::System.Collections.Generic.List<Structures.ActionItemPrintReport.ActionItemPrintReportParameters> GetActionItemPrintReportData(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemTask, global::System.String reportId)
    {
      return global::Sungero.RecordManagement.Functions.Module.GetActionItemPrintReportData(actionItemTask, reportId);
    }
    public Structures.ActionItemPrintReport.ActionItemPrintReportParameters GetActionItemPrintReportData(global::System.String assigneeShortName, global::System.String deadline, global::System.String fromAuthor, global::System.String supervisor, global::System.String actionItemText, global::System.String reportId)
    {
      return global::Sungero.RecordManagement.Functions.Module.GetActionItemPrintReportData(assigneeShortName, deadline, fromAuthor, supervisor, actionItemText, reportId);
    }
    public global::System.String GetActionItemPrintReportDocumentShortName(global::Sungero.Docflow.IOfficialDocument document, global::Sungero.Workflow.IAssignment actionItem)
    {
      return global::Sungero.RecordManagement.Functions.Module.GetActionItemPrintReportDocumentShortName(document, actionItem);
    }
    public global::System.String GetAuthorLineInfoForActionItem(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemTask)
    {
      return global::Sungero.RecordManagement.Functions.Module.GetAuthorLineInfoForActionItem(actionItemTask);
    }
    public global::System.Collections.Generic.List<global::System.String> GetDocumentSignatureValidationErrors(global::Sungero.Domain.Shared.IEntity document, global::System.Boolean onlyLastSignature)
    {
      return global::Sungero.RecordManagement.Functions.Module.GetDocumentSignatureValidationErrors(document, onlyLastSignature);
    }
    public global::System.Collections.Generic.List<Structures.DraftResolutionReport.DraftResolutionReportParameters> GetDraftResolutionReportData(global::System.Collections.Generic.List<global::Sungero.RecordManagement.IActionItemExecutionTask> resolution, global::System.String reportSessionId)
    {
      return global::Sungero.RecordManagement.Functions.Module.GetDraftResolutionReportData(resolution, reportSessionId);
    }
    public global::System.Collections.Generic.List<Structures.DraftResolutionReport.DraftResolutionReportParameters> GetDraftResolutionReportData(global::System.Collections.Generic.List<global::Sungero.RecordManagement.IActionItemExecutionTask> actionItems, global::System.String reportSessionId, global::System.String textResolution)
    {
      return global::Sungero.RecordManagement.Functions.Module.GetDraftResolutionReportData(actionItems, reportSessionId, textResolution);
    }
    public global::System.String GetDraftResolutionReportDocumentShortName(global::Sungero.Docflow.IOfficialDocument document)
    {
      return global::Sungero.RecordManagement.Functions.Module.GetDraftResolutionReportDocumentShortName(document);
    }
    public global::System.String GetOutgoingDocumentReportAddressee(global::System.Int32 letterId)
    {
      return global::Sungero.RecordManagement.Functions.Module.GetOutgoingDocumentReportAddressee(letterId);
    }
    public global::System.String GetSignatureValidationErrors(Sungero.Domain.Shared.ISignature signature)
    {
      return global::Sungero.RecordManagement.Functions.Module.GetSignatureValidationErrors(signature);
    }
    public global::System.String GetSupervisorInfoForActionItem(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemTask)
    {
      return global::Sungero.RecordManagement.Functions.Module.GetSupervisorInfoForActionItem(actionItemTask);
    }
    public global::System.Linq.IQueryable<global::Sungero.CoreEntities.IRecipient> ObserversFiltering(global::System.Linq.IQueryable<global::Sungero.CoreEntities.IRecipient> query)
    {
      return global::Sungero.RecordManagement.Functions.Module.ObserversFiltering(query);
    }
  }
}

namespace Sungero.RecordManagement.Server
{
  public partial class ModuleServerPublicFunctions : global::Sungero.RecordManagement.Server.IModuleServerPublicFunctions
  {

  }
}

// ==================================================================
// ModuleServerInitializationFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagement.Server
{
  public partial class ModuleServerInitializationFunctions : global::Sungero.RecordManagement.Server.IModuleServerInitializationFunctions
  {
         public void CreateTaskIndex()
         {
     global:: Sungero.RecordManagement.ModuleInitialization.Module.CreateTaskIndex();
         }
  }
}


// ==================================================================
// ModuleWidgetHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagement.Server
{
      public partial class ActionItemsWidgetHandlers
      {
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        protected global::Sungero.Domain.Shared.WidgetParametersBase InnerParameters { get; private set; }

        private global::Sungero.RecordManagement.Shared.ActionItemsWidgetParameters _parameters
        {
          get
          {
            return (global::Sungero.RecordManagement.Shared.ActionItemsWidgetParameters)this.InnerParameters;
          }
        }

          

          public virtual string GetActionItemsUnderControlValue()
          {
            return string.Empty;
          }

          

          public virtual string GetActionItemsOverdueValue()
          {
            return string.Empty;
          }


        public ActionItemsWidgetHandlers(global::Sungero.Domain.Shared.WidgetParametersBase parameters) 
        {
          this.InnerParameters = parameters;
        }
      }

      public partial class ActionItemCompletionGraphWidgetHandlers
      {
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        protected global::Sungero.Domain.Shared.WidgetParametersBase InnerParameters { get; private set; }

        private global::Sungero.RecordManagement.Shared.ActionItemCompletionGraphWidgetParameters _parameters
        {
          get
          {
            return (global::Sungero.RecordManagement.Shared.ActionItemCompletionGraphWidgetParameters)this.InnerParameters;
          }
        }

          



        public ActionItemCompletionGraphWidgetHandlers(global::Sungero.Domain.Shared.WidgetParametersBase parameters) 
        {
          this.InnerParameters = parameters;
        }
      }

}

// ==================================================================
// ModuleQueries.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagement.Queries
{
  public class Module
  {
    private static global::Sungero.Domain.SqlQueryResolver resolver = new global::Sungero.Domain.SqlQueryResolver("Sungero.RecordManagement.Server.ModuleQueries.xml", System.Reflection.Assembly.GetExecutingAssembly());
    public static string SungeroWFAssignmentIndex1Query
    {
       get { return resolver.GetQuery("SungeroWFAssignmentIndex1Query"); }
    }
    public static string SungeroWFTaskIndex0Query
    {
       get { return resolver.GetQuery("SungeroWFTaskIndex0Query"); }
    }
  }
}

// ==================================================================
// ModuleInitializer.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagement.Server
{
  public partial class ModuleInitializer : global::Sungero.Domain.AppliedModuleInitializer
  {
  }
}

