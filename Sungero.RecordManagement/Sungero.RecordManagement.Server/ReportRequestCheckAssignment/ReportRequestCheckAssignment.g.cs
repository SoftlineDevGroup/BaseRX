
// ==================================================================
// ReportRequestCheckAssignment.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagement.Server
{
    public class ReportRequestCheckAssignmentFilter<T> :
      global::Sungero.Workflow.Server.AssignmentFilter<T>
      where T : class, global::Sungero.RecordManagement.IReportRequestCheckAssignment
    {
      protected new global::Sungero.RecordManagement.IReportRequestCheckAssignmentFilterState Filter { get; private set; }

      private global::Sungero.RecordManagement.IReportRequestCheckAssignmentFilterState filter
      {
        get
        {
          return this.Filter;
        }
      }

      protected override global::System.Linq.IQueryable<T> ApplyAppliedFilter(global::System.Linq.IQueryable<T> query)
      {
        return base.ApplyAppliedFilter(query);
      }

      public ReportRequestCheckAssignmentFilter(global::Sungero.RecordManagement.IReportRequestCheckAssignmentFilterState filter)
      : base()
      {
        this.Filter = filter;
      }

      protected ReportRequestCheckAssignmentFilter()
      {
      }
    }
    public class ReportRequestCheckAssignmentSearchDialogModel : global::Sungero.Workflow.Server.AssignmentSearchDialogModel
        {
                  public override global::System.Int32? Id { get; protected set; }
                  public override global::System.String Subject { get; protected set; }


                  public override global::System.Collections.Generic.IEnumerable<Sungero.CoreEntities.IRecipient> Author { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<Sungero.CoreEntities.IRecipient> Performer { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<Sungero.Core.Enumeration> Status { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<Sungero.Core.Enumeration> Importance { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<CommonLibrary.DateRangeValue> Created { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<CommonLibrary.DateRangeValue> Deadline { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<Sungero.Core.Enumeration> Result { get; protected set; }




        }





  [global::Sungero.Domain.Filter(typeof(global::Sungero.RecordManagement.Server.ReportRequestCheckAssignmentFilter<global::Sungero.RecordManagement.IReportRequestCheckAssignment>))]

  public class ReportRequestCheckAssignment :
    global::Sungero.Workflow.Server.Assignment, global::Sungero.RecordManagement.IReportRequestCheckAssignment, global::Sungero.Domain.Shared.ISecurableEntity, global::Sungero.Domain.IInternalSecurableEntity
  {
    public static new readonly global::System.Guid ClassTypeGuid = global::System.Guid.Parse("5f794b11-e700-4fba-9021-39006a567729");

    public override global::System.Guid TypeGuid
    {
      get { return global::Sungero.RecordManagement.Server.ReportRequestCheckAssignment.ClassTypeGuid; }
    }

    public override string TypeName
    {
      get { return "Sungero.RecordManagement.IReportRequestCheckAssignment, Sungero.Domain.Interfaces"; }
    }

    public override string DisplayValue
    {
      get { return this.Subject; }
      set { this.Subject = value; }
    }

    public new virtual global::Sungero.RecordManagement.IReportRequestCheckAssignmentState State
    {
      get { return (global::Sungero.RecordManagement.IReportRequestCheckAssignmentState)base.State; }
    }

    protected override global::Sungero.Domain.Shared.IEntityState CreateState()
    {
      return new global::Sungero.RecordManagement.Shared.ReportRequestCheckAssignmentState(this);
    }

    public new virtual global::Sungero.RecordManagement.IReportRequestCheckAssignmentInfo Info
    {
      get { return (global::Sungero.RecordManagement.IReportRequestCheckAssignmentInfo)base.Info; }
    }

    public new virtual global::Sungero.RecordManagement.IReportRequestCheckAssignmentAccessRights AccessRights
    {
      get { return (global::Sungero.RecordManagement.IReportRequestCheckAssignmentAccessRights)base.AccessRights; }
    }

    protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
    {
      return new global::Sungero.RecordManagement.Server.ReportRequestCheckAssignmentAccessRights(this);
    }

    protected override global::Sungero.Domain.EntityFunctions CreateServerFunctions()
    {
      return new global::Sungero.RecordManagement.Server.ReportRequestCheckAssignmentFunctions(this);
    }

    protected override global::Sungero.Domain.Shared.EntityFunctions CreateSharedFunctions()
    {
      return new global::Sungero.RecordManagement.Shared.ReportRequestCheckAssignmentFunctions(this);
    }

    protected override object CreateHandlers() {
      return new global::Sungero.RecordManagement.ReportRequestCheckAssignmentServerHandlers(this);
    }

    protected override object CreateSharedHandlers() {
      return new global::Sungero.RecordManagement.ReportRequestCheckAssignmentSharedHandlers(this);
    }






    private static global::Sungero.Domain.Shared.EnumerationItems _ResultItems = new global::Sungero.Domain.Shared.EnumerationItems(
      global::Sungero.Workflow.Server.Assignment.ResultItems,
      typeof(global::Sungero.RecordManagement.ReportRequestCheckAssignment.Result),
      typeof(global::Sungero.RecordManagement.Server.ReportRequestCheckAssignment),
      "Result");

    public static new global::Sungero.Domain.Shared.EnumerationItems ResultItems
    {
      get { return global::Sungero.RecordManagement.Server.ReportRequestCheckAssignment._ResultItems; }
    }

    public override global::Sungero.Domain.Shared.EnumerationItems ResultAllowedItems
    {
      get { return global::Sungero.RecordManagement.Server.ReportRequestCheckAssignment.ResultItems; }
    }






    protected override global::Sungero.Domain.Shared.EntityCreatingFromServerHandler CreateCreatingFromServerHandler(
      global::Sungero.Domain.Shared.IEntity entitySource)
    {
      return new global::Sungero.RecordManagement.ReportRequestCheckAssignmentCreatingFromServerHandler((global::Sungero.RecordManagement.IReportRequestCheckAssignment)entitySource, this.Info);
    }

    #region Framework events



    #endregion


    public ReportRequestCheckAssignment()
    {
      ((global::Sungero.Workflow.Interfaces.IWorkflowEntity)this).AttachmentCreated += this.AttachmentCreatedHandler;
      ((global::Sungero.Workflow.Interfaces.IWorkflowEntity)this).AttachmentAdded += this.AttachmentAddedHandler;
      ((global::Sungero.Workflow.Interfaces.IWorkflowEntity)this).AttachmentDeleted += this.AttachmentDeletedHandler;


    }

    #region Workflow attachments
    public virtual global::Sungero.RecordManagement.IReportRequestCheckAssignmentAddendaGroupAttachments AddendaGroup
    {
      get
      {
        return new global::Sungero.RecordManagement.Shared.ReportRequestCheckAssignmentAddendaGroupAttachments(this);
      }
    }
    public virtual global::Sungero.RecordManagement.IReportRequestCheckAssignmentOtherGroupAttachments OtherGroup
    {
      get
      {
        return new global::Sungero.RecordManagement.Shared.ReportRequestCheckAssignmentOtherGroupAttachments(this);
      }
    }
    public virtual global::Sungero.RecordManagement.IReportRequestCheckAssignmentDocumentsGroupAttachments DocumentsGroup
    {
      get
      {
        return new global::Sungero.RecordManagement.Shared.ReportRequestCheckAssignmentDocumentsGroupAttachments(this);
      }
    }


    private void AttachmentCreatedHandler(object sender, global::Sungero.Workflow.Interfaces.AttachmentCreatedEventArgs e)
    {
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "AddendaGroup")
      {
        ((global::Sungero.RecordManagement.ReportRequestCheckAssignmentSharedHandlers)this.SharedHandlers).AddendaGroupCreated(e);
        return;
      }
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "OtherGroup")
      {
        ((global::Sungero.RecordManagement.ReportRequestCheckAssignmentSharedHandlers)this.SharedHandlers).OtherGroupCreated(e);
        return;
      }
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "DocumentsGroup")
      {
        ((global::Sungero.RecordManagement.ReportRequestCheckAssignmentSharedHandlers)this.SharedHandlers).DocumentsGroupCreated(e);
        return;
      }

    }

    private void AttachmentAddedHandler(object sender, global::Sungero.Workflow.Interfaces.AttachmentAddedEventArgs e)
    {
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "AddendaGroup")
      {
        ((global::Sungero.RecordManagement.ReportRequestCheckAssignmentSharedHandlers)this.SharedHandlers).AddendaGroupAdded(e);
        return;
      }
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "OtherGroup")
      {
        ((global::Sungero.RecordManagement.ReportRequestCheckAssignmentSharedHandlers)this.SharedHandlers).OtherGroupAdded(e);
        return;
      }
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "DocumentsGroup")
      {
        ((global::Sungero.RecordManagement.ReportRequestCheckAssignmentSharedHandlers)this.SharedHandlers).DocumentsGroupAdded(e);
        return;
      }

    }

    private void AttachmentDeletedHandler(object sender, global::Sungero.Workflow.Interfaces.AttachmentDeletedEventArgs e)
    {
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "AddendaGroup")
      {
        ((global::Sungero.RecordManagement.ReportRequestCheckAssignmentSharedHandlers)this.SharedHandlers).AddendaGroupDeleted(e);
        return;
      }
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "OtherGroup")
      {
        ((global::Sungero.RecordManagement.ReportRequestCheckAssignmentSharedHandlers)this.SharedHandlers).OtherGroupDeleted(e);
        return;
      }
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "DocumentsGroup")
      {
        ((global::Sungero.RecordManagement.ReportRequestCheckAssignmentSharedHandlers)this.SharedHandlers).DocumentsGroupDeleted(e);
        return;
      }

    }
    #endregion

  }
}

// ==================================================================
// ReportRequestCheckAssignmentHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagement
{

  public partial class ReportRequestCheckAssignmentFilteringServerHandler<T>
    : global::Sungero.Domain.EntityFilteringServerHandler<T>  
    where T : class, global::Sungero.RecordManagement.IReportRequestCheckAssignment
  {
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    protected new global::Sungero.RecordManagement.IReportRequestCheckAssignmentFilterState Filter { get; private set; }

    private global::Sungero.RecordManagement.IReportRequestCheckAssignmentFilterState _filter
    {
      get
      {
        return this.Filter;
      }
    }

    public ReportRequestCheckAssignmentFilteringServerHandler(global::Sungero.RecordManagement.IReportRequestCheckAssignmentFilterState filter)
    : base()
    {
      this.Filter = filter;
    }

    protected ReportRequestCheckAssignmentFilteringServerHandler()
    {
    }

    public override global::System.Linq.IQueryable<T> Filtering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.FilteringEventArgs e)
    {
      return query;
    }


  }

  public partial class ReportRequestCheckAssignmentSearchDialogServerHandler : global::Sungero.Workflow.AssignmentSearchDialogServerHandler
   {
     private global::Sungero.RecordManagement.Server.ReportRequestCheckAssignmentSearchDialogModel _dialog
     {
       get
       {
         return (global::Sungero.RecordManagement.Server.ReportRequestCheckAssignmentSearchDialogModel)this.Dialog;
       }
     }

     public ReportRequestCheckAssignmentSearchDialogServerHandler(global::Sungero.RecordManagement.Server.ReportRequestCheckAssignmentSearchDialogModel dialog)
       : base(dialog)
     {
     }
   }

  public partial class ReportRequestCheckAssignmentServerHandlers : global::Sungero.Workflow.AssignmentServerHandlers
  {
    private global::Sungero.RecordManagement.IReportRequestCheckAssignment _obj
    {
      get { return (global::Sungero.RecordManagement.IReportRequestCheckAssignment)this.Entity; }
    }

    public ReportRequestCheckAssignmentServerHandlers(global::Sungero.RecordManagement.IReportRequestCheckAssignment entity)
      : base(entity)
    {
    }
  }

  public partial class ReportRequestCheckAssignmentCreatingFromServerHandler : global::Sungero.Workflow.AssignmentCreatingFromServerHandler
  {
    private global::Sungero.RecordManagement.IReportRequestCheckAssignment _source
    {
      get { return (global::Sungero.RecordManagement.IReportRequestCheckAssignment)this.Source; }
    }

    private global::Sungero.RecordManagement.IReportRequestCheckAssignmentInfo _info
    {
      get { return (global::Sungero.RecordManagement.IReportRequestCheckAssignmentInfo)this._Info; }
    }

    public ReportRequestCheckAssignmentCreatingFromServerHandler(global::Sungero.RecordManagement.IReportRequestCheckAssignment source, global::Sungero.RecordManagement.IReportRequestCheckAssignmentInfo info)
      : base(source, info)
    {
    }
  }

}

// ==================================================================
// ReportRequestCheckAssignmentEventArgs.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagement.Server
{
}

// ==================================================================
// ReportRequestCheckAssignmentAccessRights.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagement.Server
{
  public class ReportRequestCheckAssignmentAccessRights : 
    Sungero.Workflow.Server.AssignmentAccessRights, Sungero.RecordManagement.IReportRequestCheckAssignmentAccessRights
  {

    public ReportRequestCheckAssignmentAccessRights(global::Sungero.Domain.Shared.IEntity entity) : base(entity)
    {
    }
  }

  public class ReportRequestCheckAssignmentTypeAccessRights : 
    Sungero.Workflow.Server.AssignmentTypeAccessRights, Sungero.RecordManagement.IReportRequestCheckAssignmentAccessRights
  {

    public ReportRequestCheckAssignmentTypeAccessRights(global::System.Type entityType) : base(entityType)
    {
    }
  }
}

// ==================================================================
// ReportRequestCheckAssignmentRepositoryImplementer.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagement.Server
{
    public class ReportRequestCheckAssignmentRepositoryImplementer<T> : 
      global::Sungero.Workflow.Server.AssignmentRepositoryImplementer<T>,
      global::Sungero.RecordManagement.IReportRequestCheckAssignmentRepositoryImplementer<T>
      where T : global::Sungero.RecordManagement.IReportRequestCheckAssignment 
    {
       public new global::Sungero.RecordManagement.IReportRequestCheckAssignmentAccessRights AccessRights
       {
          get { return (global::Sungero.RecordManagement.IReportRequestCheckAssignmentAccessRights)base.AccessRights; }
       }

       public new global::Sungero.RecordManagement.IReportRequestCheckAssignmentInfo Info
       {
          get { return (global::Sungero.RecordManagement.IReportRequestCheckAssignmentInfo)base.Info; }
       }

       protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
       {
         return new global::Sungero.RecordManagement.Server.ReportRequestCheckAssignmentTypeAccessRights(typeof(T));
       }
    }
}

// ==================================================================
// ReportRequestCheckAssignmentPanelNavigationFilters.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagement.Server
{
}

// ==================================================================
// ReportRequestCheckAssignmentServerFunctions.g.cs
// ==================================================================

namespace Sungero.RecordManagement.Server
{
  public partial class ReportRequestCheckAssignmentFunctions : global::Sungero.Workflow.Server.AssignmentFunctions
  {
    private global::Sungero.RecordManagement.IReportRequestCheckAssignment _obj
    {
      get { return (global::Sungero.RecordManagement.IReportRequestCheckAssignment)this.Entity; }
    }

    public ReportRequestCheckAssignmentFunctions(global::Sungero.RecordManagement.IReportRequestCheckAssignment entity) : base(entity) { }
  }
}

// ==================================================================
// ReportRequestCheckAssignmentFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagement.Functions
{
  internal static class ReportRequestCheckAssignment
  {
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ReportRequestCheckAssignmentFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static  global::Sungero.Core.StateView GetStateView(global::Sungero.RecordManagement.IReportRequestCheckAssignment reportRequestCheckAssignment)
    {
      var functions = (global::Sungero.RecordManagement.Server.ReportRequestCheckAssignmentFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)reportRequestCheckAssignment).FunctionsContainer.ServerFunctions;
      return functions.GetStateView();
    }

  }
}

// ==================================================================
// ReportRequestCheckAssignmentServerPublicFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagement.Server
{
  public class ReportRequestCheckAssignmentServerPublicFunctions : global::Sungero.RecordManagement.Server.IReportRequestCheckAssignmentServerPublicFunctions
  {
  }
}

// ==================================================================
// ReportRequestCheckAssignmentQueries.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagement.Queries
{
  public class ReportRequestCheckAssignment
  {
    private static global::Sungero.Domain.SqlQueryResolver resolver = new global::Sungero.Domain.SqlQueryResolver("Sungero.RecordManagement.Server.ReportRequestCheckAssignment.ReportRequestCheckAssignmentQueries.xml", System.Reflection.Assembly.GetExecutingAssembly());
  }
}

// ==================================================================
// ReportRequestCheckAssignmentBlock.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagement.Server
{
  public class ReportRequestCheckAssignmentArguments: global::Sungero.Workflow.Server.Route.AssignmentStartEventArguments<ReportRequestCheckAssignmentBlock, global::Sungero.Workflow.AssignmentBlock>
  {
    public ReportRequestCheckAssignmentArguments(ReportRequestCheckAssignmentBlock block) : base(block) { }
  }

  public class ReportRequestCheckAssignmentEndBlockEventArguments: global::Sungero.Workflow.Server.Route.AssignmentEndBlockEventArguments<ReportRequestCheckAssignmentBlock, global::Sungero.Workflow.AssignmentBlock, Sungero.RecordManagement.IReportRequestCheckAssignment> 
  {
    public ReportRequestCheckAssignmentEndBlockEventArguments(ReportRequestCheckAssignmentBlock block) : base(block) { }
  }

  public partial class ReportRequestCheckAssignmentBlock : global::Sungero.Workflow.Blocks.AssignmentBlockWrapper<global::Sungero.Workflow.AssignmentBlock>    
  {



    public ReportRequestCheckAssignmentBlock(global::Sungero.Workflow.AssignmentBlock block) : base(block) { }
  }
}

// ==================================================================
// ReportRequestCheckAssignmentChildWrappers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagement.Server
{
}
