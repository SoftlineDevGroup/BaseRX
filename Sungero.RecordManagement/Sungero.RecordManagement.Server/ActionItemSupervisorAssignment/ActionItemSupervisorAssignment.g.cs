
// ==================================================================
// ActionItemSupervisorAssignment.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagement.Server
{
    public class ActionItemSupervisorAssignmentFilter<T> :
      global::Sungero.Workflow.Server.AssignmentFilter<T>
      where T : class, global::Sungero.RecordManagement.IActionItemSupervisorAssignment
    {
      protected new global::Sungero.RecordManagement.IActionItemSupervisorAssignmentFilterState Filter { get; private set; }

      private global::Sungero.RecordManagement.IActionItemSupervisorAssignmentFilterState filter
      {
        get
        {
          return this.Filter;
        }
      }

      protected override global::System.Linq.IQueryable<T> ApplyAppliedFilter(global::System.Linq.IQueryable<T> query)
      {
        return base.ApplyAppliedFilter(query);
      }

      public ActionItemSupervisorAssignmentFilter(global::Sungero.RecordManagement.IActionItemSupervisorAssignmentFilterState filter)
      : base()
      {
        this.Filter = filter;
      }

      protected ActionItemSupervisorAssignmentFilter()
      {
      }
    }
    public class ActionItemSupervisorAssignmentSearchDialogModel : global::Sungero.Workflow.Server.AssignmentSearchDialogModel
        {
                  public override global::System.Int32? Id { get; protected set; }
                  public override global::System.String Subject { get; protected set; }


                  public override global::System.Collections.Generic.IEnumerable<Sungero.CoreEntities.IRecipient> Author { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<Sungero.CoreEntities.IRecipient> Performer { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<Sungero.Core.Enumeration> Status { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<Sungero.Core.Enumeration> Importance { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<CommonLibrary.DateRangeValue> Deadline { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<CommonLibrary.DateRangeValue> Created { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<Sungero.Core.Enumeration> Result { get; protected set; }


                  public virtual global::System.String ActionItem { get; protected set; }


                  public virtual global::System.Collections.Generic.IEnumerable<CommonLibrary.DateRangeValue> ScheduledDate { get; protected set; }
                  public virtual global::System.Collections.Generic.IEnumerable<Sungero.CoreEntities.IRecipient> AssignedBy { get; protected set; }


        }




  public class ActionItemSupervisorAssignmentFilterForAssignedBy<TQueryEntity, TSourceEntity>
    : global::Sungero.Domain.EntityPropertyFilterBase<TQueryEntity, TSourceEntity>
    where TQueryEntity : class, global::Sungero.Company.IEmployee
    where TSourceEntity : class, global::Sungero.RecordManagement.IActionItemSupervisorAssignment
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, TSourceEntity sourceEntity)
    {
      var args = new global::Sungero.Domain.PropertyFilteringEventArgs(sourceEntity);
      var result = new global::Sungero.RecordManagement.ActionItemSupervisorAssignmentAssignedByPropertyFilteringServerHandler<TQueryEntity>(sourceEntity).AssignedByFiltering(query, args);
      if (args.DisableUiFiltering)
        global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public ActionItemSupervisorAssignmentFilterForAssignedBy(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class ActionItemSupervisorAssignmentSearchFilterForAssignedBy<TQueryEntity>
    : global::Sungero.Domain.SearchDialogPropertyFilter<TQueryEntity>
    where TQueryEntity : class, global::Sungero.CoreEntities.IRecipient
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, System.Guid entityType)
    {
      var args = new global::Sungero.Domain.PropertySearchDialogFilteringEventArgs(entityType);
      var result = new global::Sungero.RecordManagement.ActionItemSupervisorAssignmentAssignedBySearchPropertyFilteringServerHandler<TQueryEntity>().AssignedBySearchDialogFiltering(query, args);
      if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public ActionItemSupervisorAssignmentSearchFilterForAssignedBy(string propertyName)
      : base(propertyName)
    {
    }
  }



  [global::Sungero.Domain.Filter(typeof(global::Sungero.RecordManagement.Server.ActionItemSupervisorAssignmentFilter<global::Sungero.RecordManagement.IActionItemSupervisorAssignment>))]
  [global::Sungero.Domain.PropertyFilter(typeof(global::Sungero.RecordManagement.Server.ActionItemSupervisorAssignmentFilterForAssignedBy<global::Sungero.Company.IEmployee, global::Sungero.RecordManagement.IActionItemSupervisorAssignment>), "AssignedBy")]
  [global::Sungero.Domain.SearchPropertyFilter(typeof(global::Sungero.RecordManagement.Server.ActionItemSupervisorAssignmentSearchFilterForAssignedBy<global::Sungero.CoreEntities.IRecipient>), "AssignedBy")]


  public class ActionItemSupervisorAssignment :
    global::Sungero.Workflow.Server.Assignment, global::Sungero.RecordManagement.IActionItemSupervisorAssignment, global::Sungero.Domain.Shared.ISecurableEntity, global::Sungero.Domain.IInternalSecurableEntity
  {
    public static new readonly global::System.Guid ClassTypeGuid = global::System.Guid.Parse("f44faafc-cd55-4c5b-b16d-93b6fc966ffb");

    public override global::System.Guid TypeGuid
    {
      get { return global::Sungero.RecordManagement.Server.ActionItemSupervisorAssignment.ClassTypeGuid; }
    }

    public override string TypeName
    {
      get { return "Sungero.RecordManagement.IActionItemSupervisorAssignment, Sungero.Domain.Interfaces"; }
    }

    public override string DisplayValue
    {
      get { return this.Subject; }
      set { this.Subject = value; }
    }

    public new virtual global::Sungero.RecordManagement.IActionItemSupervisorAssignmentState State
    {
      get { return (global::Sungero.RecordManagement.IActionItemSupervisorAssignmentState)base.State; }
    }

    protected override global::Sungero.Domain.Shared.IEntityState CreateState()
    {
      return new global::Sungero.RecordManagement.Shared.ActionItemSupervisorAssignmentState(this);
    }

    public new virtual global::Sungero.RecordManagement.IActionItemSupervisorAssignmentInfo Info
    {
      get { return (global::Sungero.RecordManagement.IActionItemSupervisorAssignmentInfo)base.Info; }
    }

    public new virtual global::Sungero.RecordManagement.IActionItemSupervisorAssignmentAccessRights AccessRights
    {
      get { return (global::Sungero.RecordManagement.IActionItemSupervisorAssignmentAccessRights)base.AccessRights; }
    }

    protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
    {
      return new global::Sungero.RecordManagement.Server.ActionItemSupervisorAssignmentAccessRights(this);
    }

    protected override global::Sungero.Domain.EntityFunctions CreateServerFunctions()
    {
      return new global::Sungero.RecordManagement.Server.ActionItemSupervisorAssignmentFunctions(this);
    }

    protected override global::Sungero.Domain.Shared.EntityFunctions CreateSharedFunctions()
    {
      return new global::Sungero.RecordManagement.Shared.ActionItemSupervisorAssignmentFunctions(this);
    }

    protected override object CreateHandlers() {
      return new global::Sungero.RecordManagement.ActionItemSupervisorAssignmentServerHandlers(this);
    }

    protected override object CreateSharedHandlers() {
      return new global::Sungero.RecordManagement.ActionItemSupervisorAssignmentSharedHandlers(this);
    }

    private global::System.String _ActionItem;
    public virtual global::System.String ActionItem
    {
      get
      {
        return this._ActionItem;
      }

      set
      {
        this.SetPropertyValue("ActionItem", this._ActionItem, value, (propertyValue) => { this._ActionItem = propertyValue; }, this.ActionItemChangedHandler);
      }
    }
    private global::System.DateTime? _ScheduledDate;
    public virtual global::System.DateTime? ScheduledDate
    {
      get
      {
        return this._ScheduledDate;
      }

      set
      {
        this.SetPropertyValue("ScheduledDate", this._ScheduledDate, value, (propertyValue) => { this._ScheduledDate = propertyValue; }, this.ScheduledDateChangedHandler);
      }
    }
    private global::System.DateTime? _NewDeadline;
    public virtual global::System.DateTime? NewDeadline
    {
      get
      {
        return this._NewDeadline;
      }

      set
      {
        this.SetPropertyValue("NewDeadline", this._NewDeadline, value, (propertyValue) => { this._NewDeadline = propertyValue; }, this.NewDeadlineChangedHandler);
      }
    }






    private static global::Sungero.Domain.Shared.EnumerationItems _ResultItems = new global::Sungero.Domain.Shared.EnumerationItems(
      global::Sungero.Workflow.Server.Assignment.ResultItems,
      typeof(global::Sungero.RecordManagement.ActionItemSupervisorAssignment.Result),
      typeof(global::Sungero.RecordManagement.Server.ActionItemSupervisorAssignment),
      "Result");

    public static new global::Sungero.Domain.Shared.EnumerationItems ResultItems
    {
      get { return global::Sungero.RecordManagement.Server.ActionItemSupervisorAssignment._ResultItems; }
    }

    public override global::Sungero.Domain.Shared.EnumerationItems ResultAllowedItems
    {
      get { return global::Sungero.RecordManagement.Server.ActionItemSupervisorAssignment.ResultItems; }
    }



    private global::Sungero.Company.IEmployee _AssignedBy;
    public virtual global::Sungero.Company.IEmployee AssignedBy
    {
      get
      {
        return this._AssignedBy;
      }

      set
      {
        this.SetPropertyValue("AssignedBy", this._AssignedBy, value, (propertyValue) => { this._AssignedBy = propertyValue; }, this.AssignedByChangedHandler);
      }
    }




    protected override global::Sungero.Domain.Shared.EntityCreatingFromServerHandler CreateCreatingFromServerHandler(
      global::Sungero.Domain.Shared.IEntity entitySource)
    {
      return new global::Sungero.RecordManagement.ActionItemSupervisorAssignmentCreatingFromServerHandler((global::Sungero.RecordManagement.IActionItemSupervisorAssignment)entitySource, this.Info);
    }

    #region Framework events

    protected void ActionItemChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.ActionItem, this.ActionItem, this);
     ((global::Sungero.RecordManagement.ActionItemSupervisorAssignmentSharedHandlers)this.SharedHandlers).ActionItemChanged(args);
    }

    protected void ScheduledDateChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.DateTimePropertyChangedEventArgs(this.State.Properties.ScheduledDate, this.ScheduledDate, this);
     ((global::Sungero.RecordManagement.ActionItemSupervisorAssignmentSharedHandlers)this.SharedHandlers).ScheduledDateChanged(args);
    }

    protected void AssignedByChangedHandler()
    {
      var args = new global::Sungero.RecordManagement.Shared.ActionItemSupervisorAssignmentAssignedByChangedEventArgs(this.State.Properties.AssignedBy, this.AssignedBy, this);
     ((global::Sungero.RecordManagement.ActionItemSupervisorAssignmentSharedHandlers)this.SharedHandlers).AssignedByChanged(args);
    }

    protected void NewDeadlineChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.DateTimePropertyChangedEventArgs(this.State.Properties.NewDeadline, this.NewDeadline, this);
     ((global::Sungero.RecordManagement.ActionItemSupervisorAssignmentSharedHandlers)this.SharedHandlers).NewDeadlineChanged(args);
    }



    #endregion


    public ActionItemSupervisorAssignment()
    {
      ((global::Sungero.Workflow.Interfaces.IWorkflowEntity)this).AttachmentCreated += this.AttachmentCreatedHandler;
      ((global::Sungero.Workflow.Interfaces.IWorkflowEntity)this).AttachmentAdded += this.AttachmentAddedHandler;
      ((global::Sungero.Workflow.Interfaces.IWorkflowEntity)this).AttachmentDeleted += this.AttachmentDeletedHandler;


    }

    #region Workflow attachments
    public virtual global::Sungero.RecordManagement.IActionItemSupervisorAssignmentAddendaGroupAttachments AddendaGroup
    {
      get
      {
        return new global::Sungero.RecordManagement.Shared.ActionItemSupervisorAssignmentAddendaGroupAttachments(this);
      }
    }
    public virtual global::Sungero.RecordManagement.IActionItemSupervisorAssignmentDocumentsGroupAttachments DocumentsGroup
    {
      get
      {
        return new global::Sungero.RecordManagement.Shared.ActionItemSupervisorAssignmentDocumentsGroupAttachments(this);
      }
    }
    public virtual global::Sungero.RecordManagement.IActionItemSupervisorAssignmentOtherGroupAttachments OtherGroup
    {
      get
      {
        return new global::Sungero.RecordManagement.Shared.ActionItemSupervisorAssignmentOtherGroupAttachments(this);
      }
    }
    public virtual global::Sungero.RecordManagement.IActionItemSupervisorAssignmentResultGroupAttachments ResultGroup
    {
      get
      {
        return new global::Sungero.RecordManagement.Shared.ActionItemSupervisorAssignmentResultGroupAttachments(this);
      }
    }


    private void AttachmentCreatedHandler(object sender, global::Sungero.Workflow.Interfaces.AttachmentCreatedEventArgs e)
    {
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "AddendaGroup")
      {
        ((global::Sungero.RecordManagement.ActionItemSupervisorAssignmentSharedHandlers)this.SharedHandlers).AddendaGroupCreated(e);
        return;
      }
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "DocumentsGroup")
      {
        ((global::Sungero.RecordManagement.ActionItemSupervisorAssignmentSharedHandlers)this.SharedHandlers).DocumentsGroupCreated(e);
        return;
      }
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "OtherGroup")
      {
        ((global::Sungero.RecordManagement.ActionItemSupervisorAssignmentSharedHandlers)this.SharedHandlers).OtherGroupCreated(e);
        return;
      }
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "ResultGroup")
      {
        ((global::Sungero.RecordManagement.ActionItemSupervisorAssignmentSharedHandlers)this.SharedHandlers).ResultGroupCreated(e);
        return;
      }

    }

    private void AttachmentAddedHandler(object sender, global::Sungero.Workflow.Interfaces.AttachmentAddedEventArgs e)
    {
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "AddendaGroup")
      {
        ((global::Sungero.RecordManagement.ActionItemSupervisorAssignmentSharedHandlers)this.SharedHandlers).AddendaGroupAdded(e);
        return;
      }
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "DocumentsGroup")
      {
        ((global::Sungero.RecordManagement.ActionItemSupervisorAssignmentSharedHandlers)this.SharedHandlers).DocumentsGroupAdded(e);
        return;
      }
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "OtherGroup")
      {
        ((global::Sungero.RecordManagement.ActionItemSupervisorAssignmentSharedHandlers)this.SharedHandlers).OtherGroupAdded(e);
        return;
      }
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "ResultGroup")
      {
        ((global::Sungero.RecordManagement.ActionItemSupervisorAssignmentSharedHandlers)this.SharedHandlers).ResultGroupAdded(e);
        return;
      }

    }

    private void AttachmentDeletedHandler(object sender, global::Sungero.Workflow.Interfaces.AttachmentDeletedEventArgs e)
    {
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "AddendaGroup")
      {
        ((global::Sungero.RecordManagement.ActionItemSupervisorAssignmentSharedHandlers)this.SharedHandlers).AddendaGroupDeleted(e);
        return;
      }
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "DocumentsGroup")
      {
        ((global::Sungero.RecordManagement.ActionItemSupervisorAssignmentSharedHandlers)this.SharedHandlers).DocumentsGroupDeleted(e);
        return;
      }
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "OtherGroup")
      {
        ((global::Sungero.RecordManagement.ActionItemSupervisorAssignmentSharedHandlers)this.SharedHandlers).OtherGroupDeleted(e);
        return;
      }
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "ResultGroup")
      {
        ((global::Sungero.RecordManagement.ActionItemSupervisorAssignmentSharedHandlers)this.SharedHandlers).ResultGroupDeleted(e);
        return;
      }

    }
    #endregion

  }
}

// ==================================================================
// ActionItemSupervisorAssignmentHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagement
{
  public partial class ActionItemSupervisorAssignmentAssignedByPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.EntityPropertyFilteringServerHandler
    where T : class, global::Sungero.Company.IEmployee
  {
    private global::Sungero.RecordManagement.IActionItemSupervisorAssignment _obj
    {
      get { return (global::Sungero.RecordManagement.IActionItemSupervisorAssignment)this.Entity; }
    }

    public virtual global::System.Linq.IQueryable<T> AssignedByFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertyFilteringEventArgs e)
    {
      return query;
    }

    public ActionItemSupervisorAssignmentAssignedByPropertyFilteringServerHandler(global::Sungero.RecordManagement.IActionItemSupervisorAssignment entity)
      : base(entity)
    {
    }
  }

  public partial class ActionItemSupervisorAssignmentAssignedBySearchPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.SearchPropertyFilteringServerHandler
    where T : class, global::Sungero.CoreEntities.IRecipient
  {

    public virtual global::System.Linq.IQueryable<T> AssignedBySearchDialogFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertySearchDialogFilteringEventArgs e)
    {
      return query;
    }

    public ActionItemSupervisorAssignmentAssignedBySearchPropertyFilteringServerHandler()
      : base()
    {
    }
  }



  public partial class ActionItemSupervisorAssignmentFilteringServerHandler<T>
    : global::Sungero.Domain.EntityFilteringServerHandler<T>  
    where T : class, global::Sungero.RecordManagement.IActionItemSupervisorAssignment
  {
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    protected new global::Sungero.RecordManagement.IActionItemSupervisorAssignmentFilterState Filter { get; private set; }

    private global::Sungero.RecordManagement.IActionItemSupervisorAssignmentFilterState _filter
    {
      get
      {
        return this.Filter;
      }
    }

    public ActionItemSupervisorAssignmentFilteringServerHandler(global::Sungero.RecordManagement.IActionItemSupervisorAssignmentFilterState filter)
    : base()
    {
      this.Filter = filter;
    }

    protected ActionItemSupervisorAssignmentFilteringServerHandler()
    {
    }

    public override global::System.Linq.IQueryable<T> Filtering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.FilteringEventArgs e)
    {
      return query;
    }


  }

  public partial class ActionItemSupervisorAssignmentSearchDialogServerHandler : global::Sungero.Workflow.AssignmentSearchDialogServerHandler
   {
     private global::Sungero.RecordManagement.Server.ActionItemSupervisorAssignmentSearchDialogModel _dialog
     {
       get
       {
         return (global::Sungero.RecordManagement.Server.ActionItemSupervisorAssignmentSearchDialogModel)this.Dialog;
       }
     }

     public ActionItemSupervisorAssignmentSearchDialogServerHandler(global::Sungero.RecordManagement.Server.ActionItemSupervisorAssignmentSearchDialogModel dialog)
       : base(dialog)
     {
     }
   }

  public partial class ActionItemSupervisorAssignmentServerHandlers : global::Sungero.Workflow.AssignmentServerHandlers
  {
    private global::Sungero.RecordManagement.IActionItemSupervisorAssignment _obj
    {
      get { return (global::Sungero.RecordManagement.IActionItemSupervisorAssignment)this.Entity; }
    }

    public ActionItemSupervisorAssignmentServerHandlers(global::Sungero.RecordManagement.IActionItemSupervisorAssignment entity)
      : base(entity)
    {
    }
  }

  public partial class ActionItemSupervisorAssignmentCreatingFromServerHandler : global::Sungero.Workflow.AssignmentCreatingFromServerHandler
  {
    private global::Sungero.RecordManagement.IActionItemSupervisorAssignment _source
    {
      get { return (global::Sungero.RecordManagement.IActionItemSupervisorAssignment)this.Source; }
    }

    private global::Sungero.RecordManagement.IActionItemSupervisorAssignmentInfo _info
    {
      get { return (global::Sungero.RecordManagement.IActionItemSupervisorAssignmentInfo)this._Info; }
    }

    public ActionItemSupervisorAssignmentCreatingFromServerHandler(global::Sungero.RecordManagement.IActionItemSupervisorAssignment source, global::Sungero.RecordManagement.IActionItemSupervisorAssignmentInfo info)
      : base(source, info)
    {
    }
  }

}

// ==================================================================
// ActionItemSupervisorAssignmentEventArgs.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagement.Server
{
}

// ==================================================================
// ActionItemSupervisorAssignmentAccessRights.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagement.Server
{
  public class ActionItemSupervisorAssignmentAccessRights : 
    Sungero.Workflow.Server.AssignmentAccessRights, Sungero.RecordManagement.IActionItemSupervisorAssignmentAccessRights
  {

    public ActionItemSupervisorAssignmentAccessRights(global::Sungero.Domain.Shared.IEntity entity) : base(entity)
    {
    }
  }

  public class ActionItemSupervisorAssignmentTypeAccessRights : 
    Sungero.Workflow.Server.AssignmentTypeAccessRights, Sungero.RecordManagement.IActionItemSupervisorAssignmentAccessRights
  {

    public ActionItemSupervisorAssignmentTypeAccessRights(global::System.Type entityType) : base(entityType)
    {
    }
  }
}

// ==================================================================
// ActionItemSupervisorAssignmentRepositoryImplementer.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagement.Server
{
    public class ActionItemSupervisorAssignmentRepositoryImplementer<T> : 
      global::Sungero.Workflow.Server.AssignmentRepositoryImplementer<T>,
      global::Sungero.RecordManagement.IActionItemSupervisorAssignmentRepositoryImplementer<T>
      where T : global::Sungero.RecordManagement.IActionItemSupervisorAssignment 
    {
       public new global::Sungero.RecordManagement.IActionItemSupervisorAssignmentAccessRights AccessRights
       {
          get { return (global::Sungero.RecordManagement.IActionItemSupervisorAssignmentAccessRights)base.AccessRights; }
       }

       public new global::Sungero.RecordManagement.IActionItemSupervisorAssignmentInfo Info
       {
          get { return (global::Sungero.RecordManagement.IActionItemSupervisorAssignmentInfo)base.Info; }
       }

       protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
       {
         return new global::Sungero.RecordManagement.Server.ActionItemSupervisorAssignmentTypeAccessRights(typeof(T));
       }
    }
}

// ==================================================================
// ActionItemSupervisorAssignmentPanelNavigationFilters.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagement.Server
{
}

// ==================================================================
// ActionItemSupervisorAssignmentServerFunctions.g.cs
// ==================================================================

namespace Sungero.RecordManagement.Server
{
  public partial class ActionItemSupervisorAssignmentFunctions : global::Sungero.Workflow.Server.AssignmentFunctions
  {
    private global::Sungero.RecordManagement.IActionItemSupervisorAssignment _obj
    {
      get { return (global::Sungero.RecordManagement.IActionItemSupervisorAssignment)this.Entity; }
    }

    public ActionItemSupervisorAssignmentFunctions(global::Sungero.RecordManagement.IActionItemSupervisorAssignment entity) : base(entity) { }
  }
}

// ==================================================================
// ActionItemSupervisorAssignmentFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagement.Functions
{
  internal static class ActionItemSupervisorAssignment
  {
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ActionItemSupervisorAssignmentFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static  global::Sungero.Core.StateView GetStateView(global::Sungero.RecordManagement.IActionItemSupervisorAssignment actionItemSupervisorAssignment)
    {
      var functions = (global::Sungero.RecordManagement.Server.ActionItemSupervisorAssignmentFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)actionItemSupervisorAssignment).FunctionsContainer.ServerFunctions;
      return functions.GetStateView();
    }

    /// <redirect project="Sungero.RecordManagement.Shared" type="Sungero.RecordManagement.Shared.ActionItemSupervisorAssignmentFunctions" />
    internal static  global::System.Boolean ValidateActionItemSupervisorAssignment(global::Sungero.RecordManagement.IActionItemSupervisorAssignment actionItemSupervisorAssignment, Sungero.Core.IValidationArgs e)
    {
      var functions = (global::Sungero.RecordManagement.Shared.ActionItemSupervisorAssignmentFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)actionItemSupervisorAssignment).FunctionsContainer.SharedFunctions;
      return functions.ValidateActionItemSupervisorAssignment(e);
    }

  }
}

// ==================================================================
// ActionItemSupervisorAssignmentServerPublicFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagement.Server
{
  public class ActionItemSupervisorAssignmentServerPublicFunctions : global::Sungero.RecordManagement.Server.IActionItemSupervisorAssignmentServerPublicFunctions
  {
  }
}

// ==================================================================
// ActionItemSupervisorAssignmentQueries.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagement.Queries
{
  public class ActionItemSupervisorAssignment
  {
    private static global::Sungero.Domain.SqlQueryResolver resolver = new global::Sungero.Domain.SqlQueryResolver("Sungero.RecordManagement.Server.ActionItemSupervisorAssignment.ActionItemSupervisorAssignmentQueries.xml", System.Reflection.Assembly.GetExecutingAssembly());
  }
}

// ==================================================================
// ActionItemSupervisorAssignmentBlock.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagement.Server
{
  public class ActionItemSupervisorAssignmentArguments: global::Sungero.Workflow.Server.Route.AssignmentStartEventArguments<ActionItemSupervisorAssignmentBlock, global::Sungero.Workflow.AssignmentBlock>
  {
    public ActionItemSupervisorAssignmentArguments(ActionItemSupervisorAssignmentBlock block) : base(block) { }
  }

  public class ActionItemSupervisorAssignmentEndBlockEventArguments: global::Sungero.Workflow.Server.Route.AssignmentEndBlockEventArguments<ActionItemSupervisorAssignmentBlock, global::Sungero.Workflow.AssignmentBlock, Sungero.RecordManagement.IActionItemSupervisorAssignment> 
  {
    public ActionItemSupervisorAssignmentEndBlockEventArguments(ActionItemSupervisorAssignmentBlock block) : base(block) { }
  }

  public partial class ActionItemSupervisorAssignmentBlock : global::Sungero.Workflow.Blocks.AssignmentBlockWrapper<global::Sungero.Workflow.AssignmentBlock>    
  {
    public virtual global::System.String ActionItem
    {
      get { return this.GetCustomProperty<global::System.String>("ActionItem"); }
      set { this.SetCustomProperty("ActionItem", value); }
    }
    public virtual global::System.DateTime? ScheduledDate
    {
      get { return this.GetCustomProperty<global::System.DateTime?>("ScheduledDate"); }
      set { this.SetCustomProperty("ScheduledDate", value); }
    }
    public virtual global::System.DateTime? NewDeadline
    {
      get { return this.GetCustomProperty<global::System.DateTime?>("NewDeadline"); }
      set { this.SetCustomProperty("NewDeadline", value); }
    }

    public virtual global::Sungero.Company.IEmployee AssignedBy
    {
      get { return this.GetCustomNavigationProperty<global::Sungero.Company.IEmployee>("AssignedBy"); }
      set { this.SetCustomNavigationProperty("AssignedBy", value); }
    }




    public ActionItemSupervisorAssignmentBlock(global::Sungero.Workflow.AssignmentBlock block) : base(block) { }
  }
}

// ==================================================================
// ActionItemSupervisorAssignmentChildWrappers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagement.Server
{
}
