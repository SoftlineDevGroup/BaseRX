
// ==================================================================
// AcquaintanceTaskPerformers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagement.Server
{
  public class AcquaintanceTaskPerformersFilterForPerformer<TQueryEntity, TSourceEntity, TRootEntity>
    : global::Sungero.Domain.ChildEntityPropertyFilterBase<TQueryEntity, TSourceEntity, TRootEntity>
    where TQueryEntity : class, global::Sungero.CoreEntities.IRecipient
    where TSourceEntity : class, global::Sungero.RecordManagement.IAcquaintanceTaskPerformers
    where TRootEntity : class, global::Sungero.RecordManagement.IAcquaintanceTask
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, TSourceEntity sourceEntity, TRootEntity rootEntity)
    {
      var args = new global::Sungero.Domain.PropertyFilteringEventArgs(sourceEntity);
      var result = new global::Sungero.RecordManagement.AcquaintanceTaskPerformersPerformerPropertyFilteringServerHandler<TQueryEntity>(sourceEntity, rootEntity).PerformersPerformerFiltering(query, args);
      if (args.DisableUiFiltering)
        global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public AcquaintanceTaskPerformersFilterForPerformer(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class AcquaintanceTaskPerformersSearchFilterForPerformer<TQueryEntity>
    : global::Sungero.Domain.SearchDialogPropertyFilter<TQueryEntity>
    where TQueryEntity : class, global::Sungero.CoreEntities.IRecipient
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, System.Guid entityType)
    {
      var args = new global::Sungero.Domain.PropertySearchDialogFilteringEventArgs(entityType);
      var result = new global::Sungero.RecordManagement.AcquaintanceTaskPerformersPerformerSearchPropertyFilteringServerHandler<TQueryEntity>().PerformersPerformerSearchDialogFiltering(query, args);
      if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public AcquaintanceTaskPerformersSearchFilterForPerformer(string propertyName)
      : base(propertyName)
    {
    }
  }



  [global::Sungero.Domain.PropertyFilter(typeof(global::Sungero.RecordManagement.Server.AcquaintanceTaskPerformersFilterForPerformer<global::Sungero.CoreEntities.IRecipient, global::Sungero.RecordManagement.IAcquaintanceTaskPerformers, global::Sungero.RecordManagement.IAcquaintanceTask>), "Performer")]
  [global::Sungero.Domain.SearchPropertyFilter(typeof(global::Sungero.RecordManagement.Server.AcquaintanceTaskPerformersSearchFilterForPerformer<global::Sungero.CoreEntities.IRecipient>), "Performer")]


  public class AcquaintanceTaskPerformers :
    global::Sungero.Domain.ChildEntity, global::Sungero.RecordManagement.IAcquaintanceTaskPerformers
  {
    public static new readonly global::System.Guid ClassTypeGuid = global::System.Guid.Parse("7c55bb29-1afc-47cf-97ad-42a813feae35");

    public override global::System.Guid TypeGuid
    {
      get { return global::Sungero.RecordManagement.Server.AcquaintanceTaskPerformers.ClassTypeGuid; }
    }

    public override string TypeName
    {
      get { return "Sungero.RecordManagement.IAcquaintanceTaskPerformers, Sungero.Domain.Interfaces"; }
    }

    public new virtual global::Sungero.RecordManagement.IAcquaintanceTaskPerformersState State
    {
      get { return (global::Sungero.RecordManagement.IAcquaintanceTaskPerformersState)base.State; }
    }

    protected override global::Sungero.Domain.Shared.IEntityState CreateState()
    {
      return new global::Sungero.RecordManagement.Shared.AcquaintanceTaskPerformersState(this);
    }

    public new virtual global::Sungero.RecordManagement.IAcquaintanceTaskPerformersInfo Info
    {
      get { return (global::Sungero.RecordManagement.IAcquaintanceTaskPerformersInfo)base.Info; }
    }


    public global::Sungero.RecordManagement.IAcquaintanceTask AcquaintanceTask { get; set; }

    public override global::Sungero.Domain.Shared.IEntity RootEntity
    {
      get { return this.AcquaintanceTask; }
      set { this.AcquaintanceTask = (global::Sungero.RecordManagement.IAcquaintanceTask)value; }
    }

    protected override object CreateSharedHandlers() {
      return new global::Sungero.RecordManagement.AcquaintanceTaskPerformersSharedHandlers(this);
    }







    private global::Sungero.CoreEntities.IRecipient _Performer;
    public virtual global::Sungero.CoreEntities.IRecipient Performer
    {
      get
      {
        return this._Performer;
      }

      set
      {
        this.SetPropertyValue("Performer", this._Performer, value, (propertyValue) => { this._Performer = propertyValue; }, this.PerformerChangedHandler);
      }
    }




    #region Framework events

    protected void PerformerChangedHandler()
    {
      var args = new global::Sungero.RecordManagement.Shared.AcquaintanceTaskPerformersPerformerChangedEventArgs(this.State.Properties.Performer, this.Performer, this);
     ((global::Sungero.RecordManagement.AcquaintanceTaskPerformersSharedHandlers)this.SharedHandlers).PerformersPerformerChanged(args);
    }



    #endregion


    public AcquaintanceTaskPerformers()
    {
    }

  }
}

// ==================================================================
// AcquaintanceTaskPerformersHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagement
{
  public partial class AcquaintanceTaskPerformersPerformerPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.ChildEntityPropertyFilteringServerHandler
    where T : class, global::Sungero.CoreEntities.IRecipient
  {
    private global::Sungero.RecordManagement.IAcquaintanceTaskPerformers _obj
    {
      get { return (global::Sungero.RecordManagement.IAcquaintanceTaskPerformers)this.Entity; }
    }

    private global::Sungero.RecordManagement.IAcquaintanceTask _root
    {
      get { return (global::Sungero.RecordManagement.IAcquaintanceTask)this.Root; }
    }

    public AcquaintanceTaskPerformersPerformerPropertyFilteringServerHandler(global::Sungero.RecordManagement.IAcquaintanceTaskPerformers entity, global::Sungero.RecordManagement.IAcquaintanceTask root)
      : base(entity, root)
    {
    }
  }

  public partial class AcquaintanceTaskPerformersPerformerSearchPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.SearchPropertyFilteringServerHandler
    where T : class, global::Sungero.CoreEntities.IRecipient
  {

    public virtual global::System.Linq.IQueryable<T> PerformersPerformerSearchDialogFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertySearchDialogFilteringEventArgs e)
    {
      return query;
    }

    public AcquaintanceTaskPerformersPerformerSearchPropertyFilteringServerHandler()
      : base()
    {
    }
  }



}

// ==================================================================
// AcquaintanceTaskPerformersEventArgs.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagement.Server
{
}
