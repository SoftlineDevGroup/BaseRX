
// ==================================================================
// Agenda.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Meetings.Client
{
  public class Agenda :
    global::Sungero.Docflow.Client.InternalDocumentBase, global::Sungero.Meetings.IAgenda
  {
    #region Fields and properties

    public static new readonly global::System.Guid ClassTypeGuid = global::System.Guid.Parse("5261da93-7879-4210-b3db-c92fa894ab4d");

    public override global::System.Guid TypeGuid
    {
      get { return global::Sungero.Meetings.Client.Agenda.ClassTypeGuid; }
    }

    public override string TypeName
    {
      get { return "Sungero.Meetings.IAgenda, Sungero.Domain.Interfaces"; }
    }

      public override string DisplayValue
      {
        get { return this.Name; }
        set { this.Name = value; }
      }

      public override string DisplayPropertyName
      {
        get { return "Name"; }
      }


    public new global::Sungero.Meetings.IAgendaState State
    {
      get
      {
        return (global::Sungero.Meetings.IAgendaState)base.State;
      }
    }

    protected override global::Sungero.Domain.Shared.IEntityState CreateState()
    {
      return new global::Sungero.Meetings.Shared.AgendaState(this);
    }

    public new global::Sungero.Meetings.IAgendaInfo Info
    {
      get
      {
        return (global::Sungero.Meetings.IAgendaInfo)base.Info;
      }
    }

    public new global::Sungero.Meetings.IAgendaAccessRights AccessRights
    {
      get
      {
        return (global::Sungero.Meetings.IAgendaAccessRights)base.AccessRights;
      }
    }

    protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
    {
      return new global::Sungero.Meetings.Client.AgendaAccessRights(this);
    }




              protected global::Sungero.Domain.Client.INavigationProperty<global::Sungero.Meetings.IMeeting> _Meeting;

              public virtual global::Sungero.Meetings.IMeeting Meeting
              {
              get
              {
                return this._Meeting.Value as global::Sungero.Meetings.IMeeting;
              }

              set
              {
                (this._Meeting as global::Sungero.Domain.Client.IProperty).Value = value;
              }
            }










    #endregion

    #region Methods

    protected override object CreateActionsHandlers()
    {
      return new global::Sungero.Meetings.Client.AgendaActions(this);
    }

    protected override object CreateCollectionActionsHandlers()
    {
      return new global::Sungero.Meetings.Client.AgendaCollectionActions();
    }

    protected override object CreateAnyChildEntityActionsHandlers()
    {
      return new global::Sungero.Meetings.Client.AgendaAnyChildEntityActions();
    }

    protected override object CreateAnyChildEntityCollectionActionsHandlers()
    {
      return new global::Sungero.Meetings.Client.AgendaAnyChildEntityCollectionActions();
    }


    protected override global::Sungero.Domain.Client.EntityFunctions CreateClientFunctions()
    {
      return new global::Sungero.Meetings.Client.AgendaFunctions(this);
    }

    protected override global::Sungero.Domain.Shared.EntityFunctions CreateSharedFunctions()
    {
      return new global::Sungero.Meetings.Shared.AgendaFunctions(this);
    }
    protected override object CreateHandlers() {
      return new global::Sungero.Meetings.AgendaClientHandlers(this);
    }
    protected override object CreateSharedHandlers() {
      return new global::Sungero.Meetings.AgendaSharedHandlers(this);
    }

    #endregion

    #region Framework events

    protected void MeetingChangedHandler()
    {
      var args = new global::Sungero.Meetings.Shared.AgendaMeetingChangedEventArgs(this.State.Properties.Meeting, this.Meeting, this);
     ((global::Sungero.Meetings.AgendaSharedHandlers)this.SharedHandlers).MeetingChanged(args);
    }





  protected global::Sungero.Meetings.IMeeting MeetingValueInputHandler(global::Sungero.Meetings.IMeeting value)
  {
    var args = new global::Sungero.Meetings.Client.AgendaMeetingValueInputEventArgs(this.Meeting, value, this, this.Info.Properties.Meeting);
    ((global::Sungero.Meetings.AgendaClientHandlers)this.Handlers).MeetingValueInput(args);
    return args.NewValue;
  }



    #endregion

    #region Constructors




















              protected virtual void InitMeetingNavigationProperty()
              {
                this._Meeting = new global::Sungero.Domain.Client.NavigationProperty<global::Sungero.Meetings.IMeeting>("Meeting", this);
                this._Meeting.ValueChanged += (sender, e) => { this.MeetingChangedHandler(); };
                this.AddProperty(this._Meeting as global::Sungero.Domain.Client.IProperty);
              }



            protected override void InitVersionsCollectionProperty()
            {
              this._Versions = new global::Sungero.Domain.Client.ListProperty<global::Sungero.Meetings.IAgendaVersions>("Versions", this);
              this._Versions.ValueChanged += (sender, e) => { this.VersionsChangedHandler(); };
              this.AddProperty((global::Sungero.Domain.Client.IProperty)this._Versions);
              this.SetVersionsEventHandlers();
            }

            protected override void InitTrackingCollectionProperty()
            {
              this._Tracking = new global::Sungero.Domain.Client.ListProperty<global::Sungero.Meetings.IAgendaTracking>("Tracking", this);
              this._Tracking.ValueChanged += (sender, e) => { this.TrackingChangedHandler(); };
              this.AddProperty((global::Sungero.Domain.Client.IProperty)this._Tracking);
              this.SetTrackingEventHandlers();
            }


    public Agenda()
    {

            this.InitMeetingNavigationProperty();








    }

    #endregion

  }
}

// ==================================================================
// AgendaPresenter.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Meetings.Client
{
  public class AgendaPresenter<T> :
    global::Sungero.Docflow.Client.InternalDocumentBasePresenter<T>
    where T : class, global::Sungero.Meetings.IAgenda
  {
    #region Fields and properties




    #endregion

    #region Methods

    #endregion

    #region Framework events

    protected override void EntityPropertyChangedEventHandler(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
    {
      base.EntityPropertyChangedEventHandler(sender, e);
    }

    #endregion

              protected global::Sungero.Domain.Client.IEntityCollectionPresenter _MeetingCollectionPresenter;
              public global::Sungero.Domain.Client.IEntityCollectionPresenter MeetingCollectionPresenter
              {
          get { return this._MeetingCollectionPresenter; }
        }



    #region Constructors

    private void Init()
    {
              this._AssociatedApplicationCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Content.IAssociatedApplication>(() => this.Entity.Id, typeof(T), "AssociatedApplication");

              this._DeliveryMethodCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Docflow.IMailDeliveryMethod>(() => this.Entity.Id, typeof(T), "DeliveryMethod");

              this._CaseFileCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Docflow.ICaseFile>(() => this.Entity.Id, typeof(T), "CaseFile");

              this._DeliveredToCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Company.IEmployee>(() => this.Entity.Id, typeof(T), "DeliveredTo");

              this._ResponsibleForReturnEmployeeCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Company.IEmployee>(() => this.Entity.Id, typeof(T), "ResponsibleForReturnEmployee");

              this._ProjectCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Docflow.IProjectBase>(() => this.Entity.Id, typeof(T), "Project");

              this._LeadingDocumentCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Docflow.IOfficialDocument>(() => this.Entity.Id, typeof(T), "LeadingDocument");

              this._StorageCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.CoreEntities.IStorage>(() => this.Entity.Id, typeof(T), "Storage");

              this._DocumentRegisterCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationProperty<global::Sungero.Docflow.IDocumentRegister>(() => this.Entity, typeof(T), "DocumentRegister");

              this._DocumentKindCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationProperty<global::Sungero.Docflow.IDocumentKind>(() => this.Entity, typeof(T), "DocumentKind");

              this._BusinessUnitCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Company.IBusinessUnit>(() => this.Entity.Id, typeof(T), "BusinessUnit");

              this._AssigneeCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Company.IEmployee>(() => this.Entity.Id, typeof(T), "Assignee");

              this._DepartmentCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Company.IDepartment>(() => this.Entity.Id, typeof(T), "Department");

              this._PreparedByCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Company.IEmployee>(() => this.Entity.Id, typeof(T), "PreparedBy");

              this._AuthorCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.CoreEntities.IUser>(() => this.Entity.Id, typeof(T), "Author");

              this._OurSignatoryCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationProperty<global::Sungero.Company.IEmployee>(() => this.Entity, typeof(T), "OurSignatory");

              this._DocumentGroupCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationProperty<global::Sungero.Docflow.IDocumentGroupBase>(() => this.Entity, typeof(T), "DocumentGroup");

                  this._MeetingCollectionPresenter = this.CreateCollectionPresenterForNavigationProperty<global::Sungero.Meetings.IMeeting>(global::System.Guid.Parse("8eb6191e-c0ab-453c-a51a-5351a6fea7da"));
              this._MeetingCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Meetings.IMeeting>(() => this.Entity.Id, typeof(T), "Meeting");


                        this._VersionsAuthorCollectionPresenter
                        .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.CoreEntities.IUser>(() => this.Entity.Id, typeof(Sungero.Meetings.IAgendaVersions), "Author");

                        this._VersionsModifiedByCollectionPresenter
                        .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.CoreEntities.IUser>(() => this.Entity.Id, typeof(Sungero.Meetings.IAgendaVersions), "ModifiedBy");

                        this._VersionsAssociatedApplicationCollectionPresenter
                        .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Content.IAssociatedApplication>(() => this.Entity.Id, typeof(Sungero.Meetings.IAgendaVersions), "AssociatedApplication");

                        this._VersionsBodyAssociatedApplicationCollectionPresenter
                        .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Content.IAssociatedApplication>(() => this.Entity.Id, typeof(Sungero.Meetings.IAgendaVersions), "BodyAssociatedApplication");


                        this._TrackingDeliveredToCollectionPresenter
                        .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Company.IEmployee>(() => this.Entity.Id, typeof(Sungero.Meetings.IAgendaTracking), "DeliveredTo");

                        this._TrackingReturnTaskCollectionPresenter
                        .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Workflow.ITask>(() => this.Entity.Id, typeof(Sungero.Meetings.IAgendaTracking), "ReturnTask");



    }

    public AgendaPresenter()
    {
      this.Init();
    }

    #endregion
  }
}

// ==================================================================
// AgendaCollectionPresenter.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Meetings.Client
{
  public class AgendaCollectionPresenter<T> : 
    global::Sungero.Docflow.Client.InternalDocumentBaseCollectionPresenter<T>
    where T: class, global::Sungero.Meetings.IAgenda
  {
    #region Actions



    #endregion

    #region Methods


    #endregion

    public AgendaCollectionPresenter(global::System.Linq.IQueryable<T> query, OnLookup onLookup)
      : base(query, onLookup)
    {
    }

    public AgendaCollectionPresenter(global::System.Linq.IQueryable<T> query)
      : this(query, null) { }

    public AgendaCollectionPresenter(OnLookup onLookup)
      : this(null, onLookup) { }

    public AgendaCollectionPresenter()
      : this(null, null) { }
  }
}

// ==================================================================
// AgendaRepositoryImplementer.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Meetings.Client
{ 
  public class AgendaRepositoryImplementer<T> : 
      global::Sungero.Docflow.Client.InternalDocumentBaseRepositoryImplementer<T>,
      global::Sungero.Meetings.IAgendaRepositoryImplementer<T>
      where T : global::Sungero.Meetings.IAgenda
    {
       public new global::Sungero.Meetings.IAgendaAccessRights AccessRights
       {
          get { return (global::Sungero.Meetings.IAgendaAccessRights)base.AccessRights; }
       }

       public new global::Sungero.Meetings.IAgendaInfo Info
       {
          get { return (global::Sungero.Meetings.IAgendaInfo)base.Info; }
       }

       protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
       {
         return new global::Sungero.Meetings.Client.AgendaTypeAccessRights(typeof(T));
       }
    }
}

// ==================================================================
// AgendaAccessRights.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Meetings.Client
{
  public class AgendaAccessRights : 
    Sungero.Docflow.Client.InternalDocumentBaseAccessRights, Sungero.Meetings.IAgendaAccessRights
  {

    public AgendaAccessRights(global::Sungero.Domain.Shared.IEntity entity) : base(entity)
    {
    }
  }

  public class AgendaTypeAccessRights : 
    Sungero.Docflow.Client.InternalDocumentBaseTypeAccessRights, Sungero.Meetings.IAgendaAccessRights
  {

    public AgendaTypeAccessRights(global::System.Type entityType) : base(entityType)
    {
    }
  }
}
