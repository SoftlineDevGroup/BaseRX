
// ==================================================================
// Minutes.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Meetings.Client
{
  public class Minutes :
    global::Sungero.Docflow.Client.MinutesBase, global::Sungero.Meetings.IMinutes
  {
    #region Fields and properties

    public static new readonly global::System.Guid ClassTypeGuid = global::System.Guid.Parse("bb4780ff-b2c3-4044-a390-e9e110791bf6");

    public override global::System.Guid TypeGuid
    {
      get { return global::Sungero.Meetings.Client.Minutes.ClassTypeGuid; }
    }

    public override string TypeName
    {
      get { return "Sungero.Meetings.IMinutes, Sungero.Domain.Interfaces"; }
    }

      public override string DisplayValue
      {
        get { return this.Name; }
        set { this.Name = value; }
      }

      public override string DisplayPropertyName
      {
        get { return "Name"; }
      }


    public new global::Sungero.Meetings.IMinutesState State
    {
      get
      {
        return (global::Sungero.Meetings.IMinutesState)base.State;
      }
    }

    protected override global::Sungero.Domain.Shared.IEntityState CreateState()
    {
      return new global::Sungero.Meetings.Shared.MinutesState(this);
    }

    public new global::Sungero.Meetings.IMinutesInfo Info
    {
      get
      {
        return (global::Sungero.Meetings.IMinutesInfo)base.Info;
      }
    }

    public new global::Sungero.Meetings.IMinutesAccessRights AccessRights
    {
      get
      {
        return (global::Sungero.Meetings.IMinutesAccessRights)base.AccessRights;
      }
    }

    protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
    {
      return new global::Sungero.Meetings.Client.MinutesAccessRights(this);
    }




              protected global::Sungero.Domain.Client.INavigationProperty<global::Sungero.Meetings.IMeeting> _Meeting;

              public virtual global::Sungero.Meetings.IMeeting Meeting
              {
              get
              {
                return this._Meeting.Value as global::Sungero.Meetings.IMeeting;
              }

              set
              {
                (this._Meeting as global::Sungero.Domain.Client.IProperty).Value = value;
              }
            }










    #endregion

    #region Methods

    protected override object CreateActionsHandlers()
    {
      return new global::Sungero.Meetings.Client.MinutesActions(this);
    }

    protected override object CreateCollectionActionsHandlers()
    {
      return new global::Sungero.Meetings.Client.MinutesCollectionActions();
    }

    protected override object CreateAnyChildEntityActionsHandlers()
    {
      return new global::Sungero.Meetings.Client.MinutesAnyChildEntityActions();
    }

    protected override object CreateAnyChildEntityCollectionActionsHandlers()
    {
      return new global::Sungero.Meetings.Client.MinutesAnyChildEntityCollectionActions();
    }


    protected override global::Sungero.Domain.Client.EntityFunctions CreateClientFunctions()
    {
      return new global::Sungero.Meetings.Client.MinutesFunctions(this);
    }

    protected override global::Sungero.Domain.Shared.EntityFunctions CreateSharedFunctions()
    {
      return new global::Sungero.Meetings.Shared.MinutesFunctions(this);
    }
    protected override object CreateHandlers() {
      return new global::Sungero.Meetings.MinutesClientHandlers(this);
    }
    protected override object CreateSharedHandlers() {
      return new global::Sungero.Meetings.MinutesSharedHandlers(this);
    }

    #endregion

    #region Framework events

    protected void MeetingChangedHandler()
    {
      var args = new global::Sungero.Meetings.Shared.MinutesMeetingChangedEventArgs(this.State.Properties.Meeting, this.Meeting, this);
     ((global::Sungero.Meetings.MinutesSharedHandlers)this.SharedHandlers).MeetingChanged(args);
    }





  protected global::Sungero.Meetings.IMeeting MeetingValueInputHandler(global::Sungero.Meetings.IMeeting value)
  {
    var args = new global::Sungero.Meetings.Client.MinutesMeetingValueInputEventArgs(this.Meeting, value, this, this.Info.Properties.Meeting);
    ((global::Sungero.Meetings.MinutesClientHandlers)this.Handlers).MeetingValueInput(args);
    return args.NewValue;
  }



    #endregion

    #region Constructors




















              protected virtual void InitMeetingNavigationProperty()
              {
                this._Meeting = new global::Sungero.Domain.Client.NavigationProperty<global::Sungero.Meetings.IMeeting>("Meeting", this);
                this._Meeting.ValueChanged += (sender, e) => { this.MeetingChangedHandler(); };
                this.AddProperty(this._Meeting as global::Sungero.Domain.Client.IProperty);
              }



            protected override void InitVersionsCollectionProperty()
            {
              this._Versions = new global::Sungero.Domain.Client.ListProperty<global::Sungero.Meetings.IMinutesVersions>("Versions", this);
              this._Versions.ValueChanged += (sender, e) => { this.VersionsChangedHandler(); };
              this.AddProperty((global::Sungero.Domain.Client.IProperty)this._Versions);
              this.SetVersionsEventHandlers();
            }

            protected override void InitTrackingCollectionProperty()
            {
              this._Tracking = new global::Sungero.Domain.Client.ListProperty<global::Sungero.Meetings.IMinutesTracking>("Tracking", this);
              this._Tracking.ValueChanged += (sender, e) => { this.TrackingChangedHandler(); };
              this.AddProperty((global::Sungero.Domain.Client.IProperty)this._Tracking);
              this.SetTrackingEventHandlers();
            }


    public Minutes()
    {

            this.InitMeetingNavigationProperty();








    }

    #endregion

  }
}

// ==================================================================
// MinutesPresenter.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Meetings.Client
{
  public class MinutesPresenter<T> :
    global::Sungero.Docflow.Client.MinutesBasePresenter<T>
    where T : class, global::Sungero.Meetings.IMinutes
  {
    #region Fields and properties

          private global::System.Windows.Input.ICommand _CreateActionItemsCommand;

          public global::System.Windows.Input.ICommand CreateActionItemsCommand
          {
            get
            {
              if (this._CreateActionItemsCommand == null)
                  this._CreateActionItemsCommand = new global::Sungero.Domain.Client.SingleEntityCommand<T>("CreateActionItems", this, this.CreateActionItems, this.CanCreateActionItems) { IsEmptyParameterAllowed = true };
              return this._CreateActionItemsCommand;
            }
          }




    #endregion

    #region Methods

              private bool CanCreateActionItems(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfCanExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this);
                return ((Sungero.Meetings.Client.MinutesActions)(entity as Sungero.Meetings.Client.Minutes).ActionsHandlers).CanCreateActionItems(args);
              }

              private void CreateActionItems(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this, entity.Info.Actions.CreateActionItems);
                ((Sungero.Meetings.Client.MinutesActions)(entity as Sungero.Meetings.Client.Minutes).ActionsHandlers).CreateActionItems(args);
              }


    #endregion

    #region Framework events

    protected override void EntityPropertyChangedEventHandler(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
    {
      base.EntityPropertyChangedEventHandler(sender, e);
    }

    #endregion

              protected global::Sungero.Domain.Client.IEntityCollectionPresenter _MeetingCollectionPresenter;
              public global::Sungero.Domain.Client.IEntityCollectionPresenter MeetingCollectionPresenter
              {
          get { return this._MeetingCollectionPresenter; }
        }



    #region Constructors

    private void Init()
    {
              this._ProjectCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Docflow.IProjectBase>(() => this.Entity.Id, typeof(T), "Project");

              this._LeadingDocumentCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Docflow.IOfficialDocument>(() => this.Entity.Id, typeof(T), "LeadingDocument");

              this._StorageCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.CoreEntities.IStorage>(() => this.Entity.Id, typeof(T), "Storage");

              this._PreparedByCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Company.IEmployee>(() => this.Entity.Id, typeof(T), "PreparedBy");

              this._AssociatedApplicationCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Content.IAssociatedApplication>(() => this.Entity.Id, typeof(T), "AssociatedApplication");

              this._DeliveryMethodCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Docflow.IMailDeliveryMethod>(() => this.Entity.Id, typeof(T), "DeliveryMethod");

              this._CaseFileCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Docflow.ICaseFile>(() => this.Entity.Id, typeof(T), "CaseFile");

              this._DeliveredToCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Company.IEmployee>(() => this.Entity.Id, typeof(T), "DeliveredTo");

              this._ResponsibleForReturnEmployeeCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Company.IEmployee>(() => this.Entity.Id, typeof(T), "ResponsibleForReturnEmployee");

              this._AuthorCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.CoreEntities.IUser>(() => this.Entity.Id, typeof(T), "Author");

              this._DocumentRegisterCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationProperty<global::Sungero.Docflow.IDocumentRegister>(() => this.Entity, typeof(T), "DocumentRegister");

              this._DocumentKindCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationProperty<global::Sungero.Docflow.IDocumentKind>(() => this.Entity, typeof(T), "DocumentKind");

              this._BusinessUnitCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Company.IBusinessUnit>(() => this.Entity.Id, typeof(T), "BusinessUnit");

              this._OurSignatoryCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationProperty<global::Sungero.Company.IEmployee>(() => this.Entity, typeof(T), "OurSignatory");

              this._DocumentGroupCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationProperty<global::Sungero.Docflow.IDocumentGroupBase>(() => this.Entity, typeof(T), "DocumentGroup");

              this._DepartmentCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Company.IDepartment>(() => this.Entity.Id, typeof(T), "Department");

              this._AssigneeCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Company.IEmployee>(() => this.Entity.Id, typeof(T), "Assignee");

                  this._MeetingCollectionPresenter = this.CreateCollectionPresenterForNavigationProperty<global::Sungero.Meetings.IMeeting>(global::System.Guid.Parse("bfce41c5-c8a5-401d-9729-ad734ca1c150"));
              this._MeetingCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Meetings.IMeeting>(() => this.Entity.Id, typeof(T), "Meeting");


                        this._VersionsAuthorCollectionPresenter
                        .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.CoreEntities.IUser>(() => this.Entity.Id, typeof(Sungero.Meetings.IMinutesVersions), "Author");

                        this._VersionsModifiedByCollectionPresenter
                        .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.CoreEntities.IUser>(() => this.Entity.Id, typeof(Sungero.Meetings.IMinutesVersions), "ModifiedBy");

                        this._VersionsAssociatedApplicationCollectionPresenter
                        .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Content.IAssociatedApplication>(() => this.Entity.Id, typeof(Sungero.Meetings.IMinutesVersions), "AssociatedApplication");

                        this._VersionsBodyAssociatedApplicationCollectionPresenter
                        .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Content.IAssociatedApplication>(() => this.Entity.Id, typeof(Sungero.Meetings.IMinutesVersions), "BodyAssociatedApplication");


                        this._TrackingDeliveredToCollectionPresenter
                        .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Company.IEmployee>(() => this.Entity.Id, typeof(Sungero.Meetings.IMinutesTracking), "DeliveredTo");

                        this._TrackingReturnTaskCollectionPresenter
                        .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Workflow.ITask>(() => this.Entity.Id, typeof(Sungero.Meetings.IMinutesTracking), "ReturnTask");



    }

    public MinutesPresenter()
    {
      this.Init();
    }

    #endregion
  }
}

// ==================================================================
// MinutesCollectionPresenter.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Meetings.Client
{
  public class MinutesCollectionPresenter<T> : 
    global::Sungero.Docflow.Client.MinutesBaseCollectionPresenter<T>
    where T: class, global::Sungero.Meetings.IMinutes
  {
    #region Actions



    #endregion

    #region Methods


    #endregion

    public MinutesCollectionPresenter(global::System.Linq.IQueryable<T> query, OnLookup onLookup)
      : base(query, onLookup)
    {
    }

    public MinutesCollectionPresenter(global::System.Linq.IQueryable<T> query)
      : this(query, null) { }

    public MinutesCollectionPresenter(OnLookup onLookup)
      : this(null, onLookup) { }

    public MinutesCollectionPresenter()
      : this(null, null) { }
  }
}

// ==================================================================
// MinutesRepositoryImplementer.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Meetings.Client
{ 
  public class MinutesRepositoryImplementer<T> : 
      global::Sungero.Docflow.Client.MinutesBaseRepositoryImplementer<T>,
      global::Sungero.Meetings.IMinutesRepositoryImplementer<T>
      where T : global::Sungero.Meetings.IMinutes
    {
       public new global::Sungero.Meetings.IMinutesAccessRights AccessRights
       {
          get { return (global::Sungero.Meetings.IMinutesAccessRights)base.AccessRights; }
       }

       public new global::Sungero.Meetings.IMinutesInfo Info
       {
          get { return (global::Sungero.Meetings.IMinutesInfo)base.Info; }
       }

       protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
       {
         return new global::Sungero.Meetings.Client.MinutesTypeAccessRights(typeof(T));
       }
    }
}

// ==================================================================
// MinutesAccessRights.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Meetings.Client
{
  public class MinutesAccessRights : 
    Sungero.Docflow.Client.MinutesBaseAccessRights, Sungero.Meetings.IMinutesAccessRights
  {

    public MinutesAccessRights(global::Sungero.Domain.Shared.IEntity entity) : base(entity)
    {
    }
  }

  public class MinutesTypeAccessRights : 
    Sungero.Docflow.Client.MinutesBaseTypeAccessRights, Sungero.Meetings.IMinutesAccessRights
  {

    public MinutesTypeAccessRights(global::System.Type entityType) : base(entityType)
    {
    }
  }
}
