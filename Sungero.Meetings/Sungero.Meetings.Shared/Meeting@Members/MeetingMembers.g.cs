
// ==================================================================
// MeetingMembersState.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Meetings.Shared
{
  public class MeetingMembersState : 
    global::Sungero.Domain.Shared.ChildEntityState, global::Sungero.Meetings.IMeetingMembersState
  {
    public MeetingMembersState(global::Sungero.Meetings.IMeetingMembers entity) : base(entity) { }

    public new global::Sungero.Meetings.IMeetingMembersPropertyStates Properties
    {
      get { return (global::Sungero.Meetings.IMeetingMembersPropertyStates)base.Properties; }
    }

    protected override global::Sungero.Domain.Shared.IEntityPropertyStates CreatePropertyStates(global::Sungero.Domain.Shared.IEntity entity)
    {
      return new global::Sungero.Meetings.Shared.MeetingMembersPropertyStates(entity);
    }


  }


  public class MeetingMembersPropertyStates : 
    global::Sungero.Domain.Shared.ChildEntityPropertyStates, global::Sungero.Meetings.IMeetingMembersPropertyStates
  {
            public global::Sungero.Domain.Shared.IPropertyState<global::Sungero.Meetings.IMeeting> Meeting 
            {
              get { return this.InternalMeeting; }
            }

            protected virtual global::Sungero.Domain.Shared.IPropertyState<global::Sungero.Meetings.IMeeting> InternalMeeting
            {
              get { return this.GetPropertyState<global::Sungero.Meetings.IMeeting>("Meeting"); }
            }
            public global::Sungero.Domain.Shared.IPropertyState<global::Sungero.CoreEntities.IRecipient> Member 
            {
              get { return this.InternalMember; }
            }

            protected virtual global::Sungero.Domain.Shared.IPropertyState<global::Sungero.CoreEntities.IRecipient> InternalMember
            {
              get { return this.GetPropertyState<global::Sungero.CoreEntities.IRecipient>("Member"); }
            }


    protected internal MeetingMembersPropertyStates(global::Sungero.Domain.Shared.IEntity entity) : base(entity) { }
  }

  public class MeetingMembersCollectionPropertyState<T> :
    global::Sungero.Domain.Shared.ChildEntityCollectionPropertyState<T>, global::Sungero.Meetings.IMeetingMembersCollectionPropertyState<T>
    where T : global::Sungero.Meetings.IMeetingMembers
  {
    public new global::Sungero.Meetings.IMeetingMembersCollectionPropertyStates Properties
    {
      get { return (global::Sungero.Meetings.IMeetingMembersCollectionPropertyStates)base.Properties; }
    }

    protected override global::Sungero.Domain.Shared.IChildEntityCollectionPropertyStates CreatePropertyStates()
    {
      return new global::Sungero.Meetings.Shared.MeetingMembersCollectionPropertyStates(this.ChildEntityMetadata);
    }

    protected internal MeetingMembersCollectionPropertyState(global::Sungero.Domain.Shared.IEntity entity, string propertyName) : base(entity, propertyName) { }
  }

  public class MeetingMembersCollectionPropertyStates :
    global::Sungero.Domain.Shared.ChildEntityCollectionPropertyStates, global::Sungero.Meetings.IMeetingMembersCollectionPropertyStates
  {
        public global::Sungero.Domain.Shared.IChildPropertySummaryState Meeting
        {
          get { return this.GetChildPropertySummaryState("Meeting"); }
        }
        public global::Sungero.Domain.Shared.IChildPropertySummaryState Member
        {
          get { return this.GetChildPropertySummaryState("Member"); }
        }


    protected internal MeetingMembersCollectionPropertyStates(global::Sungero.Metadata.EntityMetadata childEntityMetadata) : base(childEntityMetadata) { }
  }
}

// ==================================================================
// MeetingMembersEventArgs.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Meetings.Shared
{  
    public class MeetingMembersMemberChangedEventArgs : global::Sungero.Domain.Shared.PropertyChangedEventArgs<global::Sungero.CoreEntities.IRecipient>
    {
      public MeetingMembersMemberChangedEventArgs(global::Sungero.Domain.Shared.IPropertyState<global::Sungero.CoreEntities.IRecipient> state, global::Sungero.CoreEntities.IRecipient newValue, global::Sungero.Domain.Shared.IEntity entity): base(state, newValue, entity) { }
    }

}

// ==================================================================
// MeetingMembersInfo.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Meetings.Shared
{
  public class MeetingMembersInfo : 
    global::Sungero.Domain.Shared.ChildEntityInfo, global::Sungero.Meetings.IMeetingMembersInfo
  {
    public MeetingMembersInfo(global::System.Type entityType) : base(entityType) { }

    public new global::Sungero.Meetings.IMeetingMembersPropertiesInfo Properties
    {
      get { return (global::Sungero.Meetings.IMeetingMembersPropertiesInfo)base.Properties; }
    }

    protected override global::Sungero.Domain.Shared.IEntityPropertiesInfo CreateEntityPropertiesInfo(global::System.Type entityType)
    {
      return new global::Sungero.Meetings.Shared.MeetingMembersPropertiesInfo(entityType);
    }

  }

  public class MeetingMembersPropertiesInfo : 
    global::Sungero.Domain.Shared.ChildEntityPropertiesInfo, global::Sungero.Meetings.IMeetingMembersPropertiesInfo
  {
        public global::Sungero.Domain.Shared.INavigationPropertyInfo<global::Sungero.Meetings.IMeetingInfo, global::Sungero.Meetings.IMeeting> Meeting 
        {
          get
          {
             var propertyMetadata = this.GetPropertyMetadata<global::Sungero.Metadata.NavigationPropertyMetadata>("Meeting");
             return new global::Sungero.Domain.Shared.NavigationPropertyInfo<global::Sungero.Meetings.IMeetingInfo, global::Sungero.Meetings.IMeeting>(propertyMetadata);
          }
        }
        public global::Sungero.Domain.Shared.INavigationPropertyInfo<global::Sungero.CoreEntities.IRecipientInfo, global::Sungero.CoreEntities.IRecipient> Member 
        {
          get
          {
             var propertyMetadata = this.GetPropertyMetadata<global::Sungero.Metadata.NavigationPropertyMetadata>("Member");
             return new global::Sungero.Domain.Shared.NavigationPropertyInfo<global::Sungero.CoreEntities.IRecipientInfo, global::Sungero.CoreEntities.IRecipient>(propertyMetadata);
          }
        }


    protected internal MeetingMembersPropertiesInfo(global::System.Type entityType) : base(entityType) { }
  }

}
