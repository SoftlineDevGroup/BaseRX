
// ==================================================================
// AgendaState.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Meetings.Shared
{
  public class AgendaState : 
    global::Sungero.Docflow.Shared.InternalDocumentBaseState, global::Sungero.Meetings.IAgendaState
  {
    public AgendaState(global::Sungero.Meetings.IAgenda entity) : base(entity) { }

    public new global::Sungero.Meetings.IAgendaPropertyStates Properties
    {
      get { return (global::Sungero.Meetings.IAgendaPropertyStates)base.Properties; }
    }

    protected override global::Sungero.Domain.Shared.IEntityPropertyStates CreatePropertyStates(global::Sungero.Domain.Shared.IEntity entity)
    {
      return new global::Sungero.Meetings.Shared.AgendaPropertyStates(entity);
    }


    public new global::Sungero.Meetings.IAgendaControlStates Controls
    {
      get { return (global::Sungero.Meetings.IAgendaControlStates)base.Controls; }
    }

    protected override global::Sungero.Domain.Shared.IEntityControlStates CreateControlStates(global::Sungero.Domain.Shared.IEntity entity)
    {
      return new global::Sungero.Meetings.Shared.AgendaControlStates(entity);
    }

    public new global::Sungero.Meetings.IAgendaPageStates Pages
    {
      get { return (global::Sungero.Meetings.IAgendaPageStates)base.Pages; }
    }

    protected override global::Sungero.Domain.Shared.IEntityPageStates CreatePageStates(global::Sungero.Domain.Shared.IEntity entity)
    {
      return new global::Sungero.Meetings.Shared.AgendaPageStates(entity);
    }

  }


  public class AgendaControlStates : 
    global::Sungero.Docflow.Shared.InternalDocumentBaseControlStates, global::Sungero.Meetings.IAgendaControlStates
  {

    protected internal AgendaControlStates(global::Sungero.Domain.Shared.IEntity entity) : base(entity) { }
  }
  public class AgendaPageStates : 
    global::Sungero.Docflow.Shared.InternalDocumentBasePageStates, global::Sungero.Meetings.IAgendaPageStates
  {

    protected internal AgendaPageStates(global::Sungero.Domain.Shared.IEntity entity) : base(entity) { }
  }

  public class AgendaPropertyStates : 
    global::Sungero.Docflow.Shared.InternalDocumentBasePropertyStates, global::Sungero.Meetings.IAgendaPropertyStates
  {
            public new global::Sungero.Meetings.IAgendaVersionsCollectionPropertyState<global::Sungero.Meetings.IAgendaVersions> Versions
            {
              get { return (global::Sungero.Meetings.IAgendaVersionsCollectionPropertyState<global::Sungero.Meetings.IAgendaVersions>)base.Versions; }
            }

            protected override global::Sungero.Content.IElectronicDocumentVersionsCollectionPropertyState<global::Sungero.Content.IElectronicDocumentVersions> CreateVersionsState(global::Sungero.Domain.Shared.IEntity entity, string propertyName)
            {
              return new global::Sungero.Meetings.Shared.AgendaVersionsCollectionPropertyState<global::Sungero.Meetings.IAgendaVersions>(entity, propertyName);
            }
            public new global::Sungero.Meetings.IAgendaTrackingCollectionPropertyState<global::Sungero.Meetings.IAgendaTracking> Tracking
            {
              get { return (global::Sungero.Meetings.IAgendaTrackingCollectionPropertyState<global::Sungero.Meetings.IAgendaTracking>)base.Tracking; }
            }

            protected override global::Sungero.Docflow.IOfficialDocumentTrackingCollectionPropertyState<global::Sungero.Docflow.IOfficialDocumentTracking> CreateTrackingState(global::Sungero.Domain.Shared.IEntity entity, string propertyName)
            {
              return new global::Sungero.Meetings.Shared.AgendaTrackingCollectionPropertyState<global::Sungero.Meetings.IAgendaTracking>(entity, propertyName);
            }
            public global::Sungero.Domain.Shared.IPropertyState<global::Sungero.Meetings.IMeeting> Meeting 
            {
              get { return this.InternalMeeting; }
            }

            protected virtual global::Sungero.Domain.Shared.IPropertyState<global::Sungero.Meetings.IMeeting> InternalMeeting
            {
              get { return this.GetPropertyState<global::Sungero.Meetings.IMeeting>("Meeting"); }
            }


    protected internal AgendaPropertyStates(global::Sungero.Domain.Shared.IEntity entity) : base(entity) { }
  }

}

// ==================================================================
// AgendaEventArgs.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Meetings.Shared
{  
    public class AgendaMeetingChangedEventArgs : global::Sungero.Domain.Shared.PropertyChangedEventArgs<global::Sungero.Meetings.IMeeting>
    {
      public AgendaMeetingChangedEventArgs(global::Sungero.Domain.Shared.IPropertyState<global::Sungero.Meetings.IMeeting> state, global::Sungero.Meetings.IMeeting newValue, global::Sungero.Domain.Shared.IEntity entity): base(state, newValue, entity) { }
    }

}

// ==================================================================
// AgendaInfo.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Meetings.Shared
{
  public class AgendaInfo : 
    global::Sungero.Docflow.Shared.InternalDocumentBaseInfo, global::Sungero.Meetings.IAgendaInfo
  {
    public AgendaInfo(global::System.Type entityType) : base(entityType) { }

    public new global::Sungero.Meetings.IAgendaPropertiesInfo Properties
    {
      get { return (global::Sungero.Meetings.IAgendaPropertiesInfo)base.Properties; }
    }

    protected override global::Sungero.Domain.Shared.IEntityPropertiesInfo CreateEntityPropertiesInfo(global::System.Type entityType)
    {
      return new global::Sungero.Meetings.Shared.AgendaPropertiesInfo(entityType);
    }

  }

  public class AgendaPropertiesInfo : 
    global::Sungero.Docflow.Shared.InternalDocumentBasePropertiesInfo, global::Sungero.Meetings.IAgendaPropertiesInfo
  {
        public new global::Sungero.Domain.Shared.ICollectionPropertyInfo<global::Sungero.Meetings.IAgendaVersionsPropertiesInfo> Versions
        {
          get
          {
             var propertyMetadata = this.GetPropertyMetadata<global::Sungero.Metadata.CollectionPropertyMetadata>("Versions");
             return new global::Sungero.Domain.Shared.CollectionPropertyInfo<global::Sungero.Meetings.IAgendaVersionsPropertiesInfo>(propertyMetadata);
          }
        }
        public new global::Sungero.Domain.Shared.ICollectionPropertyInfo<global::Sungero.Meetings.IAgendaTrackingPropertiesInfo> Tracking
        {
          get
          {
             var propertyMetadata = this.GetPropertyMetadata<global::Sungero.Metadata.CollectionPropertyMetadata>("Tracking");
             return new global::Sungero.Domain.Shared.CollectionPropertyInfo<global::Sungero.Meetings.IAgendaTrackingPropertiesInfo>(propertyMetadata);
          }
        }
        public global::Sungero.Domain.Shared.INavigationPropertyInfo<global::Sungero.Meetings.IMeetingInfo, global::Sungero.Meetings.IMeeting> Meeting 
        {
          get
          {
             var propertyMetadata = this.GetPropertyMetadata<global::Sungero.Metadata.NavigationPropertyMetadata>("Meeting");
             return new global::Sungero.Domain.Shared.NavigationPropertyInfo<global::Sungero.Meetings.IMeetingInfo, global::Sungero.Meetings.IMeeting>(propertyMetadata);
          }
        }


    protected internal AgendaPropertiesInfo(global::System.Type entityType) : base(entityType) { }
  }

}

// ==================================================================
// AgendaHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Meetings
{
  public partial class AgendaSharedHandlers : global::Sungero.Docflow.InternalDocumentBaseSharedHandlers
  {
    private global::Sungero.Meetings.IAgenda _obj
    {
      get { return (global::Sungero.Meetings.IAgenda)this.Entity; }
    }


    public AgendaSharedHandlers(global::Sungero.Meetings.IAgenda entity) : base(entity)
    {
    }
  }

}

// ==================================================================
// AgendaResources.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Meetings.Shared.Agenda
{
  /// <summary>
  /// Represents Agenda resources.
  /// </summary>
  public class AgendaResources : global::Sungero.Docflow.Shared.InternalDocumentBase.InternalDocumentBaseResources, global::Sungero.Meetings.Agenda.IAgendaResources
  {
    public virtual global::CommonLibrary.LocalizedString GetMeetingPresident
    {
      get
      {
        return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Meetings.IAgenda) , "GetMeetingPresident");
      }
    }

    public virtual global::CommonLibrary.LocalizedString GetMeetingPresidentFormat(params object[] args)
    {
      return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Meetings.IAgenda), "GetMeetingPresident", false, args);
    }
    public virtual global::CommonLibrary.LocalizedString GetMeetingSecretary
    {
      get
      {
        return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Meetings.IAgenda) , "GetMeetingSecretary");
      }
    }

    public virtual global::CommonLibrary.LocalizedString GetMeetingSecretaryFormat(params object[] args)
    {
      return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Meetings.IAgenda), "GetMeetingSecretary", false, args);
    }
    public virtual global::CommonLibrary.LocalizedString GetMeetingName
    {
      get
      {
        return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Meetings.IAgenda) , "GetMeetingName");
      }
    }

    public virtual global::CommonLibrary.LocalizedString GetMeetingNameFormat(params object[] args)
    {
      return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Meetings.IAgenda), "GetMeetingName", false, args);
    }
    public virtual global::CommonLibrary.LocalizedString GetMeetingMembers
    {
      get
      {
        return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Meetings.IAgenda) , "GetMeetingMembers");
      }
    }

    public virtual global::CommonLibrary.LocalizedString GetMeetingMembersFormat(params object[] args)
    {
      return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Meetings.IAgenda), "GetMeetingMembers", false, args);
    }
    public virtual global::CommonLibrary.LocalizedString GetMeetingDate
    {
      get
      {
        return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Meetings.IAgenda) , "GetMeetingDate");
      }
    }

    public virtual global::CommonLibrary.LocalizedString GetMeetingDateFormat(params object[] args)
    {
      return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Meetings.IAgenda), "GetMeetingDate", false, args);
    }
    public virtual global::CommonLibrary.LocalizedString For
    {
      get
      {
        return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Meetings.IAgenda) , "For");
      }
    }

    public virtual global::CommonLibrary.LocalizedString ForFormat(params object[] args)
    {
      return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Meetings.IAgenda), "For", false, args);
    }
    public virtual global::CommonLibrary.LocalizedString GetMeetingLocation
    {
      get
      {
        return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Meetings.IAgenda) , "GetMeetingLocation");
      }
    }

    public virtual global::CommonLibrary.LocalizedString GetMeetingLocationFormat(params object[] args)
    {
      return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Meetings.IAgenda), "GetMeetingLocation", false, args);
    }
    public virtual global::CommonLibrary.LocalizedString GetMeetingTime
    {
      get
      {
        return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Meetings.IAgenda) , "GetMeetingTime");
      }
    }

    public virtual global::CommonLibrary.LocalizedString GetMeetingTimeFormat(params object[] args)
    {
      return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Meetings.IAgenda), "GetMeetingTime", false, args);
    }
    public virtual global::CommonLibrary.LocalizedString GetMeetingMembersWithJobTitle
    {
      get
      {
        return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Meetings.IAgenda) , "GetMeetingMembersWithJobTitle");
      }
    }

    public virtual global::CommonLibrary.LocalizedString GetMeetingMembersWithJobTitleFormat(params object[] args)
    {
      return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Meetings.IAgenda), "GetMeetingMembersWithJobTitle", false, args);
    }

  }
}

// ==================================================================
// AgendaSharedFunctions.g.cs
// ==================================================================

namespace Sungero.Meetings.Shared
{
  public partial class AgendaFunctions : global::Sungero.Docflow.Shared.InternalDocumentBaseFunctions
  {
    private global::Sungero.Meetings.IAgenda _obj
    {
      get { return (global::Sungero.Meetings.IAgenda)this.Entity; }
    }

    public AgendaFunctions(global::Sungero.Meetings.IAgenda entity) : base(entity) { }
  }
}

// ==================================================================
// AgendaFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Meetings.Functions
{
  internal static class Agenda
  {
    /// <redirect project="Sungero.Meetings.Shared" type="Sungero.Meetings.Shared.AgendaFunctions" />
    internal static  void SetRequiredProperties(global::Sungero.Meetings.IAgenda agenda)
    {
      var functions = (global::Sungero.Meetings.Shared.AgendaFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)agenda).FunctionsContainer.SharedFunctions;
    functions.SetRequiredProperties();
    }
    /// <redirect project="Sungero.Meetings.Shared" type="Sungero.Meetings.Shared.AgendaFunctions" />
    internal static  void ChangeDocumentPropertiesAccess(global::Sungero.Meetings.IAgenda agenda, global::System.Boolean isEnabled, global::System.Boolean repeatRegister)
    {
      var functions = (global::Sungero.Meetings.Shared.AgendaFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)agenda).FunctionsContainer.SharedFunctions;
    functions.ChangeDocumentPropertiesAccess(isEnabled, repeatRegister);
    }
    /// <redirect project="Sungero.Meetings.Shared" type="Sungero.Meetings.Shared.AgendaFunctions" />
    internal static  void FillName(global::Sungero.Meetings.IAgenda agenda)
    {
      var functions = (global::Sungero.Meetings.Shared.AgendaFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)agenda).FunctionsContainer.SharedFunctions;
    functions.FillName();
    }

    internal static class Remote
    {
      /// <redirect project="Sungero.Meetings.Server" type="Sungero.Meetings.Server.AgendaFunctions" />
      internal static  global::Sungero.Meetings.IAgenda CreateAgenda()
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::Sungero.Meetings.IAgenda>(
          global::System.Guid.Parse("5261da93-7879-4210-b3db-c92fa894ab4d"),
          "CreateAgenda()"
      );
      }

    }
  }
}

// ==================================================================
// AgendaFilterState.g.cs
// ==================================================================

namespace Sungero.Meetings.Shared.Agenda
{

  public class AgendaFilterInfo : global::Sungero.Docflow.Shared.InternalDocumentBase.InternalDocumentBaseFilterInfo,
    global::Sungero.Meetings.IAgendaFilterInfo
  {
  }

  public class AgendaFilterState : global::Sungero.Docflow.Shared.InternalDocumentBase.InternalDocumentBaseFilterState,
    global::Sungero.Meetings.IAgendaFilterState
  {



    public new Sungero.Meetings.IAgendaFilterInfo Info
    {
      get
      {
        return (Sungero.Meetings.IAgendaFilterInfo) base.Info;
      }
    }
    protected override global::Sungero.Domain.Shared.IFilterInfo CreateFilterInfo()
    {
      return new Sungero.Meetings.Shared.Agenda.AgendaFilterInfo();
    }

  }
}

// ==================================================================
// AgendaSharedPublicFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Meetings.Shared
{
  public class AgendaSharedPublicFunctions : global::Sungero.Meetings.Shared.IAgendaSharedPublicFunctions
  {
    public global::Sungero.Meetings.IAgenda Remote_CreateAgenda()
    {
      return global::Sungero.Meetings.Functions.Agenda.Remote.CreateAgenda();
    }
  }
}
