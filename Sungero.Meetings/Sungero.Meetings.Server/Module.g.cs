
// ==================================================================
// Module.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Meetings.Server
{
  public partial class MeetingsModule : global::Sungero.Domain.Shared.ModuleBase
  {
    public override global::System.Guid Id
    {
      get { return global::System.Guid.Parse("593dcc11-15ee-49f2-b4ef-bf4cf7867055"); }
    }

    public override string Name
    {
      get { return "Sungero.Meetings"; }
    }

    public override void RegisterTypes()
    {
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Meetings.Server.IModuleServerInitializationFunctions, global::Sungero.Meetings.Server.ModuleServerInitializationFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("5261da93-7879-4210-b3db-c92fa894ab4d"), new Sungero.Meetings.Shared.AgendaInfo(typeof(global::Sungero.Meetings.IAgenda)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Meetings.Server.IAgendaServerPublicFunctions, global::Sungero.Meetings.Server.AgendaServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Meetings.Shared.IAgendaSharedPublicFunctions, global::Sungero.Meetings.Shared.AgendaSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("231c12b0-800c-457a-a920-6f1a9f51f252"), new Sungero.Meetings.Shared.AgendaTrackingInfo(typeof(global::Sungero.Meetings.IAgendaTracking)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("82b0455e-566e-4573-8651-c9c5b52a4dd1"), new Sungero.Meetings.Shared.AgendaVersionsInfo(typeof(global::Sungero.Meetings.IAgendaVersions)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("dbc0dd63-4d23-4f41-92ae-cab59bb70c8c"), new Sungero.Meetings.Shared.MeetingInfo(typeof(global::Sungero.Meetings.IMeeting)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Meetings.Server.IMeetingServerPublicFunctions, global::Sungero.Meetings.Server.MeetingServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Meetings.Shared.IMeetingSharedPublicFunctions, global::Sungero.Meetings.Shared.MeetingSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("c6d29374-7baa-4442-96dc-b13aa3ff42b8"), new Sungero.Meetings.Shared.MeetingMembersInfo(typeof(global::Sungero.Meetings.IMeetingMembers)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("bb4780ff-b2c3-4044-a390-e9e110791bf6"), new Sungero.Meetings.Shared.MinutesInfo(typeof(global::Sungero.Meetings.IMinutes)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Meetings.Server.IMinutesServerPublicFunctions, global::Sungero.Meetings.Server.MinutesServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Meetings.Shared.IMinutesSharedPublicFunctions, global::Sungero.Meetings.Shared.MinutesSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("64a4c377-e821-4c44-8333-47c7fd0a6027"), new Sungero.Meetings.Shared.MinutesTrackingInfo(typeof(global::Sungero.Meetings.IMinutesTracking)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("c48ebf2d-dca8-4efd-bf1b-8c21302666ba"), new Sungero.Meetings.Shared.MinutesVersionsInfo(typeof(global::Sungero.Meetings.IMinutesVersions)));


      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Meetings.IAgendaFilterState, global::Sungero.Meetings.Shared.Agenda.AgendaFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Meetings.IMeetingFilterState, global::Sungero.Meetings.Shared.Meeting.MeetingFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Meetings.IMinutesFilterState, global::Sungero.Meetings.Shared.Minutes.MinutesFilterState>();



      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Meetings.Server.IModuleServerPublicFunctions, global::Sungero.Meetings.Server.ModuleServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Meetings.Shared.IModuleSharedPublicFunctions, global::Sungero.Meetings.Shared.ModuleSharedPublicFunctions>();
    }
  }
}

// ==================================================================
// ModuleHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Meetings.Server
{
}

// ==================================================================
// ModuleFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Meetings.Functions
{
  internal static partial class Module
  {
    /// <redirect project="Sungero.Meetings.Server" type="Sungero.Meetings.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static global::System.Linq.IQueryable<global::Sungero.RecordManagement.IActionItemExecutionTask> GetMeetingActionItemExecutionTasks()
    {
        return ((global::Sungero.Meetings.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server)).GetMeetingActionItemExecutionTasks();
    }
    /// <redirect project="Sungero.Meetings.Server" type="Sungero.Meetings.Server.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<Company.Structures.ResponsibilitiesReport.ResponsibilitiesReportTableLine> GetResponsibilitiesReportData(global::Sungero.Company.IEmployee employee)
    {
        return ((global::Sungero.Meetings.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server)).GetResponsibilitiesReportData(employee);
    }

    private static object GetFunctionsContainer()
    {
      return new global::Sungero.Meetings.Server.ModuleFunctions();
    }

    private static object GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType projectType)
    {
      var moduleId = new global::System.Guid("593dcc11-15ee-49f2-b4ef-bf4cf7867055");
      var finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(moduleId));
      var assemblyName = finalModuleMetadatda.GetAssemblyName(projectType);
      var moduleFunctionsType = global::System.Type.GetType(global::System.String.Format("{0}.{1}, {2}", finalModuleMetadatda.FunctionNamespace, "Module", assemblyName));
      return moduleFunctionsType.GetMethod("GetFunctionsContainer", global::System.Reflection.BindingFlags.NonPublic | global::System.Reflection.BindingFlags.Static).Invoke(null, null);
    }
  }
}

// ==================================================================
// ModuleInitializationInstantiation.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Meetings.ModuleInitialization
{
  internal static partial class Module
  {
     /// <redirect project="Sungero.Meetings.Server" type="Sungero.Meetings.Server.ModuleInitializer" />
     internal static void Initializing(Sungero.Domain.ModuleInitializingEventArgs e)
     {
     ((global::Sungero.Meetings.Server.ModuleInitializer)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server)).Initializing(e);
     }
     /// <redirect project="Sungero.Meetings.Server" type="Sungero.Meetings.Server.ModuleInitializer" />
     internal static void CreateRoles()
     {
     global::Sungero.Meetings.Server.ModuleInitializer.CreateRoles();
     }
     /// <redirect project="Sungero.Meetings.Server" type="Sungero.Meetings.Server.ModuleInitializer" />
     internal static void GrantRightToMeetingResponsible()
     {
     global::Sungero.Meetings.Server.ModuleInitializer.GrantRightToMeetingResponsible();
     }
     /// <redirect project="Sungero.Meetings.Server" type="Sungero.Meetings.Server.ModuleInitializer" />
     internal static void GrantRightOnFolders(global::Sungero.CoreEntities.IRole role)
     {
     global::Sungero.Meetings.Server.ModuleInitializer.GrantRightOnFolders(role);
     }
     /// <redirect project="Sungero.Meetings.Server" type="Sungero.Meetings.Server.ModuleInitializer" />
     internal static void CreateDocumentTypes()
     {
     global::Sungero.Meetings.Server.ModuleInitializer.CreateDocumentTypes();
     }
     /// <redirect project="Sungero.Meetings.Server" type="Sungero.Meetings.Server.ModuleInitializer" />
     internal static void CreateDocumentKinds()
     {
     global::Sungero.Meetings.Server.ModuleInitializer.CreateDocumentKinds();
     }
     /// <redirect project="Sungero.Meetings.Server" type="Sungero.Meetings.Server.ModuleInitializer" />
     internal static void CreateDocumentRegistersAndSettings()
     {
     global::Sungero.Meetings.Server.ModuleInitializer.CreateDocumentRegistersAndSettings();
     }


    private static object GetFunctionsContainer()
    {
      return new global::Sungero.Meetings.Server.ModuleInitializer();
    }

    private static object GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType projectType)
    {
      var moduleId = new global::System.Guid("593dcc11-15ee-49f2-b4ef-bf4cf7867055");
      var finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(moduleId));
      var assemblyName = finalModuleMetadatda.GetAssemblyName(projectType);
      var moduleFunctionsType = global::System.Type.GetType(global::System.String.Format("{0}.{1}, {2}", finalModuleMetadatda.ModuleInitializationNamespace, "Module", assemblyName));
      return moduleFunctionsType.GetMethod("GetFunctionsContainer", global::System.Reflection.BindingFlags.NonPublic | global::System.Reflection.BindingFlags.Static).Invoke(null, null);
    }

  }
}


// ==================================================================
// ModuleEventArgs.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Meetings.Server
{
}

// ==================================================================
// ModuleServerPublicFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Meetings.Server
{
  public partial class ModuleServerPublicFunctions : global::Sungero.Meetings.Server.IModuleServerPublicFunctions
  {
    public global::System.Collections.Generic.List<Company.Structures.ResponsibilitiesReport.ResponsibilitiesReportTableLine> GetResponsibilitiesReportData(global::Sungero.Company.IEmployee employee)
    {
      return global::Sungero.Meetings.Functions.Module.GetResponsibilitiesReportData(employee);
    }
  }
}

namespace Sungero.Meetings.Server
{
  public partial class ModuleServerPublicFunctions : global::Sungero.Meetings.Server.IModuleServerPublicFunctions
  {

  }
}

// ==================================================================
// ModuleServerInitializationFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Meetings.Server
{
  public partial class ModuleServerInitializationFunctions : global::Sungero.Meetings.Server.IModuleServerInitializationFunctions
  {
  }
}


// ==================================================================
// ModuleWidgetHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Meetings.Server
{
}

// ==================================================================
// ModuleQueries.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Meetings.Queries
{
  public class Module
  {
    private static global::Sungero.Domain.SqlQueryResolver resolver = new global::Sungero.Domain.SqlQueryResolver("Sungero.Meetings.Server.ModuleQueries.xml", System.Reflection.Assembly.GetExecutingAssembly());
  }
}

// ==================================================================
// ModuleInitializer.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Meetings.Server
{
  public partial class ModuleInitializer : global::Sungero.Domain.AppliedModuleInitializer
  {
  }
}

