
// ==================================================================
// ExchangeDocumentProcessingAssignment.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Exchange.Server
{
    public class ExchangeDocumentProcessingAssignmentFilter<T> :
      global::Sungero.Workflow.Server.AssignmentFilter<T>
      where T : class, global::Sungero.Exchange.IExchangeDocumentProcessingAssignment
    {
      protected new global::Sungero.Exchange.IExchangeDocumentProcessingAssignmentFilterState Filter { get; private set; }

      private global::Sungero.Exchange.IExchangeDocumentProcessingAssignmentFilterState filter
      {
        get
        {
          return this.Filter;
        }
      }

      protected override global::System.Linq.IQueryable<T> ApplyAppliedFilter(global::System.Linq.IQueryable<T> query)
      {
        return base.ApplyAppliedFilter(query);
      }

      public ExchangeDocumentProcessingAssignmentFilter(global::Sungero.Exchange.IExchangeDocumentProcessingAssignmentFilterState filter)
      : base()
      {
        this.Filter = filter;
      }

      protected ExchangeDocumentProcessingAssignmentFilter()
      {
      }
    }
    public class ExchangeDocumentProcessingAssignmentSearchDialogModel : global::Sungero.Workflow.Server.AssignmentSearchDialogModel
        {
                  public override global::System.Int32? Id { get; protected set; }
                  public override global::System.String Subject { get; protected set; }


                  public override global::System.Collections.Generic.IEnumerable<Sungero.CoreEntities.IRecipient> Author { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<Sungero.CoreEntities.IRecipient> Performer { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<Sungero.Core.Enumeration> Status { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<Sungero.Core.Enumeration> Importance { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<CommonLibrary.DateRangeValue> Deadline { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<CommonLibrary.DateRangeValue> Created { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<Sungero.Core.Enumeration> Result { get; protected set; }



                  public virtual global::System.Collections.Generic.IEnumerable<Sungero.Parties.ICounterparty> Counterparty { get; protected set; }
                  public virtual global::System.Collections.Generic.IEnumerable<Sungero.ExchangeCore.IBoxBase> Box { get; protected set; }
                  public virtual global::System.Collections.Generic.IEnumerable<Sungero.ExchangeCore.IExchangeService> ExchangeService { get; protected set; }
                  public virtual global::System.Collections.Generic.IEnumerable<Sungero.CoreEntities.IRecipient> Addressee { get; protected set; }
                  public virtual global::System.Collections.Generic.IEnumerable<CommonLibrary.DateRangeValue> NewDeadline { get; protected set; }


        }




  public class ExchangeDocumentProcessingAssignmentFilterForCounterparty<TQueryEntity, TSourceEntity>
    : global::Sungero.Domain.EntityPropertyFilterBase<TQueryEntity, TSourceEntity>
    where TQueryEntity : class, global::Sungero.Parties.ICounterparty
    where TSourceEntity : class, global::Sungero.Exchange.IExchangeDocumentProcessingAssignment
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, TSourceEntity sourceEntity)
    {
      var args = new global::Sungero.Domain.PropertyFilteringEventArgs(sourceEntity);
      var result = new global::Sungero.Exchange.ExchangeDocumentProcessingAssignmentCounterpartyPropertyFilteringServerHandler<TQueryEntity>(sourceEntity).CounterpartyFiltering(query, args);
      if (args.DisableUiFiltering)
        global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public ExchangeDocumentProcessingAssignmentFilterForCounterparty(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class ExchangeDocumentProcessingAssignmentSearchFilterForCounterparty<TQueryEntity>
    : global::Sungero.Domain.SearchDialogPropertyFilter<TQueryEntity>
    where TQueryEntity : class, global::Sungero.Parties.ICounterparty
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, System.Guid entityType)
    {
      var args = new global::Sungero.Domain.PropertySearchDialogFilteringEventArgs(entityType);
      var result = new global::Sungero.Exchange.ExchangeDocumentProcessingAssignmentCounterpartySearchPropertyFilteringServerHandler<TQueryEntity>().CounterpartySearchDialogFiltering(query, args);
      if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public ExchangeDocumentProcessingAssignmentSearchFilterForCounterparty(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class ExchangeDocumentProcessingAssignmentFilterForBox<TQueryEntity, TSourceEntity>
    : global::Sungero.Domain.EntityPropertyFilterBase<TQueryEntity, TSourceEntity>
    where TQueryEntity : class, global::Sungero.ExchangeCore.IBoxBase
    where TSourceEntity : class, global::Sungero.Exchange.IExchangeDocumentProcessingAssignment
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, TSourceEntity sourceEntity)
    {
      var args = new global::Sungero.Domain.PropertyFilteringEventArgs(sourceEntity);
      var result = new global::Sungero.Exchange.ExchangeDocumentProcessingAssignmentBoxPropertyFilteringServerHandler<TQueryEntity>(sourceEntity).BoxFiltering(query, args);
      if (args.DisableUiFiltering)
        global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public ExchangeDocumentProcessingAssignmentFilterForBox(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class ExchangeDocumentProcessingAssignmentSearchFilterForBox<TQueryEntity>
    : global::Sungero.Domain.SearchDialogPropertyFilter<TQueryEntity>
    where TQueryEntity : class, global::Sungero.ExchangeCore.IBoxBase
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, System.Guid entityType)
    {
      var args = new global::Sungero.Domain.PropertySearchDialogFilteringEventArgs(entityType);
      var result = new global::Sungero.Exchange.ExchangeDocumentProcessingAssignmentBoxSearchPropertyFilteringServerHandler<TQueryEntity>().BoxSearchDialogFiltering(query, args);
      if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public ExchangeDocumentProcessingAssignmentSearchFilterForBox(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class ExchangeDocumentProcessingAssignmentFilterForExchangeService<TQueryEntity, TSourceEntity>
    : global::Sungero.Domain.EntityPropertyFilterBase<TQueryEntity, TSourceEntity>
    where TQueryEntity : class, global::Sungero.ExchangeCore.IExchangeService
    where TSourceEntity : class, global::Sungero.Exchange.IExchangeDocumentProcessingAssignment
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, TSourceEntity sourceEntity)
    {
      var args = new global::Sungero.Domain.PropertyFilteringEventArgs(sourceEntity);
      var result = new global::Sungero.Exchange.ExchangeDocumentProcessingAssignmentExchangeServicePropertyFilteringServerHandler<TQueryEntity>(sourceEntity).ExchangeServiceFiltering(query, args);
      if (args.DisableUiFiltering)
        global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public ExchangeDocumentProcessingAssignmentFilterForExchangeService(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class ExchangeDocumentProcessingAssignmentSearchFilterForExchangeService<TQueryEntity>
    : global::Sungero.Domain.SearchDialogPropertyFilter<TQueryEntity>
    where TQueryEntity : class, global::Sungero.ExchangeCore.IExchangeService
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, System.Guid entityType)
    {
      var args = new global::Sungero.Domain.PropertySearchDialogFilteringEventArgs(entityType);
      var result = new global::Sungero.Exchange.ExchangeDocumentProcessingAssignmentExchangeServiceSearchPropertyFilteringServerHandler<TQueryEntity>().ExchangeServiceSearchDialogFiltering(query, args);
      if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public ExchangeDocumentProcessingAssignmentSearchFilterForExchangeService(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class ExchangeDocumentProcessingAssignmentFilterForAddressee<TQueryEntity, TSourceEntity>
    : global::Sungero.Domain.EntityPropertyFilterBase<TQueryEntity, TSourceEntity>
    where TQueryEntity : class, global::Sungero.Company.IEmployee
    where TSourceEntity : class, global::Sungero.Exchange.IExchangeDocumentProcessingAssignment
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, TSourceEntity sourceEntity)
    {
      var args = new global::Sungero.Domain.PropertyFilteringEventArgs(sourceEntity);
      var result = new global::Sungero.Exchange.ExchangeDocumentProcessingAssignmentAddresseePropertyFilteringServerHandler<TQueryEntity>(sourceEntity).AddresseeFiltering(query, args);
      if (args.DisableUiFiltering)
        global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public ExchangeDocumentProcessingAssignmentFilterForAddressee(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class ExchangeDocumentProcessingAssignmentSearchFilterForAddressee<TQueryEntity>
    : global::Sungero.Domain.SearchDialogPropertyFilter<TQueryEntity>
    where TQueryEntity : class, global::Sungero.CoreEntities.IRecipient
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, System.Guid entityType)
    {
      var args = new global::Sungero.Domain.PropertySearchDialogFilteringEventArgs(entityType);
      var result = new global::Sungero.Exchange.ExchangeDocumentProcessingAssignmentAddresseeSearchPropertyFilteringServerHandler<TQueryEntity>().AddresseeSearchDialogFiltering(query, args);
      if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public ExchangeDocumentProcessingAssignmentSearchFilterForAddressee(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class ExchangeDocumentProcessingAssignmentFilterForBusinessUnitBox<TQueryEntity, TSourceEntity>
    : global::Sungero.Domain.EntityPropertyFilterBase<TQueryEntity, TSourceEntity>
    where TQueryEntity : class, global::Sungero.ExchangeCore.IBusinessUnitBox
    where TSourceEntity : class, global::Sungero.Exchange.IExchangeDocumentProcessingAssignment
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, TSourceEntity sourceEntity)
    {
      var args = new global::Sungero.Domain.PropertyFilteringEventArgs(sourceEntity);
      var result = new global::Sungero.Exchange.ExchangeDocumentProcessingAssignmentBusinessUnitBoxPropertyFilteringServerHandler<TQueryEntity>(sourceEntity).BusinessUnitBoxFiltering(query, args);
      if (args.DisableUiFiltering)
        global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public ExchangeDocumentProcessingAssignmentFilterForBusinessUnitBox(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class ExchangeDocumentProcessingAssignmentSearchFilterForBusinessUnitBox<TQueryEntity>
    : global::Sungero.Domain.SearchDialogPropertyFilter<TQueryEntity>
    where TQueryEntity : class, global::Sungero.ExchangeCore.IBusinessUnitBox
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, System.Guid entityType)
    {
      var args = new global::Sungero.Domain.PropertySearchDialogFilteringEventArgs(entityType);
      var result = new global::Sungero.Exchange.ExchangeDocumentProcessingAssignmentBusinessUnitBoxSearchPropertyFilteringServerHandler<TQueryEntity>().BusinessUnitBoxSearchDialogFiltering(query, args);
      if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public ExchangeDocumentProcessingAssignmentSearchFilterForBusinessUnitBox(string propertyName)
      : base(propertyName)
    {
    }
  }



  [global::Sungero.Domain.Filter(typeof(global::Sungero.Exchange.Server.ExchangeDocumentProcessingAssignmentFilter<global::Sungero.Exchange.IExchangeDocumentProcessingAssignment>))]
  [global::Sungero.Domain.PropertyFilter(typeof(global::Sungero.Exchange.Server.ExchangeDocumentProcessingAssignmentFilterForCounterparty<global::Sungero.Parties.ICounterparty, global::Sungero.Exchange.IExchangeDocumentProcessingAssignment>), "Counterparty")]
  [global::Sungero.Domain.SearchPropertyFilter(typeof(global::Sungero.Exchange.Server.ExchangeDocumentProcessingAssignmentSearchFilterForCounterparty<global::Sungero.Parties.ICounterparty>), "Counterparty")]
  [global::Sungero.Domain.PropertyFilter(typeof(global::Sungero.Exchange.Server.ExchangeDocumentProcessingAssignmentFilterForBox<global::Sungero.ExchangeCore.IBoxBase, global::Sungero.Exchange.IExchangeDocumentProcessingAssignment>), "Box")]
  [global::Sungero.Domain.SearchPropertyFilter(typeof(global::Sungero.Exchange.Server.ExchangeDocumentProcessingAssignmentSearchFilterForBox<global::Sungero.ExchangeCore.IBoxBase>), "Box")]
  [global::Sungero.Domain.PropertyFilter(typeof(global::Sungero.Exchange.Server.ExchangeDocumentProcessingAssignmentFilterForExchangeService<global::Sungero.ExchangeCore.IExchangeService, global::Sungero.Exchange.IExchangeDocumentProcessingAssignment>), "ExchangeService")]
  [global::Sungero.Domain.SearchPropertyFilter(typeof(global::Sungero.Exchange.Server.ExchangeDocumentProcessingAssignmentSearchFilterForExchangeService<global::Sungero.ExchangeCore.IExchangeService>), "ExchangeService")]
  [global::Sungero.Domain.PropertyFilter(typeof(global::Sungero.Exchange.Server.ExchangeDocumentProcessingAssignmentFilterForAddressee<global::Sungero.Company.IEmployee, global::Sungero.Exchange.IExchangeDocumentProcessingAssignment>), "Addressee")]
  [global::Sungero.Domain.SearchPropertyFilter(typeof(global::Sungero.Exchange.Server.ExchangeDocumentProcessingAssignmentSearchFilterForAddressee<global::Sungero.CoreEntities.IRecipient>), "Addressee")]
  [global::Sungero.Domain.PropertyFilter(typeof(global::Sungero.Exchange.Server.ExchangeDocumentProcessingAssignmentFilterForBusinessUnitBox<global::Sungero.ExchangeCore.IBusinessUnitBox, global::Sungero.Exchange.IExchangeDocumentProcessingAssignment>), "BusinessUnitBox")]
  [global::Sungero.Domain.SearchPropertyFilter(typeof(global::Sungero.Exchange.Server.ExchangeDocumentProcessingAssignmentSearchFilterForBusinessUnitBox<global::Sungero.ExchangeCore.IBusinessUnitBox>), "BusinessUnitBox")]


  public class ExchangeDocumentProcessingAssignment :
    global::Sungero.Workflow.Server.Assignment, global::Sungero.Exchange.IExchangeDocumentProcessingAssignment, global::Sungero.Domain.Shared.ISecurableEntity, global::Sungero.Domain.IInternalSecurableEntity
  {
    public static new readonly global::System.Guid ClassTypeGuid = global::System.Guid.Parse("0917ca0b-898f-429d-be37-c12da50c5a95");

    public override global::System.Guid TypeGuid
    {
      get { return global::Sungero.Exchange.Server.ExchangeDocumentProcessingAssignment.ClassTypeGuid; }
    }

    public override string TypeName
    {
      get { return "Sungero.Exchange.IExchangeDocumentProcessingAssignment, Sungero.Domain.Interfaces"; }
    }

    public override string DisplayValue
    {
      get { return this.Subject; }
      set { this.Subject = value; }
    }

    public new virtual global::Sungero.Exchange.IExchangeDocumentProcessingAssignmentState State
    {
      get { return (global::Sungero.Exchange.IExchangeDocumentProcessingAssignmentState)base.State; }
    }

    protected override global::Sungero.Domain.Shared.IEntityState CreateState()
    {
      return new global::Sungero.Exchange.Shared.ExchangeDocumentProcessingAssignmentState(this);
    }

    public new virtual global::Sungero.Exchange.IExchangeDocumentProcessingAssignmentInfo Info
    {
      get { return (global::Sungero.Exchange.IExchangeDocumentProcessingAssignmentInfo)base.Info; }
    }

    public new virtual global::Sungero.Exchange.IExchangeDocumentProcessingAssignmentAccessRights AccessRights
    {
      get { return (global::Sungero.Exchange.IExchangeDocumentProcessingAssignmentAccessRights)base.AccessRights; }
    }

    protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
    {
      return new global::Sungero.Exchange.Server.ExchangeDocumentProcessingAssignmentAccessRights(this);
    }

    protected override global::Sungero.Domain.EntityFunctions CreateServerFunctions()
    {
      return new global::Sungero.Exchange.Server.ExchangeDocumentProcessingAssignmentFunctions(this);
    }

    protected override global::Sungero.Domain.Shared.EntityFunctions CreateSharedFunctions()
    {
      return new global::Sungero.Exchange.Shared.ExchangeDocumentProcessingAssignmentFunctions(this);
    }

    protected override object CreateHandlers() {
      return new global::Sungero.Exchange.ExchangeDocumentProcessingAssignmentServerHandlers(this);
    }

    protected override object CreateSharedHandlers() {
      return new global::Sungero.Exchange.ExchangeDocumentProcessingAssignmentSharedHandlers(this);
    }

    private global::System.DateTime? _NewDeadline;
    public virtual global::System.DateTime? NewDeadline
    {
      get
      {
        return this._NewDeadline;
      }

      set
      {
        this.SetPropertyValue("NewDeadline", this._NewDeadline, value, (propertyValue) => { this._NewDeadline = propertyValue; }, this.NewDeadlineChangedHandler);
      }
    }






    private static global::Sungero.Domain.Shared.EnumerationItems _ResultItems = new global::Sungero.Domain.Shared.EnumerationItems(
      global::Sungero.Workflow.Server.Assignment.ResultItems,
      typeof(global::Sungero.Exchange.ExchangeDocumentProcessingAssignment.Result),
      typeof(global::Sungero.Exchange.Server.ExchangeDocumentProcessingAssignment),
      "Result");

    public static new global::Sungero.Domain.Shared.EnumerationItems ResultItems
    {
      get { return global::Sungero.Exchange.Server.ExchangeDocumentProcessingAssignment._ResultItems; }
    }

    public override global::Sungero.Domain.Shared.EnumerationItems ResultAllowedItems
    {
      get { return global::Sungero.Exchange.Server.ExchangeDocumentProcessingAssignment.ResultItems; }
    }



    private global::Sungero.Parties.ICounterparty _Counterparty;
    public virtual global::Sungero.Parties.ICounterparty Counterparty
    {
      get
      {
        return this._Counterparty;
      }

      set
      {
        this.SetPropertyValue("Counterparty", this._Counterparty, value, (propertyValue) => { this._Counterparty = propertyValue; }, this.CounterpartyChangedHandler);
      }
    }
    private global::Sungero.ExchangeCore.IBoxBase _Box;
    public virtual global::Sungero.ExchangeCore.IBoxBase Box
    {
      get
      {
        return this._Box;
      }

      set
      {
        this.SetPropertyValue("Box", this._Box, value, (propertyValue) => { this._Box = propertyValue; }, this.BoxChangedHandler);
      }
    }
    private global::Sungero.ExchangeCore.IExchangeService _ExchangeService;
    public virtual global::Sungero.ExchangeCore.IExchangeService ExchangeService
    {
      get
      {
        return this._ExchangeService;
      }

      set
      {
        this.SetPropertyValue("ExchangeService", this._ExchangeService, value, (propertyValue) => { this._ExchangeService = propertyValue; }, this.ExchangeServiceChangedHandler);
      }
    }
    private global::Sungero.Company.IEmployee _Addressee;
    public virtual global::Sungero.Company.IEmployee Addressee
    {
      get
      {
        return this._Addressee;
      }

      set
      {
        this.SetPropertyValue("Addressee", this._Addressee, value, (propertyValue) => { this._Addressee = propertyValue; }, this.AddresseeChangedHandler);
      }
    }
    private global::Sungero.ExchangeCore.IBusinessUnitBox _BusinessUnitBox;
    public virtual global::Sungero.ExchangeCore.IBusinessUnitBox BusinessUnitBox
    {
      get
      {
        return this._BusinessUnitBox;
      }

      set
      {
        this.SetPropertyValue("BusinessUnitBox", this._BusinessUnitBox, value, (propertyValue) => { this._BusinessUnitBox = propertyValue; }, this.BusinessUnitBoxChangedHandler);
      }
    }




    protected override global::Sungero.Domain.Shared.EntityCreatingFromServerHandler CreateCreatingFromServerHandler(
      global::Sungero.Domain.Shared.IEntity entitySource)
    {
      return new global::Sungero.Exchange.ExchangeDocumentProcessingAssignmentCreatingFromServerHandler((global::Sungero.Exchange.IExchangeDocumentProcessingAssignment)entitySource, this.Info);
    }

    #region Framework events

    protected void CounterpartyChangedHandler()
    {
      var args = new global::Sungero.Exchange.Shared.ExchangeDocumentProcessingAssignmentCounterpartyChangedEventArgs(this.State.Properties.Counterparty, this.Counterparty, this);
     ((global::Sungero.Exchange.ExchangeDocumentProcessingAssignmentSharedHandlers)this.SharedHandlers).CounterpartyChanged(args);
    }

    protected void BoxChangedHandler()
    {
      var args = new global::Sungero.Exchange.Shared.ExchangeDocumentProcessingAssignmentBoxChangedEventArgs(this.State.Properties.Box, this.Box, this);
     ((global::Sungero.Exchange.ExchangeDocumentProcessingAssignmentSharedHandlers)this.SharedHandlers).BoxChanged(args);
    }

    protected void ExchangeServiceChangedHandler()
    {
      var args = new global::Sungero.Exchange.Shared.ExchangeDocumentProcessingAssignmentExchangeServiceChangedEventArgs(this.State.Properties.ExchangeService, this.ExchangeService, this);
     ((global::Sungero.Exchange.ExchangeDocumentProcessingAssignmentSharedHandlers)this.SharedHandlers).ExchangeServiceChanged(args);
    }

    protected void AddresseeChangedHandler()
    {
      var args = new global::Sungero.Exchange.Shared.ExchangeDocumentProcessingAssignmentAddresseeChangedEventArgs(this.State.Properties.Addressee, this.Addressee, this);
     ((global::Sungero.Exchange.ExchangeDocumentProcessingAssignmentSharedHandlers)this.SharedHandlers).AddresseeChanged(args);
    }

    protected void NewDeadlineChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.DateTimePropertyChangedEventArgs(this.State.Properties.NewDeadline, this.NewDeadline, this);
     ((global::Sungero.Exchange.ExchangeDocumentProcessingAssignmentSharedHandlers)this.SharedHandlers).NewDeadlineChanged(args);
    }

    protected void BusinessUnitBoxChangedHandler()
    {
      var args = new global::Sungero.Exchange.Shared.ExchangeDocumentProcessingAssignmentBusinessUnitBoxChangedEventArgs(this.State.Properties.BusinessUnitBox, this.BusinessUnitBox, this);
     ((global::Sungero.Exchange.ExchangeDocumentProcessingAssignmentSharedHandlers)this.SharedHandlers).BusinessUnitBoxChanged(args);
    }



    #endregion


    public ExchangeDocumentProcessingAssignment()
    {
      ((global::Sungero.Workflow.Interfaces.IWorkflowEntity)this).AttachmentCreated += this.AttachmentCreatedHandler;
      ((global::Sungero.Workflow.Interfaces.IWorkflowEntity)this).AttachmentAdded += this.AttachmentAddedHandler;
      ((global::Sungero.Workflow.Interfaces.IWorkflowEntity)this).AttachmentDeleted += this.AttachmentDeletedHandler;


    }

    #region Workflow attachments
    public virtual global::Sungero.Exchange.IExchangeDocumentProcessingAssignmentNeedSigningAttachments NeedSigning
    {
      get
      {
        return new global::Sungero.Exchange.Shared.ExchangeDocumentProcessingAssignmentNeedSigningAttachments(this);
      }
    }
    public virtual global::Sungero.Exchange.IExchangeDocumentProcessingAssignmentDontNeedSigningAttachments DontNeedSigning
    {
      get
      {
        return new global::Sungero.Exchange.Shared.ExchangeDocumentProcessingAssignmentDontNeedSigningAttachments(this);
      }
    }


    private void AttachmentCreatedHandler(object sender, global::Sungero.Workflow.Interfaces.AttachmentCreatedEventArgs e)
    {
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "NeedSigning")
      {
        ((global::Sungero.Exchange.ExchangeDocumentProcessingAssignmentSharedHandlers)this.SharedHandlers).NeedSigningCreated(e);
        return;
      }
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "DontNeedSigning")
      {
        ((global::Sungero.Exchange.ExchangeDocumentProcessingAssignmentSharedHandlers)this.SharedHandlers).DontNeedSigningCreated(e);
        return;
      }

    }

    private void AttachmentAddedHandler(object sender, global::Sungero.Workflow.Interfaces.AttachmentAddedEventArgs e)
    {
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "NeedSigning")
      {
        ((global::Sungero.Exchange.ExchangeDocumentProcessingAssignmentSharedHandlers)this.SharedHandlers).NeedSigningAdded(e);
        return;
      }
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "DontNeedSigning")
      {
        ((global::Sungero.Exchange.ExchangeDocumentProcessingAssignmentSharedHandlers)this.SharedHandlers).DontNeedSigningAdded(e);
        return;
      }

    }

    private void AttachmentDeletedHandler(object sender, global::Sungero.Workflow.Interfaces.AttachmentDeletedEventArgs e)
    {
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "NeedSigning")
      {
        ((global::Sungero.Exchange.ExchangeDocumentProcessingAssignmentSharedHandlers)this.SharedHandlers).NeedSigningDeleted(e);
        return;
      }
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "DontNeedSigning")
      {
        ((global::Sungero.Exchange.ExchangeDocumentProcessingAssignmentSharedHandlers)this.SharedHandlers).DontNeedSigningDeleted(e);
        return;
      }

    }
    #endregion

  }
}

// ==================================================================
// ExchangeDocumentProcessingAssignmentHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Exchange
{
  public partial class ExchangeDocumentProcessingAssignmentCounterpartyPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.EntityPropertyFilteringServerHandler
    where T : class, global::Sungero.Parties.ICounterparty
  {
    private global::Sungero.Exchange.IExchangeDocumentProcessingAssignment _obj
    {
      get { return (global::Sungero.Exchange.IExchangeDocumentProcessingAssignment)this.Entity; }
    }

    public virtual global::System.Linq.IQueryable<T> CounterpartyFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertyFilteringEventArgs e)
    {
      return query;
    }

    public ExchangeDocumentProcessingAssignmentCounterpartyPropertyFilteringServerHandler(global::Sungero.Exchange.IExchangeDocumentProcessingAssignment entity)
      : base(entity)
    {
    }
  }

  public partial class ExchangeDocumentProcessingAssignmentCounterpartySearchPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.SearchPropertyFilteringServerHandler
    where T : class, global::Sungero.Parties.ICounterparty
  {

    public virtual global::System.Linq.IQueryable<T> CounterpartySearchDialogFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertySearchDialogFilteringEventArgs e)
    {
      return query;
    }

    public ExchangeDocumentProcessingAssignmentCounterpartySearchPropertyFilteringServerHandler()
      : base()
    {
    }
  }

  public partial class ExchangeDocumentProcessingAssignmentBoxPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.EntityPropertyFilteringServerHandler
    where T : class, global::Sungero.ExchangeCore.IBoxBase
  {
    private global::Sungero.Exchange.IExchangeDocumentProcessingAssignment _obj
    {
      get { return (global::Sungero.Exchange.IExchangeDocumentProcessingAssignment)this.Entity; }
    }

    public virtual global::System.Linq.IQueryable<T> BoxFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertyFilteringEventArgs e)
    {
      return query;
    }

    public ExchangeDocumentProcessingAssignmentBoxPropertyFilteringServerHandler(global::Sungero.Exchange.IExchangeDocumentProcessingAssignment entity)
      : base(entity)
    {
    }
  }

  public partial class ExchangeDocumentProcessingAssignmentBoxSearchPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.SearchPropertyFilteringServerHandler
    where T : class, global::Sungero.ExchangeCore.IBoxBase
  {

    public virtual global::System.Linq.IQueryable<T> BoxSearchDialogFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertySearchDialogFilteringEventArgs e)
    {
      return query;
    }

    public ExchangeDocumentProcessingAssignmentBoxSearchPropertyFilteringServerHandler()
      : base()
    {
    }
  }

  public partial class ExchangeDocumentProcessingAssignmentExchangeServicePropertyFilteringServerHandler<T>
    : global::Sungero.Domain.EntityPropertyFilteringServerHandler
    where T : class, global::Sungero.ExchangeCore.IExchangeService
  {
    private global::Sungero.Exchange.IExchangeDocumentProcessingAssignment _obj
    {
      get { return (global::Sungero.Exchange.IExchangeDocumentProcessingAssignment)this.Entity; }
    }

    public virtual global::System.Linq.IQueryable<T> ExchangeServiceFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertyFilteringEventArgs e)
    {
      return query;
    }

    public ExchangeDocumentProcessingAssignmentExchangeServicePropertyFilteringServerHandler(global::Sungero.Exchange.IExchangeDocumentProcessingAssignment entity)
      : base(entity)
    {
    }
  }

  public partial class ExchangeDocumentProcessingAssignmentExchangeServiceSearchPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.SearchPropertyFilteringServerHandler
    where T : class, global::Sungero.ExchangeCore.IExchangeService
  {

    public virtual global::System.Linq.IQueryable<T> ExchangeServiceSearchDialogFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertySearchDialogFilteringEventArgs e)
    {
      return query;
    }

    public ExchangeDocumentProcessingAssignmentExchangeServiceSearchPropertyFilteringServerHandler()
      : base()
    {
    }
  }

  public partial class ExchangeDocumentProcessingAssignmentAddresseePropertyFilteringServerHandler<T>
    : global::Sungero.Domain.EntityPropertyFilteringServerHandler
    where T : class, global::Sungero.Company.IEmployee
  {
    private global::Sungero.Exchange.IExchangeDocumentProcessingAssignment _obj
    {
      get { return (global::Sungero.Exchange.IExchangeDocumentProcessingAssignment)this.Entity; }
    }

    public virtual global::System.Linq.IQueryable<T> AddresseeFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertyFilteringEventArgs e)
    {
      return query;
    }

    public ExchangeDocumentProcessingAssignmentAddresseePropertyFilteringServerHandler(global::Sungero.Exchange.IExchangeDocumentProcessingAssignment entity)
      : base(entity)
    {
    }
  }

  public partial class ExchangeDocumentProcessingAssignmentAddresseeSearchPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.SearchPropertyFilteringServerHandler
    where T : class, global::Sungero.CoreEntities.IRecipient
  {

    public virtual global::System.Linq.IQueryable<T> AddresseeSearchDialogFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertySearchDialogFilteringEventArgs e)
    {
      return query;
    }

    public ExchangeDocumentProcessingAssignmentAddresseeSearchPropertyFilteringServerHandler()
      : base()
    {
    }
  }

  public partial class ExchangeDocumentProcessingAssignmentBusinessUnitBoxPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.EntityPropertyFilteringServerHandler
    where T : class, global::Sungero.ExchangeCore.IBusinessUnitBox
  {
    private global::Sungero.Exchange.IExchangeDocumentProcessingAssignment _obj
    {
      get { return (global::Sungero.Exchange.IExchangeDocumentProcessingAssignment)this.Entity; }
    }

    public virtual global::System.Linq.IQueryable<T> BusinessUnitBoxFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertyFilteringEventArgs e)
    {
      return query;
    }

    public ExchangeDocumentProcessingAssignmentBusinessUnitBoxPropertyFilteringServerHandler(global::Sungero.Exchange.IExchangeDocumentProcessingAssignment entity)
      : base(entity)
    {
    }
  }

  public partial class ExchangeDocumentProcessingAssignmentBusinessUnitBoxSearchPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.SearchPropertyFilteringServerHandler
    where T : class, global::Sungero.ExchangeCore.IBusinessUnitBox
  {

    public virtual global::System.Linq.IQueryable<T> BusinessUnitBoxSearchDialogFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertySearchDialogFilteringEventArgs e)
    {
      return query;
    }

    public ExchangeDocumentProcessingAssignmentBusinessUnitBoxSearchPropertyFilteringServerHandler()
      : base()
    {
    }
  }



  public partial class ExchangeDocumentProcessingAssignmentFilteringServerHandler<T>
    : global::Sungero.Domain.EntityFilteringServerHandler<T>  
    where T : class, global::Sungero.Exchange.IExchangeDocumentProcessingAssignment
  {
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    protected new global::Sungero.Exchange.IExchangeDocumentProcessingAssignmentFilterState Filter { get; private set; }

    private global::Sungero.Exchange.IExchangeDocumentProcessingAssignmentFilterState _filter
    {
      get
      {
        return this.Filter;
      }
    }

    public ExchangeDocumentProcessingAssignmentFilteringServerHandler(global::Sungero.Exchange.IExchangeDocumentProcessingAssignmentFilterState filter)
    : base()
    {
      this.Filter = filter;
    }

    protected ExchangeDocumentProcessingAssignmentFilteringServerHandler()
    {
    }

    public override global::System.Linq.IQueryable<T> Filtering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.FilteringEventArgs e)
    {
      return query;
    }


  }

  public partial class ExchangeDocumentProcessingAssignmentSearchDialogServerHandler : global::Sungero.Workflow.AssignmentSearchDialogServerHandler
   {
     private global::Sungero.Exchange.Server.ExchangeDocumentProcessingAssignmentSearchDialogModel _dialog
     {
       get
       {
         return (global::Sungero.Exchange.Server.ExchangeDocumentProcessingAssignmentSearchDialogModel)this.Dialog;
       }
     }

     public ExchangeDocumentProcessingAssignmentSearchDialogServerHandler(global::Sungero.Exchange.Server.ExchangeDocumentProcessingAssignmentSearchDialogModel dialog)
       : base(dialog)
     {
     }
   }

  public partial class ExchangeDocumentProcessingAssignmentServerHandlers : global::Sungero.Workflow.AssignmentServerHandlers
  {
    private global::Sungero.Exchange.IExchangeDocumentProcessingAssignment _obj
    {
      get { return (global::Sungero.Exchange.IExchangeDocumentProcessingAssignment)this.Entity; }
    }

    public ExchangeDocumentProcessingAssignmentServerHandlers(global::Sungero.Exchange.IExchangeDocumentProcessingAssignment entity)
      : base(entity)
    {
    }
  }

  public partial class ExchangeDocumentProcessingAssignmentCreatingFromServerHandler : global::Sungero.Workflow.AssignmentCreatingFromServerHandler
  {
    private global::Sungero.Exchange.IExchangeDocumentProcessingAssignment _source
    {
      get { return (global::Sungero.Exchange.IExchangeDocumentProcessingAssignment)this.Source; }
    }

    private global::Sungero.Exchange.IExchangeDocumentProcessingAssignmentInfo _info
    {
      get { return (global::Sungero.Exchange.IExchangeDocumentProcessingAssignmentInfo)this._Info; }
    }

    public ExchangeDocumentProcessingAssignmentCreatingFromServerHandler(global::Sungero.Exchange.IExchangeDocumentProcessingAssignment source, global::Sungero.Exchange.IExchangeDocumentProcessingAssignmentInfo info)
      : base(source, info)
    {
    }
  }

}

// ==================================================================
// ExchangeDocumentProcessingAssignmentEventArgs.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Exchange.Server
{
}

// ==================================================================
// ExchangeDocumentProcessingAssignmentAccessRights.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Exchange.Server
{
  public class ExchangeDocumentProcessingAssignmentAccessRights : 
    Sungero.Workflow.Server.AssignmentAccessRights, Sungero.Exchange.IExchangeDocumentProcessingAssignmentAccessRights
  {

    public ExchangeDocumentProcessingAssignmentAccessRights(global::Sungero.Domain.Shared.IEntity entity) : base(entity)
    {
    }
  }

  public class ExchangeDocumentProcessingAssignmentTypeAccessRights : 
    Sungero.Workflow.Server.AssignmentTypeAccessRights, Sungero.Exchange.IExchangeDocumentProcessingAssignmentAccessRights
  {

    public ExchangeDocumentProcessingAssignmentTypeAccessRights(global::System.Type entityType) : base(entityType)
    {
    }
  }
}

// ==================================================================
// ExchangeDocumentProcessingAssignmentRepositoryImplementer.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Exchange.Server
{
    public class ExchangeDocumentProcessingAssignmentRepositoryImplementer<T> : 
      global::Sungero.Workflow.Server.AssignmentRepositoryImplementer<T>,
      global::Sungero.Exchange.IExchangeDocumentProcessingAssignmentRepositoryImplementer<T>
      where T : global::Sungero.Exchange.IExchangeDocumentProcessingAssignment 
    {
       public new global::Sungero.Exchange.IExchangeDocumentProcessingAssignmentAccessRights AccessRights
       {
          get { return (global::Sungero.Exchange.IExchangeDocumentProcessingAssignmentAccessRights)base.AccessRights; }
       }

       public new global::Sungero.Exchange.IExchangeDocumentProcessingAssignmentInfo Info
       {
          get { return (global::Sungero.Exchange.IExchangeDocumentProcessingAssignmentInfo)base.Info; }
       }

       protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
       {
         return new global::Sungero.Exchange.Server.ExchangeDocumentProcessingAssignmentTypeAccessRights(typeof(T));
       }
    }
}

// ==================================================================
// ExchangeDocumentProcessingAssignmentPanelNavigationFilters.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Exchange.Server
{
}

// ==================================================================
// ExchangeDocumentProcessingAssignmentServerFunctions.g.cs
// ==================================================================

namespace Sungero.Exchange.Server
{
  public partial class ExchangeDocumentProcessingAssignmentFunctions : global::Sungero.Workflow.Server.AssignmentFunctions
  {
    private global::Sungero.Exchange.IExchangeDocumentProcessingAssignment _obj
    {
      get { return (global::Sungero.Exchange.IExchangeDocumentProcessingAssignment)this.Entity; }
    }

    public ExchangeDocumentProcessingAssignmentFunctions(global::Sungero.Exchange.IExchangeDocumentProcessingAssignment entity) : base(entity) { }
  }
}

// ==================================================================
// ExchangeDocumentProcessingAssignmentFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Exchange.Functions
{
  internal static class ExchangeDocumentProcessingAssignment
  {
  }
}

// ==================================================================
// ExchangeDocumentProcessingAssignmentServerPublicFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Exchange.Server
{
  public class ExchangeDocumentProcessingAssignmentServerPublicFunctions : global::Sungero.Exchange.Server.IExchangeDocumentProcessingAssignmentServerPublicFunctions
  {
  }
}

// ==================================================================
// ExchangeDocumentProcessingAssignmentQueries.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Exchange.Queries
{
  public class ExchangeDocumentProcessingAssignment
  {
    private static global::Sungero.Domain.SqlQueryResolver resolver = new global::Sungero.Domain.SqlQueryResolver("Sungero.Exchange.Server.ExchangeDocumentProcessingAssignment.ExchangeDocumentProcessingAssignmentQueries.xml", System.Reflection.Assembly.GetExecutingAssembly());
  }
}

// ==================================================================
// ExchangeDocumentProcessingAssignmentBlock.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Exchange.Server
{
  public class ExchangeDocumentProcessingAssignmentArguments: global::Sungero.Workflow.Server.Route.AssignmentStartEventArguments<ExchangeDocumentProcessingAssignmentBlock, global::Sungero.Workflow.AssignmentBlock>
  {
    public ExchangeDocumentProcessingAssignmentArguments(ExchangeDocumentProcessingAssignmentBlock block) : base(block) { }
  }

  public class ExchangeDocumentProcessingAssignmentEndBlockEventArguments: global::Sungero.Workflow.Server.Route.AssignmentEndBlockEventArguments<ExchangeDocumentProcessingAssignmentBlock, global::Sungero.Workflow.AssignmentBlock, Sungero.Exchange.IExchangeDocumentProcessingAssignment> 
  {
    public ExchangeDocumentProcessingAssignmentEndBlockEventArguments(ExchangeDocumentProcessingAssignmentBlock block) : base(block) { }
  }

  public partial class ExchangeDocumentProcessingAssignmentBlock : global::Sungero.Workflow.Blocks.AssignmentBlockWrapper<global::Sungero.Workflow.AssignmentBlock>    
  {
    public virtual global::System.DateTime? NewDeadline
    {
      get { return this.GetCustomProperty<global::System.DateTime?>("NewDeadline"); }
      set { this.SetCustomProperty("NewDeadline", value); }
    }

    public virtual global::Sungero.Parties.ICounterparty Counterparty
    {
      get { return this.GetCustomNavigationProperty<global::Sungero.Parties.ICounterparty>("Counterparty"); }
      set { this.SetCustomNavigationProperty("Counterparty", value); }
    }
    public virtual global::Sungero.ExchangeCore.IBoxBase Box
    {
      get { return this.GetCustomNavigationProperty<global::Sungero.ExchangeCore.IBoxBase>("Box"); }
      set { this.SetCustomNavigationProperty("Box", value); }
    }
    public virtual global::Sungero.ExchangeCore.IExchangeService ExchangeService
    {
      get { return this.GetCustomNavigationProperty<global::Sungero.ExchangeCore.IExchangeService>("ExchangeService"); }
      set { this.SetCustomNavigationProperty("ExchangeService", value); }
    }
    public virtual global::Sungero.Company.IEmployee Addressee
    {
      get { return this.GetCustomNavigationProperty<global::Sungero.Company.IEmployee>("Addressee"); }
      set { this.SetCustomNavigationProperty("Addressee", value); }
    }
    public virtual global::Sungero.ExchangeCore.IBusinessUnitBox BusinessUnitBox
    {
      get { return this.GetCustomNavigationProperty<global::Sungero.ExchangeCore.IBusinessUnitBox>("BusinessUnitBox"); }
      set { this.SetCustomNavigationProperty("BusinessUnitBox", value); }
    }




    public ExchangeDocumentProcessingAssignmentBlock(global::Sungero.Workflow.AssignmentBlock block) : base(block) { }
  }
}

// ==================================================================
// ExchangeDocumentProcessingAssignmentChildWrappers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Exchange.Server
{
}
