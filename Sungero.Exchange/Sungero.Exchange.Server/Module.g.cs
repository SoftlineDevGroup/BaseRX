
// ==================================================================
// Module.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Exchange.Server
{
  public partial class ExchangeModule : global::Sungero.Domain.Shared.ModuleBase
  {
    public override global::System.Guid Id
    {
      get { return global::System.Guid.Parse("cec41b99-da21-422f-9332-0fbc423e95c0"); }
    }

    public override string Name
    {
      get { return "Sungero.Exchange"; }
    }

    public override void RegisterTypes()
    {
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Exchange.Server.IModuleServerInitializationFunctions, global::Sungero.Exchange.Server.ModuleServerInitializationFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("ee04eb99-cc71-4a97-b532-fd05b31cf7b2"), new Sungero.Exchange.Shared.ExchangeDocumentInfoInfo(typeof(global::Sungero.Exchange.IExchangeDocumentInfo)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Exchange.Server.IExchangeDocumentInfoServerPublicFunctions, global::Sungero.Exchange.Server.ExchangeDocumentInfoServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Exchange.Shared.IExchangeDocumentInfoSharedPublicFunctions, global::Sungero.Exchange.Shared.ExchangeDocumentInfoSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("4d60313f-8a20-4c5c-be36-0904819e0627"), new Sungero.Exchange.Shared.ExchangeDocumentInfoServiceDocumentsInfo(typeof(global::Sungero.Exchange.IExchangeDocumentInfoServiceDocuments)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("0917ca0b-898f-429d-be37-c12da50c5a95"), new Sungero.Exchange.Shared.ExchangeDocumentProcessingAssignmentInfo(typeof(global::Sungero.Exchange.IExchangeDocumentProcessingAssignment)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Exchange.Server.IExchangeDocumentProcessingAssignmentServerPublicFunctions, global::Sungero.Exchange.Server.ExchangeDocumentProcessingAssignmentServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Exchange.Shared.IExchangeDocumentProcessingAssignmentSharedPublicFunctions, global::Sungero.Exchange.Shared.ExchangeDocumentProcessingAssignmentSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("ae03c598-ab50-4781-b1b2-968510b338b9"), new Sungero.Exchange.Shared.ExchangeDocumentProcessingTaskInfo(typeof(global::Sungero.Exchange.IExchangeDocumentProcessingTask)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Exchange.Server.IExchangeDocumentProcessingTaskServerPublicFunctions, global::Sungero.Exchange.Server.ExchangeDocumentProcessingTaskServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Exchange.Shared.IExchangeDocumentProcessingTaskSharedPublicFunctions, global::Sungero.Exchange.Shared.ExchangeDocumentProcessingTaskSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("4b78f549-6d32-45f4-80ab-4acc76d46af8"), new Sungero.Exchange.Shared.ExchangeDocumentProcessingTaskObserversInfo(typeof(global::Sungero.Exchange.IExchangeDocumentProcessingTaskObservers)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("ad88c31d-5ae1-4821-9615-7d2fa575726b"), new Sungero.Exchange.Shared.ReceiptNotificationSendingAssignmentInfo(typeof(global::Sungero.Exchange.IReceiptNotificationSendingAssignment)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Exchange.Server.IReceiptNotificationSendingAssignmentServerPublicFunctions, global::Sungero.Exchange.Server.ReceiptNotificationSendingAssignmentServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Exchange.Shared.IReceiptNotificationSendingAssignmentSharedPublicFunctions, global::Sungero.Exchange.Shared.ReceiptNotificationSendingAssignmentSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("490e66a0-8618-4eb9-aab8-2dbc8a884d98"), new Sungero.Exchange.Shared.ReceiptNotificationSendingTaskInfo(typeof(global::Sungero.Exchange.IReceiptNotificationSendingTask)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Exchange.Server.IReceiptNotificationSendingTaskServerPublicFunctions, global::Sungero.Exchange.Server.ReceiptNotificationSendingTaskServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Exchange.Shared.IReceiptNotificationSendingTaskSharedPublicFunctions, global::Sungero.Exchange.Shared.ReceiptNotificationSendingTaskSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("44aba064-f682-4733-9219-60d573598a58"), new Sungero.Exchange.Shared.ReceiptNotificationSendingTaskObserversInfo(typeof(global::Sungero.Exchange.IReceiptNotificationSendingTaskObservers)));


      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Exchange.IExchangeDocumentInfoFilterState, global::Sungero.Exchange.Shared.ExchangeDocumentInfo.ExchangeDocumentInfoFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Exchange.IExchangeDocumentProcessingAssignmentFilterState, global::Sungero.Exchange.Shared.ExchangeDocumentProcessingAssignment.ExchangeDocumentProcessingAssignmentFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Exchange.IExchangeDocumentProcessingTaskFilterState, global::Sungero.Exchange.Shared.ExchangeDocumentProcessingTask.ExchangeDocumentProcessingTaskFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Exchange.IReceiptNotificationSendingAssignmentFilterState, global::Sungero.Exchange.Shared.ReceiptNotificationSendingAssignment.ReceiptNotificationSendingAssignmentFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Exchange.IReceiptNotificationSendingTaskFilterState, global::Sungero.Exchange.Shared.ReceiptNotificationSendingTask.ReceiptNotificationSendingTaskFilterState>();



      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Exchange.Server.IModuleServerPublicFunctions, global::Sungero.Exchange.Server.ModuleServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Exchange.Shared.IModuleSharedPublicFunctions, global::Sungero.Exchange.Shared.ModuleSharedPublicFunctions>();
    }
  }
}

// ==================================================================
// ModuleHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Exchange.Server
{
}

// ==================================================================
// ModuleFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Exchange.Functions
{
  internal static partial class Module
  {
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static void SyncMessages(global::Sungero.ExchangeCore.IBusinessUnitBox businessUnitBox, global::System.String lastId)
    {
    ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server)).SyncMessages(businessUnitBox, lastId);
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static global::System.String GetLastMessageId(global::Sungero.ExchangeCore.IBusinessUnitBox box)
    {
        return ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server)).GetLastMessageId(box);
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static void UpdateLastMessageId(global::Sungero.ExchangeCore.IBusinessUnitBox box, global::System.String messageId)
    {
    ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server)).UpdateLastMessageId(box, messageId);
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static void AddRelations(global::Sungero.Docflow.IOfficialDocument document, global::Sungero.Exchange.IExchangeDocumentInfo relatedExchangeDocumentInfo)
    {
    ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server)).AddRelations(document, relatedExchangeDocumentInfo);
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static global::Sungero.Exchange.Structures.Module.ITaxDocumentClassifier GetTaxDocumentClassifierByContent(System.IO.Stream content)
    {
        return global::Sungero.Exchange.Server.ModuleFunctions.GetTaxDocumentClassifierByContent(content);
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static global::Sungero.Exchange.IExchangeDocumentProcessingTask CreateExchangeTask(global::System.Collections.Generic.List<global::Sungero.Exchange.IExchangeDocumentInfo> infos, global::Sungero.Parties.ICounterparty counterparty, global::Sungero.ExchangeCore.IBoxBase box, global::System.DateTime incomeDate)
    {
        return ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server)).CreateExchangeTask(infos, counterparty, box, incomeDate);
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static void GeneratePublicBody(global::System.Int32 documentId)
    {
    ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server)).GeneratePublicBody(documentId);
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static global::System.String GetDocumentHyperlink(global::Sungero.Docflow.IOfficialDocument document)
    {
        return global::Sungero.Exchange.Server.ModuleFunctions.GetDocumentHyperlink(document);
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static global::Sungero.Content.IAssociatedApplication GetOrCreateAssociatedApplicationByDocumentName(global::System.String documentName)
    {
        return global::Sungero.Exchange.Server.ModuleFunctions.GetOrCreateAssociatedApplicationByDocumentName(documentName);
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static void SendAnswers(global::System.Collections.Generic.List<global::Sungero.Docflow.IOfficialDocument> documents, global::Sungero.Parties.ICounterparty counterparty, global::Sungero.ExchangeCore.IBusinessUnitBox box, global::Sungero.CoreEntities.ICertificate certificate, global::System.Boolean isAgent)
    {
    ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server)).SendAnswers(documents, counterparty, box, certificate, isAgent);
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static void SendAnswerToNonformalizedDocument(global::Sungero.Docflow.IOfficialDocument document, global::Sungero.Parties.ICounterparty counterparty, global::Sungero.ExchangeCore.IBusinessUnitBox box, global::Sungero.CoreEntities.ICertificate certificate, global::System.Boolean isAgent)
    {
    ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server)).SendAnswerToNonformalizedDocument(document, counterparty, box, certificate, isAgent);
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static void SendBuyerTitle(global::Sungero.Docflow.IAccountingDocumentBase waybill, global::Sungero.ExchangeCore.IBusinessUnitBox box, global::Sungero.CoreEntities.ICertificate certificate, global::System.Boolean isAgent)
    {
    ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server)).SendBuyerTitle(waybill, box, certificate, isAgent);
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static void SendAmendmentRequest(global::System.Collections.Generic.List<global::Sungero.Exchange.Structures.Module.ReglamentDocumentWithCertificate> signedDocuments, global::Sungero.Parties.ICounterparty receiver, global::Sungero.ExchangeCore.IBoxBase box, global::System.String note)
    {
    ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server)).SendAmendmentRequest(signedDocuments, receiver, box, note);
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static void SendDeliveryConfirmation(global::System.Collections.Generic.List<global::Sungero.Exchange.Structures.Module.ReglamentDocumentWithCertificate> signedDocuments, global::Sungero.ExchangeCore.IBusinessUnitBox box)
    {
    ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server)).SendDeliveryConfirmation(signedDocuments, box);
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static void SendDocuments(global::Sungero.Docflow.IOfficialDocument document, global::System.Collections.Generic.List<global::Sungero.Docflow.IOfficialDocument> addenda, global::Sungero.Parties.ICounterparty receiver, global::Sungero.ExchangeCore.IBusinessUnitBox box, global::Sungero.CoreEntities.ICertificate certificate, global::System.Boolean needSign, global::System.String comment)
    {
    ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server)).SendDocuments(document, addenda, receiver, box, certificate, needSign, comment);
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static NpoComputer.DCX.Common.IDocument CreatePrimaryExchangeServiceDocument(global::Sungero.Docflow.IOfficialDocument document, global::System.Boolean needSign, global::System.String comment)
    {
        return ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server)).CreatePrimaryExchangeServiceDocument(document, needSign, comment);
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static NpoComputer.DCX.Common.DocumentType GetDCXDocumentType(global::Sungero.Docflow.IOfficialDocument document)
    {
        return ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server)).GetDCXDocumentType(document);
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static void GenerateBuyerTitle(global::Sungero.Docflow.IAccountingDocumentBase statement, global::Sungero.Docflow.Structures.AccountingDocumentBase.IBuyerTitle buyerTitle)
    {
    ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server)).GenerateBuyerTitle(statement, buyerTitle);
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static global::System.Boolean HasUnsignedBuyerTitle(global::Sungero.Docflow.IAccountingDocumentBase statement)
    {
        return global::Sungero.Exchange.Server.ModuleFunctions.HasUnsignedBuyerTitle(statement);
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static NpoComputer.DCX.Common.SignerPowers GetSignerPowers(global::System.String authority)
    {
        return ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server)).GetSignerPowers(authority);
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static global::System.Collections.Generic.List<global::Sungero.Exchange.Structures.Module.ReglamentDocumentWithCertificate> GetGeneratedDeliveryConfirmationDocuments(global::System.Collections.Generic.List<global::Sungero.Exchange.IExchangeDocumentInfo> documentInfos, global::Sungero.ExchangeCore.IBusinessUnitBox box, global::Sungero.CoreEntities.ICertificate certificate, global::System.Boolean generateServiceDocuments)
    {
        return ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server)).GetGeneratedDeliveryConfirmationDocuments(documentInfos, box, certificate, generateServiceDocuments);
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static global::System.Collections.Generic.List<global::Sungero.Exchange.Structures.Module.ReglamentDocumentWithCertificate> GenerateAmendmentRequestDocuments(global::System.Collections.Generic.List<global::Sungero.Docflow.IOfficialDocument> documents, global::Sungero.ExchangeCore.IBoxBase box, global::System.String note, global::System.Boolean throwError, global::Sungero.CoreEntities.ICertificate certificate, global::System.Boolean isInvoiceAmendmentRequest)
    {
        return ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server)).GenerateAmendmentRequestDocuments(documents, box, note, throwError, certificate, isInvoiceAmendmentRequest);
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static global::Sungero.Exchange.Structures.Module.SendToCounterpartyInfo GetInfoForSendToCounterparty(global::Sungero.Docflow.IOfficialDocument document)
    {
        return ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server)).GetInfoForSendToCounterparty(document);
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static global::Sungero.Exchange.Structures.Module.DocumentCertificatesInfo GetDocumentCertificatesToBox(global::Sungero.Docflow.IOfficialDocument document, global::Sungero.ExchangeCore.IBusinessUnitBox box)
    {
        return ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server)).GetDocumentCertificatesToBox(document, box);
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static global::System.Collections.Generic.List<global::Sungero.ExchangeCore.IBusinessUnitBox> GetConnectedExchangeBoxesToCounterparty(global::Sungero.Docflow.IOfficialDocument document, global::System.Collections.Generic.List<global::Sungero.Parties.ICounterparty> counterparties)
    {
        return global::Sungero.Exchange.Server.ModuleFunctions.GetConnectedExchangeBoxesToCounterparty(document, counterparties);
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static global::System.Collections.Generic.List<global::Sungero.ExchangeCore.IBusinessUnitBox> GetAllExchangeBoxesToCounterparty(global::Sungero.Docflow.IOfficialDocument document, global::System.Collections.Generic.List<global::Sungero.Parties.ICounterparty> counterparties)
    {
        return global::Sungero.Exchange.Server.ModuleFunctions.GetAllExchangeBoxesToCounterparty(document, counterparties);
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static global::System.Collections.Generic.List<global::Sungero.Exchange.IExchangeDocumentInfo> GetDocumentInfosWithoutReceiptNotificationPart(global::Sungero.ExchangeCore.IBusinessUnitBox box, global::System.Int32 skip, global::System.Int32 take, global::System.Boolean withoutGenerated)
    {
        return ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server)).GetDocumentInfosWithoutReceiptNotificationPart(box, skip, take, withoutGenerated);
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static global::System.Linq.IQueryable<global::Sungero.Exchange.IExchangeDocumentInfo> GetDocumentInfosWithoutReceiptNotification(global::Sungero.ExchangeCore.IBusinessUnitBox box, global::System.Boolean withoutGenerated)
    {
        return ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server)).GetDocumentInfosWithoutReceiptNotification(box, withoutGenerated);
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static global::System.Linq.IQueryable<global::Sungero.Content.IElectronicDocument> GetDocumentsWithoutReceiptNotification(global::Sungero.ExchangeCore.IBusinessUnitBox box)
    {
        return ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server)).GetDocumentsWithoutReceiptNotification(box);
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static void FixReceiptNotification(global::Sungero.Exchange.IExchangeDocumentInfo info, global::System.String comment, global::System.Boolean sent)
    {
    ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server)).FixReceiptNotification(info, comment, sent);
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static void FixReceiptNotification(global::System.Collections.Generic.List<global::Sungero.Exchange.IExchangeDocumentInfo> documentInfos, global::System.String comment, global::System.Boolean sent)
    {
    ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server)).FixReceiptNotification(documentInfos, comment, sent);
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static global::Sungero.Exchange.IReceiptNotificationSendingTask CreateReceiptNotificationSendingTask(global::Sungero.ExchangeCore.IBusinessUnitBox box)
    {
        return ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server)).CreateReceiptNotificationSendingTask(box);
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static void SaveDeliveryConfirmationSigns(global::System.Collections.Generic.List<global::Sungero.Exchange.Structures.Module.ReglamentDocumentWithCertificate> documentsToSign)
    {
    ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server)).SaveDeliveryConfirmationSigns(documentsToSign);
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static void EnqueueXmlToPdfBodyConverter(global::Sungero.Docflow.IOfficialDocument document, global::System.Int32 versionId, global::System.Nullable<global::Sungero.Core.Enumeration> exchangeStatus)
    {
    ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server)).EnqueueXmlToPdfBodyConverter(document, versionId, exchangeStatus);
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static void RemoveNamespaces(System.Xml.Linq.XDocument document)
    {
    global::Sungero.Exchange.Server.ModuleFunctions.RemoveNamespaces(document);
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static global::System.String CutText(global::System.String text, global::System.Int32 maxLength)
    {
        return global::Sungero.Exchange.Server.ModuleFunctions.CutText(text, maxLength);
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static global::System.Boolean IsJobEnabled(global::System.String id)
    {
        return global::Sungero.Exchange.Server.ModuleFunctions.IsJobEnabled(id);
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static void RequeueMessagesGet()
    {
    global::Sungero.Exchange.Server.ModuleFunctions.RequeueMessagesGet();
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static void RequeueBodyConverterJob()
    {
    global::Sungero.Exchange.Server.ModuleFunctions.RequeueBodyConverterJob();
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static void RequeueGenerateServiceDocuments()
    {
    global::Sungero.Exchange.Server.ModuleFunctions.RequeueGenerateServiceDocuments();
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static void RequeueSendSignedReceiptNotifications()
    {
    global::Sungero.Exchange.Server.ModuleFunctions.RequeueSendSignedReceiptNotifications();
    }

    /// <redirect project="Sungero.Exchange.Shared" type="Sungero.Exchange.Shared.ModuleFunctions" />
    internal static global::System.Boolean IsInvoiceFlowDocument(global::Sungero.Docflow.IOfficialDocument document)
    {
        return global::Sungero.Exchange.Shared.ModuleFunctions.IsInvoiceFlowDocument(document);
    }
    /// <redirect project="Sungero.Exchange.Shared" type="Sungero.Exchange.Shared.ModuleFunctions" />
    internal static global::System.Boolean HasCurrentUserExchangeServiceCertificate(global::Sungero.ExchangeCore.IBusinessUnitBox businessUnitBox)
    {
        return ((global::Sungero.Exchange.Shared.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Shared)).HasCurrentUserExchangeServiceCertificate(businessUnitBox);
    }

    private static object GetFunctionsContainer()
    {
      return new global::Sungero.Exchange.Server.ModuleFunctions();
    }

    private static object GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType projectType)
    {
      var moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(moduleId));
      var assemblyName = finalModuleMetadatda.GetAssemblyName(projectType);
      var moduleFunctionsType = global::System.Type.GetType(global::System.String.Format("{0}.{1}, {2}", finalModuleMetadatda.FunctionNamespace, "Module", assemblyName));
      return moduleFunctionsType.GetMethod("GetFunctionsContainer", global::System.Reflection.BindingFlags.NonPublic | global::System.Reflection.BindingFlags.Static).Invoke(null, null);
    }
  }
}

// ==================================================================
// ModuleInitializationInstantiation.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Exchange.ModuleInitialization
{
  internal static partial class Module
  {

    private static object GetFunctionsContainer()
    {
      return new global::Sungero.Exchange.Server.ModuleInitializer();
    }

    private static object GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType projectType)
    {
      var moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(moduleId));
      var assemblyName = finalModuleMetadatda.GetAssemblyName(projectType);
      var moduleFunctionsType = global::System.Type.GetType(global::System.String.Format("{0}.{1}, {2}", finalModuleMetadatda.ModuleInitializationNamespace, "Module", assemblyName));
      return moduleFunctionsType.GetMethod("GetFunctionsContainer", global::System.Reflection.BindingFlags.NonPublic | global::System.Reflection.BindingFlags.Static).Invoke(null, null);
    }

  }
}


// ==================================================================
// ModuleEventArgs.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Exchange.Server
{
}

// ==================================================================
// ModuleServerPublicFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Exchange.Server
{
  public partial class ModuleServerPublicFunctions : global::Sungero.Exchange.Server.IModuleServerPublicFunctions
  {
    public global::System.String CutText(global::System.String text, global::System.Int32 maxLength)
    {
      return global::Sungero.Exchange.Functions.Module.CutText(text, maxLength);
    }
    public void EnqueueXmlToPdfBodyConverter(global::Sungero.Docflow.IOfficialDocument document, global::System.Int32 versionId, global::System.Nullable<global::Sungero.Core.Enumeration> exchangeStatus)
    {
global::Sungero.Exchange.Functions.Module.EnqueueXmlToPdfBodyConverter(document, versionId, exchangeStatus);
    }
    public void GenerateBuyerTitle(global::Sungero.Docflow.IAccountingDocumentBase statement, global::Sungero.Docflow.Structures.AccountingDocumentBase.IBuyerTitle buyerTitle)
    {
global::Sungero.Exchange.Functions.Module.GenerateBuyerTitle(statement, buyerTitle);
    }
    public global::System.Linq.IQueryable<global::Sungero.Exchange.IExchangeDocumentInfo> GetDocumentInfosWithoutReceiptNotification(global::Sungero.ExchangeCore.IBusinessUnitBox box, global::System.Boolean withoutGenerated)
    {
      return global::Sungero.Exchange.Functions.Module.GetDocumentInfosWithoutReceiptNotification(box, withoutGenerated);
    }
    public global::Sungero.Exchange.Structures.Module.ITaxDocumentClassifier GetTaxDocumentClassifierByContent(System.IO.Stream content)
    {
      return global::Sungero.Exchange.Functions.Module.GetTaxDocumentClassifierByContent(content);
    }
    public void RemoveNamespaces(System.Xml.Linq.XDocument document)
    {
global::Sungero.Exchange.Functions.Module.RemoveNamespaces(document);
    }
    public void SendAnswerToNonformalizedDocument(global::Sungero.Docflow.IOfficialDocument document, global::Sungero.Parties.ICounterparty counterparty, global::Sungero.ExchangeCore.IBusinessUnitBox box, global::Sungero.CoreEntities.ICertificate certificate, global::System.Boolean isAgent)
    {
global::Sungero.Exchange.Functions.Module.SendAnswerToNonformalizedDocument(document, counterparty, box, certificate, isAgent);
    }
    public void SendBuyerTitle(global::Sungero.Docflow.IAccountingDocumentBase waybill, global::Sungero.ExchangeCore.IBusinessUnitBox box, global::Sungero.CoreEntities.ICertificate certificate, global::System.Boolean isAgent)
    {
global::Sungero.Exchange.Functions.Module.SendBuyerTitle(waybill, box, certificate, isAgent);
    }
  }
}

namespace Sungero.Exchange.Server
{
  public partial class ModuleServerPublicFunctions : global::Sungero.Exchange.Server.IModuleServerPublicFunctions
  {
      private static readonly global::System.Guid JobBodyConverterJobId = global::System.Guid.Parse("65fa7815-170d-489c-b613-c2c2366161a4");

      public void Enqueue_BodyConverterJob()
      {      
         global::Sungero.Agent.JobsManager.Enqueue(JobBodyConverterJobId, null);
      }
 
      private static readonly global::System.Guid JobGetMessagesId = global::System.Guid.Parse("13f61e21-8bb9-4a3d-b72b-e92da64c60b4");

      public void Enqueue_GetMessages()
      {      
         global::Sungero.Agent.JobsManager.Enqueue(JobGetMessagesId, null);
      }
 
      private static readonly global::System.Guid JobSendReceiptNotificationTasksId = global::System.Guid.Parse("e7b6f44d-78eb-4c9f-b6e5-ffa66a262e91");

      public void Enqueue_SendReceiptNotificationTasks()
      {      
         global::Sungero.Agent.JobsManager.Enqueue(JobSendReceiptNotificationTasksId, null);
      }
 
      private static readonly global::System.Guid JobCreateReceiptNotificationsId = global::System.Guid.Parse("b54f0e86-0cac-49bf-b99b-30ffd8030d9b");

      public void Enqueue_CreateReceiptNotifications()
      {      
         global::Sungero.Agent.JobsManager.Enqueue(JobCreateReceiptNotificationsId, null);
      }
 
      private static readonly global::System.Guid JobSendSignedReceiptNotificationsId = global::System.Guid.Parse("a050e9dc-ac0a-40c2-a322-7f1832e53f36");

      public void Enqueue_SendSignedReceiptNotifications()
      {      
         global::Sungero.Agent.JobsManager.Enqueue(JobSendSignedReceiptNotificationsId, null);
      }
 


  }
}

// ==================================================================
// ModuleServerInitializationFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Exchange.Server
{
  public partial class ModuleServerInitializationFunctions : global::Sungero.Exchange.Server.IModuleServerInitializationFunctions
  {
  }
}


// ==================================================================
// ModuleWidgetHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Exchange.Server
{
}

// ==================================================================
// ModuleQueries.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Exchange.Queries
{
  public class Module
  {
    private static global::Sungero.Domain.SqlQueryResolver resolver = new global::Sungero.Domain.SqlQueryResolver("Sungero.Exchange.Server.ModuleQueries.xml", System.Reflection.Assembly.GetExecutingAssembly());
    public static string UpdateLastMessageId
    {
       get { return resolver.GetQuery("UpdateLastMessageId"); }
    }
    public static string GetLastMessageId
    {
       get { return resolver.GetQuery("GetLastMessageId"); }
    }
  }
}

// ==================================================================
// ModuleInitializer.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Exchange.Server
{
  public partial class ModuleInitializer : global::Sungero.Domain.AppliedModuleInitializer
  {
  }
}

