
// ==================================================================
// ReceiptNotificationSendingTask.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Exchange.Server
{
    public class ReceiptNotificationSendingTaskFilter<T> :
      global::Sungero.Workflow.Server.TaskFilter<T>
      where T : class, global::Sungero.Exchange.IReceiptNotificationSendingTask
    {
      protected new global::Sungero.Exchange.IReceiptNotificationSendingTaskFilterState Filter { get; private set; }

      private global::Sungero.Exchange.IReceiptNotificationSendingTaskFilterState filter
      {
        get
        {
          return this.Filter;
        }
      }

      protected override global::System.Linq.IQueryable<T> ApplyAppliedFilter(global::System.Linq.IQueryable<T> query)
      {
        return base.ApplyAppliedFilter(query);
      }

      public ReceiptNotificationSendingTaskFilter(global::Sungero.Exchange.IReceiptNotificationSendingTaskFilterState filter)
      : base()
      {
        this.Filter = filter;
      }

      protected ReceiptNotificationSendingTaskFilter()
      {
      }
    }
    public class ReceiptNotificationSendingTaskSearchDialogModel : global::Sungero.Workflow.Server.TaskSearchDialogModel
        {
                  public override global::System.Int32? Id { get; protected set; }
                  public override global::System.String Subject { get; protected set; }


                  public override global::System.Collections.Generic.IEnumerable<Sungero.Core.Enumeration> Status { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<Sungero.Core.Enumeration> Importance { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<CommonLibrary.DateRangeValue> Started { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<CommonLibrary.DateRangeValue> MaxDeadline { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<Sungero.CoreEntities.IRecipient> Author { get; protected set; }



                  public virtual global::System.Collections.Generic.IEnumerable<Sungero.ExchangeCore.IBusinessUnitBox> Box { get; protected set; }
                  public virtual global::System.Collections.Generic.IEnumerable<Sungero.CoreEntities.IRecipient> Addressee { get; protected set; }


                   [Sungero.Domain.Shared.HideInDevStudio()]
                   public new ReceiptNotificationSendingTaskObserversModel Observers { get { return (ReceiptNotificationSendingTaskObserversModel)base.Observers; } protected set { base.Observers = value; } }

        }

      public class ReceiptNotificationSendingTaskObserversModel : global::Sungero.Workflow.Server.TaskObserversModel
          {
                      [Sungero.Domain.Shared.HideInDevStudio()]
                      public override global::System.Int32? Id { get; protected set; }




         }




  public class ReceiptNotificationSendingTaskFilterForBox<TQueryEntity, TSourceEntity>
    : global::Sungero.Domain.EntityPropertyFilterBase<TQueryEntity, TSourceEntity>
    where TQueryEntity : class, global::Sungero.ExchangeCore.IBusinessUnitBox
    where TSourceEntity : class, global::Sungero.Exchange.IReceiptNotificationSendingTask
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, TSourceEntity sourceEntity)
    {
      var args = new global::Sungero.Domain.PropertyFilteringEventArgs(sourceEntity);
      var result = new global::Sungero.Exchange.ReceiptNotificationSendingTaskBoxPropertyFilteringServerHandler<TQueryEntity>(sourceEntity).BoxFiltering(query, args);
      if (args.DisableUiFiltering)
        global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public ReceiptNotificationSendingTaskFilterForBox(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class ReceiptNotificationSendingTaskSearchFilterForBox<TQueryEntity>
    : global::Sungero.Domain.SearchDialogPropertyFilter<TQueryEntity>
    where TQueryEntity : class, global::Sungero.ExchangeCore.IBusinessUnitBox
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, System.Guid entityType)
    {
      var args = new global::Sungero.Domain.PropertySearchDialogFilteringEventArgs(entityType);
      var result = new global::Sungero.Exchange.ReceiptNotificationSendingTaskBoxSearchPropertyFilteringServerHandler<TQueryEntity>().BoxSearchDialogFiltering(query, args);
      if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public ReceiptNotificationSendingTaskSearchFilterForBox(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class ReceiptNotificationSendingTaskFilterForAddressee<TQueryEntity, TSourceEntity>
    : global::Sungero.Domain.EntityPropertyFilterBase<TQueryEntity, TSourceEntity>
    where TQueryEntity : class, global::Sungero.Company.IEmployee
    where TSourceEntity : class, global::Sungero.Exchange.IReceiptNotificationSendingTask
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, TSourceEntity sourceEntity)
    {
      var args = new global::Sungero.Domain.PropertyFilteringEventArgs(sourceEntity);
      var result = new global::Sungero.Exchange.ReceiptNotificationSendingTaskAddresseePropertyFilteringServerHandler<TQueryEntity>(sourceEntity).AddresseeFiltering(query, args);
      if (args.DisableUiFiltering)
        global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public ReceiptNotificationSendingTaskFilterForAddressee(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class ReceiptNotificationSendingTaskSearchFilterForAddressee<TQueryEntity>
    : global::Sungero.Domain.SearchDialogPropertyFilter<TQueryEntity>
    where TQueryEntity : class, global::Sungero.CoreEntities.IRecipient
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, System.Guid entityType)
    {
      var args = new global::Sungero.Domain.PropertySearchDialogFilteringEventArgs(entityType);
      var result = new global::Sungero.Exchange.ReceiptNotificationSendingTaskAddresseeSearchPropertyFilteringServerHandler<TQueryEntity>().AddresseeSearchDialogFiltering(query, args);
      if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public ReceiptNotificationSendingTaskSearchFilterForAddressee(string propertyName)
      : base(propertyName)
    {
    }
  }



  [global::Sungero.Domain.Filter(typeof(global::Sungero.Exchange.Server.ReceiptNotificationSendingTaskFilter<global::Sungero.Exchange.IReceiptNotificationSendingTask>))]
  [global::Sungero.Domain.PropertyFilter(typeof(global::Sungero.Exchange.Server.ReceiptNotificationSendingTaskFilterForBox<global::Sungero.ExchangeCore.IBusinessUnitBox, global::Sungero.Exchange.IReceiptNotificationSendingTask>), "Box")]
  [global::Sungero.Domain.SearchPropertyFilter(typeof(global::Sungero.Exchange.Server.ReceiptNotificationSendingTaskSearchFilterForBox<global::Sungero.ExchangeCore.IBusinessUnitBox>), "Box")]
  [global::Sungero.Domain.PropertyFilter(typeof(global::Sungero.Exchange.Server.ReceiptNotificationSendingTaskFilterForAddressee<global::Sungero.Company.IEmployee, global::Sungero.Exchange.IReceiptNotificationSendingTask>), "Addressee")]
  [global::Sungero.Domain.SearchPropertyFilter(typeof(global::Sungero.Exchange.Server.ReceiptNotificationSendingTaskSearchFilterForAddressee<global::Sungero.CoreEntities.IRecipient>), "Addressee")]


  public class ReceiptNotificationSendingTask :
    global::Sungero.Workflow.Server.Task, global::Sungero.Exchange.IReceiptNotificationSendingTask, global::Sungero.Domain.Shared.ISecurableEntity, global::Sungero.Domain.IInternalSecurableEntity
  {
    public static new readonly global::System.Guid ClassTypeGuid = global::System.Guid.Parse("490e66a0-8618-4eb9-aab8-2dbc8a884d98");

    public override global::System.Guid TypeGuid
    {
      get { return global::Sungero.Exchange.Server.ReceiptNotificationSendingTask.ClassTypeGuid; }
    }

    public override string TypeName
    {
      get { return "Sungero.Exchange.IReceiptNotificationSendingTask, Sungero.Domain.Interfaces"; }
    }

    public override string DisplayValue
    {
      get { return this.Subject; }
      set { this.Subject = value; }
    }

    public new virtual global::Sungero.Exchange.IReceiptNotificationSendingTaskState State
    {
      get { return (global::Sungero.Exchange.IReceiptNotificationSendingTaskState)base.State; }
    }

    protected override global::Sungero.Domain.Shared.IEntityState CreateState()
    {
      return new global::Sungero.Exchange.Shared.ReceiptNotificationSendingTaskState(this);
    }

    public new virtual global::Sungero.Exchange.IReceiptNotificationSendingTaskInfo Info
    {
      get { return (global::Sungero.Exchange.IReceiptNotificationSendingTaskInfo)base.Info; }
    }

    public new virtual global::Sungero.Exchange.IReceiptNotificationSendingTaskAccessRights AccessRights
    {
      get { return (global::Sungero.Exchange.IReceiptNotificationSendingTaskAccessRights)base.AccessRights; }
    }

    protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
    {
      return new global::Sungero.Exchange.Server.ReceiptNotificationSendingTaskAccessRights(this);
    }

    protected override global::Sungero.Domain.EntityFunctions CreateServerFunctions()
    {
      return new global::Sungero.Exchange.Server.ReceiptNotificationSendingTaskFunctions(this);
    }

    protected override global::Sungero.Domain.Shared.EntityFunctions CreateSharedFunctions()
    {
      return new global::Sungero.Exchange.Shared.ReceiptNotificationSendingTaskFunctions(this);
    }

    protected override object CreateHandlers() {
      return new global::Sungero.Exchange.ReceiptNotificationSendingTaskServerHandlers(this);
    }

    protected override object CreateSharedHandlers() {
      return new global::Sungero.Exchange.ReceiptNotificationSendingTaskSharedHandlers(this);
    }







    private global::Sungero.ExchangeCore.IBusinessUnitBox _Box;
    public virtual global::Sungero.ExchangeCore.IBusinessUnitBox Box
    {
      get
      {
        return this._Box;
      }

      set
      {
        this.SetPropertyValue("Box", this._Box, value, (propertyValue) => { this._Box = propertyValue; }, this.BoxChangedHandler);
      }
    }
    private global::Sungero.Company.IEmployee _Addressee;
    public virtual global::Sungero.Company.IEmployee Addressee
    {
      get
      {
        return this._Addressee;
      }

      set
      {
        this.SetPropertyValue("Addressee", this._Addressee, value, (propertyValue) => { this._Addressee = propertyValue; }, this.AddresseeChangedHandler);
      }
    }



    protected override global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Workflow.ITaskObservers> CreateObserversCollection()
    {
      return new global::Sungero.Domain.ChildEntityCollection<global::Sungero.Exchange.IReceiptNotificationSendingTaskObservers>() { RootEntity = this };
    }


    protected override global::Sungero.Domain.Shared.EntityCreatingFromServerHandler CreateCreatingFromServerHandler(
      global::Sungero.Domain.Shared.IEntity entitySource)
    {
      return new global::Sungero.Exchange.ReceiptNotificationSendingTaskCreatingFromServerHandler((global::Sungero.Exchange.IReceiptNotificationSendingTask)entitySource, this.Info);
    }

    #region Framework events

    protected void BoxChangedHandler()
    {
      var args = new global::Sungero.Exchange.Shared.ReceiptNotificationSendingTaskBoxChangedEventArgs(this.State.Properties.Box, this.Box, this);
     ((global::Sungero.Exchange.ReceiptNotificationSendingTaskSharedHandlers)this.SharedHandlers).BoxChanged(args);
    }


    protected void AddresseeChangedHandler()
    {
      var args = new global::Sungero.Exchange.Shared.ReceiptNotificationSendingTaskAddresseeChangedEventArgs(this.State.Properties.Addressee, this.Addressee, this);
     ((global::Sungero.Exchange.ReceiptNotificationSendingTaskSharedHandlers)this.SharedHandlers).AddresseeChanged(args);
    }




    #endregion


    public ReceiptNotificationSendingTask()
    {
      ((global::Sungero.Workflow.Interfaces.IWorkflowEntity)this).AttachmentCreated += this.AttachmentCreatedHandler;
      ((global::Sungero.Workflow.Interfaces.IWorkflowEntity)this).AttachmentAdded += this.AttachmentAddedHandler;
      ((global::Sungero.Workflow.Interfaces.IWorkflowEntity)this).AttachmentDeleted += this.AttachmentDeletedHandler;


    }

    #region Workflow attachments

    private void AttachmentCreatedHandler(object sender, global::Sungero.Workflow.Interfaces.AttachmentCreatedEventArgs e)
    {
    }

    private void AttachmentAddedHandler(object sender, global::Sungero.Workflow.Interfaces.AttachmentAddedEventArgs e)
    {
    }

    private void AttachmentDeletedHandler(object sender, global::Sungero.Workflow.Interfaces.AttachmentDeletedEventArgs e)
    {
    }
    #endregion

  }
}

// ==================================================================
// ReceiptNotificationSendingTaskHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Exchange
{
  public partial class ReceiptNotificationSendingTaskBoxPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.EntityPropertyFilteringServerHandler
    where T : class, global::Sungero.ExchangeCore.IBusinessUnitBox
  {
    private global::Sungero.Exchange.IReceiptNotificationSendingTask _obj
    {
      get { return (global::Sungero.Exchange.IReceiptNotificationSendingTask)this.Entity; }
    }

    public virtual global::System.Linq.IQueryable<T> BoxFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertyFilteringEventArgs e)
    {
      return query;
    }

    public ReceiptNotificationSendingTaskBoxPropertyFilteringServerHandler(global::Sungero.Exchange.IReceiptNotificationSendingTask entity)
      : base(entity)
    {
    }
  }

  public partial class ReceiptNotificationSendingTaskBoxSearchPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.SearchPropertyFilteringServerHandler
    where T : class, global::Sungero.ExchangeCore.IBusinessUnitBox
  {

    public virtual global::System.Linq.IQueryable<T> BoxSearchDialogFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertySearchDialogFilteringEventArgs e)
    {
      return query;
    }

    public ReceiptNotificationSendingTaskBoxSearchPropertyFilteringServerHandler()
      : base()
    {
    }
  }

  public partial class ReceiptNotificationSendingTaskAddresseePropertyFilteringServerHandler<T>
    : global::Sungero.Domain.EntityPropertyFilteringServerHandler
    where T : class, global::Sungero.Company.IEmployee
  {
    private global::Sungero.Exchange.IReceiptNotificationSendingTask _obj
    {
      get { return (global::Sungero.Exchange.IReceiptNotificationSendingTask)this.Entity; }
    }

    public virtual global::System.Linq.IQueryable<T> AddresseeFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertyFilteringEventArgs e)
    {
      return query;
    }

    public ReceiptNotificationSendingTaskAddresseePropertyFilteringServerHandler(global::Sungero.Exchange.IReceiptNotificationSendingTask entity)
      : base(entity)
    {
    }
  }

  public partial class ReceiptNotificationSendingTaskAddresseeSearchPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.SearchPropertyFilteringServerHandler
    where T : class, global::Sungero.CoreEntities.IRecipient
  {

    public virtual global::System.Linq.IQueryable<T> AddresseeSearchDialogFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertySearchDialogFilteringEventArgs e)
    {
      return query;
    }

    public ReceiptNotificationSendingTaskAddresseeSearchPropertyFilteringServerHandler()
      : base()
    {
    }
  }



  public partial class ReceiptNotificationSendingTaskFilteringServerHandler<T>
    : global::Sungero.Domain.EntityFilteringServerHandler<T>  
    where T : class, global::Sungero.Exchange.IReceiptNotificationSendingTask
  {
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    protected new global::Sungero.Exchange.IReceiptNotificationSendingTaskFilterState Filter { get; private set; }

    private global::Sungero.Exchange.IReceiptNotificationSendingTaskFilterState _filter
    {
      get
      {
        return this.Filter;
      }
    }

    public ReceiptNotificationSendingTaskFilteringServerHandler(global::Sungero.Exchange.IReceiptNotificationSendingTaskFilterState filter)
    : base()
    {
      this.Filter = filter;
    }

    protected ReceiptNotificationSendingTaskFilteringServerHandler()
    {
    }

    public override global::System.Linq.IQueryable<T> Filtering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.FilteringEventArgs e)
    {
      return query;
    }


  }

  public partial class ReceiptNotificationSendingTaskSearchDialogServerHandler : global::Sungero.Workflow.TaskSearchDialogServerHandler
   {
     private global::Sungero.Exchange.Server.ReceiptNotificationSendingTaskSearchDialogModel _dialog
     {
       get
       {
         return (global::Sungero.Exchange.Server.ReceiptNotificationSendingTaskSearchDialogModel)this.Dialog;
       }
     }

     public ReceiptNotificationSendingTaskSearchDialogServerHandler(global::Sungero.Exchange.Server.ReceiptNotificationSendingTaskSearchDialogModel dialog)
       : base(dialog)
     {
     }
   }

  public partial class ReceiptNotificationSendingTaskServerHandlers : global::Sungero.Workflow.TaskServerHandlers
  {
    private global::Sungero.Exchange.IReceiptNotificationSendingTask _obj
    {
      get { return (global::Sungero.Exchange.IReceiptNotificationSendingTask)this.Entity; }
    }

    public ReceiptNotificationSendingTaskServerHandlers(global::Sungero.Exchange.IReceiptNotificationSendingTask entity)
      : base(entity)
    {
    }
  }

  public partial class ReceiptNotificationSendingTaskCreatingFromServerHandler : global::Sungero.Workflow.TaskCreatingFromServerHandler
  {
    private global::Sungero.Exchange.IReceiptNotificationSendingTask _source
    {
      get { return (global::Sungero.Exchange.IReceiptNotificationSendingTask)this.Source; }
    }

    private global::Sungero.Exchange.IReceiptNotificationSendingTaskInfo _info
    {
      get { return (global::Sungero.Exchange.IReceiptNotificationSendingTaskInfo)this._Info; }
    }

    public ReceiptNotificationSendingTaskCreatingFromServerHandler(global::Sungero.Exchange.IReceiptNotificationSendingTask source, global::Sungero.Exchange.IReceiptNotificationSendingTaskInfo info)
      : base(source, info)
    {
    }
  }

}

// ==================================================================
// ReceiptNotificationSendingTaskEventArgs.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Exchange.Server
{
}

// ==================================================================
// ReceiptNotificationSendingTaskAccessRights.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Exchange.Server
{
  public class ReceiptNotificationSendingTaskAccessRights : 
    Sungero.Workflow.Server.TaskAccessRights, Sungero.Exchange.IReceiptNotificationSendingTaskAccessRights
  {

    public ReceiptNotificationSendingTaskAccessRights(global::Sungero.Domain.Shared.IEntity entity) : base(entity)
    {
    }
  }

  public class ReceiptNotificationSendingTaskTypeAccessRights : 
    Sungero.Workflow.Server.TaskTypeAccessRights, Sungero.Exchange.IReceiptNotificationSendingTaskAccessRights
  {

    public ReceiptNotificationSendingTaskTypeAccessRights(global::System.Type entityType) : base(entityType)
    {
    }
  }
}

// ==================================================================
// ReceiptNotificationSendingTaskRepositoryImplementer.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Exchange.Server
{
    public class ReceiptNotificationSendingTaskRepositoryImplementer<T> : 
      global::Sungero.Workflow.Server.TaskRepositoryImplementer<T>,
      global::Sungero.Exchange.IReceiptNotificationSendingTaskRepositoryImplementer<T>
      where T : global::Sungero.Exchange.IReceiptNotificationSendingTask 
    {
       public new global::Sungero.Exchange.IReceiptNotificationSendingTaskAccessRights AccessRights
       {
          get { return (global::Sungero.Exchange.IReceiptNotificationSendingTaskAccessRights)base.AccessRights; }
       }

       public new global::Sungero.Exchange.IReceiptNotificationSendingTaskInfo Info
       {
          get { return (global::Sungero.Exchange.IReceiptNotificationSendingTaskInfo)base.Info; }
       }

       protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
       {
         return new global::Sungero.Exchange.Server.ReceiptNotificationSendingTaskTypeAccessRights(typeof(T));
       }
    }
}

// ==================================================================
// ReceiptNotificationSendingTaskPanelNavigationFilters.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Exchange.Server
{
}

// ==================================================================
// ReceiptNotificationSendingTaskServerFunctions.g.cs
// ==================================================================

namespace Sungero.Exchange.Server
{
  public partial class ReceiptNotificationSendingTaskFunctions : global::Sungero.Workflow.Server.TaskFunctions
  {
    private global::Sungero.Exchange.IReceiptNotificationSendingTask _obj
    {
      get { return (global::Sungero.Exchange.IReceiptNotificationSendingTask)this.Entity; }
    }

    public ReceiptNotificationSendingTaskFunctions(global::Sungero.Exchange.IReceiptNotificationSendingTask entity) : base(entity) { }
  }
}

// ==================================================================
// ReceiptNotificationSendingTaskFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Exchange.Functions
{
  internal static class ReceiptNotificationSendingTask
  {
  }
}

// ==================================================================
// ReceiptNotificationSendingTaskServerPublicFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Exchange.Server
{
  public class ReceiptNotificationSendingTaskServerPublicFunctions : global::Sungero.Exchange.Server.IReceiptNotificationSendingTaskServerPublicFunctions
  {
  }
}

// ==================================================================
// ReceiptNotificationSendingTaskQueries.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Exchange.Queries
{
  public class ReceiptNotificationSendingTask
  {
    private static global::Sungero.Domain.SqlQueryResolver resolver = new global::Sungero.Domain.SqlQueryResolver("Sungero.Exchange.Server.ReceiptNotificationSendingTask.ReceiptNotificationSendingTaskQueries.xml", System.Reflection.Assembly.GetExecutingAssembly());
  }
}

// ==================================================================
// ReceiptNotificationSendingTaskBlock.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Exchange.Server
{
  public class ReceiptNotificationSendingTaskArguments: global::Sungero.Workflow.Server.Route.TaskStartEventArguments<ReceiptNotificationSendingTaskBlock, global::Sungero.Workflow.TaskBlock>
  {
    public ReceiptNotificationSendingTaskArguments(ReceiptNotificationSendingTaskBlock block) : base(block) { }
  }

  public class ReceiptNotificationSendingTaskEndBlockEventArguments: global::Sungero.Workflow.Server.Route.TaskEndBlockEventArguments<ReceiptNotificationSendingTaskBlock, global::Sungero.Workflow.TaskBlock, Sungero.Exchange.IReceiptNotificationSendingTask> 
  {
    public ReceiptNotificationSendingTaskEndBlockEventArguments(ReceiptNotificationSendingTaskBlock block) : base(block) { }
  }

  public partial class ReceiptNotificationSendingTaskBlock : global::Sungero.Workflow.Blocks.TaskBlockWrapper<global::Sungero.Workflow.TaskBlock>    
  {
    public virtual global::Sungero.ExchangeCore.IBusinessUnitBox Box
    {
      get { return this.GetCustomNavigationProperty<global::Sungero.ExchangeCore.IBusinessUnitBox>("Box"); }
      set { this.SetCustomNavigationProperty("Box", value); }
    }
    public virtual global::Sungero.Company.IEmployee Addressee
    {
      get { return this.GetCustomNavigationProperty<global::Sungero.Company.IEmployee>("Addressee"); }
      set { this.SetCustomNavigationProperty("Addressee", value); }
    }




    public ReceiptNotificationSendingTaskBlock(global::Sungero.Workflow.TaskBlock block) : base(block) { }
  }
}

// ==================================================================
// ReceiptNotificationSendingTaskChildWrappers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Exchange.Server
{
}

// ==================================================================
// ReceiptNotificationSendingTaskRouteHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Exchange.Server
{
  public partial class ReceiptNotificationSendingTaskRouteHandlers{
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    protected global::Sungero.Workflow.ITask Task { get; private set; }

    private global::Sungero.Exchange.IReceiptNotificationSendingTask _obj
    {
      get { return (global::Sungero.Exchange.IReceiptNotificationSendingTask)this.Task; }
    }


    protected readonly int _schemeVersion;

    public ReceiptNotificationSendingTaskRouteHandlers(global::Sungero.Exchange.IReceiptNotificationSendingTask task, int schemeVersion) 
    {
      this.Task = task;
      this._schemeVersion = schemeVersion;
    }


    [global::System.ObsoleteAttribute("Используйте ExtendedSchemeVersions")]
    private static class SchemeVersions
    {
      public static readonly int V1 = 1;
}

    }
}
