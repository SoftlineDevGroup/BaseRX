
// ==================================================================
// ModuleFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Exchange.Functions
{
  internal static partial class Module
  {
    /// <redirect project="Sungero.Exchange.ClientBase" type="Sungero.Exchange.Client.ModuleFunctions" />
    internal static void GetMessages()
    {
    global::Sungero.Exchange.Client.ModuleFunctions.GetMessages();
    }
    /// <redirect project="Sungero.Exchange.ClientBase" type="Sungero.Exchange.Client.ModuleFunctions" />
    internal static global::Sungero.CoreEntities.ICertificate GetCurrentUserExchangeCertificate(global::Sungero.ExchangeCore.IBoxBase box, global::Sungero.Company.IEmployee employee)
    {
        return global::Sungero.Exchange.Client.ModuleFunctions.GetCurrentUserExchangeCertificate(box, employee);
    }
    /// <redirect project="Sungero.Exchange.ClientBase" type="Sungero.Exchange.Client.ModuleFunctions" />
    internal static global::Sungero.CoreEntities.ICertificate GetUserExchangeCertificate(global::Sungero.ExchangeCore.IBoxBase box, global::Sungero.Company.IEmployee employee)
    {
        return ((global::Sungero.Exchange.Client.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.ClientBase)).GetUserExchangeCertificate(box, employee);
    }
    /// <redirect project="Sungero.Exchange.ClientBase" type="Sungero.Exchange.Client.ModuleFunctions" />
    internal static global::System.String SendAmendmentRequest(global::System.Collections.Generic.List<global::Sungero.Docflow.IOfficialDocument> documents, global::Sungero.Parties.ICounterparty receiver, global::System.String note, global::System.Boolean throwError, global::Sungero.ExchangeCore.IBoxBase box, global::Sungero.CoreEntities.ICertificate certificate, global::System.Boolean isInvoiceAmendmentRequest)
    {
        return global::Sungero.Exchange.Client.ModuleFunctions.SendAmendmentRequest(documents, receiver, note, throwError, box, certificate, isInvoiceAmendmentRequest);
    }
    /// <redirect project="Sungero.Exchange.ClientBase" type="Sungero.Exchange.Client.ModuleFunctions" />
    internal static void SignAndSendDeliveryConfirmation()
    {
    ((global::Sungero.Exchange.Client.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.ClientBase)).SignAndSendDeliveryConfirmation();
    }
    /// <redirect project="Sungero.Exchange.ClientBase" type="Sungero.Exchange.Client.ModuleFunctions" />
    internal static global::System.String SendDeliveryConfirmation(global::Sungero.ExchangeCore.IBoxBase box, global::Sungero.CoreEntities.ICertificate certificate, global::System.Boolean bulkMode)
    {
        return ((global::Sungero.Exchange.Client.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.ClientBase)).SendDeliveryConfirmation(box, certificate, bulkMode);
    }
    /// <redirect project="Sungero.Exchange.ClientBase" type="Sungero.Exchange.Client.ModuleFunctions" />
    internal static void SendResultToCounterparty(global::Sungero.Docflow.IOfficialDocument document)
    {
    global::Sungero.Exchange.Client.ModuleFunctions.SendResultToCounterparty(document);
    }
    /// <redirect project="Sungero.Exchange.ClientBase" type="Sungero.Exchange.Client.ModuleFunctions" />
    internal static void SendResultToCounterparty(global::Sungero.Docflow.IOfficialDocument document, global::Sungero.ExchangeCore.IExchangeService service, global::System.Collections.Generic.List<global::Sungero.Docflow.IOfficialDocument> addenda)
    {
    global::Sungero.Exchange.Client.ModuleFunctions.SendResultToCounterparty(document, service, addenda);
    }
    /// <redirect project="Sungero.Exchange.ClientBase" type="Sungero.Exchange.Client.ModuleFunctions" />
    internal static void SendDocumentToCounterparty(global::Sungero.Docflow.IOfficialDocument document, global::Sungero.Exchange.Structures.Module.SendToCounterpartyInfo documentInfo, global::Sungero.ExchangeCore.IExchangeService service, global::System.Collections.Generic.List<global::Sungero.Docflow.IOfficialDocument> addenda)
    {
    global::Sungero.Exchange.Client.ModuleFunctions.SendDocumentToCounterparty(document, documentInfo, service, addenda);
    }
    /// <redirect project="Sungero.Exchange.ClientBase" type="Sungero.Exchange.Client.ModuleFunctions" />
    internal static void SendAnswerToCounterparty(global::Sungero.Docflow.IOfficialDocument document, global::Sungero.Exchange.Structures.Module.SendToCounterpartyInfo documentInfo, global::System.Collections.Generic.List<global::Sungero.Docflow.IOfficialDocument> addenda)
    {
    global::Sungero.Exchange.Client.ModuleFunctions.SendAnswerToCounterparty(document, documentInfo, addenda);
    }

    /// <redirect project="Sungero.Exchange.Shared" type="Sungero.Exchange.Shared.ModuleFunctions" />
    internal static global::System.Boolean IsInvoiceFlowDocument(global::Sungero.Docflow.IOfficialDocument document)
    {
        return global::Sungero.Exchange.Shared.ModuleFunctions.IsInvoiceFlowDocument(document);
    }
    /// <redirect project="Sungero.Exchange.Shared" type="Sungero.Exchange.Shared.ModuleFunctions" />
    internal static global::System.Boolean HasCurrentUserExchangeServiceCertificate(global::Sungero.ExchangeCore.IBusinessUnitBox businessUnitBox)
    {
        return ((global::Sungero.Exchange.Shared.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Shared)).HasCurrentUserExchangeServiceCertificate(businessUnitBox);
    }

    internal static class Remote
    {
      /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
      internal static global::System.String GetLastMessageId(global::Sungero.ExchangeCore.IBusinessUnitBox box)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::System.String>(
          global::System.Guid.Parse("cec41b99-da21-422f-9332-0fbc423e95c0"),
          "GetLastMessageId(global::Sungero.ExchangeCore.IBusinessUnitBox)", box);
      }
      /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
      internal static void UpdateLastMessageId(global::Sungero.ExchangeCore.IBusinessUnitBox box, global::System.String messageId)
      {
      global::Sungero.Domain.Shared.RemoteFunctionExecutor.Execute(
          global::System.Guid.Parse("cec41b99-da21-422f-9332-0fbc423e95c0"),
          "UpdateLastMessageId(global::Sungero.ExchangeCore.IBusinessUnitBox,global::System.String)", box, messageId);
      }
      /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
      internal static void GeneratePublicBody(global::System.Int32 documentId)
      {
      global::Sungero.Domain.Shared.RemoteFunctionExecutor.Execute(
          global::System.Guid.Parse("cec41b99-da21-422f-9332-0fbc423e95c0"),
          "GeneratePublicBody(global::System.Int32)", documentId);
      }
      /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
      internal static global::System.String GetDocumentHyperlink(global::Sungero.Docflow.IOfficialDocument document)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::System.String>(
          global::System.Guid.Parse("cec41b99-da21-422f-9332-0fbc423e95c0"),
          "GetDocumentHyperlink(global::Sungero.Docflow.IOfficialDocument)", document);
      }
      /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
      internal static global::Sungero.Content.IAssociatedApplication GetOrCreateAssociatedApplicationByDocumentName(global::System.String documentName)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::Sungero.Content.IAssociatedApplication>(
          global::System.Guid.Parse("cec41b99-da21-422f-9332-0fbc423e95c0"),
          "GetOrCreateAssociatedApplicationByDocumentName(global::System.String)", documentName);
      }
      /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
      internal static void SendAnswers(global::System.Collections.Generic.List<global::Sungero.Docflow.IOfficialDocument> documents, global::Sungero.Parties.ICounterparty counterparty, global::Sungero.ExchangeCore.IBusinessUnitBox box, global::Sungero.CoreEntities.ICertificate certificate, global::System.Boolean isAgent)
      {
      global::Sungero.Domain.Shared.RemoteFunctionExecutor.Execute(
          global::System.Guid.Parse("cec41b99-da21-422f-9332-0fbc423e95c0"),
          "SendAnswers(global::System.Collections.Generic.List<global::Sungero.Docflow.IOfficialDocument>,global::Sungero.Parties.ICounterparty,global::Sungero.ExchangeCore.IBusinessUnitBox,global::Sungero.CoreEntities.ICertificate,global::System.Boolean)", documents, counterparty, box, certificate, isAgent);
      }
      /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
      internal static void SendAmendmentRequest(global::System.Collections.Generic.List<global::Sungero.Exchange.Structures.Module.ReglamentDocumentWithCertificate> signedDocuments, global::Sungero.Parties.ICounterparty receiver, global::Sungero.ExchangeCore.IBoxBase box, global::System.String note)
      {
      global::Sungero.Domain.Shared.RemoteFunctionExecutor.Execute(
          global::System.Guid.Parse("cec41b99-da21-422f-9332-0fbc423e95c0"),
          "SendAmendmentRequest(global::System.Collections.Generic.List<global::Sungero.Exchange.Structures.Module.ReglamentDocumentWithCertificate>,global::Sungero.Parties.ICounterparty,global::Sungero.ExchangeCore.IBoxBase,global::System.String)", signedDocuments, receiver, box, note);
      }
      /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
      internal static void SendDeliveryConfirmation(global::System.Collections.Generic.List<global::Sungero.Exchange.Structures.Module.ReglamentDocumentWithCertificate> signedDocuments, global::Sungero.ExchangeCore.IBusinessUnitBox box)
      {
      global::Sungero.Domain.Shared.RemoteFunctionExecutor.Execute(
          global::System.Guid.Parse("cec41b99-da21-422f-9332-0fbc423e95c0"),
          "SendDeliveryConfirmation(global::System.Collections.Generic.List<global::Sungero.Exchange.Structures.Module.ReglamentDocumentWithCertificate>,global::Sungero.ExchangeCore.IBusinessUnitBox)", signedDocuments, box);
      }
      /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
      internal static void SendDocuments(global::Sungero.Docflow.IOfficialDocument document, global::System.Collections.Generic.List<global::Sungero.Docflow.IOfficialDocument> addenda, global::Sungero.Parties.ICounterparty receiver, global::Sungero.ExchangeCore.IBusinessUnitBox box, global::Sungero.CoreEntities.ICertificate certificate, global::System.Boolean needSign, global::System.String comment)
      {
      global::Sungero.Domain.Shared.RemoteFunctionExecutor.Execute(
          global::System.Guid.Parse("cec41b99-da21-422f-9332-0fbc423e95c0"),
          "SendDocuments(global::Sungero.Docflow.IOfficialDocument,global::System.Collections.Generic.List<global::Sungero.Docflow.IOfficialDocument>,global::Sungero.Parties.ICounterparty,global::Sungero.ExchangeCore.IBusinessUnitBox,global::Sungero.CoreEntities.ICertificate,global::System.Boolean,global::System.String)", document, addenda, receiver, box, certificate, needSign, comment);
      }
      /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
      internal static global::System.Boolean HasUnsignedBuyerTitle(global::Sungero.Docflow.IAccountingDocumentBase statement)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::System.Boolean>(
          global::System.Guid.Parse("cec41b99-da21-422f-9332-0fbc423e95c0"),
          "HasUnsignedBuyerTitle(global::Sungero.Docflow.IAccountingDocumentBase)", statement);
      }
      /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
      internal static global::System.Collections.Generic.List<global::Sungero.Exchange.Structures.Module.ReglamentDocumentWithCertificate> GetGeneratedDeliveryConfirmationDocuments(global::System.Collections.Generic.List<global::Sungero.Exchange.IExchangeDocumentInfo> documentInfos, global::Sungero.ExchangeCore.IBusinessUnitBox box, global::Sungero.CoreEntities.ICertificate certificate, global::System.Boolean generateServiceDocuments)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::System.Collections.Generic.List<global::Sungero.Exchange.Structures.Module.ReglamentDocumentWithCertificate>>(
          global::System.Guid.Parse("cec41b99-da21-422f-9332-0fbc423e95c0"),
          "GetGeneratedDeliveryConfirmationDocuments(global::System.Collections.Generic.List<global::Sungero.Exchange.IExchangeDocumentInfo>,global::Sungero.ExchangeCore.IBusinessUnitBox,global::Sungero.CoreEntities.ICertificate,global::System.Boolean)", documentInfos, box, certificate, generateServiceDocuments);
      }
      /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
      internal static global::System.Collections.Generic.List<global::Sungero.Exchange.Structures.Module.ReglamentDocumentWithCertificate> GenerateAmendmentRequestDocuments(global::System.Collections.Generic.List<global::Sungero.Docflow.IOfficialDocument> documents, global::Sungero.ExchangeCore.IBoxBase box, global::System.String note, global::System.Boolean throwError, global::Sungero.CoreEntities.ICertificate certificate, global::System.Boolean isInvoiceAmendmentRequest)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::System.Collections.Generic.List<global::Sungero.Exchange.Structures.Module.ReglamentDocumentWithCertificate>>(
          global::System.Guid.Parse("cec41b99-da21-422f-9332-0fbc423e95c0"),
          "GenerateAmendmentRequestDocuments(global::System.Collections.Generic.List<global::Sungero.Docflow.IOfficialDocument>,global::Sungero.ExchangeCore.IBoxBase,global::System.String,global::System.Boolean,global::Sungero.CoreEntities.ICertificate,global::System.Boolean)", documents, box, note, throwError, certificate, isInvoiceAmendmentRequest);
      }
      /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
      internal static global::Sungero.Exchange.Structures.Module.SendToCounterpartyInfo GetInfoForSendToCounterparty(global::Sungero.Docflow.IOfficialDocument document)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::Sungero.Exchange.Structures.Module.SendToCounterpartyInfo>(
          global::System.Guid.Parse("cec41b99-da21-422f-9332-0fbc423e95c0"),
          "GetInfoForSendToCounterparty(global::Sungero.Docflow.IOfficialDocument)", document);
      }
      /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
      internal static global::Sungero.Exchange.Structures.Module.DocumentCertificatesInfo GetDocumentCertificatesToBox(global::Sungero.Docflow.IOfficialDocument document, global::Sungero.ExchangeCore.IBusinessUnitBox box)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::Sungero.Exchange.Structures.Module.DocumentCertificatesInfo>(
          global::System.Guid.Parse("cec41b99-da21-422f-9332-0fbc423e95c0"),
          "GetDocumentCertificatesToBox(global::Sungero.Docflow.IOfficialDocument,global::Sungero.ExchangeCore.IBusinessUnitBox)", document, box);
      }
      /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
      internal static global::System.Collections.Generic.List<global::Sungero.ExchangeCore.IBusinessUnitBox> GetConnectedExchangeBoxesToCounterparty(global::Sungero.Docflow.IOfficialDocument document, global::System.Collections.Generic.List<global::Sungero.Parties.ICounterparty> counterparties)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::System.Collections.Generic.List<global::Sungero.ExchangeCore.IBusinessUnitBox>>(
          global::System.Guid.Parse("cec41b99-da21-422f-9332-0fbc423e95c0"),
          "GetConnectedExchangeBoxesToCounterparty(global::Sungero.Docflow.IOfficialDocument,global::System.Collections.Generic.List<global::Sungero.Parties.ICounterparty>)", document, counterparties);
      }
      /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
      internal static global::System.Collections.Generic.List<global::Sungero.ExchangeCore.IBusinessUnitBox> GetAllExchangeBoxesToCounterparty(global::Sungero.Docflow.IOfficialDocument document, global::System.Collections.Generic.List<global::Sungero.Parties.ICounterparty> counterparties)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::System.Collections.Generic.List<global::Sungero.ExchangeCore.IBusinessUnitBox>>(
          global::System.Guid.Parse("cec41b99-da21-422f-9332-0fbc423e95c0"),
          "GetAllExchangeBoxesToCounterparty(global::Sungero.Docflow.IOfficialDocument,global::System.Collections.Generic.List<global::Sungero.Parties.ICounterparty>)", document, counterparties);
      }
      /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
      internal static global::System.Collections.Generic.List<global::Sungero.Exchange.IExchangeDocumentInfo> GetDocumentInfosWithoutReceiptNotificationPart(global::Sungero.ExchangeCore.IBusinessUnitBox box, global::System.Int32 skip, global::System.Int32 take, global::System.Boolean withoutGenerated)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::System.Collections.Generic.List<global::Sungero.Exchange.IExchangeDocumentInfo>>(
          global::System.Guid.Parse("cec41b99-da21-422f-9332-0fbc423e95c0"),
          "GetDocumentInfosWithoutReceiptNotificationPart(global::Sungero.ExchangeCore.IBusinessUnitBox,global::System.Int32,global::System.Int32,global::System.Boolean)", box, skip, take, withoutGenerated);
      }
      /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
      internal static global::System.Linq.IQueryable<global::Sungero.Content.IElectronicDocument> GetDocumentsWithoutReceiptNotification(global::Sungero.ExchangeCore.IBusinessUnitBox box)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::System.Linq.IQueryable<global::Sungero.Content.IElectronicDocument>>(
          global::System.Guid.Parse("cec41b99-da21-422f-9332-0fbc423e95c0"),
          "GetDocumentsWithoutReceiptNotification(global::Sungero.ExchangeCore.IBusinessUnitBox)", box);
      }
      /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
      internal static void FixReceiptNotification(global::Sungero.Exchange.IExchangeDocumentInfo info, global::System.String comment, global::System.Boolean sent)
      {
      global::Sungero.Domain.Shared.RemoteFunctionExecutor.Execute(
          global::System.Guid.Parse("cec41b99-da21-422f-9332-0fbc423e95c0"),
          "FixReceiptNotification(global::Sungero.Exchange.IExchangeDocumentInfo,global::System.String,global::System.Boolean)", info, comment, sent);
      }
      /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
      internal static void FixReceiptNotification(global::System.Collections.Generic.List<global::Sungero.Exchange.IExchangeDocumentInfo> documentInfos, global::System.String comment, global::System.Boolean sent)
      {
      global::Sungero.Domain.Shared.RemoteFunctionExecutor.Execute(
          global::System.Guid.Parse("cec41b99-da21-422f-9332-0fbc423e95c0"),
          "FixReceiptNotification(global::System.Collections.Generic.List<global::Sungero.Exchange.IExchangeDocumentInfo>,global::System.String,global::System.Boolean)", documentInfos, comment, sent);
      }
      /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
      internal static global::Sungero.Exchange.IReceiptNotificationSendingTask CreateReceiptNotificationSendingTask(global::Sungero.ExchangeCore.IBusinessUnitBox box)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::Sungero.Exchange.IReceiptNotificationSendingTask>(
          global::System.Guid.Parse("cec41b99-da21-422f-9332-0fbc423e95c0"),
          "CreateReceiptNotificationSendingTask(global::Sungero.ExchangeCore.IBusinessUnitBox)", box);
      }
      /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
      internal static void SaveDeliveryConfirmationSigns(global::System.Collections.Generic.List<global::Sungero.Exchange.Structures.Module.ReglamentDocumentWithCertificate> documentsToSign)
      {
      global::Sungero.Domain.Shared.RemoteFunctionExecutor.Execute(
          global::System.Guid.Parse("cec41b99-da21-422f-9332-0fbc423e95c0"),
          "SaveDeliveryConfirmationSigns(global::System.Collections.Generic.List<global::Sungero.Exchange.Structures.Module.ReglamentDocumentWithCertificate>)", documentsToSign);
      }
      /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
      internal static global::System.Boolean IsJobEnabled(global::System.String id)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::System.Boolean>(
          global::System.Guid.Parse("cec41b99-da21-422f-9332-0fbc423e95c0"),
          "IsJobEnabled(global::System.String)", id);
      }
      /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
      internal static void RequeueMessagesGet()
      {
      global::Sungero.Domain.Shared.RemoteFunctionExecutor.Execute(
          global::System.Guid.Parse("cec41b99-da21-422f-9332-0fbc423e95c0"),
          "RequeueMessagesGet()");
      }
      /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
      internal static void RequeueBodyConverterJob()
      {
      global::Sungero.Domain.Shared.RemoteFunctionExecutor.Execute(
          global::System.Guid.Parse("cec41b99-da21-422f-9332-0fbc423e95c0"),
          "RequeueBodyConverterJob()");
      }
      /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
      internal static void RequeueGenerateServiceDocuments()
      {
      global::Sungero.Domain.Shared.RemoteFunctionExecutor.Execute(
          global::System.Guid.Parse("cec41b99-da21-422f-9332-0fbc423e95c0"),
          "RequeueGenerateServiceDocuments()");
      }
      /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
      internal static void RequeueSendSignedReceiptNotifications()
      {
      global::Sungero.Domain.Shared.RemoteFunctionExecutor.Execute(
          global::System.Guid.Parse("cec41b99-da21-422f-9332-0fbc423e95c0"),
          "RequeueSendSignedReceiptNotifications()");
      }

    }
    private static object GetFunctionsContainer()
    {
      return new global::Sungero.Exchange.Client.ModuleFunctions();
    }

    private static object GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType projectType)
    {
      var moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(moduleId));
      var assemblyName = finalModuleMetadatda.GetAssemblyName(projectType);
      var moduleFunctionsType = global::System.Type.GetType(global::System.String.Format("{0}.{1}, {2}", finalModuleMetadatda.FunctionNamespace, "Module", assemblyName));
      return moduleFunctionsType.GetMethod("GetFunctionsContainer", global::System.Reflection.BindingFlags.NonPublic | global::System.Reflection.BindingFlags.Static).Invoke(null, null);
    }
  }
}

// ==================================================================
// ModuleClientPublicFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Exchange.Client
{
  public partial class ModuleClientPublicFunctions : global::Sungero.Exchange.Client.IModuleClientPublicFunctions
  {
    public global::Sungero.CoreEntities.ICertificate GetUserExchangeCertificate(global::Sungero.ExchangeCore.IBoxBase box, global::Sungero.Company.IEmployee employee)
    {
      return global::Sungero.Exchange.Functions.Module.GetUserExchangeCertificate(box, employee);
    }
    public global::System.String SendAmendmentRequest(global::System.Collections.Generic.List<global::Sungero.Docflow.IOfficialDocument> documents, global::Sungero.Parties.ICounterparty receiver, global::System.String note, global::System.Boolean throwError, global::Sungero.ExchangeCore.IBoxBase box, global::Sungero.CoreEntities.ICertificate certificate, global::System.Boolean isInvoiceAmendmentRequest)
    {
      return global::Sungero.Exchange.Functions.Module.SendAmendmentRequest(documents, receiver, note, throwError, box, certificate, isInvoiceAmendmentRequest);
    }
    public global::System.String SendDeliveryConfirmation(global::Sungero.ExchangeCore.IBoxBase box, global::Sungero.CoreEntities.ICertificate certificate, global::System.Boolean bulkMode)
    {
      return global::Sungero.Exchange.Functions.Module.SendDeliveryConfirmation(box, certificate, bulkMode);
    }
    public void SendResultToCounterparty(global::Sungero.Docflow.IOfficialDocument document)
    {
global::Sungero.Exchange.Functions.Module.SendResultToCounterparty(document);
    }
    public void SendResultToCounterparty(global::Sungero.Docflow.IOfficialDocument document, global::Sungero.ExchangeCore.IExchangeService service, global::System.Collections.Generic.List<global::Sungero.Docflow.IOfficialDocument> addenda)
    {
global::Sungero.Exchange.Functions.Module.SendResultToCounterparty(document, service, addenda);
    }
    public void SignAndSendDeliveryConfirmation()
    {
global::Sungero.Exchange.Functions.Module.SignAndSendDeliveryConfirmation();
    }
  }
}

// ==================================================================
// ModuleWidgetHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Exchange.Client
{
}

// ==================================================================
// ModuleHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Exchange.Client
{

}

