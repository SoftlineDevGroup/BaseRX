
// ==================================================================
// ReceiptNotificationSendingTask.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Exchange.Client
{
  public class ReceiptNotificationSendingTask :
    global::Sungero.Workflow.Client.Task, global::Sungero.Exchange.IReceiptNotificationSendingTask
  {
    #region Fields and properties

    public static new readonly global::System.Guid ClassTypeGuid = global::System.Guid.Parse("490e66a0-8618-4eb9-aab8-2dbc8a884d98");

    public override global::System.Guid TypeGuid
    {
      get { return global::Sungero.Exchange.Client.ReceiptNotificationSendingTask.ClassTypeGuid; }
    }

    public override string TypeName
    {
      get { return "Sungero.Exchange.IReceiptNotificationSendingTask, Sungero.Domain.Interfaces"; }
    }

      public override string DisplayValue
      {
        get { return this.Subject; }
        set { this.Subject = value; }
      }

      public override string DisplayPropertyName
      {
        get { return "Subject"; }
      }


    public new global::Sungero.Exchange.IReceiptNotificationSendingTaskState State
    {
      get
      {
        return (global::Sungero.Exchange.IReceiptNotificationSendingTaskState)base.State;
      }
    }

    protected override global::Sungero.Domain.Shared.IEntityState CreateState()
    {
      return new global::Sungero.Exchange.Shared.ReceiptNotificationSendingTaskState(this);
    }

    public new global::Sungero.Exchange.IReceiptNotificationSendingTaskInfo Info
    {
      get
      {
        return (global::Sungero.Exchange.IReceiptNotificationSendingTaskInfo)base.Info;
      }
    }

    public new global::Sungero.Exchange.IReceiptNotificationSendingTaskAccessRights AccessRights
    {
      get
      {
        return (global::Sungero.Exchange.IReceiptNotificationSendingTaskAccessRights)base.AccessRights;
      }
    }

    protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
    {
      return new global::Sungero.Exchange.Client.ReceiptNotificationSendingTaskAccessRights(this);
    }




              protected global::Sungero.Domain.Client.INavigationProperty<global::Sungero.ExchangeCore.IBusinessUnitBox> _Box;

              public virtual global::Sungero.ExchangeCore.IBusinessUnitBox Box
              {
              get
              {
                return this._Box.Value as global::Sungero.ExchangeCore.IBusinessUnitBox;
              }

              set
              {
                (this._Box as global::Sungero.Domain.Client.IProperty).Value = value;
              }
            }



              protected global::Sungero.Domain.Client.INavigationProperty<global::Sungero.Company.IEmployee> _Addressee;

              public virtual global::Sungero.Company.IEmployee Addressee
              {
              get
              {
                return this._Addressee.Value as global::Sungero.Company.IEmployee;
              }

              set
              {
                (this._Addressee as global::Sungero.Domain.Client.IProperty).Value = value;
              }
            }










    #endregion

    #region Methods

    protected override object CreateActionsHandlers()
    {
      return new global::Sungero.Exchange.Client.ReceiptNotificationSendingTaskActions(this);
    }

    protected override object CreateCollectionActionsHandlers()
    {
      return new global::Sungero.Exchange.Client.ReceiptNotificationSendingTaskCollectionActions();
    }

    protected override object CreateAnyChildEntityActionsHandlers()
    {
      return new global::Sungero.Exchange.Client.ReceiptNotificationSendingTaskAnyChildEntityActions();
    }

    protected override object CreateAnyChildEntityCollectionActionsHandlers()
    {
      return new global::Sungero.Exchange.Client.ReceiptNotificationSendingTaskAnyChildEntityCollectionActions();
    }


    protected override global::Sungero.Domain.Client.EntityFunctions CreateClientFunctions()
    {
      return new global::Sungero.Exchange.Client.ReceiptNotificationSendingTaskFunctions(this);
    }

    protected override global::Sungero.Domain.Shared.EntityFunctions CreateSharedFunctions()
    {
      return new global::Sungero.Exchange.Shared.ReceiptNotificationSendingTaskFunctions(this);
    }
    protected override object CreateHandlers() {
      return new global::Sungero.Exchange.ReceiptNotificationSendingTaskClientHandlers(this);
    }
    protected override object CreateSharedHandlers() {
      return new global::Sungero.Exchange.ReceiptNotificationSendingTaskSharedHandlers(this);
    }

    #endregion

    #region Framework events

    protected void BoxChangedHandler()
    {
      var args = new global::Sungero.Exchange.Shared.ReceiptNotificationSendingTaskBoxChangedEventArgs(this.State.Properties.Box, this.Box, this);
     ((global::Sungero.Exchange.ReceiptNotificationSendingTaskSharedHandlers)this.SharedHandlers).BoxChanged(args);
    }


    protected void AddresseeChangedHandler()
    {
      var args = new global::Sungero.Exchange.Shared.ReceiptNotificationSendingTaskAddresseeChangedEventArgs(this.State.Properties.Addressee, this.Addressee, this);
     ((global::Sungero.Exchange.ReceiptNotificationSendingTaskSharedHandlers)this.SharedHandlers).AddresseeChanged(args);
    }




  protected global::Sungero.ExchangeCore.IBusinessUnitBox BoxValueInputHandler(global::Sungero.ExchangeCore.IBusinessUnitBox value)
  {
    var args = new global::Sungero.Exchange.Client.ReceiptNotificationSendingTaskBoxValueInputEventArgs(this.Box, value, this, this.Info.Properties.Box);
    ((global::Sungero.Exchange.ReceiptNotificationSendingTaskClientHandlers)this.Handlers).BoxValueInput(args);
    return args.NewValue;
  }


  protected global::Sungero.Company.IEmployee AddresseeValueInputHandler(global::Sungero.Company.IEmployee value)
  {
    var args = new global::Sungero.Exchange.Client.ReceiptNotificationSendingTaskAddresseeValueInputEventArgs(this.Addressee, value, this, this.Info.Properties.Addressee);
    ((global::Sungero.Exchange.ReceiptNotificationSendingTaskClientHandlers)this.Handlers).AddresseeValueInput(args);
    return args.NewValue;
  }



    #endregion

    #region Constructors








              protected virtual void InitBoxNavigationProperty()
              {
                this._Box = new global::Sungero.Domain.Client.NavigationProperty<global::Sungero.ExchangeCore.IBusinessUnitBox>("Box", this);
                this._Box.ValueChanged += (sender, e) => { this.BoxChangedHandler(); };
                this.AddProperty(this._Box as global::Sungero.Domain.Client.IProperty);
              }




              protected virtual void InitAddresseeNavigationProperty()
              {
                this._Addressee = new global::Sungero.Domain.Client.NavigationProperty<global::Sungero.Company.IEmployee>("Addressee", this);
                this._Addressee.ValueChanged += (sender, e) => { this.AddresseeChangedHandler(); };
                this.AddProperty(this._Addressee as global::Sungero.Domain.Client.IProperty);
              }



            protected override void InitObserversCollectionProperty()
            {
              this._Observers = new global::Sungero.Domain.Client.ListProperty<global::Sungero.Exchange.IReceiptNotificationSendingTaskObservers>("Observers", this);
              this._Observers.ValueChanged += (sender, e) => { this.ObserversChangedHandler(); };
              this.AddProperty((global::Sungero.Domain.Client.IProperty)this._Observers);
              this.SetObserversEventHandlers();
            }


    public ReceiptNotificationSendingTask()
    {

            this.InitBoxNavigationProperty();

            this.InitAddresseeNavigationProperty();








      ((global::Sungero.Workflow.Interfaces.IWorkflowEntity)this).AttachmentCreated += this.AttachmentCreatedHandler;
      ((global::Sungero.Workflow.Interfaces.IWorkflowEntity)this).AttachmentAdded += this.AttachmentAddedHandler;
      ((global::Sungero.Workflow.Interfaces.IWorkflowEntity)this).AttachmentDeleted += this.AttachmentDeletedHandler;


    }

    #endregion

    #region Workflow attachments

    private void AttachmentCreatedHandler(object sender, global::Sungero.Workflow.Interfaces.AttachmentCreatedEventArgs e)
    {
    }

    private void AttachmentAddedHandler(object sender, global::Sungero.Workflow.Interfaces.AttachmentAddedEventArgs e)
    {
    }

    private void AttachmentDeletedHandler(object sender, global::Sungero.Workflow.Interfaces.AttachmentDeletedEventArgs e)
    {
    }
    #endregion

  }
}

// ==================================================================
// ReceiptNotificationSendingTaskPresenter.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Exchange.Client
{
  public class ReceiptNotificationSendingTaskPresenter<T> :
    global::Sungero.Workflow.Client.TaskPresenter<T>
    where T : class, global::Sungero.Exchange.IReceiptNotificationSendingTask
  {
    #region Fields and properties




    #endregion

    #region Methods

    #endregion

    #region Framework events

    protected override void EntityPropertyChangedEventHandler(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
    {
      base.EntityPropertyChangedEventHandler(sender, e);
    }

    #endregion

              protected global::Sungero.Domain.Client.IEntityCollectionPresenter _BoxCollectionPresenter;
              public global::Sungero.Domain.Client.IEntityCollectionPresenter BoxCollectionPresenter
              {
          get { return this._BoxCollectionPresenter; }
        }
              protected global::Sungero.Domain.Client.IEntityCollectionPresenter _AddresseeCollectionPresenter;
              public global::Sungero.Domain.Client.IEntityCollectionPresenter AddresseeCollectionPresenter
              {
          get { return this._AddresseeCollectionPresenter; }
        }



    #region Constructors

    private void Init()
    {
              this._StartedByCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.CoreEntities.IUser>(() => this.Entity.Id, typeof(T), "StartedBy");

              this._ParentTaskCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Workflow.ITask>(() => this.Entity.Id, typeof(T), "ParentTask");

              this._ParentAssignmentCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Workflow.IAssignmentBase>(() => this.Entity.Id, typeof(T), "ParentAssignment");

              this._MainTaskCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Workflow.ITask>(() => this.Entity.Id, typeof(T), "MainTask");

              this._AuthorCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationProperty<global::Sungero.CoreEntities.IUser>(() => this.Entity, typeof(T), "Author");

                  this._BoxCollectionPresenter = this.CreateCollectionPresenterForNavigationProperty<global::Sungero.ExchangeCore.IBusinessUnitBox>(global::System.Guid.Parse("c7f01495-e6f8-4194-b4e2-b1e831fbd4c5"));
              this._BoxCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.ExchangeCore.IBusinessUnitBox>(() => this.Entity.Id, typeof(T), "Box");

                  this._AddresseeCollectionPresenter = this.CreateCollectionPresenterForNavigationProperty<global::Sungero.Company.IEmployee>(global::System.Guid.Parse("dba5f131-53c7-44b8-a561-fc8d19cd5952"));
              this._AddresseeCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Company.IEmployee>(() => this.Entity.Id, typeof(T), "Addressee");


                        this._ObserversObserverCollectionPresenter
                        .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.CoreEntities.IRecipient>(() => this.Entity.Id, typeof(Sungero.Exchange.IReceiptNotificationSendingTaskObservers), "Observer");



    }

    public ReceiptNotificationSendingTaskPresenter()
    {
      this.Init();
    }

    #endregion
  }
}

// ==================================================================
// ReceiptNotificationSendingTaskCollectionPresenter.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Exchange.Client
{
  public class ReceiptNotificationSendingTaskCollectionPresenter<T> : 
    global::Sungero.Workflow.Client.TaskCollectionPresenter<T>
    where T: class, global::Sungero.Exchange.IReceiptNotificationSendingTask
  {
    #region Actions



    #endregion

    #region Methods


    #endregion

    public ReceiptNotificationSendingTaskCollectionPresenter(global::System.Linq.IQueryable<T> query, OnLookup onLookup)
      : base(query, onLookup)
    {
    }

    public ReceiptNotificationSendingTaskCollectionPresenter(global::System.Linq.IQueryable<T> query)
      : this(query, null) { }

    public ReceiptNotificationSendingTaskCollectionPresenter(OnLookup onLookup)
      : this(null, onLookup) { }

    public ReceiptNotificationSendingTaskCollectionPresenter()
      : this(null, null) { }
  }
}

// ==================================================================
// ReceiptNotificationSendingTaskRepositoryImplementer.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Exchange.Client
{ 
  public class ReceiptNotificationSendingTaskRepositoryImplementer<T> : 
      global::Sungero.Workflow.Client.TaskRepositoryImplementer<T>,
      global::Sungero.Exchange.IReceiptNotificationSendingTaskRepositoryImplementer<T>
      where T : global::Sungero.Exchange.IReceiptNotificationSendingTask
    {
       public new global::Sungero.Exchange.IReceiptNotificationSendingTaskAccessRights AccessRights
       {
          get { return (global::Sungero.Exchange.IReceiptNotificationSendingTaskAccessRights)base.AccessRights; }
       }

       public new global::Sungero.Exchange.IReceiptNotificationSendingTaskInfo Info
       {
          get { return (global::Sungero.Exchange.IReceiptNotificationSendingTaskInfo)base.Info; }
       }

       protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
       {
         return new global::Sungero.Exchange.Client.ReceiptNotificationSendingTaskTypeAccessRights(typeof(T));
       }
    }
}

// ==================================================================
// ReceiptNotificationSendingTaskAccessRights.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Exchange.Client
{
  public class ReceiptNotificationSendingTaskAccessRights : 
    Sungero.Workflow.Client.TaskAccessRights, Sungero.Exchange.IReceiptNotificationSendingTaskAccessRights
  {

    public ReceiptNotificationSendingTaskAccessRights(global::Sungero.Domain.Shared.IEntity entity) : base(entity)
    {
    }
  }

  public class ReceiptNotificationSendingTaskTypeAccessRights : 
    Sungero.Workflow.Client.TaskTypeAccessRights, Sungero.Exchange.IReceiptNotificationSendingTaskAccessRights
  {

    public ReceiptNotificationSendingTaskTypeAccessRights(global::System.Type entityType) : base(entityType)
    {
    }
  }
}
