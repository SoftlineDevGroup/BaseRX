
// ==================================================================
// ExchangeDocumentInfo.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Exchange.Client
{
  public class ExchangeDocumentInfo :
    global::Sungero.CoreEntities.Client.DatabookEntry, global::Sungero.Exchange.IExchangeDocumentInfo
  {
    #region Fields and properties

    public static new readonly global::System.Guid ClassTypeGuid = global::System.Guid.Parse("ee04eb99-cc71-4a97-b532-fd05b31cf7b2");

    public override global::System.Guid TypeGuid
    {
      get { return global::Sungero.Exchange.Client.ExchangeDocumentInfo.ClassTypeGuid; }
    }

    public override string TypeName
    {
      get { return "Sungero.Exchange.IExchangeDocumentInfo, Sungero.Domain.Interfaces"; }
    }

      public override string DisplayValue
      {
        get { return this.Name; }
        set { this.Name = value; }
      }

      public override string DisplayPropertyName
      {
        get { return "Name"; }
      }


    public new global::Sungero.Exchange.IExchangeDocumentInfoState State
    {
      get
      {
        return (global::Sungero.Exchange.IExchangeDocumentInfoState)base.State;
      }
    }

    protected override global::Sungero.Domain.Shared.IEntityState CreateState()
    {
      return new global::Sungero.Exchange.Shared.ExchangeDocumentInfoState(this);
    }

    public new global::Sungero.Exchange.IExchangeDocumentInfoInfo Info
    {
      get
      {
        return (global::Sungero.Exchange.IExchangeDocumentInfoInfo)base.Info;
      }
    }

    public new global::Sungero.Exchange.IExchangeDocumentInfoAccessRights AccessRights
    {
      get
      {
        return (global::Sungero.Exchange.IExchangeDocumentInfoAccessRights)base.AccessRights;
      }
    }

    protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
    {
      return new global::Sungero.Exchange.Client.ExchangeDocumentInfoAccessRights(this);
    }

        protected global::Sungero.Domain.Client.SimpleProperty<global::System.String> _Name;

        public virtual global::System.String Name
        {
          get { return this._Name.Value; }
          set { this._Name.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.String> _ServiceDocumentId;

        public virtual global::System.String ServiceDocumentId
        {
          get { return this._ServiceDocumentId.Value; }
          set { this._ServiceDocumentId.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.Int32?> _VersionId;

        public virtual global::System.Int32? VersionId
        {
          get { return this._VersionId.Value; }
          set { this._VersionId.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.String> _ServiceMessageId;

        public virtual global::System.String ServiceMessageId
        {
          get { return this._ServiceMessageId.Value; }
          set { this._ServiceMessageId.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.Boolean?> _NeedSign;

        public virtual global::System.Boolean? NeedSign
        {
          get { return this._NeedSign.Value; }
          set { this._NeedSign.Value = value; }
        }
        protected global::Sungero.Domain.Client.EnumSimpleProperty<global::Sungero.Core.Enumeration?> _MessageType;

        public virtual global::Sungero.Core.Enumeration? MessageType
        {
          get { return this._MessageType.Value; }
          set { this._MessageType.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.DateTime?> _MessageDate;

        public virtual global::System.DateTime? MessageDate
        {
          get { return this._MessageDate.Value; }
          set { this._MessageDate.Value = value; }
        }
        protected global::Sungero.Domain.Client.EnumSimpleProperty<global::Sungero.Core.Enumeration?> _RevocationStatus;

        public virtual global::Sungero.Core.Enumeration? RevocationStatus
        {
          get { return this._RevocationStatus.Value; }
          set { this._RevocationStatus.Value = value; }
        }
        protected global::Sungero.Domain.Client.EnumSimpleProperty<global::Sungero.Core.Enumeration?> _OutgoingStatus;

        public virtual global::Sungero.Core.Enumeration? OutgoingStatus
        {
          get { return this._OutgoingStatus.Value; }
          set { this._OutgoingStatus.Value = value; }
        }
        protected global::Sungero.Domain.Client.EnumSimpleProperty<global::Sungero.Core.Enumeration?> _ExchangeState;

        public virtual global::Sungero.Core.Enumeration? ExchangeState
        {
          get { return this._ExchangeState.Value; }
          set { this._ExchangeState.Value = value; }
        }
        protected global::Sungero.Domain.Client.EnumSimpleProperty<global::Sungero.Core.Enumeration?> _InvoiceState;

        public virtual global::Sungero.Core.Enumeration? InvoiceState
        {
          get { return this._InvoiceState.Value; }
          set { this._InvoiceState.Value = value; }
        }
        protected global::Sungero.Domain.Client.EnumSimpleProperty<global::Sungero.Core.Enumeration?> _DeliveryConfirmationStatus;

        public virtual global::Sungero.Core.Enumeration? DeliveryConfirmationStatus
        {
          get { return this._DeliveryConfirmationStatus.Value; }
          set { this._DeliveryConfirmationStatus.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.String> _ServiceCounterpartyId;

        public virtual global::System.String ServiceCounterpartyId
        {
          get { return this._ServiceCounterpartyId.Value; }
          set { this._ServiceCounterpartyId.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.Int32?> _ReceiverSignId;

        public virtual global::System.Int32? ReceiverSignId
        {
          get { return this._ReceiverSignId.Value; }
          set { this._ReceiverSignId.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.Int32?> _SenderSignId;

        public virtual global::System.Int32? SenderSignId
        {
          get { return this._SenderSignId.Value; }
          set { this._SenderSignId.Value = value; }
        }


        private static global::Sungero.Domain.Shared.EnumerationItems _MessageTypeItems = new global::Sungero.Domain.Shared.EnumerationItems(
          null,
          typeof(global::Sungero.Exchange.ExchangeDocumentInfo.MessageType),
          typeof(global::Sungero.Exchange.Client.ExchangeDocumentInfo),
          "MessageType");

        public static global::Sungero.Domain.Shared.EnumerationItems MessageTypeItems
        {
          get { return global::Sungero.Exchange.Client.ExchangeDocumentInfo._MessageTypeItems; }
        }

        public virtual global::Sungero.Domain.Shared.EnumerationItems MessageTypeAllowedItems
        {
          get { return global::Sungero.Exchange.Client.ExchangeDocumentInfo.MessageTypeItems; }
        }

        private static global::Sungero.Domain.Shared.EnumerationItems _RevocationStatusItems = new global::Sungero.Domain.Shared.EnumerationItems(
          null,
          typeof(global::Sungero.Exchange.ExchangeDocumentInfo.RevocationStatus),
          typeof(global::Sungero.Exchange.Client.ExchangeDocumentInfo),
          "RevocationStatus");

        public static global::Sungero.Domain.Shared.EnumerationItems RevocationStatusItems
        {
          get { return global::Sungero.Exchange.Client.ExchangeDocumentInfo._RevocationStatusItems; }
        }

        public virtual global::Sungero.Domain.Shared.EnumerationItems RevocationStatusAllowedItems
        {
          get { return global::Sungero.Exchange.Client.ExchangeDocumentInfo.RevocationStatusItems; }
        }

        private static global::Sungero.Domain.Shared.EnumerationItems _OutgoingStatusItems = new global::Sungero.Domain.Shared.EnumerationItems(
          null,
          typeof(global::Sungero.Exchange.ExchangeDocumentInfo.OutgoingStatus),
          typeof(global::Sungero.Exchange.Client.ExchangeDocumentInfo),
          "OutgoingStatus");

        public static global::Sungero.Domain.Shared.EnumerationItems OutgoingStatusItems
        {
          get { return global::Sungero.Exchange.Client.ExchangeDocumentInfo._OutgoingStatusItems; }
        }

        public virtual global::Sungero.Domain.Shared.EnumerationItems OutgoingStatusAllowedItems
        {
          get { return global::Sungero.Exchange.Client.ExchangeDocumentInfo.OutgoingStatusItems; }
        }

        private static global::Sungero.Domain.Shared.EnumerationItems _ExchangeStateItems = new global::Sungero.Domain.Shared.EnumerationItems(
          null,
          typeof(global::Sungero.Exchange.ExchangeDocumentInfo.ExchangeState),
          typeof(global::Sungero.Exchange.Client.ExchangeDocumentInfo),
          "ExchangeState");

        public static global::Sungero.Domain.Shared.EnumerationItems ExchangeStateItems
        {
          get { return global::Sungero.Exchange.Client.ExchangeDocumentInfo._ExchangeStateItems; }
        }

        public virtual global::Sungero.Domain.Shared.EnumerationItems ExchangeStateAllowedItems
        {
          get { return global::Sungero.Exchange.Client.ExchangeDocumentInfo.ExchangeStateItems; }
        }

        private static global::Sungero.Domain.Shared.EnumerationItems _InvoiceStateItems = new global::Sungero.Domain.Shared.EnumerationItems(
          null,
          typeof(global::Sungero.Exchange.ExchangeDocumentInfo.InvoiceState),
          typeof(global::Sungero.Exchange.Client.ExchangeDocumentInfo),
          "InvoiceState");

        public static global::Sungero.Domain.Shared.EnumerationItems InvoiceStateItems
        {
          get { return global::Sungero.Exchange.Client.ExchangeDocumentInfo._InvoiceStateItems; }
        }

        public virtual global::Sungero.Domain.Shared.EnumerationItems InvoiceStateAllowedItems
        {
          get { return global::Sungero.Exchange.Client.ExchangeDocumentInfo.InvoiceStateItems; }
        }

        private static global::Sungero.Domain.Shared.EnumerationItems _DeliveryConfirmationStatusItems = new global::Sungero.Domain.Shared.EnumerationItems(
          null,
          typeof(global::Sungero.Exchange.ExchangeDocumentInfo.DeliveryConfirmationStatus),
          typeof(global::Sungero.Exchange.Client.ExchangeDocumentInfo),
          "DeliveryConfirmationStatus");

        public static global::Sungero.Domain.Shared.EnumerationItems DeliveryConfirmationStatusItems
        {
          get { return global::Sungero.Exchange.Client.ExchangeDocumentInfo._DeliveryConfirmationStatusItems; }
        }

        public virtual global::Sungero.Domain.Shared.EnumerationItems DeliveryConfirmationStatusAllowedItems
        {
          get { return global::Sungero.Exchange.Client.ExchangeDocumentInfo.DeliveryConfirmationStatusItems; }
        }




              protected global::Sungero.Domain.Client.INavigationProperty<global::Sungero.Docflow.IOfficialDocument> _Document;

              public virtual global::Sungero.Docflow.IOfficialDocument Document
              {
              get
              {
                return this._Document.Value as global::Sungero.Docflow.IOfficialDocument;
              }

              set
              {
                (this._Document as global::Sungero.Domain.Client.IProperty).Value = value;
              }
            }



              protected global::Sungero.Domain.Client.INavigationProperty<global::Sungero.ExchangeCore.IBoxBase> _Box;

              public virtual global::Sungero.ExchangeCore.IBoxBase Box
              {
              get
              {
                return this._Box.Value as global::Sungero.ExchangeCore.IBoxBase;
              }

              set
              {
                (this._Box as global::Sungero.Domain.Client.IProperty).Value = value;
              }
            }



              protected global::Sungero.Domain.Client.INavigationProperty<global::Sungero.Parties.ICounterparty> _Counterparty;

              public virtual global::Sungero.Parties.ICounterparty Counterparty
              {
              get
              {
                return this._Counterparty.Value as global::Sungero.Parties.ICounterparty;
              }

              set
              {
                (this._Counterparty as global::Sungero.Domain.Client.IProperty).Value = value;
              }
            }



              protected global::Sungero.Domain.Client.INavigationProperty<global::Sungero.Workflow.ITask> _RevocationTask;

              public virtual global::Sungero.Workflow.ITask RevocationTask
              {
              get
              {
                return this._RevocationTask.Value as global::Sungero.Workflow.ITask;
              }

              set
              {
                (this._RevocationTask as global::Sungero.Domain.Client.IProperty).Value = value;
              }
            }



              protected global::Sungero.Domain.Client.INavigationProperty<global::Sungero.ExchangeCore.IBusinessUnitBox> _RootBox;

              public virtual global::Sungero.ExchangeCore.IBusinessUnitBox RootBox
              {
              get
              {
                return this._RootBox.Value as global::Sungero.ExchangeCore.IBusinessUnitBox;
              }

              set
              {
                (this._RootBox as global::Sungero.Domain.Client.IProperty).Value = value;
              }
            }







          protected global::Sungero.Domain.Client.IListProperty<global::Sungero.Exchange.IExchangeDocumentInfoServiceDocuments> _ServiceDocuments;

          virtual public global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Exchange.IExchangeDocumentInfoServiceDocuments> ServiceDocuments
          {
            get { return this._ServiceDocuments.Value; }
          }






    private object _ServiceDocumentsActionsHandlers;

    public object ServiceDocumentsActionsHandlers
    {
      get
      {
        if (this._ServiceDocumentsActionsHandlers == null)
          this._ServiceDocumentsActionsHandlers = this.CreateServiceDocumentsActionsHandlers();
        return this._ServiceDocumentsActionsHandlers;
      }
    }

    private object _ServiceDocumentsCollectionActionsHandlers;

    public object ServiceDocumentsCollectionActionsHandlers
    {
      get
      {
        if (this._ServiceDocumentsCollectionActionsHandlers == null)
          this._ServiceDocumentsCollectionActionsHandlers = this.CreateServiceDocumentsCollectionActionsHandlers();
        return this._ServiceDocumentsCollectionActionsHandlers;
      }
    }

    #endregion

    #region Methods

    protected override object CreateActionsHandlers()
    {
      return new global::Sungero.Exchange.Client.ExchangeDocumentInfoActions(this);
    }

    protected override object CreateCollectionActionsHandlers()
    {
      return new global::Sungero.Exchange.Client.ExchangeDocumentInfoCollectionActions();
    }

    protected override object CreateAnyChildEntityActionsHandlers()
    {
      return new global::Sungero.Exchange.Client.ExchangeDocumentInfoAnyChildEntityActions();
    }

    protected override object CreateAnyChildEntityCollectionActionsHandlers()
    {
      return new global::Sungero.Exchange.Client.ExchangeDocumentInfoAnyChildEntityCollectionActions();
    }

    protected object CreateServiceDocumentsActionsHandlers()
    {
      return null;
    }

    protected object CreateServiceDocumentsCollectionActionsHandlers()
    {
      return null;
    }


    protected override global::Sungero.Domain.Client.EntityFunctions CreateClientFunctions()
    {
      return new global::Sungero.Exchange.Client.ExchangeDocumentInfoFunctions(this);
    }

    protected override global::Sungero.Domain.Shared.EntityFunctions CreateSharedFunctions()
    {
      return new global::Sungero.Exchange.Shared.ExchangeDocumentInfoFunctions(this);
    }
    protected override object CreateHandlers() {
      return new global::Sungero.Exchange.ExchangeDocumentInfoClientHandlers(this);
    }
    protected override object CreateSharedHandlers() {
      return new global::Sungero.Exchange.ExchangeDocumentInfoSharedHandlers(this);
    }

    #endregion

    #region Framework events

    protected void NameChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.Name, this.Name, this);
     ((global::Sungero.Exchange.ExchangeDocumentInfoSharedHandlers)this.SharedHandlers).NameChanged(args);
    }

    protected void DocumentChangedHandler()
    {
      var args = new global::Sungero.Exchange.Shared.ExchangeDocumentInfoDocumentChangedEventArgs(this.State.Properties.Document, this.Document, this);
     ((global::Sungero.Exchange.ExchangeDocumentInfoSharedHandlers)this.SharedHandlers).DocumentChanged(args);
    }

    protected void BoxChangedHandler()
    {
      var args = new global::Sungero.Exchange.Shared.ExchangeDocumentInfoBoxChangedEventArgs(this.State.Properties.Box, this.Box, this);
     ((global::Sungero.Exchange.ExchangeDocumentInfoSharedHandlers)this.SharedHandlers).BoxChanged(args);
    }

    protected void ServiceDocumentIdChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.ServiceDocumentId, this.ServiceDocumentId, this);
     ((global::Sungero.Exchange.ExchangeDocumentInfoSharedHandlers)this.SharedHandlers).ServiceDocumentIdChanged(args);
    }

    protected void VersionIdChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.IntegerPropertyChangedEventArgs(this.State.Properties.VersionId, this.VersionId, this);
     ((global::Sungero.Exchange.ExchangeDocumentInfoSharedHandlers)this.SharedHandlers).VersionIdChanged(args);
    }

    protected void ServiceMessageIdChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.ServiceMessageId, this.ServiceMessageId, this);
     ((global::Sungero.Exchange.ExchangeDocumentInfoSharedHandlers)this.SharedHandlers).ServiceMessageIdChanged(args);
    }

    protected void CounterpartyChangedHandler()
    {
      var args = new global::Sungero.Exchange.Shared.ExchangeDocumentInfoCounterpartyChangedEventArgs(this.State.Properties.Counterparty, this.Counterparty, this);
     ((global::Sungero.Exchange.ExchangeDocumentInfoSharedHandlers)this.SharedHandlers).CounterpartyChanged(args);
    }

    protected void NeedSignChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.BooleanPropertyChangedEventArgs(this.State.Properties.NeedSign, this.NeedSign, this);
     ((global::Sungero.Exchange.ExchangeDocumentInfoSharedHandlers)this.SharedHandlers).NeedSignChanged(args);
    }

    protected void MessageTypeChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.EnumerationPropertyChangedEventArgs(this.State.Properties.MessageType, this.MessageType, this);
     ((global::Sungero.Exchange.ExchangeDocumentInfoSharedHandlers)this.SharedHandlers).MessageTypeChanged(args);
    }

    protected void MessageDateChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.DateTimePropertyChangedEventArgs(this.State.Properties.MessageDate, this.MessageDate, this);
     ((global::Sungero.Exchange.ExchangeDocumentInfoSharedHandlers)this.SharedHandlers).MessageDateChanged(args);
    }

    protected void RevocationStatusChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.EnumerationPropertyChangedEventArgs(this.State.Properties.RevocationStatus, this.RevocationStatus, this);
     ((global::Sungero.Exchange.ExchangeDocumentInfoSharedHandlers)this.SharedHandlers).RevocationStatusChanged(args);
    }

    protected void OutgoingStatusChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.EnumerationPropertyChangedEventArgs(this.State.Properties.OutgoingStatus, this.OutgoingStatus, this);
     ((global::Sungero.Exchange.ExchangeDocumentInfoSharedHandlers)this.SharedHandlers).OutgoingStatusChanged(args);
    }

    protected void ExchangeStateChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.EnumerationPropertyChangedEventArgs(this.State.Properties.ExchangeState, this.ExchangeState, this);
     ((global::Sungero.Exchange.ExchangeDocumentInfoSharedHandlers)this.SharedHandlers).ExchangeStateChanged(args);
    }

    protected void RevocationTaskChangedHandler()
    {
      var args = new global::Sungero.Exchange.Shared.ExchangeDocumentInfoRevocationTaskChangedEventArgs(this.State.Properties.RevocationTask, this.RevocationTask, this);
     ((global::Sungero.Exchange.ExchangeDocumentInfoSharedHandlers)this.SharedHandlers).RevocationTaskChanged(args);
    }

    protected void InvoiceStateChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.EnumerationPropertyChangedEventArgs(this.State.Properties.InvoiceState, this.InvoiceState, this);
     ((global::Sungero.Exchange.ExchangeDocumentInfoSharedHandlers)this.SharedHandlers).InvoiceStateChanged(args);
    }

    protected void RootBoxChangedHandler()
    {
      var args = new global::Sungero.Exchange.Shared.ExchangeDocumentInfoRootBoxChangedEventArgs(this.State.Properties.RootBox, this.RootBox, this);
     ((global::Sungero.Exchange.ExchangeDocumentInfoSharedHandlers)this.SharedHandlers).RootBoxChanged(args);
    }

    protected void DeliveryConfirmationStatusChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.EnumerationPropertyChangedEventArgs(this.State.Properties.DeliveryConfirmationStatus, this.DeliveryConfirmationStatus, this);
     ((global::Sungero.Exchange.ExchangeDocumentInfoSharedHandlers)this.SharedHandlers).DeliveryConfirmationStatusChanged(args);
    }

    protected void ServiceCounterpartyIdChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.ServiceCounterpartyId, this.ServiceCounterpartyId, this);
     ((global::Sungero.Exchange.ExchangeDocumentInfoSharedHandlers)this.SharedHandlers).ServiceCounterpartyIdChanged(args);
    }

    protected void ServiceDocumentsChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.CollectionPropertyChangedEventArgs(this);
     ((global::Sungero.Exchange.ExchangeDocumentInfoSharedHandlers)this.SharedHandlers).ServiceDocumentsChanged(args);
    }

    protected void ReceiverSignIdChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.IntegerPropertyChangedEventArgs(this.State.Properties.ReceiverSignId, this.ReceiverSignId, this);
     ((global::Sungero.Exchange.ExchangeDocumentInfoSharedHandlers)this.SharedHandlers).ReceiverSignIdChanged(args);
    }

    protected void SenderSignIdChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.IntegerPropertyChangedEventArgs(this.State.Properties.SenderSignId, this.SenderSignId, this);
     ((global::Sungero.Exchange.ExchangeDocumentInfoSharedHandlers)this.SharedHandlers).SenderSignIdChanged(args);
    }



    protected virtual global::Sungero.Exchange.ExchangeDocumentInfoServiceDocumentsSharedCollectionHandlers CreateServiceDocumentsAddedHandler(global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.Exchange.ExchangeDocumentInfoServiceDocumentsSharedCollectionHandlers(this, e.Value, null, e.Source);
    }

    protected virtual global::Sungero.Exchange.ExchangeDocumentInfoServiceDocumentsSharedCollectionHandlers CreateServiceDocumentsDeletedHandler(global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.Exchange.ExchangeDocumentInfoServiceDocumentsSharedCollectionHandlers(this, null, e.Value, null);
    }

    protected virtual void ServiceDocumentsAddedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {  
      var collectionHandlers = this.CreateServiceDocumentsAddedHandler(e);
      if (collectionHandlers != null)
      {
        var args = new global::Sungero.Domain.Shared.CollectionPropertyAddedEventArgs(this);
        collectionHandlers.ServiceDocumentsAdded(args);
      }
    }

    protected virtual void ServiceDocumentsDeletedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {  
      var collectionHandlers = this.CreateServiceDocumentsDeletedHandler(e);
      if (collectionHandlers != null)
      {
        var args = new global::Sungero.Domain.Shared.CollectionPropertyDeletedEventArgs(this);
        collectionHandlers.ServiceDocumentsDeleted(args);
      }
    }


  protected global::System.String NameValueInputHandler(global::System.String value)
  {
    var args = new global::Sungero.Presentation.StringValueInputEventArgs(this.Name, value, this, this.Info.Properties.Name);
    ((global::Sungero.Exchange.ExchangeDocumentInfoClientHandlers)this.Handlers).NameValueInput(args);
    return args.NewValue;
  }

  protected global::Sungero.Docflow.IOfficialDocument DocumentValueInputHandler(global::Sungero.Docflow.IOfficialDocument value)
  {
    var args = new global::Sungero.Exchange.Client.ExchangeDocumentInfoDocumentValueInputEventArgs(this.Document, value, this, this.Info.Properties.Document);
    ((global::Sungero.Exchange.ExchangeDocumentInfoClientHandlers)this.Handlers).DocumentValueInput(args);
    return args.NewValue;
  }

  protected global::Sungero.ExchangeCore.IBoxBase BoxValueInputHandler(global::Sungero.ExchangeCore.IBoxBase value)
  {
    var args = new global::Sungero.Exchange.Client.ExchangeDocumentInfoBoxValueInputEventArgs(this.Box, value, this, this.Info.Properties.Box);
    ((global::Sungero.Exchange.ExchangeDocumentInfoClientHandlers)this.Handlers).BoxValueInput(args);
    return args.NewValue;
  }

  protected global::System.String ServiceDocumentIdValueInputHandler(global::System.String value)
  {
    var args = new global::Sungero.Presentation.StringValueInputEventArgs(this.ServiceDocumentId, value, this, this.Info.Properties.ServiceDocumentId);
    ((global::Sungero.Exchange.ExchangeDocumentInfoClientHandlers)this.Handlers).ServiceDocumentIdValueInput(args);
    return args.NewValue;
  }

  protected global::System.Int32? VersionIdValueInputHandler(global::System.Int32? value)
  {
    var args = new global::Sungero.Presentation.IntegerValueInputEventArgs(this.VersionId, value, this, this.Info.Properties.VersionId);
    ((global::Sungero.Exchange.ExchangeDocumentInfoClientHandlers)this.Handlers).VersionIdValueInput(args);
    return args.NewValue;
  }

  protected global::System.String ServiceMessageIdValueInputHandler(global::System.String value)
  {
    var args = new global::Sungero.Presentation.StringValueInputEventArgs(this.ServiceMessageId, value, this, this.Info.Properties.ServiceMessageId);
    ((global::Sungero.Exchange.ExchangeDocumentInfoClientHandlers)this.Handlers).ServiceMessageIdValueInput(args);
    return args.NewValue;
  }

  protected global::Sungero.Parties.ICounterparty CounterpartyValueInputHandler(global::Sungero.Parties.ICounterparty value)
  {
    var args = new global::Sungero.Exchange.Client.ExchangeDocumentInfoCounterpartyValueInputEventArgs(this.Counterparty, value, this, this.Info.Properties.Counterparty);
    ((global::Sungero.Exchange.ExchangeDocumentInfoClientHandlers)this.Handlers).CounterpartyValueInput(args);
    return args.NewValue;
  }

  protected global::System.Boolean? NeedSignValueInputHandler(global::System.Boolean? value)
  {
    var args = new global::Sungero.Presentation.BooleanValueInputEventArgs(this.NeedSign, value, this, this.Info.Properties.NeedSign);
    ((global::Sungero.Exchange.ExchangeDocumentInfoClientHandlers)this.Handlers).NeedSignValueInput(args);
    return args.NewValue;
  }

  protected global::Sungero.Core.Enumeration? MessageTypeValueInputHandler(global::Sungero.Core.Enumeration? value)
  {
    var args = new global::Sungero.Presentation.EnumerationValueInputEventArgs(this.MessageType, value, this, this.Info.Properties.MessageType);
    ((global::Sungero.Exchange.ExchangeDocumentInfoClientHandlers)this.Handlers).MessageTypeValueInput(args);
    return args.NewValue;
  }

  protected global::System.DateTime? MessageDateValueInputHandler(global::System.DateTime? value)
  {
    var args = new global::Sungero.Presentation.DateTimeValueInputEventArgs(this.MessageDate, value, this, this.Info.Properties.MessageDate);
    ((global::Sungero.Exchange.ExchangeDocumentInfoClientHandlers)this.Handlers).MessageDateValueInput(args);
    return args.NewValue;
  }

  protected global::Sungero.Core.Enumeration? RevocationStatusValueInputHandler(global::Sungero.Core.Enumeration? value)
  {
    var args = new global::Sungero.Presentation.EnumerationValueInputEventArgs(this.RevocationStatus, value, this, this.Info.Properties.RevocationStatus);
    ((global::Sungero.Exchange.ExchangeDocumentInfoClientHandlers)this.Handlers).RevocationStatusValueInput(args);
    return args.NewValue;
  }

  protected global::Sungero.Core.Enumeration? OutgoingStatusValueInputHandler(global::Sungero.Core.Enumeration? value)
  {
    var args = new global::Sungero.Presentation.EnumerationValueInputEventArgs(this.OutgoingStatus, value, this, this.Info.Properties.OutgoingStatus);
    ((global::Sungero.Exchange.ExchangeDocumentInfoClientHandlers)this.Handlers).OutgoingStatusValueInput(args);
    return args.NewValue;
  }

  protected global::Sungero.Core.Enumeration? ExchangeStateValueInputHandler(global::Sungero.Core.Enumeration? value)
  {
    var args = new global::Sungero.Presentation.EnumerationValueInputEventArgs(this.ExchangeState, value, this, this.Info.Properties.ExchangeState);
    ((global::Sungero.Exchange.ExchangeDocumentInfoClientHandlers)this.Handlers).ExchangeStateValueInput(args);
    return args.NewValue;
  }

  protected global::Sungero.Workflow.ITask RevocationTaskValueInputHandler(global::Sungero.Workflow.ITask value)
  {
    var args = new global::Sungero.Exchange.Client.ExchangeDocumentInfoRevocationTaskValueInputEventArgs(this.RevocationTask, value, this, this.Info.Properties.RevocationTask);
    ((global::Sungero.Exchange.ExchangeDocumentInfoClientHandlers)this.Handlers).RevocationTaskValueInput(args);
    return args.NewValue;
  }

  protected global::Sungero.Core.Enumeration? InvoiceStateValueInputHandler(global::Sungero.Core.Enumeration? value)
  {
    var args = new global::Sungero.Presentation.EnumerationValueInputEventArgs(this.InvoiceState, value, this, this.Info.Properties.InvoiceState);
    ((global::Sungero.Exchange.ExchangeDocumentInfoClientHandlers)this.Handlers).InvoiceStateValueInput(args);
    return args.NewValue;
  }

  protected global::Sungero.ExchangeCore.IBusinessUnitBox RootBoxValueInputHandler(global::Sungero.ExchangeCore.IBusinessUnitBox value)
  {
    var args = new global::Sungero.Exchange.Client.ExchangeDocumentInfoRootBoxValueInputEventArgs(this.RootBox, value, this, this.Info.Properties.RootBox);
    ((global::Sungero.Exchange.ExchangeDocumentInfoClientHandlers)this.Handlers).RootBoxValueInput(args);
    return args.NewValue;
  }

  protected global::Sungero.Core.Enumeration? DeliveryConfirmationStatusValueInputHandler(global::Sungero.Core.Enumeration? value)
  {
    var args = new global::Sungero.Presentation.EnumerationValueInputEventArgs(this.DeliveryConfirmationStatus, value, this, this.Info.Properties.DeliveryConfirmationStatus);
    ((global::Sungero.Exchange.ExchangeDocumentInfoClientHandlers)this.Handlers).DeliveryConfirmationStatusValueInput(args);
    return args.NewValue;
  }

  protected global::System.String ServiceCounterpartyIdValueInputHandler(global::System.String value)
  {
    var args = new global::Sungero.Presentation.StringValueInputEventArgs(this.ServiceCounterpartyId, value, this, this.Info.Properties.ServiceCounterpartyId);
    ((global::Sungero.Exchange.ExchangeDocumentInfoClientHandlers)this.Handlers).ServiceCounterpartyIdValueInput(args);
    return args.NewValue;
  }


  protected global::System.Int32? ReceiverSignIdValueInputHandler(global::System.Int32? value)
  {
    var args = new global::Sungero.Presentation.IntegerValueInputEventArgs(this.ReceiverSignId, value, this, this.Info.Properties.ReceiverSignId);
    ((global::Sungero.Exchange.ExchangeDocumentInfoClientHandlers)this.Handlers).ReceiverSignIdValueInput(args);
    return args.NewValue;
  }

  protected global::System.Int32? SenderSignIdValueInputHandler(global::System.Int32? value)
  {
    var args = new global::Sungero.Presentation.IntegerValueInputEventArgs(this.SenderSignId, value, this, this.Info.Properties.SenderSignId);
    ((global::Sungero.Exchange.ExchangeDocumentInfoClientHandlers)this.Handlers).SenderSignIdValueInput(args);
    return args.NewValue;
  }


  protected global::System.Collections.Generic.IEnumerable<global::Sungero.Core.Enumeration> MessageTypeFilteringHandler()
  {
    return ((global::Sungero.Exchange.ExchangeDocumentInfoClientHandlers)this.Handlers).MessageTypeFiltering(this.MessageTypeAllowedItems);
  }


  protected global::System.Collections.Generic.IEnumerable<global::Sungero.Core.Enumeration> RevocationStatusFilteringHandler()
  {
    return ((global::Sungero.Exchange.ExchangeDocumentInfoClientHandlers)this.Handlers).RevocationStatusFiltering(this.RevocationStatusAllowedItems);
  }

  protected global::System.Collections.Generic.IEnumerable<global::Sungero.Core.Enumeration> OutgoingStatusFilteringHandler()
  {
    return ((global::Sungero.Exchange.ExchangeDocumentInfoClientHandlers)this.Handlers).OutgoingStatusFiltering(this.OutgoingStatusAllowedItems);
  }

  protected global::System.Collections.Generic.IEnumerable<global::Sungero.Core.Enumeration> ExchangeStateFilteringHandler()
  {
    return ((global::Sungero.Exchange.ExchangeDocumentInfoClientHandlers)this.Handlers).ExchangeStateFiltering(this.ExchangeStateAllowedItems);
  }


  protected global::System.Collections.Generic.IEnumerable<global::Sungero.Core.Enumeration> InvoiceStateFilteringHandler()
  {
    return ((global::Sungero.Exchange.ExchangeDocumentInfoClientHandlers)this.Handlers).InvoiceStateFiltering(this.InvoiceStateAllowedItems);
  }


  protected global::System.Collections.Generic.IEnumerable<global::Sungero.Core.Enumeration> DeliveryConfirmationStatusFilteringHandler()
  {
    return ((global::Sungero.Exchange.ExchangeDocumentInfoClientHandlers)this.Handlers).DeliveryConfirmationStatusFiltering(this.DeliveryConfirmationStatusAllowedItems);
  }






    #endregion

    #region Constructors



              protected virtual void InitDocumentNavigationProperty()
              {
                this._Document = new global::Sungero.Domain.Client.NavigationProperty<global::Sungero.Docflow.IOfficialDocument>("Document", this);
                this._Document.ValueChanged += (sender, e) => { this.DocumentChangedHandler(); };
                this.AddProperty(this._Document as global::Sungero.Domain.Client.IProperty);
              }




              protected virtual void InitBoxNavigationProperty()
              {
                this._Box = new global::Sungero.Domain.Client.NavigationProperty<global::Sungero.ExchangeCore.IBoxBase>("Box", this);
                this._Box.ValueChanged += (sender, e) => { this.BoxChangedHandler(); };
                this.AddProperty(this._Box as global::Sungero.Domain.Client.IProperty);
              }




              protected virtual void InitCounterpartyNavigationProperty()
              {
                this._Counterparty = new global::Sungero.Domain.Client.NavigationProperty<global::Sungero.Parties.ICounterparty>("Counterparty", this);
                this._Counterparty.ValueChanged += (sender, e) => { this.CounterpartyChangedHandler(); };
                this.AddProperty(this._Counterparty as global::Sungero.Domain.Client.IProperty);
              }




              protected virtual void InitRevocationTaskNavigationProperty()
              {
                this._RevocationTask = new global::Sungero.Domain.Client.NavigationProperty<global::Sungero.Workflow.ITask>("RevocationTask", this);
                this._RevocationTask.ValueChanged += (sender, e) => { this.RevocationTaskChangedHandler(); };
                this.AddProperty(this._RevocationTask as global::Sungero.Domain.Client.IProperty);
              }




              protected virtual void InitRootBoxNavigationProperty()
              {
                this._RootBox = new global::Sungero.Domain.Client.NavigationProperty<global::Sungero.ExchangeCore.IBusinessUnitBox>("RootBox", this);
                this._RootBox.ValueChanged += (sender, e) => { this.RootBoxChangedHandler(); };
                this.AddProperty(this._RootBox as global::Sungero.Domain.Client.IProperty);
              }



            protected virtual void InitServiceDocumentsCollectionProperty()
            {
              this._ServiceDocuments = new global::Sungero.Domain.Client.ListProperty<global::Sungero.Exchange.IExchangeDocumentInfoServiceDocuments>("ServiceDocuments", this);
              this._ServiceDocuments.ValueChanged += (sender, e) => { this.ServiceDocumentsChangedHandler(); };
              this.AddProperty((global::Sungero.Domain.Client.IProperty)this._ServiceDocuments);
              this.SetServiceDocumentsEventHandlers();
            }

            protected void SetServiceDocumentsEventHandlers()
            {
              this._ServiceDocuments.ChildEntityAdded += this.ServiceDocumentsAddedHandler;
              this._ServiceDocuments.ChildEntityDeleted += this.ServiceDocumentsDeletedHandler;
            }


    public ExchangeDocumentInfo()
    {
            this._Name = new global::Sungero.Domain.Client.SimpleProperty<global::System.String>("Name", this);
            this._Name.ValueChanged += (sender, e) => { this.NameChangedHandler(); };
            this.AddProperty(this._Name);

            this._ServiceDocumentId = new global::Sungero.Domain.Client.SimpleProperty<global::System.String>("ServiceDocumentId", this);
            this._ServiceDocumentId.ValueChanged += (sender, e) => { this.ServiceDocumentIdChangedHandler(); };
            this.AddProperty(this._ServiceDocumentId);

            this._VersionId = new global::Sungero.Domain.Client.SimpleProperty<global::System.Int32?>("VersionId", this);
            this._VersionId.ValueChanged += (sender, e) => { this.VersionIdChangedHandler(); };
            this.AddProperty(this._VersionId);

            this._ServiceMessageId = new global::Sungero.Domain.Client.SimpleProperty<global::System.String>("ServiceMessageId", this);
            this._ServiceMessageId.ValueChanged += (sender, e) => { this.ServiceMessageIdChangedHandler(); };
            this.AddProperty(this._ServiceMessageId);

            this._NeedSign = new global::Sungero.Domain.Client.SimpleProperty<global::System.Boolean?>("NeedSign", this);
            this._NeedSign.ValueChanged += (sender, e) => { this.NeedSignChangedHandler(); };
            this.AddProperty(this._NeedSign);

            this._MessageType = new global::Sungero.Domain.Client.EnumSimpleProperty<global::Sungero.Core.Enumeration?>("MessageType", this);
            this._MessageType.ValueChanged += (sender, e) => { this.MessageTypeChangedHandler(); };
            this.AddProperty(this._MessageType);

            this._MessageDate = new global::Sungero.Domain.Client.SimpleProperty<global::System.DateTime?>("MessageDate", this);
            this._MessageDate.ValueChanged += (sender, e) => { this.MessageDateChangedHandler(); };
            this.AddProperty(this._MessageDate);

            this._RevocationStatus = new global::Sungero.Domain.Client.EnumSimpleProperty<global::Sungero.Core.Enumeration?>("RevocationStatus", this);
            this._RevocationStatus.ValueChanged += (sender, e) => { this.RevocationStatusChangedHandler(); };
            this.AddProperty(this._RevocationStatus);

            this._OutgoingStatus = new global::Sungero.Domain.Client.EnumSimpleProperty<global::Sungero.Core.Enumeration?>("OutgoingStatus", this);
            this._OutgoingStatus.ValueChanged += (sender, e) => { this.OutgoingStatusChangedHandler(); };
            this.AddProperty(this._OutgoingStatus);

            this._ExchangeState = new global::Sungero.Domain.Client.EnumSimpleProperty<global::Sungero.Core.Enumeration?>("ExchangeState", this);
            this._ExchangeState.ValueChanged += (sender, e) => { this.ExchangeStateChangedHandler(); };
            this.AddProperty(this._ExchangeState);

            this._InvoiceState = new global::Sungero.Domain.Client.EnumSimpleProperty<global::Sungero.Core.Enumeration?>("InvoiceState", this);
            this._InvoiceState.ValueChanged += (sender, e) => { this.InvoiceStateChangedHandler(); };
            this.AddProperty(this._InvoiceState);

            this._DeliveryConfirmationStatus = new global::Sungero.Domain.Client.EnumSimpleProperty<global::Sungero.Core.Enumeration?>("DeliveryConfirmationStatus", this);
            this._DeliveryConfirmationStatus.ValueChanged += (sender, e) => { this.DeliveryConfirmationStatusChangedHandler(); };
            this.AddProperty(this._DeliveryConfirmationStatus);

            this._ServiceCounterpartyId = new global::Sungero.Domain.Client.SimpleProperty<global::System.String>("ServiceCounterpartyId", this);
            this._ServiceCounterpartyId.ValueChanged += (sender, e) => { this.ServiceCounterpartyIdChangedHandler(); };
            this.AddProperty(this._ServiceCounterpartyId);

            this._ReceiverSignId = new global::Sungero.Domain.Client.SimpleProperty<global::System.Int32?>("ReceiverSignId", this);
            this._ReceiverSignId.ValueChanged += (sender, e) => { this.ReceiverSignIdChangedHandler(); };
            this.AddProperty(this._ReceiverSignId);

            this._SenderSignId = new global::Sungero.Domain.Client.SimpleProperty<global::System.Int32?>("SenderSignId", this);
            this._SenderSignId.ValueChanged += (sender, e) => { this.SenderSignIdChangedHandler(); };
            this.AddProperty(this._SenderSignId);

            this.InitDocumentNavigationProperty();

            this.InitBoxNavigationProperty();

            this.InitCounterpartyNavigationProperty();

            this.InitRevocationTaskNavigationProperty();

            this.InitRootBoxNavigationProperty();


            this.InitServiceDocumentsCollectionProperty();







    }

    #endregion

  }
}

// ==================================================================
// ExchangeDocumentInfoPresenter.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Exchange.Client
{
  public class ExchangeDocumentInfoPresenter<T> :
    global::Sungero.Domain.Client.EntityPresenter<T>
    where T : class, global::Sungero.Exchange.IExchangeDocumentInfo
  {
    #region Fields and properties




    #endregion

    #region Methods

    #endregion

    #region Framework events

    protected override void EntityPropertyChangedEventHandler(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
    {
      base.EntityPropertyChangedEventHandler(sender, e);
    }

    #endregion

              protected global::Sungero.Domain.Client.IEntityCollectionPresenter _DocumentCollectionPresenter;
              public global::Sungero.Domain.Client.IEntityCollectionPresenter DocumentCollectionPresenter
              {
          get { return this._DocumentCollectionPresenter; }
        }
              protected global::Sungero.Domain.Client.IEntityCollectionPresenter _BoxCollectionPresenter;
              public global::Sungero.Domain.Client.IEntityCollectionPresenter BoxCollectionPresenter
              {
          get { return this._BoxCollectionPresenter; }
        }
              protected global::Sungero.Domain.Client.IEntityCollectionPresenter _CounterpartyCollectionPresenter;
              public global::Sungero.Domain.Client.IEntityCollectionPresenter CounterpartyCollectionPresenter
              {
          get { return this._CounterpartyCollectionPresenter; }
        }
              protected global::Sungero.Domain.Client.IEntityCollectionPresenter _RevocationTaskCollectionPresenter;
              public global::Sungero.Domain.Client.IEntityCollectionPresenter RevocationTaskCollectionPresenter
              {
          get { return this._RevocationTaskCollectionPresenter; }
        }
              protected global::Sungero.Domain.Client.IEntityCollectionPresenter _RootBoxCollectionPresenter;
              public global::Sungero.Domain.Client.IEntityCollectionPresenter RootBoxCollectionPresenter
              {
          get { return this._RootBoxCollectionPresenter; }
        }


                          protected global::Sungero.Domain.Client.IEntityCollectionPresenter _ServiceDocumentsCertificateCollectionPresenter;
                          public global::Sungero.Domain.Client.IEntityCollectionPresenter ServiceDocumentsCertificateCollectionPresenter
                          {
                  get { return this._ServiceDocumentsCertificateCollectionPresenter; }
                }



    #region Constructors

    private void Init()
    {
                  this._DocumentCollectionPresenter = this.CreateCollectionPresenterForNavigationProperty<global::Sungero.Docflow.IOfficialDocument>(global::System.Guid.Parse("a746faa3-5f04-429b-b835-9ff45a5eee40"));
              this._DocumentCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Docflow.IOfficialDocument>(() => this.Entity.Id, typeof(T), "Document");

                  this._BoxCollectionPresenter = this.CreateCollectionPresenterForNavigationProperty<global::Sungero.ExchangeCore.IBoxBase>(global::System.Guid.Parse("7f234134-3820-42f2-8df1-1d39f6942bcd"));
              this._BoxCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.ExchangeCore.IBoxBase>(() => this.Entity.Id, typeof(T), "Box");

                  this._CounterpartyCollectionPresenter = this.CreateCollectionPresenterForNavigationProperty<global::Sungero.Parties.ICounterparty>(global::System.Guid.Parse("b65cafbc-f166-459c-9686-24dc9cf94645"));
              this._CounterpartyCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Parties.ICounterparty>(() => this.Entity.Id, typeof(T), "Counterparty");

                  this._RevocationTaskCollectionPresenter = this.CreateCollectionPresenterForNavigationProperty<global::Sungero.Workflow.ITask>(global::System.Guid.Parse("753f4612-7d0a-4586-9abb-cba85f7af14a"));
              this._RevocationTaskCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Workflow.ITask>(() => this.Entity.Id, typeof(T), "RevocationTask");

                  this._RootBoxCollectionPresenter = this.CreateCollectionPresenterForNavigationProperty<global::Sungero.ExchangeCore.IBusinessUnitBox>(global::System.Guid.Parse("517290a1-57dd-48a5-817f-099032a2117a"));
              this._RootBoxCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.ExchangeCore.IBusinessUnitBox>(() => this.Entity.Id, typeof(T), "RootBox");


                          this._ServiceDocumentsCertificateCollectionPresenter = this.CreateCollectionPresenterForNavigationProperty<global::Sungero.CoreEntities.ICertificate>(global::System.Guid.Parse("c026105d-16ed-4f59-97bd-6b0b275aee95"));
                        this._ServiceDocumentsCertificateCollectionPresenter
                        .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.CoreEntities.ICertificate>(() => this.Entity.Id, typeof(Sungero.Exchange.IExchangeDocumentInfoServiceDocuments), "Certificate");


    }

    public ExchangeDocumentInfoPresenter()
    {
      this.Init();
    }

    #endregion
  }
}

// ==================================================================
// ExchangeDocumentInfoCollectionPresenter.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Exchange.Client
{
  public class ExchangeDocumentInfoCollectionPresenter<T> : 
    global::Sungero.Domain.Client.EntityCollectionPresenter<T>
    where T: class, global::Sungero.Exchange.IExchangeDocumentInfo
  {
    #region Actions



    #endregion

    #region Methods


    #endregion

    public ExchangeDocumentInfoCollectionPresenter(global::System.Linq.IQueryable<T> query, OnLookup onLookup)
      : base(query, onLookup)
    {
    }

    public ExchangeDocumentInfoCollectionPresenter(global::System.Linq.IQueryable<T> query)
      : this(query, null) { }

    public ExchangeDocumentInfoCollectionPresenter(OnLookup onLookup)
      : this(null, onLookup) { }

    public ExchangeDocumentInfoCollectionPresenter()
      : this(null, null) { }
  }
}

// ==================================================================
// ExchangeDocumentInfoRepositoryImplementer.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Exchange.Client
{ 
  public class ExchangeDocumentInfoRepositoryImplementer<T> : 
      global::Sungero.Domain.Client.RepositoryImplementer<T>,
      global::Sungero.Exchange.IExchangeDocumentInfoRepositoryImplementer<T>
      where T : global::Sungero.Exchange.IExchangeDocumentInfo
    {
       public new global::Sungero.Exchange.IExchangeDocumentInfoAccessRights AccessRights
       {
          get { return (global::Sungero.Exchange.IExchangeDocumentInfoAccessRights)base.AccessRights; }
       }

       public new global::Sungero.Exchange.IExchangeDocumentInfoInfo Info
       {
          get { return (global::Sungero.Exchange.IExchangeDocumentInfoInfo)base.Info; }
       }

       protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
       {
         return new global::Sungero.Exchange.Client.ExchangeDocumentInfoTypeAccessRights(typeof(T));
       }
    }
}

// ==================================================================
// ExchangeDocumentInfoAccessRights.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Exchange.Client
{
  public class ExchangeDocumentInfoAccessRights : 
    Sungero.CoreEntities.Client.DatabookEntryAccessRights, Sungero.Exchange.IExchangeDocumentInfoAccessRights
  {

    public ExchangeDocumentInfoAccessRights(global::Sungero.Domain.Shared.IEntity entity) : base(entity)
    {
    }
  }

  public class ExchangeDocumentInfoTypeAccessRights : 
    Sungero.CoreEntities.Client.DatabookEntryTypeAccessRights, Sungero.Exchange.IExchangeDocumentInfoAccessRights
  {

    public ExchangeDocumentInfoTypeAccessRights(global::System.Type entityType) : base(entityType)
    {
    }
  }
}
