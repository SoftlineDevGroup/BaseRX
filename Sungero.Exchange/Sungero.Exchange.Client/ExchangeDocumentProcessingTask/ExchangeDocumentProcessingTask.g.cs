
// ==================================================================
// ExchangeDocumentProcessingTask.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Exchange.Client
{
  public class ExchangeDocumentProcessingTask :
    global::Sungero.Workflow.Client.Task, global::Sungero.Exchange.IExchangeDocumentProcessingTask
  {
    #region Fields and properties

    public static new readonly global::System.Guid ClassTypeGuid = global::System.Guid.Parse("ae03c598-ab50-4781-b1b2-968510b338b9");

    public override global::System.Guid TypeGuid
    {
      get { return global::Sungero.Exchange.Client.ExchangeDocumentProcessingTask.ClassTypeGuid; }
    }

    public override string TypeName
    {
      get { return "Sungero.Exchange.IExchangeDocumentProcessingTask, Sungero.Domain.Interfaces"; }
    }

      public override string DisplayValue
      {
        get { return this.Subject; }
        set { this.Subject = value; }
      }

      public override string DisplayPropertyName
      {
        get { return "Subject"; }
      }


    public new global::Sungero.Exchange.IExchangeDocumentProcessingTaskState State
    {
      get
      {
        return (global::Sungero.Exchange.IExchangeDocumentProcessingTaskState)base.State;
      }
    }

    protected override global::Sungero.Domain.Shared.IEntityState CreateState()
    {
      return new global::Sungero.Exchange.Shared.ExchangeDocumentProcessingTaskState(this);
    }

    public new global::Sungero.Exchange.IExchangeDocumentProcessingTaskInfo Info
    {
      get
      {
        return (global::Sungero.Exchange.IExchangeDocumentProcessingTaskInfo)base.Info;
      }
    }

    public new global::Sungero.Exchange.IExchangeDocumentProcessingTaskAccessRights AccessRights
    {
      get
      {
        return (global::Sungero.Exchange.IExchangeDocumentProcessingTaskAccessRights)base.AccessRights;
      }
    }

    protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
    {
      return new global::Sungero.Exchange.Client.ExchangeDocumentProcessingTaskAccessRights(this);
    }

        protected global::Sungero.Domain.Client.SimpleProperty<global::System.DateTime?> _Deadline;

        public virtual global::System.DateTime? Deadline
        {
          get { return this._Deadline.Value; }
          set { this._Deadline.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.DateTime?> _IncomeDate;

        public virtual global::System.DateTime? IncomeDate
        {
          get { return this._IncomeDate.Value; }
          set { this._IncomeDate.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.Boolean?> _IsReadressed;

        public virtual global::System.Boolean? IsReadressed
        {
          get { return this._IsReadressed.Value; }
          set { this._IsReadressed.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.Boolean?> _IsIncoming;

        public virtual global::System.Boolean? IsIncoming
        {
          get { return this._IsIncoming.Value; }
          set { this._IsIncoming.Value = value; }
        }




              protected global::Sungero.Domain.Client.INavigationProperty<global::Sungero.ExchangeCore.IBoxBase> _Box;

              public virtual global::Sungero.ExchangeCore.IBoxBase Box
              {
              get
              {
                return this._Box.Value as global::Sungero.ExchangeCore.IBoxBase;
              }

              set
              {
                (this._Box as global::Sungero.Domain.Client.IProperty).Value = value;
              }
            }



              protected global::Sungero.Domain.Client.INavigationProperty<global::Sungero.Parties.ICounterparty> _Counterparty;

              public virtual global::Sungero.Parties.ICounterparty Counterparty
              {
              get
              {
                return this._Counterparty.Value as global::Sungero.Parties.ICounterparty;
              }

              set
              {
                (this._Counterparty as global::Sungero.Domain.Client.IProperty).Value = value;
              }
            }



              protected global::Sungero.Domain.Client.INavigationProperty<global::Sungero.ExchangeCore.IExchangeService> _ExchangeService;

              public virtual global::Sungero.ExchangeCore.IExchangeService ExchangeService
              {
              get
              {
                return this._ExchangeService.Value as global::Sungero.ExchangeCore.IExchangeService;
              }

              set
              {
                (this._ExchangeService as global::Sungero.Domain.Client.IProperty).Value = value;
              }
            }



              protected global::Sungero.Domain.Client.INavigationProperty<global::Sungero.Company.IEmployee> _Assignee;

              public virtual global::Sungero.Company.IEmployee Assignee
              {
              get
              {
                return this._Assignee.Value as global::Sungero.Company.IEmployee;
              }

              set
              {
                (this._Assignee as global::Sungero.Domain.Client.IProperty).Value = value;
              }
            }



              protected global::Sungero.Domain.Client.INavigationProperty<global::Sungero.Company.IEmployee> _Addressee;

              public virtual global::Sungero.Company.IEmployee Addressee
              {
              get
              {
                return this._Addressee.Value as global::Sungero.Company.IEmployee;
              }

              set
              {
                (this._Addressee as global::Sungero.Domain.Client.IProperty).Value = value;
              }
            }










    #endregion

    #region Methods

    protected override object CreateActionsHandlers()
    {
      return new global::Sungero.Exchange.Client.ExchangeDocumentProcessingTaskActions(this);
    }

    protected override object CreateCollectionActionsHandlers()
    {
      return new global::Sungero.Exchange.Client.ExchangeDocumentProcessingTaskCollectionActions();
    }

    protected override object CreateAnyChildEntityActionsHandlers()
    {
      return new global::Sungero.Exchange.Client.ExchangeDocumentProcessingTaskAnyChildEntityActions();
    }

    protected override object CreateAnyChildEntityCollectionActionsHandlers()
    {
      return new global::Sungero.Exchange.Client.ExchangeDocumentProcessingTaskAnyChildEntityCollectionActions();
    }


    protected override global::Sungero.Domain.Client.EntityFunctions CreateClientFunctions()
    {
      return new global::Sungero.Exchange.Client.ExchangeDocumentProcessingTaskFunctions(this);
    }

    protected override global::Sungero.Domain.Shared.EntityFunctions CreateSharedFunctions()
    {
      return new global::Sungero.Exchange.Shared.ExchangeDocumentProcessingTaskFunctions(this);
    }
    protected override object CreateHandlers() {
      return new global::Sungero.Exchange.ExchangeDocumentProcessingTaskClientHandlers(this);
    }
    protected override object CreateSharedHandlers() {
      return new global::Sungero.Exchange.ExchangeDocumentProcessingTaskSharedHandlers(this);
    }

    #endregion

    #region Framework events

    protected void BoxChangedHandler()
    {
      var args = new global::Sungero.Exchange.Shared.ExchangeDocumentProcessingTaskBoxChangedEventArgs(this.State.Properties.Box, this.Box, this);
     ((global::Sungero.Exchange.ExchangeDocumentProcessingTaskSharedHandlers)this.SharedHandlers).BoxChanged(args);
    }

    protected void CounterpartyChangedHandler()
    {
      var args = new global::Sungero.Exchange.Shared.ExchangeDocumentProcessingTaskCounterpartyChangedEventArgs(this.State.Properties.Counterparty, this.Counterparty, this);
     ((global::Sungero.Exchange.ExchangeDocumentProcessingTaskSharedHandlers)this.SharedHandlers).CounterpartyChanged(args);
    }

    protected void ExchangeServiceChangedHandler()
    {
      var args = new global::Sungero.Exchange.Shared.ExchangeDocumentProcessingTaskExchangeServiceChangedEventArgs(this.State.Properties.ExchangeService, this.ExchangeService, this);
     ((global::Sungero.Exchange.ExchangeDocumentProcessingTaskSharedHandlers)this.SharedHandlers).ExchangeServiceChanged(args);
    }

    protected void AssigneeChangedHandler()
    {
      var args = new global::Sungero.Exchange.Shared.ExchangeDocumentProcessingTaskAssigneeChangedEventArgs(this.State.Properties.Assignee, this.Assignee, this);
     ((global::Sungero.Exchange.ExchangeDocumentProcessingTaskSharedHandlers)this.SharedHandlers).AssigneeChanged(args);
    }

    protected void DeadlineChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.DateTimePropertyChangedEventArgs(this.State.Properties.Deadline, this.Deadline, this);
     ((global::Sungero.Exchange.ExchangeDocumentProcessingTaskSharedHandlers)this.SharedHandlers).DeadlineChanged(args);
    }

    protected void AddresseeChangedHandler()
    {
      var args = new global::Sungero.Exchange.Shared.ExchangeDocumentProcessingTaskAddresseeChangedEventArgs(this.State.Properties.Addressee, this.Addressee, this);
     ((global::Sungero.Exchange.ExchangeDocumentProcessingTaskSharedHandlers)this.SharedHandlers).AddresseeChanged(args);
    }

    protected void IncomeDateChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.DateTimePropertyChangedEventArgs(this.State.Properties.IncomeDate, this.IncomeDate, this);
     ((global::Sungero.Exchange.ExchangeDocumentProcessingTaskSharedHandlers)this.SharedHandlers).IncomeDateChanged(args);
    }

    protected void IsReadressedChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.BooleanPropertyChangedEventArgs(this.State.Properties.IsReadressed, this.IsReadressed, this);
     ((global::Sungero.Exchange.ExchangeDocumentProcessingTaskSharedHandlers)this.SharedHandlers).IsReadressedChanged(args);
    }

    protected void IsIncomingChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.BooleanPropertyChangedEventArgs(this.State.Properties.IsIncoming, this.IsIncoming, this);
     ((global::Sungero.Exchange.ExchangeDocumentProcessingTaskSharedHandlers)this.SharedHandlers).IsIncomingChanged(args);
    }





  protected global::Sungero.ExchangeCore.IBoxBase BoxValueInputHandler(global::Sungero.ExchangeCore.IBoxBase value)
  {
    var args = new global::Sungero.Exchange.Client.ExchangeDocumentProcessingTaskBoxValueInputEventArgs(this.Box, value, this, this.Info.Properties.Box);
    ((global::Sungero.Exchange.ExchangeDocumentProcessingTaskClientHandlers)this.Handlers).BoxValueInput(args);
    return args.NewValue;
  }

  protected global::Sungero.Parties.ICounterparty CounterpartyValueInputHandler(global::Sungero.Parties.ICounterparty value)
  {
    var args = new global::Sungero.Exchange.Client.ExchangeDocumentProcessingTaskCounterpartyValueInputEventArgs(this.Counterparty, value, this, this.Info.Properties.Counterparty);
    ((global::Sungero.Exchange.ExchangeDocumentProcessingTaskClientHandlers)this.Handlers).CounterpartyValueInput(args);
    return args.NewValue;
  }

  protected global::Sungero.ExchangeCore.IExchangeService ExchangeServiceValueInputHandler(global::Sungero.ExchangeCore.IExchangeService value)
  {
    var args = new global::Sungero.Exchange.Client.ExchangeDocumentProcessingTaskExchangeServiceValueInputEventArgs(this.ExchangeService, value, this, this.Info.Properties.ExchangeService);
    ((global::Sungero.Exchange.ExchangeDocumentProcessingTaskClientHandlers)this.Handlers).ExchangeServiceValueInput(args);
    return args.NewValue;
  }

  protected global::Sungero.Company.IEmployee AssigneeValueInputHandler(global::Sungero.Company.IEmployee value)
  {
    var args = new global::Sungero.Exchange.Client.ExchangeDocumentProcessingTaskAssigneeValueInputEventArgs(this.Assignee, value, this, this.Info.Properties.Assignee);
    ((global::Sungero.Exchange.ExchangeDocumentProcessingTaskClientHandlers)this.Handlers).AssigneeValueInput(args);
    return args.NewValue;
  }

  protected global::System.DateTime? DeadlineValueInputHandler(global::System.DateTime? value)
  {
    var args = new global::Sungero.Presentation.DateTimeValueInputEventArgs(this.Deadline, value, this, this.Info.Properties.Deadline);
    ((global::Sungero.Exchange.ExchangeDocumentProcessingTaskClientHandlers)this.Handlers).DeadlineValueInput(args);
    return args.NewValue;
  }

  protected global::Sungero.Company.IEmployee AddresseeValueInputHandler(global::Sungero.Company.IEmployee value)
  {
    var args = new global::Sungero.Exchange.Client.ExchangeDocumentProcessingTaskAddresseeValueInputEventArgs(this.Addressee, value, this, this.Info.Properties.Addressee);
    ((global::Sungero.Exchange.ExchangeDocumentProcessingTaskClientHandlers)this.Handlers).AddresseeValueInput(args);
    return args.NewValue;
  }

  protected global::System.DateTime? IncomeDateValueInputHandler(global::System.DateTime? value)
  {
    var args = new global::Sungero.Presentation.DateTimeValueInputEventArgs(this.IncomeDate, value, this, this.Info.Properties.IncomeDate);
    ((global::Sungero.Exchange.ExchangeDocumentProcessingTaskClientHandlers)this.Handlers).IncomeDateValueInput(args);
    return args.NewValue;
  }

  protected global::System.Boolean? IsReadressedValueInputHandler(global::System.Boolean? value)
  {
    var args = new global::Sungero.Presentation.BooleanValueInputEventArgs(this.IsReadressed, value, this, this.Info.Properties.IsReadressed);
    ((global::Sungero.Exchange.ExchangeDocumentProcessingTaskClientHandlers)this.Handlers).IsReadressedValueInput(args);
    return args.NewValue;
  }

  protected global::System.Boolean? IsIncomingValueInputHandler(global::System.Boolean? value)
  {
    var args = new global::Sungero.Presentation.BooleanValueInputEventArgs(this.IsIncoming, value, this, this.Info.Properties.IsIncoming);
    ((global::Sungero.Exchange.ExchangeDocumentProcessingTaskClientHandlers)this.Handlers).IsIncomingValueInput(args);
    return args.NewValue;
  }




    #endregion

    #region Constructors








              protected virtual void InitBoxNavigationProperty()
              {
                this._Box = new global::Sungero.Domain.Client.NavigationProperty<global::Sungero.ExchangeCore.IBoxBase>("Box", this);
                this._Box.ValueChanged += (sender, e) => { this.BoxChangedHandler(); };
                this.AddProperty(this._Box as global::Sungero.Domain.Client.IProperty);
              }




              protected virtual void InitCounterpartyNavigationProperty()
              {
                this._Counterparty = new global::Sungero.Domain.Client.NavigationProperty<global::Sungero.Parties.ICounterparty>("Counterparty", this);
                this._Counterparty.ValueChanged += (sender, e) => { this.CounterpartyChangedHandler(); };
                this.AddProperty(this._Counterparty as global::Sungero.Domain.Client.IProperty);
              }




              protected virtual void InitExchangeServiceNavigationProperty()
              {
                this._ExchangeService = new global::Sungero.Domain.Client.NavigationProperty<global::Sungero.ExchangeCore.IExchangeService>("ExchangeService", this);
                this._ExchangeService.ValueChanged += (sender, e) => { this.ExchangeServiceChangedHandler(); };
                this.AddProperty(this._ExchangeService as global::Sungero.Domain.Client.IProperty);
              }




              protected virtual void InitAssigneeNavigationProperty()
              {
                this._Assignee = new global::Sungero.Domain.Client.NavigationProperty<global::Sungero.Company.IEmployee>("Assignee", this);
                this._Assignee.ValueChanged += (sender, e) => { this.AssigneeChangedHandler(); };
                this.AddProperty(this._Assignee as global::Sungero.Domain.Client.IProperty);
              }




              protected virtual void InitAddresseeNavigationProperty()
              {
                this._Addressee = new global::Sungero.Domain.Client.NavigationProperty<global::Sungero.Company.IEmployee>("Addressee", this);
                this._Addressee.ValueChanged += (sender, e) => { this.AddresseeChangedHandler(); };
                this.AddProperty(this._Addressee as global::Sungero.Domain.Client.IProperty);
              }



            protected override void InitObserversCollectionProperty()
            {
              this._Observers = new global::Sungero.Domain.Client.ListProperty<global::Sungero.Exchange.IExchangeDocumentProcessingTaskObservers>("Observers", this);
              this._Observers.ValueChanged += (sender, e) => { this.ObserversChangedHandler(); };
              this.AddProperty((global::Sungero.Domain.Client.IProperty)this._Observers);
              this.SetObserversEventHandlers();
            }


    public ExchangeDocumentProcessingTask()
    {
            this._Deadline = new global::Sungero.Domain.Client.SimpleProperty<global::System.DateTime?>("Deadline", this);
            this._Deadline.ValueChanged += (sender, e) => { this.DeadlineChangedHandler(); };
            this.AddProperty(this._Deadline);

            this._IncomeDate = new global::Sungero.Domain.Client.SimpleProperty<global::System.DateTime?>("IncomeDate", this);
            this._IncomeDate.ValueChanged += (sender, e) => { this.IncomeDateChangedHandler(); };
            this.AddProperty(this._IncomeDate);

            this._IsReadressed = new global::Sungero.Domain.Client.SimpleProperty<global::System.Boolean?>("IsReadressed", this);
            this._IsReadressed.ValueChanged += (sender, e) => { this.IsReadressedChangedHandler(); };
            this.AddProperty(this._IsReadressed);

            this._IsIncoming = new global::Sungero.Domain.Client.SimpleProperty<global::System.Boolean?>("IsIncoming", this);
            this._IsIncoming.ValueChanged += (sender, e) => { this.IsIncomingChangedHandler(); };
            this.AddProperty(this._IsIncoming);

            this.InitBoxNavigationProperty();

            this.InitCounterpartyNavigationProperty();

            this.InitExchangeServiceNavigationProperty();

            this.InitAssigneeNavigationProperty();

            this.InitAddresseeNavigationProperty();








      ((global::Sungero.Workflow.Interfaces.IWorkflowEntity)this).AttachmentCreated += this.AttachmentCreatedHandler;
      ((global::Sungero.Workflow.Interfaces.IWorkflowEntity)this).AttachmentAdded += this.AttachmentAddedHandler;
      ((global::Sungero.Workflow.Interfaces.IWorkflowEntity)this).AttachmentDeleted += this.AttachmentDeletedHandler;


    }

    #endregion

    #region Workflow attachments
    public virtual global::Sungero.Exchange.IExchangeDocumentProcessingTaskNeedSigningAttachments NeedSigning
    {
      get
      {
        return new global::Sungero.Exchange.Shared.ExchangeDocumentProcessingTaskNeedSigningAttachments(this);
      }
    }
    public virtual global::Sungero.Exchange.IExchangeDocumentProcessingTaskDontNeedSigningAttachments DontNeedSigning
    {
      get
      {
        return new global::Sungero.Exchange.Shared.ExchangeDocumentProcessingTaskDontNeedSigningAttachments(this);
      }
    }


    private void AttachmentCreatedHandler(object sender, global::Sungero.Workflow.Interfaces.AttachmentCreatedEventArgs e)
    {
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "NeedSigning")
      {
        ((global::Sungero.Exchange.ExchangeDocumentProcessingTaskSharedHandlers)this.SharedHandlers).NeedSigningCreated(e);
        return;
      }
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "DontNeedSigning")
      {
        ((global::Sungero.Exchange.ExchangeDocumentProcessingTaskSharedHandlers)this.SharedHandlers).DontNeedSigningCreated(e);
        return;
      }

    }

    private void AttachmentAddedHandler(object sender, global::Sungero.Workflow.Interfaces.AttachmentAddedEventArgs e)
    {
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "NeedSigning")
      {
        ((global::Sungero.Exchange.ExchangeDocumentProcessingTaskSharedHandlers)this.SharedHandlers).NeedSigningAdded(e);
        return;
      }
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "DontNeedSigning")
      {
        ((global::Sungero.Exchange.ExchangeDocumentProcessingTaskSharedHandlers)this.SharedHandlers).DontNeedSigningAdded(e);
        return;
      }

    }

    private void AttachmentDeletedHandler(object sender, global::Sungero.Workflow.Interfaces.AttachmentDeletedEventArgs e)
    {
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "NeedSigning")
      {
        ((global::Sungero.Exchange.ExchangeDocumentProcessingTaskSharedHandlers)this.SharedHandlers).NeedSigningDeleted(e);
        return;
      }
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "DontNeedSigning")
      {
        ((global::Sungero.Exchange.ExchangeDocumentProcessingTaskSharedHandlers)this.SharedHandlers).DontNeedSigningDeleted(e);
        return;
      }

    }
    #endregion

  }
}

// ==================================================================
// ExchangeDocumentProcessingTaskPresenter.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Exchange.Client
{
  public class ExchangeDocumentProcessingTaskPresenter<T> :
    global::Sungero.Workflow.Client.TaskPresenter<T>
    where T : class, global::Sungero.Exchange.IExchangeDocumentProcessingTask
  {
    #region Fields and properties




    #endregion

    #region Methods

    #endregion

    #region Framework events

    protected override void EntityPropertyChangedEventHandler(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
    {
      base.EntityPropertyChangedEventHandler(sender, e);
    }

    #endregion

              protected global::Sungero.Domain.Client.IEntityCollectionPresenter _BoxCollectionPresenter;
              public global::Sungero.Domain.Client.IEntityCollectionPresenter BoxCollectionPresenter
              {
          get { return this._BoxCollectionPresenter; }
        }
              protected global::Sungero.Domain.Client.IEntityCollectionPresenter _CounterpartyCollectionPresenter;
              public global::Sungero.Domain.Client.IEntityCollectionPresenter CounterpartyCollectionPresenter
              {
          get { return this._CounterpartyCollectionPresenter; }
        }
              protected global::Sungero.Domain.Client.IEntityCollectionPresenter _ExchangeServiceCollectionPresenter;
              public global::Sungero.Domain.Client.IEntityCollectionPresenter ExchangeServiceCollectionPresenter
              {
          get { return this._ExchangeServiceCollectionPresenter; }
        }
              protected global::Sungero.Domain.Client.IEntityCollectionPresenter _AssigneeCollectionPresenter;
              public global::Sungero.Domain.Client.IEntityCollectionPresenter AssigneeCollectionPresenter
              {
          get { return this._AssigneeCollectionPresenter; }
        }
              protected global::Sungero.Domain.Client.IEntityCollectionPresenter _AddresseeCollectionPresenter;
              public global::Sungero.Domain.Client.IEntityCollectionPresenter AddresseeCollectionPresenter
              {
          get { return this._AddresseeCollectionPresenter; }
        }



    #region Constructors

    private void Init()
    {
              this._AuthorCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationProperty<global::Sungero.CoreEntities.IUser>(() => this.Entity, typeof(T), "Author");

              this._StartedByCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.CoreEntities.IUser>(() => this.Entity.Id, typeof(T), "StartedBy");

              this._ParentTaskCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Workflow.ITask>(() => this.Entity.Id, typeof(T), "ParentTask");

              this._ParentAssignmentCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Workflow.IAssignmentBase>(() => this.Entity.Id, typeof(T), "ParentAssignment");

              this._MainTaskCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Workflow.ITask>(() => this.Entity.Id, typeof(T), "MainTask");

                  this._BoxCollectionPresenter = this.CreateCollectionPresenterForNavigationProperty<global::Sungero.ExchangeCore.IBoxBase>(global::System.Guid.Parse("48c42e46-0dce-4b93-876f-97670228d757"));
              this._BoxCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.ExchangeCore.IBoxBase>(() => this.Entity.Id, typeof(T), "Box");

                  this._CounterpartyCollectionPresenter = this.CreateCollectionPresenterForNavigationProperty<global::Sungero.Parties.ICounterparty>(global::System.Guid.Parse("4dfffe27-8e70-4551-b57a-738720dac8a8"));
              this._CounterpartyCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Parties.ICounterparty>(() => this.Entity.Id, typeof(T), "Counterparty");

                  this._ExchangeServiceCollectionPresenter = this.CreateCollectionPresenterForNavigationProperty<global::Sungero.ExchangeCore.IExchangeService>(global::System.Guid.Parse("2db207da-26f1-4962-ba13-eaa02bf7f67e"));
              this._ExchangeServiceCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.ExchangeCore.IExchangeService>(() => this.Entity.Id, typeof(T), "ExchangeService");

                  this._AssigneeCollectionPresenter = this.CreateCollectionPresenterForNavigationProperty<global::Sungero.Company.IEmployee>(global::System.Guid.Parse("ea46e9e5-7341-4b87-9871-55d5015c3038"));
              this._AssigneeCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Company.IEmployee>(() => this.Entity.Id, typeof(T), "Assignee");

                  this._AddresseeCollectionPresenter = this.CreateCollectionPresenterForNavigationProperty<global::Sungero.Company.IEmployee>(global::System.Guid.Parse("5d539547-2ace-4e8c-ba9f-646e350e309a"));
              this._AddresseeCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Company.IEmployee>(() => this.Entity.Id, typeof(T), "Addressee");


                        this._ObserversObserverCollectionPresenter
                        .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.CoreEntities.IRecipient>(() => this.Entity.Id, typeof(Sungero.Exchange.IExchangeDocumentProcessingTaskObservers), "Observer");



    }

    public ExchangeDocumentProcessingTaskPresenter()
    {
      this.Init();
    }

    #endregion
  }
}

// ==================================================================
// ExchangeDocumentProcessingTaskCollectionPresenter.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Exchange.Client
{
  public class ExchangeDocumentProcessingTaskCollectionPresenter<T> : 
    global::Sungero.Workflow.Client.TaskCollectionPresenter<T>
    where T: class, global::Sungero.Exchange.IExchangeDocumentProcessingTask
  {
    #region Actions



    #endregion

    #region Methods


    #endregion

    public ExchangeDocumentProcessingTaskCollectionPresenter(global::System.Linq.IQueryable<T> query, OnLookup onLookup)
      : base(query, onLookup)
    {
    }

    public ExchangeDocumentProcessingTaskCollectionPresenter(global::System.Linq.IQueryable<T> query)
      : this(query, null) { }

    public ExchangeDocumentProcessingTaskCollectionPresenter(OnLookup onLookup)
      : this(null, onLookup) { }

    public ExchangeDocumentProcessingTaskCollectionPresenter()
      : this(null, null) { }
  }
}

// ==================================================================
// ExchangeDocumentProcessingTaskRepositoryImplementer.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Exchange.Client
{ 
  public class ExchangeDocumentProcessingTaskRepositoryImplementer<T> : 
      global::Sungero.Workflow.Client.TaskRepositoryImplementer<T>,
      global::Sungero.Exchange.IExchangeDocumentProcessingTaskRepositoryImplementer<T>
      where T : global::Sungero.Exchange.IExchangeDocumentProcessingTask
    {
       public new global::Sungero.Exchange.IExchangeDocumentProcessingTaskAccessRights AccessRights
       {
          get { return (global::Sungero.Exchange.IExchangeDocumentProcessingTaskAccessRights)base.AccessRights; }
       }

       public new global::Sungero.Exchange.IExchangeDocumentProcessingTaskInfo Info
       {
          get { return (global::Sungero.Exchange.IExchangeDocumentProcessingTaskInfo)base.Info; }
       }

       protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
       {
         return new global::Sungero.Exchange.Client.ExchangeDocumentProcessingTaskTypeAccessRights(typeof(T));
       }
    }
}

// ==================================================================
// ExchangeDocumentProcessingTaskAccessRights.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Exchange.Client
{
  public class ExchangeDocumentProcessingTaskAccessRights : 
    Sungero.Workflow.Client.TaskAccessRights, Sungero.Exchange.IExchangeDocumentProcessingTaskAccessRights
  {

    public ExchangeDocumentProcessingTaskAccessRights(global::Sungero.Domain.Shared.IEntity entity) : base(entity)
    {
    }
  }

  public class ExchangeDocumentProcessingTaskTypeAccessRights : 
    Sungero.Workflow.Client.TaskTypeAccessRights, Sungero.Exchange.IExchangeDocumentProcessingTaskAccessRights
  {

    public ExchangeDocumentProcessingTaskTypeAccessRights(global::System.Type entityType) : base(entityType)
    {
    }
  }
}
