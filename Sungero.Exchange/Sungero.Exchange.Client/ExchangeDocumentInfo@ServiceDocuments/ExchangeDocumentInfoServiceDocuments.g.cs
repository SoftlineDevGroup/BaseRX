
// ==================================================================
// ExchangeDocumentInfoServiceDocuments.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Exchange.Client
{
  public class ExchangeDocumentInfoServiceDocuments :
    global::Sungero.Domain.Client.ChildEntityProxy, global::Sungero.Exchange.IExchangeDocumentInfoServiceDocuments
  {
    #region Fields and properties

    public static new readonly global::System.Guid ClassTypeGuid = global::System.Guid.Parse("4d60313f-8a20-4c5c-be36-0904819e0627");

    public override global::System.Guid TypeGuid
    {
      get { return global::Sungero.Exchange.Client.ExchangeDocumentInfoServiceDocuments.ClassTypeGuid; }
    }

    public override string TypeName
    {
      get { return "Sungero.Exchange.IExchangeDocumentInfoServiceDocuments, Sungero.Domain.Interfaces"; }
    }

    public new global::Sungero.Exchange.IExchangeDocumentInfoServiceDocumentsState State
    {
      get
      {
        return (global::Sungero.Exchange.IExchangeDocumentInfoServiceDocumentsState)base.State;
      }
    }

    protected override global::Sungero.Domain.Shared.IEntityState CreateState()
    {
      return new global::Sungero.Exchange.Shared.ExchangeDocumentInfoServiceDocumentsState(this);
    }

    public new global::Sungero.Exchange.IExchangeDocumentInfoServiceDocumentsInfo Info
    {
      get
      {
        return (global::Sungero.Exchange.IExchangeDocumentInfoServiceDocumentsInfo)base.Info;
      }
    }

    protected global::Sungero.Domain.Client.NavigationProperty<global::Sungero.Exchange.IExchangeDocumentInfo> _ExchangeDocumentInfo;

    public global::Sungero.Exchange.IExchangeDocumentInfo ExchangeDocumentInfo
    {
      get { return this._ExchangeDocumentInfo.Value; }
      set { this._ExchangeDocumentInfo.Value = value; }
    }

    public override global::Sungero.Domain.Shared.IEntity RootEntity
    {
      get { return this.ExchangeDocumentInfo; }
      set { this.ExchangeDocumentInfo = (global::Sungero.Exchange.IExchangeDocumentInfo)value; }
    }

        protected global::Sungero.Domain.Client.EnumSimpleProperty<global::Sungero.Core.Enumeration?> _DocumentType;

        public virtual global::Sungero.Core.Enumeration? DocumentType
        {
          get { return this._DocumentType.Value; }
          set { this._DocumentType.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.String> _DocumentId;

        public virtual global::System.String DocumentId
        {
          get { return this._DocumentId.Value; }
          set { this._DocumentId.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.String> _CounterpartyId;

        public virtual global::System.String CounterpartyId
        {
          get { return this._CounterpartyId.Value; }
          set { this._CounterpartyId.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.DateTime?> _Date;

        public virtual global::System.DateTime? Date
        {
          get { return this._Date.Value; }
          set { this._Date.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.String> _ParentDocumentId;

        public virtual global::System.String ParentDocumentId
        {
          get { return this._ParentDocumentId.Value; }
          set { this._ParentDocumentId.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.String> _GeneratedName;

        public virtual global::System.String GeneratedName
        {
          get { return this._GeneratedName.Value; }
          set { this._GeneratedName.Value = value; }
        }


        private static global::Sungero.Domain.Shared.EnumerationItems _DocumentTypeItems = new global::Sungero.Domain.Shared.EnumerationItems(
          null,
          typeof(global::Sungero.Exchange.ExchangeDocumentInfoServiceDocuments.DocumentType),
          typeof(global::Sungero.Exchange.Client.ExchangeDocumentInfoServiceDocuments),
          "DocumentType");

        public static global::Sungero.Domain.Shared.EnumerationItems DocumentTypeItems
        {
          get { return global::Sungero.Exchange.Client.ExchangeDocumentInfoServiceDocuments._DocumentTypeItems; }
        }

        public virtual global::Sungero.Domain.Shared.EnumerationItems DocumentTypeAllowedItems
        {
          get { return global::Sungero.Exchange.Client.ExchangeDocumentInfoServiceDocuments.DocumentTypeItems; }
        }




              protected global::Sungero.Domain.Client.INavigationProperty<global::Sungero.CoreEntities.ICertificate> _Certificate;

              public virtual global::Sungero.CoreEntities.ICertificate Certificate
              {
              get
              {
                return this._Certificate.Value as global::Sungero.CoreEntities.ICertificate;
              }

              set
              {
                (this._Certificate as global::Sungero.Domain.Client.IProperty).Value = value;
              }
            }







      protected global::Sungero.Domain.Client.DataProperty _Body;

      [global::Sungero.Domain.Shared.DoNotSavePreviousValue]
      public virtual global::System.Byte[] Body
      {
        get { return this._Body.Value; }
        set { this._Body.Value = value; }
      }
      protected global::Sungero.Domain.Client.DataProperty _Sign;

      [global::Sungero.Domain.Shared.DoNotSavePreviousValue]
      public virtual global::System.Byte[] Sign
      {
        get { return this._Sign.Value; }
        set { this._Sign.Value = value; }
      }
      protected global::Sungero.Domain.Client.DataProperty _SecondSign;

      [global::Sungero.Domain.Shared.DoNotSavePreviousValue]
      public virtual global::System.Byte[] SecondSign
      {
        get { return this._SecondSign.Value; }
        set { this._SecondSign.Value = value; }
      }




    #endregion

    #region Methods

    protected override object CreateHandlers() {
      return new global::Sungero.Exchange.ExchangeDocumentInfoServiceDocumentsClientHandlers(this);
    }
    protected override object CreateSharedHandlers() {
      return new global::Sungero.Exchange.ExchangeDocumentInfoServiceDocumentsSharedHandlers(this);
    }

    #endregion

    #region Framework events

    protected void DocumentTypeChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.EnumerationPropertyChangedEventArgs(this.State.Properties.DocumentType, this.DocumentType, this);
     ((global::Sungero.Exchange.ExchangeDocumentInfoServiceDocumentsSharedHandlers)this.SharedHandlers).ServiceDocumentsDocumentTypeChanged(args);
    }

    protected void DocumentIdChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.DocumentId, this.DocumentId, this);
     ((global::Sungero.Exchange.ExchangeDocumentInfoServiceDocumentsSharedHandlers)this.SharedHandlers).ServiceDocumentsDocumentIdChanged(args);
    }

    protected void CounterpartyIdChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.CounterpartyId, this.CounterpartyId, this);
     ((global::Sungero.Exchange.ExchangeDocumentInfoServiceDocumentsSharedHandlers)this.SharedHandlers).ServiceDocumentsCounterpartyIdChanged(args);
    }

    protected void DateChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.DateTimePropertyChangedEventArgs(this.State.Properties.Date, this.Date, this);
     ((global::Sungero.Exchange.ExchangeDocumentInfoServiceDocumentsSharedHandlers)this.SharedHandlers).ServiceDocumentsDateChanged(args);
    }

    protected void BodyChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.DataPropertyChangedEventArgs(this.State.Properties.Body, this.Body, this);
     ((global::Sungero.Exchange.ExchangeDocumentInfoServiceDocumentsSharedHandlers)this.SharedHandlers).ServiceDocumentsBodyChanged(args);
    }

    protected void SignChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.DataPropertyChangedEventArgs(this.State.Properties.Sign, this.Sign, this);
     ((global::Sungero.Exchange.ExchangeDocumentInfoServiceDocumentsSharedHandlers)this.SharedHandlers).ServiceDocumentsSignChanged(args);
    }

    protected void ParentDocumentIdChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.ParentDocumentId, this.ParentDocumentId, this);
     ((global::Sungero.Exchange.ExchangeDocumentInfoServiceDocumentsSharedHandlers)this.SharedHandlers).ServiceDocumentsParentDocumentIdChanged(args);
    }

    protected void SecondSignChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.DataPropertyChangedEventArgs(this.State.Properties.SecondSign, this.SecondSign, this);
     ((global::Sungero.Exchange.ExchangeDocumentInfoServiceDocumentsSharedHandlers)this.SharedHandlers).ServiceDocumentsSecondSignChanged(args);
    }

    protected void GeneratedNameChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.GeneratedName, this.GeneratedName, this);
     ((global::Sungero.Exchange.ExchangeDocumentInfoServiceDocumentsSharedHandlers)this.SharedHandlers).ServiceDocumentsGeneratedNameChanged(args);
    }

    protected void CertificateChangedHandler()
    {
      var args = new global::Sungero.Exchange.Shared.ExchangeDocumentInfoServiceDocumentsCertificateChangedEventArgs(this.State.Properties.Certificate, this.Certificate, this);
     ((global::Sungero.Exchange.ExchangeDocumentInfoServiceDocumentsSharedHandlers)this.SharedHandlers).ServiceDocumentsCertificateChanged(args);
    }



  protected global::Sungero.Core.Enumeration? DocumentTypeValueInputHandler(global::Sungero.Core.Enumeration? value)
  {
    var args = new global::Sungero.Presentation.EnumerationValueInputEventArgs(this.DocumentType, value, this, this.Info.Properties.DocumentType);
    ((global::Sungero.Exchange.ExchangeDocumentInfoServiceDocumentsClientHandlers)this.Handlers).ServiceDocumentsDocumentTypeValueInput(args);
    return args.NewValue;
  }

  protected global::System.String DocumentIdValueInputHandler(global::System.String value)
  {
    var args = new global::Sungero.Presentation.StringValueInputEventArgs(this.DocumentId, value, this, this.Info.Properties.DocumentId);
    ((global::Sungero.Exchange.ExchangeDocumentInfoServiceDocumentsClientHandlers)this.Handlers).ServiceDocumentsDocumentIdValueInput(args);
    return args.NewValue;
  }

  protected global::System.String CounterpartyIdValueInputHandler(global::System.String value)
  {
    var args = new global::Sungero.Presentation.StringValueInputEventArgs(this.CounterpartyId, value, this, this.Info.Properties.CounterpartyId);
    ((global::Sungero.Exchange.ExchangeDocumentInfoServiceDocumentsClientHandlers)this.Handlers).ServiceDocumentsCounterpartyIdValueInput(args);
    return args.NewValue;
  }

  protected global::System.DateTime? DateValueInputHandler(global::System.DateTime? value)
  {
    var args = new global::Sungero.Presentation.DateTimeValueInputEventArgs(this.Date, value, this, this.Info.Properties.Date);
    ((global::Sungero.Exchange.ExchangeDocumentInfoServiceDocumentsClientHandlers)this.Handlers).ServiceDocumentsDateValueInput(args);
    return args.NewValue;
  }



  protected global::System.String ParentDocumentIdValueInputHandler(global::System.String value)
  {
    var args = new global::Sungero.Presentation.StringValueInputEventArgs(this.ParentDocumentId, value, this, this.Info.Properties.ParentDocumentId);
    ((global::Sungero.Exchange.ExchangeDocumentInfoServiceDocumentsClientHandlers)this.Handlers).ServiceDocumentsParentDocumentIdValueInput(args);
    return args.NewValue;
  }


  protected global::System.String GeneratedNameValueInputHandler(global::System.String value)
  {
    var args = new global::Sungero.Presentation.StringValueInputEventArgs(this.GeneratedName, value, this, this.Info.Properties.GeneratedName);
    ((global::Sungero.Exchange.ExchangeDocumentInfoServiceDocumentsClientHandlers)this.Handlers).ServiceDocumentsGeneratedNameValueInput(args);
    return args.NewValue;
  }

  protected global::Sungero.CoreEntities.ICertificate CertificateValueInputHandler(global::Sungero.CoreEntities.ICertificate value)
  {
    var args = new global::Sungero.Exchange.Client.ExchangeDocumentInfoServiceDocumentsCertificateValueInputEventArgs(this.Certificate, value, this, this.Info.Properties.Certificate);
    ((global::Sungero.Exchange.ExchangeDocumentInfoServiceDocumentsClientHandlers)this.Handlers).ServiceDocumentsCertificateValueInput(args);
    return args.NewValue;
  }


  protected global::System.Collections.Generic.IEnumerable<global::Sungero.Core.Enumeration> DocumentTypeFilteringHandler()
  {
    return ((global::Sungero.Exchange.ExchangeDocumentInfoServiceDocumentsClientHandlers)this.Handlers).ServiceDocumentsDocumentTypeFiltering(this.DocumentTypeAllowedItems);
  }











    #endregion

    #region Constructors



              protected virtual void InitCertificateNavigationProperty()
              {
                this._Certificate = new global::Sungero.Domain.Client.NavigationProperty<global::Sungero.CoreEntities.ICertificate>("Certificate", this);
                this._Certificate.ValueChanged += (sender, e) => { this.CertificateChangedHandler(); };
                this.AddProperty(this._Certificate as global::Sungero.Domain.Client.IProperty);
              }




    public ExchangeDocumentInfoServiceDocuments()
    {
      this._ExchangeDocumentInfo = new global::Sungero.Domain.Client.NavigationProperty<global::Sungero.Exchange.IExchangeDocumentInfo>("ExchangeDocumentInfo", this, true);

            this._DocumentType = new global::Sungero.Domain.Client.EnumSimpleProperty<global::Sungero.Core.Enumeration?>("DocumentType", this);
            this._DocumentType.ValueChanged += (sender, e) => { this.DocumentTypeChangedHandler(); };
            this.AddProperty(this._DocumentType);

            this._DocumentId = new global::Sungero.Domain.Client.SimpleProperty<global::System.String>("DocumentId", this);
            this._DocumentId.ValueChanged += (sender, e) => { this.DocumentIdChangedHandler(); };
            this.AddProperty(this._DocumentId);

            this._CounterpartyId = new global::Sungero.Domain.Client.SimpleProperty<global::System.String>("CounterpartyId", this);
            this._CounterpartyId.ValueChanged += (sender, e) => { this.CounterpartyIdChangedHandler(); };
            this.AddProperty(this._CounterpartyId);

            this._Date = new global::Sungero.Domain.Client.SimpleProperty<global::System.DateTime?>("Date", this);
            this._Date.ValueChanged += (sender, e) => { this.DateChangedHandler(); };
            this.AddProperty(this._Date);

            this._ParentDocumentId = new global::Sungero.Domain.Client.SimpleProperty<global::System.String>("ParentDocumentId", this);
            this._ParentDocumentId.ValueChanged += (sender, e) => { this.ParentDocumentIdChangedHandler(); };
            this.AddProperty(this._ParentDocumentId);

            this._GeneratedName = new global::Sungero.Domain.Client.SimpleProperty<global::System.String>("GeneratedName", this);
            this._GeneratedName.ValueChanged += (sender, e) => { this.GeneratedNameChangedHandler(); };
            this.AddProperty(this._GeneratedName);

            this.InitCertificateNavigationProperty();




            this._Body = new global::Sungero.Domain.Client.DataProperty("Body", this);
            this._Body.ValueChanged += (sender, e) => { this.BodyChangedHandler(); };
            this.AddProperty(this._Body);

            this._Sign = new global::Sungero.Domain.Client.DataProperty("Sign", this);
            this._Sign.ValueChanged += (sender, e) => { this.SignChangedHandler(); };
            this.AddProperty(this._Sign);

            this._SecondSign = new global::Sungero.Domain.Client.DataProperty("SecondSign", this);
            this._SecondSign.ValueChanged += (sender, e) => { this.SecondSignChangedHandler(); };
            this.AddProperty(this._SecondSign);





    }

    #endregion

  }
}
