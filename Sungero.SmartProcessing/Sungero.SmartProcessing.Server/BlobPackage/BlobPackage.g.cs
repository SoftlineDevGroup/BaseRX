
// ==================================================================
// BlobPackage.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.SmartProcessing.Server
{
    public class BlobPackageFilter<T> :
      global::Sungero.Domain.EntityFilterBase<T>
      where T : class, global::Sungero.SmartProcessing.IBlobPackage
    {
      protected new global::Sungero.SmartProcessing.IBlobPackageFilterState Filter { get; private set; }

      private global::Sungero.SmartProcessing.IBlobPackageFilterState filter
      {
        get
        {
          return this.Filter;
        }
      }

      protected override global::System.Linq.IQueryable<T> ApplyAppliedFilter(global::System.Linq.IQueryable<T> query)
      {
        return base.ApplyAppliedFilter(query);
      }

      public BlobPackageFilter(global::Sungero.SmartProcessing.IBlobPackageFilterState filter)
      : base()
      {
        this.Filter = filter;
      }

      protected BlobPackageFilter()
      {
      }
    }
      public class BlobPackageUiFilter<T> :
        global::Sungero.Domain.EntityUiFilterBase<T>
        where T : class, global::Sungero.SmartProcessing.IBlobPackage
      {
        protected override global::System.Linq.IQueryable<T> ApplyAppliedFilter(global::System.Linq.IQueryable<T> query)
        {
          return base.ApplyAppliedFilter(query);
        }
      }

    public class BlobPackageSearchDialogModel : global::Sungero.CoreEntities.Server.DatabookEntrySearchDialogModel
        {
                  public override global::System.Int32? Id { get; protected set; }



                  public virtual global::System.String Name { get; protected set; }
                  public virtual global::System.String PackageFolderPath { get; protected set; }
                  public virtual global::System.String SenderLine { get; protected set; }
                  public virtual global::System.String FromName { get; protected set; }
                  public virtual global::System.String FromAddress { get; protected set; }
                  public virtual global::System.String Subject { get; protected set; }


                  public virtual global::System.Collections.Generic.IEnumerable<Sungero.Core.Enumeration> SourceType { get; protected set; }
                  public virtual global::System.Collections.Generic.IEnumerable<Sungero.Core.Enumeration> ProcessState { get; protected set; }


                   [Sungero.Domain.Shared.HideInDevStudio()]
                   public BlobPackageBlobsModel Blobs { get; protected set; }
                   [Sungero.Domain.Shared.HideInDevStudio()]
                   public BlobPackageToModel To { get; protected set; }
                   [Sungero.Domain.Shared.HideInDevStudio()]
                   public BlobPackageCCModel CC { get; protected set; }

        }


      public class BlobPackageBlobsModel : global::Sungero.Domain.CollectionPropertySearchDialogModel
          {
            public override global::System.Int32? Id { get; protected set; }


         }
      public class BlobPackageToModel : global::Sungero.Domain.CollectionPropertySearchDialogModel
          {
            public override global::System.Int32? Id { get; protected set; }


         }
      public class BlobPackageCCModel : global::Sungero.Domain.CollectionPropertySearchDialogModel
          {
            public override global::System.Int32? Id { get; protected set; }


         }



  public class BlobPackageFilterForMailBodyBlob<TQueryEntity, TSourceEntity>
    : global::Sungero.Domain.EntityPropertyFilterBase<TQueryEntity, TSourceEntity>
    where TQueryEntity : class, global::Sungero.SmartProcessing.IBlob
    where TSourceEntity : class, global::Sungero.SmartProcessing.IBlobPackage
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, TSourceEntity sourceEntity)
    {
      var args = new global::Sungero.Domain.PropertyFilteringEventArgs(sourceEntity);
      var result = new global::Sungero.SmartProcessing.BlobPackageMailBodyBlobPropertyFilteringServerHandler<TQueryEntity>(sourceEntity).MailBodyBlobFiltering(query, args);
      if (args.DisableUiFiltering)
        global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public BlobPackageFilterForMailBodyBlob(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class BlobPackageSearchFilterForMailBodyBlob<TQueryEntity>
    : global::Sungero.Domain.SearchDialogPropertyFilter<TQueryEntity>
    where TQueryEntity : class, global::Sungero.SmartProcessing.IBlob
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, System.Guid entityType)
    {
      var args = new global::Sungero.Domain.PropertySearchDialogFilteringEventArgs(entityType);
      var result = new global::Sungero.SmartProcessing.BlobPackageMailBodyBlobSearchPropertyFilteringServerHandler<TQueryEntity>().MailBodyBlobSearchDialogFiltering(query, args);
      if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public BlobPackageSearchFilterForMailBodyBlob(string propertyName)
      : base(propertyName)
    {
    }
  }



  [global::Sungero.Domain.Filter(typeof(global::Sungero.SmartProcessing.Server.BlobPackageFilter<global::Sungero.SmartProcessing.IBlobPackage>))]
  [global::Sungero.Domain.UiFilter(typeof(global::Sungero.SmartProcessing.Server.BlobPackageUiFilter<global::Sungero.SmartProcessing.IBlobPackage>))]
  [global::Sungero.Domain.PropertyFilter(typeof(global::Sungero.SmartProcessing.Server.BlobPackageFilterForMailBodyBlob<global::Sungero.SmartProcessing.IBlob, global::Sungero.SmartProcessing.IBlobPackage>), "MailBodyBlob")]
  [global::Sungero.Domain.SearchPropertyFilter(typeof(global::Sungero.SmartProcessing.Server.BlobPackageSearchFilterForMailBodyBlob<global::Sungero.SmartProcessing.IBlob>), "MailBodyBlob")]


  public class BlobPackage :
    global::Sungero.CoreEntities.Server.DatabookEntry, global::Sungero.SmartProcessing.IBlobPackage
  {
    public static new readonly global::System.Guid ClassTypeGuid = global::System.Guid.Parse("1e9415ec-6ba8-46b5-b864-94b4385ffb52");

    public override global::System.Guid TypeGuid
    {
      get { return global::Sungero.SmartProcessing.Server.BlobPackage.ClassTypeGuid; }
    }

    public override string TypeName
    {
      get { return "Sungero.SmartProcessing.IBlobPackage, Sungero.Domain.Interfaces"; }
    }

    public override string DisplayValue
    {
      get { return this.Name; }
      set { this.Name = value; }
    }

    public new virtual global::Sungero.SmartProcessing.IBlobPackageState State
    {
      get { return (global::Sungero.SmartProcessing.IBlobPackageState)base.State; }
    }

    protected override global::Sungero.Domain.Shared.IEntityState CreateState()
    {
      return new global::Sungero.SmartProcessing.Shared.BlobPackageState(this);
    }

    public new virtual global::Sungero.SmartProcessing.IBlobPackageInfo Info
    {
      get { return (global::Sungero.SmartProcessing.IBlobPackageInfo)base.Info; }
    }

    public new virtual global::Sungero.SmartProcessing.IBlobPackageAccessRights AccessRights
    {
      get { return (global::Sungero.SmartProcessing.IBlobPackageAccessRights)base.AccessRights; }
    }

    protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
    {
      return new global::Sungero.SmartProcessing.Server.BlobPackageAccessRights(this);
    }

    protected override global::Sungero.Domain.EntityFunctions CreateServerFunctions()
    {
      return new global::Sungero.SmartProcessing.Server.BlobPackageFunctions(this);
    }

    protected override global::Sungero.Domain.Shared.EntityFunctions CreateSharedFunctions()
    {
      return new global::Sungero.SmartProcessing.Shared.BlobPackageFunctions(this);
    }

    protected override object CreateHandlers() {
      return new global::Sungero.SmartProcessing.BlobPackageServerHandlers(this);
    }

    protected override object CreateSharedHandlers() {
      return new global::Sungero.SmartProcessing.BlobPackageSharedHandlers(this);
    }

    private global::System.String _Name;
    public virtual global::System.String Name
    {
      get
      {
        return this._Name;
      }

      set
      {
        this.SetPropertyValue("Name", this._Name, value, (propertyValue) => { this._Name = propertyValue; }, this.NameChangedHandler);
      }
    }
    private global::System.String _PackageFolderPath;
    public virtual global::System.String PackageFolderPath
    {
      get
      {
        return this._PackageFolderPath;
      }

      set
      {
        this.SetPropertyValue("PackageFolderPath", this._PackageFolderPath, value, (propertyValue) => { this._PackageFolderPath = propertyValue; }, this.PackageFolderPathChangedHandler);
      }
    }
    private global::System.String _SenderLine;
    public virtual global::System.String SenderLine
    {
      get
      {
        return this._SenderLine;
      }

      set
      {
        this.SetPropertyValue("SenderLine", this._SenderLine, value, (propertyValue) => { this._SenderLine = propertyValue; }, this.SenderLineChangedHandler);
      }
    }
    private global::System.String _FromName;
    public virtual global::System.String FromName
    {
      get
      {
        return this._FromName;
      }

      set
      {
        this.SetPropertyValue("FromName", this._FromName, value, (propertyValue) => { this._FromName = propertyValue; }, this.FromNameChangedHandler);
      }
    }
    private global::System.String _FromAddress;
    public virtual global::System.String FromAddress
    {
      get
      {
        return this._FromAddress;
      }

      set
      {
        this.SetPropertyValue("FromAddress", this._FromAddress, value, (propertyValue) => { this._FromAddress = propertyValue; }, this.FromAddressChangedHandler);
      }
    }
    private global::System.String _Subject;
    public virtual global::System.String Subject
    {
      get
      {
        return this._Subject;
      }

      set
      {
        this.SetPropertyValue("Subject", this._Subject, value, (propertyValue) => { this._Subject = propertyValue; }, this.SubjectChangedHandler);
      }
    }






    private static global::Sungero.Domain.Shared.EnumerationItems _SourceTypeItems = new global::Sungero.Domain.Shared.EnumerationItems(
      null,
      typeof(global::Sungero.SmartProcessing.BlobPackage.SourceType),
      typeof(global::Sungero.SmartProcessing.Server.BlobPackage),
      "SourceType");

    public static global::Sungero.Domain.Shared.EnumerationItems SourceTypeItems
    {
      get { return global::Sungero.SmartProcessing.Server.BlobPackage._SourceTypeItems; }
    }

    public virtual global::Sungero.Domain.Shared.EnumerationItems SourceTypeAllowedItems
    {
      get { return global::Sungero.SmartProcessing.Server.BlobPackage.SourceTypeItems; }
    }

    private global::Sungero.Core.Enumeration? _SourceType;

    public virtual global::Sungero.Core.Enumeration? SourceType
    {
      get { return this._SourceType; }
      set { this.SetEnumPropertyValue("SourceType", this._SourceType, value, (propertyValue) => { this._SourceType = propertyValue; }, this.SourceTypeChangedHandler, this.SourceTypeAllowedItems); }
    }
    private static global::Sungero.Domain.Shared.EnumerationItems _ProcessStateItems = new global::Sungero.Domain.Shared.EnumerationItems(
      null,
      typeof(global::Sungero.SmartProcessing.BlobPackage.ProcessState),
      typeof(global::Sungero.SmartProcessing.Server.BlobPackage),
      "ProcessState");

    public static global::Sungero.Domain.Shared.EnumerationItems ProcessStateItems
    {
      get { return global::Sungero.SmartProcessing.Server.BlobPackage._ProcessStateItems; }
    }

    public virtual global::Sungero.Domain.Shared.EnumerationItems ProcessStateAllowedItems
    {
      get { return global::Sungero.SmartProcessing.Server.BlobPackage.ProcessStateItems; }
    }

    private global::Sungero.Core.Enumeration? _ProcessState;

    public virtual global::Sungero.Core.Enumeration? ProcessState
    {
      get { return this._ProcessState; }
      set { this.SetEnumPropertyValue("ProcessState", this._ProcessState, value, (propertyValue) => { this._ProcessState = propertyValue; }, this.ProcessStateChangedHandler, this.ProcessStateAllowedItems); }
    }


    private global::Sungero.SmartProcessing.IBlob _MailBodyBlob;
    public virtual global::Sungero.SmartProcessing.IBlob MailBodyBlob
    {
      get
      {
        return this._MailBodyBlob;
      }

      set
      {
        this.SetPropertyValue("MailBodyBlob", this._MailBodyBlob, value, (propertyValue) => { this._MailBodyBlob = propertyValue; }, this.MailBodyBlobChangedHandler);
      }
    }


    protected global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.SmartProcessing.IBlobPackageBlobs> _Blobs;

    public virtual global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.SmartProcessing.IBlobPackageBlobs> Blobs
    {
      get
      {
        if (this._Blobs == null)
        {
          this._Blobs = this.CreateBlobsCollection();
          this.SetBlobsEventHandlers();
        }
        return this._Blobs;
      }

      set
      {
        if (this._Blobs != null)
          this.UnsetChildCollectionEventHandlers(this._Blobs);

        this._Blobs = value;
        this.SetBlobsEventHandlers();
      }
    }

    protected virtual global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.SmartProcessing.IBlobPackageBlobs> CreateBlobsCollection()
    {
      return new global::Sungero.Domain.ChildEntityCollection<global::Sungero.SmartProcessing.IBlobPackageBlobs>() { RootEntity = this };
    }

    private void SetBlobsEventHandlers()
    {
      this.SetChildCollectionEventHandlers(this._Blobs, "Blobs");

      var changeNotifier = (global::Sungero.Domain.Shared.INotifyChildEntityCollectionChanged)this._Blobs;
      changeNotifier.Added += this.BlobsAddedHandler;
      changeNotifier.Deleted += this.BlobsDeletedHandler;
      changeNotifier.Added += this.BlobsCollectionUpdateEventHandler;
      changeNotifier.Deleted += this.BlobsCollectionUpdateEventHandler;
      changeNotifier.Updated += this.BlobsCollectionUpdateEventHandler;
    }

    private void BlobsCollectionUpdateEventHandler(object sender, global::Sungero.Domain.Shared.BaseChildEntityEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      if (this.IsPropertyChangedHandlerEnabled)
        this.BlobsChangedHandler();
    }
    protected global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.SmartProcessing.IBlobPackageTo> _To;

    public virtual global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.SmartProcessing.IBlobPackageTo> To
    {
      get
      {
        if (this._To == null)
        {
          this._To = this.CreateToCollection();
          this.SetToEventHandlers();
        }
        return this._To;
      }

      set
      {
        if (this._To != null)
          this.UnsetChildCollectionEventHandlers(this._To);

        this._To = value;
        this.SetToEventHandlers();
      }
    }

    protected virtual global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.SmartProcessing.IBlobPackageTo> CreateToCollection()
    {
      return new global::Sungero.Domain.ChildEntityCollection<global::Sungero.SmartProcessing.IBlobPackageTo>() { RootEntity = this };
    }

    private void SetToEventHandlers()
    {
      this.SetChildCollectionEventHandlers(this._To, "To");

      var changeNotifier = (global::Sungero.Domain.Shared.INotifyChildEntityCollectionChanged)this._To;
      changeNotifier.Added += this.ToAddedHandler;
      changeNotifier.Deleted += this.ToDeletedHandler;
      changeNotifier.Added += this.ToCollectionUpdateEventHandler;
      changeNotifier.Deleted += this.ToCollectionUpdateEventHandler;
      changeNotifier.Updated += this.ToCollectionUpdateEventHandler;
    }

    private void ToCollectionUpdateEventHandler(object sender, global::Sungero.Domain.Shared.BaseChildEntityEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      if (this.IsPropertyChangedHandlerEnabled)
        this.ToChangedHandler();
    }
    protected global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.SmartProcessing.IBlobPackageCC> _CC;

    public virtual global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.SmartProcessing.IBlobPackageCC> CC
    {
      get
      {
        if (this._CC == null)
        {
          this._CC = this.CreateCCCollection();
          this.SetCCEventHandlers();
        }
        return this._CC;
      }

      set
      {
        if (this._CC != null)
          this.UnsetChildCollectionEventHandlers(this._CC);

        this._CC = value;
        this.SetCCEventHandlers();
      }
    }

    protected virtual global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.SmartProcessing.IBlobPackageCC> CreateCCCollection()
    {
      return new global::Sungero.Domain.ChildEntityCollection<global::Sungero.SmartProcessing.IBlobPackageCC>() { RootEntity = this };
    }

    private void SetCCEventHandlers()
    {
      this.SetChildCollectionEventHandlers(this._CC, "CC");

      var changeNotifier = (global::Sungero.Domain.Shared.INotifyChildEntityCollectionChanged)this._CC;
      changeNotifier.Added += this.CCAddedHandler;
      changeNotifier.Deleted += this.CCDeletedHandler;
      changeNotifier.Added += this.CCCollectionUpdateEventHandler;
      changeNotifier.Deleted += this.CCCollectionUpdateEventHandler;
      changeNotifier.Updated += this.CCCollectionUpdateEventHandler;
    }

    private void CCCollectionUpdateEventHandler(object sender, global::Sungero.Domain.Shared.BaseChildEntityEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      if (this.IsPropertyChangedHandlerEnabled)
        this.CCChangedHandler();
    }



    protected override global::Sungero.Domain.Shared.EntityCreatingFromServerHandler CreateCreatingFromServerHandler(
      global::Sungero.Domain.Shared.IEntity entitySource)
    {
      return new global::Sungero.SmartProcessing.BlobPackageCreatingFromServerHandler((global::Sungero.SmartProcessing.IBlobPackage)entitySource, this.Info);
    }

    #region Framework events

    protected void NameChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.Name, this.Name, this);
     ((global::Sungero.SmartProcessing.BlobPackageSharedHandlers)this.SharedHandlers).NameChanged(args);
    }

    protected void PackageFolderPathChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.PackageFolderPath, this.PackageFolderPath, this);
     ((global::Sungero.SmartProcessing.BlobPackageSharedHandlers)this.SharedHandlers).PackageFolderPathChanged(args);
    }

    protected void SenderLineChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.SenderLine, this.SenderLine, this);
     ((global::Sungero.SmartProcessing.BlobPackageSharedHandlers)this.SharedHandlers).SenderLineChanged(args);
    }

    protected void SourceTypeChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.EnumerationPropertyChangedEventArgs(this.State.Properties.SourceType, this.SourceType, this);
     ((global::Sungero.SmartProcessing.BlobPackageSharedHandlers)this.SharedHandlers).SourceTypeChanged(args);
    }

    protected void BlobsChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.CollectionPropertyChangedEventArgs(this);
     ((global::Sungero.SmartProcessing.BlobPackageSharedHandlers)this.SharedHandlers).BlobsChanged(args);
    }

    protected void FromNameChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.FromName, this.FromName, this);
     ((global::Sungero.SmartProcessing.BlobPackageSharedHandlers)this.SharedHandlers).FromNameChanged(args);
    }

    protected void FromAddressChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.FromAddress, this.FromAddress, this);
     ((global::Sungero.SmartProcessing.BlobPackageSharedHandlers)this.SharedHandlers).FromAddressChanged(args);
    }

    protected void ToChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.CollectionPropertyChangedEventArgs(this);
     ((global::Sungero.SmartProcessing.BlobPackageSharedHandlers)this.SharedHandlers).ToChanged(args);
    }

    protected void CCChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.CollectionPropertyChangedEventArgs(this);
     ((global::Sungero.SmartProcessing.BlobPackageSharedHandlers)this.SharedHandlers).CCChanged(args);
    }

    protected void MailBodyBlobChangedHandler()
    {
      var args = new global::Sungero.SmartProcessing.Shared.BlobPackageMailBodyBlobChangedEventArgs(this.State.Properties.MailBodyBlob, this.MailBodyBlob, this);
     ((global::Sungero.SmartProcessing.BlobPackageSharedHandlers)this.SharedHandlers).MailBodyBlobChanged(args);
    }

    protected void SubjectChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.Subject, this.Subject, this);
     ((global::Sungero.SmartProcessing.BlobPackageSharedHandlers)this.SharedHandlers).SubjectChanged(args);
    }

    protected void ProcessStateChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.EnumerationPropertyChangedEventArgs(this.State.Properties.ProcessState, this.ProcessState, this);
     ((global::Sungero.SmartProcessing.BlobPackageSharedHandlers)this.SharedHandlers).ProcessStateChanged(args);
    }



    protected virtual global::Sungero.SmartProcessing.BlobPackageBlobsSharedCollectionHandlers CreateBlobsAddedHandler(global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.SmartProcessing.BlobPackageBlobsSharedCollectionHandlers(this, e.Value, null, e.Source);
    }

    protected virtual global::Sungero.SmartProcessing.BlobPackageBlobsSharedCollectionHandlers CreateBlobsDeletedHandler(global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.SmartProcessing.BlobPackageBlobsSharedCollectionHandlers(this, null, e.Value, null);
    }

    protected virtual void BlobsAddedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {  
      var collectionHandlers = this.CreateBlobsAddedHandler(e);
      if (collectionHandlers != null)
      {
        var args = new global::Sungero.Domain.Shared.CollectionPropertyAddedEventArgs(this);
        collectionHandlers.BlobsAdded(args);
      }
    }

    protected virtual void BlobsDeletedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {  
      var collectionHandlers = this.CreateBlobsDeletedHandler(e);
      if (collectionHandlers != null)
      {
        var args = new global::Sungero.Domain.Shared.CollectionPropertyDeletedEventArgs(this);
        collectionHandlers.BlobsDeleted(args);
      }
    }


    protected virtual global::Sungero.SmartProcessing.BlobPackageToSharedCollectionHandlers CreateToAddedHandler(global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.SmartProcessing.BlobPackageToSharedCollectionHandlers(this, e.Value, null, e.Source);
    }

    protected virtual global::Sungero.SmartProcessing.BlobPackageToSharedCollectionHandlers CreateToDeletedHandler(global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.SmartProcessing.BlobPackageToSharedCollectionHandlers(this, null, e.Value, null);
    }

    protected virtual void ToAddedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {  
      var collectionHandlers = this.CreateToAddedHandler(e);
      if (collectionHandlers != null)
      {
        var args = new global::Sungero.Domain.Shared.CollectionPropertyAddedEventArgs(this);
        collectionHandlers.ToAdded(args);
      }
    }

    protected virtual void ToDeletedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {  
      var collectionHandlers = this.CreateToDeletedHandler(e);
      if (collectionHandlers != null)
      {
        var args = new global::Sungero.Domain.Shared.CollectionPropertyDeletedEventArgs(this);
        collectionHandlers.ToDeleted(args);
      }
    }


    protected virtual global::Sungero.SmartProcessing.BlobPackageCCSharedCollectionHandlers CreateCCAddedHandler(global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.SmartProcessing.BlobPackageCCSharedCollectionHandlers(this, e.Value, null, e.Source);
    }

    protected virtual global::Sungero.SmartProcessing.BlobPackageCCSharedCollectionHandlers CreateCCDeletedHandler(global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.SmartProcessing.BlobPackageCCSharedCollectionHandlers(this, null, e.Value, null);
    }

    protected virtual void CCAddedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {  
      var collectionHandlers = this.CreateCCAddedHandler(e);
      if (collectionHandlers != null)
      {
        var args = new global::Sungero.Domain.Shared.CollectionPropertyAddedEventArgs(this);
        collectionHandlers.CCAdded(args);
      }
    }

    protected virtual void CCDeletedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {  
      var collectionHandlers = this.CreateCCDeletedHandler(e);
      if (collectionHandlers != null)
      {
        var args = new global::Sungero.Domain.Shared.CollectionPropertyDeletedEventArgs(this);
        collectionHandlers.CCDeleted(args);
      }
    }


    #endregion


    public BlobPackage()
    {
    }

  }
}

// ==================================================================
// BlobPackageHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.SmartProcessing
{
  public partial class BlobPackageMailBodyBlobPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.EntityPropertyFilteringServerHandler
    where T : class, global::Sungero.SmartProcessing.IBlob
  {
    private global::Sungero.SmartProcessing.IBlobPackage _obj
    {
      get { return (global::Sungero.SmartProcessing.IBlobPackage)this.Entity; }
    }

    public virtual global::System.Linq.IQueryable<T> MailBodyBlobFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertyFilteringEventArgs e)
    {
      return query;
    }

    public BlobPackageMailBodyBlobPropertyFilteringServerHandler(global::Sungero.SmartProcessing.IBlobPackage entity)
      : base(entity)
    {
    }
  }

  public partial class BlobPackageMailBodyBlobSearchPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.SearchPropertyFilteringServerHandler
    where T : class, global::Sungero.SmartProcessing.IBlob
  {

    public virtual global::System.Linq.IQueryable<T> MailBodyBlobSearchDialogFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertySearchDialogFilteringEventArgs e)
    {
      return query;
    }

    public BlobPackageMailBodyBlobSearchPropertyFilteringServerHandler()
      : base()
    {
    }
  }



  public partial class BlobPackageFilteringServerHandler<T>
    : global::Sungero.Domain.EntityFilteringServerHandler<T>  
    where T : class, global::Sungero.SmartProcessing.IBlobPackage
  {
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    protected new global::Sungero.SmartProcessing.IBlobPackageFilterState Filter { get; private set; }

    private global::Sungero.SmartProcessing.IBlobPackageFilterState _filter
    {
      get
      {
        return this.Filter;
      }
    }

    public BlobPackageFilteringServerHandler(global::Sungero.SmartProcessing.IBlobPackageFilterState filter)
    : base()
    {
      this.Filter = filter;
    }

    protected BlobPackageFilteringServerHandler()
    {
    }

    public override global::System.Linq.IQueryable<T> Filtering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.FilteringEventArgs e)
    {
      return query;
    }


  }

  public partial class BlobPackageUiFilteringServerHandler<T>
    : global::Sungero.Domain.EntityUiFilteringServerHandler<T>
    where T : class, global::Sungero.SmartProcessing.IBlobPackage
  {
    public override global::System.Linq.IQueryable<T> Filtering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.UiFilteringEventArgs e)
    {
      query = base.Filtering(query, e);
            return query;
    }
  }

  public partial class BlobPackageSearchDialogServerHandler : global::Sungero.CoreEntities.DatabookEntrySearchDialogServerHandler
   {
     private global::Sungero.SmartProcessing.Server.BlobPackageSearchDialogModel _dialog
     {
       get
       {
         return (global::Sungero.SmartProcessing.Server.BlobPackageSearchDialogModel)this.Dialog;
       }
     }

     public BlobPackageSearchDialogServerHandler(global::Sungero.SmartProcessing.Server.BlobPackageSearchDialogModel dialog)
       : base(dialog)
     {
     }
   }

  public partial class BlobPackageServerHandlers : global::Sungero.CoreEntities.DatabookEntryServerHandlers
  {
    private global::Sungero.SmartProcessing.IBlobPackage _obj
    {
      get { return (global::Sungero.SmartProcessing.IBlobPackage)this.Entity; }
    }

    public BlobPackageServerHandlers(global::Sungero.SmartProcessing.IBlobPackage entity)
      : base(entity)
    {
    }
  }

  public partial class BlobPackageCreatingFromServerHandler : global::Sungero.CoreEntities.DatabookEntryCreatingFromServerHandler
  {
    private global::Sungero.SmartProcessing.IBlobPackage _source
    {
      get { return (global::Sungero.SmartProcessing.IBlobPackage)this.Source; }
    }

    private global::Sungero.SmartProcessing.IBlobPackageInfo _info
    {
      get { return (global::Sungero.SmartProcessing.IBlobPackageInfo)this._Info; }
    }

    public BlobPackageCreatingFromServerHandler(global::Sungero.SmartProcessing.IBlobPackage source, global::Sungero.SmartProcessing.IBlobPackageInfo info)
      : base(source, info)
    {
    }
  }

}

// ==================================================================
// BlobPackageEventArgs.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.SmartProcessing.Server
{
}

// ==================================================================
// BlobPackageAccessRights.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.SmartProcessing.Server
{
  public class BlobPackageAccessRights : 
    Sungero.CoreEntities.Server.DatabookEntryAccessRights, Sungero.SmartProcessing.IBlobPackageAccessRights
  {

    public BlobPackageAccessRights(global::Sungero.Domain.Shared.IEntity entity) : base(entity)
    {
    }
  }

  public class BlobPackageTypeAccessRights : 
    Sungero.CoreEntities.Server.DatabookEntryTypeAccessRights, Sungero.SmartProcessing.IBlobPackageAccessRights
  {

    public BlobPackageTypeAccessRights(global::System.Type entityType) : base(entityType)
    {
    }
  }
}

// ==================================================================
// BlobPackageRepositoryImplementer.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.SmartProcessing.Server
{
    public class BlobPackageRepositoryImplementer<T> : 
      global::Sungero.Domain.RepositoryImplementer<T>,
      global::Sungero.SmartProcessing.IBlobPackageRepositoryImplementer<T>
      where T : global::Sungero.SmartProcessing.IBlobPackage 
    {
       public new global::Sungero.SmartProcessing.IBlobPackageAccessRights AccessRights
       {
          get { return (global::Sungero.SmartProcessing.IBlobPackageAccessRights)base.AccessRights; }
       }

       public new global::Sungero.SmartProcessing.IBlobPackageInfo Info
       {
          get { return (global::Sungero.SmartProcessing.IBlobPackageInfo)base.Info; }
       }

       protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
       {
         return new global::Sungero.SmartProcessing.Server.BlobPackageTypeAccessRights(typeof(T));
       }
    }
}

// ==================================================================
// BlobPackagePanelNavigationFilters.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.SmartProcessing.Server
{
}

// ==================================================================
// BlobPackageServerFunctions.g.cs
// ==================================================================

namespace Sungero.SmartProcessing.Server
{
  public partial class BlobPackageFunctions : global::Sungero.CoreEntities.Server.DatabookEntryFunctions
  {
    private global::Sungero.SmartProcessing.IBlobPackage _obj
    {
      get { return (global::Sungero.SmartProcessing.IBlobPackage)this.Entity; }
    }

    public BlobPackageFunctions(global::Sungero.SmartProcessing.IBlobPackage entity) : base(entity) { }
  }
}

// ==================================================================
// BlobPackageFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.SmartProcessing.Functions
{
  internal static class BlobPackage
  {
    /// <redirect project="Sungero.SmartProcessing.Server" type="Sungero.SmartProcessing.Server.BlobPackageFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static  global::Sungero.SmartProcessing.IBlobPackage CreateBlobPackage()
    {
      return global::Sungero.SmartProcessing.Server.BlobPackageFunctions.CreateBlobPackage();
    }

  }
}

// ==================================================================
// BlobPackageServerPublicFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.SmartProcessing.Server
{
  public class BlobPackageServerPublicFunctions : global::Sungero.SmartProcessing.Server.IBlobPackageServerPublicFunctions
  {
  }
}

// ==================================================================
// BlobPackageQueries.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.SmartProcessing.Queries
{
  public class BlobPackage
  {
    private static global::Sungero.Domain.SqlQueryResolver resolver = new global::Sungero.Domain.SqlQueryResolver("Sungero.SmartProcessing.Server.BlobPackage.BlobPackageQueries.xml", System.Reflection.Assembly.GetExecutingAssembly());
  }
}
