
// ==================================================================
// Blob.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.SmartProcessing.Server
{
    public class BlobFilter<T> :
      global::Sungero.Domain.EntityFilterBase<T>
      where T : class, global::Sungero.SmartProcessing.IBlob
    {
      protected new global::Sungero.SmartProcessing.IBlobFilterState Filter { get; private set; }

      private global::Sungero.SmartProcessing.IBlobFilterState filter
      {
        get
        {
          return this.Filter;
        }
      }

      protected override global::System.Linq.IQueryable<T> ApplyAppliedFilter(global::System.Linq.IQueryable<T> query)
      {
        return base.ApplyAppliedFilter(query);
      }

      public BlobFilter(global::Sungero.SmartProcessing.IBlobFilterState filter)
      : base()
      {
        this.Filter = filter;
      }

      protected BlobFilter()
      {
      }
    }
      public class BlobUiFilter<T> :
        global::Sungero.Domain.EntityUiFilterBase<T>
        where T : class, global::Sungero.SmartProcessing.IBlob
      {
        protected override global::System.Linq.IQueryable<T> ApplyAppliedFilter(global::System.Linq.IQueryable<T> query)
        {
          return base.ApplyAppliedFilter(query);
        }
      }

    public class BlobSearchDialogModel : global::Sungero.CoreEntities.Server.DatabookEntrySearchDialogModel
        {
                  public override global::System.Int32? Id { get; protected set; }



                  public virtual global::System.String Name { get; protected set; }
                  public virtual global::System.String FilePath { get; protected set; }
                  public virtual global::System.String OriginalFileName { get; protected set; }
                  public virtual global::System.String ArioResultJson { get; protected set; }
                  public virtual global::System.String Body { get; protected set; }



        }





  [global::Sungero.Domain.Filter(typeof(global::Sungero.SmartProcessing.Server.BlobFilter<global::Sungero.SmartProcessing.IBlob>))]
  [global::Sungero.Domain.UiFilter(typeof(global::Sungero.SmartProcessing.Server.BlobUiFilter<global::Sungero.SmartProcessing.IBlob>))]

  public class Blob :
    global::Sungero.CoreEntities.Server.DatabookEntry, global::Sungero.SmartProcessing.IBlob
  {
    public static new readonly global::System.Guid ClassTypeGuid = global::System.Guid.Parse("668418c4-bd08-4aeb-94d7-d0c30869c1a0");

    public override global::System.Guid TypeGuid
    {
      get { return global::Sungero.SmartProcessing.Server.Blob.ClassTypeGuid; }
    }

    public override string TypeName
    {
      get { return "Sungero.SmartProcessing.IBlob, Sungero.Domain.Interfaces"; }
    }

    public override string DisplayValue
    {
      get { return this.Name; }
      set { this.Name = value; }
    }

    public new virtual global::Sungero.SmartProcessing.IBlobState State
    {
      get { return (global::Sungero.SmartProcessing.IBlobState)base.State; }
    }

    protected override global::Sungero.Domain.Shared.IEntityState CreateState()
    {
      return new global::Sungero.SmartProcessing.Shared.BlobState(this);
    }

    public new virtual global::Sungero.SmartProcessing.IBlobInfo Info
    {
      get { return (global::Sungero.SmartProcessing.IBlobInfo)base.Info; }
    }

    public new virtual global::Sungero.SmartProcessing.IBlobAccessRights AccessRights
    {
      get { return (global::Sungero.SmartProcessing.IBlobAccessRights)base.AccessRights; }
    }

    protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
    {
      return new global::Sungero.SmartProcessing.Server.BlobAccessRights(this);
    }

    protected override global::Sungero.Domain.EntityFunctions CreateServerFunctions()
    {
      return new global::Sungero.SmartProcessing.Server.BlobFunctions(this);
    }

    protected override global::Sungero.Domain.Shared.EntityFunctions CreateSharedFunctions()
    {
      return new global::Sungero.SmartProcessing.Shared.BlobFunctions(this);
    }

    protected override object CreateHandlers() {
      return new global::Sungero.SmartProcessing.BlobServerHandlers(this);
    }

    protected override object CreateSharedHandlers() {
      return new global::Sungero.SmartProcessing.BlobSharedHandlers(this);
    }

    private global::System.String _Name;
    public virtual global::System.String Name
    {
      get
      {
        return this._Name;
      }

      set
      {
        this.SetPropertyValue("Name", this._Name, value, (propertyValue) => { this._Name = propertyValue; }, this.NameChangedHandler);
      }
    }
    private global::System.String _FilePath;
    public virtual global::System.String FilePath
    {
      get
      {
        return this._FilePath;
      }

      set
      {
        this.SetPropertyValue("FilePath", this._FilePath, value, (propertyValue) => { this._FilePath = propertyValue; }, this.FilePathChangedHandler);
      }
    }
    private global::System.String _OriginalFileName;
    public virtual global::System.String OriginalFileName
    {
      get
      {
        return this._OriginalFileName;
      }

      set
      {
        this.SetPropertyValue("OriginalFileName", this._OriginalFileName, value, (propertyValue) => { this._OriginalFileName = propertyValue; }, this.OriginalFileNameChangedHandler);
      }
    }



    private global::System.String _ArioResultJson;
    [global::Sungero.Domain.Shared.DoNotSavePreviousValue]
    public virtual global::System.String ArioResultJson
    {
      get
      {
        return this._ArioResultJson;
      }

      set
      {
        this.SetPropertyValue("ArioResultJson", this._ArioResultJson, value, (propertyValue) => { this._ArioResultJson = propertyValue; }, this.ArioResultJsonChangedHandler);
      }
    }



    private global::Sungero.Domain.Shared.IBinaryData _Body;

    [global::Sungero.Domain.Shared.DoNotSavePreviousValue]
    public virtual global::Sungero.Domain.Shared.IBinaryData Body
    {
      get { return this._Body; }
      set { this.SetComponentPropertyValue("Body", this._Body, value, (propertyValue) => { this._Body = propertyValue; }, this.BodyChangedHandler, this.InitBody); }
    }






    protected override global::Sungero.Domain.Shared.EntityCreatingFromServerHandler CreateCreatingFromServerHandler(
      global::Sungero.Domain.Shared.IEntity entitySource)
    {
      return new global::Sungero.SmartProcessing.BlobCreatingFromServerHandler((global::Sungero.SmartProcessing.IBlob)entitySource, this.Info);
    }

    #region Framework events

    protected void NameChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.Name, this.Name, this);
     ((global::Sungero.SmartProcessing.BlobSharedHandlers)this.SharedHandlers).NameChanged(args);
    }

    protected void FilePathChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.FilePath, this.FilePath, this);
     ((global::Sungero.SmartProcessing.BlobSharedHandlers)this.SharedHandlers).FilePathChanged(args);
    }

    protected void OriginalFileNameChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.OriginalFileName, this.OriginalFileName, this);
     ((global::Sungero.SmartProcessing.BlobSharedHandlers)this.SharedHandlers).OriginalFileNameChanged(args);
    }

    protected void ArioResultJsonChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.TextPropertyChangedEventArgs(this.State.Properties.ArioResultJson, this.ArioResultJson, this);
     ((global::Sungero.SmartProcessing.BlobSharedHandlers)this.SharedHandlers).ArioResultJsonChanged(args);
    }

    protected void BodyChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.BinaryDataPropertyChangedEventArgs(this.State.Properties.Body, this.Body, this);
     ((global::Sungero.SmartProcessing.BlobSharedHandlers)this.SharedHandlers).BodyChanged(args);
    }



    #endregion

    private void InitBody(global::Sungero.Domain.Shared.IBinaryData value)
    {
      if (value != null)
      {
        this._Body = (global::Sungero.Domain.Shared.IBinaryData)value.Clone();
        this._Body.RootEntity = this;
        ((global::Sungero.Domain.Shared.IExtendedBinaryData)this._Body).PropertyName = "Body";
        ((global::Sungero.Domain.Shared.IInternalComponent)this._Body).ComponentChanged += (sender, e) =>
        {
          if (this.IsPropertyChangedHandlerEnabled)
            this.BodyChangedHandler();
          this.OnComponentPropertyChanged("Body", e.PropertyNames);
        };
        ((global::Sungero.Domain.Shared.IInternalComponent)this._Body).ComponentChanging += (sender, e) =>
          this.OnComponentPropertyChanging("Body", e.PropertyName);
      }
      else
        this._Body = null;
    }


    public Blob()
    {
      this.InitBody(new global::Sungero.Domain.BinaryData());

    }

  }
}

// ==================================================================
// BlobHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.SmartProcessing
{

  public partial class BlobFilteringServerHandler<T>
    : global::Sungero.Domain.EntityFilteringServerHandler<T>  
    where T : class, global::Sungero.SmartProcessing.IBlob
  {
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    protected new global::Sungero.SmartProcessing.IBlobFilterState Filter { get; private set; }

    private global::Sungero.SmartProcessing.IBlobFilterState _filter
    {
      get
      {
        return this.Filter;
      }
    }

    public BlobFilteringServerHandler(global::Sungero.SmartProcessing.IBlobFilterState filter)
    : base()
    {
      this.Filter = filter;
    }

    protected BlobFilteringServerHandler()
    {
    }

    public override global::System.Linq.IQueryable<T> Filtering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.FilteringEventArgs e)
    {
      return query;
    }


  }

  public partial class BlobUiFilteringServerHandler<T>
    : global::Sungero.Domain.EntityUiFilteringServerHandler<T>
    where T : class, global::Sungero.SmartProcessing.IBlob
  {
    public override global::System.Linq.IQueryable<T> Filtering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.UiFilteringEventArgs e)
    {
      query = base.Filtering(query, e);
            return query;
    }
  }

  public partial class BlobSearchDialogServerHandler : global::Sungero.CoreEntities.DatabookEntrySearchDialogServerHandler
   {
     private global::Sungero.SmartProcessing.Server.BlobSearchDialogModel _dialog
     {
       get
       {
         return (global::Sungero.SmartProcessing.Server.BlobSearchDialogModel)this.Dialog;
       }
     }

     public BlobSearchDialogServerHandler(global::Sungero.SmartProcessing.Server.BlobSearchDialogModel dialog)
       : base(dialog)
     {
     }
   }

  public partial class BlobServerHandlers : global::Sungero.CoreEntities.DatabookEntryServerHandlers
  {
    private global::Sungero.SmartProcessing.IBlob _obj
    {
      get { return (global::Sungero.SmartProcessing.IBlob)this.Entity; }
    }

    public BlobServerHandlers(global::Sungero.SmartProcessing.IBlob entity)
      : base(entity)
    {
    }
  }

  public partial class BlobCreatingFromServerHandler : global::Sungero.CoreEntities.DatabookEntryCreatingFromServerHandler
  {
    private global::Sungero.SmartProcessing.IBlob _source
    {
      get { return (global::Sungero.SmartProcessing.IBlob)this.Source; }
    }

    private global::Sungero.SmartProcessing.IBlobInfo _info
    {
      get { return (global::Sungero.SmartProcessing.IBlobInfo)this._Info; }
    }

    public BlobCreatingFromServerHandler(global::Sungero.SmartProcessing.IBlob source, global::Sungero.SmartProcessing.IBlobInfo info)
      : base(source, info)
    {
    }
  }

}

// ==================================================================
// BlobEventArgs.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.SmartProcessing.Server
{
}

// ==================================================================
// BlobAccessRights.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.SmartProcessing.Server
{
  public class BlobAccessRights : 
    Sungero.CoreEntities.Server.DatabookEntryAccessRights, Sungero.SmartProcessing.IBlobAccessRights
  {

    public BlobAccessRights(global::Sungero.Domain.Shared.IEntity entity) : base(entity)
    {
    }
  }

  public class BlobTypeAccessRights : 
    Sungero.CoreEntities.Server.DatabookEntryTypeAccessRights, Sungero.SmartProcessing.IBlobAccessRights
  {

    public BlobTypeAccessRights(global::System.Type entityType) : base(entityType)
    {
    }
  }
}

// ==================================================================
// BlobRepositoryImplementer.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.SmartProcessing.Server
{
    public class BlobRepositoryImplementer<T> : 
      global::Sungero.Domain.RepositoryImplementer<T>,
      global::Sungero.SmartProcessing.IBlobRepositoryImplementer<T>
      where T : global::Sungero.SmartProcessing.IBlob 
    {
       public new global::Sungero.SmartProcessing.IBlobAccessRights AccessRights
       {
          get { return (global::Sungero.SmartProcessing.IBlobAccessRights)base.AccessRights; }
       }

       public new global::Sungero.SmartProcessing.IBlobInfo Info
       {
          get { return (global::Sungero.SmartProcessing.IBlobInfo)base.Info; }
       }

       protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
       {
         return new global::Sungero.SmartProcessing.Server.BlobTypeAccessRights(typeof(T));
       }
    }
}

// ==================================================================
// BlobPanelNavigationFilters.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.SmartProcessing.Server
{
}

// ==================================================================
// BlobServerFunctions.g.cs
// ==================================================================

namespace Sungero.SmartProcessing.Server
{
  public partial class BlobFunctions : global::Sungero.CoreEntities.Server.DatabookEntryFunctions
  {
    private global::Sungero.SmartProcessing.IBlob _obj
    {
      get { return (global::Sungero.SmartProcessing.IBlob)this.Entity; }
    }

    public BlobFunctions(global::Sungero.SmartProcessing.IBlob entity) : base(entity) { }
  }
}

// ==================================================================
// BlobFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.SmartProcessing.Functions
{
  internal static class Blob
  {
    /// <redirect project="Sungero.SmartProcessing.Server" type="Sungero.SmartProcessing.Server.BlobFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static  global::Sungero.SmartProcessing.IBlob CreateBlob()
    {
      return global::Sungero.SmartProcessing.Server.BlobFunctions.CreateBlob();
    }

  }
}

// ==================================================================
// BlobServerPublicFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.SmartProcessing.Server
{
  public class BlobServerPublicFunctions : global::Sungero.SmartProcessing.Server.IBlobServerPublicFunctions
  {
  }
}

// ==================================================================
// BlobQueries.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.SmartProcessing.Queries
{
  public class Blob
  {
    private static global::Sungero.Domain.SqlQueryResolver resolver = new global::Sungero.Domain.SqlQueryResolver("Sungero.SmartProcessing.Server.Blob.BlobQueries.xml", System.Reflection.Assembly.GetExecutingAssembly());
  }
}
