
// ==================================================================
// Currency.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Commons.Server
{
    public class CurrencyFilter<T> :
      global::Sungero.Domain.EntityFilterBase<T>
      where T : class, global::Sungero.Commons.ICurrency
    {
      protected new global::Sungero.Commons.ICurrencyFilterState Filter { get; private set; }

      private global::Sungero.Commons.ICurrencyFilterState filter
      {
        get
        {
          return this.Filter;
        }
      }

      protected override global::System.Linq.IQueryable<T> ApplyAppliedFilter(global::System.Linq.IQueryable<T> query)
      {
        return base.ApplyAppliedFilter(query);
      }

      public CurrencyFilter(global::Sungero.Commons.ICurrencyFilterState filter)
      : base()
      {
        this.Filter = filter;
      }

      protected CurrencyFilter()
      {
      }
    }
      public class CurrencyUiFilter<T> :
        global::Sungero.Domain.EntityUiFilterBase<T>
        where T : class, global::Sungero.Commons.ICurrency
      {
        protected override global::System.Linq.IQueryable<T> ApplyAppliedFilter(global::System.Linq.IQueryable<T> query)
        {
          return base.ApplyAppliedFilter(query);
        }
      }

    public class CurrencySearchDialogModel : global::Sungero.CoreEntities.Server.DatabookEntrySearchDialogModel
        {
                  public override global::System.Int32? Id { get; protected set; }



                  public virtual global::System.String Name { get; protected set; }
                  public virtual global::System.String AlphaCode { get; protected set; }
                  public virtual global::System.String ShortName { get; protected set; }
                  public virtual global::System.String FractionName { get; protected set; }
                  public virtual global::System.Boolean? IsDefault { get; protected set; }
                  public virtual global::System.String NumericCode { get; protected set; }


                  public virtual global::System.Collections.Generic.IEnumerable<Sungero.Core.Enumeration> Status { get; protected set; }


        }





  [global::Sungero.Domain.Filter(typeof(global::Sungero.Commons.Server.CurrencyFilter<global::Sungero.Commons.ICurrency>))]
  [global::Sungero.Domain.UiFilter(typeof(global::Sungero.Commons.Server.CurrencyUiFilter<global::Sungero.Commons.ICurrency>))]

  public class Currency :
    global::Sungero.CoreEntities.Server.DatabookEntry, global::Sungero.Commons.ICurrency
  {
    public static new readonly global::System.Guid ClassTypeGuid = global::System.Guid.Parse("ffc2629f-dc30-4106-a3ce-c402ae7d32b9");

    public override global::System.Guid TypeGuid
    {
      get { return global::Sungero.Commons.Server.Currency.ClassTypeGuid; }
    }

    public override string TypeName
    {
      get { return "Sungero.Commons.ICurrency, Sungero.Domain.Interfaces"; }
    }

    public override string DisplayValue
    {
      get { return this.Name; }
      set { this.Name = value; }
    }

    public new virtual global::Sungero.Commons.ICurrencyState State
    {
      get { return (global::Sungero.Commons.ICurrencyState)base.State; }
    }

    protected override global::Sungero.Domain.Shared.IEntityState CreateState()
    {
      return new global::Sungero.Commons.Shared.CurrencyState(this);
    }

    public new virtual global::Sungero.Commons.ICurrencyInfo Info
    {
      get { return (global::Sungero.Commons.ICurrencyInfo)base.Info; }
    }

    public new virtual global::Sungero.Commons.ICurrencyAccessRights AccessRights
    {
      get { return (global::Sungero.Commons.ICurrencyAccessRights)base.AccessRights; }
    }

    protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
    {
      return new global::Sungero.Commons.Server.CurrencyAccessRights(this);
    }

    protected override global::Sungero.Domain.EntityFunctions CreateServerFunctions()
    {
      return new global::Sungero.Commons.Server.CurrencyFunctions(this);
    }

    protected override global::Sungero.Domain.Shared.EntityFunctions CreateSharedFunctions()
    {
      return new global::Sungero.Commons.Shared.CurrencyFunctions(this);
    }

    protected override object CreateHandlers() {
      return new global::Sungero.Commons.CurrencyServerHandlers(this);
    }

    protected override object CreateSharedHandlers() {
      return new global::Sungero.Commons.CurrencySharedHandlers(this);
    }

    private global::System.String _Name;
    public virtual global::System.String Name
    {
      get
      {
        return this._Name;
      }

      set
      {
        this.SetPropertyValue("Name", this._Name, value, (propertyValue) => { this._Name = propertyValue; }, this.NameChangedHandler);
      }
    }
    private global::System.String _AlphaCode;
    public virtual global::System.String AlphaCode
    {
      get
      {
        return this._AlphaCode;
      }

      set
      {
        this.SetPropertyValue("AlphaCode", this._AlphaCode, value, (propertyValue) => { this._AlphaCode = propertyValue; }, this.AlphaCodeChangedHandler);
      }
    }
    private global::System.String _ShortName;
    public virtual global::System.String ShortName
    {
      get
      {
        return this._ShortName;
      }

      set
      {
        this.SetPropertyValue("ShortName", this._ShortName, value, (propertyValue) => { this._ShortName = propertyValue; }, this.ShortNameChangedHandler);
      }
    }
    private global::System.String _FractionName;
    public virtual global::System.String FractionName
    {
      get
      {
        return this._FractionName;
      }

      set
      {
        this.SetPropertyValue("FractionName", this._FractionName, value, (propertyValue) => { this._FractionName = propertyValue; }, this.FractionNameChangedHandler);
      }
    }
    private global::System.Boolean? _IsDefault;
    public virtual global::System.Boolean? IsDefault
    {
      get
      {
        return this._IsDefault;
      }

      set
      {
        this.SetPropertyValue("IsDefault", this._IsDefault, value, (propertyValue) => { this._IsDefault = propertyValue; }, this.IsDefaultChangedHandler);
      }
    }
    private global::System.String _NumericCode;
    public virtual global::System.String NumericCode
    {
      get
      {
        return this._NumericCode;
      }

      set
      {
        this.SetPropertyValue("NumericCode", this._NumericCode, value, (propertyValue) => { this._NumericCode = propertyValue; }, this.NumericCodeChangedHandler);
      }
    }










    protected override global::Sungero.Domain.Shared.EntityCreatingFromServerHandler CreateCreatingFromServerHandler(
      global::Sungero.Domain.Shared.IEntity entitySource)
    {
      return new global::Sungero.Commons.CurrencyCreatingFromServerHandler((global::Sungero.Commons.ICurrency)entitySource, this.Info);
    }

    #region Framework events

    protected void NameChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.Name, this.Name, this);
     ((global::Sungero.Commons.CurrencySharedHandlers)this.SharedHandlers).NameChanged(args);
    }

    protected void AlphaCodeChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.AlphaCode, this.AlphaCode, this);
     ((global::Sungero.Commons.CurrencySharedHandlers)this.SharedHandlers).AlphaCodeChanged(args);
    }

    protected void ShortNameChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.ShortName, this.ShortName, this);
     ((global::Sungero.Commons.CurrencySharedHandlers)this.SharedHandlers).ShortNameChanged(args);
    }

    protected void FractionNameChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.FractionName, this.FractionName, this);
     ((global::Sungero.Commons.CurrencySharedHandlers)this.SharedHandlers).FractionNameChanged(args);
    }

    protected void IsDefaultChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.BooleanPropertyChangedEventArgs(this.State.Properties.IsDefault, this.IsDefault, this);
     ((global::Sungero.Commons.CurrencySharedHandlers)this.SharedHandlers).IsDefaultChanged(args);
    }

    protected void NumericCodeChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.NumericCode, this.NumericCode, this);
     ((global::Sungero.Commons.CurrencySharedHandlers)this.SharedHandlers).NumericCodeChanged(args);
    }



    #endregion


    public Currency()
    {
    }

  }
}

// ==================================================================
// CurrencyHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Commons
{

  public partial class CurrencyFilteringServerHandler<T>
    : global::Sungero.Domain.EntityFilteringServerHandler<T>  
    where T : class, global::Sungero.Commons.ICurrency
  {
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    protected new global::Sungero.Commons.ICurrencyFilterState Filter { get; private set; }

    private global::Sungero.Commons.ICurrencyFilterState _filter
    {
      get
      {
        return this.Filter;
      }
    }

    public CurrencyFilteringServerHandler(global::Sungero.Commons.ICurrencyFilterState filter)
    : base()
    {
      this.Filter = filter;
    }

    protected CurrencyFilteringServerHandler()
    {
    }

    public override global::System.Linq.IQueryable<T> Filtering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.FilteringEventArgs e)
    {
      return query;
    }


  }

  public partial class CurrencyUiFilteringServerHandler<T>
    : global::Sungero.Domain.EntityUiFilteringServerHandler<T>
    where T : class, global::Sungero.Commons.ICurrency
  {
    public override global::System.Linq.IQueryable<T> Filtering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.UiFilteringEventArgs e)
    {
      query = base.Filtering(query, e);
            return query;
    }
  }

  public partial class CurrencySearchDialogServerHandler : global::Sungero.CoreEntities.DatabookEntrySearchDialogServerHandler
   {
     private global::Sungero.Commons.Server.CurrencySearchDialogModel _dialog
     {
       get
       {
         return (global::Sungero.Commons.Server.CurrencySearchDialogModel)this.Dialog;
       }
     }

     public CurrencySearchDialogServerHandler(global::Sungero.Commons.Server.CurrencySearchDialogModel dialog)
       : base(dialog)
     {
     }
   }

  public partial class CurrencyServerHandlers : global::Sungero.CoreEntities.DatabookEntryServerHandlers
  {
    private global::Sungero.Commons.ICurrency _obj
    {
      get { return (global::Sungero.Commons.ICurrency)this.Entity; }
    }

    public CurrencyServerHandlers(global::Sungero.Commons.ICurrency entity)
      : base(entity)
    {
    }
  }

  public partial class CurrencyCreatingFromServerHandler : global::Sungero.CoreEntities.DatabookEntryCreatingFromServerHandler
  {
    private global::Sungero.Commons.ICurrency _source
    {
      get { return (global::Sungero.Commons.ICurrency)this.Source; }
    }

    private global::Sungero.Commons.ICurrencyInfo _info
    {
      get { return (global::Sungero.Commons.ICurrencyInfo)this._Info; }
    }

    public CurrencyCreatingFromServerHandler(global::Sungero.Commons.ICurrency source, global::Sungero.Commons.ICurrencyInfo info)
      : base(source, info)
    {
    }
  }

}

// ==================================================================
// CurrencyEventArgs.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Commons.Server
{
}

// ==================================================================
// CurrencyAccessRights.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Commons.Server
{
  public class CurrencyAccessRights : 
    Sungero.CoreEntities.Server.DatabookEntryAccessRights, Sungero.Commons.ICurrencyAccessRights
  {

    public CurrencyAccessRights(global::Sungero.Domain.Shared.IEntity entity) : base(entity)
    {
    }
  }

  public class CurrencyTypeAccessRights : 
    Sungero.CoreEntities.Server.DatabookEntryTypeAccessRights, Sungero.Commons.ICurrencyAccessRights
  {

    public CurrencyTypeAccessRights(global::System.Type entityType) : base(entityType)
    {
    }
  }
}

// ==================================================================
// CurrencyRepositoryImplementer.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Commons.Server
{
    public class CurrencyRepositoryImplementer<T> : 
      global::Sungero.Domain.RepositoryImplementer<T>,
      global::Sungero.Commons.ICurrencyRepositoryImplementer<T>
      where T : global::Sungero.Commons.ICurrency 
    {
       public new global::Sungero.Commons.ICurrencyAccessRights AccessRights
       {
          get { return (global::Sungero.Commons.ICurrencyAccessRights)base.AccessRights; }
       }

       public new global::Sungero.Commons.ICurrencyInfo Info
       {
          get { return (global::Sungero.Commons.ICurrencyInfo)base.Info; }
       }

       protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
       {
         return new global::Sungero.Commons.Server.CurrencyTypeAccessRights(typeof(T));
       }
    }
}

// ==================================================================
// CurrencyPanelNavigationFilters.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Commons.Server
{
}

// ==================================================================
// CurrencyServerFunctions.g.cs
// ==================================================================

namespace Sungero.Commons.Server
{
  public partial class CurrencyFunctions : global::Sungero.CoreEntities.Server.DatabookEntryFunctions
  {
    private global::Sungero.Commons.ICurrency _obj
    {
      get { return (global::Sungero.Commons.ICurrency)this.Entity; }
    }

    public CurrencyFunctions(global::Sungero.Commons.ICurrency entity) : base(entity) { }
  }
}

// ==================================================================
// CurrencyFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Commons.Functions
{
  internal static class Currency
  {
    /// <redirect project="Sungero.Commons.Server" type="Sungero.Commons.Server.CurrencyFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static  global::Sungero.Commons.ICurrency GetDefaultCurrency()
    {
      return global::Sungero.Commons.Server.CurrencyFunctions.GetDefaultCurrency();
    }
    /// <redirect project="Sungero.Commons.Server" type="Sungero.Commons.Server.CurrencyFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static  global::System.Linq.IQueryable<global::Sungero.Commons.ICurrency> GetDuplicates(global::Sungero.Commons.ICurrency currency)
    {
      var functions = (global::Sungero.Commons.Server.CurrencyFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)currency).FunctionsContainer.ServerFunctions;
      return functions.GetDuplicates();
    }

    /// <redirect project="Sungero.Commons.Shared" type="Sungero.Commons.Shared.CurrencyFunctions" />
    internal static  global::System.Boolean HaveDuplicates(global::Sungero.Commons.ICurrency currency)
    {
      var functions = (global::Sungero.Commons.Shared.CurrencyFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)currency).FunctionsContainer.SharedFunctions;
      return functions.HaveDuplicates();
    }
    /// <redirect project="Sungero.Commons.Shared" type="Sungero.Commons.Shared.CurrencyFunctions" />
    internal static  global::System.String ValidateNumericCode(global::System.String numericCode)
    {
      return global::Sungero.Commons.Shared.CurrencyFunctions.ValidateNumericCode(numericCode);
    }

  }
}

// ==================================================================
// CurrencyServerPublicFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Commons.Server
{
  public class CurrencyServerPublicFunctions : global::Sungero.Commons.Server.ICurrencyServerPublicFunctions
  {
  }
}

// ==================================================================
// CurrencyQueries.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Commons.Queries
{
  public class Currency
  {
    private static global::Sungero.Domain.SqlQueryResolver resolver = new global::Sungero.Domain.SqlQueryResolver("Sungero.Commons.Server.Currency.CurrencyQueries.xml", System.Reflection.Assembly.GetExecutingAssembly());
  }
}
