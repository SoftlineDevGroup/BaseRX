
// ==================================================================
// Country.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Commons.Server
{
    public class CountryFilter<T> :
      global::Sungero.Domain.EntityFilterBase<T>
      where T : class, global::Sungero.Commons.ICountry
    {
      protected new global::Sungero.Commons.ICountryFilterState Filter { get; private set; }

      private global::Sungero.Commons.ICountryFilterState filter
      {
        get
        {
          return this.Filter;
        }
      }

      protected override global::System.Linq.IQueryable<T> ApplyAppliedFilter(global::System.Linq.IQueryable<T> query)
      {
        return base.ApplyAppliedFilter(query);
      }

      public CountryFilter(global::Sungero.Commons.ICountryFilterState filter)
      : base()
      {
        this.Filter = filter;
      }

      protected CountryFilter()
      {
      }
    }
      public class CountryUiFilter<T> :
        global::Sungero.Domain.EntityUiFilterBase<T>
        where T : class, global::Sungero.Commons.ICountry
      {
        protected override global::System.Linq.IQueryable<T> ApplyAppliedFilter(global::System.Linq.IQueryable<T> query)
        {
          return base.ApplyAppliedFilter(query);
        }
      }

    public class CountrySearchDialogModel : global::Sungero.CoreEntities.Server.DatabookEntrySearchDialogModel
        {
                  public override global::System.Int32? Id { get; protected set; }



                  public virtual global::System.String Name { get; protected set; }
                  public virtual global::System.String Code { get; protected set; }


                  public virtual global::System.Collections.Generic.IEnumerable<Sungero.Core.Enumeration> Status { get; protected set; }


        }





  [global::Sungero.Domain.Filter(typeof(global::Sungero.Commons.Server.CountryFilter<global::Sungero.Commons.ICountry>))]
  [global::Sungero.Domain.UiFilter(typeof(global::Sungero.Commons.Server.CountryUiFilter<global::Sungero.Commons.ICountry>))]

  public class Country :
    global::Sungero.CoreEntities.Server.DatabookEntry, global::Sungero.Commons.ICountry
  {
    public static new readonly global::System.Guid ClassTypeGuid = global::System.Guid.Parse("1f612925-95fc-4662-807d-c92c810a62b1");

    public override global::System.Guid TypeGuid
    {
      get { return global::Sungero.Commons.Server.Country.ClassTypeGuid; }
    }

    public override string TypeName
    {
      get { return "Sungero.Commons.ICountry, Sungero.Domain.Interfaces"; }
    }

    public override string DisplayValue
    {
      get { return this.Name; }
      set { this.Name = value; }
    }

    public new virtual global::Sungero.Commons.ICountryState State
    {
      get { return (global::Sungero.Commons.ICountryState)base.State; }
    }

    protected override global::Sungero.Domain.Shared.IEntityState CreateState()
    {
      return new global::Sungero.Commons.Shared.CountryState(this);
    }

    public new virtual global::Sungero.Commons.ICountryInfo Info
    {
      get { return (global::Sungero.Commons.ICountryInfo)base.Info; }
    }

    public new virtual global::Sungero.Commons.ICountryAccessRights AccessRights
    {
      get { return (global::Sungero.Commons.ICountryAccessRights)base.AccessRights; }
    }

    protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
    {
      return new global::Sungero.Commons.Server.CountryAccessRights(this);
    }

    protected override global::Sungero.Domain.EntityFunctions CreateServerFunctions()
    {
      return new global::Sungero.Commons.Server.CountryFunctions(this);
    }

    protected override global::Sungero.Domain.Shared.EntityFunctions CreateSharedFunctions()
    {
      return new global::Sungero.Commons.Shared.CountryFunctions(this);
    }

    protected override object CreateHandlers() {
      return new global::Sungero.Commons.CountryServerHandlers(this);
    }

    protected override object CreateSharedHandlers() {
      return new global::Sungero.Commons.CountrySharedHandlers(this);
    }

    private global::System.String _Name;
    public virtual global::System.String Name
    {
      get
      {
        return this._Name;
      }

      set
      {
        this.SetPropertyValue("Name", this._Name, value, (propertyValue) => { this._Name = propertyValue; }, this.NameChangedHandler);
      }
    }
    private global::System.String _Code;
    public virtual global::System.String Code
    {
      get
      {
        return this._Code;
      }

      set
      {
        this.SetPropertyValue("Code", this._Code, value, (propertyValue) => { this._Code = propertyValue; }, this.CodeChangedHandler);
      }
    }










    protected override global::Sungero.Domain.Shared.EntityCreatingFromServerHandler CreateCreatingFromServerHandler(
      global::Sungero.Domain.Shared.IEntity entitySource)
    {
      return new global::Sungero.Commons.CountryCreatingFromServerHandler((global::Sungero.Commons.ICountry)entitySource, this.Info);
    }

    #region Framework events

    protected void NameChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.Name, this.Name, this);
     ((global::Sungero.Commons.CountrySharedHandlers)this.SharedHandlers).NameChanged(args);
    }

    protected void CodeChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.Code, this.Code, this);
     ((global::Sungero.Commons.CountrySharedHandlers)this.SharedHandlers).CodeChanged(args);
    }



    #endregion


    public Country()
    {
    }

  }
}

// ==================================================================
// CountryHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Commons
{

  public partial class CountryFilteringServerHandler<T>
    : global::Sungero.Domain.EntityFilteringServerHandler<T>  
    where T : class, global::Sungero.Commons.ICountry
  {
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    protected new global::Sungero.Commons.ICountryFilterState Filter { get; private set; }

    private global::Sungero.Commons.ICountryFilterState _filter
    {
      get
      {
        return this.Filter;
      }
    }

    public CountryFilteringServerHandler(global::Sungero.Commons.ICountryFilterState filter)
    : base()
    {
      this.Filter = filter;
    }

    protected CountryFilteringServerHandler()
    {
    }

    public override global::System.Linq.IQueryable<T> Filtering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.FilteringEventArgs e)
    {
      return query;
    }


  }

  public partial class CountryUiFilteringServerHandler<T>
    : global::Sungero.Domain.EntityUiFilteringServerHandler<T>
    where T : class, global::Sungero.Commons.ICountry
  {
    public override global::System.Linq.IQueryable<T> Filtering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.UiFilteringEventArgs e)
    {
      query = base.Filtering(query, e);
            return query;
    }
  }

  public partial class CountrySearchDialogServerHandler : global::Sungero.CoreEntities.DatabookEntrySearchDialogServerHandler
   {
     private global::Sungero.Commons.Server.CountrySearchDialogModel _dialog
     {
       get
       {
         return (global::Sungero.Commons.Server.CountrySearchDialogModel)this.Dialog;
       }
     }

     public CountrySearchDialogServerHandler(global::Sungero.Commons.Server.CountrySearchDialogModel dialog)
       : base(dialog)
     {
     }
   }

  public partial class CountryServerHandlers : global::Sungero.CoreEntities.DatabookEntryServerHandlers
  {
    private global::Sungero.Commons.ICountry _obj
    {
      get { return (global::Sungero.Commons.ICountry)this.Entity; }
    }

    public CountryServerHandlers(global::Sungero.Commons.ICountry entity)
      : base(entity)
    {
    }
  }

  public partial class CountryCreatingFromServerHandler : global::Sungero.CoreEntities.DatabookEntryCreatingFromServerHandler
  {
    private global::Sungero.Commons.ICountry _source
    {
      get { return (global::Sungero.Commons.ICountry)this.Source; }
    }

    private global::Sungero.Commons.ICountryInfo _info
    {
      get { return (global::Sungero.Commons.ICountryInfo)this._Info; }
    }

    public CountryCreatingFromServerHandler(global::Sungero.Commons.ICountry source, global::Sungero.Commons.ICountryInfo info)
      : base(source, info)
    {
    }
  }

}

// ==================================================================
// CountryEventArgs.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Commons.Server
{
}

// ==================================================================
// CountryAccessRights.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Commons.Server
{
  public class CountryAccessRights : 
    Sungero.CoreEntities.Server.DatabookEntryAccessRights, Sungero.Commons.ICountryAccessRights
  {

    public CountryAccessRights(global::Sungero.Domain.Shared.IEntity entity) : base(entity)
    {
    }
  }

  public class CountryTypeAccessRights : 
    Sungero.CoreEntities.Server.DatabookEntryTypeAccessRights, Sungero.Commons.ICountryAccessRights
  {

    public CountryTypeAccessRights(global::System.Type entityType) : base(entityType)
    {
    }
  }
}

// ==================================================================
// CountryRepositoryImplementer.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Commons.Server
{
    public class CountryRepositoryImplementer<T> : 
      global::Sungero.Domain.RepositoryImplementer<T>,
      global::Sungero.Commons.ICountryRepositoryImplementer<T>
      where T : global::Sungero.Commons.ICountry 
    {
       public new global::Sungero.Commons.ICountryAccessRights AccessRights
       {
          get { return (global::Sungero.Commons.ICountryAccessRights)base.AccessRights; }
       }

       public new global::Sungero.Commons.ICountryInfo Info
       {
          get { return (global::Sungero.Commons.ICountryInfo)base.Info; }
       }

       protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
       {
         return new global::Sungero.Commons.Server.CountryTypeAccessRights(typeof(T));
       }
    }
}

// ==================================================================
// CountryPanelNavigationFilters.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Commons.Server
{
}

// ==================================================================
// CountryServerFunctions.g.cs
// ==================================================================

namespace Sungero.Commons.Server
{
  public partial class CountryFunctions : global::Sungero.CoreEntities.Server.DatabookEntryFunctions
  {
    private global::Sungero.Commons.ICountry _obj
    {
      get { return (global::Sungero.Commons.ICountry)this.Entity; }
    }

    public CountryFunctions(global::Sungero.Commons.ICountry entity) : base(entity) { }
  }
}

// ==================================================================
// CountryFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Commons.Functions
{
  internal static class Country
  {
    /// <redirect project="Sungero.Commons.Server" type="Sungero.Commons.Server.CountryFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static  global::System.Linq.IQueryable<global::Sungero.Commons.ICountry> GetDuplicates(global::Sungero.Commons.ICountry country)
    {
      var functions = (global::Sungero.Commons.Server.CountryFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)country).FunctionsContainer.ServerFunctions;
      return functions.GetDuplicates();
    }

    /// <redirect project="Sungero.Commons.Shared" type="Sungero.Commons.Shared.CountryFunctions" />
    internal static  global::System.Boolean HaveDuplicates(global::Sungero.Commons.ICountry country)
    {
      var functions = (global::Sungero.Commons.Shared.CountryFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)country).FunctionsContainer.SharedFunctions;
      return functions.HaveDuplicates();
    }
    /// <redirect project="Sungero.Commons.Shared" type="Sungero.Commons.Shared.CountryFunctions" />
    internal static  global::System.String ValidateCountryCode(global::System.String code)
    {
      return global::Sungero.Commons.Shared.CountryFunctions.ValidateCountryCode(code);
    }

  }
}

// ==================================================================
// CountryServerPublicFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Commons.Server
{
  public class CountryServerPublicFunctions : global::Sungero.Commons.Server.ICountryServerPublicFunctions
  {
  }
}

// ==================================================================
// CountryQueries.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Commons.Queries
{
  public class Country
  {
    private static global::Sungero.Domain.SqlQueryResolver resolver = new global::Sungero.Domain.SqlQueryResolver("Sungero.Commons.Server.Country.CountryQueries.xml", System.Reflection.Assembly.GetExecutingAssembly());
  }
}
