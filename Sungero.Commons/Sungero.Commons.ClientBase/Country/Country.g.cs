
// ==================================================================
// CountryEventArgs.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Commons.Client
{ 
}

// ==================================================================
// CountryHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Commons
{

  public partial class CountryFilteringClientHandler
    : global::Sungero.Domain.EntityFilteringClientHandler
  {
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    protected global::Sungero.Commons.ICountryFilterState Filter { get; private set; }

    private global::Sungero.Commons.ICountryFilterState _filter
    {
      get
      {
        return this.Filter;
      }
    }

    public CountryFilteringClientHandler(global::Sungero.Commons.ICountryFilterState filter)
    : base()
    {
      this.Filter = filter;
    }

    protected CountryFilteringClientHandler()
    {
    }

    public override void ValidateFilterPanel(global::Sungero.Domain.Client.ValidateFilterPanelEventArgs e)
    {
    }
  }


  public partial class CountryClientHandlers : global::Sungero.CoreEntities.DatabookEntryClientHandlers
  {
    private global::Sungero.Commons.ICountry _obj
    {
      get { return (global::Sungero.Commons.ICountry)this.Entity; }
    }

    public virtual void NameValueInput(global::Sungero.Presentation.StringValueInputEventArgs e) { }



    public CountryClientHandlers(global::Sungero.Commons.ICountry entity) : base(entity)
    {
    }
  }

}

// ==================================================================
// CountryClientFunctions.g.cs
// ==================================================================

namespace Sungero.Commons.Client
{
  public partial class CountryFunctions : global::Sungero.CoreEntities.Client.DatabookEntryFunctions
  {
    private global::Sungero.Commons.ICountry _obj
    {
      get { return (global::Sungero.Commons.ICountry)this.Entity; }
    }

    public CountryFunctions(global::Sungero.Commons.ICountry entity) : base(entity) { }
  }
}

// ==================================================================
// CountryFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Commons.Functions
{
  internal static class Country
  {
    /// <redirect project="Sungero.Commons.Shared" type="Sungero.Commons.Shared.CountryFunctions" />
    internal static  global::System.Boolean HaveDuplicates(global::Sungero.Commons.ICountry country)
    {
      var functions = (global::Sungero.Commons.Shared.CountryFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)country).FunctionsContainer.SharedFunctions;
      return functions.HaveDuplicates();
    }
    /// <redirect project="Sungero.Commons.Shared" type="Sungero.Commons.Shared.CountryFunctions" />
    internal static  global::System.String ValidateCountryCode(global::System.String code)
    {
      return global::Sungero.Commons.Shared.CountryFunctions.ValidateCountryCode(code);
    }

    internal static class Remote
    {
      /// <redirect project="Sungero.Commons.Server" type="Sungero.Commons.Server.CountryFunctions" />
      internal static  global::System.Linq.IQueryable<global::Sungero.Commons.ICountry> GetDuplicates(global::Sungero.Commons.ICountry country)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::System.Linq.IQueryable<global::Sungero.Commons.ICountry>>(
          global::System.Guid.Parse("1f612925-95fc-4662-807d-c92c810a62b1"),
          "GetDuplicates(global::Sungero.Commons.ICountry)"
          , country);
      }

    }
  }
}

// ==================================================================
// CountryClientPublicFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Commons.Client
{
  public class CountryClientPublicFunctions : global::Sungero.Commons.Client.ICountryClientPublicFunctions
  {
  }
}

// ==================================================================
// CountryActions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Commons.Client
{
  public partial class CountryActions : global::Sungero.CoreEntities.Client.DatabookEntryActions
  {
    private global::Sungero.Commons.ICountry _obj { get { return (global::Sungero.Commons.ICountry)this.Entity; } }
    public CountryActions(global::Sungero.Commons.ICountry entity) : base(entity) { }
  }

  public partial class CountryCollectionActions : global::Sungero.CoreEntities.Client.DatabookEntryCollectionActions
  {
    private global::System.Collections.Generic.IEnumerable<global::Sungero.Commons.ICountry> _objs
    { 
      get { return global::System.Linq.Enumerable.Cast<global::Sungero.Commons.ICountry>(this.Entities); }
    }
  }

  public partial class CountryAnyChildEntityActions : global::Sungero.CoreEntities.Client.DatabookEntryAnyChildEntityActions
  {
  }

  public partial class CountryAnyChildEntityCollectionActions : global::Sungero.CoreEntities.Client.DatabookEntryAnyChildEntityCollectionActions
  {
  }

}
