
// ==================================================================
// ExternalEntityLink.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Commons.Client
{
  public class ExternalEntityLink :
    global::Sungero.CoreEntities.Client.DatabookEntry, global::Sungero.Commons.IExternalEntityLink
  {
    #region Fields and properties

    public static new readonly global::System.Guid ClassTypeGuid = global::System.Guid.Parse("4346363e-39b9-40eb-9c12-64f0cf48d87f");

    public override global::System.Guid TypeGuid
    {
      get { return global::Sungero.Commons.Client.ExternalEntityLink.ClassTypeGuid; }
    }

    public override string TypeName
    {
      get { return "Sungero.Commons.IExternalEntityLink, Sungero.Domain.Interfaces"; }
    }

      public override string DisplayValue
      {
        get { return this.Name; }
        set { this.Name = value; }
      }

      public override string DisplayPropertyName
      {
        get { return "Name"; }
      }


    public new global::Sungero.Commons.IExternalEntityLinkState State
    {
      get
      {
        return (global::Sungero.Commons.IExternalEntityLinkState)base.State;
      }
    }

    protected override global::Sungero.Domain.Shared.IEntityState CreateState()
    {
      return new global::Sungero.Commons.Shared.ExternalEntityLinkState(this);
    }

    public new global::Sungero.Commons.IExternalEntityLinkInfo Info
    {
      get
      {
        return (global::Sungero.Commons.IExternalEntityLinkInfo)base.Info;
      }
    }

    public new global::Sungero.Commons.IExternalEntityLinkAccessRights AccessRights
    {
      get
      {
        return (global::Sungero.Commons.IExternalEntityLinkAccessRights)base.AccessRights;
      }
    }

    protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
    {
      return new global::Sungero.Commons.Client.ExternalEntityLinkAccessRights(this);
    }

        protected global::Sungero.Domain.Client.SimpleProperty<global::System.String> _EntityType;

        public virtual global::System.String EntityType
        {
          get { return this._EntityType.Value; }
          set { this._EntityType.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.Int32?> _EntityId;

        public virtual global::System.Int32? EntityId
        {
          get { return this._EntityId.Value; }
          set { this._EntityId.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.String> _ExtEntityType;

        public virtual global::System.String ExtEntityType
        {
          get { return this._ExtEntityType.Value; }
          set { this._ExtEntityType.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.String> _ExtEntityId;

        public virtual global::System.String ExtEntityId
        {
          get { return this._ExtEntityId.Value; }
          set { this._ExtEntityId.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.String> _ExtSystemId;

        public virtual global::System.String ExtSystemId
        {
          get { return this._ExtSystemId.Value; }
          set { this._ExtSystemId.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.DateTime?> _SyncDate;

        public virtual global::System.DateTime? SyncDate
        {
          get { return this._SyncDate.Value; }
          set { this._SyncDate.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.Boolean?> _IsDeleted;

        public virtual global::System.Boolean? IsDeleted
        {
          get { return this._IsDeleted.Value; }
          set { this._IsDeleted.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.String> _Name;

        public virtual global::System.String Name
        {
          get { return this._Name.Value; }
          set { this._Name.Value = value; }
        }










    #endregion

    #region Methods

    protected override object CreateActionsHandlers()
    {
      return new global::Sungero.Commons.Client.ExternalEntityLinkActions(this);
    }

    protected override object CreateCollectionActionsHandlers()
    {
      return new global::Sungero.Commons.Client.ExternalEntityLinkCollectionActions();
    }

    protected override object CreateAnyChildEntityActionsHandlers()
    {
      return new global::Sungero.Commons.Client.ExternalEntityLinkAnyChildEntityActions();
    }

    protected override object CreateAnyChildEntityCollectionActionsHandlers()
    {
      return new global::Sungero.Commons.Client.ExternalEntityLinkAnyChildEntityCollectionActions();
    }


    protected override global::Sungero.Domain.Client.EntityFunctions CreateClientFunctions()
    {
      return new global::Sungero.Commons.Client.ExternalEntityLinkFunctions(this);
    }

    protected override global::Sungero.Domain.Shared.EntityFunctions CreateSharedFunctions()
    {
      return new global::Sungero.Commons.Shared.ExternalEntityLinkFunctions(this);
    }
    protected override object CreateHandlers() {
      return new global::Sungero.Commons.ExternalEntityLinkClientHandlers(this);
    }
    protected override object CreateSharedHandlers() {
      return new global::Sungero.Commons.ExternalEntityLinkSharedHandlers(this);
    }

    #endregion

    #region Framework events

    protected void EntityTypeChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.EntityType, this.EntityType, this);
     ((global::Sungero.Commons.ExternalEntityLinkSharedHandlers)this.SharedHandlers).EntityTypeChanged(args);
    }

    protected void EntityIdChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.IntegerPropertyChangedEventArgs(this.State.Properties.EntityId, this.EntityId, this);
     ((global::Sungero.Commons.ExternalEntityLinkSharedHandlers)this.SharedHandlers).EntityIdChanged(args);
    }

    protected void ExtEntityTypeChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.ExtEntityType, this.ExtEntityType, this);
     ((global::Sungero.Commons.ExternalEntityLinkSharedHandlers)this.SharedHandlers).ExtEntityTypeChanged(args);
    }

    protected void ExtEntityIdChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.ExtEntityId, this.ExtEntityId, this);
     ((global::Sungero.Commons.ExternalEntityLinkSharedHandlers)this.SharedHandlers).ExtEntityIdChanged(args);
    }

    protected void ExtSystemIdChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.ExtSystemId, this.ExtSystemId, this);
     ((global::Sungero.Commons.ExternalEntityLinkSharedHandlers)this.SharedHandlers).ExtSystemIdChanged(args);
    }

    protected void SyncDateChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.DateTimePropertyChangedEventArgs(this.State.Properties.SyncDate, this.SyncDate, this);
     ((global::Sungero.Commons.ExternalEntityLinkSharedHandlers)this.SharedHandlers).SyncDateChanged(args);
    }

    protected void IsDeletedChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.BooleanPropertyChangedEventArgs(this.State.Properties.IsDeleted, this.IsDeleted, this);
     ((global::Sungero.Commons.ExternalEntityLinkSharedHandlers)this.SharedHandlers).IsDeletedChanged(args);
    }

    protected void NameChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.Name, this.Name, this);
     ((global::Sungero.Commons.ExternalEntityLinkSharedHandlers)this.SharedHandlers).NameChanged(args);
    }



  protected global::System.String EntityTypeValueInputHandler(global::System.String value)
  {
    var args = new global::Sungero.Presentation.StringValueInputEventArgs(this.EntityType, value, this, this.Info.Properties.EntityType);
    ((global::Sungero.Commons.ExternalEntityLinkClientHandlers)this.Handlers).EntityTypeValueInput(args);
    return args.NewValue;
  }

  protected global::System.Int32? EntityIdValueInputHandler(global::System.Int32? value)
  {
    var args = new global::Sungero.Presentation.IntegerValueInputEventArgs(this.EntityId, value, this, this.Info.Properties.EntityId);
    ((global::Sungero.Commons.ExternalEntityLinkClientHandlers)this.Handlers).EntityIdValueInput(args);
    return args.NewValue;
  }

  protected global::System.String ExtEntityTypeValueInputHandler(global::System.String value)
  {
    var args = new global::Sungero.Presentation.StringValueInputEventArgs(this.ExtEntityType, value, this, this.Info.Properties.ExtEntityType);
    ((global::Sungero.Commons.ExternalEntityLinkClientHandlers)this.Handlers).ExtEntityTypeValueInput(args);
    return args.NewValue;
  }

  protected global::System.String ExtEntityIdValueInputHandler(global::System.String value)
  {
    var args = new global::Sungero.Presentation.StringValueInputEventArgs(this.ExtEntityId, value, this, this.Info.Properties.ExtEntityId);
    ((global::Sungero.Commons.ExternalEntityLinkClientHandlers)this.Handlers).ExtEntityIdValueInput(args);
    return args.NewValue;
  }

  protected global::System.String ExtSystemIdValueInputHandler(global::System.String value)
  {
    var args = new global::Sungero.Presentation.StringValueInputEventArgs(this.ExtSystemId, value, this, this.Info.Properties.ExtSystemId);
    ((global::Sungero.Commons.ExternalEntityLinkClientHandlers)this.Handlers).ExtSystemIdValueInput(args);
    return args.NewValue;
  }

  protected global::System.DateTime? SyncDateValueInputHandler(global::System.DateTime? value)
  {
    var args = new global::Sungero.Presentation.DateTimeValueInputEventArgs(this.SyncDate, value, this, this.Info.Properties.SyncDate);
    ((global::Sungero.Commons.ExternalEntityLinkClientHandlers)this.Handlers).SyncDateValueInput(args);
    return args.NewValue;
  }

  protected global::System.Boolean? IsDeletedValueInputHandler(global::System.Boolean? value)
  {
    var args = new global::Sungero.Presentation.BooleanValueInputEventArgs(this.IsDeleted, value, this, this.Info.Properties.IsDeleted);
    ((global::Sungero.Commons.ExternalEntityLinkClientHandlers)this.Handlers).IsDeletedValueInput(args);
    return args.NewValue;
  }

  protected global::System.String NameValueInputHandler(global::System.String value)
  {
    var args = new global::Sungero.Presentation.StringValueInputEventArgs(this.Name, value, this, this.Info.Properties.Name);
    ((global::Sungero.Commons.ExternalEntityLinkClientHandlers)this.Handlers).NameValueInput(args);
    return args.NewValue;
  }



    #endregion

    #region Constructors



    public ExternalEntityLink()
    {
            this._EntityType = new global::Sungero.Domain.Client.SimpleProperty<global::System.String>("EntityType", this);
            this._EntityType.ValueChanged += (sender, e) => { this.EntityTypeChangedHandler(); };
            this.AddProperty(this._EntityType);

            this._EntityId = new global::Sungero.Domain.Client.SimpleProperty<global::System.Int32?>("EntityId", this);
            this._EntityId.ValueChanged += (sender, e) => { this.EntityIdChangedHandler(); };
            this.AddProperty(this._EntityId);

            this._ExtEntityType = new global::Sungero.Domain.Client.SimpleProperty<global::System.String>("ExtEntityType", this);
            this._ExtEntityType.ValueChanged += (sender, e) => { this.ExtEntityTypeChangedHandler(); };
            this.AddProperty(this._ExtEntityType);

            this._ExtEntityId = new global::Sungero.Domain.Client.SimpleProperty<global::System.String>("ExtEntityId", this);
            this._ExtEntityId.ValueChanged += (sender, e) => { this.ExtEntityIdChangedHandler(); };
            this.AddProperty(this._ExtEntityId);

            this._ExtSystemId = new global::Sungero.Domain.Client.SimpleProperty<global::System.String>("ExtSystemId", this);
            this._ExtSystemId.ValueChanged += (sender, e) => { this.ExtSystemIdChangedHandler(); };
            this.AddProperty(this._ExtSystemId);

            this._SyncDate = new global::Sungero.Domain.Client.SimpleProperty<global::System.DateTime?>("SyncDate", this);
            this._SyncDate.ValueChanged += (sender, e) => { this.SyncDateChangedHandler(); };
            this.AddProperty(this._SyncDate);

            this._IsDeleted = new global::Sungero.Domain.Client.SimpleProperty<global::System.Boolean?>("IsDeleted", this);
            this._IsDeleted.ValueChanged += (sender, e) => { this.IsDeletedChangedHandler(); };
            this.AddProperty(this._IsDeleted);

            this._Name = new global::Sungero.Domain.Client.SimpleProperty<global::System.String>("Name", this);
            this._Name.ValueChanged += (sender, e) => { this.NameChangedHandler(); };
            this.AddProperty(this._Name);








    }

    #endregion

  }
}

// ==================================================================
// ExternalEntityLinkPresenter.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Commons.Client
{
  public class ExternalEntityLinkPresenter<T> :
    global::Sungero.Domain.Client.EntityPresenter<T>
    where T : class, global::Sungero.Commons.IExternalEntityLink
  {
    #region Fields and properties

          private global::System.Windows.Input.ICommand _OpenEntityCommand;

          public global::System.Windows.Input.ICommand OpenEntityCommand
          {
            get
            {
              if (this._OpenEntityCommand == null)
                  this._OpenEntityCommand = new global::Sungero.Domain.Client.SingleEntityCommand<T>("OpenEntity", this, this.OpenEntity, this.CanOpenEntity) { IsEmptyParameterAllowed = true };
              return this._OpenEntityCommand;
            }
          }




    #endregion

    #region Methods

              private bool CanOpenEntity(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfCanExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this);
                return ((Sungero.Commons.Client.ExternalEntityLinkActions)(entity as Sungero.Commons.Client.ExternalEntityLink).ActionsHandlers).CanOpenEntity(args);
              }

              private void OpenEntity(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this, entity.Info.Actions.OpenEntity);
                ((Sungero.Commons.Client.ExternalEntityLinkActions)(entity as Sungero.Commons.Client.ExternalEntityLink).ActionsHandlers).OpenEntity(args);
              }


    #endregion

    #region Framework events

    protected override void EntityPropertyChangedEventHandler(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
    {
      base.EntityPropertyChangedEventHandler(sender, e);
    }

    #endregion



    #region Constructors

    private void Init()
    {

    }

    public ExternalEntityLinkPresenter()
    {
      this.Init();
    }

    #endregion
  }
}

// ==================================================================
// ExternalEntityLinkCollectionPresenter.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Commons.Client
{
  public class ExternalEntityLinkCollectionPresenter<T> : 
    global::Sungero.Domain.Client.EntityCollectionPresenter<T>
    where T: class, global::Sungero.Commons.IExternalEntityLink
  {
    #region Actions



    #endregion

    #region Methods


    #endregion

    public ExternalEntityLinkCollectionPresenter(global::System.Linq.IQueryable<T> query, OnLookup onLookup)
      : base(query, onLookup)
    {
    }

    public ExternalEntityLinkCollectionPresenter(global::System.Linq.IQueryable<T> query)
      : this(query, null) { }

    public ExternalEntityLinkCollectionPresenter(OnLookup onLookup)
      : this(null, onLookup) { }

    public ExternalEntityLinkCollectionPresenter()
      : this(null, null) { }
  }
}

// ==================================================================
// ExternalEntityLinkRepositoryImplementer.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Commons.Client
{ 
  public class ExternalEntityLinkRepositoryImplementer<T> : 
      global::Sungero.Domain.Client.RepositoryImplementer<T>,
      global::Sungero.Commons.IExternalEntityLinkRepositoryImplementer<T>
      where T : global::Sungero.Commons.IExternalEntityLink
    {
       public new global::Sungero.Commons.IExternalEntityLinkAccessRights AccessRights
       {
          get { return (global::Sungero.Commons.IExternalEntityLinkAccessRights)base.AccessRights; }
       }

       public new global::Sungero.Commons.IExternalEntityLinkInfo Info
       {
          get { return (global::Sungero.Commons.IExternalEntityLinkInfo)base.Info; }
       }

       protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
       {
         return new global::Sungero.Commons.Client.ExternalEntityLinkTypeAccessRights(typeof(T));
       }
    }
}

// ==================================================================
// ExternalEntityLinkAccessRights.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Commons.Client
{
  public class ExternalEntityLinkAccessRights : 
    Sungero.CoreEntities.Client.DatabookEntryAccessRights, Sungero.Commons.IExternalEntityLinkAccessRights
  {

    public ExternalEntityLinkAccessRights(global::Sungero.Domain.Shared.IEntity entity) : base(entity)
    {
    }
  }

  public class ExternalEntityLinkTypeAccessRights : 
    Sungero.CoreEntities.Client.DatabookEntryTypeAccessRights, Sungero.Commons.IExternalEntityLinkAccessRights
  {

    public ExternalEntityLinkTypeAccessRights(global::System.Type entityType) : base(entityType)
    {
    }
  }
}
