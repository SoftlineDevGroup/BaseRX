
// ==================================================================
// ContractCategoryState.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Contracts.Shared
{
  public class ContractCategoryState : 
    global::Sungero.Docflow.Shared.DocumentGroupBaseState, global::Sungero.Contracts.IContractCategoryState
  {
    public ContractCategoryState(global::Sungero.Contracts.IContractCategory entity) : base(entity) { }

    public new global::Sungero.Contracts.IContractCategoryPropertyStates Properties
    {
      get { return (global::Sungero.Contracts.IContractCategoryPropertyStates)base.Properties; }
    }

    protected override global::Sungero.Domain.Shared.IEntityPropertyStates CreatePropertyStates(global::Sungero.Domain.Shared.IEntity entity)
    {
      return new global::Sungero.Contracts.Shared.ContractCategoryPropertyStates(entity);
    }


    public new global::Sungero.Contracts.IContractCategoryControlStates Controls
    {
      get { return (global::Sungero.Contracts.IContractCategoryControlStates)base.Controls; }
    }

    protected override global::Sungero.Domain.Shared.IEntityControlStates CreateControlStates(global::Sungero.Domain.Shared.IEntity entity)
    {
      return new global::Sungero.Contracts.Shared.ContractCategoryControlStates(entity);
    }

    public new global::Sungero.Contracts.IContractCategoryPageStates Pages
    {
      get { return (global::Sungero.Contracts.IContractCategoryPageStates)base.Pages; }
    }

    protected override global::Sungero.Domain.Shared.IEntityPageStates CreatePageStates(global::Sungero.Domain.Shared.IEntity entity)
    {
      return new global::Sungero.Contracts.Shared.ContractCategoryPageStates(entity);
    }

  }


  public class ContractCategoryControlStates : 
    global::Sungero.Docflow.Shared.DocumentGroupBaseControlStates, global::Sungero.Contracts.IContractCategoryControlStates
  {

    protected internal ContractCategoryControlStates(global::Sungero.Domain.Shared.IEntity entity) : base(entity) { }
  }
  public class ContractCategoryPageStates : 
    global::Sungero.Docflow.Shared.DocumentGroupBasePageStates, global::Sungero.Contracts.IContractCategoryPageStates
  {

    protected internal ContractCategoryPageStates(global::Sungero.Domain.Shared.IEntity entity) : base(entity) { }
  }

  public class ContractCategoryPropertyStates : 
    global::Sungero.Docflow.Shared.DocumentGroupBasePropertyStates, global::Sungero.Contracts.IContractCategoryPropertyStates
  {
            public new global::Sungero.Contracts.IContractCategoryDocumentKindsCollectionPropertyState<global::Sungero.Contracts.IContractCategoryDocumentKinds> DocumentKinds
            {
              get { return (global::Sungero.Contracts.IContractCategoryDocumentKindsCollectionPropertyState<global::Sungero.Contracts.IContractCategoryDocumentKinds>)base.DocumentKinds; }
            }

            protected override global::Sungero.Docflow.IDocumentGroupBaseDocumentKindsCollectionPropertyState<global::Sungero.Docflow.IDocumentGroupBaseDocumentKinds> CreateDocumentKindsState(global::Sungero.Domain.Shared.IEntity entity, string propertyName)
            {
              return new global::Sungero.Contracts.Shared.ContractCategoryDocumentKindsCollectionPropertyState<global::Sungero.Contracts.IContractCategoryDocumentKinds>(entity, propertyName);
            }


    protected internal ContractCategoryPropertyStates(global::Sungero.Domain.Shared.IEntity entity) : base(entity) { }
  }

}

// ==================================================================
// ContractCategoryEventArgs.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Contracts.Shared
{  
}

// ==================================================================
// ContractCategoryInfo.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Contracts.Shared
{
  public class ContractCategoryInfo : 
    global::Sungero.Docflow.Shared.DocumentGroupBaseInfo, global::Sungero.Contracts.IContractCategoryInfo
  {
    public ContractCategoryInfo(global::System.Type entityType) : base(entityType) { }

    public new global::Sungero.Contracts.IContractCategoryPropertiesInfo Properties
    {
      get { return (global::Sungero.Contracts.IContractCategoryPropertiesInfo)base.Properties; }
    }

    protected override global::Sungero.Domain.Shared.IEntityPropertiesInfo CreateEntityPropertiesInfo(global::System.Type entityType)
    {
      return new global::Sungero.Contracts.Shared.ContractCategoryPropertiesInfo(entityType);
    }

  }

  public class ContractCategoryPropertiesInfo : 
    global::Sungero.Docflow.Shared.DocumentGroupBasePropertiesInfo, global::Sungero.Contracts.IContractCategoryPropertiesInfo
  {
        public new global::Sungero.Domain.Shared.ICollectionPropertyInfo<global::Sungero.Contracts.IContractCategoryDocumentKindsPropertiesInfo> DocumentKinds
        {
          get
          {
             var propertyMetadata = this.GetPropertyMetadata<global::Sungero.Metadata.CollectionPropertyMetadata>("DocumentKinds");
             return new global::Sungero.Domain.Shared.CollectionPropertyInfo<global::Sungero.Contracts.IContractCategoryDocumentKindsPropertiesInfo>(propertyMetadata);
          }
        }


    protected internal ContractCategoryPropertiesInfo(global::System.Type entityType) : base(entityType) { }
  }

}

// ==================================================================
// ContractCategoryHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Contracts
{
  public partial class ContractCategorySharedHandlers : global::Sungero.Docflow.DocumentGroupBaseSharedHandlers
  {
    private global::Sungero.Contracts.IContractCategory _obj
    {
      get { return (global::Sungero.Contracts.IContractCategory)this.Entity; }
    }


    public ContractCategorySharedHandlers(global::Sungero.Contracts.IContractCategory entity) : base(entity)
    {
    }
  }

}

// ==================================================================
// ContractCategoryResources.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Contracts.Shared.ContractCategory
{
  /// <summary>
  /// Represents ContractCategory resources.
  /// </summary>
  public class ContractCategoryResources : global::Sungero.Docflow.Shared.DocumentGroupBase.DocumentGroupBaseResources, global::Sungero.Contracts.ContractCategory.IContractCategoryResources
  {
  }
}

// ==================================================================
// ContractCategorySharedFunctions.g.cs
// ==================================================================

namespace Sungero.Contracts.Shared
{
  public partial class ContractCategoryFunctions : global::Sungero.Docflow.Shared.DocumentGroupBaseFunctions
  {
    private global::Sungero.Contracts.IContractCategory _obj
    {
      get { return (global::Sungero.Contracts.IContractCategory)this.Entity; }
    }

    public ContractCategoryFunctions(global::Sungero.Contracts.IContractCategory entity) : base(entity) { }
  }
}

// ==================================================================
// ContractCategoryFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Contracts.Functions
{
  internal static class ContractCategory
  {
    /// <redirect project="Sungero.Contracts.Shared" type="Sungero.Contracts.Shared.ContractCategoryFunctions" />
    internal static  global::System.Collections.Generic.List<global::Sungero.Docflow.IDocumentKind> GetAllowedDocumentKinds()
    {
      return global::Sungero.Contracts.Shared.ContractCategoryFunctions.GetAllowedDocumentKinds();
    }
    /// <redirect project="Sungero.Contracts.Shared" type="Sungero.Contracts.Shared.ContractCategoryFunctions" />
    internal static  global::System.Collections.Generic.List<global::Sungero.Docflow.IDocumentGroupBase> GetFilteredContractCategoris(global::System.Collections.Generic.List<global::Sungero.Docflow.IDocumentKind> documentKinds)
    {
      return global::Sungero.Contracts.Shared.ContractCategoryFunctions.GetFilteredContractCategoris(documentKinds);
    }

  }
}

// ==================================================================
// ContractCategoryFilterState.g.cs
// ==================================================================

namespace Sungero.Contracts.Shared.ContractCategory
{

  public class ContractCategoryFilterInfo : global::Sungero.Docflow.Shared.DocumentGroupBase.DocumentGroupBaseFilterInfo,
    global::Sungero.Contracts.IContractCategoryFilterInfo
  {
  }

  public class ContractCategoryFilterState : global::Sungero.Docflow.Shared.DocumentGroupBase.DocumentGroupBaseFilterState,
    global::Sungero.Contracts.IContractCategoryFilterState
  {



    public new Sungero.Contracts.IContractCategoryFilterInfo Info
    {
      get
      {
        return (Sungero.Contracts.IContractCategoryFilterInfo) base.Info;
      }
    }
    protected override global::Sungero.Domain.Shared.IFilterInfo CreateFilterInfo()
    {
      return new Sungero.Contracts.Shared.ContractCategory.ContractCategoryFilterInfo();
    }

  }
}

// ==================================================================
// ContractCategorySharedPublicFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Contracts.Shared
{
  public class ContractCategorySharedPublicFunctions : global::Sungero.Contracts.Shared.IContractCategorySharedPublicFunctions
  {
    public global::System.Collections.Generic.List<global::Sungero.Docflow.IDocumentKind> GetAllowedDocumentKinds()
    {
      return global::Sungero.Contracts.Functions.ContractCategory.GetAllowedDocumentKinds();
    }
    public global::System.Collections.Generic.List<global::Sungero.Docflow.IDocumentGroupBase> GetFilteredContractCategoris(global::System.Collections.Generic.List<global::Sungero.Docflow.IDocumentKind> documentKinds)
    {
      return global::Sungero.Contracts.Functions.ContractCategory.GetFilteredContractCategoris(documentKinds);
    }
  }
}
