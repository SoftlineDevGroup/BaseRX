
// ==================================================================
// ContractsApprovalRuleState.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Contracts.Shared
{
  public class ContractsApprovalRuleState : 
    global::Sungero.Docflow.Shared.ApprovalRuleBaseState, global::Sungero.Contracts.IContractsApprovalRuleState
  {
    public ContractsApprovalRuleState(global::Sungero.Contracts.IContractsApprovalRule entity) : base(entity) { }

    public new global::Sungero.Contracts.IContractsApprovalRulePropertyStates Properties
    {
      get { return (global::Sungero.Contracts.IContractsApprovalRulePropertyStates)base.Properties; }
    }

    protected override global::Sungero.Domain.Shared.IEntityPropertyStates CreatePropertyStates(global::Sungero.Domain.Shared.IEntity entity)
    {
      return new global::Sungero.Contracts.Shared.ContractsApprovalRulePropertyStates(entity);
    }


    public new global::Sungero.Contracts.IContractsApprovalRuleControlStates Controls
    {
      get { return (global::Sungero.Contracts.IContractsApprovalRuleControlStates)base.Controls; }
    }

    protected override global::Sungero.Domain.Shared.IEntityControlStates CreateControlStates(global::Sungero.Domain.Shared.IEntity entity)
    {
      return new global::Sungero.Contracts.Shared.ContractsApprovalRuleControlStates(entity);
    }

    public new global::Sungero.Contracts.IContractsApprovalRulePageStates Pages
    {
      get { return (global::Sungero.Contracts.IContractsApprovalRulePageStates)base.Pages; }
    }

    protected override global::Sungero.Domain.Shared.IEntityPageStates CreatePageStates(global::Sungero.Domain.Shared.IEntity entity)
    {
      return new global::Sungero.Contracts.Shared.ContractsApprovalRulePageStates(entity);
    }

  }


  public class ContractsApprovalRuleControlStates : 
    global::Sungero.Docflow.Shared.ApprovalRuleBaseControlStates, global::Sungero.Contracts.IContractsApprovalRuleControlStates
  {

    protected internal ContractsApprovalRuleControlStates(global::Sungero.Domain.Shared.IEntity entity) : base(entity) { }
  }
  public class ContractsApprovalRulePageStates : 
    global::Sungero.Docflow.Shared.ApprovalRuleBasePageStates, global::Sungero.Contracts.IContractsApprovalRulePageStates
  {

    protected internal ContractsApprovalRulePageStates(global::Sungero.Domain.Shared.IEntity entity) : base(entity) { }
  }

  public class ContractsApprovalRulePropertyStates : 
    global::Sungero.Docflow.Shared.ApprovalRuleBasePropertyStates, global::Sungero.Contracts.IContractsApprovalRulePropertyStates
  {
            public new global::Sungero.Contracts.IContractsApprovalRuleConditionsCollectionPropertyState<global::Sungero.Contracts.IContractsApprovalRuleConditions> Conditions
            {
              get { return (global::Sungero.Contracts.IContractsApprovalRuleConditionsCollectionPropertyState<global::Sungero.Contracts.IContractsApprovalRuleConditions>)base.Conditions; }
            }

            protected override global::Sungero.Docflow.IApprovalRuleBaseConditionsCollectionPropertyState<global::Sungero.Docflow.IApprovalRuleBaseConditions> CreateConditionsState(global::Sungero.Domain.Shared.IEntity entity, string propertyName)
            {
              return new global::Sungero.Contracts.Shared.ContractsApprovalRuleConditionsCollectionPropertyState<global::Sungero.Contracts.IContractsApprovalRuleConditions>(entity, propertyName);
            }
            public new global::Sungero.Contracts.IContractsApprovalRuleDocumentKindsCollectionPropertyState<global::Sungero.Contracts.IContractsApprovalRuleDocumentKinds> DocumentKinds
            {
              get { return (global::Sungero.Contracts.IContractsApprovalRuleDocumentKindsCollectionPropertyState<global::Sungero.Contracts.IContractsApprovalRuleDocumentKinds>)base.DocumentKinds; }
            }

            protected override global::Sungero.Docflow.IApprovalRuleBaseDocumentKindsCollectionPropertyState<global::Sungero.Docflow.IApprovalRuleBaseDocumentKinds> CreateDocumentKindsState(global::Sungero.Domain.Shared.IEntity entity, string propertyName)
            {
              return new global::Sungero.Contracts.Shared.ContractsApprovalRuleDocumentKindsCollectionPropertyState<global::Sungero.Contracts.IContractsApprovalRuleDocumentKinds>(entity, propertyName);
            }
            public new global::Sungero.Contracts.IContractsApprovalRuleDocumentGroupsCollectionPropertyState<global::Sungero.Contracts.IContractsApprovalRuleDocumentGroups> DocumentGroups
            {
              get { return (global::Sungero.Contracts.IContractsApprovalRuleDocumentGroupsCollectionPropertyState<global::Sungero.Contracts.IContractsApprovalRuleDocumentGroups>)base.DocumentGroups; }
            }

            protected override global::Sungero.Docflow.IApprovalRuleBaseDocumentGroupsCollectionPropertyState<global::Sungero.Docflow.IApprovalRuleBaseDocumentGroups> CreateDocumentGroupsState(global::Sungero.Domain.Shared.IEntity entity, string propertyName)
            {
              return new global::Sungero.Contracts.Shared.ContractsApprovalRuleDocumentGroupsCollectionPropertyState<global::Sungero.Contracts.IContractsApprovalRuleDocumentGroups>(entity, propertyName);
            }
            public new global::Sungero.Contracts.IContractsApprovalRuleDepartmentsCollectionPropertyState<global::Sungero.Contracts.IContractsApprovalRuleDepartments> Departments
            {
              get { return (global::Sungero.Contracts.IContractsApprovalRuleDepartmentsCollectionPropertyState<global::Sungero.Contracts.IContractsApprovalRuleDepartments>)base.Departments; }
            }

            protected override global::Sungero.Docflow.IApprovalRuleBaseDepartmentsCollectionPropertyState<global::Sungero.Docflow.IApprovalRuleBaseDepartments> CreateDepartmentsState(global::Sungero.Domain.Shared.IEntity entity, string propertyName)
            {
              return new global::Sungero.Contracts.Shared.ContractsApprovalRuleDepartmentsCollectionPropertyState<global::Sungero.Contracts.IContractsApprovalRuleDepartments>(entity, propertyName);
            }
            public new global::Sungero.Contracts.IContractsApprovalRuleStagesCollectionPropertyState<global::Sungero.Contracts.IContractsApprovalRuleStages> Stages
            {
              get { return (global::Sungero.Contracts.IContractsApprovalRuleStagesCollectionPropertyState<global::Sungero.Contracts.IContractsApprovalRuleStages>)base.Stages; }
            }

            protected override global::Sungero.Docflow.IApprovalRuleBaseStagesCollectionPropertyState<global::Sungero.Docflow.IApprovalRuleBaseStages> CreateStagesState(global::Sungero.Domain.Shared.IEntity entity, string propertyName)
            {
              return new global::Sungero.Contracts.Shared.ContractsApprovalRuleStagesCollectionPropertyState<global::Sungero.Contracts.IContractsApprovalRuleStages>(entity, propertyName);
            }
            public new global::Sungero.Contracts.IContractsApprovalRuleBusinessUnitsCollectionPropertyState<global::Sungero.Contracts.IContractsApprovalRuleBusinessUnits> BusinessUnits
            {
              get { return (global::Sungero.Contracts.IContractsApprovalRuleBusinessUnitsCollectionPropertyState<global::Sungero.Contracts.IContractsApprovalRuleBusinessUnits>)base.BusinessUnits; }
            }

            protected override global::Sungero.Docflow.IApprovalRuleBaseBusinessUnitsCollectionPropertyState<global::Sungero.Docflow.IApprovalRuleBaseBusinessUnits> CreateBusinessUnitsState(global::Sungero.Domain.Shared.IEntity entity, string propertyName)
            {
              return new global::Sungero.Contracts.Shared.ContractsApprovalRuleBusinessUnitsCollectionPropertyState<global::Sungero.Contracts.IContractsApprovalRuleBusinessUnits>(entity, propertyName);
            }
            public new global::Sungero.Contracts.IContractsApprovalRuleTransitionsCollectionPropertyState<global::Sungero.Contracts.IContractsApprovalRuleTransitions> Transitions
            {
              get { return (global::Sungero.Contracts.IContractsApprovalRuleTransitionsCollectionPropertyState<global::Sungero.Contracts.IContractsApprovalRuleTransitions>)base.Transitions; }
            }

            protected override global::Sungero.Docflow.IApprovalRuleBaseTransitionsCollectionPropertyState<global::Sungero.Docflow.IApprovalRuleBaseTransitions> CreateTransitionsState(global::Sungero.Domain.Shared.IEntity entity, string propertyName)
            {
              return new global::Sungero.Contracts.Shared.ContractsApprovalRuleTransitionsCollectionPropertyState<global::Sungero.Contracts.IContractsApprovalRuleTransitions>(entity, propertyName);
            }


    protected internal ContractsApprovalRulePropertyStates(global::Sungero.Domain.Shared.IEntity entity) : base(entity) { }
  }

}

// ==================================================================
// ContractsApprovalRuleEventArgs.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Contracts.Shared
{  
}

// ==================================================================
// ContractsApprovalRuleInfo.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Contracts.Shared
{
  public class ContractsApprovalRuleInfo : 
    global::Sungero.Docflow.Shared.ApprovalRuleBaseInfo, global::Sungero.Contracts.IContractsApprovalRuleInfo
  {
    public ContractsApprovalRuleInfo(global::System.Type entityType) : base(entityType) { }

    public new global::Sungero.Contracts.IContractsApprovalRulePropertiesInfo Properties
    {
      get { return (global::Sungero.Contracts.IContractsApprovalRulePropertiesInfo)base.Properties; }
    }

    protected override global::Sungero.Domain.Shared.IEntityPropertiesInfo CreateEntityPropertiesInfo(global::System.Type entityType)
    {
      return new global::Sungero.Contracts.Shared.ContractsApprovalRulePropertiesInfo(entityType);
    }

  }

  public class ContractsApprovalRulePropertiesInfo : 
    global::Sungero.Docflow.Shared.ApprovalRuleBasePropertiesInfo, global::Sungero.Contracts.IContractsApprovalRulePropertiesInfo
  {
        public new global::Sungero.Domain.Shared.ICollectionPropertyInfo<global::Sungero.Contracts.IContractsApprovalRuleConditionsPropertiesInfo> Conditions
        {
          get
          {
             var propertyMetadata = this.GetPropertyMetadata<global::Sungero.Metadata.CollectionPropertyMetadata>("Conditions");
             return new global::Sungero.Domain.Shared.CollectionPropertyInfo<global::Sungero.Contracts.IContractsApprovalRuleConditionsPropertiesInfo>(propertyMetadata);
          }
        }
        public new global::Sungero.Domain.Shared.ICollectionPropertyInfo<global::Sungero.Contracts.IContractsApprovalRuleDocumentKindsPropertiesInfo> DocumentKinds
        {
          get
          {
             var propertyMetadata = this.GetPropertyMetadata<global::Sungero.Metadata.CollectionPropertyMetadata>("DocumentKinds");
             return new global::Sungero.Domain.Shared.CollectionPropertyInfo<global::Sungero.Contracts.IContractsApprovalRuleDocumentKindsPropertiesInfo>(propertyMetadata);
          }
        }
        public new global::Sungero.Domain.Shared.ICollectionPropertyInfo<global::Sungero.Contracts.IContractsApprovalRuleDocumentGroupsPropertiesInfo> DocumentGroups
        {
          get
          {
             var propertyMetadata = this.GetPropertyMetadata<global::Sungero.Metadata.CollectionPropertyMetadata>("DocumentGroups");
             return new global::Sungero.Domain.Shared.CollectionPropertyInfo<global::Sungero.Contracts.IContractsApprovalRuleDocumentGroupsPropertiesInfo>(propertyMetadata);
          }
        }
        public new global::Sungero.Domain.Shared.ICollectionPropertyInfo<global::Sungero.Contracts.IContractsApprovalRuleDepartmentsPropertiesInfo> Departments
        {
          get
          {
             var propertyMetadata = this.GetPropertyMetadata<global::Sungero.Metadata.CollectionPropertyMetadata>("Departments");
             return new global::Sungero.Domain.Shared.CollectionPropertyInfo<global::Sungero.Contracts.IContractsApprovalRuleDepartmentsPropertiesInfo>(propertyMetadata);
          }
        }
        public new global::Sungero.Domain.Shared.ICollectionPropertyInfo<global::Sungero.Contracts.IContractsApprovalRuleStagesPropertiesInfo> Stages
        {
          get
          {
             var propertyMetadata = this.GetPropertyMetadata<global::Sungero.Metadata.CollectionPropertyMetadata>("Stages");
             return new global::Sungero.Domain.Shared.CollectionPropertyInfo<global::Sungero.Contracts.IContractsApprovalRuleStagesPropertiesInfo>(propertyMetadata);
          }
        }
        public new global::Sungero.Domain.Shared.ICollectionPropertyInfo<global::Sungero.Contracts.IContractsApprovalRuleBusinessUnitsPropertiesInfo> BusinessUnits
        {
          get
          {
             var propertyMetadata = this.GetPropertyMetadata<global::Sungero.Metadata.CollectionPropertyMetadata>("BusinessUnits");
             return new global::Sungero.Domain.Shared.CollectionPropertyInfo<global::Sungero.Contracts.IContractsApprovalRuleBusinessUnitsPropertiesInfo>(propertyMetadata);
          }
        }
        public new global::Sungero.Domain.Shared.ICollectionPropertyInfo<global::Sungero.Contracts.IContractsApprovalRuleTransitionsPropertiesInfo> Transitions
        {
          get
          {
             var propertyMetadata = this.GetPropertyMetadata<global::Sungero.Metadata.CollectionPropertyMetadata>("Transitions");
             return new global::Sungero.Domain.Shared.CollectionPropertyInfo<global::Sungero.Contracts.IContractsApprovalRuleTransitionsPropertiesInfo>(propertyMetadata);
          }
        }


    protected internal ContractsApprovalRulePropertiesInfo(global::System.Type entityType) : base(entityType) { }
  }

}

// ==================================================================
// ContractsApprovalRuleHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Contracts
{
  public partial class ContractsApprovalRuleSharedHandlers : global::Sungero.Docflow.ApprovalRuleBaseSharedHandlers
  {
    private global::Sungero.Contracts.IContractsApprovalRule _obj
    {
      get { return (global::Sungero.Contracts.IContractsApprovalRule)this.Entity; }
    }


    public ContractsApprovalRuleSharedHandlers(global::Sungero.Contracts.IContractsApprovalRule entity) : base(entity)
    {
    }
  }

}

// ==================================================================
// ContractsApprovalRuleResources.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Contracts.Shared.ContractsApprovalRule
{
  /// <summary>
  /// Represents ContractsApprovalRule resources.
  /// </summary>
  public class ContractsApprovalRuleResources : global::Sungero.Docflow.Shared.ApprovalRuleBase.ApprovalRuleBaseResources, global::Sungero.Contracts.ContractsApprovalRule.IContractsApprovalRuleResources
  {
    public virtual global::CommonLibrary.LocalizedString IncompatibleCategoriesExcluded
    {
      get
      {
        return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Contracts.IContractsApprovalRule) , "IncompatibleCategoriesExcluded");
      }
    }

    public virtual global::CommonLibrary.LocalizedString IncompatibleCategoriesExcludedFormat(params object[] args)
    {
      return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Contracts.IContractsApprovalRule), "IncompatibleCategoriesExcluded", false, args);
    }

  }
}

// ==================================================================
// ContractsApprovalRuleSharedFunctions.g.cs
// ==================================================================

namespace Sungero.Contracts.Shared
{
  public partial class ContractsApprovalRuleFunctions : global::Sungero.Docflow.Shared.ApprovalRuleBaseFunctions
  {
    private global::Sungero.Contracts.IContractsApprovalRule _obj
    {
      get { return (global::Sungero.Contracts.IContractsApprovalRule)this.Entity; }
    }

    public ContractsApprovalRuleFunctions(global::Sungero.Contracts.IContractsApprovalRule entity) : base(entity) { }
  }
}

// ==================================================================
// ContractsApprovalRuleFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Contracts.Functions
{
  internal static class ContractsApprovalRule
  {
    /// <redirect project="Sungero.Contracts.Shared" type="Sungero.Contracts.Shared.ContractsApprovalRuleFunctions" />
    internal static  global::System.String GetIncompatibleDocumentGroupsExcludedHint(global::Sungero.Contracts.IContractsApprovalRule contractsApprovalRule)
    {
      var functions = (global::Sungero.Contracts.Shared.ContractsApprovalRuleFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)contractsApprovalRule).FunctionsContainer.SharedFunctions;
      return functions.GetIncompatibleDocumentGroupsExcludedHint();
    }
    /// <redirect project="Sungero.Contracts.Shared" type="Sungero.Contracts.Shared.ContractsApprovalRuleFunctions" />
    internal static  global::System.Collections.Generic.List<global::Sungero.Docflow.IDocumentGroupBase> GetAvailableDocumentGroups(global::Sungero.Contracts.IContractsApprovalRule contractsApprovalRule)
    {
      var functions = (global::Sungero.Contracts.Shared.ContractsApprovalRuleFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)contractsApprovalRule).FunctionsContainer.SharedFunctions;
      return functions.GetAvailableDocumentGroups();
    }

  }
}

// ==================================================================
// ContractsApprovalRuleFilterState.g.cs
// ==================================================================

namespace Sungero.Contracts.Shared.ContractsApprovalRule
{

  public class ContractsApprovalRuleFilterInfo : global::Sungero.Docflow.Shared.ApprovalRuleBase.ApprovalRuleBaseFilterInfo,
    global::Sungero.Contracts.IContractsApprovalRuleFilterInfo
  {
  }

  public class ContractsApprovalRuleFilterState : global::Sungero.Docflow.Shared.ApprovalRuleBase.ApprovalRuleBaseFilterState,
    global::Sungero.Contracts.IContractsApprovalRuleFilterState
  {



    public new Sungero.Contracts.IContractsApprovalRuleFilterInfo Info
    {
      get
      {
        return (Sungero.Contracts.IContractsApprovalRuleFilterInfo) base.Info;
      }
    }
    protected override global::Sungero.Domain.Shared.IFilterInfo CreateFilterInfo()
    {
      return new Sungero.Contracts.Shared.ContractsApprovalRule.ContractsApprovalRuleFilterInfo();
    }

  }
}

// ==================================================================
// ContractsApprovalRuleSharedPublicFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Contracts.Shared
{
  public class ContractsApprovalRuleSharedPublicFunctions : global::Sungero.Contracts.Shared.IContractsApprovalRuleSharedPublicFunctions
  {
  }
}
