
// ==================================================================
// ContractualDocumentMilestonesState.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Contracts.Shared
{
  public class ContractualDocumentMilestonesState : 
    global::Sungero.Domain.Shared.ChildEntityState, global::Sungero.Contracts.IContractualDocumentMilestonesState
  {
    public ContractualDocumentMilestonesState(global::Sungero.Contracts.IContractualDocumentMilestones entity) : base(entity) { }

    public new global::Sungero.Contracts.IContractualDocumentMilestonesPropertyStates Properties
    {
      get { return (global::Sungero.Contracts.IContractualDocumentMilestonesPropertyStates)base.Properties; }
    }

    protected override global::Sungero.Domain.Shared.IEntityPropertyStates CreatePropertyStates(global::Sungero.Domain.Shared.IEntity entity)
    {
      return new global::Sungero.Contracts.Shared.ContractualDocumentMilestonesPropertyStates(entity);
    }


  }


  public class ContractualDocumentMilestonesPropertyStates : 
    global::Sungero.Domain.Shared.ChildEntityPropertyStates, global::Sungero.Contracts.IContractualDocumentMilestonesPropertyStates
  {
            public global::Sungero.Domain.Shared.IPropertyState<global::Sungero.Contracts.IContractualDocument> ContractualDocument 
            {
              get { return this.InternalContractualDocument; }
            }

            protected virtual global::Sungero.Domain.Shared.IPropertyState<global::Sungero.Contracts.IContractualDocument> InternalContractualDocument
            {
              get { return this.GetPropertyState<global::Sungero.Contracts.IContractualDocument>("ContractualDocument"); }
            }
            public global::Sungero.Domain.Shared.IPropertyState<global::System.String> Name 
            {
              get { return this.GetPropertyState<global::System.String>("Name"); }
            }
            public global::Sungero.Domain.Shared.IPropertyState<global::System.DateTime?> Deadline 
            {
              get { return this.GetPropertyState<global::System.DateTime?>("Deadline"); }
            }
            public global::Sungero.Domain.Shared.IPropertyState<global::System.Int32?> DaysToFinishWorks 
            {
              get { return this.GetPropertyState<global::System.Int32?>("DaysToFinishWorks"); }
            }
            public global::Sungero.Domain.Shared.IPropertyState<global::Sungero.Company.IEmployee> Performer 
            {
              get { return this.InternalPerformer; }
            }

            protected virtual global::Sungero.Domain.Shared.IPropertyState<global::Sungero.Company.IEmployee> InternalPerformer
            {
              get { return this.GetPropertyState<global::Sungero.Company.IEmployee>("Performer"); }
            }
            public global::Sungero.Domain.Shared.IPropertyState<global::System.Boolean?> IsCompleted 
            {
              get { return this.GetPropertyState<global::System.Boolean?>("IsCompleted"); }
            }
            public global::Sungero.Domain.Shared.IPropertyState<global::System.String> Note 
            {
              get { return this.GetPropertyState<global::System.String>("Note"); }
            }
            public global::Sungero.Domain.Shared.IPropertyState<global::Sungero.Workflow.ISimpleTask> Task 
            {
              get { return this.InternalTask; }
            }

            protected virtual global::Sungero.Domain.Shared.IPropertyState<global::Sungero.Workflow.ISimpleTask> InternalTask
            {
              get { return this.GetPropertyState<global::Sungero.Workflow.ISimpleTask>("Task"); }
            }


    protected internal ContractualDocumentMilestonesPropertyStates(global::Sungero.Domain.Shared.IEntity entity) : base(entity) { }
  }

  public class ContractualDocumentMilestonesCollectionPropertyState<T> :
    global::Sungero.Domain.Shared.ChildEntityCollectionPropertyState<T>, global::Sungero.Contracts.IContractualDocumentMilestonesCollectionPropertyState<T>
    where T : global::Sungero.Contracts.IContractualDocumentMilestones
  {
    public new global::Sungero.Contracts.IContractualDocumentMilestonesCollectionPropertyStates Properties
    {
      get { return (global::Sungero.Contracts.IContractualDocumentMilestonesCollectionPropertyStates)base.Properties; }
    }

    protected override global::Sungero.Domain.Shared.IChildEntityCollectionPropertyStates CreatePropertyStates()
    {
      return new global::Sungero.Contracts.Shared.ContractualDocumentMilestonesCollectionPropertyStates(this.ChildEntityMetadata);
    }

    protected internal ContractualDocumentMilestonesCollectionPropertyState(global::Sungero.Domain.Shared.IEntity entity, string propertyName) : base(entity, propertyName) { }
  }

  public class ContractualDocumentMilestonesCollectionPropertyStates :
    global::Sungero.Domain.Shared.ChildEntityCollectionPropertyStates, global::Sungero.Contracts.IContractualDocumentMilestonesCollectionPropertyStates
  {
        public global::Sungero.Domain.Shared.IChildPropertySummaryState ContractualDocument
        {
          get { return this.GetChildPropertySummaryState("ContractualDocument"); }
        }
        public global::Sungero.Domain.Shared.IChildPropertySummaryState Name
        {
          get { return this.GetChildPropertySummaryState("Name"); }
        }
        public global::Sungero.Domain.Shared.IChildPropertySummaryState Deadline
        {
          get { return this.GetChildPropertySummaryState("Deadline"); }
        }
        public global::Sungero.Domain.Shared.IChildPropertySummaryState DaysToFinishWorks
        {
          get { return this.GetChildPropertySummaryState("DaysToFinishWorks"); }
        }
        public global::Sungero.Domain.Shared.IChildPropertySummaryState Performer
        {
          get { return this.GetChildPropertySummaryState("Performer"); }
        }
        public global::Sungero.Domain.Shared.IChildPropertySummaryState IsCompleted
        {
          get { return this.GetChildPropertySummaryState("IsCompleted"); }
        }
        public global::Sungero.Domain.Shared.IChildPropertySummaryState Note
        {
          get { return this.GetChildPropertySummaryState("Note"); }
        }
        public global::Sungero.Domain.Shared.IChildPropertySummaryState Task
        {
          get { return this.GetChildPropertySummaryState("Task"); }
        }


    protected internal ContractualDocumentMilestonesCollectionPropertyStates(global::Sungero.Metadata.EntityMetadata childEntityMetadata) : base(childEntityMetadata) { }
  }
}

// ==================================================================
// ContractualDocumentMilestonesEventArgs.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Contracts.Shared
{  
    public class ContractualDocumentMilestonesPerformerChangedEventArgs : global::Sungero.Domain.Shared.PropertyChangedEventArgs<global::Sungero.Company.IEmployee>
    {
      public ContractualDocumentMilestonesPerformerChangedEventArgs(global::Sungero.Domain.Shared.IPropertyState<global::Sungero.Company.IEmployee> state, global::Sungero.Company.IEmployee newValue, global::Sungero.Domain.Shared.IEntity entity): base(state, newValue, entity) { }
    }



    public class ContractualDocumentMilestonesTaskChangedEventArgs : global::Sungero.Domain.Shared.PropertyChangedEventArgs<global::Sungero.Workflow.ISimpleTask>
    {
      public ContractualDocumentMilestonesTaskChangedEventArgs(global::Sungero.Domain.Shared.IPropertyState<global::Sungero.Workflow.ISimpleTask> state, global::Sungero.Workflow.ISimpleTask newValue, global::Sungero.Domain.Shared.IEntity entity): base(state, newValue, entity) { }
    }

}

// ==================================================================
// ContractualDocumentMilestonesInfo.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Contracts.Shared
{
  public class ContractualDocumentMilestonesInfo : 
    global::Sungero.Domain.Shared.ChildEntityInfo, global::Sungero.Contracts.IContractualDocumentMilestonesInfo
  {
    public ContractualDocumentMilestonesInfo(global::System.Type entityType) : base(entityType) { }

    public new global::Sungero.Contracts.IContractualDocumentMilestonesPropertiesInfo Properties
    {
      get { return (global::Sungero.Contracts.IContractualDocumentMilestonesPropertiesInfo)base.Properties; }
    }

    protected override global::Sungero.Domain.Shared.IEntityPropertiesInfo CreateEntityPropertiesInfo(global::System.Type entityType)
    {
      return new global::Sungero.Contracts.Shared.ContractualDocumentMilestonesPropertiesInfo(entityType);
    }

  }

  public class ContractualDocumentMilestonesPropertiesInfo : 
    global::Sungero.Domain.Shared.ChildEntityPropertiesInfo, global::Sungero.Contracts.IContractualDocumentMilestonesPropertiesInfo
  {
        public global::Sungero.Domain.Shared.INavigationPropertyInfo<global::Sungero.Contracts.IContractualDocumentInfo, global::Sungero.Contracts.IContractualDocument> ContractualDocument 
        {
          get
          {
             var propertyMetadata = this.GetPropertyMetadata<global::Sungero.Metadata.NavigationPropertyMetadata>("ContractualDocument");
             return new global::Sungero.Domain.Shared.NavigationPropertyInfo<global::Sungero.Contracts.IContractualDocumentInfo, global::Sungero.Contracts.IContractualDocument>(propertyMetadata);
          }
        }
        public global::Sungero.Domain.Shared.IStringPropertyInfo Name 
        {
          get
          {
             var propertyMetadata = this.GetPropertyMetadata<global::Sungero.Metadata.StringPropertyMetadata>("Name");
             return new global::Sungero.Domain.Shared.StringPropertyInfo(propertyMetadata);
          }
        }
        public global::Sungero.Domain.Shared.IDateTimePropertyInfo Deadline 
        {
          get
          {
             var propertyMetadata = this.GetPropertyMetadata<global::Sungero.Metadata.DateTimePropertyMetadata>("Deadline");
             return new global::Sungero.Domain.Shared.DateTimePropertyInfo(propertyMetadata);
          }
        }
        public global::Sungero.Domain.Shared.IIntegerPropertyInfo DaysToFinishWorks 
        {
          get
          {
             var propertyMetadata = this.GetPropertyMetadata<global::Sungero.Metadata.IntegerPropertyMetadata>("DaysToFinishWorks");
             return new global::Sungero.Domain.Shared.IntegerPropertyInfo(propertyMetadata);
          }
        }
        public global::Sungero.Domain.Shared.INavigationPropertyInfo<global::Sungero.Company.IEmployeeInfo, global::Sungero.Company.IEmployee> Performer 
        {
          get
          {
             var propertyMetadata = this.GetPropertyMetadata<global::Sungero.Metadata.NavigationPropertyMetadata>("Performer");
             return new global::Sungero.Domain.Shared.NavigationPropertyInfo<global::Sungero.Company.IEmployeeInfo, global::Sungero.Company.IEmployee>(propertyMetadata);
          }
        }
        public global::Sungero.Domain.Shared.IBooleanPropertyInfo IsCompleted 
        {
          get
          {
             var propertyMetadata = this.GetPropertyMetadata<global::Sungero.Metadata.BooleanPropertyMetadata>("IsCompleted");
             return new global::Sungero.Domain.Shared.BooleanPropertyInfo(propertyMetadata);
          }
        }
        public global::Sungero.Domain.Shared.IStringPropertyInfo Note 
        {
          get
          {
             var propertyMetadata = this.GetPropertyMetadata<global::Sungero.Metadata.StringPropertyMetadata>("Note");
             return new global::Sungero.Domain.Shared.StringPropertyInfo(propertyMetadata);
          }
        }
        public global::Sungero.Domain.Shared.INavigationPropertyInfo<global::Sungero.Workflow.ISimpleTaskInfo, global::Sungero.Workflow.ISimpleTask> Task 
        {
          get
          {
             var propertyMetadata = this.GetPropertyMetadata<global::Sungero.Metadata.NavigationPropertyMetadata>("Task");
             return new global::Sungero.Domain.Shared.NavigationPropertyInfo<global::Sungero.Workflow.ISimpleTaskInfo, global::Sungero.Workflow.ISimpleTask>(propertyMetadata);
          }
        }


    protected internal ContractualDocumentMilestonesPropertiesInfo(global::System.Type entityType) : base(entityType) { }
  }

}
