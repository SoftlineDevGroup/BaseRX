
// ==================================================================
// ContractConditionState.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Contracts.Shared
{
  public class ContractConditionState : 
    global::Sungero.Docflow.Shared.ConditionBaseState, global::Sungero.Contracts.IContractConditionState
  {
    public ContractConditionState(global::Sungero.Contracts.IContractCondition entity) : base(entity) { }

    public new global::Sungero.Contracts.IContractConditionPropertyStates Properties
    {
      get { return (global::Sungero.Contracts.IContractConditionPropertyStates)base.Properties; }
    }

    protected override global::Sungero.Domain.Shared.IEntityPropertyStates CreatePropertyStates(global::Sungero.Domain.Shared.IEntity entity)
    {
      return new global::Sungero.Contracts.Shared.ContractConditionPropertyStates(entity);
    }


    public new global::Sungero.Contracts.IContractConditionControlStates Controls
    {
      get { return (global::Sungero.Contracts.IContractConditionControlStates)base.Controls; }
    }

    protected override global::Sungero.Domain.Shared.IEntityControlStates CreateControlStates(global::Sungero.Domain.Shared.IEntity entity)
    {
      return new global::Sungero.Contracts.Shared.ContractConditionControlStates(entity);
    }

    public new global::Sungero.Contracts.IContractConditionPageStates Pages
    {
      get { return (global::Sungero.Contracts.IContractConditionPageStates)base.Pages; }
    }

    protected override global::Sungero.Domain.Shared.IEntityPageStates CreatePageStates(global::Sungero.Domain.Shared.IEntity entity)
    {
      return new global::Sungero.Contracts.Shared.ContractConditionPageStates(entity);
    }

  }


  public class ContractConditionControlStates : 
    global::Sungero.Docflow.Shared.ConditionBaseControlStates, global::Sungero.Contracts.IContractConditionControlStates
  {

    protected internal ContractConditionControlStates(global::Sungero.Domain.Shared.IEntity entity) : base(entity) { }
  }
  public class ContractConditionPageStates : 
    global::Sungero.Docflow.Shared.ConditionBasePageStates, global::Sungero.Contracts.IContractConditionPageStates
  {

    protected internal ContractConditionPageStates(global::Sungero.Domain.Shared.IEntity entity) : base(entity) { }
  }

  public class ContractConditionPropertyStates : 
    global::Sungero.Docflow.Shared.ConditionBasePropertyStates, global::Sungero.Contracts.IContractConditionPropertyStates
  {
            public new global::Sungero.Contracts.IContractConditionCurrenciesCollectionPropertyState<global::Sungero.Contracts.IContractConditionCurrencies> Currencies
            {
              get { return (global::Sungero.Contracts.IContractConditionCurrenciesCollectionPropertyState<global::Sungero.Contracts.IContractConditionCurrencies>)base.Currencies; }
            }

            protected override global::Sungero.Docflow.IConditionBaseCurrenciesCollectionPropertyState<global::Sungero.Docflow.IConditionBaseCurrencies> CreateCurrenciesState(global::Sungero.Domain.Shared.IEntity entity, string propertyName)
            {
              return new global::Sungero.Contracts.Shared.ContractConditionCurrenciesCollectionPropertyState<global::Sungero.Contracts.IContractConditionCurrencies>(entity, propertyName);
            }
            public new global::Sungero.Contracts.IContractConditionDocumentKindsCollectionPropertyState<global::Sungero.Contracts.IContractConditionDocumentKinds> DocumentKinds
            {
              get { return (global::Sungero.Contracts.IContractConditionDocumentKindsCollectionPropertyState<global::Sungero.Contracts.IContractConditionDocumentKinds>)base.DocumentKinds; }
            }

            protected override global::Sungero.Docflow.IConditionBaseDocumentKindsCollectionPropertyState<global::Sungero.Docflow.IConditionBaseDocumentKinds> CreateDocumentKindsState(global::Sungero.Domain.Shared.IEntity entity, string propertyName)
            {
              return new global::Sungero.Contracts.Shared.ContractConditionDocumentKindsCollectionPropertyState<global::Sungero.Contracts.IContractConditionDocumentKinds>(entity, propertyName);
            }
            public new global::Sungero.Contracts.IContractConditionConditionDocumentKindsCollectionPropertyState<global::Sungero.Contracts.IContractConditionConditionDocumentKinds> ConditionDocumentKinds
            {
              get { return (global::Sungero.Contracts.IContractConditionConditionDocumentKindsCollectionPropertyState<global::Sungero.Contracts.IContractConditionConditionDocumentKinds>)base.ConditionDocumentKinds; }
            }

            protected override global::Sungero.Docflow.IConditionBaseConditionDocumentKindsCollectionPropertyState<global::Sungero.Docflow.IConditionBaseConditionDocumentKinds> CreateConditionDocumentKindsState(global::Sungero.Domain.Shared.IEntity entity, string propertyName)
            {
              return new global::Sungero.Contracts.Shared.ContractConditionConditionDocumentKindsCollectionPropertyState<global::Sungero.Contracts.IContractConditionConditionDocumentKinds>(entity, propertyName);
            }
            public new global::Sungero.Contracts.IContractConditionDeliveryMethodsCollectionPropertyState<global::Sungero.Contracts.IContractConditionDeliveryMethods> DeliveryMethods
            {
              get { return (global::Sungero.Contracts.IContractConditionDeliveryMethodsCollectionPropertyState<global::Sungero.Contracts.IContractConditionDeliveryMethods>)base.DeliveryMethods; }
            }

            protected override global::Sungero.Docflow.IConditionBaseDeliveryMethodsCollectionPropertyState<global::Sungero.Docflow.IConditionBaseDeliveryMethods> CreateDeliveryMethodsState(global::Sungero.Domain.Shared.IEntity entity, string propertyName)
            {
              return new global::Sungero.Contracts.Shared.ContractConditionDeliveryMethodsCollectionPropertyState<global::Sungero.Contracts.IContractConditionDeliveryMethods>(entity, propertyName);
            }


    protected internal ContractConditionPropertyStates(global::Sungero.Domain.Shared.IEntity entity) : base(entity) { }
  }

}

// ==================================================================
// ContractConditionEventArgs.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Contracts.Shared
{  
}

// ==================================================================
// ContractConditionInfo.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Contracts.Shared
{
  public class ContractConditionInfo : 
    global::Sungero.Docflow.Shared.ConditionBaseInfo, global::Sungero.Contracts.IContractConditionInfo
  {
    public ContractConditionInfo(global::System.Type entityType) : base(entityType) { }

    public new global::Sungero.Contracts.IContractConditionPropertiesInfo Properties
    {
      get { return (global::Sungero.Contracts.IContractConditionPropertiesInfo)base.Properties; }
    }

    protected override global::Sungero.Domain.Shared.IEntityPropertiesInfo CreateEntityPropertiesInfo(global::System.Type entityType)
    {
      return new global::Sungero.Contracts.Shared.ContractConditionPropertiesInfo(entityType);
    }

  }

  public class ContractConditionPropertiesInfo : 
    global::Sungero.Docflow.Shared.ConditionBasePropertiesInfo, global::Sungero.Contracts.IContractConditionPropertiesInfo
  {
        public new global::Sungero.Domain.Shared.ICollectionPropertyInfo<global::Sungero.Contracts.IContractConditionCurrenciesPropertiesInfo> Currencies
        {
          get
          {
             var propertyMetadata = this.GetPropertyMetadata<global::Sungero.Metadata.CollectionPropertyMetadata>("Currencies");
             return new global::Sungero.Domain.Shared.CollectionPropertyInfo<global::Sungero.Contracts.IContractConditionCurrenciesPropertiesInfo>(propertyMetadata);
          }
        }
        public new global::Sungero.Domain.Shared.ICollectionPropertyInfo<global::Sungero.Contracts.IContractConditionDocumentKindsPropertiesInfo> DocumentKinds
        {
          get
          {
             var propertyMetadata = this.GetPropertyMetadata<global::Sungero.Metadata.CollectionPropertyMetadata>("DocumentKinds");
             return new global::Sungero.Domain.Shared.CollectionPropertyInfo<global::Sungero.Contracts.IContractConditionDocumentKindsPropertiesInfo>(propertyMetadata);
          }
        }
        public new global::Sungero.Domain.Shared.ICollectionPropertyInfo<global::Sungero.Contracts.IContractConditionConditionDocumentKindsPropertiesInfo> ConditionDocumentKinds
        {
          get
          {
             var propertyMetadata = this.GetPropertyMetadata<global::Sungero.Metadata.CollectionPropertyMetadata>("ConditionDocumentKinds");
             return new global::Sungero.Domain.Shared.CollectionPropertyInfo<global::Sungero.Contracts.IContractConditionConditionDocumentKindsPropertiesInfo>(propertyMetadata);
          }
        }
        public new global::Sungero.Domain.Shared.ICollectionPropertyInfo<global::Sungero.Contracts.IContractConditionDeliveryMethodsPropertiesInfo> DeliveryMethods
        {
          get
          {
             var propertyMetadata = this.GetPropertyMetadata<global::Sungero.Metadata.CollectionPropertyMetadata>("DeliveryMethods");
             return new global::Sungero.Domain.Shared.CollectionPropertyInfo<global::Sungero.Contracts.IContractConditionDeliveryMethodsPropertiesInfo>(propertyMetadata);
          }
        }


    protected internal ContractConditionPropertiesInfo(global::System.Type entityType) : base(entityType) { }
  }

}

// ==================================================================
// ContractConditionHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Contracts
{
  public partial class ContractConditionSharedHandlers : global::Sungero.Docflow.ConditionBaseSharedHandlers
  {
    private global::Sungero.Contracts.IContractCondition _obj
    {
      get { return (global::Sungero.Contracts.IContractCondition)this.Entity; }
    }


    public ContractConditionSharedHandlers(global::Sungero.Contracts.IContractCondition entity) : base(entity)
    {
    }
  }

}

// ==================================================================
// ContractConditionResources.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Contracts.Shared.ContractCondition
{
  /// <summary>
  /// Represents ContractCondition resources.
  /// </summary>
  public class ContractConditionResources : global::Sungero.Docflow.Shared.ConditionBase.ConditionBaseResources, global::Sungero.Contracts.ContractCondition.IContractConditionResources
  {
    public virtual global::CommonLibrary.LocalizedString StandardFormPropertyCanBeCheckedOnlyForContracts
    {
      get
      {
        return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Contracts.IContractCondition) , "StandardFormPropertyCanBeCheckedOnlyForContracts");
      }
    }

    public virtual global::CommonLibrary.LocalizedString StandardFormPropertyCanBeCheckedOnlyForContractsFormat(params object[] args)
    {
      return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Contracts.IContractCondition), "StandardFormPropertyCanBeCheckedOnlyForContracts", false, args);
    }
    public virtual global::CommonLibrary.LocalizedString TheStandardIsNotFilledInContractCard
    {
      get
      {
        return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Contracts.IContractCondition) , "TheStandardIsNotFilledInContractCard");
      }
    }

    public virtual global::CommonLibrary.LocalizedString TheStandardIsNotFilledInContractCardFormat(params object[] args)
    {
      return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Contracts.IContractCondition), "TheStandardIsNotFilledInContractCard", false, args);
    }
    public virtual global::CommonLibrary.LocalizedString StandardFormContract
    {
      get
      {
        return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Contracts.IContractCondition) , "StandardFormContract");
      }
    }

    public virtual global::CommonLibrary.LocalizedString StandardFormContractFormat(params object[] args)
    {
      return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Contracts.IContractCondition), "StandardFormContract", false, args);
    }
    public virtual global::CommonLibrary.LocalizedString NotStandardFormContract
    {
      get
      {
        return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Contracts.IContractCondition) , "NotStandardFormContract");
      }
    }

    public virtual global::CommonLibrary.LocalizedString NotStandardFormContractFormat(params object[] args)
    {
      return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Contracts.IContractCondition), "NotStandardFormContract", false, args);
    }

  }
}

// ==================================================================
// ContractConditionSharedFunctions.g.cs
// ==================================================================

namespace Sungero.Contracts.Shared
{
  public partial class ContractConditionFunctions : global::Sungero.Docflow.Shared.ConditionBaseFunctions
  {
    private global::Sungero.Contracts.IContractCondition _obj
    {
      get { return (global::Sungero.Contracts.IContractCondition)this.Entity; }
    }

    public ContractConditionFunctions(global::Sungero.Contracts.IContractCondition entity) : base(entity) { }
  }
}

// ==================================================================
// ContractConditionFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Contracts.Functions
{
  internal static class ContractCondition
  {
    /// <redirect project="Sungero.Contracts.Shared" type="Sungero.Contracts.Shared.ContractConditionFunctions" />
    internal static  System.Collections.Generic.Dictionary<global::System.String, global::System.Collections.Generic.List<global::System.Nullable<global::Sungero.Core.Enumeration>>> GetSupportedConditions(global::Sungero.Contracts.IContractCondition contractCondition)
    {
      var functions = (global::Sungero.Contracts.Shared.ContractConditionFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)contractCondition).FunctionsContainer.SharedFunctions;
      return functions.GetSupportedConditions();
    }
    /// <redirect project="Sungero.Contracts.Shared" type="Sungero.Contracts.Shared.ContractConditionFunctions" />
    internal static  Docflow.Structures.ConditionBase.ConditionResult CheckCondition(global::Sungero.Contracts.IContractCondition contractCondition, global::Sungero.Docflow.IOfficialDocument document, global::Sungero.Docflow.IApprovalTask task)
    {
      var functions = (global::Sungero.Contracts.Shared.ContractConditionFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)contractCondition).FunctionsContainer.SharedFunctions;
      return functions.CheckCondition(document, task);
    }

    internal static class Remote
    {
      /// <redirect project="Sungero.Contracts.Server" type="Sungero.Contracts.Server.ContractConditionFunctions" />
      internal static  global::Sungero.Contracts.IContractCondition CreateContractCondition()
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::Sungero.Contracts.IContractCondition>(
          global::System.Guid.Parse("0523387b-a689-41e5-bed3-95892df6922c"),
          "CreateContractCondition()"
      );
      }

    }
  }
}

// ==================================================================
// ContractConditionFilterState.g.cs
// ==================================================================

namespace Sungero.Contracts.Shared.ContractCondition
{

  public class ContractConditionFilterInfo : global::Sungero.Docflow.Shared.ConditionBase.ConditionBaseFilterInfo,
    global::Sungero.Contracts.IContractConditionFilterInfo
  {
  }

  public class ContractConditionFilterState : global::Sungero.Docflow.Shared.ConditionBase.ConditionBaseFilterState,
    global::Sungero.Contracts.IContractConditionFilterState
  {



    public new Sungero.Contracts.IContractConditionFilterInfo Info
    {
      get
      {
        return (Sungero.Contracts.IContractConditionFilterInfo) base.Info;
      }
    }
    protected override global::Sungero.Domain.Shared.IFilterInfo CreateFilterInfo()
    {
      return new Sungero.Contracts.Shared.ContractCondition.ContractConditionFilterInfo();
    }

  }
}

// ==================================================================
// ContractConditionSharedPublicFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Contracts.Shared
{
  public class ContractConditionSharedPublicFunctions : global::Sungero.Contracts.Shared.IContractConditionSharedPublicFunctions
  {
  }
}
