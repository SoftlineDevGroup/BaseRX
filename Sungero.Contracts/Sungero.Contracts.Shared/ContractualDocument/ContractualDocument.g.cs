
// ==================================================================
// ContractualDocumentState.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Contracts.Shared
{
  public class ContractualDocumentState : 
    global::Sungero.Docflow.Shared.ContractualDocumentBaseState, global::Sungero.Contracts.IContractualDocumentState
  {
    public ContractualDocumentState(global::Sungero.Contracts.IContractualDocument entity) : base(entity) { }

    public new global::Sungero.Contracts.IContractualDocumentPropertyStates Properties
    {
      get { return (global::Sungero.Contracts.IContractualDocumentPropertyStates)base.Properties; }
    }

    protected override global::Sungero.Domain.Shared.IEntityPropertyStates CreatePropertyStates(global::Sungero.Domain.Shared.IEntity entity)
    {
      return new global::Sungero.Contracts.Shared.ContractualDocumentPropertyStates(entity);
    }


    public new global::Sungero.Contracts.IContractualDocumentControlStates Controls
    {
      get { return (global::Sungero.Contracts.IContractualDocumentControlStates)base.Controls; }
    }

    protected override global::Sungero.Domain.Shared.IEntityControlStates CreateControlStates(global::Sungero.Domain.Shared.IEntity entity)
    {
      return new global::Sungero.Contracts.Shared.ContractualDocumentControlStates(entity);
    }

    public new global::Sungero.Contracts.IContractualDocumentPageStates Pages
    {
      get { return (global::Sungero.Contracts.IContractualDocumentPageStates)base.Pages; }
    }

    protected override global::Sungero.Domain.Shared.IEntityPageStates CreatePageStates(global::Sungero.Domain.Shared.IEntity entity)
    {
      return new global::Sungero.Contracts.Shared.ContractualDocumentPageStates(entity);
    }

  }


  public class ContractualDocumentControlStates : 
    global::Sungero.Docflow.Shared.ContractualDocumentBaseControlStates, global::Sungero.Contracts.IContractualDocumentControlStates
  {

    protected internal ContractualDocumentControlStates(global::Sungero.Domain.Shared.IEntity entity) : base(entity) { }
  }
  public class ContractualDocumentPageStates : 
    global::Sungero.Docflow.Shared.ContractualDocumentBasePageStates, global::Sungero.Contracts.IContractualDocumentPageStates
  {
        public global::Sungero.Domain.Shared.IInplacePageState Milestones
        {
        get { return this.GetPageState<Sungero.Domain.Shared.IInplacePageState>("Milestones"); }
        }


    protected internal ContractualDocumentPageStates(global::Sungero.Domain.Shared.IEntity entity) : base(entity) { }
  }

  public class ContractualDocumentPropertyStates : 
    global::Sungero.Docflow.Shared.ContractualDocumentBasePropertyStates, global::Sungero.Contracts.IContractualDocumentPropertyStates
  {
            public new global::Sungero.Contracts.IContractualDocumentVersionsCollectionPropertyState<global::Sungero.Contracts.IContractualDocumentVersions> Versions
            {
              get { return (global::Sungero.Contracts.IContractualDocumentVersionsCollectionPropertyState<global::Sungero.Contracts.IContractualDocumentVersions>)base.Versions; }
            }

            protected override global::Sungero.Content.IElectronicDocumentVersionsCollectionPropertyState<global::Sungero.Content.IElectronicDocumentVersions> CreateVersionsState(global::Sungero.Domain.Shared.IEntity entity, string propertyName)
            {
              return new global::Sungero.Contracts.Shared.ContractualDocumentVersionsCollectionPropertyState<global::Sungero.Contracts.IContractualDocumentVersions>(entity, propertyName);
            }
            public global::Sungero.Domain.Shared.IPropertyState<global::Sungero.Parties.IContact> Contact 
            {
              get { return this.InternalContact; }
            }

            protected virtual global::Sungero.Domain.Shared.IPropertyState<global::Sungero.Parties.IContact> InternalContact
            {
              get { return this.GetPropertyState<global::Sungero.Parties.IContact>("Contact"); }
            }
            public global::Sungero.Domain.Shared.IPropertyState<global::System.DateTime?> ValidFrom 
            {
              get { return this.GetPropertyState<global::System.DateTime?>("ValidFrom"); }
            }
            public global::Sungero.Domain.Shared.IPropertyState<global::System.DateTime?> ValidTill 
            {
              get { return this.GetPropertyState<global::System.DateTime?>("ValidTill"); }
            }
            public global::Sungero.Domain.Shared.IPropertyState<global::Sungero.Company.IEmployee> ResponsibleEmployee 
            {
              get { return this.InternalResponsibleEmployee; }
            }

            protected virtual global::Sungero.Domain.Shared.IPropertyState<global::Sungero.Company.IEmployee> InternalResponsibleEmployee
            {
              get { return this.GetPropertyState<global::Sungero.Company.IEmployee>("ResponsibleEmployee"); }
            }
            public global::Sungero.Domain.Shared.IPropertyState<global::System.Boolean?> IsStandard 
            {
              get { return this.GetPropertyState<global::System.Boolean?>("IsStandard"); }
            }
            public new global::Sungero.Contracts.IContractualDocumentTrackingCollectionPropertyState<global::Sungero.Contracts.IContractualDocumentTracking> Tracking
            {
              get { return (global::Sungero.Contracts.IContractualDocumentTrackingCollectionPropertyState<global::Sungero.Contracts.IContractualDocumentTracking>)base.Tracking; }
            }

            protected override global::Sungero.Docflow.IOfficialDocumentTrackingCollectionPropertyState<global::Sungero.Docflow.IOfficialDocumentTracking> CreateTrackingState(global::Sungero.Domain.Shared.IEntity entity, string propertyName)
            {
              return new global::Sungero.Contracts.Shared.ContractualDocumentTrackingCollectionPropertyState<global::Sungero.Contracts.IContractualDocumentTracking>(entity, propertyName);
            }
            public global::Sungero.Contracts.IContractualDocumentMilestonesCollectionPropertyState<global::Sungero.Contracts.IContractualDocumentMilestones> Milestones 
            {
              get { return this.GetPropertyState("Milestones", this.CreateMilestonesState); }
            }

            protected virtual global::Sungero.Contracts.IContractualDocumentMilestonesCollectionPropertyState<global::Sungero.Contracts.IContractualDocumentMilestones> CreateMilestonesState(global::Sungero.Domain.Shared.IEntity entity, string propertyName)
            {
              return new global::Sungero.Contracts.Shared.ContractualDocumentMilestonesCollectionPropertyState<global::Sungero.Contracts.IContractualDocumentMilestones>(entity, propertyName);
            }


    protected internal ContractualDocumentPropertyStates(global::Sungero.Domain.Shared.IEntity entity) : base(entity) { }
  }

}

// ==================================================================
// ContractualDocumentEventArgs.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Contracts.Shared
{  
    public class ContractualDocumentContactChangedEventArgs : global::Sungero.Domain.Shared.PropertyChangedEventArgs<global::Sungero.Parties.IContact>
    {
      public ContractualDocumentContactChangedEventArgs(global::Sungero.Domain.Shared.IPropertyState<global::Sungero.Parties.IContact> state, global::Sungero.Parties.IContact newValue, global::Sungero.Domain.Shared.IEntity entity): base(state, newValue, entity) { }
    }



    public class ContractualDocumentResponsibleEmployeeChangedEventArgs : global::Sungero.Domain.Shared.PropertyChangedEventArgs<global::Sungero.Company.IEmployee>
    {
      public ContractualDocumentResponsibleEmployeeChangedEventArgs(global::Sungero.Domain.Shared.IPropertyState<global::Sungero.Company.IEmployee> state, global::Sungero.Company.IEmployee newValue, global::Sungero.Domain.Shared.IEntity entity): base(state, newValue, entity) { }
    }




}

// ==================================================================
// ContractualDocumentInfo.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Contracts.Shared
{
  public class ContractualDocumentInfo : 
    global::Sungero.Docflow.Shared.ContractualDocumentBaseInfo, global::Sungero.Contracts.IContractualDocumentInfo
  {
    public ContractualDocumentInfo(global::System.Type entityType) : base(entityType) { }

    public new global::Sungero.Contracts.IContractualDocumentPropertiesInfo Properties
    {
      get { return (global::Sungero.Contracts.IContractualDocumentPropertiesInfo)base.Properties; }
    }

    public new global::Sungero.Contracts.IContractualDocumentActionsInfo Actions
    {
      get { return (global::Sungero.Contracts.IContractualDocumentActionsInfo)base.Actions; }
    }

    protected override global::Sungero.Domain.Shared.IEntityPropertiesInfo CreateEntityPropertiesInfo(global::System.Type entityType)
    {
      return new global::Sungero.Contracts.Shared.ContractualDocumentPropertiesInfo(entityType);
    }

    protected override global::Sungero.Domain.Shared.IEntityActionsInfo CreateEntityActionsInfo(global::System.Type entityType)
    {
      return new global::Sungero.Contracts.Shared.ContractualDocumentActionsInfo(entityType);
    }
  }

  public class ContractualDocumentPropertiesInfo : 
    global::Sungero.Docflow.Shared.ContractualDocumentBasePropertiesInfo, global::Sungero.Contracts.IContractualDocumentPropertiesInfo
  {
        public new global::Sungero.Domain.Shared.ICollectionPropertyInfo<global::Sungero.Contracts.IContractualDocumentVersionsPropertiesInfo> Versions
        {
          get
          {
             var propertyMetadata = this.GetPropertyMetadata<global::Sungero.Metadata.CollectionPropertyMetadata>("Versions");
             return new global::Sungero.Domain.Shared.CollectionPropertyInfo<global::Sungero.Contracts.IContractualDocumentVersionsPropertiesInfo>(propertyMetadata);
          }
        }
        public global::Sungero.Domain.Shared.INavigationPropertyInfo<global::Sungero.Parties.IContactInfo, global::Sungero.Parties.IContact> Contact 
        {
          get
          {
             var propertyMetadata = this.GetPropertyMetadata<global::Sungero.Metadata.NavigationPropertyMetadata>("Contact");
             return new global::Sungero.Domain.Shared.NavigationPropertyInfo<global::Sungero.Parties.IContactInfo, global::Sungero.Parties.IContact>(propertyMetadata);
          }
        }
        public global::Sungero.Domain.Shared.IDateTimePropertyInfo ValidFrom 
        {
          get
          {
             var propertyMetadata = this.GetPropertyMetadata<global::Sungero.Metadata.DateTimePropertyMetadata>("ValidFrom");
             return new global::Sungero.Domain.Shared.DateTimePropertyInfo(propertyMetadata);
          }
        }
        public global::Sungero.Domain.Shared.IDateTimePropertyInfo ValidTill 
        {
          get
          {
             var propertyMetadata = this.GetPropertyMetadata<global::Sungero.Metadata.DateTimePropertyMetadata>("ValidTill");
             return new global::Sungero.Domain.Shared.DateTimePropertyInfo(propertyMetadata);
          }
        }
        public global::Sungero.Domain.Shared.INavigationPropertyInfo<global::Sungero.Company.IEmployeeInfo, global::Sungero.Company.IEmployee> ResponsibleEmployee 
        {
          get
          {
             var propertyMetadata = this.GetPropertyMetadata<global::Sungero.Metadata.NavigationPropertyMetadata>("ResponsibleEmployee");
             return new global::Sungero.Domain.Shared.NavigationPropertyInfo<global::Sungero.Company.IEmployeeInfo, global::Sungero.Company.IEmployee>(propertyMetadata);
          }
        }
        public global::Sungero.Domain.Shared.IBooleanPropertyInfo IsStandard 
        {
          get
          {
             var propertyMetadata = this.GetPropertyMetadata<global::Sungero.Metadata.BooleanPropertyMetadata>("IsStandard");
             return new global::Sungero.Domain.Shared.BooleanPropertyInfo(propertyMetadata);
          }
        }
        public new global::Sungero.Domain.Shared.ICollectionPropertyInfo<global::Sungero.Contracts.IContractualDocumentTrackingPropertiesInfo> Tracking
        {
          get
          {
             var propertyMetadata = this.GetPropertyMetadata<global::Sungero.Metadata.CollectionPropertyMetadata>("Tracking");
             return new global::Sungero.Domain.Shared.CollectionPropertyInfo<global::Sungero.Contracts.IContractualDocumentTrackingPropertiesInfo>(propertyMetadata);
          }
        }
        public global::Sungero.Domain.Shared.ICollectionPropertyInfo<global::Sungero.Contracts.IContractualDocumentMilestonesPropertiesInfo> Milestones 
        {
          get
          {
             var propertyMetadata = this.GetPropertyMetadata<global::Sungero.Metadata.CollectionPropertyMetadata>("Milestones");
             return new global::Sungero.Domain.Shared.CollectionPropertyInfo<global::Sungero.Contracts.IContractualDocumentMilestonesPropertiesInfo>(propertyMetadata);
          }
        }


    protected internal ContractualDocumentPropertiesInfo(global::System.Type entityType) : base(entityType) { }
  }

  public class ContractualDocumentActionsInfo : 
    global::Sungero.Docflow.Shared.ContractualDocumentBaseActionsInfo, global::Sungero.Contracts.IContractualDocumentActionsInfo
  {
        public global::Sungero.Domain.Shared.IActionInfo ShowDuplicates 
        {
          get { return new global::Sungero.Domain.Shared.ActionInfo(this.GetActionMetadata("ShowDuplicates")); }
        }
        public global::Sungero.Domain.Shared.IActionInfo CreateCoverLetter 
        {
          get { return new global::Sungero.Domain.Shared.ActionInfo(this.GetActionMetadata("CreateCoverLetter")); }
        }
        public global::Sungero.Domain.Shared.IActionInfo ExportFinancialDocument 
        {
          get { return new global::Sungero.Domain.Shared.ActionInfo(this.GetActionMetadata("ExportFinancialDocument")); }
        }


    protected internal ContractualDocumentActionsInfo(global::System.Type entityType) : base(entityType) { }
  }
}

// ==================================================================
// ContractualDocumentHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Contracts
{
  public partial class ContractualDocumentSharedHandlers : global::Sungero.Docflow.ContractualDocumentBaseSharedHandlers
  {
    private global::Sungero.Contracts.IContractualDocument _obj
    {
      get { return (global::Sungero.Contracts.IContractualDocument)this.Entity; }
    }
    public virtual void ValidFromChanged(global::Sungero.Domain.Shared.DateTimePropertyChangedEventArgs e) { }


    public virtual void ValidTillChanged(global::Sungero.Domain.Shared.DateTimePropertyChangedEventArgs e) { }



    public virtual void IsStandardChanged(global::Sungero.Domain.Shared.BooleanPropertyChangedEventArgs e) { }



    public virtual void MilestonesChanged(global::Sungero.Domain.Shared.CollectionPropertyChangedEventArgs e) { }




    public ContractualDocumentSharedHandlers(global::Sungero.Contracts.IContractualDocument entity) : base(entity)
    {
    }
  }

  public partial class ContractualDocumentMilestonesSharedHandlers : global::Sungero.Domain.Shared.ChildEntitySharedHandlers
  {
    private global::Sungero.Contracts.IContractualDocumentMilestones _obj
    { 
      get { return (global::Sungero.Contracts.IContractualDocumentMilestones)this.Entity; }
    }
    public virtual void MilestonesNameChanged(global::Sungero.Domain.Shared.StringPropertyChangedEventArgs e) { }


    public virtual void MilestonesDeadlineChanged(global::Sungero.Domain.Shared.DateTimePropertyChangedEventArgs e) { }


    public virtual void MilestonesDaysToFinishWorksChanged(global::Sungero.Domain.Shared.IntegerPropertyChangedEventArgs e) { }


    public virtual void MilestonesPerformerChanged(global::Sungero.Contracts.Shared.ContractualDocumentMilestonesPerformerChangedEventArgs e) { }


    public virtual void MilestonesIsCompletedChanged(global::Sungero.Domain.Shared.BooleanPropertyChangedEventArgs e) { }


    public virtual void MilestonesNoteChanged(global::Sungero.Domain.Shared.StringPropertyChangedEventArgs e) { }


    public virtual void MilestonesTaskChanged(global::Sungero.Contracts.Shared.ContractualDocumentMilestonesTaskChangedEventArgs e) { }



    public ContractualDocumentMilestonesSharedHandlers(global::Sungero.Contracts.IContractualDocumentMilestones entity) : base(entity)
    {
    }
  }

  public partial class ContractualDocumentMilestonesSharedCollectionHandlers : global::Sungero.Domain.Shared.ChildEntitySharedCollectionHandlers
  {
    private global::Sungero.Contracts.IContractualDocument _obj
    { 
      get { return (global::Sungero.Contracts.IContractualDocument)this.Entity; }
    }

    private global::Sungero.Contracts.IContractualDocumentMilestones _added
    {
      get { return (global::Sungero.Contracts.IContractualDocumentMilestones)this._Added; }
    }

    private global::Sungero.Contracts.IContractualDocumentMilestones _deleted
    {
      get { return (global::Sungero.Contracts.IContractualDocumentMilestones)this._Deleted; }
    }

    private global::Sungero.Contracts.IContractualDocumentMilestones _source
    {
      get { return (global::Sungero.Contracts.IContractualDocumentMilestones)this._Source; }
    }

    public ContractualDocumentMilestonesSharedCollectionHandlers(global::Sungero.Contracts.IContractualDocument entity, global::Sungero.Domain.Shared.IChildEntity added, global::Sungero.Domain.Shared.IChildEntity deleted, global::Sungero.Domain.Shared.IChildEntity source)
      : base (entity, added, deleted, source)
    {
    }
  }

}

// ==================================================================
// ContractualDocumentResources.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Contracts.Shared.ContractualDocument
{
  /// <summary>
  /// Represents ContractualDocument resources.
  /// </summary>
  public class ContractualDocumentResources : global::Sungero.Docflow.Shared.ContractualDocumentBase.ContractualDocumentBaseResources, global::Sungero.Contracts.ContractualDocument.IContractualDocumentResources
  {
    public virtual global::CommonLibrary.LocalizedString DuplicatesNotFound
    {
      get
      {
        return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Contracts.IContractualDocument) , "DuplicatesNotFound");
      }
    }

    public virtual global::CommonLibrary.LocalizedString DuplicatesNotFoundFormat(params object[] args)
    {
      return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Contracts.IContractualDocument), "DuplicatesNotFound", false, args);
    }
    public virtual global::CommonLibrary.LocalizedString DuplicatesDetected
    {
      get
      {
        return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Contracts.IContractualDocument) , "DuplicatesDetected");
      }
    }

    public virtual global::CommonLibrary.LocalizedString DuplicatesDetectedFormat(params object[] args)
    {
      return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Contracts.IContractualDocument), "DuplicatesDetected", false, args);
    }
    public virtual global::CommonLibrary.LocalizedString TotalAmountMustBePositive
    {
      get
      {
        return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Contracts.IContractualDocument) , "TotalAmountMustBePositive");
      }
    }

    public virtual global::CommonLibrary.LocalizedString TotalAmountMustBePositiveFormat(params object[] args)
    {
      return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Contracts.IContractualDocument), "TotalAmountMustBePositive", false, args);
    }
    public virtual global::CommonLibrary.LocalizedString TotalAmountInCurrencyToWords
    {
      get
      {
        return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Contracts.IContractualDocument) , "TotalAmountInCurrencyToWords");
      }
    }

    public virtual global::CommonLibrary.LocalizedString TotalAmountInCurrencyToWordsFormat(params object[] args)
    {
      return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Contracts.IContractualDocument), "TotalAmountInCurrencyToWords", false, args);
    }
    public virtual global::CommonLibrary.LocalizedString FindDuplicates
    {
      get
      {
        return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Contracts.IContractualDocument) , "FindDuplicates");
      }
    }

    public virtual global::CommonLibrary.LocalizedString FindDuplicatesFormat(params object[] args)
    {
      return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Contracts.IContractualDocument), "FindDuplicates", false, args);
    }
    public virtual global::CommonLibrary.LocalizedString CannotChangeCompleteMilestone
    {
      get
      {
        return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Contracts.IContractualDocument) , "CannotChangeCompleteMilestone");
      }
    }

    public virtual global::CommonLibrary.LocalizedString CannotChangeCompleteMilestoneFormat(params object[] args)
    {
      return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Contracts.IContractualDocument), "CannotChangeCompleteMilestone", false, args);
    }
    public virtual global::CommonLibrary.LocalizedString CannotChangePerformer
    {
      get
      {
        return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Contracts.IContractualDocument) , "CannotChangePerformer");
      }
    }

    public virtual global::CommonLibrary.LocalizedString CannotChangePerformerFormat(params object[] args)
    {
      return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Contracts.IContractualDocument), "CannotChangePerformer", false, args);
    }
    public virtual global::CommonLibrary.LocalizedString CannotDeleteCompleteContractMilestone
    {
      get
      {
        return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Contracts.IContractualDocument) , "CannotDeleteCompleteContractMilestone");
      }
    }

    public virtual global::CommonLibrary.LocalizedString CannotDeleteCompleteContractMilestoneFormat(params object[] args)
    {
      return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Contracts.IContractualDocument), "CannotDeleteCompleteContractMilestone", false, args);
    }
    public virtual global::CommonLibrary.LocalizedString IncorrectFinishWorksDay
    {
      get
      {
        return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Contracts.IContractualDocument) , "IncorrectFinishWorksDay");
      }
    }

    public virtual global::CommonLibrary.LocalizedString IncorrectFinishWorksDayFormat(params object[] args)
    {
      return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Contracts.IContractualDocument), "IncorrectFinishWorksDay", false, args);
    }
    public virtual global::CommonLibrary.LocalizedString DeadlineMilestoneLessThenToday
    {
      get
      {
        return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Contracts.IContractualDocument) , "DeadlineMilestoneLessThenToday");
      }
    }

    public virtual global::CommonLibrary.LocalizedString DeadlineMilestoneLessThenTodayFormat(params object[] args)
    {
      return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Contracts.IContractualDocument), "DeadlineMilestoneLessThenToday", false, args);
    }

  }
}

// ==================================================================
// ContractualDocumentSharedFunctions.g.cs
// ==================================================================

namespace Sungero.Contracts.Shared
{
  public partial class ContractualDocumentFunctions : global::Sungero.Docflow.Shared.ContractualDocumentBaseFunctions
  {
    private global::Sungero.Contracts.IContractualDocument _obj
    {
      get { return (global::Sungero.Contracts.IContractualDocument)this.Entity; }
    }

    public ContractualDocumentFunctions(global::Sungero.Contracts.IContractualDocument entity) : base(entity) { }
  }
}

// ==================================================================
// ContractualDocumentFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Contracts.Functions
{
  internal static class ContractualDocument
  {
    /// <redirect project="Sungero.Contracts.Shared" type="Sungero.Contracts.Shared.ContractualDocumentFunctions" />
    internal static  global::Sungero.Company.IEmployee GetDocumentResponsibleEmployee(global::Sungero.Contracts.IContractualDocument contractualDocument)
    {
      var functions = (global::Sungero.Contracts.Shared.ContractualDocumentFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)contractualDocument).FunctionsContainer.SharedFunctions;
      return functions.GetDocumentResponsibleEmployee();
    }

    internal static class Remote
    {
      /// <redirect project="Sungero.Contracts.Server" type="Sungero.Contracts.Server.ContractualDocumentFunctions" />
      internal static  global::System.String GetRegistrationNumberIgnoreAccessRights(global::System.Int32 documentId)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::System.String>(
          global::System.Guid.Parse("59079f7f-a326-4947-bbd6-0ae6dfb5f59b"),
          "GetRegistrationNumberIgnoreAccessRights(global::System.Int32)"
      , documentId);
      }

    }
  }
}

// ==================================================================
// ContractualDocumentFilterState.g.cs
// ==================================================================

namespace Sungero.Contracts.Shared.ContractualDocument
{

  public class ContractualDocumentFilterInfo : global::Sungero.Docflow.Shared.ContractualDocumentBase.ContractualDocumentBaseFilterInfo,
    global::Sungero.Contracts.IContractualDocumentFilterInfo
  {
  }

  public class ContractualDocumentFilterState : global::Sungero.Docflow.Shared.ContractualDocumentBase.ContractualDocumentBaseFilterState,
    global::Sungero.Contracts.IContractualDocumentFilterState
  {



    public new Sungero.Contracts.IContractualDocumentFilterInfo Info
    {
      get
      {
        return (Sungero.Contracts.IContractualDocumentFilterInfo) base.Info;
      }
    }
    protected override global::Sungero.Domain.Shared.IFilterInfo CreateFilterInfo()
    {
      return new Sungero.Contracts.Shared.ContractualDocument.ContractualDocumentFilterInfo();
    }

  }
}

// ==================================================================
// ContractualDocumentSharedPublicFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Contracts.Shared
{
  public class ContractualDocumentSharedPublicFunctions : global::Sungero.Contracts.Shared.IContractualDocumentSharedPublicFunctions
  {
    public global::System.String Remote_GetRegistrationNumberIgnoreAccessRights(global::System.Int32 documentId)
    {
      return global::Sungero.Contracts.Functions.ContractualDocument.Remote.GetRegistrationNumberIgnoreAccessRights(documentId);
    }
  }
}
