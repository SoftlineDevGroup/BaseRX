
// ==================================================================
// ContractsApprovalRule.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Contracts.Server
{
    public class ContractsApprovalRuleFilter<T> :
      global::Sungero.Docflow.Server.ApprovalRuleBaseFilter<T>
      where T : class, global::Sungero.Contracts.IContractsApprovalRule
    {
      private global::Sungero.Contracts.IContractsApprovalRuleFilterState filter
      {
        get
        {
          return (Sungero.Contracts.IContractsApprovalRuleFilterState)this.Filter;
        }
      }

      protected override global::System.Linq.IQueryable<T> ApplyAppliedFilter(global::System.Linq.IQueryable<T> query)
      {
        return base.ApplyAppliedFilter(query);
      }

      public ContractsApprovalRuleFilter(global::Sungero.Contracts.IContractsApprovalRuleFilterState filter)
      : base(filter)
      {
      }

      protected ContractsApprovalRuleFilter()
      {
      }
    }
      public class ContractsApprovalRuleUiFilter<T> :
        global::Sungero.Docflow.Server.ApprovalRuleBaseUiFilter<T>
        where T : class, global::Sungero.Contracts.IContractsApprovalRule
      {
        protected override global::System.Linq.IQueryable<T> ApplyAppliedFilter(global::System.Linq.IQueryable<T> query)
        {
          return base.ApplyAppliedFilter(query);
        }
      }

    public class ContractsApprovalRuleSearchDialogModel : global::Sungero.Docflow.Server.ApprovalRuleBaseSearchDialogModel
        {
                  public override global::System.String Name { get; protected set; }
                  public override global::System.Int32? Priority { get; protected set; }
                  public override global::System.String Note { get; protected set; }
                  public override global::System.Boolean? IsSmallApprovalAllowed { get; protected set; }
                  public override global::System.Int32? ReworkDeadline { get; protected set; }
                  public override global::System.Int32? Id { get; protected set; }


                  public override global::System.Collections.Generic.IEnumerable<Sungero.CoreEntities.IRecipient> ReworkPerformer { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<Sungero.Docflow.IApprovalRoleBase> ReworkApprovalRole { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<Sungero.Core.Enumeration> ReworkPerformerType { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<Sungero.Core.Enumeration> Status { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<Sungero.Core.Enumeration> DocumentFlow { get; protected set; }




                   [Sungero.Domain.Shared.HideInDevStudio()]
                   public new ContractsApprovalRuleConditionsModel Conditions { get { return (ContractsApprovalRuleConditionsModel)base.Conditions; } protected set { base.Conditions = value; } }
                   [Sungero.Domain.Shared.HideInDevStudio()]
                   public new ContractsApprovalRuleDocumentKindsModel DocumentKinds { get { return (ContractsApprovalRuleDocumentKindsModel)base.DocumentKinds; } protected set { base.DocumentKinds = value; } }
                   [Sungero.Domain.Shared.HideInDevStudio()]
                   public new ContractsApprovalRuleDocumentGroupsModel DocumentGroups { get { return (ContractsApprovalRuleDocumentGroupsModel)base.DocumentGroups; } protected set { base.DocumentGroups = value; } }
                   [Sungero.Domain.Shared.HideInDevStudio()]
                   public new ContractsApprovalRuleDepartmentsModel Departments { get { return (ContractsApprovalRuleDepartmentsModel)base.Departments; } protected set { base.Departments = value; } }
                   [Sungero.Domain.Shared.HideInDevStudio()]
                   public new ContractsApprovalRuleStagesModel Stages { get { return (ContractsApprovalRuleStagesModel)base.Stages; } protected set { base.Stages = value; } }
                   [Sungero.Domain.Shared.HideInDevStudio()]
                   public new ContractsApprovalRuleBusinessUnitsModel BusinessUnits { get { return (ContractsApprovalRuleBusinessUnitsModel)base.BusinessUnits; } protected set { base.BusinessUnits = value; } }
                   [Sungero.Domain.Shared.HideInDevStudio()]
                   public new ContractsApprovalRuleTransitionsModel Transitions { get { return (ContractsApprovalRuleTransitionsModel)base.Transitions; } protected set { base.Transitions = value; } }

        }

      public class ContractsApprovalRuleConditionsModel : global::Sungero.Docflow.Server.ApprovalRuleBaseConditionsModel
          {
                      [Sungero.Domain.Shared.HideInDevStudio()]
                      public override global::System.Int32? Id { get; protected set; }




         }
      public class ContractsApprovalRuleDocumentKindsModel : global::Sungero.Docflow.Server.ApprovalRuleBaseDocumentKindsModel
          {
                      [Sungero.Domain.Shared.HideInDevStudio()]
                      public override global::System.Int32? Id { get; protected set; }




         }
      public class ContractsApprovalRuleDocumentGroupsModel : global::Sungero.Docflow.Server.ApprovalRuleBaseDocumentGroupsModel
          {
                      [Sungero.Domain.Shared.HideInDevStudio()]
                      public override global::System.Int32? Id { get; protected set; }




         }
      public class ContractsApprovalRuleDepartmentsModel : global::Sungero.Docflow.Server.ApprovalRuleBaseDepartmentsModel
          {
                      [Sungero.Domain.Shared.HideInDevStudio()]
                      public override global::System.Int32? Id { get; protected set; }




         }
      public class ContractsApprovalRuleStagesModel : global::Sungero.Docflow.Server.ApprovalRuleBaseStagesModel
          {
                      [Sungero.Domain.Shared.HideInDevStudio()]
                      public override global::System.Int32? Id { get; protected set; }




         }
      public class ContractsApprovalRuleBusinessUnitsModel : global::Sungero.Docflow.Server.ApprovalRuleBaseBusinessUnitsModel
          {
                      [Sungero.Domain.Shared.HideInDevStudio()]
                      public override global::System.Int32? Id { get; protected set; }




         }
      public class ContractsApprovalRuleTransitionsModel : global::Sungero.Docflow.Server.ApprovalRuleBaseTransitionsModel
          {
                      [Sungero.Domain.Shared.HideInDevStudio()]
                      public override global::System.Int32? Id { get; protected set; }




         }





  [global::Sungero.Domain.Filter(typeof(global::Sungero.Contracts.Server.ContractsApprovalRuleFilter<global::Sungero.Contracts.IContractsApprovalRule>))]
  [global::Sungero.Domain.UiFilter(typeof(global::Sungero.Contracts.Server.ContractsApprovalRuleUiFilter<global::Sungero.Contracts.IContractsApprovalRule>))]

  public class ContractsApprovalRule :
    global::Sungero.Docflow.Server.ApprovalRuleBase, global::Sungero.Contracts.IContractsApprovalRule
  {
    public static new readonly global::System.Guid ClassTypeGuid = global::System.Guid.Parse("dcbf9c6f-9bb6-4b61-b501-db35df320207");

    public override global::System.Guid TypeGuid
    {
      get { return global::Sungero.Contracts.Server.ContractsApprovalRule.ClassTypeGuid; }
    }

    public override string TypeName
    {
      get { return "Sungero.Contracts.IContractsApprovalRule, Sungero.Domain.Interfaces"; }
    }

    public override string DisplayValue
    {
      get { return this.Name; }
      set { this.Name = value; }
    }

    public new virtual global::Sungero.Contracts.IContractsApprovalRuleState State
    {
      get { return (global::Sungero.Contracts.IContractsApprovalRuleState)base.State; }
    }

    protected override global::Sungero.Domain.Shared.IEntityState CreateState()
    {
      return new global::Sungero.Contracts.Shared.ContractsApprovalRuleState(this);
    }

    public new virtual global::Sungero.Contracts.IContractsApprovalRuleInfo Info
    {
      get { return (global::Sungero.Contracts.IContractsApprovalRuleInfo)base.Info; }
    }

    public new virtual global::Sungero.Contracts.IContractsApprovalRuleAccessRights AccessRights
    {
      get { return (global::Sungero.Contracts.IContractsApprovalRuleAccessRights)base.AccessRights; }
    }

    protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
    {
      return new global::Sungero.Contracts.Server.ContractsApprovalRuleAccessRights(this);
    }

    protected override global::Sungero.Domain.EntityFunctions CreateServerFunctions()
    {
      return new global::Sungero.Contracts.Server.ContractsApprovalRuleFunctions(this);
    }

    protected override global::Sungero.Domain.Shared.EntityFunctions CreateSharedFunctions()
    {
      return new global::Sungero.Contracts.Shared.ContractsApprovalRuleFunctions(this);
    }

    protected override object CreateHandlers() {
      return new global::Sungero.Contracts.ContractsApprovalRuleServerHandlers(this);
    }

    protected override object CreateSharedHandlers() {
      return new global::Sungero.Contracts.ContractsApprovalRuleSharedHandlers(this);
    }









    protected override global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Docflow.IApprovalRuleBaseConditions> CreateConditionsCollection()
    {
      return new global::Sungero.Domain.ChildEntityCollection<global::Sungero.Contracts.IContractsApprovalRuleConditions>() { RootEntity = this };
    }
    protected override global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Docflow.IApprovalRuleBaseDocumentKinds> CreateDocumentKindsCollection()
    {
      return new global::Sungero.Domain.ChildEntityCollection<global::Sungero.Contracts.IContractsApprovalRuleDocumentKinds>() { RootEntity = this };
    }
    protected override global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Docflow.IApprovalRuleBaseDocumentGroups> CreateDocumentGroupsCollection()
    {
      return new global::Sungero.Domain.ChildEntityCollection<global::Sungero.Contracts.IContractsApprovalRuleDocumentGroups>() { RootEntity = this };
    }
    protected override global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Docflow.IApprovalRuleBaseDepartments> CreateDepartmentsCollection()
    {
      return new global::Sungero.Domain.ChildEntityCollection<global::Sungero.Contracts.IContractsApprovalRuleDepartments>() { RootEntity = this };
    }
    protected override global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Docflow.IApprovalRuleBaseStages> CreateStagesCollection()
    {
      return new global::Sungero.Domain.ChildEntityCollection<global::Sungero.Contracts.IContractsApprovalRuleStages>() { RootEntity = this };
    }
    protected override global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Docflow.IApprovalRuleBaseBusinessUnits> CreateBusinessUnitsCollection()
    {
      return new global::Sungero.Domain.ChildEntityCollection<global::Sungero.Contracts.IContractsApprovalRuleBusinessUnits>() { RootEntity = this };
    }
    protected override global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Docflow.IApprovalRuleBaseTransitions> CreateTransitionsCollection()
    {
      return new global::Sungero.Domain.ChildEntityCollection<global::Sungero.Contracts.IContractsApprovalRuleTransitions>() { RootEntity = this };
    }


    protected override global::Sungero.Domain.Shared.EntityCreatingFromServerHandler CreateCreatingFromServerHandler(
      global::Sungero.Domain.Shared.IEntity entitySource)
    {
      return new global::Sungero.Contracts.ContractsApprovalRuleCreatingFromServerHandler((global::Sungero.Contracts.IContractsApprovalRule)entitySource, this.Info);
    }

    #region Framework events










    #endregion


    public ContractsApprovalRule()
    {
    }

  }
}

// ==================================================================
// ContractsApprovalRuleHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Contracts
{

  public partial class ContractsApprovalRuleFilteringServerHandler<T>
    : global::Sungero.Docflow.ApprovalRuleBaseFilteringServerHandler<T>  
    where T : class, global::Sungero.Contracts.IContractsApprovalRule
  {
    private global::Sungero.Contracts.IContractsApprovalRuleFilterState _filter
    {
      get
      {
        return (Sungero.Contracts.IContractsApprovalRuleFilterState)this.Filter;
      }
    }

    public ContractsApprovalRuleFilteringServerHandler(global::Sungero.Contracts.IContractsApprovalRuleFilterState filter)
    : base(filter)
    {
    }

    protected ContractsApprovalRuleFilteringServerHandler()
    {
    }

    public override global::System.Linq.IQueryable<T> Filtering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.FilteringEventArgs e)
    {
      query = base.Filtering(query, e);
            return query;
    }


  }

  public partial class ContractsApprovalRuleUiFilteringServerHandler<T>
    : global::Sungero.Docflow.ApprovalRuleBaseUiFilteringServerHandler<T>
    where T : class, global::Sungero.Contracts.IContractsApprovalRule
  {
    public override global::System.Linq.IQueryable<T> Filtering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.UiFilteringEventArgs e)
    {
      query = base.Filtering(query, e);
            return query;
    }
  }

  public partial class ContractsApprovalRuleSearchDialogServerHandler : global::Sungero.Docflow.ApprovalRuleBaseSearchDialogServerHandler
   {
     private global::Sungero.Contracts.Server.ContractsApprovalRuleSearchDialogModel _dialog
     {
       get
       {
         return (global::Sungero.Contracts.Server.ContractsApprovalRuleSearchDialogModel)this.Dialog;
       }
     }

     public ContractsApprovalRuleSearchDialogServerHandler(global::Sungero.Contracts.Server.ContractsApprovalRuleSearchDialogModel dialog)
       : base(dialog)
     {
     }
   }

  public partial class ContractsApprovalRuleServerHandlers : global::Sungero.Docflow.ApprovalRuleBaseServerHandlers
  {
    private global::Sungero.Contracts.IContractsApprovalRule _obj
    {
      get { return (global::Sungero.Contracts.IContractsApprovalRule)this.Entity; }
    }

    public ContractsApprovalRuleServerHandlers(global::Sungero.Contracts.IContractsApprovalRule entity)
      : base(entity)
    {
    }
  }

  public partial class ContractsApprovalRuleCreatingFromServerHandler : global::Sungero.Docflow.ApprovalRuleBaseCreatingFromServerHandler
  {
    private global::Sungero.Contracts.IContractsApprovalRule _source
    {
      get { return (global::Sungero.Contracts.IContractsApprovalRule)this.Source; }
    }

    private global::Sungero.Contracts.IContractsApprovalRuleInfo _info
    {
      get { return (global::Sungero.Contracts.IContractsApprovalRuleInfo)this._Info; }
    }

    public ContractsApprovalRuleCreatingFromServerHandler(global::Sungero.Contracts.IContractsApprovalRule source, global::Sungero.Contracts.IContractsApprovalRuleInfo info)
      : base(source, info)
    {
    }
  }

}

// ==================================================================
// ContractsApprovalRuleEventArgs.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Contracts.Server
{
}

// ==================================================================
// ContractsApprovalRuleAccessRights.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Contracts.Server
{
  public class ContractsApprovalRuleAccessRights : 
    Sungero.Docflow.Server.ApprovalRuleBaseAccessRights, Sungero.Contracts.IContractsApprovalRuleAccessRights
  {

    public ContractsApprovalRuleAccessRights(global::Sungero.Domain.Shared.IEntity entity) : base(entity)
    {
    }
  }

  public class ContractsApprovalRuleTypeAccessRights : 
    Sungero.Docflow.Server.ApprovalRuleBaseTypeAccessRights, Sungero.Contracts.IContractsApprovalRuleAccessRights
  {

    public ContractsApprovalRuleTypeAccessRights(global::System.Type entityType) : base(entityType)
    {
    }
  }
}

// ==================================================================
// ContractsApprovalRuleRepositoryImplementer.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Contracts.Server
{
    public class ContractsApprovalRuleRepositoryImplementer<T> : 
      global::Sungero.Docflow.Server.ApprovalRuleBaseRepositoryImplementer<T>,
      global::Sungero.Contracts.IContractsApprovalRuleRepositoryImplementer<T>
      where T : global::Sungero.Contracts.IContractsApprovalRule 
    {
       public new global::Sungero.Contracts.IContractsApprovalRuleAccessRights AccessRights
       {
          get { return (global::Sungero.Contracts.IContractsApprovalRuleAccessRights)base.AccessRights; }
       }

       public new global::Sungero.Contracts.IContractsApprovalRuleInfo Info
       {
          get { return (global::Sungero.Contracts.IContractsApprovalRuleInfo)base.Info; }
       }

       protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
       {
         return new global::Sungero.Contracts.Server.ContractsApprovalRuleTypeAccessRights(typeof(T));
       }
    }
}

// ==================================================================
// ContractsApprovalRulePanelNavigationFilters.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Contracts.Server
{
}

// ==================================================================
// ContractsApprovalRuleServerFunctions.g.cs
// ==================================================================

namespace Sungero.Contracts.Server
{
  public partial class ContractsApprovalRuleFunctions : global::Sungero.Docflow.Server.ApprovalRuleBaseFunctions
  {
    private global::Sungero.Contracts.IContractsApprovalRule _obj
    {
      get { return (global::Sungero.Contracts.IContractsApprovalRule)this.Entity; }
    }

    public ContractsApprovalRuleFunctions(global::Sungero.Contracts.IContractsApprovalRule entity) : base(entity) { }
  }
}

// ==================================================================
// ContractsApprovalRuleFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Contracts.Functions
{
  internal static class ContractsApprovalRule
  {
    /// <redirect project="Sungero.Contracts.Server" type="Sungero.Contracts.Server.ContractsApprovalRuleFunctions" />
    internal static  global::System.Linq.IQueryable<global::Sungero.Docflow.ISignatureSetting> GetSignatureSetting(global::Sungero.Contracts.IContractsApprovalRule contractsApprovalRule, global::Sungero.Company.IBusinessUnit businessUnit, global::Sungero.Docflow.IDocumentKind kind, global::System.Nullable<global::System.Double> minAmount, global::System.Collections.Generic.List<global::Sungero.Company.IDepartment> departments)
    {
      var functions = (global::Sungero.Contracts.Server.ContractsApprovalRuleFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)contractsApprovalRule).FunctionsContainer.ServerFunctions;
      return functions.GetSignatureSetting(businessUnit, kind, minAmount, departments);
    }
    /// <redirect project="Sungero.Contracts.Server" type="Sungero.Contracts.Server.ContractsApprovalRuleFunctions" />
    internal static  global::System.Boolean CheckRoutePossibility(global::Sungero.Contracts.IContractsApprovalRule contractsApprovalRule, global::System.Collections.Generic.List<Docflow.Structures.ApprovalRuleBase.RouteStep> route, global::System.Collections.Generic.List<Docflow.Structures.ApprovalRuleBase.ConditionRouteStep> ruleConditions, Docflow.Structures.ApprovalRuleBase.RouteStep conditionStep)
    {
      var functions = (global::Sungero.Contracts.Server.ContractsApprovalRuleFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)contractsApprovalRule).FunctionsContainer.ServerFunctions;
      return functions.CheckRoutePossibility(route, ruleConditions, conditionStep);
    }
    /// <redirect project="Sungero.Contracts.Server" type="Sungero.Contracts.Server.ContractsApprovalRuleFunctions" />
    internal static  global::System.Boolean CheckStandardConditions(global::Sungero.Contracts.IContractsApprovalRule contractsApprovalRule, global::System.Collections.Generic.List<Docflow.Structures.ApprovalRuleBase.RouteStep> allConditions, Docflow.Structures.ApprovalRuleBase.RouteStep condition)
    {
      var functions = (global::Sungero.Contracts.Server.ContractsApprovalRuleFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)contractsApprovalRule).FunctionsContainer.ServerFunctions;
      return functions.CheckStandardConditions(allConditions, condition);
    }
    /// <redirect project="Sungero.Contracts.Server" type="Sungero.Contracts.Server.ContractsApprovalRuleFunctions" />
    internal static  global::System.Collections.Generic.List<Docflow.Structures.ApprovalRuleBase.RouteStep> GetStandardConditionsInRoute(global::Sungero.Contracts.IContractsApprovalRule contractsApprovalRule, global::System.Collections.Generic.List<Docflow.Structures.ApprovalRuleBase.RouteStep> route)
    {
      var functions = (global::Sungero.Contracts.Server.ContractsApprovalRuleFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)contractsApprovalRule).FunctionsContainer.ServerFunctions;
      return functions.GetStandardConditionsInRoute(route);
    }
    /// <redirect project="Sungero.Contracts.Server" type="Sungero.Contracts.Server.ContractsApprovalRuleFunctions" />
    internal static  global::System.Collections.Generic.List<global::Sungero.Docflow.IApprovalRoleBase> GetSupportedApprovalRolesForRework(global::Sungero.Contracts.IContractsApprovalRule contractsApprovalRule)
    {
      var functions = (global::Sungero.Contracts.Server.ContractsApprovalRuleFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)contractsApprovalRule).FunctionsContainer.ServerFunctions;
      return functions.GetSupportedApprovalRolesForRework();
    }

    /// <redirect project="Sungero.Contracts.Shared" type="Sungero.Contracts.Shared.ContractsApprovalRuleFunctions" />
    internal static  global::System.String GetIncompatibleDocumentGroupsExcludedHint(global::Sungero.Contracts.IContractsApprovalRule contractsApprovalRule)
    {
      var functions = (global::Sungero.Contracts.Shared.ContractsApprovalRuleFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)contractsApprovalRule).FunctionsContainer.SharedFunctions;
      return functions.GetIncompatibleDocumentGroupsExcludedHint();
    }
    /// <redirect project="Sungero.Contracts.Shared" type="Sungero.Contracts.Shared.ContractsApprovalRuleFunctions" />
    internal static  global::System.Collections.Generic.List<global::Sungero.Docflow.IDocumentGroupBase> GetAvailableDocumentGroups(global::Sungero.Contracts.IContractsApprovalRule contractsApprovalRule)
    {
      var functions = (global::Sungero.Contracts.Shared.ContractsApprovalRuleFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)contractsApprovalRule).FunctionsContainer.SharedFunctions;
      return functions.GetAvailableDocumentGroups();
    }

  }
}

// ==================================================================
// ContractsApprovalRuleServerPublicFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Contracts.Server
{
  public class ContractsApprovalRuleServerPublicFunctions : global::Sungero.Contracts.Server.IContractsApprovalRuleServerPublicFunctions
  {
  }
}

// ==================================================================
// ContractsApprovalRuleQueries.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Contracts.Queries
{
  public class ContractsApprovalRule
  {
    private static global::Sungero.Domain.SqlQueryResolver resolver = new global::Sungero.Domain.SqlQueryResolver("Sungero.Contracts.Server.ContractsApprovalRule.ContractsApprovalRuleQueries.xml", System.Reflection.Assembly.GetExecutingAssembly());
  }
}
