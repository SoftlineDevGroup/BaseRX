
// ==================================================================
// Contract.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Contracts.Server
{
    public class ContractFilter<T> :
      global::Sungero.Contracts.Server.ContractBaseFilter<T>
      where T : class, global::Sungero.Contracts.IContract
    {
      private global::Sungero.Contracts.IContractFilterState filter
      {
        get
        {
          return (Sungero.Contracts.IContractFilterState)this.Filter;
        }
      }

      protected override global::System.Linq.IQueryable<T> ApplyAppliedFilter(global::System.Linq.IQueryable<T> query)
      {
        return base.ApplyAppliedFilter(query);
      }

      public ContractFilter(global::Sungero.Contracts.IContractFilterState filter)
      : base(filter)
      {
      }

      protected ContractFilter()
      {
      }
    }
    public class ContractSearchDialogModel : global::Sungero.Contracts.Server.ContractBaseSearchDialogModel
        {
                  public override global::System.String Name { get; protected set; }
                  public override global::System.Int32? Id { get; protected set; }
                  public override global::System.Double? TotalAmount { get; protected set; }
                  public override global::System.Boolean? IsStandard { get; protected set; }
                  public override global::System.String Subject { get; protected set; }
                  public override global::System.Boolean? IsAutomaticRenewal { get; protected set; }


                  public override global::System.Collections.Generic.IEnumerable<Sungero.Docflow.IDocumentKind> DocumentKind { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<Sungero.Company.IBusinessUnit> BusinessUnit { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<Sungero.CoreEntities.IRecipient> OurSignatory { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<Sungero.Docflow.IDocumentGroupBase> DocumentGroup { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<Sungero.Company.IDepartment> Department { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<Sungero.Core.Enumeration> VerificationState { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<Sungero.Parties.ICounterparty> Counterparty { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<Sungero.CoreEntities.IRecipient> Author { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<CommonLibrary.DateRangeValue> Created { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<Sungero.Content.IAssociatedApplication> AssociatedApplication { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<Sungero.CoreEntities.IRecipient> ResponsibleEmployee { get; protected set; }




                   public new ContractVersionsModel Versions { get { return (ContractVersionsModel)base.Versions; } protected set { base.Versions = value; } }
                   [Sungero.Domain.Shared.HideInDevStudio()]
                   public new ContractTrackingModel Tracking { get { return (ContractTrackingModel)base.Tracking; } protected set { base.Tracking = value; } }
                   [Sungero.Domain.Shared.HideInDevStudio()]
                   public new ContractMilestonesModel Milestones { get { return (ContractMilestonesModel)base.Milestones; } protected set { base.Milestones = value; } }

        }

      public class ContractVersionsModel : global::Sungero.Contracts.Server.ContractBaseVersionsModel
          {
                      [Sungero.Domain.Shared.HideInDevStudio()]
                      public override global::System.Int32? Id { get; protected set; }
                      public override global::System.String Body { get; protected set; }




         }
      public class ContractTrackingModel : global::Sungero.Contracts.Server.ContractBaseTrackingModel
          {
                      [Sungero.Domain.Shared.HideInDevStudio()]
                      public override global::System.Int32? Id { get; protected set; }




         }
      public class ContractMilestonesModel : global::Sungero.Contracts.Server.ContractBaseMilestonesModel
          {
                      [Sungero.Domain.Shared.HideInDevStudio()]
                      public override global::System.Int32? Id { get; protected set; }




         }





  [global::Sungero.Domain.Filter(typeof(global::Sungero.Contracts.Server.ContractFilter<global::Sungero.Contracts.IContract>))]

  public class Contract :
    global::Sungero.Contracts.Server.ContractBase, global::Sungero.Contracts.IContract, global::Sungero.Domain.Shared.ISecurableEntity, global::Sungero.Domain.IInternalSecurableEntity
  {
    public static new readonly global::System.Guid ClassTypeGuid = global::System.Guid.Parse("f37c7e63-b134-4446-9b5b-f8811f6c9666");

    public override global::System.Guid TypeGuid
    {
      get { return global::Sungero.Contracts.Server.Contract.ClassTypeGuid; }
    }

    public override string TypeName
    {
      get { return "Sungero.Contracts.IContract, Sungero.Domain.Interfaces"; }
    }

    public override string DisplayValue
    {
      get { return this.Name; }
      set { this.Name = value; }
    }

    public new virtual global::Sungero.Contracts.IContractState State
    {
      get { return (global::Sungero.Contracts.IContractState)base.State; }
    }

    protected override global::Sungero.Domain.Shared.IEntityState CreateState()
    {
      return new global::Sungero.Contracts.Shared.ContractState(this);
    }

    public new virtual global::Sungero.Contracts.IContractInfo Info
    {
      get { return (global::Sungero.Contracts.IContractInfo)base.Info; }
    }

    public new virtual global::Sungero.Contracts.IContractAccessRights AccessRights
    {
      get { return (global::Sungero.Contracts.IContractAccessRights)base.AccessRights; }
    }

    protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
    {
      return new global::Sungero.Contracts.Server.ContractAccessRights(this);
    }

    protected override global::Sungero.Domain.EntityFunctions CreateServerFunctions()
    {
      return new global::Sungero.Contracts.Server.ContractFunctions(this);
    }

    protected override global::Sungero.Domain.Shared.EntityFunctions CreateSharedFunctions()
    {
      return new global::Sungero.Contracts.Shared.ContractFunctions(this);
    }

    protected override object CreateHandlers() {
      return new global::Sungero.Contracts.ContractServerHandlers(this);
    }

    protected override object CreateSharedHandlers() {
      return new global::Sungero.Contracts.ContractSharedHandlers(this);
    }









    protected override global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Content.IElectronicDocumentVersions> CreateVersionsCollection()
    {
      return new global::Sungero.Domain.ChildEntityCollection<global::Sungero.Contracts.IContractVersions>() { RootEntity = this };
    }
    protected override global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Docflow.IOfficialDocumentTracking> CreateTrackingCollection()
    {
      return new global::Sungero.Domain.ChildEntityCollection<global::Sungero.Contracts.IContractTracking>() { RootEntity = this };
    }
    protected override global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Contracts.IContractualDocumentMilestones> CreateMilestonesCollection()
    {
      return new global::Sungero.Domain.ChildEntityCollection<global::Sungero.Contracts.IContractStages>() { RootEntity = this };
    }


    protected override global::Sungero.Domain.Shared.EntityCreatingFromServerHandler CreateCreatingFromServerHandler(
      global::Sungero.Domain.Shared.IEntity entitySource)
    {
      return new global::Sungero.Contracts.ContractCreatingFromServerHandler((global::Sungero.Contracts.IContract)entitySource, this.Info);
    }

    #region Framework events






    #endregion


    public Contract()
    {
    }

    protected override global::Sungero.Domain.Shared.EntityConvertingFromServerHandler CreateConvertingFromServerHandler(   
      global::Sungero.Domain.Shared.IEntity entitySource)
    {
      return new global::Sungero.Contracts.ContractConvertingFromServerHandler((global::Sungero.Content.IElectronicDocument)entitySource, this.Info);
    }

  }
}

// ==================================================================
// ContractHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Contracts
{

  public partial class ContractFilteringServerHandler<T>
    : global::Sungero.Contracts.ContractBaseFilteringServerHandler<T>  
    where T : class, global::Sungero.Contracts.IContract
  {
    private global::Sungero.Contracts.IContractFilterState _filter
    {
      get
      {
        return (Sungero.Contracts.IContractFilterState)this.Filter;
      }
    }

    public ContractFilteringServerHandler(global::Sungero.Contracts.IContractFilterState filter)
    : base(filter)
    {
    }

    protected ContractFilteringServerHandler()
    {
    }

    public override global::System.Linq.IQueryable<T> Filtering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.FilteringEventArgs e)
    {
      query = base.Filtering(query, e);
            return query;
    }


  }

  public partial class ContractSearchDialogServerHandler : global::Sungero.Contracts.ContractBaseSearchDialogServerHandler
   {
     private global::Sungero.Contracts.Server.ContractSearchDialogModel _dialog
     {
       get
       {
         return (global::Sungero.Contracts.Server.ContractSearchDialogModel)this.Dialog;
       }
     }

     public ContractSearchDialogServerHandler(global::Sungero.Contracts.Server.ContractSearchDialogModel dialog)
       : base(dialog)
     {
     }
   }

  public partial class ContractServerHandlers : global::Sungero.Contracts.ContractBaseServerHandlers
  {
    private global::Sungero.Contracts.IContract _obj
    {
      get { return (global::Sungero.Contracts.IContract)this.Entity; }
    }

    public ContractServerHandlers(global::Sungero.Contracts.IContract entity)
      : base(entity)
    {
    }
  }

  public partial class ContractCreatingFromServerHandler : global::Sungero.Contracts.ContractBaseCreatingFromServerHandler
  {
    private global::Sungero.Contracts.IContract _source
    {
      get { return (global::Sungero.Contracts.IContract)this.Source; }
    }

    private global::Sungero.Contracts.IContractInfo _info
    {
      get { return (global::Sungero.Contracts.IContractInfo)this._Info; }
    }

    public ContractCreatingFromServerHandler(global::Sungero.Contracts.IContract source, global::Sungero.Contracts.IContractInfo info)
      : base(source, info)
    {
    }
  }

}

// ==================================================================
// ContractEventArgs.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Contracts.Server
{
}

// ==================================================================
// ContractAccessRights.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Contracts.Server
{
  public class ContractAccessRights : 
    Sungero.Contracts.Server.ContractBaseAccessRights, Sungero.Contracts.IContractAccessRights
  {

    public ContractAccessRights(global::Sungero.Domain.Shared.IEntity entity) : base(entity)
    {
    }
  }

  public class ContractTypeAccessRights : 
    Sungero.Contracts.Server.ContractBaseTypeAccessRights, Sungero.Contracts.IContractAccessRights
  {

    public ContractTypeAccessRights(global::System.Type entityType) : base(entityType)
    {
    }
  }
}

// ==================================================================
// ContractRepositoryImplementer.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Contracts.Server
{
    public class ContractRepositoryImplementer<T> : 
      global::Sungero.Contracts.Server.ContractBaseRepositoryImplementer<T>,
      global::Sungero.Contracts.IContractRepositoryImplementer<T>
      where T : global::Sungero.Contracts.IContract 
    {
       public new global::Sungero.Contracts.IContractAccessRights AccessRights
       {
          get { return (global::Sungero.Contracts.IContractAccessRights)base.AccessRights; }
       }

       public new global::Sungero.Contracts.IContractInfo Info
       {
          get { return (global::Sungero.Contracts.IContractInfo)base.Info; }
       }

       protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
       {
         return new global::Sungero.Contracts.Server.ContractTypeAccessRights(typeof(T));
       }
    }
}

// ==================================================================
// ContractPanelNavigationFilters.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Contracts.Server
{
}

// ==================================================================
// ContractServerFunctions.g.cs
// ==================================================================

namespace Sungero.Contracts.Server
{
  public partial class ContractFunctions : global::Sungero.Contracts.Server.ContractBaseFunctions
  {
    private global::Sungero.Contracts.IContract _obj
    {
      get { return (global::Sungero.Contracts.IContract)this.Entity; }
    }

    public ContractFunctions(global::Sungero.Contracts.IContract entity) : base(entity) { }
  }
}

// ==================================================================
// ContractFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Contracts.Functions
{
  internal static class Contract
  {
    /// <redirect project="Sungero.Contracts.Shared" type="Sungero.Contracts.Shared.ContractFunctions" />
    internal static  global::System.Boolean IsVerificationModeSupported(global::Sungero.Contracts.IContract contract)
    {
      var functions = (global::Sungero.Contracts.Shared.ContractFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)contract).FunctionsContainer.SharedFunctions;
      return functions.IsVerificationModeSupported();
    }

  }
}

// ==================================================================
// ContractServerPublicFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Contracts.Server
{
  public class ContractServerPublicFunctions : global::Sungero.Contracts.Server.IContractServerPublicFunctions
  {
  }
}

// ==================================================================
// ContractQueries.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Contracts.Queries
{
  public class Contract
  {
    private static global::Sungero.Domain.SqlQueryResolver resolver = new global::Sungero.Domain.SqlQueryResolver("Sungero.Contracts.Server.Contract.ContractQueries.xml", System.Reflection.Assembly.GetExecutingAssembly());
  }
}

// ==================================================================
// ContractServerHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Contracts
{
  public partial class ContractConvertingFromServerHandler : global::Sungero.Contracts.ContractBaseConvertingFromServerHandler
  { 
    private global::Sungero.Contracts.IContractInfo _info
    {
      get { return (global::Sungero.Contracts.IContractInfo)this._Info; }
    }

    public ContractConvertingFromServerHandler(global::Sungero.Content.IElectronicDocument source, global::Sungero.Contracts.IContractInfo info)
      : base(source, info)
    {
    }
  }
}
