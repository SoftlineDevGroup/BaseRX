
// ==================================================================
// ContractsApprovalRuleConditions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Contracts.Server
{


  public class ContractsApprovalRuleConditions :
    global::Sungero.Docflow.Server.ApprovalRuleBaseConditions, global::Sungero.Contracts.IContractsApprovalRuleConditions
  {
    public static new readonly global::System.Guid ClassTypeGuid = global::System.Guid.Parse("421977df-8d98-4833-ad4e-a97214c8660b");

    public override global::System.Guid TypeGuid
    {
      get { return global::Sungero.Contracts.Server.ContractsApprovalRuleConditions.ClassTypeGuid; }
    }

    public override string TypeName
    {
      get { return "Sungero.Contracts.IContractsApprovalRuleConditions, Sungero.Domain.Interfaces"; }
    }

    public override string DisplayValue
    {
      get { return this.Condition == null ? string.Empty : this.Condition.ToString(); }
      set { throw new global::System.NotSupportedException(global::CommonLibrary.Properties.Resources.SpecifiedPropertyIsNotSupportedFormat("DisplayValue")); }
    }

    public new virtual global::Sungero.Contracts.IContractsApprovalRuleConditionsState State
    {
      get { return (global::Sungero.Contracts.IContractsApprovalRuleConditionsState)base.State; }
    }

    protected override global::Sungero.Domain.Shared.IEntityState CreateState()
    {
      return new global::Sungero.Contracts.Shared.ContractsApprovalRuleConditionsState(this);
    }

    public new virtual global::Sungero.Contracts.IContractsApprovalRuleConditionsInfo Info
    {
      get { return (global::Sungero.Contracts.IContractsApprovalRuleConditionsInfo)base.Info; }
    }







    public new virtual global::Sungero.Contracts.IContractCondition Condition
    {
      get
      {
      return base.Condition as global::Sungero.Contracts.IContractCondition;
      }

      set
      {
      base.Condition = value;
      }
    }




    #region Framework events



    #endregion


    public ContractsApprovalRuleConditions()
    {
    }

  }
}

// ==================================================================
// ContractsApprovalRuleConditionsHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Contracts
{

}

// ==================================================================
// ContractsApprovalRuleConditionsEventArgs.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Contracts.Server
{
}
