
// ==================================================================
// ContractApprovalRole.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Contracts.Server
{
    public class ContractApprovalRoleFilter<T> :
      global::Sungero.Docflow.Server.ApprovalRoleBaseFilter<T>
      where T : class, global::Sungero.Contracts.IContractApprovalRole
    {
      private global::Sungero.Contracts.IContractApprovalRoleFilterState filter
      {
        get
        {
          return (Sungero.Contracts.IContractApprovalRoleFilterState)this.Filter;
        }
      }

      protected override global::System.Linq.IQueryable<T> ApplyAppliedFilter(global::System.Linq.IQueryable<T> query)
      {
        return base.ApplyAppliedFilter(query);
      }

      public ContractApprovalRoleFilter(global::Sungero.Contracts.IContractApprovalRoleFilterState filter)
      : base(filter)
      {
      }

      protected ContractApprovalRoleFilter()
      {
      }
    }
      public class ContractApprovalRoleUiFilter<T> :
        global::Sungero.Docflow.Server.ApprovalRoleBaseUiFilter<T>
        where T : class, global::Sungero.Contracts.IContractApprovalRole
      {
        protected override global::System.Linq.IQueryable<T> ApplyAppliedFilter(global::System.Linq.IQueryable<T> query)
        {
          return base.ApplyAppliedFilter(query);
        }
      }

    public class ContractApprovalRoleSearchDialogModel : global::Sungero.Docflow.Server.ApprovalRoleBaseSearchDialogModel
        {
                  public override global::System.Int32? Id { get; protected set; }
                  public override global::System.String Description { get; protected set; }
                  public override global::System.String Name { get; protected set; }


                  public override global::System.Collections.Generic.IEnumerable<Sungero.Core.Enumeration> Status { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<Sungero.Core.Enumeration> Type { get; protected set; }




        }





  [global::Sungero.Domain.Filter(typeof(global::Sungero.Contracts.Server.ContractApprovalRoleFilter<global::Sungero.Contracts.IContractApprovalRole>))]
  [global::Sungero.Domain.UiFilter(typeof(global::Sungero.Contracts.Server.ContractApprovalRoleUiFilter<global::Sungero.Contracts.IContractApprovalRole>))]

  public class ContractApprovalRole :
    global::Sungero.Docflow.Server.ApprovalRoleBase, global::Sungero.Contracts.IContractApprovalRole
  {
    public static new readonly global::System.Guid ClassTypeGuid = global::System.Guid.Parse("03a2d2f4-a15a-4b5b-a97b-71140a938cbe");

    public override global::System.Guid TypeGuid
    {
      get { return global::Sungero.Contracts.Server.ContractApprovalRole.ClassTypeGuid; }
    }

    public override string TypeName
    {
      get { return "Sungero.Contracts.IContractApprovalRole, Sungero.Domain.Interfaces"; }
    }

    public override string DisplayValue
    {
      get { return this.Name; }
      set { this.Name = value; }
    }

    public new virtual global::Sungero.Contracts.IContractApprovalRoleState State
    {
      get { return (global::Sungero.Contracts.IContractApprovalRoleState)base.State; }
    }

    protected override global::Sungero.Domain.Shared.IEntityState CreateState()
    {
      return new global::Sungero.Contracts.Shared.ContractApprovalRoleState(this);
    }

    public new virtual global::Sungero.Contracts.IContractApprovalRoleInfo Info
    {
      get { return (global::Sungero.Contracts.IContractApprovalRoleInfo)base.Info; }
    }

    public new virtual global::Sungero.Contracts.IContractApprovalRoleAccessRights AccessRights
    {
      get { return (global::Sungero.Contracts.IContractApprovalRoleAccessRights)base.AccessRights; }
    }

    protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
    {
      return new global::Sungero.Contracts.Server.ContractApprovalRoleAccessRights(this);
    }

    protected override global::Sungero.Domain.EntityFunctions CreateServerFunctions()
    {
      return new global::Sungero.Contracts.Server.ContractApprovalRoleFunctions(this);
    }

    protected override global::Sungero.Domain.Shared.EntityFunctions CreateSharedFunctions()
    {
      return new global::Sungero.Contracts.Shared.ContractApprovalRoleFunctions(this);
    }

    protected override object CreateHandlers() {
      return new global::Sungero.Contracts.ContractApprovalRoleServerHandlers(this);
    }

    protected override object CreateSharedHandlers() {
      return new global::Sungero.Contracts.ContractApprovalRoleSharedHandlers(this);
    }










    protected override global::Sungero.Domain.Shared.EntityCreatingFromServerHandler CreateCreatingFromServerHandler(
      global::Sungero.Domain.Shared.IEntity entitySource)
    {
      return new global::Sungero.Contracts.ContractApprovalRoleCreatingFromServerHandler((global::Sungero.Contracts.IContractApprovalRole)entitySource, this.Info);
    }

    #region Framework events



    #endregion


    public ContractApprovalRole()
    {
    }

  }
}

// ==================================================================
// ContractApprovalRoleHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Contracts
{

  public partial class ContractApprovalRoleFilteringServerHandler<T>
    : global::Sungero.Docflow.ApprovalRoleBaseFilteringServerHandler<T>  
    where T : class, global::Sungero.Contracts.IContractApprovalRole
  {
    private global::Sungero.Contracts.IContractApprovalRoleFilterState _filter
    {
      get
      {
        return (Sungero.Contracts.IContractApprovalRoleFilterState)this.Filter;
      }
    }

    public ContractApprovalRoleFilteringServerHandler(global::Sungero.Contracts.IContractApprovalRoleFilterState filter)
    : base(filter)
    {
    }

    protected ContractApprovalRoleFilteringServerHandler()
    {
    }

    public override global::System.Linq.IQueryable<T> Filtering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.FilteringEventArgs e)
    {
      query = base.Filtering(query, e);
            return query;
    }


  }

  public partial class ContractApprovalRoleUiFilteringServerHandler<T>
    : global::Sungero.Docflow.ApprovalRoleBaseUiFilteringServerHandler<T>
    where T : class, global::Sungero.Contracts.IContractApprovalRole
  {
    public override global::System.Linq.IQueryable<T> Filtering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.UiFilteringEventArgs e)
    {
      query = base.Filtering(query, e);
            return query;
    }
  }

  public partial class ContractApprovalRoleSearchDialogServerHandler : global::Sungero.Docflow.ApprovalRoleBaseSearchDialogServerHandler
   {
     private global::Sungero.Contracts.Server.ContractApprovalRoleSearchDialogModel _dialog
     {
       get
       {
         return (global::Sungero.Contracts.Server.ContractApprovalRoleSearchDialogModel)this.Dialog;
       }
     }

     public ContractApprovalRoleSearchDialogServerHandler(global::Sungero.Contracts.Server.ContractApprovalRoleSearchDialogModel dialog)
       : base(dialog)
     {
     }
   }

  public partial class ContractApprovalRoleServerHandlers : global::Sungero.Docflow.ApprovalRoleBaseServerHandlers
  {
    private global::Sungero.Contracts.IContractApprovalRole _obj
    {
      get { return (global::Sungero.Contracts.IContractApprovalRole)this.Entity; }
    }

    public ContractApprovalRoleServerHandlers(global::Sungero.Contracts.IContractApprovalRole entity)
      : base(entity)
    {
    }
  }

  public partial class ContractApprovalRoleCreatingFromServerHandler : global::Sungero.Docflow.ApprovalRoleBaseCreatingFromServerHandler
  {
    private global::Sungero.Contracts.IContractApprovalRole _source
    {
      get { return (global::Sungero.Contracts.IContractApprovalRole)this.Source; }
    }

    private global::Sungero.Contracts.IContractApprovalRoleInfo _info
    {
      get { return (global::Sungero.Contracts.IContractApprovalRoleInfo)this._Info; }
    }

    public ContractApprovalRoleCreatingFromServerHandler(global::Sungero.Contracts.IContractApprovalRole source, global::Sungero.Contracts.IContractApprovalRoleInfo info)
      : base(source, info)
    {
    }
  }

}

// ==================================================================
// ContractApprovalRoleEventArgs.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Contracts.Server
{
}

// ==================================================================
// ContractApprovalRoleAccessRights.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Contracts.Server
{
  public class ContractApprovalRoleAccessRights : 
    Sungero.Docflow.Server.ApprovalRoleBaseAccessRights, Sungero.Contracts.IContractApprovalRoleAccessRights
  {

    public ContractApprovalRoleAccessRights(global::Sungero.Domain.Shared.IEntity entity) : base(entity)
    {
    }
  }

  public class ContractApprovalRoleTypeAccessRights : 
    Sungero.Docflow.Server.ApprovalRoleBaseTypeAccessRights, Sungero.Contracts.IContractApprovalRoleAccessRights
  {

    public ContractApprovalRoleTypeAccessRights(global::System.Type entityType) : base(entityType)
    {
    }
  }
}

// ==================================================================
// ContractApprovalRoleRepositoryImplementer.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Contracts.Server
{
    public class ContractApprovalRoleRepositoryImplementer<T> : 
      global::Sungero.Docflow.Server.ApprovalRoleBaseRepositoryImplementer<T>,
      global::Sungero.Contracts.IContractApprovalRoleRepositoryImplementer<T>
      where T : global::Sungero.Contracts.IContractApprovalRole 
    {
       public new global::Sungero.Contracts.IContractApprovalRoleAccessRights AccessRights
       {
          get { return (global::Sungero.Contracts.IContractApprovalRoleAccessRights)base.AccessRights; }
       }

       public new global::Sungero.Contracts.IContractApprovalRoleInfo Info
       {
          get { return (global::Sungero.Contracts.IContractApprovalRoleInfo)base.Info; }
       }

       protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
       {
         return new global::Sungero.Contracts.Server.ContractApprovalRoleTypeAccessRights(typeof(T));
       }
    }
}

// ==================================================================
// ContractApprovalRolePanelNavigationFilters.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Contracts.Server
{
}

// ==================================================================
// ContractApprovalRoleServerFunctions.g.cs
// ==================================================================

namespace Sungero.Contracts.Server
{
  public partial class ContractApprovalRoleFunctions : global::Sungero.Docflow.Server.ApprovalRoleBaseFunctions
  {
    private global::Sungero.Contracts.IContractApprovalRole _obj
    {
      get { return (global::Sungero.Contracts.IContractApprovalRole)this.Entity; }
    }

    public ContractApprovalRoleFunctions(global::Sungero.Contracts.IContractApprovalRole entity) : base(entity) { }
  }
}

// ==================================================================
// ContractApprovalRoleFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Contracts.Functions
{
  internal static class ContractApprovalRole
  {
    /// <redirect project="Sungero.Contracts.Server" type="Sungero.Contracts.Server.ContractApprovalRoleFunctions" />
    internal static  global::Sungero.Company.IEmployee GetRolePerformer(global::Sungero.Contracts.IContractApprovalRole contractApprovalRole, global::Sungero.Docflow.IApprovalTask task)
    {
      var functions = (global::Sungero.Contracts.Server.ContractApprovalRoleFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)contractApprovalRole).FunctionsContainer.ServerFunctions;
      return functions.GetRolePerformer(task);
    }

  }
}

// ==================================================================
// ContractApprovalRoleServerPublicFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Contracts.Server
{
  public class ContractApprovalRoleServerPublicFunctions : global::Sungero.Contracts.Server.IContractApprovalRoleServerPublicFunctions
  {
  }
}

// ==================================================================
// ContractApprovalRoleQueries.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Contracts.Queries
{
  public class ContractApprovalRole
  {
    private static global::Sungero.Domain.SqlQueryResolver resolver = new global::Sungero.Domain.SqlQueryResolver("Sungero.Contracts.Server.ContractApprovalRole.ContractApprovalRoleQueries.xml", System.Reflection.Assembly.GetExecutingAssembly());
  }
}
