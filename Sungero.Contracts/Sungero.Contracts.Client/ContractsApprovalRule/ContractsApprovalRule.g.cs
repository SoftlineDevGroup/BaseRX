
// ==================================================================
// ContractsApprovalRule.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Contracts.Client
{
  public class ContractsApprovalRule :
    global::Sungero.Docflow.Client.ApprovalRuleBase, global::Sungero.Contracts.IContractsApprovalRule
  {
    #region Fields and properties

    public static new readonly global::System.Guid ClassTypeGuid = global::System.Guid.Parse("dcbf9c6f-9bb6-4b61-b501-db35df320207");

    public override global::System.Guid TypeGuid
    {
      get { return global::Sungero.Contracts.Client.ContractsApprovalRule.ClassTypeGuid; }
    }

    public override string TypeName
    {
      get { return "Sungero.Contracts.IContractsApprovalRule, Sungero.Domain.Interfaces"; }
    }

      public override string DisplayValue
      {
        get { return this.Name; }
        set { this.Name = value; }
      }

      public override string DisplayPropertyName
      {
        get { return "Name"; }
      }


    public new global::Sungero.Contracts.IContractsApprovalRuleState State
    {
      get
      {
        return (global::Sungero.Contracts.IContractsApprovalRuleState)base.State;
      }
    }

    protected override global::Sungero.Domain.Shared.IEntityState CreateState()
    {
      return new global::Sungero.Contracts.Shared.ContractsApprovalRuleState(this);
    }

    public new global::Sungero.Contracts.IContractsApprovalRuleInfo Info
    {
      get
      {
        return (global::Sungero.Contracts.IContractsApprovalRuleInfo)base.Info;
      }
    }

    public new global::Sungero.Contracts.IContractsApprovalRuleAccessRights AccessRights
    {
      get
      {
        return (global::Sungero.Contracts.IContractsApprovalRuleAccessRights)base.AccessRights;
      }
    }

    protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
    {
      return new global::Sungero.Contracts.Client.ContractsApprovalRuleAccessRights(this);
    }










    #endregion

    #region Methods

    protected override object CreateActionsHandlers()
    {
      return new global::Sungero.Contracts.Client.ContractsApprovalRuleActions(this);
    }

    protected override object CreateCollectionActionsHandlers()
    {
      return new global::Sungero.Contracts.Client.ContractsApprovalRuleCollectionActions();
    }

    protected override object CreateAnyChildEntityActionsHandlers()
    {
      return new global::Sungero.Contracts.Client.ContractsApprovalRuleAnyChildEntityActions();
    }

    protected override object CreateAnyChildEntityCollectionActionsHandlers()
    {
      return new global::Sungero.Contracts.Client.ContractsApprovalRuleAnyChildEntityCollectionActions();
    }

    protected override object CreateConditionsActionsHandlers()
    {
      return new global::Sungero.Contracts.Client.ContractsApprovalRuleConditionsActions();
    }

    protected override object CreateConditionsCollectionActionsHandlers()
    {
      return new global::Sungero.Contracts.Client.ContractsApprovalRuleConditionsCollectionActions();
    }


    protected override global::Sungero.Domain.Client.EntityFunctions CreateClientFunctions()
    {
      return new global::Sungero.Contracts.Client.ContractsApprovalRuleFunctions(this);
    }

    protected override global::Sungero.Domain.Shared.EntityFunctions CreateSharedFunctions()
    {
      return new global::Sungero.Contracts.Shared.ContractsApprovalRuleFunctions(this);
    }
    protected override object CreateHandlers() {
      return new global::Sungero.Contracts.ContractsApprovalRuleClientHandlers(this);
    }
    protected override object CreateSharedHandlers() {
      return new global::Sungero.Contracts.ContractsApprovalRuleSharedHandlers(this);
    }

    #endregion

    #region Framework events












    #endregion

    #region Constructors





            protected override void InitConditionsCollectionProperty()
            {
              this._Conditions = new global::Sungero.Domain.Client.ListProperty<global::Sungero.Contracts.IContractsApprovalRuleConditions>("Conditions", this);
              this._Conditions.ValueChanged += (sender, e) => { this.ConditionsChangedHandler(); };
              this.AddProperty((global::Sungero.Domain.Client.IProperty)this._Conditions);
              this.SetConditionsEventHandlers();
            }

            protected override void InitDocumentKindsCollectionProperty()
            {
              this._DocumentKinds = new global::Sungero.Domain.Client.ListProperty<global::Sungero.Contracts.IContractsApprovalRuleDocumentKinds>("DocumentKinds", this);
              this._DocumentKinds.ValueChanged += (sender, e) => { this.DocumentKindsChangedHandler(); };
              this.AddProperty((global::Sungero.Domain.Client.IProperty)this._DocumentKinds);
              this.SetDocumentKindsEventHandlers();
            }

            protected override void InitDocumentGroupsCollectionProperty()
            {
              this._DocumentGroups = new global::Sungero.Domain.Client.ListProperty<global::Sungero.Contracts.IContractsApprovalRuleDocumentGroups>("DocumentGroups", this);
              this._DocumentGroups.ValueChanged += (sender, e) => { this.DocumentGroupsChangedHandler(); };
              this.AddProperty((global::Sungero.Domain.Client.IProperty)this._DocumentGroups);
              this.SetDocumentGroupsEventHandlers();
            }

            protected override void InitDepartmentsCollectionProperty()
            {
              this._Departments = new global::Sungero.Domain.Client.ListProperty<global::Sungero.Contracts.IContractsApprovalRuleDepartments>("Departments", this);
              this._Departments.ValueChanged += (sender, e) => { this.DepartmentsChangedHandler(); };
              this.AddProperty((global::Sungero.Domain.Client.IProperty)this._Departments);
              this.SetDepartmentsEventHandlers();
            }

            protected override void InitStagesCollectionProperty()
            {
              this._Stages = new global::Sungero.Domain.Client.ListProperty<global::Sungero.Contracts.IContractsApprovalRuleStages>("Stages", this);
              this._Stages.ValueChanged += (sender, e) => { this.StagesChangedHandler(); };
              this.AddProperty((global::Sungero.Domain.Client.IProperty)this._Stages);
              this.SetStagesEventHandlers();
            }

            protected override void InitBusinessUnitsCollectionProperty()
            {
              this._BusinessUnits = new global::Sungero.Domain.Client.ListProperty<global::Sungero.Contracts.IContractsApprovalRuleBusinessUnits>("BusinessUnits", this);
              this._BusinessUnits.ValueChanged += (sender, e) => { this.BusinessUnitsChangedHandler(); };
              this.AddProperty((global::Sungero.Domain.Client.IProperty)this._BusinessUnits);
              this.SetBusinessUnitsEventHandlers();
            }

            protected override void InitTransitionsCollectionProperty()
            {
              this._Transitions = new global::Sungero.Domain.Client.ListProperty<global::Sungero.Contracts.IContractsApprovalRuleTransitions>("Transitions", this);
              this._Transitions.ValueChanged += (sender, e) => { this.TransitionsChangedHandler(); };
              this.AddProperty((global::Sungero.Domain.Client.IProperty)this._Transitions);
              this.SetTransitionsEventHandlers();
            }


    public ContractsApprovalRule()
    {








    }

    #endregion

  }
}

// ==================================================================
// ContractsApprovalRulePresenter.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Contracts.Client
{
  public class ContractsApprovalRulePresenter<T> :
    global::Sungero.Docflow.Client.ApprovalRuleBasePresenter<T>
    where T : class, global::Sungero.Contracts.IContractsApprovalRule
  {
    #region Fields and properties




    #endregion

    #region Methods

    #endregion

    #region Framework events

    protected override void EntityPropertyChangedEventHandler(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
    {
      base.EntityPropertyChangedEventHandler(sender, e);
    }

    #endregion



    #region Constructors

    private void Init()
    {
              this._ParentRuleCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Docflow.IApprovalRuleBase>(() => this.Entity.Id, typeof(T), "ParentRule");

              this._ReworkPerformerCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.CoreEntities.IRecipient>(() => this.Entity.Id, typeof(T), "ReworkPerformer");

              this._ReworkApprovalRoleCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationProperty<global::Sungero.Docflow.IApprovalRoleBase>(() => this.Entity, typeof(T), "ReworkApprovalRole");


                          this._ConditionsConditionCollectionPresenter = this.CreateCollectionPresenterForNavigationProperty<global::Sungero.Contracts.IContractCondition>(global::System.Guid.Parse("63c932c6-2d61-4463-a828-219c94b6bc2c"));
                        this._ConditionsConditionCollectionPresenter
                        .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Contracts.IContractCondition>(() => this.Entity.Id, typeof(Sungero.Contracts.IContractsApprovalRuleConditions), "Condition");

                        this._DocumentKindsDocumentKindCollectionPresenter
                        .Query = global::Sungero.Domain.Client.Session.GetValuesForChildNavigationProperty<global::Sungero.Docflow.IDocumentKind>(
                          () => this.ChildEntityCollectionPresenters.GetPresenter<global::Sungero.Contracts.IContractsApprovalRuleDocumentKinds>().FocusedEntity,
                          typeof(Sungero.Contracts.IContractsApprovalRuleDocumentKinds),
                          () => this.Entity,
                          "DocumentKind");

                        this._DocumentGroupsDocumentGroupCollectionPresenter
                        .Query = global::Sungero.Domain.Client.Session.GetValuesForChildNavigationProperty<global::Sungero.Docflow.IDocumentGroupBase>(
                          () => this.ChildEntityCollectionPresenters.GetPresenter<global::Sungero.Contracts.IContractsApprovalRuleDocumentGroups>().FocusedEntity,
                          typeof(Sungero.Contracts.IContractsApprovalRuleDocumentGroups),
                          () => this.Entity,
                          "DocumentGroup");

                        this._DepartmentsDepartmentCollectionPresenter
                        .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Company.IDepartment>(() => this.Entity.Id, typeof(Sungero.Contracts.IContractsApprovalRuleDepartments), "Department");


                        this._StagesStageCollectionPresenter
                        .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Docflow.IApprovalStage>(() => this.Entity.Id, typeof(Sungero.Contracts.IContractsApprovalRuleStages), "Stage");


                        this._BusinessUnitsBusinessUnitCollectionPresenter
                        .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Company.IBusinessUnit>(() => this.Entity.Id, typeof(Sungero.Contracts.IContractsApprovalRuleBusinessUnits), "BusinessUnit");



    }

    public ContractsApprovalRulePresenter()
    {
      this.Init();
    }

    #endregion
  }
}

// ==================================================================
// ContractsApprovalRuleCollectionPresenter.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Contracts.Client
{
  public class ContractsApprovalRuleCollectionPresenter<T> : 
    global::Sungero.Docflow.Client.ApprovalRuleBaseCollectionPresenter<T>
    where T: class, global::Sungero.Contracts.IContractsApprovalRule
  {
    #region Actions



    #endregion

    #region Methods


    #endregion

    public ContractsApprovalRuleCollectionPresenter(global::System.Linq.IQueryable<T> query, OnLookup onLookup)
      : base(query, onLookup)
    {
    }

    public ContractsApprovalRuleCollectionPresenter(global::System.Linq.IQueryable<T> query)
      : this(query, null) { }

    public ContractsApprovalRuleCollectionPresenter(OnLookup onLookup)
      : this(null, onLookup) { }

    public ContractsApprovalRuleCollectionPresenter()
      : this(null, null) { }
  }
}

// ==================================================================
// ContractsApprovalRuleRepositoryImplementer.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Contracts.Client
{ 
  public class ContractsApprovalRuleRepositoryImplementer<T> : 
      global::Sungero.Docflow.Client.ApprovalRuleBaseRepositoryImplementer<T>,
      global::Sungero.Contracts.IContractsApprovalRuleRepositoryImplementer<T>
      where T : global::Sungero.Contracts.IContractsApprovalRule
    {
       public new global::Sungero.Contracts.IContractsApprovalRuleAccessRights AccessRights
       {
          get { return (global::Sungero.Contracts.IContractsApprovalRuleAccessRights)base.AccessRights; }
       }

       public new global::Sungero.Contracts.IContractsApprovalRuleInfo Info
       {
          get { return (global::Sungero.Contracts.IContractsApprovalRuleInfo)base.Info; }
       }

       protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
       {
         return new global::Sungero.Contracts.Client.ContractsApprovalRuleTypeAccessRights(typeof(T));
       }
    }
}

// ==================================================================
// ContractsApprovalRuleAccessRights.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Contracts.Client
{
  public class ContractsApprovalRuleAccessRights : 
    Sungero.Docflow.Client.ApprovalRuleBaseAccessRights, Sungero.Contracts.IContractsApprovalRuleAccessRights
  {

    public ContractsApprovalRuleAccessRights(global::Sungero.Domain.Shared.IEntity entity) : base(entity)
    {
    }
  }

  public class ContractsApprovalRuleTypeAccessRights : 
    Sungero.Docflow.Client.ApprovalRuleBaseTypeAccessRights, Sungero.Contracts.IContractsApprovalRuleAccessRights
  {

    public ContractsApprovalRuleTypeAccessRights(global::System.Type entityType) : base(entityType)
    {
    }
  }
}
