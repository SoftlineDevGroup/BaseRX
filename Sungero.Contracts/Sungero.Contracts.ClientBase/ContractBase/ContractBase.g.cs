
// ==================================================================
// ContractBaseEventArgs.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Contracts.Client
{ 
}

// ==================================================================
// ContractBaseHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Contracts
{

  public partial class ContractBaseFilteringClientHandler
    : global::Sungero.Contracts.ContractualDocumentFilteringClientHandler
  {
    private global::Sungero.Contracts.IContractBaseFilterState _filter
    {
      get
      {
        return (Sungero.Contracts.IContractBaseFilterState)this.Filter;
      }
    }

    public ContractBaseFilteringClientHandler(global::Sungero.Contracts.IContractBaseFilterState filter)
    : base(filter)
    {
    }

    protected ContractBaseFilteringClientHandler()
    {
    }

    public override void ValidateFilterPanel(global::Sungero.Domain.Client.ValidateFilterPanelEventArgs e)
    {
      base.ValidateFilterPanel(e);
    }
  }


  public partial class ContractBaseClientHandlers : global::Sungero.Contracts.ContractualDocumentClientHandlers
  {
    private global::Sungero.Contracts.IContractBase _obj
    {
      get { return (global::Sungero.Contracts.IContractBase)this.Entity; }
    }

    public virtual void IsAutomaticRenewalValueInput(global::Sungero.Presentation.BooleanValueInputEventArgs e) { }




    public ContractBaseClientHandlers(global::Sungero.Contracts.IContractBase entity) : base(entity)
    {
    }
  }

}

// ==================================================================
// ContractBaseClientFunctions.g.cs
// ==================================================================

namespace Sungero.Contracts.Client
{
  public partial class ContractBaseFunctions : global::Sungero.Contracts.Client.ContractualDocumentFunctions
  {
    private global::Sungero.Contracts.IContractBase _obj
    {
      get { return (global::Sungero.Contracts.IContractBase)this.Entity; }
    }

    public ContractBaseFunctions(global::Sungero.Contracts.IContractBase entity) : base(entity) { }
  }
}

// ==================================================================
// ContractBaseFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Contracts.Functions
{
  internal static class ContractBase
  {
    /// <redirect project="Sungero.Contracts.Shared" type="Sungero.Contracts.Shared.ContractBaseFunctions" />
    internal static  global::System.Boolean HaveDuplicates(global::Sungero.Contracts.IContractBase contract, global::Sungero.Company.IBusinessUnit businessUnit, global::System.String registrationNumber, global::System.Nullable<global::System.DateTime> registrationDate, global::Sungero.Parties.ICounterparty counterparty)
    {
      return global::Sungero.Contracts.Shared.ContractBaseFunctions.HaveDuplicates(contract, businessUnit, registrationNumber, registrationDate, counterparty);
    }
    /// <redirect project="Sungero.Contracts.Shared" type="Sungero.Contracts.Shared.ContractBaseFunctions" />
    internal static  void ChangeDocumentPropertiesAccess(global::Sungero.Contracts.IContractBase contractBase, global::System.Boolean isEnabled, global::System.Boolean isRepeatRegister)
    {
      var functions = (global::Sungero.Contracts.Shared.ContractBaseFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)contractBase).FunctionsContainer.SharedFunctions;
    functions.ChangeDocumentPropertiesAccess(isEnabled, isRepeatRegister);
    }
    /// <redirect project="Sungero.Contracts.Shared" type="Sungero.Contracts.Shared.ContractBaseFunctions" />
    internal static  global::System.String GetNamePartByContract(global::Sungero.Contracts.IContractualDocument contract)
    {
      return global::Sungero.Contracts.Shared.ContractBaseFunctions.GetNamePartByContract(contract);
    }
    /// <redirect project="Sungero.Contracts.Shared" type="Sungero.Contracts.Shared.ContractBaseFunctions" />
    internal static  global::System.String GetContractNamePart(global::Sungero.Contracts.IContractBase contract)
    {
      return global::Sungero.Contracts.Shared.ContractBaseFunctions.GetContractNamePart(contract);
    }
    /// <redirect project="Sungero.Contracts.Shared" type="Sungero.Contracts.Shared.ContractBaseFunctions" />
    internal static  void SetObsolete(global::Sungero.Contracts.IContractBase contractBase, global::System.Boolean isActive)
    {
      var functions = (global::Sungero.Contracts.Shared.ContractBaseFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)contractBase).FunctionsContainer.SharedFunctions;
    functions.SetObsolete(isActive);
    }
    /// <redirect project="Sungero.Contracts.Shared" type="Sungero.Contracts.Shared.ContractBaseFunctions" />
    internal static  void FillName(global::Sungero.Contracts.IContractBase contractBase)
    {
      var functions = (global::Sungero.Contracts.Shared.ContractBaseFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)contractBase).FunctionsContainer.SharedFunctions;
    functions.FillName();
    }
    /// <redirect project="Sungero.Contracts.Shared" type="Sungero.Contracts.Shared.ContractBaseFunctions" />
    internal static  void SetRequiredProperties(global::Sungero.Contracts.IContractBase contractBase)
    {
      var functions = (global::Sungero.Contracts.Shared.ContractBaseFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)contractBase).FunctionsContainer.SharedFunctions;
    functions.SetRequiredProperties();
    }
    /// <redirect project="Sungero.Contracts.Shared" type="Sungero.Contracts.Shared.ContractBaseFunctions" />
    internal static  global::System.Boolean CheckRegistrationNumberUnique(global::Sungero.Contracts.IContractBase contractBase)
    {
      var functions = (global::Sungero.Contracts.Shared.ContractBaseFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)contractBase).FunctionsContainer.SharedFunctions;
      return functions.CheckRegistrationNumberUnique();
    }
    /// <redirect project="Sungero.Contracts.Shared" type="Sungero.Contracts.Shared.ContractBaseFunctions" />
    internal static  global::System.Boolean HasEmptyRequiredProperties(global::Sungero.Contracts.IContractBase contractBase)
    {
      var functions = (global::Sungero.Contracts.Shared.ContractBaseFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)contractBase).FunctionsContainer.SharedFunctions;
      return functions.HasEmptyRequiredProperties();
    }

    internal static class Remote
    {
      /// <redirect project="Sungero.Contracts.Server" type="Sungero.Contracts.Server.ContractBaseFunctions" />
      internal static  global::System.Linq.IQueryable<global::Sungero.Contracts.IContractBase> GetDuplicates(global::Sungero.Contracts.IContractBase contract, global::Sungero.Company.IBusinessUnit businessUnit, global::System.String registrationNumber, global::System.Nullable<global::System.DateTime> registrationDate, global::Sungero.Parties.ICounterparty counterparty)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::System.Linq.IQueryable<global::Sungero.Contracts.IContractBase>>(
          global::System.Guid.Parse("306da7fa-dc27-437c-bb83-42c92436b7e2"),
          "GetDuplicates(global::Sungero.Contracts.IContractBase,global::Sungero.Company.IBusinessUnit,global::System.String,global::System.Nullable<global::System.DateTime>,global::Sungero.Parties.ICounterparty)"
      , contract, businessUnit, registrationNumber, registrationDate, counterparty);
      }
      /// <redirect project="Sungero.Contracts.Server" type="Sungero.Contracts.Server.ContractBaseFunctions" />
      internal static  global::System.String GetNamePartByContractIgnoreAccessRights(global::System.Int32 contractId)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::System.String>(
          global::System.Guid.Parse("306da7fa-dc27-437c-bb83-42c92436b7e2"),
          "GetNamePartByContractIgnoreAccessRights(global::System.Int32)"
      , contractId);
      }
      /// <redirect project="Sungero.Contracts.Server" type="Sungero.Contracts.Server.ContractBaseFunctions" />
      internal static  global::System.Collections.Generic.List<global::Sungero.Docflow.IApprovalRuleBase> GetApprovalRules(global::Sungero.Contracts.IContractBase contractBase)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::System.Collections.Generic.List<global::Sungero.Docflow.IApprovalRuleBase>>(
          global::System.Guid.Parse("306da7fa-dc27-437c-bb83-42c92436b7e2"),
          "GetApprovalRules(global::Sungero.Contracts.IContractBase)"
          , contractBase);
      }
      /// <redirect project="Sungero.Contracts.Server" type="Sungero.Contracts.Server.ContractBaseFunctions" />
      internal static global::System.String  GetDocumentSummary(global::Sungero.Contracts.IContractBase contractBase)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::System.String>(
          global::System.Guid.Parse("306da7fa-dc27-437c-bb83-42c92436b7e2"),
          "GetDocumentSummary(global::Sungero.Contracts.IContractBase)"
          , contractBase);
      }

    }
  }
}

// ==================================================================
// ContractBaseClientPublicFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Contracts.Client
{
  public class ContractBaseClientPublicFunctions : global::Sungero.Contracts.Client.IContractBaseClientPublicFunctions
  {
  }
}

// ==================================================================
// ContractBaseActions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Contracts.Client
{
  public partial class ContractBaseActions : global::Sungero.Contracts.Client.ContractualDocumentActions
  {
    private global::Sungero.Contracts.IContractBase _obj { get { return (global::Sungero.Contracts.IContractBase)this.Entity; } }
    public ContractBaseActions(global::Sungero.Contracts.IContractBase entity) : base(entity) { }
  }

  public partial class ContractBaseCollectionActions : global::Sungero.Contracts.Client.ContractualDocumentCollectionActions
  {
    private global::System.Collections.Generic.IEnumerable<global::Sungero.Contracts.IContractBase> _objs
    { 
      get { return global::System.Linq.Enumerable.Cast<global::Sungero.Contracts.IContractBase>(this.Entities); }
    }
  }

  public partial class ContractBaseAnyChildEntityActions : global::Sungero.Contracts.Client.ContractualDocumentAnyChildEntityActions
  {
  }

  public partial class ContractBaseAnyChildEntityCollectionActions : global::Sungero.Contracts.Client.ContractualDocumentAnyChildEntityCollectionActions
  {
  }

}
