
// ==================================================================
// ContractsApprovalRuleEventArgs.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Contracts.Client
{ 
}

// ==================================================================
// ContractsApprovalRuleHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Contracts
{

  public partial class ContractsApprovalRuleFilteringClientHandler
    : global::Sungero.Docflow.ApprovalRuleBaseFilteringClientHandler
  {
    private global::Sungero.Contracts.IContractsApprovalRuleFilterState _filter
    {
      get
      {
        return (Sungero.Contracts.IContractsApprovalRuleFilterState)this.Filter;
      }
    }

    public ContractsApprovalRuleFilteringClientHandler(global::Sungero.Contracts.IContractsApprovalRuleFilterState filter)
    : base(filter)
    {
    }

    protected ContractsApprovalRuleFilteringClientHandler()
    {
    }

    public override void ValidateFilterPanel(global::Sungero.Domain.Client.ValidateFilterPanelEventArgs e)
    {
      base.ValidateFilterPanel(e);
    }
  }


  public partial class ContractsApprovalRuleClientHandlers : global::Sungero.Docflow.ApprovalRuleBaseClientHandlers
  {
    private global::Sungero.Contracts.IContractsApprovalRule _obj
    {
      get { return (global::Sungero.Contracts.IContractsApprovalRule)this.Entity; }
    }

    public ContractsApprovalRuleClientHandlers(global::Sungero.Contracts.IContractsApprovalRule entity) : base(entity)
    {
    }
  }

}

// ==================================================================
// ContractsApprovalRuleClientFunctions.g.cs
// ==================================================================

namespace Sungero.Contracts.Client
{
  public partial class ContractsApprovalRuleFunctions : global::Sungero.Docflow.Client.ApprovalRuleBaseFunctions
  {
    private global::Sungero.Contracts.IContractsApprovalRule _obj
    {
      get { return (global::Sungero.Contracts.IContractsApprovalRule)this.Entity; }
    }

    public ContractsApprovalRuleFunctions(global::Sungero.Contracts.IContractsApprovalRule entity) : base(entity) { }
  }
}

// ==================================================================
// ContractsApprovalRuleFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Contracts.Functions
{
  internal static class ContractsApprovalRule
  {
    /// <redirect project="Sungero.Contracts.Shared" type="Sungero.Contracts.Shared.ContractsApprovalRuleFunctions" />
    internal static  global::System.String GetIncompatibleDocumentGroupsExcludedHint(global::Sungero.Contracts.IContractsApprovalRule contractsApprovalRule)
    {
      var functions = (global::Sungero.Contracts.Shared.ContractsApprovalRuleFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)contractsApprovalRule).FunctionsContainer.SharedFunctions;
      return functions.GetIncompatibleDocumentGroupsExcludedHint();
    }
    /// <redirect project="Sungero.Contracts.Shared" type="Sungero.Contracts.Shared.ContractsApprovalRuleFunctions" />
    internal static  global::System.Collections.Generic.List<global::Sungero.Docflow.IDocumentGroupBase> GetAvailableDocumentGroups(global::Sungero.Contracts.IContractsApprovalRule contractsApprovalRule)
    {
      var functions = (global::Sungero.Contracts.Shared.ContractsApprovalRuleFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)contractsApprovalRule).FunctionsContainer.SharedFunctions;
      return functions.GetAvailableDocumentGroups();
    }

  }
}

// ==================================================================
// ContractsApprovalRuleClientPublicFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Contracts.Client
{
  public class ContractsApprovalRuleClientPublicFunctions : global::Sungero.Contracts.Client.IContractsApprovalRuleClientPublicFunctions
  {
  }
}

// ==================================================================
// ContractsApprovalRuleActions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Contracts.Client
{
  public partial class ContractsApprovalRuleActions : global::Sungero.Docflow.Client.ApprovalRuleBaseActions
  {
    private global::Sungero.Contracts.IContractsApprovalRule _obj { get { return (global::Sungero.Contracts.IContractsApprovalRule)this.Entity; } }
    public ContractsApprovalRuleActions(global::Sungero.Contracts.IContractsApprovalRule entity) : base(entity) { }
  }

  public partial class ContractsApprovalRuleCollectionActions : global::Sungero.Docflow.Client.ApprovalRuleBaseCollectionActions
  {
    private global::System.Collections.Generic.IEnumerable<global::Sungero.Contracts.IContractsApprovalRule> _objs
    { 
      get { return global::System.Linq.Enumerable.Cast<global::Sungero.Contracts.IContractsApprovalRule>(this.Entities); }
    }
  }

  public partial class ContractsApprovalRuleAnyChildEntityActions : global::Sungero.Docflow.Client.ApprovalRuleBaseAnyChildEntityActions
  {
  }

  public partial class ContractsApprovalRuleAnyChildEntityCollectionActions : global::Sungero.Docflow.Client.ApprovalRuleBaseAnyChildEntityCollectionActions
  {
  }

  public partial class ContractsApprovalRuleConditionsActions : global::Sungero.Docflow.Client.ApprovalRuleBaseConditionsActions
  {
    private global::Sungero.Contracts.IContractsApprovalRuleConditions _obj { get { return (global::Sungero.Contracts.IContractsApprovalRuleConditions)this.Entity; } }
    private global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Contracts.IContractsApprovalRuleConditions> _all
    { 
      get { return (global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Contracts.IContractsApprovalRuleConditions>)this.AllEntities; }
    }
  }

  public partial class ContractsApprovalRuleConditionsCollectionActions : global::Sungero.Docflow.Client.ApprovalRuleBaseConditionsCollectionActions
  {
    private global::System.Collections.Generic.IEnumerable<global::Sungero.Contracts.IContractsApprovalRuleConditions> _objs
    { 
      get { return global::System.Linq.Enumerable.Cast<global::Sungero.Contracts.IContractsApprovalRuleConditions>(this.Entities); }
    }
    private global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Contracts.IContractsApprovalRuleConditions> _all
    { 
      get { return (global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Contracts.IContractsApprovalRuleConditions>)this.AllEntities; }
    }
  }

}
