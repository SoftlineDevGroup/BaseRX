
// ==================================================================
// ModuleFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Contracts.Functions
{
  internal static partial class Module
  {
    /// <redirect project="Sungero.Contracts.ClientBase" type="Sungero.Contracts.Client.ModuleFunctions" />
    [global::Sungero.Core.HyperlinkAttribute()]
    internal static void FindContract(global::System.String uuid, global::System.String number, global::System.String date, global::System.String butin, global::System.String butrrc, global::System.String cuuid, global::System.String ctin, global::System.String ctrrc, global::System.String sysid)
    {
    ((global::Sungero.Contracts.Client.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.ClientBase)).FindContract(uuid, number, date, butin, butrrc, cuuid, ctin, ctrrc, sysid);
    }

    internal static class Remote
    {
      /// <redirect project="Sungero.Contracts.Server" type="Sungero.Contracts.Server.ModuleFunctions" />
      internal static global::Sungero.Contracts.ISupAgreement CreateSupAgreemnt()
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::Sungero.Contracts.ISupAgreement>(
          global::System.Guid.Parse("f9d15b1c-2784-4c84-8348-1e162d70b988"),
          "CreateSupAgreemnt()");
      }
      /// <redirect project="Sungero.Contracts.Server" type="Sungero.Contracts.Server.ModuleFunctions" />
      internal static global::Sungero.FinancialArchive.IContractStatement CreateContractStatement()
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::Sungero.FinancialArchive.IContractStatement>(
          global::System.Guid.Parse("f9d15b1c-2784-4c84-8348-1e162d70b988"),
          "CreateContractStatement()");
      }
      /// <redirect project="Sungero.Contracts.Server" type="Sungero.Contracts.Server.ModuleFunctions" />
      internal static global::System.Linq.IQueryable<global::Sungero.Docflow.IDocumentKind> GetDocumentKinds()
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::System.Linq.IQueryable<global::Sungero.Docflow.IDocumentKind>>(
          global::System.Guid.Parse("f9d15b1c-2784-4c84-8348-1e162d70b988"),
          "GetDocumentKinds()");
      }
      /// <redirect project="Sungero.Contracts.Server" type="Sungero.Contracts.Server.ModuleFunctions" />
      internal static global::System.Collections.Generic.List<global::Sungero.Docflow.IDocumentRegister> GetContractualDocumentRegisters()
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::System.Collections.Generic.List<global::Sungero.Docflow.IDocumentRegister>>(
          global::System.Guid.Parse("f9d15b1c-2784-4c84-8348-1e162d70b988"),
          "GetContractualDocumentRegisters()");
      }
      /// <redirect project="Sungero.Contracts.Server" type="Sungero.Contracts.Server.ModuleFunctions" />
      internal static global::System.Linq.IQueryable<global::Sungero.Contracts.IContractualDocument> GetFilteredRegisteredDocuments(global::System.String number, global::System.Nullable<global::System.DateTime> dateFrom, global::System.Nullable<global::System.DateTime> dateTo, global::Sungero.Docflow.IDocumentRegister documentRegister, global::Sungero.Docflow.ICaseFile caseFile, global::Sungero.Company.IEmployee responsibleEmployee)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::System.Linq.IQueryable<global::Sungero.Contracts.IContractualDocument>>(
          global::System.Guid.Parse("f9d15b1c-2784-4c84-8348-1e162d70b988"),
          "GetFilteredRegisteredDocuments(global::System.String,global::System.Nullable<global::System.DateTime>,global::System.Nullable<global::System.DateTime>,global::Sungero.Docflow.IDocumentRegister,global::Sungero.Docflow.ICaseFile,global::Sungero.Company.IEmployee)", number, dateFrom, dateTo, documentRegister, caseFile, responsibleEmployee);
      }
      /// <redirect project="Sungero.Contracts.Server" type="Sungero.Contracts.Server.ModuleFunctions" />
      internal static global::System.Linq.IQueryable<global::Sungero.Contracts.IContractualDocument> GetContractualDocsWithCounterparty(global::Sungero.Parties.ICounterparty counterparty, global::System.Nullable<global::System.DateTime> dateFrom, global::System.Nullable<global::System.DateTime> dateTo)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::System.Linq.IQueryable<global::Sungero.Contracts.IContractualDocument>>(
          global::System.Guid.Parse("f9d15b1c-2784-4c84-8348-1e162d70b988"),
          "GetContractualDocsWithCounterparty(global::Sungero.Parties.ICounterparty,global::System.Nullable<global::System.DateTime>,global::System.Nullable<global::System.DateTime>)", counterparty, dateFrom, dateTo);
      }
      /// <redirect project="Sungero.Contracts.Server" type="Sungero.Contracts.Server.ModuleFunctions" />
      internal static global::System.Collections.Generic.List<global::Sungero.Contracts.IContractualDocument> FindContract(global::System.String uuid, global::System.String number, global::System.String date, global::System.String businessUnitTIN, global::System.String businessUnitTRRC, global::System.String counterpartyUuid, global::System.String counterpartyTIN, global::System.String counterpartyTRRC, global::System.String sysid)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::System.Collections.Generic.List<global::Sungero.Contracts.IContractualDocument>>(
          global::System.Guid.Parse("f9d15b1c-2784-4c84-8348-1e162d70b988"),
          "FindContract(global::System.String,global::System.String,global::System.String,global::System.String,global::System.String,global::System.String,global::System.String,global::System.String,global::System.String)", uuid, number, date, businessUnitTIN, businessUnitTRRC, counterpartyUuid, counterpartyTIN, counterpartyTRRC, sysid);
      }
      /// <redirect project="Sungero.Contracts.Server" type="Sungero.Contracts.Server.ModuleFunctions" />
      internal static void RequeueSendNotificationForExpiringContracts()
      {
      global::Sungero.Domain.Shared.RemoteFunctionExecutor.Execute(
          global::System.Guid.Parse("f9d15b1c-2784-4c84-8348-1e162d70b988"),
          "RequeueSendNotificationForExpiringContracts()");
      }
      /// <redirect project="Sungero.Contracts.Server" type="Sungero.Contracts.Server.ModuleFunctions" />
      internal static void RequeueSendTaskForContractMilestones()
      {
      global::Sungero.Domain.Shared.RemoteFunctionExecutor.Execute(
          global::System.Guid.Parse("f9d15b1c-2784-4c84-8348-1e162d70b988"),
          "RequeueSendTaskForContractMilestones()");
      }

    }
    private static object GetFunctionsContainer()
    {
      return new global::Sungero.Contracts.Client.ModuleFunctions();
    }

    private static object GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType projectType)
    {
      var moduleId = new global::System.Guid("f9d15b1c-2784-4c84-8348-1e162d70b988");
      var finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(moduleId));
      var assemblyName = finalModuleMetadatda.GetAssemblyName(projectType);
      var moduleFunctionsType = global::System.Type.GetType(global::System.String.Format("{0}.{1}, {2}", finalModuleMetadatda.FunctionNamespace, "Module", assemblyName));
      return moduleFunctionsType.GetMethod("GetFunctionsContainer", global::System.Reflection.BindingFlags.NonPublic | global::System.Reflection.BindingFlags.Static).Invoke(null, null);
    }
  }
}

// ==================================================================
// ModuleClientPublicFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Contracts.Client
{
  public partial class ModuleClientPublicFunctions : global::Sungero.Contracts.Client.IModuleClientPublicFunctions
  {
  }
}

// ==================================================================
// ModuleWidgetHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Contracts.Client
{
}

// ==================================================================
// ModuleHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Contracts.Client
{

}

