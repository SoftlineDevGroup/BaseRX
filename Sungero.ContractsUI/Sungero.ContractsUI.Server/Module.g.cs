
// ==================================================================
// Module.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.ContractsUI.Server
{
  public partial class ContractsUIModule : global::Sungero.Domain.Shared.ModuleBase
  {
    public override global::System.Guid Id
    {
      get { return global::System.Guid.Parse("3c8b7d3a-187d-4445-8a8c-1d00ece44556"); }
    }

    public override string Name
    {
      get { return "Sungero.ContractsUI"; }
    }

    public override void RegisterTypes()
    {
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.ContractsUI.Server.IModuleServerInitializationFunctions, global::Sungero.ContractsUI.Server.ModuleServerInitializationFunctions>();


      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.ContractsUI.FolderFilterState.IContractsListFilterState, global::Sungero.ContractsUI.Shared.ContractsListFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.ContractsUI.FolderFilterState.IExpiringSoonContractsFilterState, global::Sungero.ContractsUI.Shared.ExpiringSoonContractsFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.ContractsUI.FolderFilterState.IContractsAtContractorsFilterState, global::Sungero.ContractsUI.Shared.ContractsAtContractorsFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.ContractsUI.FolderFilterState.IContractsHistoryFilterState, global::Sungero.ContractsUI.Shared.ContractsHistoryFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.ContractsUI.FolderFilterState.IIssuanceJournalFilterState, global::Sungero.ContractsUI.Shared.IssuanceJournalFilterState>();


      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.ContractsUI.Server.IModuleServerPublicFunctions, global::Sungero.ContractsUI.Server.ModuleServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.ContractsUI.Shared.IModuleSharedPublicFunctions, global::Sungero.ContractsUI.Shared.ModuleSharedPublicFunctions>();
    }
  }
}

// ==================================================================
// ModuleHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.ContractsUI.Server
{
  public partial class ContractsListFolderHandlers
  {
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    protected global::Sungero.ContractsUI.FolderFilterState.IContractsListFilterState Filter { get; private set; }

    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    public global::System.Boolean _disableUiFiltering { get; protected set; }

    private global::Sungero.ContractsUI.FolderFilterState.IContractsListFilterState _filter
    {
      get
      {
        return this.Filter;
      }
    }

    public virtual global::System.Boolean IsContractsListVisible()
    {
      return true;
    }

    public virtual global::System.Linq.IQueryable<global::Sungero.Contracts.IContractCategory> ContractsListCategoryFiltering(global::System.Linq.IQueryable<global::Sungero.Contracts.IContractCategory> query)
    {
      return query;
    }

    public virtual global::System.Linq.IQueryable<global::Sungero.Parties.ICounterparty> ContractsListContractorFiltering(global::System.Linq.IQueryable<global::Sungero.Parties.ICounterparty> query)
    {
      return query;
    }

    public virtual global::System.Linq.IQueryable<global::Sungero.Company.IBusinessUnit> ContractsListBusinessUnitFiltering(global::System.Linq.IQueryable<global::Sungero.Company.IBusinessUnit> query)
    {
      return query;
    }

    public virtual global::System.Linq.IQueryable<global::Sungero.Company.IDepartment> ContractsListDepartmentFiltering(global::System.Linq.IQueryable<global::Sungero.Company.IDepartment> query)
    {
      return query;
    }


    public ContractsListFolderHandlers(global::Sungero.ContractsUI.FolderFilterState.IContractsListFilterState filter)
    {
      this.Filter = filter;
    }
  }

  public partial class ExpiringSoonContractsFolderHandlers
  {
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    protected global::Sungero.ContractsUI.FolderFilterState.IExpiringSoonContractsFilterState Filter { get; private set; }

    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    public global::System.Boolean _disableUiFiltering { get; protected set; }

    private global::Sungero.ContractsUI.FolderFilterState.IExpiringSoonContractsFilterState _filter
    {
      get
      {
        return this.Filter;
      }
    }

    public virtual global::System.Boolean IsExpiringSoonContractsVisible()
    {
      return true;
    }

    public virtual global::System.Linq.IQueryable<global::Sungero.Contracts.IContractCategory> ExpiringSoonContractsCategoryFiltering(global::System.Linq.IQueryable<global::Sungero.Contracts.IContractCategory> query)
    {
      return query;
    }

    public virtual global::System.Linq.IQueryable<global::Sungero.Parties.ICounterparty> ExpiringSoonContractsContractorFiltering(global::System.Linq.IQueryable<global::Sungero.Parties.ICounterparty> query)
    {
      return query;
    }

    public virtual global::System.Linq.IQueryable<global::Sungero.Company.IBusinessUnit> ExpiringSoonContractsBusinessUnitFiltering(global::System.Linq.IQueryable<global::Sungero.Company.IBusinessUnit> query)
    {
      return query;
    }

    public virtual global::System.Linq.IQueryable<global::Sungero.Company.IEmployee> ExpiringSoonContractsResponsibleFiltering(global::System.Linq.IQueryable<global::Sungero.Company.IEmployee> query)
    {
      return query;
    }


    public ExpiringSoonContractsFolderHandlers(global::Sungero.ContractsUI.FolderFilterState.IExpiringSoonContractsFilterState filter)
    {
      this.Filter = filter;
    }
  }

  public partial class ContractsAtContractorsFolderHandlers
  {
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    protected global::Sungero.ContractsUI.FolderFilterState.IContractsAtContractorsFilterState Filter { get; private set; }

    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    public global::System.Boolean _disableUiFiltering { get; protected set; }

    private global::Sungero.ContractsUI.FolderFilterState.IContractsAtContractorsFilterState _filter
    {
      get
      {
        return this.Filter;
      }
    }

    public virtual global::System.Boolean IsContractsAtContractorsVisible()
    {
      return true;
    }

    public virtual global::System.Linq.IQueryable<global::Sungero.Contracts.IContractCategory> ContractsAtContractorsCategoryFiltering(global::System.Linq.IQueryable<global::Sungero.Contracts.IContractCategory> query)
    {
      return query;
    }

    public virtual global::System.Linq.IQueryable<global::Sungero.Parties.ICounterparty> ContractsAtContractorsContractorFiltering(global::System.Linq.IQueryable<global::Sungero.Parties.ICounterparty> query)
    {
      return query;
    }

    public virtual global::System.Linq.IQueryable<global::Sungero.Company.IBusinessUnit> ContractsAtContractorsBusinessUnitFiltering(global::System.Linq.IQueryable<global::Sungero.Company.IBusinessUnit> query)
    {
      return query;
    }

    public virtual global::System.Linq.IQueryable<global::Sungero.Company.IEmployee> ContractsAtContractorsResponsibleFiltering(global::System.Linq.IQueryable<global::Sungero.Company.IEmployee> query)
    {
      return query;
    }


    public ContractsAtContractorsFolderHandlers(global::Sungero.ContractsUI.FolderFilterState.IContractsAtContractorsFilterState filter)
    {
      this.Filter = filter;
    }
  }

  public partial class ContractsHistoryFolderHandlers
  {
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    protected global::Sungero.ContractsUI.FolderFilterState.IContractsHistoryFilterState Filter { get; private set; }

    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    public global::System.Boolean _disableUiFiltering { get; protected set; }

    private global::Sungero.ContractsUI.FolderFilterState.IContractsHistoryFilterState _filter
    {
      get
      {
        return this.Filter;
      }
    }

    public virtual global::System.Boolean IsContractsHistoryVisible()
    {
      return true;
    }

    public virtual global::System.Linq.IQueryable<global::Sungero.Contracts.IContractCategory> ContractsHistoryCategoryFiltering(global::System.Linq.IQueryable<global::Sungero.Contracts.IContractCategory> query)
    {
      return query;
    }

    public virtual global::System.Linq.IQueryable<global::Sungero.Company.IBusinessUnit> ContractsHistoryBusinessUnitFiltering(global::System.Linq.IQueryable<global::Sungero.Company.IBusinessUnit> query)
    {
      return query;
    }

    public virtual global::System.Linq.IQueryable<global::Sungero.Company.IEmployee> ContractsHistoryResponsibleFiltering(global::System.Linq.IQueryable<global::Sungero.Company.IEmployee> query)
    {
      return query;
    }


    public ContractsHistoryFolderHandlers(global::Sungero.ContractsUI.FolderFilterState.IContractsHistoryFilterState filter)
    {
      this.Filter = filter;
    }
  }

  public partial class IssuanceJournalFolderHandlers
  {
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    protected global::Sungero.ContractsUI.FolderFilterState.IIssuanceJournalFilterState Filter { get; private set; }

    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    public global::System.Boolean _disableUiFiltering { get; protected set; }

    private global::Sungero.ContractsUI.FolderFilterState.IIssuanceJournalFilterState _filter
    {
      get
      {
        return this.Filter;
      }
    }

    public virtual global::System.Boolean IsIssuanceJournalVisible()
    {
      return true;
    }

    public virtual global::System.Linq.IQueryable<global::Sungero.Company.IEmployee> IssuanceJournalEmployeeFiltering(global::System.Linq.IQueryable<global::Sungero.Company.IEmployee> query)
    {
      return query;
    }

    public virtual global::System.Linq.IQueryable<global::Sungero.Company.IDepartment> IssuanceJournalDepartmentFiltering(global::System.Linq.IQueryable<global::Sungero.Company.IDepartment> query)
    {
      return query;
    }

    public virtual global::System.Linq.IQueryable<global::Sungero.Docflow.IRegistrationGroup> IssuanceJournalRegistrationGroupFiltering(global::System.Linq.IQueryable<global::Sungero.Docflow.IRegistrationGroup> query)
    {
      return query;
    }

    public virtual global::System.Linq.IQueryable<global::Sungero.Docflow.ICaseFile> IssuanceJournalFileFiltering(global::System.Linq.IQueryable<global::Sungero.Docflow.ICaseFile> query)
    {
      return query;
    }


    public IssuanceJournalFolderHandlers(global::Sungero.ContractsUI.FolderFilterState.IIssuanceJournalFilterState filter)
    {
      this.Filter = filter;
    }
  }

}

// ==================================================================
// ModuleFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.ContractsUI.Functions
{
  internal static partial class Module
  {
    /// <redirect project="Sungero.ContractsUI.Server" type="Sungero.ContractsUI.Server.ModuleFunctions" />
    internal static global::System.Linq.IQueryable<global::Sungero.Contracts.IContractualDocument> GetMyContractualDocuments(global::System.Linq.IQueryable<global::Sungero.Contracts.IContractualDocument> query, global::System.Boolean substitution, global::Sungero.Core.Enumeration show)
    {
        return ((global::Sungero.ContractsUI.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server)).GetMyContractualDocuments(query, substitution, show);
    }
    /// <redirect project="Sungero.ContractsUI.Server" type="Sungero.ContractsUI.Server.ModuleFunctions" />
    internal static global::System.Linq.IQueryable<global::Sungero.Contracts.IContractualDocument> GetMyExpiringSoonContracts(global::System.Linq.IQueryable<global::Sungero.Contracts.IContractualDocument> query, global::System.Nullable<global::System.Boolean> needAutomaticRenewal, global::System.Boolean substitution, global::Sungero.Core.Enumeration show)
    {
        return ((global::Sungero.ContractsUI.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server)).GetMyExpiringSoonContracts(query, needAutomaticRenewal, substitution, show);
    }
    /// <redirect project="Sungero.ContractsUI.Server" type="Sungero.ContractsUI.Server.ModuleFunctions" />
    internal static global::System.Linq.IQueryable<global::Sungero.Docflow.IDocumentKind> ContractsFilterContractsKind(global::System.Linq.IQueryable<global::Sungero.Docflow.IDocumentKind> query, global::System.Boolean withoutActs)
    {
        return global::Sungero.ContractsUI.Server.ModuleFunctions.ContractsFilterContractsKind(query, withoutActs);
    }

    private static object GetFunctionsContainer()
    {
      return new global::Sungero.ContractsUI.Server.ModuleFunctions();
    }

    private static object GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType projectType)
    {
      var moduleId = new global::System.Guid("3c8b7d3a-187d-4445-8a8c-1d00ece44556");
      var finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(moduleId));
      var assemblyName = finalModuleMetadatda.GetAssemblyName(projectType);
      var moduleFunctionsType = global::System.Type.GetType(global::System.String.Format("{0}.{1}, {2}", finalModuleMetadatda.FunctionNamespace, "Module", assemblyName));
      return moduleFunctionsType.GetMethod("GetFunctionsContainer", global::System.Reflection.BindingFlags.NonPublic | global::System.Reflection.BindingFlags.Static).Invoke(null, null);
    }
  }
}

// ==================================================================
// ModuleInitializationInstantiation.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.ContractsUI.ModuleInitialization
{
  internal static partial class Module
  {

    private static object GetFunctionsContainer()
    {
      return new global::Sungero.ContractsUI.Server.ModuleInitializer();
    }

    private static object GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType projectType)
    {
      var moduleId = new global::System.Guid("3c8b7d3a-187d-4445-8a8c-1d00ece44556");
      var finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(moduleId));
      var assemblyName = finalModuleMetadatda.GetAssemblyName(projectType);
      var moduleFunctionsType = global::System.Type.GetType(global::System.String.Format("{0}.{1}, {2}", finalModuleMetadatda.ModuleInitializationNamespace, "Module", assemblyName));
      return moduleFunctionsType.GetMethod("GetFunctionsContainer", global::System.Reflection.BindingFlags.NonPublic | global::System.Reflection.BindingFlags.Static).Invoke(null, null);
    }

  }
}


// ==================================================================
// ModuleEventArgs.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.ContractsUI.Server
{
  public class ContractsListDocumentKindPanelNavigationFilter : global::Sungero.Domain.PanelNavigationFilterBase
  {
    public override global::System.Linq.IQueryable Apply(global::System.Linq.IQueryable query)
    {
      var typedQuery = (global::System.Linq.IQueryable<global::Sungero.Docflow.IDocumentKind>)query;
      var typedState = (global::Sungero.ContractsUI.FolderFilterState.IContractsListFilterState)this.State;
      var handlers = new global::Sungero.ContractsUI.Server.ContractsListFolderHandlers(typedState);
      var result = handlers.ContractsListDocumentKindFiltering(typedQuery);
      if (handlers._disableUiFiltering)
         global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<global::Sungero.Docflow.IDocumentKind>();
      return result;
    }
  }

  public class ContractsListCategoryPanelNavigationFilter : global::Sungero.Domain.PanelNavigationFilterBase
  {
    public override global::System.Linq.IQueryable Apply(global::System.Linq.IQueryable query)
    {
      var typedQuery = (global::System.Linq.IQueryable<global::Sungero.Contracts.IContractCategory>)query;
      var typedState = (global::Sungero.ContractsUI.FolderFilterState.IContractsListFilterState)this.State;
      var handlers = new global::Sungero.ContractsUI.Server.ContractsListFolderHandlers(typedState);
      var result = handlers.ContractsListCategoryFiltering(typedQuery);
      if (handlers._disableUiFiltering)
         global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<global::Sungero.Contracts.IContractCategory>();
      return result;
    }
  }

  public class ContractsListContractorPanelNavigationFilter : global::Sungero.Domain.PanelNavigationFilterBase
  {
    public override global::System.Linq.IQueryable Apply(global::System.Linq.IQueryable query)
    {
      var typedQuery = (global::System.Linq.IQueryable<global::Sungero.Parties.ICounterparty>)query;
      var typedState = (global::Sungero.ContractsUI.FolderFilterState.IContractsListFilterState)this.State;
      var handlers = new global::Sungero.ContractsUI.Server.ContractsListFolderHandlers(typedState);
      var result = handlers.ContractsListContractorFiltering(typedQuery);
      if (handlers._disableUiFiltering)
         global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<global::Sungero.Parties.ICounterparty>();
      return result;
    }
  }

  public class ContractsListBusinessUnitPanelNavigationFilter : global::Sungero.Domain.PanelNavigationFilterBase
  {
    public override global::System.Linq.IQueryable Apply(global::System.Linq.IQueryable query)
    {
      var typedQuery = (global::System.Linq.IQueryable<global::Sungero.Company.IBusinessUnit>)query;
      var typedState = (global::Sungero.ContractsUI.FolderFilterState.IContractsListFilterState)this.State;
      var handlers = new global::Sungero.ContractsUI.Server.ContractsListFolderHandlers(typedState);
      var result = handlers.ContractsListBusinessUnitFiltering(typedQuery);
      if (handlers._disableUiFiltering)
         global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<global::Sungero.Company.IBusinessUnit>();
      return result;
    }
  }

  public class ContractsListDepartmentPanelNavigationFilter : global::Sungero.Domain.PanelNavigationFilterBase
  {
    public override global::System.Linq.IQueryable Apply(global::System.Linq.IQueryable query)
    {
      var typedQuery = (global::System.Linq.IQueryable<global::Sungero.Company.IDepartment>)query;
      var typedState = (global::Sungero.ContractsUI.FolderFilterState.IContractsListFilterState)this.State;
      var handlers = new global::Sungero.ContractsUI.Server.ContractsListFolderHandlers(typedState);
      var result = handlers.ContractsListDepartmentFiltering(typedQuery);
      if (handlers._disableUiFiltering)
         global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<global::Sungero.Company.IDepartment>();
      return result;
    }
  }


  public class ExpiringSoonContractsDocumentKindPanelNavigationFilter : global::Sungero.Domain.PanelNavigationFilterBase
  {
    public override global::System.Linq.IQueryable Apply(global::System.Linq.IQueryable query)
    {
      var typedQuery = (global::System.Linq.IQueryable<global::Sungero.Docflow.IDocumentKind>)query;
      var typedState = (global::Sungero.ContractsUI.FolderFilterState.IExpiringSoonContractsFilterState)this.State;
      var handlers = new global::Sungero.ContractsUI.Server.ExpiringSoonContractsFolderHandlers(typedState);
      var result = handlers.ExpiringSoonContractsDocumentKindFiltering(typedQuery);
      if (handlers._disableUiFiltering)
         global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<global::Sungero.Docflow.IDocumentKind>();
      return result;
    }
  }

  public class ExpiringSoonContractsCategoryPanelNavigationFilter : global::Sungero.Domain.PanelNavigationFilterBase
  {
    public override global::System.Linq.IQueryable Apply(global::System.Linq.IQueryable query)
    {
      var typedQuery = (global::System.Linq.IQueryable<global::Sungero.Contracts.IContractCategory>)query;
      var typedState = (global::Sungero.ContractsUI.FolderFilterState.IExpiringSoonContractsFilterState)this.State;
      var handlers = new global::Sungero.ContractsUI.Server.ExpiringSoonContractsFolderHandlers(typedState);
      var result = handlers.ExpiringSoonContractsCategoryFiltering(typedQuery);
      if (handlers._disableUiFiltering)
         global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<global::Sungero.Contracts.IContractCategory>();
      return result;
    }
  }

  public class ExpiringSoonContractsContractorPanelNavigationFilter : global::Sungero.Domain.PanelNavigationFilterBase
  {
    public override global::System.Linq.IQueryable Apply(global::System.Linq.IQueryable query)
    {
      var typedQuery = (global::System.Linq.IQueryable<global::Sungero.Parties.ICounterparty>)query;
      var typedState = (global::Sungero.ContractsUI.FolderFilterState.IExpiringSoonContractsFilterState)this.State;
      var handlers = new global::Sungero.ContractsUI.Server.ExpiringSoonContractsFolderHandlers(typedState);
      var result = handlers.ExpiringSoonContractsContractorFiltering(typedQuery);
      if (handlers._disableUiFiltering)
         global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<global::Sungero.Parties.ICounterparty>();
      return result;
    }
  }

  public class ExpiringSoonContractsBusinessUnitPanelNavigationFilter : global::Sungero.Domain.PanelNavigationFilterBase
  {
    public override global::System.Linq.IQueryable Apply(global::System.Linq.IQueryable query)
    {
      var typedQuery = (global::System.Linq.IQueryable<global::Sungero.Company.IBusinessUnit>)query;
      var typedState = (global::Sungero.ContractsUI.FolderFilterState.IExpiringSoonContractsFilterState)this.State;
      var handlers = new global::Sungero.ContractsUI.Server.ExpiringSoonContractsFolderHandlers(typedState);
      var result = handlers.ExpiringSoonContractsBusinessUnitFiltering(typedQuery);
      if (handlers._disableUiFiltering)
         global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<global::Sungero.Company.IBusinessUnit>();
      return result;
    }
  }

  public class ExpiringSoonContractsResponsiblePanelNavigationFilter : global::Sungero.Domain.PanelNavigationFilterBase
  {
    public override global::System.Linq.IQueryable Apply(global::System.Linq.IQueryable query)
    {
      var typedQuery = (global::System.Linq.IQueryable<global::Sungero.Company.IEmployee>)query;
      var typedState = (global::Sungero.ContractsUI.FolderFilterState.IExpiringSoonContractsFilterState)this.State;
      var handlers = new global::Sungero.ContractsUI.Server.ExpiringSoonContractsFolderHandlers(typedState);
      var result = handlers.ExpiringSoonContractsResponsibleFiltering(typedQuery);
      if (handlers._disableUiFiltering)
         global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<global::Sungero.Company.IEmployee>();
      return result;
    }
  }


  public class ContractsAtContractorsDocumentKindPanelNavigationFilter : global::Sungero.Domain.PanelNavigationFilterBase
  {
    public override global::System.Linq.IQueryable Apply(global::System.Linq.IQueryable query)
    {
      var typedQuery = (global::System.Linq.IQueryable<global::Sungero.Docflow.IDocumentKind>)query;
      var typedState = (global::Sungero.ContractsUI.FolderFilterState.IContractsAtContractorsFilterState)this.State;
      var handlers = new global::Sungero.ContractsUI.Server.ContractsAtContractorsFolderHandlers(typedState);
      var result = handlers.ContractsAtContractorsDocumentKindFiltering(typedQuery);
      if (handlers._disableUiFiltering)
         global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<global::Sungero.Docflow.IDocumentKind>();
      return result;
    }
  }

  public class ContractsAtContractorsCategoryPanelNavigationFilter : global::Sungero.Domain.PanelNavigationFilterBase
  {
    public override global::System.Linq.IQueryable Apply(global::System.Linq.IQueryable query)
    {
      var typedQuery = (global::System.Linq.IQueryable<global::Sungero.Contracts.IContractCategory>)query;
      var typedState = (global::Sungero.ContractsUI.FolderFilterState.IContractsAtContractorsFilterState)this.State;
      var handlers = new global::Sungero.ContractsUI.Server.ContractsAtContractorsFolderHandlers(typedState);
      var result = handlers.ContractsAtContractorsCategoryFiltering(typedQuery);
      if (handlers._disableUiFiltering)
         global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<global::Sungero.Contracts.IContractCategory>();
      return result;
    }
  }

  public class ContractsAtContractorsContractorPanelNavigationFilter : global::Sungero.Domain.PanelNavigationFilterBase
  {
    public override global::System.Linq.IQueryable Apply(global::System.Linq.IQueryable query)
    {
      var typedQuery = (global::System.Linq.IQueryable<global::Sungero.Parties.ICounterparty>)query;
      var typedState = (global::Sungero.ContractsUI.FolderFilterState.IContractsAtContractorsFilterState)this.State;
      var handlers = new global::Sungero.ContractsUI.Server.ContractsAtContractorsFolderHandlers(typedState);
      var result = handlers.ContractsAtContractorsContractorFiltering(typedQuery);
      if (handlers._disableUiFiltering)
         global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<global::Sungero.Parties.ICounterparty>();
      return result;
    }
  }

  public class ContractsAtContractorsBusinessUnitPanelNavigationFilter : global::Sungero.Domain.PanelNavigationFilterBase
  {
    public override global::System.Linq.IQueryable Apply(global::System.Linq.IQueryable query)
    {
      var typedQuery = (global::System.Linq.IQueryable<global::Sungero.Company.IBusinessUnit>)query;
      var typedState = (global::Sungero.ContractsUI.FolderFilterState.IContractsAtContractorsFilterState)this.State;
      var handlers = new global::Sungero.ContractsUI.Server.ContractsAtContractorsFolderHandlers(typedState);
      var result = handlers.ContractsAtContractorsBusinessUnitFiltering(typedQuery);
      if (handlers._disableUiFiltering)
         global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<global::Sungero.Company.IBusinessUnit>();
      return result;
    }
  }

  public class ContractsAtContractorsResponsiblePanelNavigationFilter : global::Sungero.Domain.PanelNavigationFilterBase
  {
    public override global::System.Linq.IQueryable Apply(global::System.Linq.IQueryable query)
    {
      var typedQuery = (global::System.Linq.IQueryable<global::Sungero.Company.IEmployee>)query;
      var typedState = (global::Sungero.ContractsUI.FolderFilterState.IContractsAtContractorsFilterState)this.State;
      var handlers = new global::Sungero.ContractsUI.Server.ContractsAtContractorsFolderHandlers(typedState);
      var result = handlers.ContractsAtContractorsResponsibleFiltering(typedQuery);
      if (handlers._disableUiFiltering)
         global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<global::Sungero.Company.IEmployee>();
      return result;
    }
  }


  public class ContractsHistoryDocumentKindPanelNavigationFilter : global::Sungero.Domain.PanelNavigationFilterBase
  {
    public override global::System.Linq.IQueryable Apply(global::System.Linq.IQueryable query)
    {
      var typedQuery = (global::System.Linq.IQueryable<global::Sungero.Docflow.IDocumentKind>)query;
      var typedState = (global::Sungero.ContractsUI.FolderFilterState.IContractsHistoryFilterState)this.State;
      var handlers = new global::Sungero.ContractsUI.Server.ContractsHistoryFolderHandlers(typedState);
      var result = handlers.ContractsHistoryDocumentKindFiltering(typedQuery);
      if (handlers._disableUiFiltering)
         global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<global::Sungero.Docflow.IDocumentKind>();
      return result;
    }
  }

  public class ContractsHistoryCategoryPanelNavigationFilter : global::Sungero.Domain.PanelNavigationFilterBase
  {
    public override global::System.Linq.IQueryable Apply(global::System.Linq.IQueryable query)
    {
      var typedQuery = (global::System.Linq.IQueryable<global::Sungero.Contracts.IContractCategory>)query;
      var typedState = (global::Sungero.ContractsUI.FolderFilterState.IContractsHistoryFilterState)this.State;
      var handlers = new global::Sungero.ContractsUI.Server.ContractsHistoryFolderHandlers(typedState);
      var result = handlers.ContractsHistoryCategoryFiltering(typedQuery);
      if (handlers._disableUiFiltering)
         global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<global::Sungero.Contracts.IContractCategory>();
      return result;
    }
  }

  public class ContractsHistoryBusinessUnitPanelNavigationFilter : global::Sungero.Domain.PanelNavigationFilterBase
  {
    public override global::System.Linq.IQueryable Apply(global::System.Linq.IQueryable query)
    {
      var typedQuery = (global::System.Linq.IQueryable<global::Sungero.Company.IBusinessUnit>)query;
      var typedState = (global::Sungero.ContractsUI.FolderFilterState.IContractsHistoryFilterState)this.State;
      var handlers = new global::Sungero.ContractsUI.Server.ContractsHistoryFolderHandlers(typedState);
      var result = handlers.ContractsHistoryBusinessUnitFiltering(typedQuery);
      if (handlers._disableUiFiltering)
         global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<global::Sungero.Company.IBusinessUnit>();
      return result;
    }
  }

  public class ContractsHistoryResponsiblePanelNavigationFilter : global::Sungero.Domain.PanelNavigationFilterBase
  {
    public override global::System.Linq.IQueryable Apply(global::System.Linq.IQueryable query)
    {
      var typedQuery = (global::System.Linq.IQueryable<global::Sungero.Company.IEmployee>)query;
      var typedState = (global::Sungero.ContractsUI.FolderFilterState.IContractsHistoryFilterState)this.State;
      var handlers = new global::Sungero.ContractsUI.Server.ContractsHistoryFolderHandlers(typedState);
      var result = handlers.ContractsHistoryResponsibleFiltering(typedQuery);
      if (handlers._disableUiFiltering)
         global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<global::Sungero.Company.IEmployee>();
      return result;
    }
  }


  public class IssuanceJournalDocumentKindPanelNavigationFilter : global::Sungero.Domain.PanelNavigationFilterBase
  {
    public override global::System.Linq.IQueryable Apply(global::System.Linq.IQueryable query)
    {
      var typedQuery = (global::System.Linq.IQueryable<global::Sungero.Docflow.IDocumentKind>)query;
      var typedState = (global::Sungero.ContractsUI.FolderFilterState.IIssuanceJournalFilterState)this.State;
      var handlers = new global::Sungero.ContractsUI.Server.IssuanceJournalFolderHandlers(typedState);
      var result = handlers.IssuanceJournalDocumentKindFiltering(typedQuery);
      if (handlers._disableUiFiltering)
         global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<global::Sungero.Docflow.IDocumentKind>();
      return result;
    }
  }

  public class IssuanceJournalEmployeePanelNavigationFilter : global::Sungero.Domain.PanelNavigationFilterBase
  {
    public override global::System.Linq.IQueryable Apply(global::System.Linq.IQueryable query)
    {
      var typedQuery = (global::System.Linq.IQueryable<global::Sungero.Company.IEmployee>)query;
      var typedState = (global::Sungero.ContractsUI.FolderFilterState.IIssuanceJournalFilterState)this.State;
      var handlers = new global::Sungero.ContractsUI.Server.IssuanceJournalFolderHandlers(typedState);
      var result = handlers.IssuanceJournalEmployeeFiltering(typedQuery);
      if (handlers._disableUiFiltering)
         global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<global::Sungero.Company.IEmployee>();
      return result;
    }
  }

  public class IssuanceJournalDepartmentPanelNavigationFilter : global::Sungero.Domain.PanelNavigationFilterBase
  {
    public override global::System.Linq.IQueryable Apply(global::System.Linq.IQueryable query)
    {
      var typedQuery = (global::System.Linq.IQueryable<global::Sungero.Company.IDepartment>)query;
      var typedState = (global::Sungero.ContractsUI.FolderFilterState.IIssuanceJournalFilterState)this.State;
      var handlers = new global::Sungero.ContractsUI.Server.IssuanceJournalFolderHandlers(typedState);
      var result = handlers.IssuanceJournalDepartmentFiltering(typedQuery);
      if (handlers._disableUiFiltering)
         global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<global::Sungero.Company.IDepartment>();
      return result;
    }
  }

  public class IssuanceJournalRegistrationGroupPanelNavigationFilter : global::Sungero.Domain.PanelNavigationFilterBase
  {
    public override global::System.Linq.IQueryable Apply(global::System.Linq.IQueryable query)
    {
      var typedQuery = (global::System.Linq.IQueryable<global::Sungero.Docflow.IRegistrationGroup>)query;
      var typedState = (global::Sungero.ContractsUI.FolderFilterState.IIssuanceJournalFilterState)this.State;
      var handlers = new global::Sungero.ContractsUI.Server.IssuanceJournalFolderHandlers(typedState);
      var result = handlers.IssuanceJournalRegistrationGroupFiltering(typedQuery);
      if (handlers._disableUiFiltering)
         global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<global::Sungero.Docflow.IRegistrationGroup>();
      return result;
    }
  }

  public class IssuanceJournalFilePanelNavigationFilter : global::Sungero.Domain.PanelNavigationFilterBase
  {
    public override global::System.Linq.IQueryable Apply(global::System.Linq.IQueryable query)
    {
      var typedQuery = (global::System.Linq.IQueryable<global::Sungero.Docflow.ICaseFile>)query;
      var typedState = (global::Sungero.ContractsUI.FolderFilterState.IIssuanceJournalFilterState)this.State;
      var handlers = new global::Sungero.ContractsUI.Server.IssuanceJournalFolderHandlers(typedState);
      var result = handlers.IssuanceJournalFileFiltering(typedQuery);
      if (handlers._disableUiFiltering)
         global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<global::Sungero.Docflow.ICaseFile>();
      return result;
    }
  }


}

// ==================================================================
// ModuleServerPublicFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.ContractsUI.Server
{
  public partial class ModuleServerPublicFunctions : global::Sungero.ContractsUI.Server.IModuleServerPublicFunctions
  {
    public global::System.Linq.IQueryable<global::Sungero.Docflow.IDocumentKind> ContractsFilterContractsKind(global::System.Linq.IQueryable<global::Sungero.Docflow.IDocumentKind> query, global::System.Boolean withoutActs)
    {
      return global::Sungero.ContractsUI.Functions.Module.ContractsFilterContractsKind(query, withoutActs);
    }
  }
}

namespace Sungero.ContractsUI.Server
{
  public partial class ModuleServerPublicFunctions : global::Sungero.ContractsUI.Server.IModuleServerPublicFunctions
  {

  }
}

// ==================================================================
// ModuleServerInitializationFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.ContractsUI.Server
{
  public partial class ModuleServerInitializationFunctions : global::Sungero.ContractsUI.Server.IModuleServerInitializationFunctions
  {
  }
}


// ==================================================================
// ModuleWidgetHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.ContractsUI.Server
{
      public partial class MyContractsWidgetHandlers
      {
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        protected global::Sungero.Domain.Shared.WidgetParametersBase InnerParameters { get; private set; }

        private global::Sungero.ContractsUI.Shared.MyContractsWidgetParameters _parameters
        {
          get
          {
            return (global::Sungero.ContractsUI.Shared.MyContractsWidgetParameters)this.InnerParameters;
          }
        }

          

          public virtual string GetMyContractsOnApprovalValue()
          {
            return string.Empty;
          }

          

          public virtual string GetMyContractsCompletedValue()
          {
            return string.Empty;
          }

          

          public virtual string GetMyContractsIsNotAutomaticRenewalValue()
          {
            return string.Empty;
          }

          

          public virtual string GetMyContractsIsAutomaticRenewalValue()
          {
            return string.Empty;
          }


        public MyContractsWidgetHandlers(global::Sungero.Domain.Shared.WidgetParametersBase parameters) 
        {
          this.InnerParameters = parameters;
        }
      }

      public partial class ContractTotalAmountGraphWidgetHandlers
      {
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        protected global::Sungero.Domain.Shared.WidgetParametersBase InnerParameters { get; private set; }

        private global::Sungero.ContractsUI.Shared.ContractTotalAmountGraphWidgetParameters _parameters
        {
          get
          {
            return (global::Sungero.ContractsUI.Shared.ContractTotalAmountGraphWidgetParameters)this.InnerParameters;
          }
        }

          public virtual global::System.Linq.IQueryable<global::Sungero.Contracts.IContractualDocument> ContractTotalAmountGraphTotalAmountFiltering(global::System.Linq.IQueryable<global::Sungero.Contracts.IContractualDocument> query, Sungero.Domain.WidgetBarChartFilteringEventArgs e)
          {
            return query;
          }
          

          public virtual void GetContractTotalAmountGraphTotalAmountValue(Sungero.Domain.GetWidgetBarChartValueEventArgs e)
          {
          }


        public ContractTotalAmountGraphWidgetHandlers(global::Sungero.Domain.Shared.WidgetParametersBase parameters) 
        {
          this.InnerParameters = parameters;
        }
      }

}

// ==================================================================
// ModuleQueries.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.ContractsUI.Queries
{
  public class Module
  {
    private static global::Sungero.Domain.SqlQueryResolver resolver = new global::Sungero.Domain.SqlQueryResolver("Sungero.ContractsUI.Server.ModuleQueries.xml", System.Reflection.Assembly.GetExecutingAssembly());
  }
}

// ==================================================================
// ModuleInitializer.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.ContractsUI.Server
{
  public partial class ModuleInitializer : global::Sungero.Domain.AppliedModuleInitializer
  {
  }
}

