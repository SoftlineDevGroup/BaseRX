
// ==================================================================
// VisibilitySetting.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Company.Client
{
  public class VisibilitySetting :
    global::Sungero.CoreEntities.Client.DatabookEntry, global::Sungero.Company.IVisibilitySetting
  {
    #region Fields and properties

    public static new readonly global::System.Guid ClassTypeGuid = global::System.Guid.Parse("435ba4a4-ee0a-4c43-b334-c243257f400f");

    public override global::System.Guid TypeGuid
    {
      get { return global::Sungero.Company.Client.VisibilitySetting.ClassTypeGuid; }
    }

    public override string TypeName
    {
      get { return "Sungero.Company.IVisibilitySetting, Sungero.Domain.Interfaces"; }
    }

      public override string DisplayValue
      {
        get { return this.Name; }
        set { this.Name = value; }
      }

      public override string DisplayPropertyName
      {
        get { return "Name"; }
      }


    public new global::Sungero.Company.IVisibilitySettingState State
    {
      get
      {
        return (global::Sungero.Company.IVisibilitySettingState)base.State;
      }
    }

    protected override global::Sungero.Domain.Shared.IEntityState CreateState()
    {
      return new global::Sungero.Company.Shared.VisibilitySettingState(this);
    }

    public new global::Sungero.Company.IVisibilitySettingInfo Info
    {
      get
      {
        return (global::Sungero.Company.IVisibilitySettingInfo)base.Info;
      }
    }

    public new global::Sungero.Company.IVisibilitySettingAccessRights AccessRights
    {
      get
      {
        return (global::Sungero.Company.IVisibilitySettingAccessRights)base.AccessRights;
      }
    }

    protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
    {
      return new global::Sungero.Company.Client.VisibilitySettingAccessRights(this);
    }

        protected global::Sungero.Domain.Client.SimpleProperty<global::System.String> _Name;

        public virtual global::System.String Name
        {
          get { return this._Name.Value; }
          set { this._Name.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.Boolean?> _NeedRestrictVisibility;

        public virtual global::System.Boolean? NeedRestrictVisibility
        {
          get { return this._NeedRestrictVisibility.Value; }
          set { this._NeedRestrictVisibility.Value = value; }
        }







          protected global::Sungero.Domain.Client.IListProperty<global::Sungero.Company.IVisibilitySettingUnrestrictedRecipients> _UnrestrictedRecipients;

          virtual public global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Company.IVisibilitySettingUnrestrictedRecipients> UnrestrictedRecipients
          {
            get { return this._UnrestrictedRecipients.Value; }
          }


          protected global::Sungero.Domain.Client.IListProperty<global::Sungero.Company.IVisibilitySettingHiddenRecipients> _HiddenRecipients;

          virtual public global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Company.IVisibilitySettingHiddenRecipients> HiddenRecipients
          {
            get { return this._HiddenRecipients.Value; }
          }




      protected global::Sungero.Domain.Client.TextProperty _NeedRestrictVisibilityDescription;

      [global::Sungero.Domain.Shared.DoNotSavePreviousValue]
      public virtual System.String NeedRestrictVisibilityDescription
      {
        get { return this._NeedRestrictVisibilityDescription.Value; }
        set { this._NeedRestrictVisibilityDescription.Value = value; }
      }



    private object _UnrestrictedRecipientsActionsHandlers;

    public object UnrestrictedRecipientsActionsHandlers
    {
      get
      {
        if (this._UnrestrictedRecipientsActionsHandlers == null)
          this._UnrestrictedRecipientsActionsHandlers = this.CreateUnrestrictedRecipientsActionsHandlers();
        return this._UnrestrictedRecipientsActionsHandlers;
      }
    }

    private object _UnrestrictedRecipientsCollectionActionsHandlers;

    public object UnrestrictedRecipientsCollectionActionsHandlers
    {
      get
      {
        if (this._UnrestrictedRecipientsCollectionActionsHandlers == null)
          this._UnrestrictedRecipientsCollectionActionsHandlers = this.CreateUnrestrictedRecipientsCollectionActionsHandlers();
        return this._UnrestrictedRecipientsCollectionActionsHandlers;
      }
    }
    private object _HiddenRecipientsActionsHandlers;

    public object HiddenRecipientsActionsHandlers
    {
      get
      {
        if (this._HiddenRecipientsActionsHandlers == null)
          this._HiddenRecipientsActionsHandlers = this.CreateHiddenRecipientsActionsHandlers();
        return this._HiddenRecipientsActionsHandlers;
      }
    }

    private object _HiddenRecipientsCollectionActionsHandlers;

    public object HiddenRecipientsCollectionActionsHandlers
    {
      get
      {
        if (this._HiddenRecipientsCollectionActionsHandlers == null)
          this._HiddenRecipientsCollectionActionsHandlers = this.CreateHiddenRecipientsCollectionActionsHandlers();
        return this._HiddenRecipientsCollectionActionsHandlers;
      }
    }

    #endregion

    #region Methods

    protected override object CreateActionsHandlers()
    {
      return new global::Sungero.Company.Client.VisibilitySettingActions(this);
    }

    protected override object CreateCollectionActionsHandlers()
    {
      return new global::Sungero.Company.Client.VisibilitySettingCollectionActions();
    }

    protected override object CreateAnyChildEntityActionsHandlers()
    {
      return new global::Sungero.Company.Client.VisibilitySettingAnyChildEntityActions();
    }

    protected override object CreateAnyChildEntityCollectionActionsHandlers()
    {
      return new global::Sungero.Company.Client.VisibilitySettingAnyChildEntityCollectionActions();
    }

    protected object CreateUnrestrictedRecipientsActionsHandlers()
    {
      return null;
    }

    protected object CreateUnrestrictedRecipientsCollectionActionsHandlers()
    {
      return null;
    }
    protected object CreateHiddenRecipientsActionsHandlers()
    {
      return null;
    }

    protected object CreateHiddenRecipientsCollectionActionsHandlers()
    {
      return null;
    }


    protected override global::Sungero.Domain.Client.EntityFunctions CreateClientFunctions()
    {
      return new global::Sungero.Company.Client.VisibilitySettingFunctions(this);
    }

    protected override global::Sungero.Domain.Shared.EntityFunctions CreateSharedFunctions()
    {
      return new global::Sungero.Company.Shared.VisibilitySettingFunctions(this);
    }
    protected override object CreateHandlers() {
      return new global::Sungero.Company.VisibilitySettingClientHandlers(this);
    }
    protected override object CreateSharedHandlers() {
      return new global::Sungero.Company.VisibilitySettingSharedHandlers(this);
    }

    #endregion

    #region Framework events

    protected void NameChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.Name, this.Name, this);
     ((global::Sungero.Company.VisibilitySettingSharedHandlers)this.SharedHandlers).NameChanged(args);
    }

    protected void NeedRestrictVisibilityChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.BooleanPropertyChangedEventArgs(this.State.Properties.NeedRestrictVisibility, this.NeedRestrictVisibility, this);
     ((global::Sungero.Company.VisibilitySettingSharedHandlers)this.SharedHandlers).NeedRestrictVisibilityChanged(args);
    }

    protected void UnrestrictedRecipientsChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.CollectionPropertyChangedEventArgs(this);
     ((global::Sungero.Company.VisibilitySettingSharedHandlers)this.SharedHandlers).UnrestrictedRecipientsChanged(args);
    }

    protected void NeedRestrictVisibilityDescriptionChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.TextPropertyChangedEventArgs(this.State.Properties.NeedRestrictVisibilityDescription, this.NeedRestrictVisibilityDescription, this);
     ((global::Sungero.Company.VisibilitySettingSharedHandlers)this.SharedHandlers).NeedRestrictVisibilityDescriptionChanged(args);
    }

    protected void HiddenRecipientsChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.CollectionPropertyChangedEventArgs(this);
     ((global::Sungero.Company.VisibilitySettingSharedHandlers)this.SharedHandlers).HiddenRecipientsChanged(args);
    }



    protected virtual global::Sungero.Company.VisibilitySettingUnrestrictedRecipientsSharedCollectionHandlers CreateUnrestrictedRecipientsAddedHandler(global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.Company.VisibilitySettingUnrestrictedRecipientsSharedCollectionHandlers(this, e.Value, null, e.Source);
    }

    protected virtual global::Sungero.Company.VisibilitySettingUnrestrictedRecipientsSharedCollectionHandlers CreateUnrestrictedRecipientsDeletedHandler(global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.Company.VisibilitySettingUnrestrictedRecipientsSharedCollectionHandlers(this, null, e.Value, null);
    }

    protected virtual void UnrestrictedRecipientsAddedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {  
      var collectionHandlers = this.CreateUnrestrictedRecipientsAddedHandler(e);
      if (collectionHandlers != null)
      {
        var args = new global::Sungero.Domain.Shared.CollectionPropertyAddedEventArgs(this);
        collectionHandlers.UnrestrictedRecipientsAdded(args);
      }
    }

    protected virtual void UnrestrictedRecipientsDeletedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {  
      var collectionHandlers = this.CreateUnrestrictedRecipientsDeletedHandler(e);
      if (collectionHandlers != null)
      {
        var args = new global::Sungero.Domain.Shared.CollectionPropertyDeletedEventArgs(this);
        collectionHandlers.UnrestrictedRecipientsDeleted(args);
      }
    }


    protected virtual global::Sungero.Company.VisibilitySettingHiddenRecipientsSharedCollectionHandlers CreateHiddenRecipientsAddedHandler(global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.Company.VisibilitySettingHiddenRecipientsSharedCollectionHandlers(this, e.Value, null, e.Source);
    }

    protected virtual global::Sungero.Company.VisibilitySettingHiddenRecipientsSharedCollectionHandlers CreateHiddenRecipientsDeletedHandler(global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.Company.VisibilitySettingHiddenRecipientsSharedCollectionHandlers(this, null, e.Value, null);
    }

    protected virtual void HiddenRecipientsAddedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {  
      var collectionHandlers = this.CreateHiddenRecipientsAddedHandler(e);
      if (collectionHandlers != null)
      {
        var args = new global::Sungero.Domain.Shared.CollectionPropertyAddedEventArgs(this);
        collectionHandlers.HiddenRecipientsAdded(args);
      }
    }

    protected virtual void HiddenRecipientsDeletedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {  
      var collectionHandlers = this.CreateHiddenRecipientsDeletedHandler(e);
      if (collectionHandlers != null)
      {
        var args = new global::Sungero.Domain.Shared.CollectionPropertyDeletedEventArgs(this);
        collectionHandlers.HiddenRecipientsDeleted(args);
      }
    }


  protected global::System.String NameValueInputHandler(global::System.String value)
  {
    var args = new global::Sungero.Presentation.StringValueInputEventArgs(this.Name, value, this, this.Info.Properties.Name);
    ((global::Sungero.Company.VisibilitySettingClientHandlers)this.Handlers).NameValueInput(args);
    return args.NewValue;
  }

  protected global::System.Boolean? NeedRestrictVisibilityValueInputHandler(global::System.Boolean? value)
  {
    var args = new global::Sungero.Presentation.BooleanValueInputEventArgs(this.NeedRestrictVisibility, value, this, this.Info.Properties.NeedRestrictVisibility);
    ((global::Sungero.Company.VisibilitySettingClientHandlers)this.Handlers).NeedRestrictVisibilityValueInput(args);
    return args.NewValue;
  }


  protected global::System.String NeedRestrictVisibilityDescriptionValueInputHandler(global::System.String value)
  {
    var args = new global::Sungero.Presentation.TextValueInputEventArgs(this.NeedRestrictVisibilityDescription, value, this, this.Info.Properties.NeedRestrictVisibilityDescription);
    ((global::Sungero.Company.VisibilitySettingClientHandlers)this.Handlers).NeedRestrictVisibilityDescriptionValueInput(args);
    return args.NewValue;
  }




    #endregion

    #region Constructors


            protected virtual void InitUnrestrictedRecipientsCollectionProperty()
            {
              this._UnrestrictedRecipients = new global::Sungero.Domain.Client.ListProperty<global::Sungero.Company.IVisibilitySettingUnrestrictedRecipients>("UnrestrictedRecipients", this);
              this._UnrestrictedRecipients.ValueChanged += (sender, e) => { this.UnrestrictedRecipientsChangedHandler(); };
              this.AddProperty((global::Sungero.Domain.Client.IProperty)this._UnrestrictedRecipients);
              this.SetUnrestrictedRecipientsEventHandlers();
            }

            protected void SetUnrestrictedRecipientsEventHandlers()
            {
              this._UnrestrictedRecipients.ChildEntityAdded += this.UnrestrictedRecipientsAddedHandler;
              this._UnrestrictedRecipients.ChildEntityDeleted += this.UnrestrictedRecipientsDeletedHandler;
            }

            protected virtual void InitHiddenRecipientsCollectionProperty()
            {
              this._HiddenRecipients = new global::Sungero.Domain.Client.ListProperty<global::Sungero.Company.IVisibilitySettingHiddenRecipients>("HiddenRecipients", this);
              this._HiddenRecipients.ValueChanged += (sender, e) => { this.HiddenRecipientsChangedHandler(); };
              this.AddProperty((global::Sungero.Domain.Client.IProperty)this._HiddenRecipients);
              this.SetHiddenRecipientsEventHandlers();
            }

            protected void SetHiddenRecipientsEventHandlers()
            {
              this._HiddenRecipients.ChildEntityAdded += this.HiddenRecipientsAddedHandler;
              this._HiddenRecipients.ChildEntityDeleted += this.HiddenRecipientsDeletedHandler;
            }


    public VisibilitySetting()
    {
            this._Name = new global::Sungero.Domain.Client.SimpleProperty<global::System.String>("Name", this);
            this._Name.ValueChanged += (sender, e) => { this.NameChangedHandler(); };
            this.AddProperty(this._Name);

            this._NeedRestrictVisibility = new global::Sungero.Domain.Client.SimpleProperty<global::System.Boolean?>("NeedRestrictVisibility", this);
            this._NeedRestrictVisibility.ValueChanged += (sender, e) => { this.NeedRestrictVisibilityChangedHandler(); };
            this.AddProperty(this._NeedRestrictVisibility);


            this.InitUnrestrictedRecipientsCollectionProperty();

            this.InitHiddenRecipientsCollectionProperty();


            this._NeedRestrictVisibilityDescription = new global::Sungero.Domain.Client.TextProperty("NeedRestrictVisibilityDescription", this);
            this._NeedRestrictVisibilityDescription.ValueChanged += (sender, e) => { this.NeedRestrictVisibilityDescriptionChangedHandler(); };
            this.AddProperty(this._NeedRestrictVisibilityDescription);






    }

    #endregion

  }
}

// ==================================================================
// VisibilitySettingPresenter.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Company.Client
{
  public class VisibilitySettingPresenter<T> :
    global::Sungero.Domain.Client.EntityPresenter<T>
    where T : class, global::Sungero.Company.IVisibilitySetting
  {
    #region Fields and properties




    #endregion

    #region Methods

    #endregion

    #region Framework events

    protected override void EntityPropertyChangedEventHandler(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
    {
      base.EntityPropertyChangedEventHandler(sender, e);
    }

    #endregion


                          protected global::Sungero.Domain.Client.IEntityCollectionPresenter _UnrestrictedRecipientsRecipientCollectionPresenter;
                          public global::Sungero.Domain.Client.IEntityCollectionPresenter UnrestrictedRecipientsRecipientCollectionPresenter
                          {
                  get { return this._UnrestrictedRecipientsRecipientCollectionPresenter; }
                }

                          protected global::Sungero.Domain.Client.IEntityCollectionPresenter _HiddenRecipientsRecipientCollectionPresenter;
                          public global::Sungero.Domain.Client.IEntityCollectionPresenter HiddenRecipientsRecipientCollectionPresenter
                          {
                  get { return this._HiddenRecipientsRecipientCollectionPresenter; }
                }



    #region Constructors

    private void Init()
    {

                          this._UnrestrictedRecipientsRecipientCollectionPresenter = this.CreateCollectionPresenterForNavigationProperty<global::Sungero.CoreEntities.IRecipient>(global::System.Guid.Parse("c43143d3-79d4-4a11-bce1-096e3b21399e"));
                        this._UnrestrictedRecipientsRecipientCollectionPresenter
                        .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.CoreEntities.IRecipient>(() => this.Entity.Id, typeof(Sungero.Company.IVisibilitySettingUnrestrictedRecipients), "Recipient");

                          this._HiddenRecipientsRecipientCollectionPresenter = this.CreateCollectionPresenterForNavigationProperty<global::Sungero.Company.IEmployee>(global::System.Guid.Parse("f68f91c5-8ffa-463a-b919-2496eb70531e"));
                        this._HiddenRecipientsRecipientCollectionPresenter
                        .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Company.IEmployee>(() => this.Entity.Id, typeof(Sungero.Company.IVisibilitySettingHiddenRecipients), "Recipient");


    }

    public VisibilitySettingPresenter()
    {
      this.Init();
    }

    #endregion
  }
}

// ==================================================================
// VisibilitySettingCollectionPresenter.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Company.Client
{
  public class VisibilitySettingCollectionPresenter<T> : 
    global::Sungero.Domain.Client.EntityCollectionPresenter<T>
    where T: class, global::Sungero.Company.IVisibilitySetting
  {
    #region Actions



    #endregion

    #region Methods


    #endregion

    public VisibilitySettingCollectionPresenter(global::System.Linq.IQueryable<T> query, OnLookup onLookup)
      : base(query, onLookup)
    {
    }

    public VisibilitySettingCollectionPresenter(global::System.Linq.IQueryable<T> query)
      : this(query, null) { }

    public VisibilitySettingCollectionPresenter(OnLookup onLookup)
      : this(null, onLookup) { }

    public VisibilitySettingCollectionPresenter()
      : this(null, null) { }
  }
}

// ==================================================================
// VisibilitySettingRepositoryImplementer.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Company.Client
{ 
  public class VisibilitySettingRepositoryImplementer<T> : 
      global::Sungero.Domain.Client.RepositoryImplementer<T>,
      global::Sungero.Company.IVisibilitySettingRepositoryImplementer<T>
      where T : global::Sungero.Company.IVisibilitySetting
    {
       public new global::Sungero.Company.IVisibilitySettingAccessRights AccessRights
       {
          get { return (global::Sungero.Company.IVisibilitySettingAccessRights)base.AccessRights; }
       }

       public new global::Sungero.Company.IVisibilitySettingInfo Info
       {
          get { return (global::Sungero.Company.IVisibilitySettingInfo)base.Info; }
       }

       protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
       {
         return new global::Sungero.Company.Client.VisibilitySettingTypeAccessRights(typeof(T));
       }
    }
}

// ==================================================================
// VisibilitySettingAccessRights.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Company.Client
{
  public class VisibilitySettingAccessRights : 
    Sungero.CoreEntities.Client.DatabookEntryAccessRights, Sungero.Company.IVisibilitySettingAccessRights
  {

    public VisibilitySettingAccessRights(global::Sungero.Domain.Shared.IEntity entity) : base(entity)
    {
    }
  }

  public class VisibilitySettingTypeAccessRights : 
    Sungero.CoreEntities.Client.DatabookEntryTypeAccessRights, Sungero.Company.IVisibilitySettingAccessRights
  {

    public VisibilitySettingTypeAccessRights(global::System.Type entityType) : base(entityType)
    {
    }
  }
}
