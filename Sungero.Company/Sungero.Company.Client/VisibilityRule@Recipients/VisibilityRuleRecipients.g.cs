
// ==================================================================
// VisibilityRuleRecipients.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Company.Client
{
  public class VisibilityRuleRecipients :
    global::Sungero.Domain.Client.ChildEntityProxy, global::Sungero.Company.IVisibilityRuleRecipients
  {
    #region Fields and properties

    public static new readonly global::System.Guid ClassTypeGuid = global::System.Guid.Parse("356ea70e-0e49-40e9-8eb2-4ea73e030539");

    public override global::System.Guid TypeGuid
    {
      get { return global::Sungero.Company.Client.VisibilityRuleRecipients.ClassTypeGuid; }
    }

    public override string TypeName
    {
      get { return "Sungero.Company.IVisibilityRuleRecipients, Sungero.Domain.Interfaces"; }
    }

    public new global::Sungero.Company.IVisibilityRuleRecipientsState State
    {
      get
      {
        return (global::Sungero.Company.IVisibilityRuleRecipientsState)base.State;
      }
    }

    protected override global::Sungero.Domain.Shared.IEntityState CreateState()
    {
      return new global::Sungero.Company.Shared.VisibilityRuleRecipientsState(this);
    }

    public new global::Sungero.Company.IVisibilityRuleRecipientsInfo Info
    {
      get
      {
        return (global::Sungero.Company.IVisibilityRuleRecipientsInfo)base.Info;
      }
    }

    protected global::Sungero.Domain.Client.NavigationProperty<global::Sungero.Company.IVisibilityRule> _VisibilityRule;

    public global::Sungero.Company.IVisibilityRule VisibilityRule
    {
      get { return this._VisibilityRule.Value; }
      set { this._VisibilityRule.Value = value; }
    }

    public override global::Sungero.Domain.Shared.IEntity RootEntity
    {
      get { return this.VisibilityRule; }
      set { this.VisibilityRule = (global::Sungero.Company.IVisibilityRule)value; }
    }




              protected global::Sungero.Domain.Client.INavigationProperty<global::Sungero.CoreEntities.IRecipient> _Recipient;

              public virtual global::Sungero.CoreEntities.IRecipient Recipient
              {
              get
              {
                return this._Recipient.Value as global::Sungero.CoreEntities.IRecipient;
              }

              set
              {
                (this._Recipient as global::Sungero.Domain.Client.IProperty).Value = value;
              }
            }










    #endregion

    #region Methods

    protected override object CreateHandlers() {
      return new global::Sungero.Company.VisibilityRuleRecipientsClientHandlers(this);
    }
    protected override object CreateSharedHandlers() {
      return new global::Sungero.Company.VisibilityRuleRecipientsSharedHandlers(this);
    }

    #endregion

    #region Framework events

    protected void RecipientChangedHandler()
    {
      var args = new global::Sungero.Company.Shared.VisibilityRuleRecipientsRecipientChangedEventArgs(this.State.Properties.Recipient, this.Recipient, this);
     ((global::Sungero.Company.VisibilityRuleRecipientsSharedHandlers)this.SharedHandlers).RecipientsRecipientChanged(args);
    }



  protected global::Sungero.CoreEntities.IRecipient RecipientValueInputHandler(global::Sungero.CoreEntities.IRecipient value)
  {
    var args = new global::Sungero.Company.Client.VisibilityRuleRecipientsRecipientValueInputEventArgs(this.Recipient, value, this, this.Info.Properties.Recipient);
    ((global::Sungero.Company.VisibilityRuleRecipientsClientHandlers)this.Handlers).RecipientsRecipientValueInput(args);
    return args.NewValue;
  }



    #endregion

    #region Constructors



              protected virtual void InitRecipientNavigationProperty()
              {
                this._Recipient = new global::Sungero.Domain.Client.NavigationProperty<global::Sungero.CoreEntities.IRecipient>("Recipient", this);
                this._Recipient.ValueChanged += (sender, e) => { this.RecipientChangedHandler(); };
                this.AddProperty(this._Recipient as global::Sungero.Domain.Client.IProperty);
              }




    public VisibilityRuleRecipients()
    {
      this._VisibilityRule = new global::Sungero.Domain.Client.NavigationProperty<global::Sungero.Company.IVisibilityRule>("VisibilityRule", this, true);


            this.InitRecipientNavigationProperty();








    }

    #endregion

  }
}
