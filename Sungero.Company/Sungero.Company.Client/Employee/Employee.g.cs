
// ==================================================================
// Employee.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Company.Client
{
  public class Employee :
    global::Sungero.CoreEntities.Client.User, global::Sungero.Company.IEmployee
  {
    #region Fields and properties

    public static new readonly global::System.Guid ClassTypeGuid = global::System.Guid.Parse("b7905516-2be5-4931-961c-cb38d5677565");

    public override global::System.Guid TypeGuid
    {
      get { return global::Sungero.Company.Client.Employee.ClassTypeGuid; }
    }

    public override string TypeName
    {
      get { return "Sungero.Company.IEmployee, Sungero.Domain.Interfaces"; }
    }

      public override string DisplayValue
      {
        get { return this.Name; }
        set { this.Name = value; }
      }

      public override string DisplayPropertyName
      {
        get { return "Name"; }
      }


      public override string AdditionalInfo
      {
        get { return this.JobTitle == null ? string.Empty : this.JobTitle.ToString(); }
      }

    public new global::Sungero.Company.IEmployeeState State
    {
      get
      {
        return (global::Sungero.Company.IEmployeeState)base.State;
      }
    }

    protected override global::Sungero.Domain.Shared.IEntityState CreateState()
    {
      return new global::Sungero.Company.Shared.EmployeeState(this);
    }

    public new global::Sungero.Company.IEmployeeInfo Info
    {
      get
      {
        return (global::Sungero.Company.IEmployeeInfo)base.Info;
      }
    }

    public new global::Sungero.Company.IEmployeeAccessRights AccessRights
    {
      get
      {
        return (global::Sungero.Company.IEmployeeAccessRights)base.AccessRights;
      }
    }

    protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
    {
      return new global::Sungero.Company.Client.EmployeeAccessRights(this);
    }

        protected global::Sungero.Domain.Client.SimpleProperty<global::System.String> _Phone;

        public virtual global::System.String Phone
        {
          get { return this._Phone.Value; }
          set { this._Phone.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.String> _Note;

        public virtual global::System.String Note
        {
          get { return this._Note.Value; }
          set { this._Note.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.String> _Email;

        public virtual global::System.String Email
        {
          get { return this._Email.Value; }
          set { this._Email.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.Boolean?> _NeedNotifyExpiredAssignments;

        public virtual global::System.Boolean? NeedNotifyExpiredAssignments
        {
          get { return this._NeedNotifyExpiredAssignments.Value; }
          set { this._NeedNotifyExpiredAssignments.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.Boolean?> _NeedNotifyNewAssignments;

        public virtual global::System.Boolean? NeedNotifyNewAssignments
        {
          get { return this._NeedNotifyNewAssignments.Value; }
          set { this._NeedNotifyNewAssignments.Value = value; }
        }




              protected global::Sungero.Domain.Client.INavigationProperty<global::Sungero.Parties.IPerson> _Person;

              public virtual global::Sungero.Parties.IPerson Person
              {
              get
              {
                return this._Person.Value as global::Sungero.Parties.IPerson;
              }

              set
              {
                (this._Person as global::Sungero.Domain.Client.IProperty).Value = value;
              }
            }



              protected global::Sungero.Domain.Client.INavigationProperty<global::Sungero.Company.IDepartment> _Department;

              public virtual global::Sungero.Company.IDepartment Department
              {
              get
              {
                return this._Department.Value as global::Sungero.Company.IDepartment;
              }

              set
              {
                (this._Department as global::Sungero.Domain.Client.IProperty).Value = value;
              }
            }



              protected global::Sungero.Domain.Client.INavigationProperty<global::Sungero.Company.IJobTitle> _JobTitle;

              public virtual global::Sungero.Company.IJobTitle JobTitle
              {
              get
              {
                return this._JobTitle.Value as global::Sungero.Company.IJobTitle;
              }

              set
              {
                (this._JobTitle as global::Sungero.Domain.Client.IProperty).Value = value;
              }
            }










    #endregion

    #region Methods

    protected override object CreateActionsHandlers()
    {
      return new global::Sungero.Company.Client.EmployeeActions(this);
    }

    protected override object CreateCollectionActionsHandlers()
    {
      return new global::Sungero.Company.Client.EmployeeCollectionActions();
    }

    protected override object CreateAnyChildEntityActionsHandlers()
    {
      return new global::Sungero.Company.Client.EmployeeAnyChildEntityActions();
    }

    protected override object CreateAnyChildEntityCollectionActionsHandlers()
    {
      return new global::Sungero.Company.Client.EmployeeAnyChildEntityCollectionActions();
    }


    protected override global::Sungero.Domain.Client.EntityFunctions CreateClientFunctions()
    {
      return new global::Sungero.Company.Client.EmployeeFunctions(this);
    }

    protected override global::Sungero.Domain.Shared.EntityFunctions CreateSharedFunctions()
    {
      return new global::Sungero.Company.Shared.EmployeeFunctions(this);
    }
    protected override object CreateHandlers() {
      return new global::Sungero.Company.EmployeeClientHandlers(this);
    }
    protected override object CreateSharedHandlers() {
      return new global::Sungero.Company.EmployeeSharedHandlers(this);
    }

    #endregion

    #region Framework events

    protected void PersonChangedHandler()
    {
      var args = new global::Sungero.Company.Shared.EmployeePersonChangedEventArgs(this.State.Properties.Person, this.Person, this);
     ((global::Sungero.Company.EmployeeSharedHandlers)this.SharedHandlers).PersonChanged(args);
    }

    protected void DepartmentChangedHandler()
    {
      var args = new global::Sungero.Company.Shared.EmployeeDepartmentChangedEventArgs(this.State.Properties.Department, this.Department, this);
     ((global::Sungero.Company.EmployeeSharedHandlers)this.SharedHandlers).DepartmentChanged(args);
    }

    protected void JobTitleChangedHandler()
    {
      var args = new global::Sungero.Company.Shared.EmployeeJobTitleChangedEventArgs(this.State.Properties.JobTitle, this.JobTitle, this);
     ((global::Sungero.Company.EmployeeSharedHandlers)this.SharedHandlers).JobTitleChanged(args);
    }

    protected void PhoneChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.Phone, this.Phone, this);
     ((global::Sungero.Company.EmployeeSharedHandlers)this.SharedHandlers).PhoneChanged(args);
    }

    protected void NoteChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.Note, this.Note, this);
     ((global::Sungero.Company.EmployeeSharedHandlers)this.SharedHandlers).NoteChanged(args);
    }

    protected void EmailChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.Email, this.Email, this);
     ((global::Sungero.Company.EmployeeSharedHandlers)this.SharedHandlers).EmailChanged(args);
    }

    protected void NeedNotifyExpiredAssignmentsChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.BooleanPropertyChangedEventArgs(this.State.Properties.NeedNotifyExpiredAssignments, this.NeedNotifyExpiredAssignments, this);
     ((global::Sungero.Company.EmployeeSharedHandlers)this.SharedHandlers).NeedNotifyExpiredAssignmentsChanged(args);
    }

    protected void NeedNotifyNewAssignmentsChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.BooleanPropertyChangedEventArgs(this.State.Properties.NeedNotifyNewAssignments, this.NeedNotifyNewAssignments, this);
     ((global::Sungero.Company.EmployeeSharedHandlers)this.SharedHandlers).NeedNotifyNewAssignmentsChanged(args);
    }



  protected global::Sungero.Parties.IPerson PersonValueInputHandler(global::Sungero.Parties.IPerson value)
  {
    var args = new global::Sungero.Company.Client.EmployeePersonValueInputEventArgs(this.Person, value, this, this.Info.Properties.Person);
    ((global::Sungero.Company.EmployeeClientHandlers)this.Handlers).PersonValueInput(args);
    return args.NewValue;
  }

  protected global::Sungero.Company.IDepartment DepartmentValueInputHandler(global::Sungero.Company.IDepartment value)
  {
    var args = new global::Sungero.Company.Client.EmployeeDepartmentValueInputEventArgs(this.Department, value, this, this.Info.Properties.Department);
    ((global::Sungero.Company.EmployeeClientHandlers)this.Handlers).DepartmentValueInput(args);
    return args.NewValue;
  }

  protected global::Sungero.Company.IJobTitle JobTitleValueInputHandler(global::Sungero.Company.IJobTitle value)
  {
    var args = new global::Sungero.Company.Client.EmployeeJobTitleValueInputEventArgs(this.JobTitle, value, this, this.Info.Properties.JobTitle);
    ((global::Sungero.Company.EmployeeClientHandlers)this.Handlers).JobTitleValueInput(args);
    return args.NewValue;
  }

  protected global::System.String PhoneValueInputHandler(global::System.String value)
  {
    var args = new global::Sungero.Presentation.StringValueInputEventArgs(this.Phone, value, this, this.Info.Properties.Phone);
    ((global::Sungero.Company.EmployeeClientHandlers)this.Handlers).PhoneValueInput(args);
    return args.NewValue;
  }

  protected global::System.String NoteValueInputHandler(global::System.String value)
  {
    var args = new global::Sungero.Presentation.StringValueInputEventArgs(this.Note, value, this, this.Info.Properties.Note);
    ((global::Sungero.Company.EmployeeClientHandlers)this.Handlers).NoteValueInput(args);
    return args.NewValue;
  }

  protected global::System.String EmailValueInputHandler(global::System.String value)
  {
    var args = new global::Sungero.Presentation.StringValueInputEventArgs(this.Email, value, this, this.Info.Properties.Email);
    ((global::Sungero.Company.EmployeeClientHandlers)this.Handlers).EmailValueInput(args);
    return args.NewValue;
  }

  protected global::System.Boolean? NeedNotifyExpiredAssignmentsValueInputHandler(global::System.Boolean? value)
  {
    var args = new global::Sungero.Presentation.BooleanValueInputEventArgs(this.NeedNotifyExpiredAssignments, value, this, this.Info.Properties.NeedNotifyExpiredAssignments);
    ((global::Sungero.Company.EmployeeClientHandlers)this.Handlers).NeedNotifyExpiredAssignmentsValueInput(args);
    return args.NewValue;
  }

  protected global::System.Boolean? NeedNotifyNewAssignmentsValueInputHandler(global::System.Boolean? value)
  {
    var args = new global::Sungero.Presentation.BooleanValueInputEventArgs(this.NeedNotifyNewAssignments, value, this, this.Info.Properties.NeedNotifyNewAssignments);
    ((global::Sungero.Company.EmployeeClientHandlers)this.Handlers).NeedNotifyNewAssignmentsValueInput(args);
    return args.NewValue;
  }



    #endregion

    #region Constructors




              protected virtual void InitPersonNavigationProperty()
              {
                this._Person = new global::Sungero.Domain.Client.NavigationProperty<global::Sungero.Parties.IPerson>("Person", this);
                this._Person.ValueChanged += (sender, e) => { this.PersonChangedHandler(); };
                this.AddProperty(this._Person as global::Sungero.Domain.Client.IProperty);
              }




              protected virtual void InitDepartmentNavigationProperty()
              {
                this._Department = new global::Sungero.Domain.Client.NavigationProperty<global::Sungero.Company.IDepartment>("Department", this);
                this._Department.ValueChanged += (sender, e) => { this.DepartmentChangedHandler(); };
                this.AddProperty(this._Department as global::Sungero.Domain.Client.IProperty);
              }




              protected virtual void InitJobTitleNavigationProperty()
              {
                this._JobTitle = new global::Sungero.Domain.Client.NavigationProperty<global::Sungero.Company.IJobTitle>("JobTitle", this);
                this._JobTitle.ValueChanged += (sender, e) => { this.JobTitleChangedHandler(); };
                this.AddProperty(this._JobTitle as global::Sungero.Domain.Client.IProperty);
              }




    public Employee()
    {
            this._Phone = new global::Sungero.Domain.Client.SimpleProperty<global::System.String>("Phone", this);
            this._Phone.ValueChanged += (sender, e) => { this.PhoneChangedHandler(); };
            this.AddProperty(this._Phone);

            this._Note = new global::Sungero.Domain.Client.SimpleProperty<global::System.String>("Note", this);
            this._Note.ValueChanged += (sender, e) => { this.NoteChangedHandler(); };
            this.AddProperty(this._Note);

            this._Email = new global::Sungero.Domain.Client.SimpleProperty<global::System.String>("Email", this);
            this._Email.ValueChanged += (sender, e) => { this.EmailChangedHandler(); };
            this.AddProperty(this._Email);

            this._NeedNotifyExpiredAssignments = new global::Sungero.Domain.Client.SimpleProperty<global::System.Boolean?>("NeedNotifyExpiredAssignments", this);
            this._NeedNotifyExpiredAssignments.ValueChanged += (sender, e) => { this.NeedNotifyExpiredAssignmentsChangedHandler(); };
            this.AddProperty(this._NeedNotifyExpiredAssignments);

            this._NeedNotifyNewAssignments = new global::Sungero.Domain.Client.SimpleProperty<global::System.Boolean?>("NeedNotifyNewAssignments", this);
            this._NeedNotifyNewAssignments.ValueChanged += (sender, e) => { this.NeedNotifyNewAssignmentsChangedHandler(); };
            this.AddProperty(this._NeedNotifyNewAssignments);

            this.InitPersonNavigationProperty();

            this.InitDepartmentNavigationProperty();

            this.InitJobTitleNavigationProperty();








    }

    #endregion

  }
}

// ==================================================================
// EmployeePresenter.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Company.Client
{
  public class EmployeePresenter<T> :
    global::Sungero.CoreEntities.Client.UserPresenter<T>
    where T : class, global::Sungero.Company.IEmployee
  {
    #region Fields and properties

          private global::System.Windows.Input.ICommand _OpenCertificatesListCommand;

          public global::System.Windows.Input.ICommand OpenCertificatesListCommand
          {
            get
            {
              if (this._OpenCertificatesListCommand == null)
                  this._OpenCertificatesListCommand = new global::Sungero.Domain.Client.SingleEntityCommand<T>("OpenCertificatesList", this, this.OpenCertificatesList, this.CanOpenCertificatesList) { IsEmptyParameterAllowed = true };
              return this._OpenCertificatesListCommand;
            }
          }
          private global::System.Windows.Input.ICommand _ShowResponsibilitiesReportCommand;

          public global::System.Windows.Input.ICommand ShowResponsibilitiesReportCommand
          {
            get
            {
              if (this._ShowResponsibilitiesReportCommand == null)
                  this._ShowResponsibilitiesReportCommand = new global::Sungero.Domain.Client.SingleEntityCommand<T>("ShowResponsibilitiesReport", this, this.ShowResponsibilitiesReport, this.CanShowResponsibilitiesReport) { IsEmptyParameterAllowed = true };
              return this._ShowResponsibilitiesReportCommand;
            }
          }
          private global::System.Windows.Input.ICommand _ShowRespondingDocumentsCommand;

          public global::System.Windows.Input.ICommand ShowRespondingDocumentsCommand
          {
            get
            {
              if (this._ShowRespondingDocumentsCommand == null)
                  this._ShowRespondingDocumentsCommand = new global::Sungero.Domain.Client.SingleEntityCommand<T>("ShowRespondingDocuments", this, this.ShowRespondingDocuments, this.CanShowRespondingDocuments) { IsEmptyParameterAllowed = true };
              return this._ShowRespondingDocumentsCommand;
            }
          }




    #endregion

    #region Methods

              private bool CanOpenCertificatesList(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfCanExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this);
                return ((Sungero.Company.Client.EmployeeActions)(entity as Sungero.Company.Client.Employee).ActionsHandlers).CanOpenCertificatesList(args);
              }

              private void OpenCertificatesList(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this, entity.Info.Actions.OpenCertificatesList);
                ((Sungero.Company.Client.EmployeeActions)(entity as Sungero.Company.Client.Employee).ActionsHandlers).OpenCertificatesList(args);
              }

              private bool CanShowResponsibilitiesReport(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfCanExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this);
                return ((Sungero.Company.Client.EmployeeActions)(entity as Sungero.Company.Client.Employee).ActionsHandlers).CanShowResponsibilitiesReport(args);
              }

              private void ShowResponsibilitiesReport(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this, entity.Info.Actions.ShowResponsibilitiesReport);
                ((Sungero.Company.Client.EmployeeActions)(entity as Sungero.Company.Client.Employee).ActionsHandlers).ShowResponsibilitiesReport(args);
              }

              private bool CanShowRespondingDocuments(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfCanExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this);
                return ((Sungero.Company.Client.EmployeeActions)(entity as Sungero.Company.Client.Employee).ActionsHandlers).CanShowRespondingDocuments(args);
              }

              private void ShowRespondingDocuments(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this, entity.Info.Actions.ShowRespondingDocuments);
                ((Sungero.Company.Client.EmployeeActions)(entity as Sungero.Company.Client.Employee).ActionsHandlers).ShowRespondingDocuments(args);
              }


    #endregion

    #region Framework events

    protected override void EntityPropertyChangedEventHandler(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
    {
      base.EntityPropertyChangedEventHandler(sender, e);
    }

    #endregion

              protected global::Sungero.Domain.Client.IEntityCollectionPresenter _PersonCollectionPresenter;
              public global::Sungero.Domain.Client.IEntityCollectionPresenter PersonCollectionPresenter
              {
          get { return this._PersonCollectionPresenter; }
        }
              protected global::Sungero.Domain.Client.IEntityCollectionPresenter _DepartmentCollectionPresenter;
              public global::Sungero.Domain.Client.IEntityCollectionPresenter DepartmentCollectionPresenter
              {
          get { return this._DepartmentCollectionPresenter; }
        }
              protected global::Sungero.Domain.Client.IEntityCollectionPresenter _JobTitleCollectionPresenter;
              public global::Sungero.Domain.Client.IEntityCollectionPresenter JobTitleCollectionPresenter
              {
          get { return this._JobTitleCollectionPresenter; }
        }



    #region Constructors

    private void Init()
    {
              this._LoginCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationProperty<global::Sungero.CoreEntities.ILogin>(() => this.Entity, typeof(T), "Login");

                  this._PersonCollectionPresenter = this.CreateCollectionPresenterForNavigationProperty<global::Sungero.Parties.IPerson>(global::System.Guid.Parse("655a799f-420f-4afd-9f83-5defeabe78a3"));
              this._PersonCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Parties.IPerson>(() => this.Entity.Id, typeof(T), "Person");

                  this._DepartmentCollectionPresenter = this.CreateCollectionPresenterForNavigationProperty<global::Sungero.Company.IDepartment>(global::System.Guid.Parse("98a7cb2f-c674-46a3-aa0a-e04caca19a2e"));
              this._DepartmentCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Company.IDepartment>(() => this.Entity.Id, typeof(T), "Department");

                  this._JobTitleCollectionPresenter = this.CreateCollectionPresenterForNavigationProperty<global::Sungero.Company.IJobTitle>(global::System.Guid.Parse("b61ee498-fdc7-4009-857b-4d77020dabf8"));
              this._JobTitleCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Company.IJobTitle>(() => this.Entity.Id, typeof(T), "JobTitle");


    }

    public EmployeePresenter()
    {
      this.Init();
    }

    #endregion
  }
}

// ==================================================================
// EmployeeCollectionPresenter.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Company.Client
{
  public class EmployeeCollectionPresenter<T> : 
    global::Sungero.CoreEntities.Client.UserCollectionPresenter<T>
    where T: class, global::Sungero.Company.IEmployee
  {
    #region Actions

          private global::System.Windows.Input.ICommand _ShowResponsibilitiesReportCommand;  

          public global::System.Windows.Input.ICommand ShowResponsibilitiesReportCommand 
          { 
            get
            { 
              if (this._ShowResponsibilitiesReportCommand == null)
                this._ShowResponsibilitiesReportCommand = new global::Sungero.Domain.Client.SingleEntityCommand<T>("ShowResponsibilitiesReport", this, this.ShowResponsibilitiesReport, this.CanShowResponsibilitiesReport) { IsEmptyParameterAllowed = true };
              return this._ShowResponsibilitiesReportCommand; 
            }
          }
          private global::System.Windows.Input.ICommand _ShowRespondingDocumentsCommand;  

          public global::System.Windows.Input.ICommand ShowRespondingDocumentsCommand 
          { 
            get
            { 
              if (this._ShowRespondingDocumentsCommand == null)
                this._ShowRespondingDocumentsCommand = new global::Sungero.Domain.Client.SingleEntityCommand<T>("ShowRespondingDocuments", this, this.ShowRespondingDocuments, this.CanShowRespondingDocuments) { IsEmptyParameterAllowed = true };
              return this._ShowRespondingDocumentsCommand; 
            }
          }



    #endregion

    #region Methods

        private bool CanShowResponsibilitiesReport(T entity)
        {
          var args = new global::Sungero.Domain.Client.WpfCanExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Collection, entity, this);
          return ((Sungero.Company.Client.EmployeeActions)(entity as Sungero.Company.Client.Employee).ActionsHandlers).CanShowResponsibilitiesReport(args);
        }

        private void ShowResponsibilitiesReport(T entity)
        {
          var args = new global::Sungero.Domain.Client.WpfExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Collection, entity, this, entity.Info.Actions.ShowResponsibilitiesReport);
          ((Sungero.Company.Client.EmployeeActions)(entity as Sungero.Company.Client.Employee).ActionsHandlers).ShowResponsibilitiesReport(args);
        }

        private bool CanShowRespondingDocuments(T entity)
        {
          var args = new global::Sungero.Domain.Client.WpfCanExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Collection, entity, this);
          return ((Sungero.Company.Client.EmployeeActions)(entity as Sungero.Company.Client.Employee).ActionsHandlers).CanShowRespondingDocuments(args);
        }

        private void ShowRespondingDocuments(T entity)
        {
          var args = new global::Sungero.Domain.Client.WpfExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Collection, entity, this, entity.Info.Actions.ShowRespondingDocuments);
          ((Sungero.Company.Client.EmployeeActions)(entity as Sungero.Company.Client.Employee).ActionsHandlers).ShowRespondingDocuments(args);
        }



    #endregion

    public EmployeeCollectionPresenter(global::System.Linq.IQueryable<T> query, OnLookup onLookup)
      : base(query, onLookup)
    {
    }

    public EmployeeCollectionPresenter(global::System.Linq.IQueryable<T> query)
      : this(query, null) { }

    public EmployeeCollectionPresenter(OnLookup onLookup)
      : this(null, onLookup) { }

    public EmployeeCollectionPresenter()
      : this(null, null) { }
  }
}

// ==================================================================
// EmployeeRepositoryImplementer.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Company.Client
{ 
  public class EmployeeRepositoryImplementer<T> : 
      global::Sungero.CoreEntities.Client.UserRepositoryImplementer<T>,
      global::Sungero.Company.IEmployeeRepositoryImplementer<T>
      where T : global::Sungero.Company.IEmployee
    {
       public new global::Sungero.Company.IEmployeeAccessRights AccessRights
       {
          get { return (global::Sungero.Company.IEmployeeAccessRights)base.AccessRights; }
       }

       public new global::Sungero.Company.IEmployeeInfo Info
       {
          get { return (global::Sungero.Company.IEmployeeInfo)base.Info; }
       }

       protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
       {
         return new global::Sungero.Company.Client.EmployeeTypeAccessRights(typeof(T));
       }
    }
}

// ==================================================================
// EmployeeAccessRights.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Company.Client
{
  public class EmployeeAccessRights : 
    Sungero.CoreEntities.Client.UserAccessRights, Sungero.Company.IEmployeeAccessRights
  {

    public EmployeeAccessRights(global::Sungero.Domain.Shared.IEntity entity) : base(entity)
    {
    }
  }

  public class EmployeeTypeAccessRights : 
    Sungero.CoreEntities.Client.UserTypeAccessRights, Sungero.Company.IEmployeeAccessRights
  {

    public EmployeeTypeAccessRights(global::System.Type entityType) : base(entityType)
    {
    }
  }
}
