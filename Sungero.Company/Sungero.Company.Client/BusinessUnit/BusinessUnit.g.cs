
// ==================================================================
// BusinessUnit.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Company.Client
{
  public class BusinessUnit :
    global::Sungero.CoreEntities.Client.Group, global::Sungero.Company.IBusinessUnit
  {
    #region Fields and properties

    public static new readonly global::System.Guid ClassTypeGuid = global::System.Guid.Parse("eff95720-181f-4f7d-892d-dec034c7b2ab");

    public override global::System.Guid TypeGuid
    {
      get { return global::Sungero.Company.Client.BusinessUnit.ClassTypeGuid; }
    }

    public override string TypeName
    {
      get { return "Sungero.Company.IBusinessUnit, Sungero.Domain.Interfaces"; }
    }

      public override string DisplayValue
      {
        get { return this.Name; }
        set { this.Name = value; }
      }

      public override string DisplayPropertyName
      {
        get { return "Name"; }
      }


    public new global::Sungero.Company.IBusinessUnitState State
    {
      get
      {
        return (global::Sungero.Company.IBusinessUnitState)base.State;
      }
    }

    protected override global::Sungero.Domain.Shared.IEntityState CreateState()
    {
      return new global::Sungero.Company.Shared.BusinessUnitState(this);
    }

    public new global::Sungero.Company.IBusinessUnitInfo Info
    {
      get
      {
        return (global::Sungero.Company.IBusinessUnitInfo)base.Info;
      }
    }

    public new global::Sungero.Company.IBusinessUnitAccessRights AccessRights
    {
      get
      {
        return (global::Sungero.Company.IBusinessUnitAccessRights)base.AccessRights;
      }
    }

    protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
    {
      return new global::Sungero.Company.Client.BusinessUnitAccessRights(this);
    }

        protected global::Sungero.Domain.Client.SimpleProperty<global::System.String> _TIN;

        public virtual global::System.String TIN
        {
          get { return this._TIN.Value; }
          set { this._TIN.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.String> _TRRC;

        public virtual global::System.String TRRC
        {
          get { return this._TRRC.Value; }
          set { this._TRRC.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.String> _Phones;

        public virtual global::System.String Phones
        {
          get { return this._Phones.Value; }
          set { this._Phones.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.String> _LegalName;

        public virtual global::System.String LegalName
        {
          get { return this._LegalName.Value; }
          set { this._LegalName.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.String> _LegalAddress;

        public virtual global::System.String LegalAddress
        {
          get { return this._LegalAddress.Value; }
          set { this._LegalAddress.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.String> _PostalAddress;

        public virtual global::System.String PostalAddress
        {
          get { return this._PostalAddress.Value; }
          set { this._PostalAddress.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.String> _Note;

        public virtual global::System.String Note
        {
          get { return this._Note.Value; }
          set { this._Note.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.String> _Email;

        public virtual global::System.String Email
        {
          get { return this._Email.Value; }
          set { this._Email.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.String> _Homepage;

        public virtual global::System.String Homepage
        {
          get { return this._Homepage.Value; }
          set { this._Homepage.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.String> _PSRN;

        public virtual global::System.String PSRN
        {
          get { return this._PSRN.Value; }
          set { this._PSRN.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.String> _NCEO;

        public virtual global::System.String NCEO
        {
          get { return this._NCEO.Value; }
          set { this._NCEO.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.String> _NCEA;

        public virtual global::System.String NCEA
        {
          get { return this._NCEA.Value; }
          set { this._NCEA.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.String> _Account;

        public virtual global::System.String Account
        {
          get { return this._Account.Value; }
          set { this._Account.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.String> _Code;

        public virtual global::System.String Code
        {
          get { return this._Code.Value; }
          set { this._Code.Value = value; }
        }




              protected global::Sungero.Domain.Client.INavigationProperty<global::Sungero.Commons.ICity> _City;

              public virtual global::Sungero.Commons.ICity City
              {
              get
              {
                return this._City.Value as global::Sungero.Commons.ICity;
              }

              set
              {
                (this._City as global::Sungero.Domain.Client.IProperty).Value = value;
              }
            }



              protected global::Sungero.Domain.Client.INavigationProperty<global::Sungero.Commons.IRegion> _Region;

              public virtual global::Sungero.Commons.IRegion Region
              {
              get
              {
                return this._Region.Value as global::Sungero.Commons.IRegion;
              }

              set
              {
                (this._Region as global::Sungero.Domain.Client.IProperty).Value = value;
              }
            }



              protected global::Sungero.Domain.Client.INavigationProperty<global::Sungero.Company.IBusinessUnit> _HeadCompany;

              public virtual global::Sungero.Company.IBusinessUnit HeadCompany
              {
              get
              {
                return this._HeadCompany.Value as global::Sungero.Company.IBusinessUnit;
              }

              set
              {
                (this._HeadCompany as global::Sungero.Domain.Client.IProperty).Value = value;
              }
            }



              protected global::Sungero.Domain.Client.INavigationProperty<global::Sungero.Parties.ICompany> _Company;

              public virtual global::Sungero.Parties.ICompany Company
              {
              get
              {
                return this._Company.Value as global::Sungero.Parties.ICompany;
              }

              set
              {
                (this._Company as global::Sungero.Domain.Client.IProperty).Value = value;
              }
            }



              protected global::Sungero.Domain.Client.INavigationProperty<global::Sungero.Company.IEmployee> _CEO;

              public virtual global::Sungero.Company.IEmployee CEO
              {
              get
              {
                return this._CEO.Value as global::Sungero.Company.IEmployee;
              }

              set
              {
                (this._CEO as global::Sungero.Domain.Client.IProperty).Value = value;
              }
            }



              protected global::Sungero.Domain.Client.INavigationProperty<global::Sungero.Parties.IBank> _Bank;

              public virtual global::Sungero.Parties.IBank Bank
              {
              get
              {
                return this._Bank.Value as global::Sungero.Parties.IBank;
              }

              set
              {
                (this._Bank as global::Sungero.Domain.Client.IProperty).Value = value;
              }
            }










    #endregion

    #region Methods

    protected override object CreateActionsHandlers()
    {
      return new global::Sungero.Company.Client.BusinessUnitActions(this);
    }

    protected override object CreateCollectionActionsHandlers()
    {
      return new global::Sungero.Company.Client.BusinessUnitCollectionActions();
    }

    protected override object CreateAnyChildEntityActionsHandlers()
    {
      return new global::Sungero.Company.Client.BusinessUnitAnyChildEntityActions();
    }

    protected override object CreateAnyChildEntityCollectionActionsHandlers()
    {
      return new global::Sungero.Company.Client.BusinessUnitAnyChildEntityCollectionActions();
    }


    protected override global::Sungero.Domain.Client.EntityFunctions CreateClientFunctions()
    {
      return new global::Sungero.Company.Client.BusinessUnitFunctions(this);
    }

    protected override global::Sungero.Domain.Shared.EntityFunctions CreateSharedFunctions()
    {
      return new global::Sungero.Company.Shared.BusinessUnitFunctions(this);
    }
    protected override object CreateHandlers() {
      return new global::Sungero.Company.BusinessUnitClientHandlers(this);
    }
    protected override object CreateSharedHandlers() {
      return new global::Sungero.Company.BusinessUnitSharedHandlers(this);
    }

    #endregion

    #region Framework events

    protected void TINChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.TIN, this.TIN, this);
     ((global::Sungero.Company.BusinessUnitSharedHandlers)this.SharedHandlers).TINChanged(args);
    }

    protected void TRRCChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.TRRC, this.TRRC, this);
     ((global::Sungero.Company.BusinessUnitSharedHandlers)this.SharedHandlers).TRRCChanged(args);
    }

    protected void CityChangedHandler()
    {
      var args = new global::Sungero.Company.Shared.BusinessUnitCityChangedEventArgs(this.State.Properties.City, this.City, this);
     ((global::Sungero.Company.BusinessUnitSharedHandlers)this.SharedHandlers).CityChanged(args);
    }

    protected void PhonesChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.Phones, this.Phones, this);
     ((global::Sungero.Company.BusinessUnitSharedHandlers)this.SharedHandlers).PhonesChanged(args);
    }

    protected void LegalNameChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.LegalName, this.LegalName, this);
     ((global::Sungero.Company.BusinessUnitSharedHandlers)this.SharedHandlers).LegalNameChanged(args);
    }

    protected void RegionChangedHandler()
    {
      var args = new global::Sungero.Company.Shared.BusinessUnitRegionChangedEventArgs(this.State.Properties.Region, this.Region, this);
     ((global::Sungero.Company.BusinessUnitSharedHandlers)this.SharedHandlers).RegionChanged(args);
    }

    protected void HeadCompanyChangedHandler()
    {
      var args = new global::Sungero.Company.Shared.BusinessUnitHeadCompanyChangedEventArgs(this.State.Properties.HeadCompany, this.HeadCompany, this);
     ((global::Sungero.Company.BusinessUnitSharedHandlers)this.SharedHandlers).HeadCompanyChanged(args);
    }

    protected void LegalAddressChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.LegalAddress, this.LegalAddress, this);
     ((global::Sungero.Company.BusinessUnitSharedHandlers)this.SharedHandlers).LegalAddressChanged(args);
    }

    protected void PostalAddressChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.PostalAddress, this.PostalAddress, this);
     ((global::Sungero.Company.BusinessUnitSharedHandlers)this.SharedHandlers).PostalAddressChanged(args);
    }

    protected void NoteChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.Note, this.Note, this);
     ((global::Sungero.Company.BusinessUnitSharedHandlers)this.SharedHandlers).NoteChanged(args);
    }

    protected void CompanyChangedHandler()
    {
      var args = new global::Sungero.Company.Shared.BusinessUnitCompanyChangedEventArgs(this.State.Properties.Company, this.Company, this);
     ((global::Sungero.Company.BusinessUnitSharedHandlers)this.SharedHandlers).CompanyChanged(args);
    }

    protected void CEOChangedHandler()
    {
      var args = new global::Sungero.Company.Shared.BusinessUnitCEOChangedEventArgs(this.State.Properties.CEO, this.CEO, this);
     ((global::Sungero.Company.BusinessUnitSharedHandlers)this.SharedHandlers).CEOChanged(args);
    }

    protected void EmailChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.Email, this.Email, this);
     ((global::Sungero.Company.BusinessUnitSharedHandlers)this.SharedHandlers).EmailChanged(args);
    }

    protected void HomepageChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.Homepage, this.Homepage, this);
     ((global::Sungero.Company.BusinessUnitSharedHandlers)this.SharedHandlers).HomepageChanged(args);
    }

    protected void PSRNChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.PSRN, this.PSRN, this);
     ((global::Sungero.Company.BusinessUnitSharedHandlers)this.SharedHandlers).PSRNChanged(args);
    }

    protected void NCEOChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.NCEO, this.NCEO, this);
     ((global::Sungero.Company.BusinessUnitSharedHandlers)this.SharedHandlers).NCEOChanged(args);
    }

    protected void NCEAChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.NCEA, this.NCEA, this);
     ((global::Sungero.Company.BusinessUnitSharedHandlers)this.SharedHandlers).NCEAChanged(args);
    }

    protected void AccountChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.Account, this.Account, this);
     ((global::Sungero.Company.BusinessUnitSharedHandlers)this.SharedHandlers).AccountChanged(args);
    }

    protected void BankChangedHandler()
    {
      var args = new global::Sungero.Company.Shared.BusinessUnitBankChangedEventArgs(this.State.Properties.Bank, this.Bank, this);
     ((global::Sungero.Company.BusinessUnitSharedHandlers)this.SharedHandlers).BankChanged(args);
    }


    protected void CodeChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.Code, this.Code, this);
     ((global::Sungero.Company.BusinessUnitSharedHandlers)this.SharedHandlers).CodeChanged(args);
    }




  protected global::System.String TINValueInputHandler(global::System.String value)
  {
    var args = new global::Sungero.Presentation.StringValueInputEventArgs(this.TIN, value, this, this.Info.Properties.TIN);
    ((global::Sungero.Company.BusinessUnitClientHandlers)this.Handlers).TINValueInput(args);
    return args.NewValue;
  }

  protected global::System.String TRRCValueInputHandler(global::System.String value)
  {
    var args = new global::Sungero.Presentation.StringValueInputEventArgs(this.TRRC, value, this, this.Info.Properties.TRRC);
    ((global::Sungero.Company.BusinessUnitClientHandlers)this.Handlers).TRRCValueInput(args);
    return args.NewValue;
  }

  protected global::Sungero.Commons.ICity CityValueInputHandler(global::Sungero.Commons.ICity value)
  {
    var args = new global::Sungero.Company.Client.BusinessUnitCityValueInputEventArgs(this.City, value, this, this.Info.Properties.City);
    ((global::Sungero.Company.BusinessUnitClientHandlers)this.Handlers).CityValueInput(args);
    return args.NewValue;
  }

  protected global::System.String PhonesValueInputHandler(global::System.String value)
  {
    var args = new global::Sungero.Presentation.StringValueInputEventArgs(this.Phones, value, this, this.Info.Properties.Phones);
    ((global::Sungero.Company.BusinessUnitClientHandlers)this.Handlers).PhonesValueInput(args);
    return args.NewValue;
  }

  protected global::System.String LegalNameValueInputHandler(global::System.String value)
  {
    var args = new global::Sungero.Presentation.StringValueInputEventArgs(this.LegalName, value, this, this.Info.Properties.LegalName);
    ((global::Sungero.Company.BusinessUnitClientHandlers)this.Handlers).LegalNameValueInput(args);
    return args.NewValue;
  }

  protected global::Sungero.Commons.IRegion RegionValueInputHandler(global::Sungero.Commons.IRegion value)
  {
    var args = new global::Sungero.Company.Client.BusinessUnitRegionValueInputEventArgs(this.Region, value, this, this.Info.Properties.Region);
    ((global::Sungero.Company.BusinessUnitClientHandlers)this.Handlers).RegionValueInput(args);
    return args.NewValue;
  }

  protected global::Sungero.Company.IBusinessUnit HeadCompanyValueInputHandler(global::Sungero.Company.IBusinessUnit value)
  {
    var args = new global::Sungero.Company.Client.BusinessUnitHeadCompanyValueInputEventArgs(this.HeadCompany, value, this, this.Info.Properties.HeadCompany);
    ((global::Sungero.Company.BusinessUnitClientHandlers)this.Handlers).HeadCompanyValueInput(args);
    return args.NewValue;
  }

  protected global::System.String LegalAddressValueInputHandler(global::System.String value)
  {
    var args = new global::Sungero.Presentation.StringValueInputEventArgs(this.LegalAddress, value, this, this.Info.Properties.LegalAddress);
    ((global::Sungero.Company.BusinessUnitClientHandlers)this.Handlers).LegalAddressValueInput(args);
    return args.NewValue;
  }

  protected global::System.String PostalAddressValueInputHandler(global::System.String value)
  {
    var args = new global::Sungero.Presentation.StringValueInputEventArgs(this.PostalAddress, value, this, this.Info.Properties.PostalAddress);
    ((global::Sungero.Company.BusinessUnitClientHandlers)this.Handlers).PostalAddressValueInput(args);
    return args.NewValue;
  }

  protected global::System.String NoteValueInputHandler(global::System.String value)
  {
    var args = new global::Sungero.Presentation.StringValueInputEventArgs(this.Note, value, this, this.Info.Properties.Note);
    ((global::Sungero.Company.BusinessUnitClientHandlers)this.Handlers).NoteValueInput(args);
    return args.NewValue;
  }

  protected global::Sungero.Parties.ICompany CompanyValueInputHandler(global::Sungero.Parties.ICompany value)
  {
    var args = new global::Sungero.Company.Client.BusinessUnitCompanyValueInputEventArgs(this.Company, value, this, this.Info.Properties.Company);
    ((global::Sungero.Company.BusinessUnitClientHandlers)this.Handlers).CompanyValueInput(args);
    return args.NewValue;
  }

  protected global::Sungero.Company.IEmployee CEOValueInputHandler(global::Sungero.Company.IEmployee value)
  {
    var args = new global::Sungero.Company.Client.BusinessUnitCEOValueInputEventArgs(this.CEO, value, this, this.Info.Properties.CEO);
    ((global::Sungero.Company.BusinessUnitClientHandlers)this.Handlers).CEOValueInput(args);
    return args.NewValue;
  }

  protected global::System.String EmailValueInputHandler(global::System.String value)
  {
    var args = new global::Sungero.Presentation.StringValueInputEventArgs(this.Email, value, this, this.Info.Properties.Email);
    ((global::Sungero.Company.BusinessUnitClientHandlers)this.Handlers).EmailValueInput(args);
    return args.NewValue;
  }

  protected global::System.String HomepageValueInputHandler(global::System.String value)
  {
    var args = new global::Sungero.Presentation.StringValueInputEventArgs(this.Homepage, value, this, this.Info.Properties.Homepage);
    ((global::Sungero.Company.BusinessUnitClientHandlers)this.Handlers).HomepageValueInput(args);
    return args.NewValue;
  }

  protected global::System.String PSRNValueInputHandler(global::System.String value)
  {
    var args = new global::Sungero.Presentation.StringValueInputEventArgs(this.PSRN, value, this, this.Info.Properties.PSRN);
    ((global::Sungero.Company.BusinessUnitClientHandlers)this.Handlers).PSRNValueInput(args);
    return args.NewValue;
  }

  protected global::System.String NCEOValueInputHandler(global::System.String value)
  {
    var args = new global::Sungero.Presentation.StringValueInputEventArgs(this.NCEO, value, this, this.Info.Properties.NCEO);
    ((global::Sungero.Company.BusinessUnitClientHandlers)this.Handlers).NCEOValueInput(args);
    return args.NewValue;
  }

  protected global::System.String NCEAValueInputHandler(global::System.String value)
  {
    var args = new global::Sungero.Presentation.StringValueInputEventArgs(this.NCEA, value, this, this.Info.Properties.NCEA);
    ((global::Sungero.Company.BusinessUnitClientHandlers)this.Handlers).NCEAValueInput(args);
    return args.NewValue;
  }

  protected global::System.String AccountValueInputHandler(global::System.String value)
  {
    var args = new global::Sungero.Presentation.StringValueInputEventArgs(this.Account, value, this, this.Info.Properties.Account);
    ((global::Sungero.Company.BusinessUnitClientHandlers)this.Handlers).AccountValueInput(args);
    return args.NewValue;
  }

  protected global::Sungero.Parties.IBank BankValueInputHandler(global::Sungero.Parties.IBank value)
  {
    var args = new global::Sungero.Company.Client.BusinessUnitBankValueInputEventArgs(this.Bank, value, this, this.Info.Properties.Bank);
    ((global::Sungero.Company.BusinessUnitClientHandlers)this.Handlers).BankValueInput(args);
    return args.NewValue;
  }


  protected global::System.String CodeValueInputHandler(global::System.String value)
  {
    var args = new global::Sungero.Presentation.StringValueInputEventArgs(this.Code, value, this, this.Info.Properties.Code);
    ((global::Sungero.Company.BusinessUnitClientHandlers)this.Handlers).CodeValueInput(args);
    return args.NewValue;
  }



    #endregion

    #region Constructors




              protected virtual void InitCityNavigationProperty()
              {
                this._City = new global::Sungero.Domain.Client.NavigationProperty<global::Sungero.Commons.ICity>("City", this);
                this._City.ValueChanged += (sender, e) => { this.CityChangedHandler(); };
                this.AddProperty(this._City as global::Sungero.Domain.Client.IProperty);
              }




              protected virtual void InitRegionNavigationProperty()
              {
                this._Region = new global::Sungero.Domain.Client.NavigationProperty<global::Sungero.Commons.IRegion>("Region", this);
                this._Region.ValueChanged += (sender, e) => { this.RegionChangedHandler(); };
                this.AddProperty(this._Region as global::Sungero.Domain.Client.IProperty);
              }




              protected virtual void InitHeadCompanyNavigationProperty()
              {
                this._HeadCompany = new global::Sungero.Domain.Client.NavigationProperty<global::Sungero.Company.IBusinessUnit>("HeadCompany", this);
                this._HeadCompany.ValueChanged += (sender, e) => { this.HeadCompanyChangedHandler(); };
                this.AddProperty(this._HeadCompany as global::Sungero.Domain.Client.IProperty);
              }




              protected virtual void InitCompanyNavigationProperty()
              {
                this._Company = new global::Sungero.Domain.Client.NavigationProperty<global::Sungero.Parties.ICompany>("Company", this);
                this._Company.ValueChanged += (sender, e) => { this.CompanyChangedHandler(); };
                this.AddProperty(this._Company as global::Sungero.Domain.Client.IProperty);
              }




              protected virtual void InitCEONavigationProperty()
              {
                this._CEO = new global::Sungero.Domain.Client.NavigationProperty<global::Sungero.Company.IEmployee>("CEO", this);
                this._CEO.ValueChanged += (sender, e) => { this.CEOChangedHandler(); };
                this.AddProperty(this._CEO as global::Sungero.Domain.Client.IProperty);
              }




              protected virtual void InitBankNavigationProperty()
              {
                this._Bank = new global::Sungero.Domain.Client.NavigationProperty<global::Sungero.Parties.IBank>("Bank", this);
                this._Bank.ValueChanged += (sender, e) => { this.BankChangedHandler(); };
                this.AddProperty(this._Bank as global::Sungero.Domain.Client.IProperty);
              }



            protected override void InitRecipientLinksCollectionProperty()
            {
              this._RecipientLinks = new global::Sungero.Domain.Client.ListProperty<global::Sungero.Company.IBusinessUnitRecipientLinks>("RecipientLinks", this);
              this._RecipientLinks.ValueChanged += (sender, e) => { this.RecipientLinksChangedHandler(); };
              this.AddProperty((global::Sungero.Domain.Client.IProperty)this._RecipientLinks);
              this.SetRecipientLinksEventHandlers();
            }


    public BusinessUnit()
    {
            this._TIN = new global::Sungero.Domain.Client.SimpleProperty<global::System.String>("TIN", this);
            this._TIN.ValueChanged += (sender, e) => { this.TINChangedHandler(); };
            this.AddProperty(this._TIN);

            this._TRRC = new global::Sungero.Domain.Client.SimpleProperty<global::System.String>("TRRC", this);
            this._TRRC.ValueChanged += (sender, e) => { this.TRRCChangedHandler(); };
            this.AddProperty(this._TRRC);

            this._Phones = new global::Sungero.Domain.Client.SimpleProperty<global::System.String>("Phones", this);
            this._Phones.ValueChanged += (sender, e) => { this.PhonesChangedHandler(); };
            this.AddProperty(this._Phones);

            this._LegalName = new global::Sungero.Domain.Client.SimpleProperty<global::System.String>("LegalName", this);
            this._LegalName.ValueChanged += (sender, e) => { this.LegalNameChangedHandler(); };
            this.AddProperty(this._LegalName);

            this._LegalAddress = new global::Sungero.Domain.Client.SimpleProperty<global::System.String>("LegalAddress", this);
            this._LegalAddress.ValueChanged += (sender, e) => { this.LegalAddressChangedHandler(); };
            this.AddProperty(this._LegalAddress);

            this._PostalAddress = new global::Sungero.Domain.Client.SimpleProperty<global::System.String>("PostalAddress", this);
            this._PostalAddress.ValueChanged += (sender, e) => { this.PostalAddressChangedHandler(); };
            this.AddProperty(this._PostalAddress);

            this._Note = new global::Sungero.Domain.Client.SimpleProperty<global::System.String>("Note", this);
            this._Note.ValueChanged += (sender, e) => { this.NoteChangedHandler(); };
            this.AddProperty(this._Note);

            this._Email = new global::Sungero.Domain.Client.SimpleProperty<global::System.String>("Email", this);
            this._Email.ValueChanged += (sender, e) => { this.EmailChangedHandler(); };
            this.AddProperty(this._Email);

            this._Homepage = new global::Sungero.Domain.Client.SimpleProperty<global::System.String>("Homepage", this);
            this._Homepage.ValueChanged += (sender, e) => { this.HomepageChangedHandler(); };
            this.AddProperty(this._Homepage);

            this._PSRN = new global::Sungero.Domain.Client.SimpleProperty<global::System.String>("PSRN", this);
            this._PSRN.ValueChanged += (sender, e) => { this.PSRNChangedHandler(); };
            this.AddProperty(this._PSRN);

            this._NCEO = new global::Sungero.Domain.Client.SimpleProperty<global::System.String>("NCEO", this);
            this._NCEO.ValueChanged += (sender, e) => { this.NCEOChangedHandler(); };
            this.AddProperty(this._NCEO);

            this._NCEA = new global::Sungero.Domain.Client.SimpleProperty<global::System.String>("NCEA", this);
            this._NCEA.ValueChanged += (sender, e) => { this.NCEAChangedHandler(); };
            this.AddProperty(this._NCEA);

            this._Account = new global::Sungero.Domain.Client.SimpleProperty<global::System.String>("Account", this);
            this._Account.ValueChanged += (sender, e) => { this.AccountChangedHandler(); };
            this.AddProperty(this._Account);

            this._Code = new global::Sungero.Domain.Client.SimpleProperty<global::System.String>("Code", this);
            this._Code.ValueChanged += (sender, e) => { this.CodeChangedHandler(); };
            this.AddProperty(this._Code);

            this.InitCityNavigationProperty();

            this.InitRegionNavigationProperty();

            this.InitHeadCompanyNavigationProperty();

            this.InitCompanyNavigationProperty();

            this.InitCEONavigationProperty();

            this.InitBankNavigationProperty();








    }

    #endregion

  }
}

// ==================================================================
// BusinessUnitPresenter.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Company.Client
{
  public class BusinessUnitPresenter<T> :
    global::Sungero.CoreEntities.Client.GroupPresenter<T>
    where T : class, global::Sungero.Company.IBusinessUnit
  {
    #region Fields and properties

          private global::System.Windows.Input.ICommand _ShowDuplicatesCommand;

          public global::System.Windows.Input.ICommand ShowDuplicatesCommand
          {
            get
            {
              if (this._ShowDuplicatesCommand == null)
                  this._ShowDuplicatesCommand = new global::Sungero.Domain.Client.SingleEntityCommand<T>("ShowDuplicates", this, this.ShowDuplicates, this.CanShowDuplicates) { IsEmptyParameterAllowed = true };
              return this._ShowDuplicatesCommand;
            }
          }




    #endregion

    #region Methods

              private bool CanShowDuplicates(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfCanExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this);
                return ((Sungero.Company.Client.BusinessUnitActions)(entity as Sungero.Company.Client.BusinessUnit).ActionsHandlers).CanShowDuplicates(args);
              }

              private void ShowDuplicates(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this, entity.Info.Actions.ShowDuplicates);
                ((Sungero.Company.Client.BusinessUnitActions)(entity as Sungero.Company.Client.BusinessUnit).ActionsHandlers).ShowDuplicates(args);
              }


    #endregion

    #region Framework events

    protected override void EntityPropertyChangedEventHandler(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
    {
      base.EntityPropertyChangedEventHandler(sender, e);
    }

    #endregion

              protected global::Sungero.Domain.Client.IEntityCollectionPresenter _CityCollectionPresenter;
              public global::Sungero.Domain.Client.IEntityCollectionPresenter CityCollectionPresenter
              {
          get { return this._CityCollectionPresenter; }
        }
              protected global::Sungero.Domain.Client.IEntityCollectionPresenter _RegionCollectionPresenter;
              public global::Sungero.Domain.Client.IEntityCollectionPresenter RegionCollectionPresenter
              {
          get { return this._RegionCollectionPresenter; }
        }
              protected global::Sungero.Domain.Client.IEntityCollectionPresenter _HeadCompanyCollectionPresenter;
              public global::Sungero.Domain.Client.IEntityCollectionPresenter HeadCompanyCollectionPresenter
              {
          get { return this._HeadCompanyCollectionPresenter; }
        }
              protected global::Sungero.Domain.Client.IEntityCollectionPresenter _CompanyCollectionPresenter;
              public global::Sungero.Domain.Client.IEntityCollectionPresenter CompanyCollectionPresenter
              {
          get { return this._CompanyCollectionPresenter; }
        }
              protected global::Sungero.Domain.Client.IEntityCollectionPresenter _CEOCollectionPresenter;
              public global::Sungero.Domain.Client.IEntityCollectionPresenter CEOCollectionPresenter
              {
          get { return this._CEOCollectionPresenter; }
        }
              protected global::Sungero.Domain.Client.IEntityCollectionPresenter _BankCollectionPresenter;
              public global::Sungero.Domain.Client.IEntityCollectionPresenter BankCollectionPresenter
              {
          get { return this._BankCollectionPresenter; }
        }



    #region Constructors

    private void Init()
    {
              this._ParentCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationProperty<global::Sungero.CoreEntities.IGroup>(() => this.Entity, typeof(T), "Parent");

                  this._CityCollectionPresenter = this.CreateCollectionPresenterForNavigationProperty<global::Sungero.Commons.ICity>(global::System.Guid.Parse("fe38b9bd-4a44-4fc3-abf7-70d39c5e399f"));
              this._CityCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Commons.ICity>(() => this.Entity.Id, typeof(T), "City");

                  this._RegionCollectionPresenter = this.CreateCollectionPresenterForNavigationProperty<global::Sungero.Commons.IRegion>(global::System.Guid.Parse("fe1bd197-07e1-43fa-b1a9-315c52595d82"));
              this._RegionCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Commons.IRegion>(() => this.Entity.Id, typeof(T), "Region");

                  this._HeadCompanyCollectionPresenter = this.CreateCollectionPresenterForNavigationProperty<global::Sungero.Company.IBusinessUnit>(global::System.Guid.Parse("99856dc4-6a5b-4eea-babc-88647fad71bf"));
              this._HeadCompanyCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationProperty<global::Sungero.Company.IBusinessUnit>(() => this.Entity, typeof(T), "HeadCompany");

                  this._CompanyCollectionPresenter = this.CreateCollectionPresenterForNavigationProperty<global::Sungero.Parties.ICompany>(global::System.Guid.Parse("03793bd2-4575-4523-b538-30cd52dca2f6"));
              this._CompanyCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Parties.ICompany>(() => this.Entity.Id, typeof(T), "Company");

                  this._CEOCollectionPresenter = this.CreateCollectionPresenterForNavigationProperty<global::Sungero.Company.IEmployee>(global::System.Guid.Parse("23613ab9-c3d8-4847-a708-588a51e0b1b9"));
              this._CEOCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Company.IEmployee>(() => this.Entity.Id, typeof(T), "CEO");

                  this._BankCollectionPresenter = this.CreateCollectionPresenterForNavigationProperty<global::Sungero.Parties.IBank>(global::System.Guid.Parse("95e37f84-b851-4728-ad77-c78c50f39439"));
              this._BankCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Parties.IBank>(() => this.Entity.Id, typeof(T), "Bank");


                        this._RecipientLinksMemberCollectionPresenter
                        .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.CoreEntities.IRecipient>(() => this.Entity.Id, typeof(Sungero.Company.IBusinessUnitRecipientLinks), "Member");



    }

    public BusinessUnitPresenter()
    {
      this.Init();
    }

    #endregion
  }
}

// ==================================================================
// BusinessUnitCollectionPresenter.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Company.Client
{
  public class BusinessUnitCollectionPresenter<T> : 
    global::Sungero.CoreEntities.Client.GroupCollectionPresenter<T>
    where T: class, global::Sungero.Company.IBusinessUnit
  {
    #region Actions



    #endregion

    #region Methods


    #endregion

    public BusinessUnitCollectionPresenter(global::System.Linq.IQueryable<T> query, OnLookup onLookup)
      : base(query, onLookup)
    {
    }

    public BusinessUnitCollectionPresenter(global::System.Linq.IQueryable<T> query)
      : this(query, null) { }

    public BusinessUnitCollectionPresenter(OnLookup onLookup)
      : this(null, onLookup) { }

    public BusinessUnitCollectionPresenter()
      : this(null, null) { }
  }
}

// ==================================================================
// BusinessUnitRepositoryImplementer.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Company.Client
{ 
  public class BusinessUnitRepositoryImplementer<T> : 
      global::Sungero.CoreEntities.Client.GroupRepositoryImplementer<T>,
      global::Sungero.Company.IBusinessUnitRepositoryImplementer<T>
      where T : global::Sungero.Company.IBusinessUnit
    {
       public new global::Sungero.Company.IBusinessUnitAccessRights AccessRights
       {
          get { return (global::Sungero.Company.IBusinessUnitAccessRights)base.AccessRights; }
       }

       public new global::Sungero.Company.IBusinessUnitInfo Info
       {
          get { return (global::Sungero.Company.IBusinessUnitInfo)base.Info; }
       }

       protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
       {
         return new global::Sungero.Company.Client.BusinessUnitTypeAccessRights(typeof(T));
       }
    }
}

// ==================================================================
// BusinessUnitAccessRights.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Company.Client
{
  public class BusinessUnitAccessRights : 
    Sungero.CoreEntities.Client.GroupAccessRights, Sungero.Company.IBusinessUnitAccessRights
  {

    public BusinessUnitAccessRights(global::Sungero.Domain.Shared.IEntity entity) : base(entity)
    {
    }
  }

  public class BusinessUnitTypeAccessRights : 
    Sungero.CoreEntities.Client.GroupTypeAccessRights, Sungero.Company.IBusinessUnitAccessRights
  {

    public BusinessUnitTypeAccessRights(global::System.Type entityType) : base(entityType)
    {
    }
  }
}
