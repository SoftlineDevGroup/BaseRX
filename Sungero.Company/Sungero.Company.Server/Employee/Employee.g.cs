
// ==================================================================
// Employee.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Company.Server
{
    public class EmployeeFilter<T> :
      global::Sungero.CoreEntities.Server.UserFilter<T>
      where T : class, global::Sungero.Company.IEmployee
    {
      protected new global::Sungero.Company.IEmployeeFilterState Filter { get; private set; }

      private global::Sungero.Company.IEmployeeFilterState filter
      {
        get
        {
          return this.Filter;
        }
      }

      protected override global::System.Linq.IQueryable<T> ApplyAppliedFilter(global::System.Linq.IQueryable<T> query)
      {
        var args = new global::Sungero.Domain.FilteringEventArgs();
        var result = new global::Sungero.Company.EmployeeFilteringServerHandler<T>(this.filter).Filtering(query, args);
        if (args.DisableCheckRights)
    	  global::Sungero.Domain.Security.FilteringAccessRightsOptions.DisableCheckRights<T>();
        return result;
      }

      public EmployeeFilter(global::Sungero.Company.IEmployeeFilterState filter)
      : base()
      {
        this.Filter = filter;
      }

      protected EmployeeFilter()
      {
      }
    }
      public class EmployeeUiFilter<T> :
        global::Sungero.Domain.EntityUiFilterBase<T>
        where T : class, global::Sungero.Company.IEmployee
      {
        protected override global::System.Linq.IQueryable<T> ApplyAppliedFilter(global::System.Linq.IQueryable<T> query)
        {
          var args = new global::Sungero.Domain.UiFilteringEventArgs();
          var result = new global::Sungero.Company.EmployeeUiFilteringServerHandler<T>().Filtering(query, args);
          return result;
        }
      }

    public class EmployeeSearchDialogModel : global::Sungero.CoreEntities.Server.UserSearchDialogModel
        {
                  public override global::System.Boolean? IsSystem { get; protected set; }
                  public override global::System.String PersonalPhotoHash { get; protected set; }
                  public override global::System.Int32? Id { get; protected set; }
                  public override global::System.String Name { get; protected set; }


                  public override global::System.Collections.Generic.IEnumerable<Sungero.CoreEntities.ILogin> Login { get; protected set; }


                  public virtual global::System.String Phone { get; protected set; }
                  public virtual global::System.String Note { get; protected set; }
                  public virtual global::System.String Email { get; protected set; }


                  public virtual global::System.Collections.Generic.IEnumerable<Sungero.Core.Enumeration> Status { get; protected set; }
                  public virtual global::System.Collections.Generic.IEnumerable<Sungero.Company.IDepartment> Department { get; protected set; }
                  public virtual global::System.Collections.Generic.IEnumerable<Sungero.Company.IJobTitle> JobTitle { get; protected set; }


        }




  public class EmployeeFilterForPerson<TQueryEntity, TSourceEntity>
    : global::Sungero.Domain.EntityPropertyFilterBase<TQueryEntity, TSourceEntity>
    where TQueryEntity : class, global::Sungero.Parties.IPerson
    where TSourceEntity : class, global::Sungero.Company.IEmployee
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, TSourceEntity sourceEntity)
    {
      var args = new global::Sungero.Domain.PropertyFilteringEventArgs(sourceEntity);
      var result = new global::Sungero.Company.EmployeePersonPropertyFilteringServerHandler<TQueryEntity>(sourceEntity).PersonFiltering(query, args);
      if (args.DisableUiFiltering)
        global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public EmployeeFilterForPerson(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class EmployeeSearchFilterForPerson<TQueryEntity>
    : global::Sungero.Domain.SearchDialogPropertyFilter<TQueryEntity>
    where TQueryEntity : class, global::Sungero.Parties.IPerson
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, System.Guid entityType)
    {
      var args = new global::Sungero.Domain.PropertySearchDialogFilteringEventArgs(entityType);
      var result = new global::Sungero.Company.EmployeePersonSearchPropertyFilteringServerHandler<TQueryEntity>().PersonSearchDialogFiltering(query, args);
      if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public EmployeeSearchFilterForPerson(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class EmployeeFilterForDepartment<TQueryEntity, TSourceEntity>
    : global::Sungero.Domain.EntityPropertyFilterBase<TQueryEntity, TSourceEntity>
    where TQueryEntity : class, global::Sungero.Company.IDepartment
    where TSourceEntity : class, global::Sungero.Company.IEmployee
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, TSourceEntity sourceEntity)
    {
      var args = new global::Sungero.Domain.PropertyFilteringEventArgs(sourceEntity);
      var result = new global::Sungero.Company.EmployeeDepartmentPropertyFilteringServerHandler<TQueryEntity>(sourceEntity).DepartmentFiltering(query, args);
      if (args.DisableUiFiltering)
        global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public EmployeeFilterForDepartment(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class EmployeeSearchFilterForDepartment<TQueryEntity>
    : global::Sungero.Domain.SearchDialogPropertyFilter<TQueryEntity>
    where TQueryEntity : class, global::Sungero.Company.IDepartment
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, System.Guid entityType)
    {
      var args = new global::Sungero.Domain.PropertySearchDialogFilteringEventArgs(entityType);
      var result = new global::Sungero.Company.EmployeeDepartmentSearchPropertyFilteringServerHandler<TQueryEntity>().DepartmentSearchDialogFiltering(query, args);
      if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public EmployeeSearchFilterForDepartment(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class EmployeeFilterForJobTitle<TQueryEntity, TSourceEntity>
    : global::Sungero.Domain.EntityPropertyFilterBase<TQueryEntity, TSourceEntity>
    where TQueryEntity : class, global::Sungero.Company.IJobTitle
    where TSourceEntity : class, global::Sungero.Company.IEmployee
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, TSourceEntity sourceEntity)
    {
      var args = new global::Sungero.Domain.PropertyFilteringEventArgs(sourceEntity);
      var result = new global::Sungero.Company.EmployeeJobTitlePropertyFilteringServerHandler<TQueryEntity>(sourceEntity).JobTitleFiltering(query, args);
      if (args.DisableUiFiltering)
        global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public EmployeeFilterForJobTitle(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class EmployeeSearchFilterForJobTitle<TQueryEntity>
    : global::Sungero.Domain.SearchDialogPropertyFilter<TQueryEntity>
    where TQueryEntity : class, global::Sungero.Company.IJobTitle
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, System.Guid entityType)
    {
      var args = new global::Sungero.Domain.PropertySearchDialogFilteringEventArgs(entityType);
      var result = new global::Sungero.Company.EmployeeJobTitleSearchPropertyFilteringServerHandler<TQueryEntity>().JobTitleSearchDialogFiltering(query, args);
      if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public EmployeeSearchFilterForJobTitle(string propertyName)
      : base(propertyName)
    {
    }
  }



  [global::Sungero.Domain.Filter(typeof(global::Sungero.Company.Server.EmployeeFilter<global::Sungero.Company.IEmployee>))]
  [global::Sungero.Domain.UiFilter(typeof(global::Sungero.Company.Server.EmployeeUiFilter<global::Sungero.Company.IEmployee>))]
  [global::Sungero.Domain.PropertyFilter(typeof(global::Sungero.Company.Server.EmployeeFilterForPerson<global::Sungero.Parties.IPerson, global::Sungero.Company.IEmployee>), "Person")]
  [global::Sungero.Domain.SearchPropertyFilter(typeof(global::Sungero.Company.Server.EmployeeSearchFilterForPerson<global::Sungero.Parties.IPerson>), "Person")]
  [global::Sungero.Domain.PropertyFilter(typeof(global::Sungero.Company.Server.EmployeeFilterForDepartment<global::Sungero.Company.IDepartment, global::Sungero.Company.IEmployee>), "Department")]
  [global::Sungero.Domain.SearchPropertyFilter(typeof(global::Sungero.Company.Server.EmployeeSearchFilterForDepartment<global::Sungero.Company.IDepartment>), "Department")]
  [global::Sungero.Domain.PropertyFilter(typeof(global::Sungero.Company.Server.EmployeeFilterForJobTitle<global::Sungero.Company.IJobTitle, global::Sungero.Company.IEmployee>), "JobTitle")]
  [global::Sungero.Domain.SearchPropertyFilter(typeof(global::Sungero.Company.Server.EmployeeSearchFilterForJobTitle<global::Sungero.Company.IJobTitle>), "JobTitle")]


  public class Employee :
    global::Sungero.CoreEntities.Server.User, global::Sungero.Company.IEmployee
  {
    public static new readonly global::System.Guid ClassTypeGuid = global::System.Guid.Parse("b7905516-2be5-4931-961c-cb38d5677565");

    public override global::System.Guid TypeGuid
    {
      get { return global::Sungero.Company.Server.Employee.ClassTypeGuid; }
    }

    public override string TypeName
    {
      get { return "Sungero.Company.IEmployee, Sungero.Domain.Interfaces"; }
    }

    public override string DisplayValue
    {
      get { return this.Name; }
      set { this.Name = value; }
    }

    public new virtual global::Sungero.Company.IEmployeeState State
    {
      get { return (global::Sungero.Company.IEmployeeState)base.State; }
    }

    protected override global::Sungero.Domain.Shared.IEntityState CreateState()
    {
      return new global::Sungero.Company.Shared.EmployeeState(this);
    }

    public new virtual global::Sungero.Company.IEmployeeInfo Info
    {
      get { return (global::Sungero.Company.IEmployeeInfo)base.Info; }
    }

    public new virtual global::Sungero.Company.IEmployeeAccessRights AccessRights
    {
      get { return (global::Sungero.Company.IEmployeeAccessRights)base.AccessRights; }
    }

    protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
    {
      return new global::Sungero.Company.Server.EmployeeAccessRights(this);
    }

    protected override global::Sungero.Domain.EntityFunctions CreateServerFunctions()
    {
      return new global::Sungero.Company.Server.EmployeeFunctions(this);
    }

    protected override global::Sungero.Domain.Shared.EntityFunctions CreateSharedFunctions()
    {
      return new global::Sungero.Company.Shared.EmployeeFunctions(this);
    }

    protected override object CreateHandlers() {
      return new global::Sungero.Company.EmployeeServerHandlers(this);
    }

    protected override object CreateSharedHandlers() {
      return new global::Sungero.Company.EmployeeSharedHandlers(this);
    }

    private global::System.String _Phone;
    public virtual global::System.String Phone
    {
      get
      {
        return this._Phone;
      }

      set
      {
        this.SetPropertyValue("Phone", this._Phone, value, (propertyValue) => { this._Phone = propertyValue; }, this.PhoneChangedHandler);
      }
    }
    private global::System.String _Note;
    public virtual global::System.String Note
    {
      get
      {
        return this._Note;
      }

      set
      {
        this.SetPropertyValue("Note", this._Note, value, (propertyValue) => { this._Note = propertyValue; }, this.NoteChangedHandler);
      }
    }
    private global::System.String _Email;
    public virtual global::System.String Email
    {
      get
      {
        return this._Email;
      }

      set
      {
        this.SetPropertyValue("Email", this._Email, value, (propertyValue) => { this._Email = propertyValue; }, this.EmailChangedHandler);
      }
    }
    private global::System.Boolean? _NeedNotifyExpiredAssignments;
    public virtual global::System.Boolean? NeedNotifyExpiredAssignments
    {
      get
      {
        return this._NeedNotifyExpiredAssignments;
      }

      set
      {
        this.SetPropertyValue("NeedNotifyExpiredAssignments", this._NeedNotifyExpiredAssignments, value, (propertyValue) => { this._NeedNotifyExpiredAssignments = propertyValue; }, this.NeedNotifyExpiredAssignmentsChangedHandler);
      }
    }
    private global::System.Boolean? _NeedNotifyNewAssignments;
    public virtual global::System.Boolean? NeedNotifyNewAssignments
    {
      get
      {
        return this._NeedNotifyNewAssignments;
      }

      set
      {
        this.SetPropertyValue("NeedNotifyNewAssignments", this._NeedNotifyNewAssignments, value, (propertyValue) => { this._NeedNotifyNewAssignments = propertyValue; }, this.NeedNotifyNewAssignmentsChangedHandler);
      }
    }







    private global::Sungero.Parties.IPerson _Person;
    public virtual global::Sungero.Parties.IPerson Person
    {
      get
      {
        return this._Person;
      }

      set
      {
        this.SetPropertyValue("Person", this._Person, value, (propertyValue) => { this._Person = propertyValue; }, this.PersonChangedHandler);
      }
    }
    private global::Sungero.Company.IDepartment _Department;
    public virtual global::Sungero.Company.IDepartment Department
    {
      get
      {
        return this._Department;
      }

      set
      {
        this.SetPropertyValue("Department", this._Department, value, (propertyValue) => { this._Department = propertyValue; }, this.DepartmentChangedHandler);
      }
    }
    private global::Sungero.Company.IJobTitle _JobTitle;
    public virtual global::Sungero.Company.IJobTitle JobTitle
    {
      get
      {
        return this._JobTitle;
      }

      set
      {
        this.SetPropertyValue("JobTitle", this._JobTitle, value, (propertyValue) => { this._JobTitle = propertyValue; }, this.JobTitleChangedHandler);
      }
    }




    protected override global::Sungero.Domain.Shared.EntityCreatingFromServerHandler CreateCreatingFromServerHandler(
      global::Sungero.Domain.Shared.IEntity entitySource)
    {
      return new global::Sungero.Company.EmployeeCreatingFromServerHandler((global::Sungero.Company.IEmployee)entitySource, this.Info);
    }

    #region Framework events

    protected void PersonChangedHandler()
    {
      var args = new global::Sungero.Company.Shared.EmployeePersonChangedEventArgs(this.State.Properties.Person, this.Person, this);
     ((global::Sungero.Company.EmployeeSharedHandlers)this.SharedHandlers).PersonChanged(args);
    }

    protected void DepartmentChangedHandler()
    {
      var args = new global::Sungero.Company.Shared.EmployeeDepartmentChangedEventArgs(this.State.Properties.Department, this.Department, this);
     ((global::Sungero.Company.EmployeeSharedHandlers)this.SharedHandlers).DepartmentChanged(args);
    }

    protected void JobTitleChangedHandler()
    {
      var args = new global::Sungero.Company.Shared.EmployeeJobTitleChangedEventArgs(this.State.Properties.JobTitle, this.JobTitle, this);
     ((global::Sungero.Company.EmployeeSharedHandlers)this.SharedHandlers).JobTitleChanged(args);
    }

    protected void PhoneChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.Phone, this.Phone, this);
     ((global::Sungero.Company.EmployeeSharedHandlers)this.SharedHandlers).PhoneChanged(args);
    }

    protected void NoteChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.Note, this.Note, this);
     ((global::Sungero.Company.EmployeeSharedHandlers)this.SharedHandlers).NoteChanged(args);
    }

    protected void EmailChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.Email, this.Email, this);
     ((global::Sungero.Company.EmployeeSharedHandlers)this.SharedHandlers).EmailChanged(args);
    }

    protected void NeedNotifyExpiredAssignmentsChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.BooleanPropertyChangedEventArgs(this.State.Properties.NeedNotifyExpiredAssignments, this.NeedNotifyExpiredAssignments, this);
     ((global::Sungero.Company.EmployeeSharedHandlers)this.SharedHandlers).NeedNotifyExpiredAssignmentsChanged(args);
    }

    protected void NeedNotifyNewAssignmentsChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.BooleanPropertyChangedEventArgs(this.State.Properties.NeedNotifyNewAssignments, this.NeedNotifyNewAssignments, this);
     ((global::Sungero.Company.EmployeeSharedHandlers)this.SharedHandlers).NeedNotifyNewAssignmentsChanged(args);
    }



    #endregion


    public Employee()
    {
    }

  }
}

// ==================================================================
// EmployeeHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Company
{
  public partial class EmployeePersonPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.EntityPropertyFilteringServerHandler
    where T : class, global::Sungero.Parties.IPerson
  {
    private global::Sungero.Company.IEmployee _obj
    {
      get { return (global::Sungero.Company.IEmployee)this.Entity; }
    }

    public virtual global::System.Linq.IQueryable<T> PersonFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertyFilteringEventArgs e)
    {
      return query;
    }

    public EmployeePersonPropertyFilteringServerHandler(global::Sungero.Company.IEmployee entity)
      : base(entity)
    {
    }
  }

  public partial class EmployeePersonSearchPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.SearchPropertyFilteringServerHandler
    where T : class, global::Sungero.Parties.IPerson
  {

    public virtual global::System.Linq.IQueryable<T> PersonSearchDialogFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertySearchDialogFilteringEventArgs e)
    {
      return query;
    }

    public EmployeePersonSearchPropertyFilteringServerHandler()
      : base()
    {
    }
  }

  public partial class EmployeeDepartmentPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.EntityPropertyFilteringServerHandler
    where T : class, global::Sungero.Company.IDepartment
  {
    private global::Sungero.Company.IEmployee _obj
    {
      get { return (global::Sungero.Company.IEmployee)this.Entity; }
    }

    public virtual global::System.Linq.IQueryable<T> DepartmentFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertyFilteringEventArgs e)
    {
      return query;
    }

    public EmployeeDepartmentPropertyFilteringServerHandler(global::Sungero.Company.IEmployee entity)
      : base(entity)
    {
    }
  }

  public partial class EmployeeDepartmentSearchPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.SearchPropertyFilteringServerHandler
    where T : class, global::Sungero.Company.IDepartment
  {

    public virtual global::System.Linq.IQueryable<T> DepartmentSearchDialogFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertySearchDialogFilteringEventArgs e)
    {
      return query;
    }

    public EmployeeDepartmentSearchPropertyFilteringServerHandler()
      : base()
    {
    }
  }

  public partial class EmployeeJobTitlePropertyFilteringServerHandler<T>
    : global::Sungero.Domain.EntityPropertyFilteringServerHandler
    where T : class, global::Sungero.Company.IJobTitle
  {
    private global::Sungero.Company.IEmployee _obj
    {
      get { return (global::Sungero.Company.IEmployee)this.Entity; }
    }

    public virtual global::System.Linq.IQueryable<T> JobTitleFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertyFilteringEventArgs e)
    {
      return query;
    }

    public EmployeeJobTitlePropertyFilteringServerHandler(global::Sungero.Company.IEmployee entity)
      : base(entity)
    {
    }
  }

  public partial class EmployeeJobTitleSearchPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.SearchPropertyFilteringServerHandler
    where T : class, global::Sungero.Company.IJobTitle
  {

    public virtual global::System.Linq.IQueryable<T> JobTitleSearchDialogFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertySearchDialogFilteringEventArgs e)
    {
      return query;
    }

    public EmployeeJobTitleSearchPropertyFilteringServerHandler()
      : base()
    {
    }
  }



  public partial class EmployeeFilteringServerHandler<T>
    : global::Sungero.Domain.EntityFilteringServerHandler<T>  
    where T : class, global::Sungero.Company.IEmployee
  {
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    protected new global::Sungero.Company.IEmployeeFilterState Filter { get; private set; }

    private global::Sungero.Company.IEmployeeFilterState _filter
    {
      get
      {
        return this.Filter;
      }
    }

    public EmployeeFilteringServerHandler(global::Sungero.Company.IEmployeeFilterState filter)
    : base()
    {
      this.Filter = filter;
    }

    protected EmployeeFilteringServerHandler()
    {
    }


  }

  public partial class EmployeeUiFilteringServerHandler<T>
    : global::Sungero.Domain.EntityUiFilteringServerHandler<T>
    where T : class, global::Sungero.Company.IEmployee
  {
  }

  public partial class EmployeeSearchDialogServerHandler : global::Sungero.CoreEntities.UserSearchDialogServerHandler
   {
     private global::Sungero.Company.Server.EmployeeSearchDialogModel _dialog
     {
       get
       {
         return (global::Sungero.Company.Server.EmployeeSearchDialogModel)this.Dialog;
       }
     }

     public EmployeeSearchDialogServerHandler(global::Sungero.Company.Server.EmployeeSearchDialogModel dialog)
       : base(dialog)
     {
     }
   }

  public partial class EmployeeServerHandlers : global::Sungero.CoreEntities.UserServerHandlers
  {
    private global::Sungero.Company.IEmployee _obj
    {
      get { return (global::Sungero.Company.IEmployee)this.Entity; }
    }

    public EmployeeServerHandlers(global::Sungero.Company.IEmployee entity)
      : base(entity)
    {
    }
  }

  public partial class EmployeeCreatingFromServerHandler : global::Sungero.CoreEntities.UserCreatingFromServerHandler
  {
    private global::Sungero.Company.IEmployee _source
    {
      get { return (global::Sungero.Company.IEmployee)this.Source; }
    }

    private global::Sungero.Company.IEmployeeInfo _info
    {
      get { return (global::Sungero.Company.IEmployeeInfo)this._Info; }
    }

    public EmployeeCreatingFromServerHandler(global::Sungero.Company.IEmployee source, global::Sungero.Company.IEmployeeInfo info)
      : base(source, info)
    {
    }
  }

}

// ==================================================================
// EmployeeEventArgs.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Company.Server
{
}

// ==================================================================
// EmployeeAccessRights.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Company.Server
{
  public class EmployeeAccessRights : 
    Sungero.CoreEntities.Server.UserAccessRights, Sungero.Company.IEmployeeAccessRights
  {

    public EmployeeAccessRights(global::Sungero.Domain.Shared.IEntity entity) : base(entity)
    {
    }
  }

  public class EmployeeTypeAccessRights : 
    Sungero.CoreEntities.Server.UserTypeAccessRights, Sungero.Company.IEmployeeAccessRights
  {

    public EmployeeTypeAccessRights(global::System.Type entityType) : base(entityType)
    {
    }
  }
}

// ==================================================================
// EmployeeRepositoryImplementer.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Company.Server
{
    public class EmployeeRepositoryImplementer<T> : 
      global::Sungero.CoreEntities.Server.UserRepositoryImplementer<T>,
      global::Sungero.Company.IEmployeeRepositoryImplementer<T>
      where T : global::Sungero.Company.IEmployee 
    {
       public new global::Sungero.Company.IEmployeeAccessRights AccessRights
       {
          get { return (global::Sungero.Company.IEmployeeAccessRights)base.AccessRights; }
       }

       public new global::Sungero.Company.IEmployeeInfo Info
       {
          get { return (global::Sungero.Company.IEmployeeInfo)base.Info; }
       }

       protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
       {
         return new global::Sungero.Company.Server.EmployeeTypeAccessRights(typeof(T));
       }
    }
}

// ==================================================================
// EmployeePanelNavigationFilters.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Company.Server
{
    public class EmployeeBusinessUnitPanelNavigationFilter : global::Sungero.Domain.PanelNavigationFilterBase
    {
      private global::System.Linq.IQueryable Apply<T>(global::System.Linq.IQueryable query) where T: class, global::Sungero.Company.IEmployee
      {
        var typedQuery = (global::System.Linq.IQueryable<global::Sungero.Company.IBusinessUnit>)query;
        var typedState = (global::Sungero.Company.IEmployeeFilterState)this.State;
        var handlers = new global::Sungero.Company.EmployeeFilteringServerHandler<T>(typedState);
        var args = new global::Sungero.Domain.FilteringEventArgs();
        var result = handlers.BusinessUnitFiltering(typedQuery, args);
        if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<global::Sungero.Company.IBusinessUnit>();
        return result;
      }

      public override global::System.Linq.IQueryable Apply(global::System.Linq.IQueryable query)
      {
        return this.Apply<global::Sungero.Company.IEmployee>(query);
      }
    }

    public class EmployeeDepartmentPanelNavigationFilter : global::Sungero.Domain.PanelNavigationFilterBase
    {
      private global::System.Linq.IQueryable Apply<T>(global::System.Linq.IQueryable query) where T: class, global::Sungero.Company.IEmployee
      {
        var typedQuery = (global::System.Linq.IQueryable<global::Sungero.Company.IDepartment>)query;
        var typedState = (global::Sungero.Company.IEmployeeFilterState)this.State;
        var handlers = new global::Sungero.Company.EmployeeFilteringServerHandler<T>(typedState);
        var args = new global::Sungero.Domain.FilteringEventArgs();
        var result = handlers.DepartmentFiltering(typedQuery, args);
        if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<global::Sungero.Company.IDepartment>();
        return result;
      }

      public override global::System.Linq.IQueryable Apply(global::System.Linq.IQueryable query)
      {
        return this.Apply<global::Sungero.Company.IEmployee>(query);
      }
    }

    public class EmployeeJobTitlePanelNavigationFilter : global::Sungero.Domain.PanelNavigationFilterBase
    {
      private global::System.Linq.IQueryable Apply<T>(global::System.Linq.IQueryable query) where T: class, global::Sungero.Company.IEmployee
      {
        var typedQuery = (global::System.Linq.IQueryable<global::Sungero.Company.IJobTitle>)query;
        var typedState = (global::Sungero.Company.IEmployeeFilterState)this.State;
        var handlers = new global::Sungero.Company.EmployeeFilteringServerHandler<T>(typedState);
        var args = new global::Sungero.Domain.FilteringEventArgs();
        var result = handlers.JobTitleFiltering(typedQuery, args);
        if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<global::Sungero.Company.IJobTitle>();
        return result;
      }

      public override global::System.Linq.IQueryable Apply(global::System.Linq.IQueryable query)
      {
        return this.Apply<global::Sungero.Company.IEmployee>(query);
      }
    }

}

// ==================================================================
// EmployeeServerFunctions.g.cs
// ==================================================================

namespace Sungero.Company.Server
{
  public partial class EmployeeFunctions : global::Sungero.CoreEntities.Server.UserFunctions
  {
    private global::Sungero.Company.IEmployee _obj
    {
      get { return (global::Sungero.Company.IEmployee)this.Entity; }
    }

    public EmployeeFunctions(global::Sungero.Company.IEmployee entity) : base(entity) { }
  }
}

// ==================================================================
// EmployeeFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Company.Functions
{
  internal static class Employee
  {
    /// <redirect project="Sungero.Company.Server" type="Sungero.Company.Server.EmployeeFunctions" />
    internal static  global::System.Int32 GetEmployeesCount()
    {
      return global::Sungero.Company.Server.EmployeeFunctions.GetEmployeesCount();
    }
    /// <redirect project="Sungero.Company.Server" type="Sungero.Company.Server.EmployeeFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static  global::Sungero.Company.IEmployee GetEmployeeByName(global::System.String name)
    {
      return global::Sungero.Company.Server.EmployeeFunctions.GetEmployeeByName(name);
    }
    /// <redirect project="Sungero.Company.Server" type="Sungero.Company.Server.EmployeeFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static  global::System.Collections.Generic.List<global::Sungero.Company.IEmployee> GetEmployeesByName(global::System.String name)
    {
      return global::Sungero.Company.Server.EmployeeFunctions.GetEmployeesByName(name);
    }
    /// <redirect project="Sungero.Company.Server" type="Sungero.Company.Server.EmployeeFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static  global::System.String GetEmployeesNumberedList(global::System.Collections.Generic.List<global::Sungero.Company.IEmployee> employees, global::System.Boolean withJobTitle)
    {
      return global::Sungero.Company.Server.EmployeeFunctions.GetEmployeesNumberedList(employees, withJobTitle);
    }

    /// <redirect project="Sungero.Company.Shared" type="Sungero.Company.Shared.EmployeeFunctions" />
    internal static  global::System.String GetJobTitleWithShortName(global::Sungero.Company.IEmployee employee)
    {
      var functions = (global::Sungero.Company.Shared.EmployeeFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)employee).FunctionsContainer.SharedFunctions;
      return functions.GetJobTitleWithShortName();
    }
    /// <redirect project="Sungero.Company.Shared" type="Sungero.Company.Shared.EmployeeFunctions" />
    internal static  global::System.String GetShortName(global::Sungero.Company.IEmployee employee, Sungero.Core.DeclensionCase declensionCase, global::System.Boolean platformLogic)
    {
      var functions = (global::Sungero.Company.Shared.EmployeeFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)employee).FunctionsContainer.SharedFunctions;
      return functions.GetShortName(declensionCase, platformLogic);
    }
    /// <redirect project="Sungero.Company.Shared" type="Sungero.Company.Shared.EmployeeFunctions" />
    internal static  global::System.String GetShortName(global::Sungero.Company.IEmployee employee, global::System.Boolean platformLogic)
    {
      var functions = (global::Sungero.Company.Shared.EmployeeFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)employee).FunctionsContainer.SharedFunctions;
      return functions.GetShortName(platformLogic);
    }
    /// <redirect project="Sungero.Company.Shared" type="Sungero.Company.Shared.EmployeeFunctions" />
    internal static  global::System.String GetReverseShortName(global::Sungero.Company.IEmployee employee)
    {
      var functions = (global::Sungero.Company.Shared.EmployeeFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)employee).FunctionsContainer.SharedFunctions;
      return functions.GetReverseShortName();
    }
    /// <redirect project="Sungero.Company.Shared" type="Sungero.Company.Shared.EmployeeFunctions" />
    internal static  void UpdateName(global::Sungero.Company.IEmployee employee, global::Sungero.Parties.IPerson person)
    {
      var functions = (global::Sungero.Company.Shared.EmployeeFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)employee).FunctionsContainer.SharedFunctions;
    functions.UpdateName(person);
    }
    /// <redirect project="Sungero.Company.Shared" type="Sungero.Company.Shared.EmployeeFunctions" />
    internal static  void SetRequiredProperties(global::Sungero.Company.IEmployee employee)
    {
      var functions = (global::Sungero.Company.Shared.EmployeeFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)employee).FunctionsContainer.SharedFunctions;
    functions.SetRequiredProperties();
    }
    /// <redirect project="Sungero.Company.Shared" type="Sungero.Company.Shared.EmployeeFunctions" />
    internal static  global::System.Boolean IsValidEmail(global::System.String emailAddress)
    {
      return global::Sungero.Company.Shared.EmployeeFunctions.IsValidEmail(emailAddress);
    }
    /// <redirect project="Sungero.Company.Shared" type="Sungero.Company.Shared.EmployeeFunctions" />
    internal static  global::System.Boolean IsValidNotificationSetting(global::System.String emailAddress, global::System.Nullable<global::System.Boolean> needNotifyNewAssignments, global::System.Nullable<global::System.Boolean> needNotifyExpiredAssignments)
    {
      return global::Sungero.Company.Shared.EmployeeFunctions.IsValidNotificationSetting(emailAddress, needNotifyNewAssignments, needNotifyExpiredAssignments);
    }
    /// <redirect project="Sungero.Company.Shared" type="Sungero.Company.Shared.EmployeeFunctions" />
    internal static  global::Sungero.Company.Structures.Employee.PersonFullName GetFullNameInDeclension(global::Sungero.Company.IEmployee employee, Sungero.Core.DeclensionCase declensionCase)
    {
      var functions = (global::Sungero.Company.Shared.EmployeeFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)employee).FunctionsContainer.SharedFunctions;
      return functions.GetFullNameInDeclension(declensionCase);
    }
    /// <redirect project="Sungero.Company.Shared" type="Sungero.Company.Shared.EmployeeFunctions" />
    internal static  global::System.String GetJobTitle(global::Sungero.Company.IEmployee employee, Sungero.Core.DeclensionCase declensionCase)
    {
      return global::Sungero.Company.Shared.EmployeeFunctions.GetJobTitle(employee, declensionCase);
    }

  }
}

// ==================================================================
// EmployeeServerPublicFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Company.Server
{
  public class EmployeeServerPublicFunctions : global::Sungero.Company.Server.IEmployeeServerPublicFunctions
  {
  }
}

// ==================================================================
// EmployeeQueries.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Company.Queries
{
  public class Employee
  {
    private static global::Sungero.Domain.SqlQueryResolver resolver = new global::Sungero.Domain.SqlQueryResolver("Sungero.Company.Server.Employee.EmployeeQueries.xml", System.Reflection.Assembly.GetExecutingAssembly());
  }
}
