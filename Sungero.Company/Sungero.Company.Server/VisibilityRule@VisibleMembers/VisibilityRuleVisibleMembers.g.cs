
// ==================================================================
// VisibilityRuleVisibleMembers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Company.Server
{
  public class VisibilityRuleVisibleMembersFilterForRecipient<TQueryEntity, TSourceEntity, TRootEntity>
    : global::Sungero.Domain.ChildEntityPropertyFilterBase<TQueryEntity, TSourceEntity, TRootEntity>
    where TQueryEntity : class, global::Sungero.CoreEntities.IRecipient
    where TSourceEntity : class, global::Sungero.Company.IVisibilityRuleVisibleMembers
    where TRootEntity : class, global::Sungero.Company.IVisibilityRule
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, TSourceEntity sourceEntity, TRootEntity rootEntity)
    {
      var args = new global::Sungero.Domain.PropertyFilteringEventArgs(sourceEntity);
      var result = new global::Sungero.Company.VisibilityRuleVisibleMembersRecipientPropertyFilteringServerHandler<TQueryEntity>(sourceEntity, rootEntity).VisibleMembersRecipientFiltering(query, args);
      if (args.DisableUiFiltering)
        global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public VisibilityRuleVisibleMembersFilterForRecipient(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class VisibilityRuleVisibleMembersSearchFilterForRecipient<TQueryEntity>
    : global::Sungero.Domain.SearchDialogPropertyFilter<TQueryEntity>
    where TQueryEntity : class, global::Sungero.CoreEntities.IRecipient
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, System.Guid entityType)
    {
      var args = new global::Sungero.Domain.PropertySearchDialogFilteringEventArgs(entityType);
      var result = new global::Sungero.Company.VisibilityRuleVisibleMembersRecipientSearchPropertyFilteringServerHandler<TQueryEntity>().VisibleMembersRecipientSearchDialogFiltering(query, args);
      if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public VisibilityRuleVisibleMembersSearchFilterForRecipient(string propertyName)
      : base(propertyName)
    {
    }
  }



  [global::Sungero.Domain.PropertyFilter(typeof(global::Sungero.Company.Server.VisibilityRuleVisibleMembersFilterForRecipient<global::Sungero.CoreEntities.IRecipient, global::Sungero.Company.IVisibilityRuleVisibleMembers, global::Sungero.Company.IVisibilityRule>), "Recipient")]
  [global::Sungero.Domain.SearchPropertyFilter(typeof(global::Sungero.Company.Server.VisibilityRuleVisibleMembersSearchFilterForRecipient<global::Sungero.CoreEntities.IRecipient>), "Recipient")]


  public class VisibilityRuleVisibleMembers :
    global::Sungero.Domain.ChildEntity, global::Sungero.Company.IVisibilityRuleVisibleMembers
  {
    public static new readonly global::System.Guid ClassTypeGuid = global::System.Guid.Parse("71565a4d-9d61-4783-9c7f-b001b7bc417c");

    public override global::System.Guid TypeGuid
    {
      get { return global::Sungero.Company.Server.VisibilityRuleVisibleMembers.ClassTypeGuid; }
    }

    public override string TypeName
    {
      get { return "Sungero.Company.IVisibilityRuleVisibleMembers, Sungero.Domain.Interfaces"; }
    }

    public new virtual global::Sungero.Company.IVisibilityRuleVisibleMembersState State
    {
      get { return (global::Sungero.Company.IVisibilityRuleVisibleMembersState)base.State; }
    }

    protected override global::Sungero.Domain.Shared.IEntityState CreateState()
    {
      return new global::Sungero.Company.Shared.VisibilityRuleVisibleMembersState(this);
    }

    public new virtual global::Sungero.Company.IVisibilityRuleVisibleMembersInfo Info
    {
      get { return (global::Sungero.Company.IVisibilityRuleVisibleMembersInfo)base.Info; }
    }


    public global::Sungero.Company.IVisibilityRule VisibilityRule { get; set; }

    public override global::Sungero.Domain.Shared.IEntity RootEntity
    {
      get { return this.VisibilityRule; }
      set { this.VisibilityRule = (global::Sungero.Company.IVisibilityRule)value; }
    }

    protected override object CreateSharedHandlers() {
      return new global::Sungero.Company.VisibilityRuleVisibleMembersSharedHandlers(this);
    }







    private global::Sungero.CoreEntities.IRecipient _Recipient;
    public virtual global::Sungero.CoreEntities.IRecipient Recipient
    {
      get
      {
        return this._Recipient;
      }

      set
      {
        this.SetPropertyValue("Recipient", this._Recipient, value, (propertyValue) => { this._Recipient = propertyValue; }, this.RecipientChangedHandler);
      }
    }




    #region Framework events

    protected void RecipientChangedHandler()
    {
      var args = new global::Sungero.Company.Shared.VisibilityRuleVisibleMembersRecipientChangedEventArgs(this.State.Properties.Recipient, this.Recipient, this);
     ((global::Sungero.Company.VisibilityRuleVisibleMembersSharedHandlers)this.SharedHandlers).VisibleMembersRecipientChanged(args);
    }



    #endregion


    public VisibilityRuleVisibleMembers()
    {
    }

  }
}

// ==================================================================
// VisibilityRuleVisibleMembersHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Company
{
  public partial class VisibilityRuleVisibleMembersRecipientPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.ChildEntityPropertyFilteringServerHandler
    where T : class, global::Sungero.CoreEntities.IRecipient
  {
    private global::Sungero.Company.IVisibilityRuleVisibleMembers _obj
    {
      get { return (global::Sungero.Company.IVisibilityRuleVisibleMembers)this.Entity; }
    }

    private global::Sungero.Company.IVisibilityRule _root
    {
      get { return (global::Sungero.Company.IVisibilityRule)this.Root; }
    }

    public VisibilityRuleVisibleMembersRecipientPropertyFilteringServerHandler(global::Sungero.Company.IVisibilityRuleVisibleMembers entity, global::Sungero.Company.IVisibilityRule root)
      : base(entity, root)
    {
    }
  }

  public partial class VisibilityRuleVisibleMembersRecipientSearchPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.SearchPropertyFilteringServerHandler
    where T : class, global::Sungero.CoreEntities.IRecipient
  {

    public virtual global::System.Linq.IQueryable<T> VisibleMembersRecipientSearchDialogFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertySearchDialogFilteringEventArgs e)
    {
      return query;
    }

    public VisibilityRuleVisibleMembersRecipientSearchPropertyFilteringServerHandler()
      : base()
    {
    }
  }



}

// ==================================================================
// VisibilityRuleVisibleMembersEventArgs.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Company.Server
{
}
