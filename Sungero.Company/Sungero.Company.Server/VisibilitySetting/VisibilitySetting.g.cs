
// ==================================================================
// VisibilitySetting.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Company.Server
{
    public class VisibilitySettingFilter<T> :
      global::Sungero.Domain.EntityFilterBase<T>
      where T : class, global::Sungero.Company.IVisibilitySetting
    {
      protected new global::Sungero.Company.IVisibilitySettingFilterState Filter { get; private set; }

      private global::Sungero.Company.IVisibilitySettingFilterState filter
      {
        get
        {
          return this.Filter;
        }
      }

      protected override global::System.Linq.IQueryable<T> ApplyAppliedFilter(global::System.Linq.IQueryable<T> query)
      {
        return base.ApplyAppliedFilter(query);
      }

      public VisibilitySettingFilter(global::Sungero.Company.IVisibilitySettingFilterState filter)
      : base()
      {
        this.Filter = filter;
      }

      protected VisibilitySettingFilter()
      {
      }
    }
      public class VisibilitySettingUiFilter<T> :
        global::Sungero.Domain.EntityUiFilterBase<T>
        where T : class, global::Sungero.Company.IVisibilitySetting
      {
        protected override global::System.Linq.IQueryable<T> ApplyAppliedFilter(global::System.Linq.IQueryable<T> query)
        {
          return base.ApplyAppliedFilter(query);
        }
      }

    public class VisibilitySettingSearchDialogModel : global::Sungero.CoreEntities.Server.DatabookEntrySearchDialogModel
        {
                  public override global::System.Int32? Id { get; protected set; }



                  public virtual global::System.String Name { get; protected set; }
                  public virtual global::System.Boolean? NeedRestrictVisibility { get; protected set; }



                   [Sungero.Domain.Shared.HideInDevStudio()]
                   public VisibilitySettingUnrestrictedRecipientsModel UnrestrictedRecipients { get; protected set; }
                   [Sungero.Domain.Shared.HideInDevStudio()]
                   public VisibilitySettingHiddenRecipientsModel HiddenRecipients { get; protected set; }

        }


      public class VisibilitySettingUnrestrictedRecipientsModel : global::Sungero.Domain.CollectionPropertySearchDialogModel
          {
            public override global::System.Int32? Id { get; protected set; }


         }
      public class VisibilitySettingHiddenRecipientsModel : global::Sungero.Domain.CollectionPropertySearchDialogModel
          {
            public override global::System.Int32? Id { get; protected set; }


         }




  [global::Sungero.Domain.Filter(typeof(global::Sungero.Company.Server.VisibilitySettingFilter<global::Sungero.Company.IVisibilitySetting>))]
  [global::Sungero.Domain.UiFilter(typeof(global::Sungero.Company.Server.VisibilitySettingUiFilter<global::Sungero.Company.IVisibilitySetting>))]

  public class VisibilitySetting :
    global::Sungero.CoreEntities.Server.DatabookEntry, global::Sungero.Company.IVisibilitySetting
  {
    public static new readonly global::System.Guid ClassTypeGuid = global::System.Guid.Parse("435ba4a4-ee0a-4c43-b334-c243257f400f");

    public override global::System.Guid TypeGuid
    {
      get { return global::Sungero.Company.Server.VisibilitySetting.ClassTypeGuid; }
    }

    public override string TypeName
    {
      get { return "Sungero.Company.IVisibilitySetting, Sungero.Domain.Interfaces"; }
    }

    public override string DisplayValue
    {
      get { return this.Name; }
      set { this.Name = value; }
    }

    public new virtual global::Sungero.Company.IVisibilitySettingState State
    {
      get { return (global::Sungero.Company.IVisibilitySettingState)base.State; }
    }

    protected override global::Sungero.Domain.Shared.IEntityState CreateState()
    {
      return new global::Sungero.Company.Shared.VisibilitySettingState(this);
    }

    public new virtual global::Sungero.Company.IVisibilitySettingInfo Info
    {
      get { return (global::Sungero.Company.IVisibilitySettingInfo)base.Info; }
    }

    public new virtual global::Sungero.Company.IVisibilitySettingAccessRights AccessRights
    {
      get { return (global::Sungero.Company.IVisibilitySettingAccessRights)base.AccessRights; }
    }

    protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
    {
      return new global::Sungero.Company.Server.VisibilitySettingAccessRights(this);
    }

    protected override global::Sungero.Domain.EntityFunctions CreateServerFunctions()
    {
      return new global::Sungero.Company.Server.VisibilitySettingFunctions(this);
    }

    protected override global::Sungero.Domain.Shared.EntityFunctions CreateSharedFunctions()
    {
      return new global::Sungero.Company.Shared.VisibilitySettingFunctions(this);
    }

    protected override object CreateHandlers() {
      return new global::Sungero.Company.VisibilitySettingServerHandlers(this);
    }

    protected override object CreateSharedHandlers() {
      return new global::Sungero.Company.VisibilitySettingSharedHandlers(this);
    }

    private global::System.String _Name;
    public virtual global::System.String Name
    {
      get
      {
        return this._Name;
      }

      set
      {
        this.SetPropertyValue("Name", this._Name, value, (propertyValue) => { this._Name = propertyValue; }, this.NameChangedHandler);
      }
    }
    private global::System.Boolean? _NeedRestrictVisibility;
    public virtual global::System.Boolean? NeedRestrictVisibility
    {
      get
      {
        return this._NeedRestrictVisibility;
      }

      set
      {
        this.SetPropertyValue("NeedRestrictVisibility", this._NeedRestrictVisibility, value, (propertyValue) => { this._NeedRestrictVisibility = propertyValue; }, this.NeedRestrictVisibilityChangedHandler);
      }
    }



    private global::System.String _NeedRestrictVisibilityDescription;
    [global::Sungero.Domain.Shared.DoNotSavePreviousValue]
    public virtual global::System.String NeedRestrictVisibilityDescription
    {
      get
      {
        return this._NeedRestrictVisibilityDescription;
      }

      set
      {
        this.SetPropertyValue("NeedRestrictVisibilityDescription", this._NeedRestrictVisibilityDescription, value, (propertyValue) => { this._NeedRestrictVisibilityDescription = propertyValue; }, this.NeedRestrictVisibilityDescriptionChangedHandler);
      }
    }






    protected global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Company.IVisibilitySettingUnrestrictedRecipients> _UnrestrictedRecipients;

    public virtual global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Company.IVisibilitySettingUnrestrictedRecipients> UnrestrictedRecipients
    {
      get
      {
        if (this._UnrestrictedRecipients == null)
        {
          this._UnrestrictedRecipients = this.CreateUnrestrictedRecipientsCollection();
          this.SetUnrestrictedRecipientsEventHandlers();
        }
        return this._UnrestrictedRecipients;
      }

      set
      {
        if (this._UnrestrictedRecipients != null)
          this.UnsetChildCollectionEventHandlers(this._UnrestrictedRecipients);

        this._UnrestrictedRecipients = value;
        this.SetUnrestrictedRecipientsEventHandlers();
      }
    }

    protected virtual global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Company.IVisibilitySettingUnrestrictedRecipients> CreateUnrestrictedRecipientsCollection()
    {
      return new global::Sungero.Domain.ChildEntityCollection<global::Sungero.Company.IVisibilitySettingUnrestrictedRecipients>() { RootEntity = this };
    }

    private void SetUnrestrictedRecipientsEventHandlers()
    {
      this.SetChildCollectionEventHandlers(this._UnrestrictedRecipients, "UnrestrictedRecipients");

      var changeNotifier = (global::Sungero.Domain.Shared.INotifyChildEntityCollectionChanged)this._UnrestrictedRecipients;
      changeNotifier.Added += this.UnrestrictedRecipientsAddedHandler;
      changeNotifier.Deleted += this.UnrestrictedRecipientsDeletedHandler;
      changeNotifier.Added += this.UnrestrictedRecipientsCollectionUpdateEventHandler;
      changeNotifier.Deleted += this.UnrestrictedRecipientsCollectionUpdateEventHandler;
      changeNotifier.Updated += this.UnrestrictedRecipientsCollectionUpdateEventHandler;
    }

    private void UnrestrictedRecipientsCollectionUpdateEventHandler(object sender, global::Sungero.Domain.Shared.BaseChildEntityEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      if (this.IsPropertyChangedHandlerEnabled)
        this.UnrestrictedRecipientsChangedHandler();
    }
    protected global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Company.IVisibilitySettingHiddenRecipients> _HiddenRecipients;

    public virtual global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Company.IVisibilitySettingHiddenRecipients> HiddenRecipients
    {
      get
      {
        if (this._HiddenRecipients == null)
        {
          this._HiddenRecipients = this.CreateHiddenRecipientsCollection();
          this.SetHiddenRecipientsEventHandlers();
        }
        return this._HiddenRecipients;
      }

      set
      {
        if (this._HiddenRecipients != null)
          this.UnsetChildCollectionEventHandlers(this._HiddenRecipients);

        this._HiddenRecipients = value;
        this.SetHiddenRecipientsEventHandlers();
      }
    }

    protected virtual global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Company.IVisibilitySettingHiddenRecipients> CreateHiddenRecipientsCollection()
    {
      return new global::Sungero.Domain.ChildEntityCollection<global::Sungero.Company.IVisibilitySettingHiddenRecipients>() { RootEntity = this };
    }

    private void SetHiddenRecipientsEventHandlers()
    {
      this.SetChildCollectionEventHandlers(this._HiddenRecipients, "HiddenRecipients");

      var changeNotifier = (global::Sungero.Domain.Shared.INotifyChildEntityCollectionChanged)this._HiddenRecipients;
      changeNotifier.Added += this.HiddenRecipientsAddedHandler;
      changeNotifier.Deleted += this.HiddenRecipientsDeletedHandler;
      changeNotifier.Added += this.HiddenRecipientsCollectionUpdateEventHandler;
      changeNotifier.Deleted += this.HiddenRecipientsCollectionUpdateEventHandler;
      changeNotifier.Updated += this.HiddenRecipientsCollectionUpdateEventHandler;
    }

    private void HiddenRecipientsCollectionUpdateEventHandler(object sender, global::Sungero.Domain.Shared.BaseChildEntityEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      if (this.IsPropertyChangedHandlerEnabled)
        this.HiddenRecipientsChangedHandler();
    }



    protected override global::Sungero.Domain.Shared.EntityCreatingFromServerHandler CreateCreatingFromServerHandler(
      global::Sungero.Domain.Shared.IEntity entitySource)
    {
      return new global::Sungero.Company.VisibilitySettingCreatingFromServerHandler((global::Sungero.Company.IVisibilitySetting)entitySource, this.Info);
    }

    #region Framework events

    protected void NameChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.Name, this.Name, this);
     ((global::Sungero.Company.VisibilitySettingSharedHandlers)this.SharedHandlers).NameChanged(args);
    }

    protected void NeedRestrictVisibilityChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.BooleanPropertyChangedEventArgs(this.State.Properties.NeedRestrictVisibility, this.NeedRestrictVisibility, this);
     ((global::Sungero.Company.VisibilitySettingSharedHandlers)this.SharedHandlers).NeedRestrictVisibilityChanged(args);
    }

    protected void UnrestrictedRecipientsChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.CollectionPropertyChangedEventArgs(this);
     ((global::Sungero.Company.VisibilitySettingSharedHandlers)this.SharedHandlers).UnrestrictedRecipientsChanged(args);
    }

    protected void NeedRestrictVisibilityDescriptionChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.TextPropertyChangedEventArgs(this.State.Properties.NeedRestrictVisibilityDescription, this.NeedRestrictVisibilityDescription, this);
     ((global::Sungero.Company.VisibilitySettingSharedHandlers)this.SharedHandlers).NeedRestrictVisibilityDescriptionChanged(args);
    }

    protected void HiddenRecipientsChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.CollectionPropertyChangedEventArgs(this);
     ((global::Sungero.Company.VisibilitySettingSharedHandlers)this.SharedHandlers).HiddenRecipientsChanged(args);
    }



    protected virtual global::Sungero.Company.VisibilitySettingUnrestrictedRecipientsSharedCollectionHandlers CreateUnrestrictedRecipientsAddedHandler(global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.Company.VisibilitySettingUnrestrictedRecipientsSharedCollectionHandlers(this, e.Value, null, e.Source);
    }

    protected virtual global::Sungero.Company.VisibilitySettingUnrestrictedRecipientsSharedCollectionHandlers CreateUnrestrictedRecipientsDeletedHandler(global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.Company.VisibilitySettingUnrestrictedRecipientsSharedCollectionHandlers(this, null, e.Value, null);
    }

    protected virtual void UnrestrictedRecipientsAddedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {  
      var collectionHandlers = this.CreateUnrestrictedRecipientsAddedHandler(e);
      if (collectionHandlers != null)
      {
        var args = new global::Sungero.Domain.Shared.CollectionPropertyAddedEventArgs(this);
        collectionHandlers.UnrestrictedRecipientsAdded(args);
      }
    }

    protected virtual void UnrestrictedRecipientsDeletedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {  
      var collectionHandlers = this.CreateUnrestrictedRecipientsDeletedHandler(e);
      if (collectionHandlers != null)
      {
        var args = new global::Sungero.Domain.Shared.CollectionPropertyDeletedEventArgs(this);
        collectionHandlers.UnrestrictedRecipientsDeleted(args);
      }
    }


    protected virtual global::Sungero.Company.VisibilitySettingHiddenRecipientsSharedCollectionHandlers CreateHiddenRecipientsAddedHandler(global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.Company.VisibilitySettingHiddenRecipientsSharedCollectionHandlers(this, e.Value, null, e.Source);
    }

    protected virtual global::Sungero.Company.VisibilitySettingHiddenRecipientsSharedCollectionHandlers CreateHiddenRecipientsDeletedHandler(global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.Company.VisibilitySettingHiddenRecipientsSharedCollectionHandlers(this, null, e.Value, null);
    }

    protected virtual void HiddenRecipientsAddedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {  
      var collectionHandlers = this.CreateHiddenRecipientsAddedHandler(e);
      if (collectionHandlers != null)
      {
        var args = new global::Sungero.Domain.Shared.CollectionPropertyAddedEventArgs(this);
        collectionHandlers.HiddenRecipientsAdded(args);
      }
    }

    protected virtual void HiddenRecipientsDeletedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {  
      var collectionHandlers = this.CreateHiddenRecipientsDeletedHandler(e);
      if (collectionHandlers != null)
      {
        var args = new global::Sungero.Domain.Shared.CollectionPropertyDeletedEventArgs(this);
        collectionHandlers.HiddenRecipientsDeleted(args);
      }
    }


    #endregion


    public VisibilitySetting()
    {
    }

  }
}

// ==================================================================
// VisibilitySettingHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Company
{

  public partial class VisibilitySettingFilteringServerHandler<T>
    : global::Sungero.Domain.EntityFilteringServerHandler<T>  
    where T : class, global::Sungero.Company.IVisibilitySetting
  {
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    protected new global::Sungero.Company.IVisibilitySettingFilterState Filter { get; private set; }

    private global::Sungero.Company.IVisibilitySettingFilterState _filter
    {
      get
      {
        return this.Filter;
      }
    }

    public VisibilitySettingFilteringServerHandler(global::Sungero.Company.IVisibilitySettingFilterState filter)
    : base()
    {
      this.Filter = filter;
    }

    protected VisibilitySettingFilteringServerHandler()
    {
    }

    public override global::System.Linq.IQueryable<T> Filtering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.FilteringEventArgs e)
    {
      return query;
    }


  }

  public partial class VisibilitySettingUiFilteringServerHandler<T>
    : global::Sungero.Domain.EntityUiFilteringServerHandler<T>
    where T : class, global::Sungero.Company.IVisibilitySetting
  {
    public override global::System.Linq.IQueryable<T> Filtering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.UiFilteringEventArgs e)
    {
      query = base.Filtering(query, e);
            return query;
    }
  }

  public partial class VisibilitySettingSearchDialogServerHandler : global::Sungero.CoreEntities.DatabookEntrySearchDialogServerHandler
   {
     private global::Sungero.Company.Server.VisibilitySettingSearchDialogModel _dialog
     {
       get
       {
         return (global::Sungero.Company.Server.VisibilitySettingSearchDialogModel)this.Dialog;
       }
     }

     public VisibilitySettingSearchDialogServerHandler(global::Sungero.Company.Server.VisibilitySettingSearchDialogModel dialog)
       : base(dialog)
     {
     }
   }

  public partial class VisibilitySettingServerHandlers : global::Sungero.CoreEntities.DatabookEntryServerHandlers
  {
    private global::Sungero.Company.IVisibilitySetting _obj
    {
      get { return (global::Sungero.Company.IVisibilitySetting)this.Entity; }
    }

    public VisibilitySettingServerHandlers(global::Sungero.Company.IVisibilitySetting entity)
      : base(entity)
    {
    }
  }

  public partial class VisibilitySettingCreatingFromServerHandler : global::Sungero.CoreEntities.DatabookEntryCreatingFromServerHandler
  {
    private global::Sungero.Company.IVisibilitySetting _source
    {
      get { return (global::Sungero.Company.IVisibilitySetting)this.Source; }
    }

    private global::Sungero.Company.IVisibilitySettingInfo _info
    {
      get { return (global::Sungero.Company.IVisibilitySettingInfo)this._Info; }
    }

    public VisibilitySettingCreatingFromServerHandler(global::Sungero.Company.IVisibilitySetting source, global::Sungero.Company.IVisibilitySettingInfo info)
      : base(source, info)
    {
    }
  }

}

// ==================================================================
// VisibilitySettingEventArgs.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Company.Server
{
}

// ==================================================================
// VisibilitySettingAccessRights.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Company.Server
{
  public class VisibilitySettingAccessRights : 
    Sungero.CoreEntities.Server.DatabookEntryAccessRights, Sungero.Company.IVisibilitySettingAccessRights
  {

    public VisibilitySettingAccessRights(global::Sungero.Domain.Shared.IEntity entity) : base(entity)
    {
    }
  }

  public class VisibilitySettingTypeAccessRights : 
    Sungero.CoreEntities.Server.DatabookEntryTypeAccessRights, Sungero.Company.IVisibilitySettingAccessRights
  {

    public VisibilitySettingTypeAccessRights(global::System.Type entityType) : base(entityType)
    {
    }
  }
}

// ==================================================================
// VisibilitySettingRepositoryImplementer.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Company.Server
{
    public class VisibilitySettingRepositoryImplementer<T> : 
      global::Sungero.Domain.RepositoryImplementer<T>,
      global::Sungero.Company.IVisibilitySettingRepositoryImplementer<T>
      where T : global::Sungero.Company.IVisibilitySetting 
    {
       public new global::Sungero.Company.IVisibilitySettingAccessRights AccessRights
       {
          get { return (global::Sungero.Company.IVisibilitySettingAccessRights)base.AccessRights; }
       }

       public new global::Sungero.Company.IVisibilitySettingInfo Info
       {
          get { return (global::Sungero.Company.IVisibilitySettingInfo)base.Info; }
       }

       protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
       {
         return new global::Sungero.Company.Server.VisibilitySettingTypeAccessRights(typeof(T));
       }
    }
}

// ==================================================================
// VisibilitySettingPanelNavigationFilters.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Company.Server
{
}

// ==================================================================
// VisibilitySettingServerFunctions.g.cs
// ==================================================================

namespace Sungero.Company.Server
{
  public partial class VisibilitySettingFunctions : global::Sungero.CoreEntities.Server.DatabookEntryFunctions
  {
    private global::Sungero.Company.IVisibilitySetting _obj
    {
      get { return (global::Sungero.Company.IVisibilitySetting)this.Entity; }
    }

    public VisibilitySettingFunctions(global::Sungero.Company.IVisibilitySetting entity) : base(entity) { }
  }
}

// ==================================================================
// VisibilitySettingFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Company.Functions
{
  internal static class VisibilitySetting
  {
    /// <redirect project="Sungero.Company.Shared" type="Sungero.Company.Shared.VisibilitySettingFunctions" />
    internal static  void SetRequiredProperties(global::Sungero.Company.IVisibilitySetting visibilitySetting)
    {
      var functions = (global::Sungero.Company.Shared.VisibilitySettingFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)visibilitySetting).FunctionsContainer.SharedFunctions;
    functions.SetRequiredProperties();
    }

  }
}

// ==================================================================
// VisibilitySettingServerPublicFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Company.Server
{
  public class VisibilitySettingServerPublicFunctions : global::Sungero.Company.Server.IVisibilitySettingServerPublicFunctions
  {
  }
}

// ==================================================================
// VisibilitySettingQueries.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Company.Queries
{
  public class VisibilitySetting
  {
    private static global::Sungero.Domain.SqlQueryResolver resolver = new global::Sungero.Domain.SqlQueryResolver("Sungero.Company.Server.VisibilitySetting.VisibilitySettingQueries.xml", System.Reflection.Assembly.GetExecutingAssembly());
  }
}
