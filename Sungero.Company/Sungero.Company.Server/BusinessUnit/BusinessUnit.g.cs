
// ==================================================================
// BusinessUnit.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Company.Server
{
    public class BusinessUnitFilter<T> :
      global::Sungero.CoreEntities.Server.GroupFilter<T>
      where T : class, global::Sungero.Company.IBusinessUnit
    {
      protected new global::Sungero.Company.IBusinessUnitFilterState Filter { get; private set; }

      private global::Sungero.Company.IBusinessUnitFilterState filter
      {
        get
        {
          return this.Filter;
        }
      }

      protected override global::System.Linq.IQueryable<T> ApplyAppliedFilter(global::System.Linq.IQueryable<T> query)
      {
        return base.ApplyAppliedFilter(query);
      }

      public BusinessUnitFilter(global::Sungero.Company.IBusinessUnitFilterState filter)
      : base()
      {
        this.Filter = filter;
      }

      protected BusinessUnitFilter()
      {
      }
    }
      public class BusinessUnitUiFilter<T> :
        global::Sungero.Domain.EntityUiFilterBase<T>
        where T : class, global::Sungero.Company.IBusinessUnit
      {
        protected override global::System.Linq.IQueryable<T> ApplyAppliedFilter(global::System.Linq.IQueryable<T> query)
        {
          var args = new global::Sungero.Domain.UiFilteringEventArgs();
          var result = new global::Sungero.Company.BusinessUnitUiFilteringServerHandler<T>().Filtering(query, args);
          return result;
        }
      }

    public class BusinessUnitSearchDialogModel : global::Sungero.CoreEntities.Server.GroupSearchDialogModel
        {
                  public override global::System.Boolean? IsSystem { get; protected set; }
                  public override global::System.Int32? Id { get; protected set; }
                  public override global::System.String Name { get; protected set; }


                  [Sungero.Domain.Shared.HideInDevStudio()]
                  public override global::System.Collections.Generic.IEnumerable<Sungero.CoreEntities.IGroup> Parent { get; protected set; }


                  public virtual global::System.String TIN { get; protected set; }
                  public virtual global::System.String TRRC { get; protected set; }
                  public virtual global::System.String Phones { get; protected set; }
                  public virtual global::System.String Note { get; protected set; }
                  public virtual global::System.String Email { get; protected set; }
                  public virtual global::System.String Homepage { get; protected set; }
                  public virtual global::System.String PSRN { get; protected set; }
                  public virtual global::System.String NCEO { get; protected set; }
                  public virtual global::System.String NCEA { get; protected set; }
                  public virtual global::System.String Account { get; protected set; }
                  public virtual global::System.String Code { get; protected set; }


                  public virtual global::System.Collections.Generic.IEnumerable<Sungero.Core.Enumeration> Status { get; protected set; }
                  public virtual global::System.Collections.Generic.IEnumerable<Sungero.Commons.ICity> City { get; protected set; }
                  public virtual global::System.Collections.Generic.IEnumerable<Sungero.Parties.ICompany> Company { get; protected set; }
                  public virtual global::System.Collections.Generic.IEnumerable<Sungero.CoreEntities.IRecipient> CEO { get; protected set; }
                  public virtual global::System.Collections.Generic.IEnumerable<Sungero.Parties.IBank> Bank { get; protected set; }


                   [Sungero.Domain.Shared.HideInDevStudio()]
                   public new BusinessUnitRecipientLinksModel RecipientLinks { get { return (BusinessUnitRecipientLinksModel)base.RecipientLinks; } protected set { base.RecipientLinks = value; } }

        }

      public class BusinessUnitRecipientLinksModel : global::Sungero.CoreEntities.Server.GroupRecipientLinksModel
          {
                      [Sungero.Domain.Shared.HideInDevStudio()]
                      public override global::System.Int32? Id { get; protected set; }




         }




  public class BusinessUnitFilterForCity<TQueryEntity, TSourceEntity>
    : global::Sungero.Domain.EntityPropertyFilterBase<TQueryEntity, TSourceEntity>
    where TQueryEntity : class, global::Sungero.Commons.ICity
    where TSourceEntity : class, global::Sungero.Company.IBusinessUnit
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, TSourceEntity sourceEntity)
    {
      var args = new global::Sungero.Domain.PropertyFilteringEventArgs(sourceEntity);
      var result = new global::Sungero.Company.BusinessUnitCityPropertyFilteringServerHandler<TQueryEntity>(sourceEntity).CityFiltering(query, args);
      if (args.DisableUiFiltering)
        global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public BusinessUnitFilterForCity(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class BusinessUnitSearchFilterForCity<TQueryEntity>
    : global::Sungero.Domain.SearchDialogPropertyFilter<TQueryEntity>
    where TQueryEntity : class, global::Sungero.Commons.ICity
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, System.Guid entityType)
    {
      var args = new global::Sungero.Domain.PropertySearchDialogFilteringEventArgs(entityType);
      var result = new global::Sungero.Company.BusinessUnitCitySearchPropertyFilteringServerHandler<TQueryEntity>().CitySearchDialogFiltering(query, args);
      if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public BusinessUnitSearchFilterForCity(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class BusinessUnitFilterForRegion<TQueryEntity, TSourceEntity>
    : global::Sungero.Domain.EntityPropertyFilterBase<TQueryEntity, TSourceEntity>
    where TQueryEntity : class, global::Sungero.Commons.IRegion
    where TSourceEntity : class, global::Sungero.Company.IBusinessUnit
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, TSourceEntity sourceEntity)
    {
      var args = new global::Sungero.Domain.PropertyFilteringEventArgs(sourceEntity);
      var result = new global::Sungero.Company.BusinessUnitRegionPropertyFilteringServerHandler<TQueryEntity>(sourceEntity).RegionFiltering(query, args);
      if (args.DisableUiFiltering)
        global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public BusinessUnitFilterForRegion(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class BusinessUnitSearchFilterForRegion<TQueryEntity>
    : global::Sungero.Domain.SearchDialogPropertyFilter<TQueryEntity>
    where TQueryEntity : class, global::Sungero.Commons.IRegion
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, System.Guid entityType)
    {
      var args = new global::Sungero.Domain.PropertySearchDialogFilteringEventArgs(entityType);
      var result = new global::Sungero.Company.BusinessUnitRegionSearchPropertyFilteringServerHandler<TQueryEntity>().RegionSearchDialogFiltering(query, args);
      if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public BusinessUnitSearchFilterForRegion(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class BusinessUnitFilterForHeadCompany<TQueryEntity, TSourceEntity>
    : global::Sungero.Domain.EntityPropertyFilterBase<TQueryEntity, TSourceEntity>
    where TQueryEntity : class, global::Sungero.Company.IBusinessUnit
    where TSourceEntity : class, global::Sungero.Company.IBusinessUnit
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, TSourceEntity sourceEntity)
    {
      var args = new global::Sungero.Domain.PropertyFilteringEventArgs(sourceEntity);
      var result = new global::Sungero.Company.BusinessUnitHeadCompanyPropertyFilteringServerHandler<TQueryEntity>(sourceEntity).HeadCompanyFiltering(query, args);
      if (args.DisableUiFiltering)
        global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public BusinessUnitFilterForHeadCompany(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class BusinessUnitSearchFilterForHeadCompany<TQueryEntity>
    : global::Sungero.Domain.SearchDialogPropertyFilter<TQueryEntity>
    where TQueryEntity : class, global::Sungero.Company.IBusinessUnit
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, System.Guid entityType)
    {
      var args = new global::Sungero.Domain.PropertySearchDialogFilteringEventArgs(entityType);
      var result = new global::Sungero.Company.BusinessUnitHeadCompanySearchPropertyFilteringServerHandler<TQueryEntity>().HeadCompanySearchDialogFiltering(query, args);
      if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public BusinessUnitSearchFilterForHeadCompany(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class BusinessUnitFilterForCompany<TQueryEntity, TSourceEntity>
    : global::Sungero.Domain.EntityPropertyFilterBase<TQueryEntity, TSourceEntity>
    where TQueryEntity : class, global::Sungero.Parties.ICompany
    where TSourceEntity : class, global::Sungero.Company.IBusinessUnit
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, TSourceEntity sourceEntity)
    {
      var args = new global::Sungero.Domain.PropertyFilteringEventArgs(sourceEntity);
      var result = new global::Sungero.Company.BusinessUnitCompanyPropertyFilteringServerHandler<TQueryEntity>(sourceEntity).CompanyFiltering(query, args);
      if (args.DisableUiFiltering)
        global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public BusinessUnitFilterForCompany(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class BusinessUnitSearchFilterForCompany<TQueryEntity>
    : global::Sungero.Domain.SearchDialogPropertyFilter<TQueryEntity>
    where TQueryEntity : class, global::Sungero.Parties.ICompany
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, System.Guid entityType)
    {
      var args = new global::Sungero.Domain.PropertySearchDialogFilteringEventArgs(entityType);
      var result = new global::Sungero.Company.BusinessUnitCompanySearchPropertyFilteringServerHandler<TQueryEntity>().CompanySearchDialogFiltering(query, args);
      if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public BusinessUnitSearchFilterForCompany(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class BusinessUnitFilterForCEO<TQueryEntity, TSourceEntity>
    : global::Sungero.Domain.EntityPropertyFilterBase<TQueryEntity, TSourceEntity>
    where TQueryEntity : class, global::Sungero.Company.IEmployee
    where TSourceEntity : class, global::Sungero.Company.IBusinessUnit
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, TSourceEntity sourceEntity)
    {
      var args = new global::Sungero.Domain.PropertyFilteringEventArgs(sourceEntity);
      var result = new global::Sungero.Company.BusinessUnitCEOPropertyFilteringServerHandler<TQueryEntity>(sourceEntity).CEOFiltering(query, args);
      if (args.DisableUiFiltering)
        global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public BusinessUnitFilterForCEO(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class BusinessUnitSearchFilterForCEO<TQueryEntity>
    : global::Sungero.Domain.SearchDialogPropertyFilter<TQueryEntity>
    where TQueryEntity : class, global::Sungero.CoreEntities.IRecipient
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, System.Guid entityType)
    {
      var args = new global::Sungero.Domain.PropertySearchDialogFilteringEventArgs(entityType);
      var result = new global::Sungero.Company.BusinessUnitCEOSearchPropertyFilteringServerHandler<TQueryEntity>().CEOSearchDialogFiltering(query, args);
      if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public BusinessUnitSearchFilterForCEO(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class BusinessUnitFilterForBank<TQueryEntity, TSourceEntity>
    : global::Sungero.Domain.EntityPropertyFilterBase<TQueryEntity, TSourceEntity>
    where TQueryEntity : class, global::Sungero.Parties.IBank
    where TSourceEntity : class, global::Sungero.Company.IBusinessUnit
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, TSourceEntity sourceEntity)
    {
      var args = new global::Sungero.Domain.PropertyFilteringEventArgs(sourceEntity);
      var result = new global::Sungero.Company.BusinessUnitBankPropertyFilteringServerHandler<TQueryEntity>(sourceEntity).BankFiltering(query, args);
      if (args.DisableUiFiltering)
        global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public BusinessUnitFilterForBank(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class BusinessUnitSearchFilterForBank<TQueryEntity>
    : global::Sungero.Domain.SearchDialogPropertyFilter<TQueryEntity>
    where TQueryEntity : class, global::Sungero.Parties.IBank
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, System.Guid entityType)
    {
      var args = new global::Sungero.Domain.PropertySearchDialogFilteringEventArgs(entityType);
      var result = new global::Sungero.Company.BusinessUnitBankSearchPropertyFilteringServerHandler<TQueryEntity>().BankSearchDialogFiltering(query, args);
      if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public BusinessUnitSearchFilterForBank(string propertyName)
      : base(propertyName)
    {
    }
  }



  [global::Sungero.Domain.Filter(typeof(global::Sungero.Company.Server.BusinessUnitFilter<global::Sungero.Company.IBusinessUnit>))]
  [global::Sungero.Domain.UiFilter(typeof(global::Sungero.Company.Server.BusinessUnitUiFilter<global::Sungero.Company.IBusinessUnit>))]
  [global::Sungero.Domain.PropertyFilter(typeof(global::Sungero.Company.Server.BusinessUnitFilterForCity<global::Sungero.Commons.ICity, global::Sungero.Company.IBusinessUnit>), "City")]
  [global::Sungero.Domain.SearchPropertyFilter(typeof(global::Sungero.Company.Server.BusinessUnitSearchFilterForCity<global::Sungero.Commons.ICity>), "City")]
  [global::Sungero.Domain.PropertyFilter(typeof(global::Sungero.Company.Server.BusinessUnitFilterForRegion<global::Sungero.Commons.IRegion, global::Sungero.Company.IBusinessUnit>), "Region")]
  [global::Sungero.Domain.SearchPropertyFilter(typeof(global::Sungero.Company.Server.BusinessUnitSearchFilterForRegion<global::Sungero.Commons.IRegion>), "Region")]
  [global::Sungero.Domain.PropertyFilter(typeof(global::Sungero.Company.Server.BusinessUnitFilterForHeadCompany<global::Sungero.Company.IBusinessUnit, global::Sungero.Company.IBusinessUnit>), "HeadCompany")]
  [global::Sungero.Domain.SearchPropertyFilter(typeof(global::Sungero.Company.Server.BusinessUnitSearchFilterForHeadCompany<global::Sungero.Company.IBusinessUnit>), "HeadCompany")]
  [global::Sungero.Domain.PropertyFilter(typeof(global::Sungero.Company.Server.BusinessUnitFilterForCompany<global::Sungero.Parties.ICompany, global::Sungero.Company.IBusinessUnit>), "Company")]
  [global::Sungero.Domain.SearchPropertyFilter(typeof(global::Sungero.Company.Server.BusinessUnitSearchFilterForCompany<global::Sungero.Parties.ICompany>), "Company")]
  [global::Sungero.Domain.PropertyFilter(typeof(global::Sungero.Company.Server.BusinessUnitFilterForCEO<global::Sungero.Company.IEmployee, global::Sungero.Company.IBusinessUnit>), "CEO")]
  [global::Sungero.Domain.SearchPropertyFilter(typeof(global::Sungero.Company.Server.BusinessUnitSearchFilterForCEO<global::Sungero.CoreEntities.IRecipient>), "CEO")]
  [global::Sungero.Domain.PropertyFilter(typeof(global::Sungero.Company.Server.BusinessUnitFilterForBank<global::Sungero.Parties.IBank, global::Sungero.Company.IBusinessUnit>), "Bank")]
  [global::Sungero.Domain.SearchPropertyFilter(typeof(global::Sungero.Company.Server.BusinessUnitSearchFilterForBank<global::Sungero.Parties.IBank>), "Bank")]


  public class BusinessUnit :
    global::Sungero.CoreEntities.Server.Group, global::Sungero.Company.IBusinessUnit
  {
    public static new readonly global::System.Guid ClassTypeGuid = global::System.Guid.Parse("eff95720-181f-4f7d-892d-dec034c7b2ab");

    public override global::System.Guid TypeGuid
    {
      get { return global::Sungero.Company.Server.BusinessUnit.ClassTypeGuid; }
    }

    public override string TypeName
    {
      get { return "Sungero.Company.IBusinessUnit, Sungero.Domain.Interfaces"; }
    }

    public override string DisplayValue
    {
      get { return this.Name; }
      set { this.Name = value; }
    }

    public new virtual global::Sungero.Company.IBusinessUnitState State
    {
      get { return (global::Sungero.Company.IBusinessUnitState)base.State; }
    }

    protected override global::Sungero.Domain.Shared.IEntityState CreateState()
    {
      return new global::Sungero.Company.Shared.BusinessUnitState(this);
    }

    public new virtual global::Sungero.Company.IBusinessUnitInfo Info
    {
      get { return (global::Sungero.Company.IBusinessUnitInfo)base.Info; }
    }

    public new virtual global::Sungero.Company.IBusinessUnitAccessRights AccessRights
    {
      get { return (global::Sungero.Company.IBusinessUnitAccessRights)base.AccessRights; }
    }

    protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
    {
      return new global::Sungero.Company.Server.BusinessUnitAccessRights(this);
    }

    protected override global::Sungero.Domain.EntityFunctions CreateServerFunctions()
    {
      return new global::Sungero.Company.Server.BusinessUnitFunctions(this);
    }

    protected override global::Sungero.Domain.Shared.EntityFunctions CreateSharedFunctions()
    {
      return new global::Sungero.Company.Shared.BusinessUnitFunctions(this);
    }

    protected override object CreateHandlers() {
      return new global::Sungero.Company.BusinessUnitServerHandlers(this);
    }

    protected override object CreateSharedHandlers() {
      return new global::Sungero.Company.BusinessUnitSharedHandlers(this);
    }

    private global::System.String _TIN;
    public virtual global::System.String TIN
    {
      get
      {
        return this._TIN;
      }

      set
      {
        this.SetPropertyValue("TIN", this._TIN, value, (propertyValue) => { this._TIN = propertyValue; }, this.TINChangedHandler);
      }
    }
    private global::System.String _TRRC;
    public virtual global::System.String TRRC
    {
      get
      {
        return this._TRRC;
      }

      set
      {
        this.SetPropertyValue("TRRC", this._TRRC, value, (propertyValue) => { this._TRRC = propertyValue; }, this.TRRCChangedHandler);
      }
    }
    private global::System.String _Phones;
    public virtual global::System.String Phones
    {
      get
      {
        return this._Phones;
      }

      set
      {
        this.SetPropertyValue("Phones", this._Phones, value, (propertyValue) => { this._Phones = propertyValue; }, this.PhonesChangedHandler);
      }
    }
    private global::System.String _LegalName;
    public virtual global::System.String LegalName
    {
      get
      {
        return this._LegalName;
      }

      set
      {
        this.SetPropertyValue("LegalName", this._LegalName, value, (propertyValue) => { this._LegalName = propertyValue; }, this.LegalNameChangedHandler);
      }
    }
    private global::System.String _LegalAddress;
    public virtual global::System.String LegalAddress
    {
      get
      {
        return this._LegalAddress;
      }

      set
      {
        this.SetPropertyValue("LegalAddress", this._LegalAddress, value, (propertyValue) => { this._LegalAddress = propertyValue; }, this.LegalAddressChangedHandler);
      }
    }
    private global::System.String _PostalAddress;
    public virtual global::System.String PostalAddress
    {
      get
      {
        return this._PostalAddress;
      }

      set
      {
        this.SetPropertyValue("PostalAddress", this._PostalAddress, value, (propertyValue) => { this._PostalAddress = propertyValue; }, this.PostalAddressChangedHandler);
      }
    }
    private global::System.String _Note;
    public virtual global::System.String Note
    {
      get
      {
        return this._Note;
      }

      set
      {
        this.SetPropertyValue("Note", this._Note, value, (propertyValue) => { this._Note = propertyValue; }, this.NoteChangedHandler);
      }
    }
    private global::System.String _Email;
    public virtual global::System.String Email
    {
      get
      {
        return this._Email;
      }

      set
      {
        this.SetPropertyValue("Email", this._Email, value, (propertyValue) => { this._Email = propertyValue; }, this.EmailChangedHandler);
      }
    }
    private global::System.String _Homepage;
    public virtual global::System.String Homepage
    {
      get
      {
        return this._Homepage;
      }

      set
      {
        this.SetPropertyValue("Homepage", this._Homepage, value, (propertyValue) => { this._Homepage = propertyValue; }, this.HomepageChangedHandler);
      }
    }
    private global::System.String _PSRN;
    public virtual global::System.String PSRN
    {
      get
      {
        return this._PSRN;
      }

      set
      {
        this.SetPropertyValue("PSRN", this._PSRN, value, (propertyValue) => { this._PSRN = propertyValue; }, this.PSRNChangedHandler);
      }
    }
    private global::System.String _NCEO;
    public virtual global::System.String NCEO
    {
      get
      {
        return this._NCEO;
      }

      set
      {
        this.SetPropertyValue("NCEO", this._NCEO, value, (propertyValue) => { this._NCEO = propertyValue; }, this.NCEOChangedHandler);
      }
    }
    private global::System.String _NCEA;
    public virtual global::System.String NCEA
    {
      get
      {
        return this._NCEA;
      }

      set
      {
        this.SetPropertyValue("NCEA", this._NCEA, value, (propertyValue) => { this._NCEA = propertyValue; }, this.NCEAChangedHandler);
      }
    }
    private global::System.String _Account;
    public virtual global::System.String Account
    {
      get
      {
        return this._Account;
      }

      set
      {
        this.SetPropertyValue("Account", this._Account, value, (propertyValue) => { this._Account = propertyValue; }, this.AccountChangedHandler);
      }
    }
    private global::System.String _Code;
    public virtual global::System.String Code
    {
      get
      {
        return this._Code;
      }

      set
      {
        this.SetPropertyValue("Code", this._Code, value, (propertyValue) => { this._Code = propertyValue; }, this.CodeChangedHandler);
      }
    }







    private global::Sungero.Commons.ICity _City;
    public virtual global::Sungero.Commons.ICity City
    {
      get
      {
        return this._City;
      }

      set
      {
        this.SetPropertyValue("City", this._City, value, (propertyValue) => { this._City = propertyValue; }, this.CityChangedHandler);
      }
    }
    private global::Sungero.Commons.IRegion _Region;
    public virtual global::Sungero.Commons.IRegion Region
    {
      get
      {
        return this._Region;
      }

      set
      {
        this.SetPropertyValue("Region", this._Region, value, (propertyValue) => { this._Region = propertyValue; }, this.RegionChangedHandler);
      }
    }
    private global::Sungero.Company.IBusinessUnit _HeadCompany;
    public virtual global::Sungero.Company.IBusinessUnit HeadCompany
    {
      get
      {
        return this._HeadCompany;
      }

      set
      {
        this.SetPropertyValue("HeadCompany", this._HeadCompany, value, (propertyValue) => { this._HeadCompany = propertyValue; }, this.HeadCompanyChangedHandler);
      }
    }
    private global::Sungero.Parties.ICompany _Company;
    public virtual global::Sungero.Parties.ICompany Company
    {
      get
      {
        return this._Company;
      }

      set
      {
        this.SetPropertyValue("Company", this._Company, value, (propertyValue) => { this._Company = propertyValue; }, this.CompanyChangedHandler);
      }
    }
    private global::Sungero.Company.IEmployee _CEO;
    public virtual global::Sungero.Company.IEmployee CEO
    {
      get
      {
        return this._CEO;
      }

      set
      {
        this.SetPropertyValue("CEO", this._CEO, value, (propertyValue) => { this._CEO = propertyValue; }, this.CEOChangedHandler);
      }
    }
    private global::Sungero.Parties.IBank _Bank;
    public virtual global::Sungero.Parties.IBank Bank
    {
      get
      {
        return this._Bank;
      }

      set
      {
        this.SetPropertyValue("Bank", this._Bank, value, (propertyValue) => { this._Bank = propertyValue; }, this.BankChangedHandler);
      }
    }



    protected override global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.CoreEntities.IGroupRecipientLinks> CreateRecipientLinksCollection()
    {
      return new global::Sungero.Domain.ChildEntityCollection<global::Sungero.Company.IBusinessUnitRecipientLinks>() { RootEntity = this };
    }


    protected override global::Sungero.Domain.Shared.EntityCreatingFromServerHandler CreateCreatingFromServerHandler(
      global::Sungero.Domain.Shared.IEntity entitySource)
    {
      return new global::Sungero.Company.BusinessUnitCreatingFromServerHandler((global::Sungero.Company.IBusinessUnit)entitySource, this.Info);
    }

    #region Framework events

    protected void TINChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.TIN, this.TIN, this);
     ((global::Sungero.Company.BusinessUnitSharedHandlers)this.SharedHandlers).TINChanged(args);
    }

    protected void TRRCChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.TRRC, this.TRRC, this);
     ((global::Sungero.Company.BusinessUnitSharedHandlers)this.SharedHandlers).TRRCChanged(args);
    }

    protected void CityChangedHandler()
    {
      var args = new global::Sungero.Company.Shared.BusinessUnitCityChangedEventArgs(this.State.Properties.City, this.City, this);
     ((global::Sungero.Company.BusinessUnitSharedHandlers)this.SharedHandlers).CityChanged(args);
    }

    protected void PhonesChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.Phones, this.Phones, this);
     ((global::Sungero.Company.BusinessUnitSharedHandlers)this.SharedHandlers).PhonesChanged(args);
    }

    protected void LegalNameChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.LegalName, this.LegalName, this);
     ((global::Sungero.Company.BusinessUnitSharedHandlers)this.SharedHandlers).LegalNameChanged(args);
    }

    protected void RegionChangedHandler()
    {
      var args = new global::Sungero.Company.Shared.BusinessUnitRegionChangedEventArgs(this.State.Properties.Region, this.Region, this);
     ((global::Sungero.Company.BusinessUnitSharedHandlers)this.SharedHandlers).RegionChanged(args);
    }

    protected void HeadCompanyChangedHandler()
    {
      var args = new global::Sungero.Company.Shared.BusinessUnitHeadCompanyChangedEventArgs(this.State.Properties.HeadCompany, this.HeadCompany, this);
     ((global::Sungero.Company.BusinessUnitSharedHandlers)this.SharedHandlers).HeadCompanyChanged(args);
    }

    protected void LegalAddressChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.LegalAddress, this.LegalAddress, this);
     ((global::Sungero.Company.BusinessUnitSharedHandlers)this.SharedHandlers).LegalAddressChanged(args);
    }

    protected void PostalAddressChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.PostalAddress, this.PostalAddress, this);
     ((global::Sungero.Company.BusinessUnitSharedHandlers)this.SharedHandlers).PostalAddressChanged(args);
    }

    protected void NoteChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.Note, this.Note, this);
     ((global::Sungero.Company.BusinessUnitSharedHandlers)this.SharedHandlers).NoteChanged(args);
    }

    protected void CompanyChangedHandler()
    {
      var args = new global::Sungero.Company.Shared.BusinessUnitCompanyChangedEventArgs(this.State.Properties.Company, this.Company, this);
     ((global::Sungero.Company.BusinessUnitSharedHandlers)this.SharedHandlers).CompanyChanged(args);
    }

    protected void CEOChangedHandler()
    {
      var args = new global::Sungero.Company.Shared.BusinessUnitCEOChangedEventArgs(this.State.Properties.CEO, this.CEO, this);
     ((global::Sungero.Company.BusinessUnitSharedHandlers)this.SharedHandlers).CEOChanged(args);
    }

    protected void EmailChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.Email, this.Email, this);
     ((global::Sungero.Company.BusinessUnitSharedHandlers)this.SharedHandlers).EmailChanged(args);
    }

    protected void HomepageChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.Homepage, this.Homepage, this);
     ((global::Sungero.Company.BusinessUnitSharedHandlers)this.SharedHandlers).HomepageChanged(args);
    }

    protected void PSRNChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.PSRN, this.PSRN, this);
     ((global::Sungero.Company.BusinessUnitSharedHandlers)this.SharedHandlers).PSRNChanged(args);
    }

    protected void NCEOChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.NCEO, this.NCEO, this);
     ((global::Sungero.Company.BusinessUnitSharedHandlers)this.SharedHandlers).NCEOChanged(args);
    }

    protected void NCEAChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.NCEA, this.NCEA, this);
     ((global::Sungero.Company.BusinessUnitSharedHandlers)this.SharedHandlers).NCEAChanged(args);
    }

    protected void AccountChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.Account, this.Account, this);
     ((global::Sungero.Company.BusinessUnitSharedHandlers)this.SharedHandlers).AccountChanged(args);
    }

    protected void BankChangedHandler()
    {
      var args = new global::Sungero.Company.Shared.BusinessUnitBankChangedEventArgs(this.State.Properties.Bank, this.Bank, this);
     ((global::Sungero.Company.BusinessUnitSharedHandlers)this.SharedHandlers).BankChanged(args);
    }


    protected void CodeChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.Code, this.Code, this);
     ((global::Sungero.Company.BusinessUnitSharedHandlers)this.SharedHandlers).CodeChanged(args);
    }




    #endregion


    public BusinessUnit()
    {
    }

  }
}

// ==================================================================
// BusinessUnitHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Company
{
  public partial class BusinessUnitCityPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.EntityPropertyFilteringServerHandler
    where T : class, global::Sungero.Commons.ICity
  {
    private global::Sungero.Company.IBusinessUnit _obj
    {
      get { return (global::Sungero.Company.IBusinessUnit)this.Entity; }
    }

    public virtual global::System.Linq.IQueryable<T> CityFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertyFilteringEventArgs e)
    {
      return query;
    }

    public BusinessUnitCityPropertyFilteringServerHandler(global::Sungero.Company.IBusinessUnit entity)
      : base(entity)
    {
    }
  }

  public partial class BusinessUnitCitySearchPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.SearchPropertyFilteringServerHandler
    where T : class, global::Sungero.Commons.ICity
  {

    public virtual global::System.Linq.IQueryable<T> CitySearchDialogFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertySearchDialogFilteringEventArgs e)
    {
      return query;
    }

    public BusinessUnitCitySearchPropertyFilteringServerHandler()
      : base()
    {
    }
  }

  public partial class BusinessUnitRegionPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.EntityPropertyFilteringServerHandler
    where T : class, global::Sungero.Commons.IRegion
  {
    private global::Sungero.Company.IBusinessUnit _obj
    {
      get { return (global::Sungero.Company.IBusinessUnit)this.Entity; }
    }

    public virtual global::System.Linq.IQueryable<T> RegionFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertyFilteringEventArgs e)
    {
      return query;
    }

    public BusinessUnitRegionPropertyFilteringServerHandler(global::Sungero.Company.IBusinessUnit entity)
      : base(entity)
    {
    }
  }

  public partial class BusinessUnitRegionSearchPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.SearchPropertyFilteringServerHandler
    where T : class, global::Sungero.Commons.IRegion
  {

    public virtual global::System.Linq.IQueryable<T> RegionSearchDialogFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertySearchDialogFilteringEventArgs e)
    {
      return query;
    }

    public BusinessUnitRegionSearchPropertyFilteringServerHandler()
      : base()
    {
    }
  }

  public partial class BusinessUnitHeadCompanyPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.EntityPropertyFilteringServerHandler
    where T : class, global::Sungero.Company.IBusinessUnit
  {
    private global::Sungero.Company.IBusinessUnit _obj
    {
      get { return (global::Sungero.Company.IBusinessUnit)this.Entity; }
    }

    public BusinessUnitHeadCompanyPropertyFilteringServerHandler(global::Sungero.Company.IBusinessUnit entity)
      : base(entity)
    {
    }
  }

  public partial class BusinessUnitHeadCompanySearchPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.SearchPropertyFilteringServerHandler
    where T : class, global::Sungero.Company.IBusinessUnit
  {

    public virtual global::System.Linq.IQueryable<T> HeadCompanySearchDialogFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertySearchDialogFilteringEventArgs e)
    {
      return query;
    }

    public BusinessUnitHeadCompanySearchPropertyFilteringServerHandler()
      : base()
    {
    }
  }

  public partial class BusinessUnitCompanyPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.EntityPropertyFilteringServerHandler
    where T : class, global::Sungero.Parties.ICompany
  {
    private global::Sungero.Company.IBusinessUnit _obj
    {
      get { return (global::Sungero.Company.IBusinessUnit)this.Entity; }
    }

    public virtual global::System.Linq.IQueryable<T> CompanyFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertyFilteringEventArgs e)
    {
      return query;
    }

    public BusinessUnitCompanyPropertyFilteringServerHandler(global::Sungero.Company.IBusinessUnit entity)
      : base(entity)
    {
    }
  }

  public partial class BusinessUnitCompanySearchPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.SearchPropertyFilteringServerHandler
    where T : class, global::Sungero.Parties.ICompany
  {

    public virtual global::System.Linq.IQueryable<T> CompanySearchDialogFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertySearchDialogFilteringEventArgs e)
    {
      return query;
    }

    public BusinessUnitCompanySearchPropertyFilteringServerHandler()
      : base()
    {
    }
  }

  public partial class BusinessUnitCEOPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.EntityPropertyFilteringServerHandler
    where T : class, global::Sungero.Company.IEmployee
  {
    private global::Sungero.Company.IBusinessUnit _obj
    {
      get { return (global::Sungero.Company.IBusinessUnit)this.Entity; }
    }

    public virtual global::System.Linq.IQueryable<T> CEOFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertyFilteringEventArgs e)
    {
      return query;
    }

    public BusinessUnitCEOPropertyFilteringServerHandler(global::Sungero.Company.IBusinessUnit entity)
      : base(entity)
    {
    }
  }

  public partial class BusinessUnitCEOSearchPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.SearchPropertyFilteringServerHandler
    where T : class, global::Sungero.CoreEntities.IRecipient
  {

    public virtual global::System.Linq.IQueryable<T> CEOSearchDialogFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertySearchDialogFilteringEventArgs e)
    {
      return query;
    }

    public BusinessUnitCEOSearchPropertyFilteringServerHandler()
      : base()
    {
    }
  }

  public partial class BusinessUnitBankPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.EntityPropertyFilteringServerHandler
    where T : class, global::Sungero.Parties.IBank
  {
    private global::Sungero.Company.IBusinessUnit _obj
    {
      get { return (global::Sungero.Company.IBusinessUnit)this.Entity; }
    }

    public virtual global::System.Linq.IQueryable<T> BankFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertyFilteringEventArgs e)
    {
      return query;
    }

    public BusinessUnitBankPropertyFilteringServerHandler(global::Sungero.Company.IBusinessUnit entity)
      : base(entity)
    {
    }
  }

  public partial class BusinessUnitBankSearchPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.SearchPropertyFilteringServerHandler
    where T : class, global::Sungero.Parties.IBank
  {

    public virtual global::System.Linq.IQueryable<T> BankSearchDialogFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertySearchDialogFilteringEventArgs e)
    {
      return query;
    }

    public BusinessUnitBankSearchPropertyFilteringServerHandler()
      : base()
    {
    }
  }



  public partial class BusinessUnitFilteringServerHandler<T>
    : global::Sungero.Domain.EntityFilteringServerHandler<T>  
    where T : class, global::Sungero.Company.IBusinessUnit
  {
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    protected new global::Sungero.Company.IBusinessUnitFilterState Filter { get; private set; }

    private global::Sungero.Company.IBusinessUnitFilterState _filter
    {
      get
      {
        return this.Filter;
      }
    }

    public BusinessUnitFilteringServerHandler(global::Sungero.Company.IBusinessUnitFilterState filter)
    : base()
    {
      this.Filter = filter;
    }

    protected BusinessUnitFilteringServerHandler()
    {
    }

    public override global::System.Linq.IQueryable<T> Filtering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.FilteringEventArgs e)
    {
      return query;
    }


  }

  public partial class BusinessUnitUiFilteringServerHandler<T>
    : global::Sungero.Domain.EntityUiFilteringServerHandler<T>
    where T : class, global::Sungero.Company.IBusinessUnit
  {
  }

  public partial class BusinessUnitSearchDialogServerHandler : global::Sungero.CoreEntities.GroupSearchDialogServerHandler
   {
     private global::Sungero.Company.Server.BusinessUnitSearchDialogModel _dialog
     {
       get
       {
         return (global::Sungero.Company.Server.BusinessUnitSearchDialogModel)this.Dialog;
       }
     }

     public BusinessUnitSearchDialogServerHandler(global::Sungero.Company.Server.BusinessUnitSearchDialogModel dialog)
       : base(dialog)
     {
     }
   }

  public partial class BusinessUnitServerHandlers : global::Sungero.CoreEntities.GroupServerHandlers
  {
    private global::Sungero.Company.IBusinessUnit _obj
    {
      get { return (global::Sungero.Company.IBusinessUnit)this.Entity; }
    }

    public BusinessUnitServerHandlers(global::Sungero.Company.IBusinessUnit entity)
      : base(entity)
    {
    }
  }

  public partial class BusinessUnitCreatingFromServerHandler : global::Sungero.CoreEntities.GroupCreatingFromServerHandler
  {
    private global::Sungero.Company.IBusinessUnit _source
    {
      get { return (global::Sungero.Company.IBusinessUnit)this.Source; }
    }

    private global::Sungero.Company.IBusinessUnitInfo _info
    {
      get { return (global::Sungero.Company.IBusinessUnitInfo)this._Info; }
    }

    public BusinessUnitCreatingFromServerHandler(global::Sungero.Company.IBusinessUnit source, global::Sungero.Company.IBusinessUnitInfo info)
      : base(source, info)
    {
    }
  }

}

// ==================================================================
// BusinessUnitEventArgs.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Company.Server
{
}

// ==================================================================
// BusinessUnitAccessRights.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Company.Server
{
  public class BusinessUnitAccessRights : 
    Sungero.CoreEntities.Server.GroupAccessRights, Sungero.Company.IBusinessUnitAccessRights
  {

    public BusinessUnitAccessRights(global::Sungero.Domain.Shared.IEntity entity) : base(entity)
    {
    }
  }

  public class BusinessUnitTypeAccessRights : 
    Sungero.CoreEntities.Server.GroupTypeAccessRights, Sungero.Company.IBusinessUnitAccessRights
  {

    public BusinessUnitTypeAccessRights(global::System.Type entityType) : base(entityType)
    {
    }
  }
}

// ==================================================================
// BusinessUnitRepositoryImplementer.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Company.Server
{
    public class BusinessUnitRepositoryImplementer<T> : 
      global::Sungero.CoreEntities.Server.GroupRepositoryImplementer<T>,
      global::Sungero.Company.IBusinessUnitRepositoryImplementer<T>
      where T : global::Sungero.Company.IBusinessUnit 
    {
       public new global::Sungero.Company.IBusinessUnitAccessRights AccessRights
       {
          get { return (global::Sungero.Company.IBusinessUnitAccessRights)base.AccessRights; }
       }

       public new global::Sungero.Company.IBusinessUnitInfo Info
       {
          get { return (global::Sungero.Company.IBusinessUnitInfo)base.Info; }
       }

       protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
       {
         return new global::Sungero.Company.Server.BusinessUnitTypeAccessRights(typeof(T));
       }
    }
}

// ==================================================================
// BusinessUnitPanelNavigationFilters.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Company.Server
{
}

// ==================================================================
// BusinessUnitServerFunctions.g.cs
// ==================================================================

namespace Sungero.Company.Server
{
  public partial class BusinessUnitFunctions : global::Sungero.CoreEntities.Server.GroupFunctions
  {
    private global::Sungero.Company.IBusinessUnit _obj
    {
      get { return (global::Sungero.Company.IBusinessUnit)this.Entity; }
    }

    public BusinessUnitFunctions(global::Sungero.Company.IBusinessUnit entity) : base(entity) { }
  }
}

// ==================================================================
// BusinessUnitFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Company.Functions
{
  internal static class BusinessUnit
  {
    /// <redirect project="Sungero.Company.Server" type="Sungero.Company.Server.BusinessUnitFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static  global::Sungero.Company.IBusinessUnit GetBusinessUnit(global::Sungero.Company.IEmployee employee)
    {
      return global::Sungero.Company.Server.BusinessUnitFunctions.GetBusinessUnit(employee);
    }
    /// <redirect project="Sungero.Company.Server" type="Sungero.Company.Server.BusinessUnitFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static  global::System.Linq.IQueryable<global::Sungero.Company.IBusinessUnit> GetBusinessUnits()
    {
      return global::Sungero.Company.Server.BusinessUnitFunctions.GetBusinessUnits();
    }
    /// <redirect project="Sungero.Company.Server" type="Sungero.Company.Server.BusinessUnitFunctions" />
    internal static  global::System.Collections.Generic.List<global::Sungero.Company.IBusinessUnit> GetBusinessUnits(global::System.String tin, global::System.String trrc)
    {
      return global::Sungero.Company.Server.BusinessUnitFunctions.GetBusinessUnits(tin, trrc);
    }
    /// <redirect project="Sungero.Company.Server" type="Sungero.Company.Server.BusinessUnitFunctions" />
    internal static  void UpdateSignatureSettings(global::Sungero.Company.IBusinessUnit businessUnit)
    {
      var functions = (global::Sungero.Company.Server.BusinessUnitFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)businessUnit).FunctionsContainer.ServerFunctions;
    functions.UpdateSignatureSettings();
    }
    /// <redirect project="Sungero.Company.Server" type="Sungero.Company.Server.BusinessUnitFunctions" />
    internal static  void SynchronizeCEOInRole(global::Sungero.Company.IBusinessUnit businessUnit)
    {
      var functions = (global::Sungero.Company.Server.BusinessUnitFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)businessUnit).FunctionsContainer.ServerFunctions;
    functions.SynchronizeCEOInRole();
    }
    /// <redirect project="Sungero.Company.Server" type="Sungero.Company.Server.BusinessUnitFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static  global::System.Collections.Generic.List<global::Sungero.Company.IBusinessUnit> GetDuplicateBusinessUnit(global::Sungero.Company.IBusinessUnit businessUnit)
    {
      var functions = (global::Sungero.Company.Server.BusinessUnitFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)businessUnit).FunctionsContainer.ServerFunctions;
      return functions.GetDuplicateBusinessUnit();
    }

    /// <redirect project="Sungero.Company.Shared" type="Sungero.Company.Shared.BusinessUnitFunctions" />
    internal static  global::System.String GetCounterpartyDuplicatesErrorText(global::Sungero.Company.IBusinessUnit businessUnit)
    {
      var functions = (global::Sungero.Company.Shared.BusinessUnitFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)businessUnit).FunctionsContainer.SharedFunctions;
      return functions.GetCounterpartyDuplicatesErrorText();
    }
    /// <redirect project="Sungero.Company.Shared" type="Sungero.Company.Shared.BusinessUnitFunctions" />
    internal static  global::System.String CheckTinLength(global::Sungero.Company.IBusinessUnit businessUnit, global::System.String tin)
    {
      var functions = (global::Sungero.Company.Shared.BusinessUnitFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)businessUnit).FunctionsContainer.SharedFunctions;
      return functions.CheckTinLength(tin);
    }
    /// <redirect project="Sungero.Company.Shared" type="Sungero.Company.Shared.BusinessUnitFunctions" />
    internal static  global::System.String CheckPsrnLength(global::Sungero.Company.IBusinessUnit businessUnit, global::System.String psrn)
    {
      var functions = (global::Sungero.Company.Shared.BusinessUnitFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)businessUnit).FunctionsContainer.SharedFunctions;
      return functions.CheckPsrnLength(psrn);
    }
    /// <redirect project="Sungero.Company.Shared" type="Sungero.Company.Shared.BusinessUnitFunctions" />
    internal static  global::System.String CheckNceoLength(global::Sungero.Company.IBusinessUnit businessUnit, global::System.String nceo)
    {
      var functions = (global::Sungero.Company.Shared.BusinessUnitFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)businessUnit).FunctionsContainer.SharedFunctions;
      return functions.CheckNceoLength(nceo);
    }

  }
}

// ==================================================================
// BusinessUnitServerPublicFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Company.Server
{
  public class BusinessUnitServerPublicFunctions : global::Sungero.Company.Server.IBusinessUnitServerPublicFunctions
  {
    public global::System.Collections.Generic.List<global::Sungero.Company.IBusinessUnit> GetBusinessUnits(global::System.String tin, global::System.String trrc)
    {
      return global::Sungero.Company.Functions.BusinessUnit.GetBusinessUnits(tin, trrc);
    }
  }
}

// ==================================================================
// BusinessUnitQueries.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Company.Queries
{
  public class BusinessUnit
  {
    private static global::Sungero.Domain.SqlQueryResolver resolver = new global::Sungero.Domain.SqlQueryResolver("Sungero.Company.Server.BusinessUnit.BusinessUnitQueries.xml", System.Reflection.Assembly.GetExecutingAssembly());
  }
}
