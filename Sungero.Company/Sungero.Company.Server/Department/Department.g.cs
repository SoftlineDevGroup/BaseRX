
// ==================================================================
// Department.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Company.Server
{
    public class DepartmentFilter<T> :
      global::Sungero.CoreEntities.Server.GroupFilter<T>
      where T : class, global::Sungero.Company.IDepartment
    {
      protected new global::Sungero.Company.IDepartmentFilterState Filter { get; private set; }

      private global::Sungero.Company.IDepartmentFilterState filter
      {
        get
        {
          return this.Filter;
        }
      }

      protected override global::System.Linq.IQueryable<T> ApplyAppliedFilter(global::System.Linq.IQueryable<T> query)
      {
        return base.ApplyAppliedFilter(query);
      }

      public DepartmentFilter(global::Sungero.Company.IDepartmentFilterState filter)
      : base()
      {
        this.Filter = filter;
      }

      protected DepartmentFilter()
      {
      }
    }
      public class DepartmentUiFilter<T> :
        global::Sungero.Domain.EntityUiFilterBase<T>
        where T : class, global::Sungero.Company.IDepartment
      {
        protected override global::System.Linq.IQueryable<T> ApplyAppliedFilter(global::System.Linq.IQueryable<T> query)
        {
          var args = new global::Sungero.Domain.UiFilteringEventArgs();
          var result = new global::Sungero.Company.DepartmentUiFilteringServerHandler<T>().Filtering(query, args);
          return result;
        }
      }

    public class DepartmentSearchDialogModel : global::Sungero.CoreEntities.Server.GroupSearchDialogModel
        {
                  public override global::System.Boolean? IsSystem { get; protected set; }
                  public override global::System.Int32? Id { get; protected set; }
                  public override global::System.String Name { get; protected set; }


                  [Sungero.Domain.Shared.HideInDevStudio()]
                  public override global::System.Collections.Generic.IEnumerable<Sungero.CoreEntities.IGroup> Parent { get; protected set; }


                  public virtual global::System.String Phone { get; protected set; }
                  public virtual global::System.String ShortName { get; protected set; }
                  public virtual global::System.String Note { get; protected set; }
                  public virtual global::System.String Code { get; protected set; }


                  public virtual global::System.Collections.Generic.IEnumerable<Sungero.Core.Enumeration> Status { get; protected set; }
                  public virtual global::System.Collections.Generic.IEnumerable<Sungero.CoreEntities.IRecipient> Manager { get; protected set; }
                  public virtual global::System.Collections.Generic.IEnumerable<Sungero.Company.IDepartment> HeadOffice { get; protected set; }
                  public virtual global::System.Collections.Generic.IEnumerable<Sungero.Company.IBusinessUnit> BusinessUnit { get; protected set; }


                   [Sungero.Domain.Shared.HideInDevStudio()]
                   public new DepartmentRecipientLinksModel RecipientLinks { get { return (DepartmentRecipientLinksModel)base.RecipientLinks; } protected set { base.RecipientLinks = value; } }

        }

      public class DepartmentRecipientLinksModel : global::Sungero.CoreEntities.Server.GroupRecipientLinksModel
          {
                      [Sungero.Domain.Shared.HideInDevStudio()]
                      public override global::System.Int32? Id { get; protected set; }




         }




  public class DepartmentFilterForManager<TQueryEntity, TSourceEntity>
    : global::Sungero.Domain.EntityPropertyFilterBase<TQueryEntity, TSourceEntity>
    where TQueryEntity : class, global::Sungero.Company.IEmployee
    where TSourceEntity : class, global::Sungero.Company.IDepartment
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, TSourceEntity sourceEntity)
    {
      var args = new global::Sungero.Domain.PropertyFilteringEventArgs(sourceEntity);
      var result = new global::Sungero.Company.DepartmentManagerPropertyFilteringServerHandler<TQueryEntity>(sourceEntity).ManagerFiltering(query, args);
      if (args.DisableUiFiltering)
        global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public DepartmentFilterForManager(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class DepartmentSearchFilterForManager<TQueryEntity>
    : global::Sungero.Domain.SearchDialogPropertyFilter<TQueryEntity>
    where TQueryEntity : class, global::Sungero.CoreEntities.IRecipient
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, System.Guid entityType)
    {
      var args = new global::Sungero.Domain.PropertySearchDialogFilteringEventArgs(entityType);
      var result = new global::Sungero.Company.DepartmentManagerSearchPropertyFilteringServerHandler<TQueryEntity>().ManagerSearchDialogFiltering(query, args);
      if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public DepartmentSearchFilterForManager(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class DepartmentFilterForHeadOffice<TQueryEntity, TSourceEntity>
    : global::Sungero.Domain.EntityPropertyFilterBase<TQueryEntity, TSourceEntity>
    where TQueryEntity : class, global::Sungero.Company.IDepartment
    where TSourceEntity : class, global::Sungero.Company.IDepartment
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, TSourceEntity sourceEntity)
    {
      var args = new global::Sungero.Domain.PropertyFilteringEventArgs(sourceEntity);
      var result = new global::Sungero.Company.DepartmentHeadOfficePropertyFilteringServerHandler<TQueryEntity>(sourceEntity).HeadOfficeFiltering(query, args);
      if (args.DisableUiFiltering)
        global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public DepartmentFilterForHeadOffice(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class DepartmentSearchFilterForHeadOffice<TQueryEntity>
    : global::Sungero.Domain.SearchDialogPropertyFilter<TQueryEntity>
    where TQueryEntity : class, global::Sungero.Company.IDepartment
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, System.Guid entityType)
    {
      var args = new global::Sungero.Domain.PropertySearchDialogFilteringEventArgs(entityType);
      var result = new global::Sungero.Company.DepartmentHeadOfficeSearchPropertyFilteringServerHandler<TQueryEntity>().HeadOfficeSearchDialogFiltering(query, args);
      if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public DepartmentSearchFilterForHeadOffice(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class DepartmentFilterForBusinessUnit<TQueryEntity, TSourceEntity>
    : global::Sungero.Domain.EntityPropertyFilterBase<TQueryEntity, TSourceEntity>
    where TQueryEntity : class, global::Sungero.Company.IBusinessUnit
    where TSourceEntity : class, global::Sungero.Company.IDepartment
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, TSourceEntity sourceEntity)
    {
      var args = new global::Sungero.Domain.PropertyFilteringEventArgs(sourceEntity);
      var result = new global::Sungero.Company.DepartmentBusinessUnitPropertyFilteringServerHandler<TQueryEntity>(sourceEntity).BusinessUnitFiltering(query, args);
      if (args.DisableUiFiltering)
        global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public DepartmentFilterForBusinessUnit(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class DepartmentSearchFilterForBusinessUnit<TQueryEntity>
    : global::Sungero.Domain.SearchDialogPropertyFilter<TQueryEntity>
    where TQueryEntity : class, global::Sungero.Company.IBusinessUnit
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, System.Guid entityType)
    {
      var args = new global::Sungero.Domain.PropertySearchDialogFilteringEventArgs(entityType);
      var result = new global::Sungero.Company.DepartmentBusinessUnitSearchPropertyFilteringServerHandler<TQueryEntity>().BusinessUnitSearchDialogFiltering(query, args);
      if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public DepartmentSearchFilterForBusinessUnit(string propertyName)
      : base(propertyName)
    {
    }
  }



  [global::Sungero.Domain.Filter(typeof(global::Sungero.Company.Server.DepartmentFilter<global::Sungero.Company.IDepartment>))]
  [global::Sungero.Domain.UiFilter(typeof(global::Sungero.Company.Server.DepartmentUiFilter<global::Sungero.Company.IDepartment>))]
  [global::Sungero.Domain.PropertyFilter(typeof(global::Sungero.Company.Server.DepartmentFilterForManager<global::Sungero.Company.IEmployee, global::Sungero.Company.IDepartment>), "Manager")]
  [global::Sungero.Domain.SearchPropertyFilter(typeof(global::Sungero.Company.Server.DepartmentSearchFilterForManager<global::Sungero.CoreEntities.IRecipient>), "Manager")]
  [global::Sungero.Domain.PropertyFilter(typeof(global::Sungero.Company.Server.DepartmentFilterForHeadOffice<global::Sungero.Company.IDepartment, global::Sungero.Company.IDepartment>), "HeadOffice")]
  [global::Sungero.Domain.SearchPropertyFilter(typeof(global::Sungero.Company.Server.DepartmentSearchFilterForHeadOffice<global::Sungero.Company.IDepartment>), "HeadOffice")]
  [global::Sungero.Domain.PropertyFilter(typeof(global::Sungero.Company.Server.DepartmentFilterForBusinessUnit<global::Sungero.Company.IBusinessUnit, global::Sungero.Company.IDepartment>), "BusinessUnit")]
  [global::Sungero.Domain.SearchPropertyFilter(typeof(global::Sungero.Company.Server.DepartmentSearchFilterForBusinessUnit<global::Sungero.Company.IBusinessUnit>), "BusinessUnit")]


  public class Department :
    global::Sungero.CoreEntities.Server.Group, global::Sungero.Company.IDepartment
  {
    public static new readonly global::System.Guid ClassTypeGuid = global::System.Guid.Parse("61b1c19f-26e2-49a5-b3d3-0d3618151e12");

    public override global::System.Guid TypeGuid
    {
      get { return global::Sungero.Company.Server.Department.ClassTypeGuid; }
    }

    public override string TypeName
    {
      get { return "Sungero.Company.IDepartment, Sungero.Domain.Interfaces"; }
    }

    public override string DisplayValue
    {
      get { return this.Name; }
      set { this.Name = value; }
    }

    public new virtual global::Sungero.Company.IDepartmentState State
    {
      get { return (global::Sungero.Company.IDepartmentState)base.State; }
    }

    protected override global::Sungero.Domain.Shared.IEntityState CreateState()
    {
      return new global::Sungero.Company.Shared.DepartmentState(this);
    }

    public new virtual global::Sungero.Company.IDepartmentInfo Info
    {
      get { return (global::Sungero.Company.IDepartmentInfo)base.Info; }
    }

    public new virtual global::Sungero.Company.IDepartmentAccessRights AccessRights
    {
      get { return (global::Sungero.Company.IDepartmentAccessRights)base.AccessRights; }
    }

    protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
    {
      return new global::Sungero.Company.Server.DepartmentAccessRights(this);
    }

    protected override global::Sungero.Domain.EntityFunctions CreateServerFunctions()
    {
      return new global::Sungero.Company.Server.DepartmentFunctions(this);
    }

    protected override global::Sungero.Domain.Shared.EntityFunctions CreateSharedFunctions()
    {
      return new global::Sungero.Company.Shared.DepartmentFunctions(this);
    }

    protected override object CreateHandlers() {
      return new global::Sungero.Company.DepartmentServerHandlers(this);
    }

    protected override object CreateSharedHandlers() {
      return new global::Sungero.Company.DepartmentSharedHandlers(this);
    }

    private global::System.String _Phone;
    public virtual global::System.String Phone
    {
      get
      {
        return this._Phone;
      }

      set
      {
        this.SetPropertyValue("Phone", this._Phone, value, (propertyValue) => { this._Phone = propertyValue; }, this.PhoneChangedHandler);
      }
    }
    private global::System.String _ShortName;
    public virtual global::System.String ShortName
    {
      get
      {
        return this._ShortName;
      }

      set
      {
        this.SetPropertyValue("ShortName", this._ShortName, value, (propertyValue) => { this._ShortName = propertyValue; }, this.ShortNameChangedHandler);
      }
    }
    private global::System.String _Note;
    public virtual global::System.String Note
    {
      get
      {
        return this._Note;
      }

      set
      {
        this.SetPropertyValue("Note", this._Note, value, (propertyValue) => { this._Note = propertyValue; }, this.NoteChangedHandler);
      }
    }
    private global::System.String _Code;
    public virtual global::System.String Code
    {
      get
      {
        return this._Code;
      }

      set
      {
        this.SetPropertyValue("Code", this._Code, value, (propertyValue) => { this._Code = propertyValue; }, this.CodeChangedHandler);
      }
    }







    private global::Sungero.Company.IEmployee _Manager;
    public virtual global::Sungero.Company.IEmployee Manager
    {
      get
      {
        return this._Manager;
      }

      set
      {
        this.SetPropertyValue("Manager", this._Manager, value, (propertyValue) => { this._Manager = propertyValue; }, this.ManagerChangedHandler);
      }
    }
    private global::Sungero.Company.IDepartment _HeadOffice;
    public virtual global::Sungero.Company.IDepartment HeadOffice
    {
      get
      {
        return this._HeadOffice;
      }

      set
      {
        this.SetPropertyValue("HeadOffice", this._HeadOffice, value, (propertyValue) => { this._HeadOffice = propertyValue; }, this.HeadOfficeChangedHandler);
      }
    }
    private global::Sungero.Company.IBusinessUnit _BusinessUnit;
    public virtual global::Sungero.Company.IBusinessUnit BusinessUnit
    {
      get
      {
        return this._BusinessUnit;
      }

      set
      {
        this.SetPropertyValue("BusinessUnit", this._BusinessUnit, value, (propertyValue) => { this._BusinessUnit = propertyValue; }, this.BusinessUnitChangedHandler);
      }
    }



    protected override global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.CoreEntities.IGroupRecipientLinks> CreateRecipientLinksCollection()
    {
      return new global::Sungero.Domain.ChildEntityCollection<global::Sungero.Company.IDepartmentRecipientLinks>() { RootEntity = this };
    }


    protected override global::Sungero.Domain.Shared.EntityCreatingFromServerHandler CreateCreatingFromServerHandler(
      global::Sungero.Domain.Shared.IEntity entitySource)
    {
      return new global::Sungero.Company.DepartmentCreatingFromServerHandler((global::Sungero.Company.IDepartment)entitySource, this.Info);
    }

    #region Framework events

    protected void ManagerChangedHandler()
    {
      var args = new global::Sungero.Company.Shared.DepartmentManagerChangedEventArgs(this.State.Properties.Manager, this.Manager, this);
     ((global::Sungero.Company.DepartmentSharedHandlers)this.SharedHandlers).ManagerChanged(args);
    }

    protected void HeadOfficeChangedHandler()
    {
      var args = new global::Sungero.Company.Shared.DepartmentHeadOfficeChangedEventArgs(this.State.Properties.HeadOffice, this.HeadOffice, this);
     ((global::Sungero.Company.DepartmentSharedHandlers)this.SharedHandlers).HeadOfficeChanged(args);
    }

    protected void PhoneChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.Phone, this.Phone, this);
     ((global::Sungero.Company.DepartmentSharedHandlers)this.SharedHandlers).PhoneChanged(args);
    }

    protected void ShortNameChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.ShortName, this.ShortName, this);
     ((global::Sungero.Company.DepartmentSharedHandlers)this.SharedHandlers).ShortNameChanged(args);
    }

    protected void NoteChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.Note, this.Note, this);
     ((global::Sungero.Company.DepartmentSharedHandlers)this.SharedHandlers).NoteChanged(args);
    }

    protected void BusinessUnitChangedHandler()
    {
      var args = new global::Sungero.Company.Shared.DepartmentBusinessUnitChangedEventArgs(this.State.Properties.BusinessUnit, this.BusinessUnit, this);
     ((global::Sungero.Company.DepartmentSharedHandlers)this.SharedHandlers).BusinessUnitChanged(args);
    }

    protected void CodeChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.Code, this.Code, this);
     ((global::Sungero.Company.DepartmentSharedHandlers)this.SharedHandlers).CodeChanged(args);
    }




    #endregion


    public Department()
    {
    }

  }
}

// ==================================================================
// DepartmentHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Company
{
  public partial class DepartmentManagerPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.EntityPropertyFilteringServerHandler
    where T : class, global::Sungero.Company.IEmployee
  {
    private global::Sungero.Company.IDepartment _obj
    {
      get { return (global::Sungero.Company.IDepartment)this.Entity; }
    }

    public virtual global::System.Linq.IQueryable<T> ManagerFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertyFilteringEventArgs e)
    {
      return query;
    }

    public DepartmentManagerPropertyFilteringServerHandler(global::Sungero.Company.IDepartment entity)
      : base(entity)
    {
    }
  }

  public partial class DepartmentManagerSearchPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.SearchPropertyFilteringServerHandler
    where T : class, global::Sungero.CoreEntities.IRecipient
  {

    public virtual global::System.Linq.IQueryable<T> ManagerSearchDialogFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertySearchDialogFilteringEventArgs e)
    {
      return query;
    }

    public DepartmentManagerSearchPropertyFilteringServerHandler()
      : base()
    {
    }
  }

  public partial class DepartmentHeadOfficePropertyFilteringServerHandler<T>
    : global::Sungero.Domain.EntityPropertyFilteringServerHandler
    where T : class, global::Sungero.Company.IDepartment
  {
    private global::Sungero.Company.IDepartment _obj
    {
      get { return (global::Sungero.Company.IDepartment)this.Entity; }
    }

    public DepartmentHeadOfficePropertyFilteringServerHandler(global::Sungero.Company.IDepartment entity)
      : base(entity)
    {
    }
  }

  public partial class DepartmentHeadOfficeSearchPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.SearchPropertyFilteringServerHandler
    where T : class, global::Sungero.Company.IDepartment
  {

    public virtual global::System.Linq.IQueryable<T> HeadOfficeSearchDialogFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertySearchDialogFilteringEventArgs e)
    {
      return query;
    }

    public DepartmentHeadOfficeSearchPropertyFilteringServerHandler()
      : base()
    {
    }
  }

  public partial class DepartmentBusinessUnitPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.EntityPropertyFilteringServerHandler
    where T : class, global::Sungero.Company.IBusinessUnit
  {
    private global::Sungero.Company.IDepartment _obj
    {
      get { return (global::Sungero.Company.IDepartment)this.Entity; }
    }

    public virtual global::System.Linq.IQueryable<T> BusinessUnitFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertyFilteringEventArgs e)
    {
      return query;
    }

    public DepartmentBusinessUnitPropertyFilteringServerHandler(global::Sungero.Company.IDepartment entity)
      : base(entity)
    {
    }
  }

  public partial class DepartmentBusinessUnitSearchPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.SearchPropertyFilteringServerHandler
    where T : class, global::Sungero.Company.IBusinessUnit
  {

    public virtual global::System.Linq.IQueryable<T> BusinessUnitSearchDialogFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertySearchDialogFilteringEventArgs e)
    {
      return query;
    }

    public DepartmentBusinessUnitSearchPropertyFilteringServerHandler()
      : base()
    {
    }
  }



  public partial class DepartmentFilteringServerHandler<T>
    : global::Sungero.Domain.EntityFilteringServerHandler<T>  
    where T : class, global::Sungero.Company.IDepartment
  {
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    protected new global::Sungero.Company.IDepartmentFilterState Filter { get; private set; }

    private global::Sungero.Company.IDepartmentFilterState _filter
    {
      get
      {
        return this.Filter;
      }
    }

    public DepartmentFilteringServerHandler(global::Sungero.Company.IDepartmentFilterState filter)
    : base()
    {
      this.Filter = filter;
    }

    protected DepartmentFilteringServerHandler()
    {
    }

    public override global::System.Linq.IQueryable<T> Filtering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.FilteringEventArgs e)
    {
      return query;
    }


  }

  public partial class DepartmentUiFilteringServerHandler<T>
    : global::Sungero.Domain.EntityUiFilteringServerHandler<T>
    where T : class, global::Sungero.Company.IDepartment
  {
  }

  public partial class DepartmentSearchDialogServerHandler : global::Sungero.CoreEntities.GroupSearchDialogServerHandler
   {
     private global::Sungero.Company.Server.DepartmentSearchDialogModel _dialog
     {
       get
       {
         return (global::Sungero.Company.Server.DepartmentSearchDialogModel)this.Dialog;
       }
     }

     public DepartmentSearchDialogServerHandler(global::Sungero.Company.Server.DepartmentSearchDialogModel dialog)
       : base(dialog)
     {
     }
   }

  public partial class DepartmentServerHandlers : global::Sungero.CoreEntities.GroupServerHandlers
  {
    private global::Sungero.Company.IDepartment _obj
    {
      get { return (global::Sungero.Company.IDepartment)this.Entity; }
    }

    public DepartmentServerHandlers(global::Sungero.Company.IDepartment entity)
      : base(entity)
    {
    }
  }

  public partial class DepartmentCreatingFromServerHandler : global::Sungero.CoreEntities.GroupCreatingFromServerHandler
  {
    private global::Sungero.Company.IDepartment _source
    {
      get { return (global::Sungero.Company.IDepartment)this.Source; }
    }

    private global::Sungero.Company.IDepartmentInfo _info
    {
      get { return (global::Sungero.Company.IDepartmentInfo)this._Info; }
    }

    public DepartmentCreatingFromServerHandler(global::Sungero.Company.IDepartment source, global::Sungero.Company.IDepartmentInfo info)
      : base(source, info)
    {
    }
  }

}

// ==================================================================
// DepartmentEventArgs.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Company.Server
{
}

// ==================================================================
// DepartmentAccessRights.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Company.Server
{
  public class DepartmentAccessRights : 
    Sungero.CoreEntities.Server.GroupAccessRights, Sungero.Company.IDepartmentAccessRights
  {

    public DepartmentAccessRights(global::Sungero.Domain.Shared.IEntity entity) : base(entity)
    {
    }
  }

  public class DepartmentTypeAccessRights : 
    Sungero.CoreEntities.Server.GroupTypeAccessRights, Sungero.Company.IDepartmentAccessRights
  {

    public DepartmentTypeAccessRights(global::System.Type entityType) : base(entityType)
    {
    }
  }
}

// ==================================================================
// DepartmentRepositoryImplementer.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Company.Server
{
    public class DepartmentRepositoryImplementer<T> : 
      global::Sungero.CoreEntities.Server.GroupRepositoryImplementer<T>,
      global::Sungero.Company.IDepartmentRepositoryImplementer<T>
      where T : global::Sungero.Company.IDepartment 
    {
       public new global::Sungero.Company.IDepartmentAccessRights AccessRights
       {
          get { return (global::Sungero.Company.IDepartmentAccessRights)base.AccessRights; }
       }

       public new global::Sungero.Company.IDepartmentInfo Info
       {
          get { return (global::Sungero.Company.IDepartmentInfo)base.Info; }
       }

       protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
       {
         return new global::Sungero.Company.Server.DepartmentTypeAccessRights(typeof(T));
       }
    }
}

// ==================================================================
// DepartmentPanelNavigationFilters.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Company.Server
{
}

// ==================================================================
// DepartmentServerFunctions.g.cs
// ==================================================================

namespace Sungero.Company.Server
{
  public partial class DepartmentFunctions : global::Sungero.CoreEntities.Server.GroupFunctions
  {
    private global::Sungero.Company.IDepartment _obj
    {
      get { return (global::Sungero.Company.IDepartment)this.Entity; }
    }

    public DepartmentFunctions(global::Sungero.Company.IDepartment entity) : base(entity) { }
  }
}

// ==================================================================
// DepartmentFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Company.Functions
{
  internal static class Department
  {
    /// <redirect project="Sungero.Company.Server" type="Sungero.Company.Server.DepartmentFunctions" />
    internal static  void CreateSystemSubstitutions(System.Collections.Generic.IEnumerable<global::Sungero.CoreEntities.IUser> users, global::Sungero.CoreEntities.IUser manager)
    {
    global::Sungero.Company.Server.DepartmentFunctions.CreateSystemSubstitutions(users, manager);
    }
    /// <redirect project="Sungero.Company.Server" type="Sungero.Company.Server.DepartmentFunctions" />
    internal static  void DeleteSystemSubstitutions(System.Collections.Generic.IEnumerable<global::Sungero.CoreEntities.IUser> users, global::Sungero.CoreEntities.IUser manager)
    {
    global::Sungero.Company.Server.DepartmentFunctions.DeleteSystemSubstitutions(users, manager);
    }
    /// <redirect project="Sungero.Company.Server" type="Sungero.Company.Server.DepartmentFunctions" />
    internal static  global::System.Linq.IQueryable<global::Sungero.Company.IEmployee> GetDeletedEmployees(global::Sungero.Company.IDepartment department)
    {
      var functions = (global::Sungero.Company.Server.DepartmentFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)department).FunctionsContainer.ServerFunctions;
      return functions.GetDeletedEmployees();
    }
    /// <redirect project="Sungero.Company.Server" type="Sungero.Company.Server.DepartmentFunctions" />
    internal static  void SynchronizeManagerInRole(global::Sungero.Company.IDepartment department)
    {
      var functions = (global::Sungero.Company.Server.DepartmentFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)department).FunctionsContainer.ServerFunctions;
    functions.SynchronizeManagerInRole();
    }
    /// <redirect project="Sungero.Company.Server" type="Sungero.Company.Server.DepartmentFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static  global::System.Linq.IQueryable<global::Sungero.Company.IDepartment> GetDepartments()
    {
      return global::Sungero.Company.Server.DepartmentFunctions.GetDepartments();
    }
    /// <redirect project="Sungero.Company.Server" type="Sungero.Company.Server.DepartmentFunctions" />
    internal static  global::Sungero.Company.IDepartment GetDepartment(global::Sungero.Company.IEmployee employee)
    {
      return global::Sungero.Company.Server.DepartmentFunctions.GetDepartment(employee);
    }

  }
}

// ==================================================================
// DepartmentServerPublicFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Company.Server
{
  public class DepartmentServerPublicFunctions : global::Sungero.Company.Server.IDepartmentServerPublicFunctions
  {
    public global::Sungero.Company.IDepartment GetDepartment(global::Sungero.Company.IEmployee employee)
    {
      return global::Sungero.Company.Functions.Department.GetDepartment(employee);
    }
  }
}

// ==================================================================
// DepartmentQueries.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Company.Queries
{
  public class Department
  {
    private static global::Sungero.Domain.SqlQueryResolver resolver = new global::Sungero.Domain.SqlQueryResolver("Sungero.Company.Server.Department.DepartmentQueries.xml", System.Reflection.Assembly.GetExecutingAssembly());
  }
}
