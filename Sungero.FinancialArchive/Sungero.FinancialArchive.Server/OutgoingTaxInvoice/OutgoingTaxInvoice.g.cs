
// ==================================================================
// OutgoingTaxInvoice.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.FinancialArchive.Server
{
    public class OutgoingTaxInvoiceFilter<T> :
      global::Sungero.Docflow.Server.AccountingDocumentBaseFilter<T>
      where T : class, global::Sungero.FinancialArchive.IOutgoingTaxInvoice
    {
      private global::Sungero.FinancialArchive.IOutgoingTaxInvoiceFilterState filter
      {
        get
        {
          return (Sungero.FinancialArchive.IOutgoingTaxInvoiceFilterState)this.Filter;
        }
      }

      protected override global::System.Linq.IQueryable<T> ApplyAppliedFilter(global::System.Linq.IQueryable<T> query)
      {
        return base.ApplyAppliedFilter(query);
      }

      public OutgoingTaxInvoiceFilter(global::Sungero.FinancialArchive.IOutgoingTaxInvoiceFilterState filter)
      : base(filter)
      {
      }

      protected OutgoingTaxInvoiceFilter()
      {
      }
    }
    public class OutgoingTaxInvoiceSearchDialogModel : global::Sungero.Docflow.Server.AccountingDocumentBaseSearchDialogModel
        {
                  public override global::System.Int32? Id { get; protected set; }
                  public override global::System.String Name { get; protected set; }
                  public override global::System.Boolean? IsAdjustment { get; protected set; }
                  public override global::System.String Subject { get; protected set; }


                  public override global::System.Collections.Generic.IEnumerable<Sungero.Core.Enumeration> VerificationState { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<Sungero.Content.IAssociatedApplication> AssociatedApplication { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<Sungero.CoreEntities.IRecipient> Author { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<CommonLibrary.DateRangeValue> Created { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<Sungero.Docflow.IDocumentKind> DocumentKind { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<Sungero.Company.IBusinessUnit> BusinessUnit { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<Sungero.Company.IDepartment> Department { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<Sungero.Parties.ICounterparty> Counterparty { get; protected set; }
                  [Sungero.Domain.Shared.HideInDevStudio()]
                  public override global::System.Collections.Generic.IEnumerable<Sungero.Parties.IContact> CounterpartySignatory { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<Sungero.Docflow.IAccountingDocumentBase> Corrected { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<Sungero.Docflow.IOfficialDocument> LeadingDocument { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<Sungero.CoreEntities.IRecipient> OurSignatory { get; protected set; }
                  [Sungero.Domain.Shared.HideInDevStudio()]
                  public override global::System.Collections.Generic.IEnumerable<Sungero.CoreEntities.IRecipient> ResponsibleEmployee { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<Sungero.Parties.IContact> Contact { get; protected set; }




                   public new OutgoingTaxInvoiceVersionsModel Versions { get { return (OutgoingTaxInvoiceVersionsModel)base.Versions; } protected set { base.Versions = value; } }
                   [Sungero.Domain.Shared.HideInDevStudio()]
                   public new OutgoingTaxInvoiceTrackingModel Tracking { get { return (OutgoingTaxInvoiceTrackingModel)base.Tracking; } protected set { base.Tracking = value; } }

        }

      public class OutgoingTaxInvoiceVersionsModel : global::Sungero.Docflow.Server.AccountingDocumentBaseVersionsModel
          {
                      [Sungero.Domain.Shared.HideInDevStudio()]
                      public override global::System.Int32? Id { get; protected set; }
                      public override global::System.String Body { get; protected set; }




         }
      public class OutgoingTaxInvoiceTrackingModel : global::Sungero.Docflow.Server.AccountingDocumentBaseTrackingModel
          {
                      [Sungero.Domain.Shared.HideInDevStudio()]
                      public override global::System.Int32? Id { get; protected set; }




         }




  public class OutgoingTaxInvoiceFilterForCorrected<TQueryEntity, TSourceEntity>
    : global::Sungero.Docflow.Server.AccountingDocumentBaseFilterForCorrected<TQueryEntity, TSourceEntity>
    where TQueryEntity : class, global::Sungero.Docflow.IAccountingDocumentBase
    where TSourceEntity : class, global::Sungero.FinancialArchive.IOutgoingTaxInvoice
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, TSourceEntity sourceEntity)
    {
      var args = new global::Sungero.Domain.PropertyFilteringEventArgs(sourceEntity);
      var result = new global::Sungero.FinancialArchive.OutgoingTaxInvoiceCorrectedPropertyFilteringServerHandler<TQueryEntity>(sourceEntity).CorrectedFiltering(query, args);
      if (args.DisableUiFiltering)
        global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public OutgoingTaxInvoiceFilterForCorrected(string propertyName)
      : base(propertyName)
    {
    }
  }



  [global::Sungero.Domain.Filter(typeof(global::Sungero.FinancialArchive.Server.OutgoingTaxInvoiceFilter<global::Sungero.FinancialArchive.IOutgoingTaxInvoice>))]
  [global::Sungero.Domain.PropertyFilter(typeof(global::Sungero.FinancialArchive.Server.OutgoingTaxInvoiceFilterForCorrected<global::Sungero.Docflow.IAccountingDocumentBase, global::Sungero.FinancialArchive.IOutgoingTaxInvoice>), "Corrected")]


  public class OutgoingTaxInvoice :
    global::Sungero.Docflow.Server.AccountingDocumentBase, global::Sungero.FinancialArchive.IOutgoingTaxInvoice, global::Sungero.Domain.Shared.ISecurableEntity, global::Sungero.Domain.IInternalSecurableEntity
  {
    public static new readonly global::System.Guid ClassTypeGuid = global::System.Guid.Parse("f50c4d8a-56bc-43ef-bac3-856f57ca70be");

    public override global::System.Guid TypeGuid
    {
      get { return global::Sungero.FinancialArchive.Server.OutgoingTaxInvoice.ClassTypeGuid; }
    }

    public override string TypeName
    {
      get { return "Sungero.FinancialArchive.IOutgoingTaxInvoice, Sungero.Domain.Interfaces"; }
    }

    public override string DisplayValue
    {
      get { return this.Name; }
      set { this.Name = value; }
    }

    public new virtual global::Sungero.FinancialArchive.IOutgoingTaxInvoiceState State
    {
      get { return (global::Sungero.FinancialArchive.IOutgoingTaxInvoiceState)base.State; }
    }

    protected override global::Sungero.Domain.Shared.IEntityState CreateState()
    {
      return new global::Sungero.FinancialArchive.Shared.OutgoingTaxInvoiceState(this);
    }

    public new virtual global::Sungero.FinancialArchive.IOutgoingTaxInvoiceInfo Info
    {
      get { return (global::Sungero.FinancialArchive.IOutgoingTaxInvoiceInfo)base.Info; }
    }

    public new virtual global::Sungero.FinancialArchive.IOutgoingTaxInvoiceAccessRights AccessRights
    {
      get { return (global::Sungero.FinancialArchive.IOutgoingTaxInvoiceAccessRights)base.AccessRights; }
    }

    protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
    {
      return new global::Sungero.FinancialArchive.Server.OutgoingTaxInvoiceAccessRights(this);
    }

    protected override global::Sungero.Domain.EntityFunctions CreateServerFunctions()
    {
      return new global::Sungero.FinancialArchive.Server.OutgoingTaxInvoiceFunctions(this);
    }

    protected override global::Sungero.Domain.Shared.EntityFunctions CreateSharedFunctions()
    {
      return new global::Sungero.FinancialArchive.Shared.OutgoingTaxInvoiceFunctions(this);
    }

    protected override object CreateHandlers() {
      return new global::Sungero.FinancialArchive.OutgoingTaxInvoiceServerHandlers(this);
    }

    protected override object CreateSharedHandlers() {
      return new global::Sungero.FinancialArchive.OutgoingTaxInvoiceSharedHandlers(this);
    }









    protected override global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Content.IElectronicDocumentVersions> CreateVersionsCollection()
    {
      return new global::Sungero.Domain.ChildEntityCollection<global::Sungero.FinancialArchive.IOutgoingTaxInvoiceVersions>() { RootEntity = this };
    }
    protected override global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Docflow.IOfficialDocumentTracking> CreateTrackingCollection()
    {
      return new global::Sungero.Domain.ChildEntityCollection<global::Sungero.FinancialArchive.IOutgoingTaxInvoiceTracking>() { RootEntity = this };
    }


    protected override global::Sungero.Domain.Shared.EntityCreatingFromServerHandler CreateCreatingFromServerHandler(
      global::Sungero.Domain.Shared.IEntity entitySource)
    {
      return new global::Sungero.FinancialArchive.OutgoingTaxInvoiceCreatingFromServerHandler((global::Sungero.FinancialArchive.IOutgoingTaxInvoice)entitySource, this.Info);
    }

    #region Framework events





    #endregion


    public OutgoingTaxInvoice()
    {
    }

    protected override global::Sungero.Domain.Shared.EntityConvertingFromServerHandler CreateConvertingFromServerHandler(   
      global::Sungero.Domain.Shared.IEntity entitySource)
    {
      return new global::Sungero.FinancialArchive.OutgoingTaxInvoiceConvertingFromServerHandler((global::Sungero.Content.IElectronicDocument)entitySource, this.Info);
    }

  }
}

// ==================================================================
// OutgoingTaxInvoiceHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.FinancialArchive
{
  public partial class OutgoingTaxInvoiceCorrectedPropertyFilteringServerHandler<T>
    : global::Sungero.Docflow.AccountingDocumentBaseCorrectedPropertyFilteringServerHandler<T>
    where T : class, global::Sungero.Docflow.IAccountingDocumentBase
  {
    private global::Sungero.FinancialArchive.IOutgoingTaxInvoice _obj
    {
      get { return (global::Sungero.FinancialArchive.IOutgoingTaxInvoice)this.Entity; }
    }

    public OutgoingTaxInvoiceCorrectedPropertyFilteringServerHandler(global::Sungero.FinancialArchive.IOutgoingTaxInvoice entity)
      : base(entity)
    {
    }
  }



  public partial class OutgoingTaxInvoiceFilteringServerHandler<T>
    : global::Sungero.Docflow.AccountingDocumentBaseFilteringServerHandler<T>  
    where T : class, global::Sungero.FinancialArchive.IOutgoingTaxInvoice
  {
    private global::Sungero.FinancialArchive.IOutgoingTaxInvoiceFilterState _filter
    {
      get
      {
        return (Sungero.FinancialArchive.IOutgoingTaxInvoiceFilterState)this.Filter;
      }
    }

    public OutgoingTaxInvoiceFilteringServerHandler(global::Sungero.FinancialArchive.IOutgoingTaxInvoiceFilterState filter)
    : base(filter)
    {
    }

    protected OutgoingTaxInvoiceFilteringServerHandler()
    {
    }

    public override global::System.Linq.IQueryable<T> Filtering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.FilteringEventArgs e)
    {
      query = base.Filtering(query, e);
            return query;
    }

      public override global::System.Linq.IQueryable<Sungero.Company.IBusinessUnit> BusinessUnitFiltering(global::System.Linq.IQueryable<Sungero.Company.IBusinessUnit> query, global::Sungero.Domain.FilteringEventArgs e)
      {
        query = base.BusinessUnitFiltering(query, e);
              return query;
      }

      public override global::System.Linq.IQueryable<Sungero.Company.IDepartment> DepartmentFiltering(global::System.Linq.IQueryable<Sungero.Company.IDepartment> query, global::Sungero.Domain.FilteringEventArgs e)
      {
        query = base.DepartmentFiltering(query, e);
              return query;
      }

      public override global::System.Linq.IQueryable<Sungero.Parties.ICounterparty> CounterpartyFiltering(global::System.Linq.IQueryable<Sungero.Parties.ICounterparty> query, global::Sungero.Domain.FilteringEventArgs e)
      {
        query = base.CounterpartyFiltering(query, e);
              return query;
      }


  }

  public partial class OutgoingTaxInvoiceSearchDialogServerHandler : global::Sungero.Docflow.AccountingDocumentBaseSearchDialogServerHandler
   {
     private global::Sungero.FinancialArchive.Server.OutgoingTaxInvoiceSearchDialogModel _dialog
     {
       get
       {
         return (global::Sungero.FinancialArchive.Server.OutgoingTaxInvoiceSearchDialogModel)this.Dialog;
       }
     }

     public OutgoingTaxInvoiceSearchDialogServerHandler(global::Sungero.FinancialArchive.Server.OutgoingTaxInvoiceSearchDialogModel dialog)
       : base(dialog)
     {
     }
   }

  public partial class OutgoingTaxInvoiceServerHandlers : global::Sungero.Docflow.AccountingDocumentBaseServerHandlers
  {
    private global::Sungero.FinancialArchive.IOutgoingTaxInvoice _obj
    {
      get { return (global::Sungero.FinancialArchive.IOutgoingTaxInvoice)this.Entity; }
    }

    public OutgoingTaxInvoiceServerHandlers(global::Sungero.FinancialArchive.IOutgoingTaxInvoice entity)
      : base(entity)
    {
    }
  }

  public partial class OutgoingTaxInvoiceCreatingFromServerHandler : global::Sungero.Docflow.AccountingDocumentBaseCreatingFromServerHandler
  {
    private global::Sungero.FinancialArchive.IOutgoingTaxInvoice _source
    {
      get { return (global::Sungero.FinancialArchive.IOutgoingTaxInvoice)this.Source; }
    }

    private global::Sungero.FinancialArchive.IOutgoingTaxInvoiceInfo _info
    {
      get { return (global::Sungero.FinancialArchive.IOutgoingTaxInvoiceInfo)this._Info; }
    }

    public OutgoingTaxInvoiceCreatingFromServerHandler(global::Sungero.FinancialArchive.IOutgoingTaxInvoice source, global::Sungero.FinancialArchive.IOutgoingTaxInvoiceInfo info)
      : base(source, info)
    {
    }
  }

}

// ==================================================================
// OutgoingTaxInvoiceEventArgs.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.FinancialArchive.Server
{
}

// ==================================================================
// OutgoingTaxInvoiceAccessRights.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.FinancialArchive.Server
{
  public class OutgoingTaxInvoiceAccessRights : 
    Sungero.Docflow.Server.AccountingDocumentBaseAccessRights, Sungero.FinancialArchive.IOutgoingTaxInvoiceAccessRights
  {

    public OutgoingTaxInvoiceAccessRights(global::Sungero.Domain.Shared.IEntity entity) : base(entity)
    {
    }
  }

  public class OutgoingTaxInvoiceTypeAccessRights : 
    Sungero.Docflow.Server.AccountingDocumentBaseTypeAccessRights, Sungero.FinancialArchive.IOutgoingTaxInvoiceAccessRights
  {

    public OutgoingTaxInvoiceTypeAccessRights(global::System.Type entityType) : base(entityType)
    {
    }
  }
}

// ==================================================================
// OutgoingTaxInvoiceRepositoryImplementer.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.FinancialArchive.Server
{
    public class OutgoingTaxInvoiceRepositoryImplementer<T> : 
      global::Sungero.Docflow.Server.AccountingDocumentBaseRepositoryImplementer<T>,
      global::Sungero.FinancialArchive.IOutgoingTaxInvoiceRepositoryImplementer<T>
      where T : global::Sungero.FinancialArchive.IOutgoingTaxInvoice 
    {
       public new global::Sungero.FinancialArchive.IOutgoingTaxInvoiceAccessRights AccessRights
       {
          get { return (global::Sungero.FinancialArchive.IOutgoingTaxInvoiceAccessRights)base.AccessRights; }
       }

       public new global::Sungero.FinancialArchive.IOutgoingTaxInvoiceInfo Info
       {
          get { return (global::Sungero.FinancialArchive.IOutgoingTaxInvoiceInfo)base.Info; }
       }

       protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
       {
         return new global::Sungero.FinancialArchive.Server.OutgoingTaxInvoiceTypeAccessRights(typeof(T));
       }
    }
}

// ==================================================================
// OutgoingTaxInvoicePanelNavigationFilters.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.FinancialArchive.Server
{
    public class OutgoingTaxInvoiceBusinessUnitPanelNavigationFilter : global::Sungero.Docflow.Server.AccountingDocumentBaseBusinessUnitPanelNavigationFilter
    {
      private global::System.Linq.IQueryable Apply<T>(global::System.Linq.IQueryable query) where T: class, global::Sungero.FinancialArchive.IOutgoingTaxInvoice
      {
        var typedQuery = (global::System.Linq.IQueryable<global::Sungero.Company.IBusinessUnit>)query;
        var typedState = (global::Sungero.FinancialArchive.IOutgoingTaxInvoiceFilterState)this.State;
        var handlers = new global::Sungero.FinancialArchive.OutgoingTaxInvoiceFilteringServerHandler<T>(typedState);
        var args = new global::Sungero.Domain.FilteringEventArgs();
        var result = handlers.BusinessUnitFiltering(typedQuery, args);
        if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<global::Sungero.Company.IBusinessUnit>();
        return result;
      }

      public override global::System.Linq.IQueryable Apply(global::System.Linq.IQueryable query)
      {
        return this.Apply<global::Sungero.FinancialArchive.IOutgoingTaxInvoice>(query);
      }
    }

    public class OutgoingTaxInvoiceDepartmentPanelNavigationFilter : global::Sungero.Docflow.Server.AccountingDocumentBaseDepartmentPanelNavigationFilter
    {
      private global::System.Linq.IQueryable Apply<T>(global::System.Linq.IQueryable query) where T: class, global::Sungero.FinancialArchive.IOutgoingTaxInvoice
      {
        var typedQuery = (global::System.Linq.IQueryable<global::Sungero.Company.IDepartment>)query;
        var typedState = (global::Sungero.FinancialArchive.IOutgoingTaxInvoiceFilterState)this.State;
        var handlers = new global::Sungero.FinancialArchive.OutgoingTaxInvoiceFilteringServerHandler<T>(typedState);
        var args = new global::Sungero.Domain.FilteringEventArgs();
        var result = handlers.DepartmentFiltering(typedQuery, args);
        if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<global::Sungero.Company.IDepartment>();
        return result;
      }

      public override global::System.Linq.IQueryable Apply(global::System.Linq.IQueryable query)
      {
        return this.Apply<global::Sungero.FinancialArchive.IOutgoingTaxInvoice>(query);
      }
    }

    public class OutgoingTaxInvoiceCounterpartyPanelNavigationFilter : global::Sungero.Docflow.Server.AccountingDocumentBaseCounterpartyPanelNavigationFilter
    {
      private global::System.Linq.IQueryable Apply<T>(global::System.Linq.IQueryable query) where T: class, global::Sungero.FinancialArchive.IOutgoingTaxInvoice
      {
        var typedQuery = (global::System.Linq.IQueryable<global::Sungero.Parties.ICounterparty>)query;
        var typedState = (global::Sungero.FinancialArchive.IOutgoingTaxInvoiceFilterState)this.State;
        var handlers = new global::Sungero.FinancialArchive.OutgoingTaxInvoiceFilteringServerHandler<T>(typedState);
        var args = new global::Sungero.Domain.FilteringEventArgs();
        var result = handlers.CounterpartyFiltering(typedQuery, args);
        if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<global::Sungero.Parties.ICounterparty>();
        return result;
      }

      public override global::System.Linq.IQueryable Apply(global::System.Linq.IQueryable query)
      {
        return this.Apply<global::Sungero.FinancialArchive.IOutgoingTaxInvoice>(query);
      }
    }

}

// ==================================================================
// OutgoingTaxInvoiceServerFunctions.g.cs
// ==================================================================

namespace Sungero.FinancialArchive.Server
{
  public partial class OutgoingTaxInvoiceFunctions : global::Sungero.Docflow.Server.AccountingDocumentBaseFunctions
  {
    private global::Sungero.FinancialArchive.IOutgoingTaxInvoice _obj
    {
      get { return (global::Sungero.FinancialArchive.IOutgoingTaxInvoice)this.Entity; }
    }

    public OutgoingTaxInvoiceFunctions(global::Sungero.FinancialArchive.IOutgoingTaxInvoice entity) : base(entity) { }
  }
}

// ==================================================================
// OutgoingTaxInvoiceFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.FinancialArchive.Functions
{
  internal static class OutgoingTaxInvoice
  {
    /// <redirect project="Sungero.FinancialArchive.Shared" type="Sungero.FinancialArchive.Shared.OutgoingTaxInvoiceFunctions" />
    internal static  void FillName(global::Sungero.FinancialArchive.IOutgoingTaxInvoice outgoingTaxInvoice)
    {
      var functions = (global::Sungero.FinancialArchive.Shared.OutgoingTaxInvoiceFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)outgoingTaxInvoice).FunctionsContainer.SharedFunctions;
    functions.FillName();
    }
    /// <redirect project="Sungero.FinancialArchive.Shared" type="Sungero.FinancialArchive.Shared.OutgoingTaxInvoiceFunctions" />
    internal static  global::System.Boolean IsVerificationModeSupported(global::Sungero.FinancialArchive.IOutgoingTaxInvoice outgoingTaxInvoice)
    {
      var functions = (global::Sungero.FinancialArchive.Shared.OutgoingTaxInvoiceFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)outgoingTaxInvoice).FunctionsContainer.SharedFunctions;
      return functions.IsVerificationModeSupported();
    }

  }
}

// ==================================================================
// OutgoingTaxInvoiceServerPublicFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.FinancialArchive.Server
{
  public class OutgoingTaxInvoiceServerPublicFunctions : global::Sungero.FinancialArchive.Server.IOutgoingTaxInvoiceServerPublicFunctions
  {
  }
}

// ==================================================================
// OutgoingTaxInvoiceQueries.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.FinancialArchive.Queries
{
  public class OutgoingTaxInvoice
  {
    private static global::Sungero.Domain.SqlQueryResolver resolver = new global::Sungero.Domain.SqlQueryResolver("Sungero.FinancialArchive.Server.OutgoingTaxInvoice.OutgoingTaxInvoiceQueries.xml", System.Reflection.Assembly.GetExecutingAssembly());
  }
}

// ==================================================================
// OutgoingTaxInvoiceServerHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.FinancialArchive
{
  public partial class OutgoingTaxInvoiceConvertingFromServerHandler : global::Sungero.Docflow.AccountingDocumentBaseConvertingFromServerHandler
  { 
    private global::Sungero.FinancialArchive.IOutgoingTaxInvoiceInfo _info
    {
      get { return (global::Sungero.FinancialArchive.IOutgoingTaxInvoiceInfo)this._Info; }
    }

    public OutgoingTaxInvoiceConvertingFromServerHandler(global::Sungero.Content.IElectronicDocument source, global::Sungero.FinancialArchive.IOutgoingTaxInvoiceInfo info)
      : base(source, info)
    {
    }
  }
}
