
// ==================================================================
// ModuleFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Functions
{
  internal static partial class Module
  {
    /// <redirect project="Sungero.Docflow.ClientBase" type="Sungero.Docflow.Client.ModuleFunctions" />
    internal static global::System.Boolean CalculateParams(Sungero.Presentation.FormRefreshEventArgs e, global::Sungero.Docflow.IRegistrationGroup registrationGroup, global::System.Boolean calculateIsSubstitute, global::System.Boolean calculateIsAdministrator, global::System.Boolean calculateIsUsed, global::System.Boolean calculateHasDocuments, global::Sungero.Docflow.IDocumentRegister documentRegister)
    {
        return global::Sungero.Docflow.Client.ModuleFunctions.CalculateParams(e, registrationGroup, calculateIsSubstitute, calculateIsAdministrator, calculateIsUsed, calculateHasDocuments, documentRegister);
    }
    /// <redirect project="Sungero.Docflow.ClientBase" type="Sungero.Docflow.Client.ModuleFunctions" />
    internal static global::System.Boolean CalculateParams(Sungero.Domain.Client.CanExecuteActionArgs e, global::Sungero.Docflow.IDocumentRegister documentRegister, global::System.Boolean calculateIsAdministrator)
    {
        return global::Sungero.Docflow.Client.ModuleFunctions.CalculateParams(e, documentRegister, calculateIsAdministrator);
    }
    /// <redirect project="Sungero.Docflow.ClientBase" type="Sungero.Docflow.Client.ModuleFunctions" />
    internal static global::System.Nullable<global::System.Boolean> ShowDialogGrantAccessRights(global::Sungero.Workflow.IAssignmentBase assignment, global::System.Collections.Generic.List<global::Sungero.Domain.Shared.IEntity> attachments)
    {
        return global::Sungero.Docflow.Client.ModuleFunctions.ShowDialogGrantAccessRights(assignment, attachments);
    }
    /// <redirect project="Sungero.Docflow.ClientBase" type="Sungero.Docflow.Client.ModuleFunctions" />
    internal static global::System.Boolean ShowDialogGrantAccessRightsWithConfirmationDialog(global::Sungero.Workflow.IAssignmentBase assignment, global::System.Collections.Generic.List<global::Sungero.Domain.Shared.IEntity> attachments, Domain.Shared.IActionInfo action)
    {
        return global::Sungero.Docflow.Client.ModuleFunctions.ShowDialogGrantAccessRightsWithConfirmationDialog(assignment, attachments, action);
    }
    /// <redirect project="Sungero.Docflow.ClientBase" type="Sungero.Docflow.Client.ModuleFunctions" />
    internal static global::System.Boolean ShowDialogGrantAccessRightsWithConfirmationDialog(global::Sungero.Workflow.IAssignmentBase assignment, global::System.Collections.Generic.List<global::Sungero.Domain.Shared.IEntity> attachments, Domain.Shared.IActionInfo action, global::System.String dialogID)
    {
        return global::Sungero.Docflow.Client.ModuleFunctions.ShowDialogGrantAccessRightsWithConfirmationDialog(assignment, attachments, action, dialogID);
    }
    /// <redirect project="Sungero.Docflow.ClientBase" type="Sungero.Docflow.Client.ModuleFunctions" />
    internal static global::System.Nullable<global::System.Boolean> ShowDialogGrantAccessRights(global::Sungero.Workflow.IAssignmentBase assignment, global::System.Collections.Generic.List<global::Sungero.Domain.Shared.IEntity> attachments, global::System.Collections.Generic.List<global::Sungero.CoreEntities.IRecipient> additionalAssignees)
    {
        return global::Sungero.Docflow.Client.ModuleFunctions.ShowDialogGrantAccessRights(assignment, attachments, additionalAssignees);
    }
    /// <redirect project="Sungero.Docflow.ClientBase" type="Sungero.Docflow.Client.ModuleFunctions" />
    internal static global::System.Boolean ShowDialogGrantAccessRightsWithConfirmationDialog(global::Sungero.Workflow.IAssignmentBase assignment, global::System.Collections.Generic.List<global::Sungero.Domain.Shared.IEntity> attachments, global::System.Collections.Generic.List<global::Sungero.CoreEntities.IRecipient> additionalAssignees, Domain.Shared.IActionInfo action)
    {
        return global::Sungero.Docflow.Client.ModuleFunctions.ShowDialogGrantAccessRightsWithConfirmationDialog(assignment, attachments, additionalAssignees, action);
    }
    /// <redirect project="Sungero.Docflow.ClientBase" type="Sungero.Docflow.Client.ModuleFunctions" />
    internal static global::System.Boolean ShowDialogGrantAccessRightsWithConfirmationDialog(global::Sungero.Workflow.IAssignmentBase assignment, global::System.Collections.Generic.List<global::Sungero.Domain.Shared.IEntity> attachments, global::System.Collections.Generic.List<global::Sungero.CoreEntities.IRecipient> additionalAssignees, Domain.Shared.IActionInfo action, global::System.String dialogID)
    {
        return global::Sungero.Docflow.Client.ModuleFunctions.ShowDialogGrantAccessRightsWithConfirmationDialog(assignment, attachments, additionalAssignees, action, dialogID);
    }
    /// <redirect project="Sungero.Docflow.ClientBase" type="Sungero.Docflow.Client.ModuleFunctions" />
    internal static global::System.Nullable<global::System.Boolean> ShowDialogGrantAccessRights(global::Sungero.Workflow.ITask task, global::System.Collections.Generic.List<global::Sungero.Domain.Shared.IEntity> attachments)
    {
        return global::Sungero.Docflow.Client.ModuleFunctions.ShowDialogGrantAccessRights(task, attachments);
    }
    /// <redirect project="Sungero.Docflow.ClientBase" type="Sungero.Docflow.Client.ModuleFunctions" />
    internal static global::System.Boolean ShowDialogGrantAccessRightsWithConfirmationDialog(global::Sungero.Workflow.ITask task, global::System.Collections.Generic.List<global::Sungero.Domain.Shared.IEntity> attachments, Domain.Shared.IActionInfo action)
    {
        return global::Sungero.Docflow.Client.ModuleFunctions.ShowDialogGrantAccessRightsWithConfirmationDialog(task, attachments, action);
    }
    /// <redirect project="Sungero.Docflow.ClientBase" type="Sungero.Docflow.Client.ModuleFunctions" />
    internal static global::System.Boolean ShowDialogGrantAccessRightsWithConfirmationDialog(global::Sungero.Workflow.ITask task, global::System.Collections.Generic.List<global::Sungero.Domain.Shared.IEntity> attachments, Domain.Shared.IActionInfo action, global::System.String dialogID)
    {
        return global::Sungero.Docflow.Client.ModuleFunctions.ShowDialogGrantAccessRightsWithConfirmationDialog(task, attachments, action, dialogID);
    }
    /// <redirect project="Sungero.Docflow.ClientBase" type="Sungero.Docflow.Client.ModuleFunctions" />
    internal static global::System.Boolean ShowDialogGrantAccessRightsWithConfirmationDialog(global::Sungero.Workflow.ITask task, global::System.Collections.Generic.List<global::Sungero.Domain.Shared.IEntity> attachments, global::System.Collections.Generic.List<global::Sungero.CoreEntities.IRecipient> additionalAssignees, Domain.Shared.IActionInfo action, global::System.String dialogID)
    {
        return global::Sungero.Docflow.Client.ModuleFunctions.ShowDialogGrantAccessRightsWithConfirmationDialog(task, attachments, additionalAssignees, action, dialogID);
    }
    /// <redirect project="Sungero.Docflow.ClientBase" type="Sungero.Docflow.Client.ModuleFunctions" />
    internal static global::System.Nullable<global::System.Boolean> ShowDialogGrantAccessRights(global::Sungero.Workflow.ITask task, global::System.Collections.Generic.List<global::Sungero.Domain.Shared.IEntity> attachments, global::System.Collections.Generic.List<global::Sungero.CoreEntities.IRecipient> additionalAssignees)
    {
        return global::Sungero.Docflow.Client.ModuleFunctions.ShowDialogGrantAccessRights(task, attachments, additionalAssignees);
    }
    /// <redirect project="Sungero.Docflow.ClientBase" type="Sungero.Docflow.Client.ModuleFunctions" />
    internal static global::Sungero.Docflow.IOfficialDocument CreateCoverLetter(global::Sungero.Docflow.IOfficialDocument document)
    {
        return global::Sungero.Docflow.Client.ModuleFunctions.CreateCoverLetter(document);
    }
    /// <redirect project="Sungero.Docflow.ClientBase" type="Sungero.Docflow.Client.ModuleFunctions" />
    internal static global::Sungero.Workflow.ITask CreateActionItemExecution(global::Sungero.Docflow.IOfficialDocument document)
    {
        return global::Sungero.Docflow.Client.ModuleFunctions.CreateActionItemExecution(document);
    }
    /// <redirect project="Sungero.Docflow.ClientBase" type="Sungero.Docflow.Client.ModuleFunctions" />
    internal static global::Sungero.Workflow.ITask CreateActionItemExecution(global::Sungero.Docflow.IOfficialDocument document, global::System.Int32 parentAssignmentId)
    {
        return global::Sungero.Docflow.Client.ModuleFunctions.CreateActionItemExecution(document, parentAssignmentId);
    }
    /// <redirect project="Sungero.Docflow.ClientBase" type="Sungero.Docflow.Client.ModuleFunctions" />
    internal static global::Sungero.Workflow.ITask CreateActionItemExecutionWithResolution(global::Sungero.Docflow.IOfficialDocument document, global::System.Int32 parentAssignmentId, global::System.String resolution, global::Sungero.Company.IEmployee assignedBy)
    {
        return global::Sungero.Docflow.Client.ModuleFunctions.CreateActionItemExecutionWithResolution(document, parentAssignmentId, resolution, assignedBy);
    }
    /// <redirect project="Sungero.Docflow.ClientBase" type="Sungero.Docflow.Client.ModuleFunctions" />
    internal static global::Sungero.Workflow.ITask CreateDocumentReview(global::Sungero.Docflow.IOfficialDocument document)
    {
        return global::Sungero.Docflow.Client.ModuleFunctions.CreateDocumentReview(document);
    }
    /// <redirect project="Sungero.Docflow.ClientBase" type="Sungero.Docflow.Client.ModuleFunctions" />
    internal static void ShowSmartProcessingSettings()
    {
    ((global::Sungero.Docflow.Client.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.ClientBase)).ShowSmartProcessingSettings();
    }
    /// <redirect project="Sungero.Docflow.ClientBase" type="Sungero.Docflow.Client.ModuleFunctions" />
    internal static void RemoveNeedValidateRegisterFormatParameter(global::Sungero.Docflow.IOfficialDocument document, Sungero.Domain.Client.ExecuteActionArgs e)
    {
    global::Sungero.Docflow.Client.ModuleFunctions.RemoveNeedValidateRegisterFormatParameter(document, e);
    }
    /// <redirect project="Sungero.Docflow.ClientBase" type="Sungero.Docflow.Client.ModuleFunctions" />
    internal static void ShowCharts()
    {
    ((global::Sungero.Docflow.Client.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.ClientBase)).ShowCharts();
    }
    /// <redirect project="Sungero.Docflow.ClientBase" type="Sungero.Docflow.Client.ModuleFunctions" />
    internal static void EmployeeDiscipline(global::Sungero.Core.Enumeration performer, global::Sungero.Core.Enumeration period)
    {
    ((global::Sungero.Docflow.Client.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.ClientBase)).EmployeeDiscipline(performer, period);
    }
    /// <redirect project="Sungero.Docflow.ClientBase" type="Sungero.Docflow.Client.ModuleFunctions" />
    internal static void EmployeeDiscipline(global::Sungero.Company.IEmployee employee, global::Sungero.Core.Enumeration period, global::System.Boolean department)
    {
    ((global::Sungero.Docflow.Client.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.ClientBase)).EmployeeDiscipline(employee, period, department);
    }
    /// <redirect project="Sungero.Docflow.ClientBase" type="Sungero.Docflow.Client.ModuleFunctions" />
    internal static void EmployeeDiscipline(global::Sungero.Core.Enumeration period, global::Sungero.Company.IDepartment department)
    {
    ((global::Sungero.Docflow.Client.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.ClientBase)).EmployeeDiscipline(period, department);
    }
    /// <redirect project="Sungero.Docflow.ClientBase" type="Sungero.Docflow.Client.ModuleFunctions" />
    internal static void EmployeeAssignmentPage(global::Sungero.Company.IEmployee employee, global::System.Boolean overdue, global::Sungero.Core.Enumeration period, global::System.Boolean department)
    {
    ((global::Sungero.Docflow.Client.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.ClientBase)).EmployeeAssignmentPage(employee, overdue, period, department);
    }
    /// <redirect project="Sungero.Docflow.ClientBase" type="Sungero.Docflow.Client.ModuleFunctions" />
    internal static void EmployeeAssignmentPage(global::Sungero.Company.IDepartment department, global::System.Boolean overdue, global::Sungero.Core.Enumeration period)
    {
    ((global::Sungero.Docflow.Client.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.ClientBase)).EmployeeAssignmentPage(department, overdue, period);
    }
    /// <redirect project="Sungero.Docflow.ClientBase" type="Sungero.Docflow.Client.ModuleFunctions" />
    internal static void CheckReportDialogPeriod(CommonLibrary.InputDialogButtonClickEventArgs args, CommonLibrary.IDateDialogValue dialogPeriodBegin, CommonLibrary.IDateDialogValue dialogPeriodEnd)
    {
    global::Sungero.Docflow.Client.ModuleFunctions.CheckReportDialogPeriod(args, dialogPeriodBegin, dialogPeriodEnd);
    }
    /// <redirect project="Sungero.Docflow.ClientBase" type="Sungero.Docflow.Client.ModuleFunctions" />
    internal static void CheckDialogPeriod(CommonLibrary.InputDialogButtonClickEventArgs args, CommonLibrary.IDateDialogValue dialogPeriodBegin, CommonLibrary.IDateDialogValue dialogPeriodEnd)
    {
    global::Sungero.Docflow.Client.ModuleFunctions.CheckDialogPeriod(args, dialogPeriodBegin, dialogPeriodEnd);
    }
    /// <redirect project="Sungero.Docflow.ClientBase" type="Sungero.Docflow.Client.ModuleFunctions" />
    internal static global::System.String CheckDateByWorkCalendar(global::System.Nullable<global::System.DateTime> date)
    {
        return global::Sungero.Docflow.Client.ModuleFunctions.CheckDateByWorkCalendar(date);
    }
    /// <redirect project="Sungero.Docflow.ClientBase" type="Sungero.Docflow.Client.ModuleFunctions" />
    internal static global::System.String CheckDeadlineByWorkCalendar(global::System.Nullable<global::System.DateTime> deadline)
    {
        return global::Sungero.Docflow.Client.ModuleFunctions.CheckDeadlineByWorkCalendar(deadline);
    }
    /// <redirect project="Sungero.Docflow.ClientBase" type="Sungero.Docflow.Client.ModuleFunctions" />
    internal static global::System.String CheckDeadlineByWorkCalendar(global::Sungero.CoreEntities.IUser user, global::System.Nullable<global::System.DateTime> deadline)
    {
        return global::Sungero.Docflow.Client.ModuleFunctions.CheckDeadlineByWorkCalendar(user, deadline);
    }
    /// <redirect project="Sungero.Docflow.ClientBase" type="Sungero.Docflow.Client.ModuleFunctions" />
    internal static global::Sungero.Workflow.ITask CreateAcquaintanceTask(global::Sungero.Docflow.IOfficialDocument document)
    {
        return global::Sungero.Docflow.Client.ModuleFunctions.CreateAcquaintanceTask(document);
    }
    /// <redirect project="Sungero.Docflow.ClientBase" type="Sungero.Docflow.Client.ModuleFunctions" />
    internal static global::System.Boolean ShowConfirmationDialogCreationActionItem(global::Sungero.Workflow.IAssignment assignment, global::Sungero.Docflow.IOfficialDocument document, Sungero.Workflow.Client.ExecuteResultActionArgs e)
    {
        return global::Sungero.Docflow.Client.ModuleFunctions.ShowConfirmationDialogCreationActionItem(assignment, document, e);
    }
    /// <redirect project="Sungero.Docflow.ClientBase" type="Sungero.Docflow.Client.ModuleFunctions" />
    internal static global::System.Boolean ShowConfirmationDialogSendToCounterparty(global::Sungero.Workflow.IAssignment assignment, System.Collections.Generic.IEnumerable<global::System.Nullable<global::Sungero.Core.Enumeration>> collapsed, Sungero.Workflow.Client.ExecuteResultActionArgs e)
    {
        return global::Sungero.Docflow.Client.ModuleFunctions.ShowConfirmationDialogSendToCounterparty(assignment, collapsed, e);
    }
    /// <redirect project="Sungero.Docflow.ClientBase" type="Sungero.Docflow.Client.ModuleFunctions" />
    internal static global::System.Boolean ShowConfirmationDialog(global::System.String text, global::System.String description, global::System.String title, global::System.String dialogID)
    {
        return global::Sungero.Docflow.Client.ModuleFunctions.ShowConfirmationDialog(text, description, title, dialogID);
    }
    /// <redirect project="Sungero.Docflow.ClientBase" type="Sungero.Docflow.Client.ModuleFunctions" />
    internal static global::System.Boolean IsLockedByOther(global::Sungero.Domain.Shared.IEntity entity)
    {
        return global::Sungero.Docflow.Client.ModuleFunctions.IsLockedByOther(entity);
    }
    /// <redirect project="Sungero.Docflow.ClientBase" type="Sungero.Docflow.Client.ModuleFunctions" />
    internal static global::System.Boolean IsLocked(global::Sungero.Domain.Shared.IEntity entity)
    {
        return global::Sungero.Docflow.Client.ModuleFunctions.IsLocked(entity);
    }
    /// <redirect project="Sungero.Docflow.ClientBase" type="Sungero.Docflow.Client.ModuleFunctions" />
    internal static global::System.Boolean IsLockedByOther(global::Sungero.Domain.Shared.IEntity entity, Domain.Client.ExecuteActionArgs e)
    {
        return global::Sungero.Docflow.Client.ModuleFunctions.IsLockedByOther(entity, e);
    }
    /// <redirect project="Sungero.Docflow.ClientBase" type="Sungero.Docflow.Client.ModuleFunctions" />
    internal static global::System.Boolean VersionIsLocked(global::System.Collections.Generic.List<global::Sungero.Content.IElectronicDocumentVersions> versions)
    {
        return global::Sungero.Docflow.Client.ModuleFunctions.VersionIsLocked(versions);
    }
    /// <redirect project="Sungero.Docflow.ClientBase" type="Sungero.Docflow.Client.ModuleFunctions" />
    internal static void ShowAllReports()
    {
    ((global::Sungero.Docflow.Client.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.ClientBase)).ShowAllReports();
    }
    /// <redirect project="Sungero.Docflow.ClientBase" type="Sungero.Docflow.Client.ModuleFunctions" />
    internal static void ShowCurrentPersonalSettings()
    {
    ((global::Sungero.Docflow.Client.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.ClientBase)).ShowCurrentPersonalSettings();
    }
    /// <redirect project="Sungero.Docflow.ClientBase" type="Sungero.Docflow.Client.ModuleFunctions" />
    internal static void RunApprovalSheetReport(global::Sungero.Docflow.IOfficialDocument document)
    {
    ((global::Sungero.Docflow.Client.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.ClientBase)).RunApprovalSheetReport(document);
    }
    /// <redirect project="Sungero.Docflow.ClientBase" type="Sungero.Docflow.Client.ModuleFunctions" />
    internal static void RunExchangeOrderReport(global::Sungero.Docflow.IOfficialDocument document)
    {
    ((global::Sungero.Docflow.Client.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.ClientBase)).RunExchangeOrderReport(document);
    }
    /// <redirect project="Sungero.Docflow.ClientBase" type="Sungero.Docflow.Client.ModuleFunctions" />
    internal static void ApproveDocument(global::Sungero.Workflow.IAssignment assignment, global::System.Boolean needStrongSign, Sungero.Domain.Client.ExecuteActionArgs eventArgs)
    {
    ((global::Sungero.Docflow.Client.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.ClientBase)).ApproveDocument(assignment, needStrongSign, eventArgs);
    }
    /// <redirect project="Sungero.Docflow.ClientBase" type="Sungero.Docflow.Client.ModuleFunctions" />
    internal static void ApproveDocument(global::Sungero.Docflow.IOfficialDocument document, global::System.Collections.Generic.List<global::Sungero.Docflow.IOfficialDocument> addendas, global::Sungero.Company.IEmployee substituted, global::System.Boolean needStrongSign, global::System.String comment, Sungero.Domain.Client.ExecuteActionArgs eventArgs)
    {
    ((global::Sungero.Docflow.Client.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.ClientBase)).ApproveDocument(document, addendas, substituted, needStrongSign, comment, eventArgs);
    }
    /// <redirect project="Sungero.Docflow.ClientBase" type="Sungero.Docflow.Client.ModuleFunctions" />
    internal static void EndorseDocument(global::Sungero.Workflow.IAssignment assignment, global::System.Boolean endorse, global::System.Boolean needStrongSign, Sungero.Domain.Client.ExecuteActionArgs eventArgs)
    {
    ((global::Sungero.Docflow.Client.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.ClientBase)).EndorseDocument(assignment, endorse, needStrongSign, eventArgs);
    }
    /// <redirect project="Sungero.Docflow.ClientBase" type="Sungero.Docflow.Client.ModuleFunctions" />
    internal static void EndorseDocument(global::Sungero.Content.IElectronicDocument document, global::System.Collections.Generic.List<global::Sungero.Content.IElectronicDocument> addendas, global::Sungero.Company.IEmployee substituted, global::System.Boolean endorse, global::System.Boolean needStrongSign, global::System.String comment, Sungero.Domain.Client.ExecuteActionArgs eventArgs)
    {
    ((global::Sungero.Docflow.Client.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.ClientBase)).EndorseDocument(document, addendas, substituted, endorse, needStrongSign, comment, eventArgs);
    }
    /// <redirect project="Sungero.Docflow.ClientBase" type="Sungero.Docflow.Client.ModuleFunctions" />
    internal static global::System.Boolean ApproveWithAddenda(global::Sungero.Docflow.IOfficialDocument document, global::System.Collections.Generic.List<global::Sungero.Docflow.IOfficialDocument> addenda, global::Sungero.CoreEntities.ICertificate certificate, global::Sungero.Company.IEmployee substituted, global::System.Boolean endorseWhenApproveFailed, global::System.Boolean needStrongSign, global::System.String comment)
    {
        return ((global::Sungero.Docflow.Client.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.ClientBase)).ApproveWithAddenda(document, addenda, certificate, substituted, endorseWhenApproveFailed, needStrongSign, comment);
    }
    /// <redirect project="Sungero.Docflow.ClientBase" type="Sungero.Docflow.Client.ModuleFunctions" />
    internal static global::System.Boolean EndorseWithAddenda(global::Sungero.Content.IElectronicDocument document, global::System.Collections.Generic.List<global::Sungero.Content.IElectronicDocument> addenda, global::Sungero.CoreEntities.ICertificate certificate, global::Sungero.CoreEntities.IUser substituted, global::System.Boolean needStrongSign, global::System.String comment)
    {
        return ((global::Sungero.Docflow.Client.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.ClientBase)).EndorseWithAddenda(document, addenda, certificate, substituted, needStrongSign, comment);
    }
    /// <redirect project="Sungero.Docflow.ClientBase" type="Sungero.Docflow.Client.ModuleFunctions" />
    internal static global::System.String GetManyAddendumDialogSuccessfulNotify(global::System.Int32 countAddendums)
    {
        return ((global::Sungero.Docflow.Client.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.ClientBase)).GetManyAddendumDialogSuccessfulNotify(countAddendums);
    }
    /// <redirect project="Sungero.Docflow.ClientBase" type="Sungero.Docflow.Client.ModuleFunctions" />
    internal static void CreateAddendum(global::System.String addendumName, global::Sungero.Docflow.IOfficialDocument leadingDocument, System.Byte[] addendumContent)
    {
    ((global::Sungero.Docflow.Client.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.ClientBase)).CreateAddendum(addendumName, leadingDocument, addendumContent);
    }
    /// <redirect project="Sungero.Docflow.ClientBase" type="Sungero.Docflow.Client.ModuleFunctions" />
    internal static void AddManyAddendumDialog(global::Sungero.Docflow.IOfficialDocument document)
    {
    ((global::Sungero.Docflow.Client.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.ClientBase)).AddManyAddendumDialog(document);
    }

    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.String BoxToString(System.Collections.Generic.Dictionary<global::System.String, global::System.Boolean> result)
    {
        return global::Sungero.Docflow.Shared.ModuleFunctions.BoxToString(result);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static System.Collections.Generic.Dictionary<global::System.String, global::System.Boolean> UnboxDictionary(global::System.String result)
    {
        return global::Sungero.Docflow.Shared.ModuleFunctions.UnboxDictionary(result);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.Boolean HasSubActionItems(global::Sungero.Workflow.ITask task)
    {
        return global::Sungero.Docflow.Shared.ModuleFunctions.HasSubActionItems(task);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.Boolean HasSubActionItems(global::Sungero.Workflow.ITask task, global::Sungero.Core.Enumeration status)
    {
        return global::Sungero.Docflow.Shared.ModuleFunctions.HasSubActionItems(task, status);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.Boolean HasSubActionItems(global::Sungero.Workflow.ITask task, global::Sungero.Core.Enumeration status, global::Sungero.Company.IEmployee addressee)
    {
        return global::Sungero.Docflow.Shared.ModuleFunctions.HasSubActionItems(task, status, addressee);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<global::Sungero.Workflow.ITask> GetActionItemsForResolution(global::Sungero.Workflow.ITask task, global::Sungero.Core.Enumeration status, global::Sungero.Company.IEmployee addressee)
    {
        return global::Sungero.Docflow.Shared.ModuleFunctions.GetActionItemsForResolution(task, status, addressee);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<global::System.String> ActionItemInfoProvider(global::Sungero.Workflow.ITask task)
    {
        return global::Sungero.Docflow.Shared.ModuleFunctions.ActionItemInfoProvider(task);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static void TryToShowNotifyMessage(global::System.String message)
    {
    global::Sungero.Docflow.Shared.ModuleFunctions.TryToShowNotifyMessage(message);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::Sungero.Company.IEmployee GetDocumentLastApprover(global::Sungero.Content.IElectronicDocument document)
    {
        return global::Sungero.Docflow.Shared.ModuleFunctions.GetDocumentLastApprover(document);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::Sungero.CoreEntities.IStorage GetStorageByPolicies(global::Sungero.Docflow.IOfficialDocument document)
    {
        return ((global::Sungero.Docflow.Shared.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Shared)).GetStorageByPolicies(document);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.DateTime ToTenantTime(global::System.DateTime datetime)
    {
        return global::Sungero.Docflow.Shared.ModuleFunctions.ToTenantTime(datetime);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.String ReplaceFirstSymbolToUpperCase(global::System.String label)
    {
        return global::Sungero.Docflow.Shared.ModuleFunctions.ReplaceFirstSymbolToUpperCase(label);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.Boolean IsASCII(global::System.String value)
    {
        return global::Sungero.Docflow.Shared.ModuleFunctions.IsASCII(value);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.String ReplaceFirstSymbolToLowerCase(global::System.String label)
    {
        return global::Sungero.Docflow.Shared.ModuleFunctions.ReplaceFirstSymbolToLowerCase(label);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.String GetNumberDeclination(global::System.Int32 number, CommonLibrary.LocalizedString singleName, CommonLibrary.LocalizedString genetiveName, CommonLibrary.LocalizedString pluralName)
    {
        return global::Sungero.Docflow.Shared.ModuleFunctions.GetNumberDeclination(number, singleName, genetiveName, pluralName);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::Sungero.Company.IEmployee GetSecretary(global::Sungero.Company.IEmployee manager)
    {
        return global::Sungero.Docflow.Shared.ModuleFunctions.GetSecretary(manager);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<global::Sungero.Company.IManagersAssistant> GetSecretaries(global::Sungero.Company.IEmployee manager)
    {
        return global::Sungero.Docflow.Shared.ModuleFunctions.GetSecretaries(manager);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::Sungero.Company.IEmployee GetSecretaryManager(global::Sungero.Company.IEmployee secretary)
    {
        return global::Sungero.Docflow.Shared.ModuleFunctions.GetSecretaryManager(secretary);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.String GetReportTableName(global::System.String reportName, global::System.Int32 userId)
    {
        return global::Sungero.Docflow.Shared.ModuleFunctions.GetReportTableName(reportName, userId);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.String GetReportTableName(Reporting.IReport report, global::System.Int32 userId)
    {
        return global::Sungero.Docflow.Shared.ModuleFunctions.GetReportTableName(report, userId);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.String GetReportTableName(Reporting.IReport report, global::System.Int32 userId, global::System.String postfix)
    {
        return global::Sungero.Docflow.Shared.ModuleFunctions.GetReportTableName(report, userId, postfix);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.String GetReportTableName(global::System.String reportName, global::System.Int32 userId, global::System.String postfix)
    {
        return global::Sungero.Docflow.Shared.ModuleFunctions.GetReportTableName(reportName, userId, postfix);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::Sungero.Company.IBusinessUnit GetDefaultBusinessUnit(global::Sungero.Company.IEmployee employee)
    {
        return global::Sungero.Docflow.Shared.ModuleFunctions.GetDefaultBusinessUnit(employee);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static void SynchronizeAddendaAndAttachmentsGroup(Sungero.Workflow.Interfaces.IWorkflowEntityAttachmentGroup group, global::Sungero.Content.IElectronicDocument document)
    {
    global::Sungero.Docflow.Shared.ModuleFunctions.SynchronizeAddendaAndAttachmentsGroup(group, document);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.String TrimSpecialSymbols(global::System.String subject)
    {
        return global::Sungero.Docflow.Shared.ModuleFunctions.TrimSpecialSymbols(subject);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.String TrimSpecialSymbols(global::System.String subject, System.Object arg0)
    {
        return global::Sungero.Docflow.Shared.ModuleFunctions.TrimSpecialSymbols(subject, arg0);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.String TrimSpecialSymbols(global::System.String subject, System.Object arg0, System.Object arg1)
    {
        return global::Sungero.Docflow.Shared.ModuleFunctions.TrimSpecialSymbols(subject, arg0, arg1);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.String TrimSpecialSymbols(global::System.String subject, System.Object[] args)
    {
        return global::Sungero.Docflow.Shared.ModuleFunctions.TrimSpecialSymbols(subject, args);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.String TrimQuotes(global::System.String row)
    {
        return global::Sungero.Docflow.Shared.ModuleFunctions.TrimQuotes(row);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.String TrimEndNewLines(global::System.String row)
    {
        return global::Sungero.Docflow.Shared.ModuleFunctions.TrimEndNewLines(row);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.String GetActionGuid(Domain.Shared.IActionInfo action)
    {
        return global::Sungero.Docflow.Shared.ModuleFunctions.GetActionGuid(action);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::Sungero.Docflow.IDocumentSendAction GetSendAction(Domain.Shared.IActionInfo action)
    {
        return global::Sungero.Docflow.Shared.ModuleFunctions.GetSendAction(action);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.Int32 CalculateDelay(global::System.Nullable<global::System.DateTime> deadline, global::System.DateTime completed, global::Sungero.CoreEntities.IUser user)
    {
        return global::Sungero.Docflow.Shared.ModuleFunctions.CalculateDelay(deadline, completed, user);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.Boolean CheckDeadline(global::Sungero.CoreEntities.IUser user, global::System.Nullable<global::System.DateTime> deadline, global::System.Nullable<global::System.DateTime> minDeadline)
    {
        return global::Sungero.Docflow.Shared.ModuleFunctions.CheckDeadline(user, deadline, minDeadline);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.Boolean CheckDeadline(global::System.Nullable<global::System.DateTime> deadline, global::System.Nullable<global::System.DateTime> minDeadline)
    {
        return global::Sungero.Docflow.Shared.ModuleFunctions.CheckDeadline(deadline, minDeadline);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.String ValidateTaskAuthor(global::Sungero.Workflow.ITask task)
    {
        return global::Sungero.Docflow.Shared.ModuleFunctions.ValidateTaskAuthor(task);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.Boolean ValidateTaskAuthor(global::Sungero.Workflow.ITask task, Sungero.Core.IValidationArgs e)
    {
        return global::Sungero.Docflow.Shared.ModuleFunctions.ValidateTaskAuthor(task, e);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.String FormatDocumentNameForReport(global::Sungero.Content.IElectronicDocument document, global::System.Boolean withHyperlink)
    {
        return global::Sungero.Docflow.Shared.ModuleFunctions.FormatDocumentNameForReport(document, withHyperlink);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.String FormatDocumentNameForReport(global::Sungero.Content.IElectronicDocument document, global::System.Int32 version, global::System.Boolean withHyperlink)
    {
        return global::Sungero.Docflow.Shared.ModuleFunctions.FormatDocumentNameForReport(document, version, withHyperlink);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.DateTime GetDateWithTime(global::System.DateTime date, global::Sungero.CoreEntities.IUser user)
    {
        return global::Sungero.Docflow.Shared.ModuleFunctions.GetDateWithTime(date, user);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.DateTime GetDateWithTime(global::System.DateTime date)
    {
        return global::Sungero.Docflow.Shared.ModuleFunctions.GetDateWithTime(date);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.String GetDateWithUTCLabel(global::System.DateTime date)
    {
        return global::Sungero.Docflow.Shared.ModuleFunctions.GetDateWithUTCLabel(date);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.String FormatTenantIdForBarcode(global::System.String tenant)
    {
        return global::Sungero.Docflow.Shared.ModuleFunctions.FormatTenantIdForBarcode(tenant);
    }

    internal static class Remote
    {
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
      internal static global::System.Boolean GeneratePublicBodyForNonformalizedDocument(global::Sungero.Docflow.IOfficialDocument document, global::System.Int32 versionId, global::System.Nullable<global::System.DateTime> startTime)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::System.Boolean>(
          global::System.Guid.Parse("df83a2ea-8d43-4ec4-a34a-2e61863014df"),
          "GeneratePublicBodyForNonformalizedDocument(global::Sungero.Docflow.IOfficialDocument,global::System.Int32,global::System.Nullable<global::System.DateTime>)", document, versionId, startTime);
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
      internal static void GeneratePublicBodyForNonformalizedDocument(global::Sungero.Docflow.IOfficialDocument document, global::System.Int32 versionId)
      {
      global::Sungero.Domain.Shared.RemoteFunctionExecutor.Execute(
          global::System.Guid.Parse("df83a2ea-8d43-4ec4-a34a-2e61863014df"),
          "GeneratePublicBodyForNonformalizedDocument(global::Sungero.Docflow.IOfficialDocument,global::System.Int32)", document, versionId);
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
      internal static global::System.Boolean GeneratePublicBodyForFormalizedDocument(global::Sungero.Docflow.IAccountingDocumentBase document, global::System.Int32 versionId, global::System.Nullable<global::Sungero.Core.Enumeration> exchangeStatus, global::System.Nullable<global::System.DateTime> startTime)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::System.Boolean>(
          global::System.Guid.Parse("df83a2ea-8d43-4ec4-a34a-2e61863014df"),
          "GeneratePublicBodyForFormalizedDocument(global::Sungero.Docflow.IAccountingDocumentBase,global::System.Int32,global::System.Nullable<global::Sungero.Core.Enumeration>,global::System.Nullable<global::System.DateTime>)", document, versionId, exchangeStatus, startTime);
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
      internal static void GeneratePublicBodyForFormalizedDocument(global::Sungero.Docflow.IAccountingDocumentBase document, global::System.Int32 versionId, global::System.Nullable<global::Sungero.Core.Enumeration> exchangeStatus)
      {
      global::Sungero.Domain.Shared.RemoteFunctionExecutor.Execute(
          global::System.Guid.Parse("df83a2ea-8d43-4ec4-a34a-2e61863014df"),
          "GeneratePublicBodyForFormalizedDocument(global::Sungero.Docflow.IAccountingDocumentBase,global::System.Int32,global::System.Nullable<global::Sungero.Core.Enumeration>)", document, versionId, exchangeStatus);
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
      internal static global::Sungero.Docflow.Structures.Module.IByteArray GeneratePublicBodyForFormalizedXml(global::Sungero.Docflow.Structures.Module.IByteArray xml)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::Sungero.Docflow.Structures.Module.IByteArray>(
          global::System.Guid.Parse("df83a2ea-8d43-4ec4-a34a-2e61863014df"),
          "GeneratePublicBodyForFormalizedXml(global::Sungero.Docflow.Structures.Module.IByteArray)", xml);
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
      internal static global::System.String CalculateParams(global::Sungero.Docflow.IRegistrationGroup registrationGroup, global::Sungero.Docflow.IDocumentRegister documentRegister)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::System.String>(
          global::System.Guid.Parse("df83a2ea-8d43-4ec4-a34a-2e61863014df"),
          "CalculateParams(global::Sungero.Docflow.IRegistrationGroup,global::Sungero.Docflow.IDocumentRegister)", registrationGroup, documentRegister);
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
      internal static global::Sungero.Company.IDepartment GetDepartment(global::Sungero.CoreEntities.IUser user)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::Sungero.Company.IDepartment>(
          global::System.Guid.Parse("df83a2ea-8d43-4ec4-a34a-2e61863014df"),
          "GetDepartment(global::Sungero.CoreEntities.IUser)", user);
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
      internal static global::Sungero.Company.IEmployee GetManager(global::Sungero.CoreEntities.IUser user)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::Sungero.Company.IEmployee>(
          global::System.Guid.Parse("df83a2ea-8d43-4ec4-a34a-2e61863014df"),
          "GetManager(global::Sungero.CoreEntities.IUser)", user);
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
      internal static global::Sungero.Company.IEmployee GetClerk(global::Sungero.Docflow.IOfficialDocument document)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::Sungero.Company.IEmployee>(
          global::System.Guid.Parse("df83a2ea-8d43-4ec4-a34a-2e61863014df"),
          "GetClerk(global::Sungero.Docflow.IOfficialDocument)", document);
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
      internal static global::Sungero.Company.IEmployee GetClerk(global::Sungero.Docflow.IOfficialDocument document, global::System.Nullable<global::Sungero.Core.Enumeration> documentFlow)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::Sungero.Company.IEmployee>(
          global::System.Guid.Parse("df83a2ea-8d43-4ec4-a34a-2e61863014df"),
          "GetClerk(global::Sungero.Docflow.IOfficialDocument,global::System.Nullable<global::Sungero.Core.Enumeration>)", document, documentFlow);
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
      internal static global::System.Collections.Generic.List<global::Sungero.CoreEntities.IRecipient> GetTaskAssignees(global::Sungero.Workflow.ITask task)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::System.Collections.Generic.List<global::Sungero.CoreEntities.IRecipient>>(
          global::System.Guid.Parse("df83a2ea-8d43-4ec4-a34a-2e61863014df"),
          "GetTaskAssignees(global::Sungero.Workflow.ITask)", task);
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
      internal static global::System.Collections.Generic.List<global::Sungero.Domain.Shared.IEntity> GetAttachmentsWithoutAccessRights(global::System.Collections.Generic.List<global::Sungero.CoreEntities.IRecipient> performers, global::System.Collections.Generic.List<global::Sungero.Domain.Shared.IEntity> attachments)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::System.Collections.Generic.List<global::Sungero.Domain.Shared.IEntity>>(
          global::System.Guid.Parse("df83a2ea-8d43-4ec4-a34a-2e61863014df"),
          "GetAttachmentsWithoutAccessRights(global::System.Collections.Generic.List<global::Sungero.CoreEntities.IRecipient>,global::System.Collections.Generic.List<global::Sungero.Domain.Shared.IEntity>)", performers, attachments);
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
      internal static global::System.Boolean IncludedInRole(global::System.Guid roleSid)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::System.Boolean>(
          global::System.Guid.Parse("df83a2ea-8d43-4ec4-a34a-2e61863014df"),
          "IncludedInRole(global::System.Guid)", roleSid);
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
      internal static global::System.Boolean IsAdministratorOrAdvisor()
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::System.Boolean>(
          global::System.Guid.Parse("df83a2ea-8d43-4ec4-a34a-2e61863014df"),
          "IsAdministratorOrAdvisor()");
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
      internal static global::System.Double GetDocflowParamsNumbericValue(global::System.String paramName)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::System.Double>(
          global::System.Guid.Parse("df83a2ea-8d43-4ec4-a34a-2e61863014df"),
          "GetDocflowParamsNumbericValue(global::System.String)", paramName);
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
      internal static global::System.String GetDocflowParamsStringValue(global::System.String paramName)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::System.String>(
          global::System.Guid.Parse("df83a2ea-8d43-4ec4-a34a-2e61863014df"),
          "GetDocflowParamsStringValue(global::System.String)", paramName);
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
      internal static global::System.Nullable<global::System.DateTime> GetDocflowParamsDateTimeValue(global::System.String paramName)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::System.Nullable<global::System.DateTime>>(
          global::System.Guid.Parse("df83a2ea-8d43-4ec4-a34a-2e61863014df"),
          "GetDocflowParamsDateTimeValue(global::System.String)", paramName);
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
      internal static global::Sungero.Docflow.Structures.ExchangeOrderReport.ExchangeOrderFullData GetExchangeOrderInfo(global::System.String reportSessionId, global::Sungero.Docflow.IOfficialDocument sentDocument)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::Sungero.Docflow.Structures.ExchangeOrderReport.ExchangeOrderFullData>(
          global::System.Guid.Parse("df83a2ea-8d43-4ec4-a34a-2e61863014df"),
          "GetExchangeOrderInfo(global::System.String,global::Sungero.Docflow.IOfficialDocument)", reportSessionId, sentDocument);
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
      internal static void EvictEntityFromSession(global::Sungero.Domain.Shared.IEntity entity)
      {
      global::Sungero.Domain.Shared.RemoteFunctionExecutor.Execute(
          global::System.Guid.Parse("df83a2ea-8d43-4ec4-a34a-2e61863014df"),
          "EvictEntityFromSession(global::Sungero.Domain.Shared.IEntity)", entity);
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
      internal static void RequeueGrantAccessRightsToDocuments()
      {
      global::Sungero.Domain.Shared.RemoteFunctionExecutor.Execute(
          global::System.Guid.Parse("df83a2ea-8d43-4ec4-a34a-2e61863014df"),
          "RequeueGrantAccessRightsToDocuments()");
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
      internal static global::Sungero.Docflow.IFreeApprovalTask CreateFreeApprovalTask(global::Sungero.Content.IElectronicDocument document)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::Sungero.Docflow.IFreeApprovalTask>(
          global::System.Guid.Parse("df83a2ea-8d43-4ec4-a34a-2e61863014df"),
          "CreateFreeApprovalTask(global::Sungero.Content.IElectronicDocument)", document);
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
      internal static global::System.Linq.IQueryable<global::Sungero.Docflow.IApprovalTask> GetApprovalTasks(global::Sungero.Docflow.IOfficialDocument document)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::System.Linq.IQueryable<global::Sungero.Docflow.IApprovalTask>>(
          global::System.Guid.Parse("df83a2ea-8d43-4ec4-a34a-2e61863014df"),
          "GetApprovalTasks(global::Sungero.Docflow.IOfficialDocument)", document);
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
      internal static global::System.Linq.IQueryable<global::Sungero.RecordManagement.IDocumentReviewTask> GetReviewTasks(global::Sungero.Docflow.IOfficialDocument document)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::System.Linq.IQueryable<global::Sungero.RecordManagement.IDocumentReviewTask>>(
          global::System.Guid.Parse("df83a2ea-8d43-4ec4-a34a-2e61863014df"),
          "GetReviewTasks(global::Sungero.Docflow.IOfficialDocument)", document);
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
      internal static global::Sungero.Docflow.IApprovalTask CreateApprovalTask(global::Sungero.Docflow.IOfficialDocument document)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::Sungero.Docflow.IApprovalTask>(
          global::System.Guid.Parse("df83a2ea-8d43-4ec4-a34a-2e61863014df"),
          "CreateApprovalTask(global::Sungero.Docflow.IOfficialDocument)", document);
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
      internal static global::System.Linq.IQueryable<global::Sungero.Docflow.IOfficialDocument> GetAvaliableLeadingDocuments()
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::System.Linq.IQueryable<global::Sungero.Docflow.IOfficialDocument>>(
          global::System.Guid.Parse("df83a2ea-8d43-4ec4-a34a-2e61863014df"),
          "GetAvaliableLeadingDocuments()");
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
      internal static void SendNoticesAsSubtask(global::System.String subject, global::System.Collections.Generic.List<global::Sungero.CoreEntities.IUser> performers, global::Sungero.Workflow.ITask parentTask, global::System.String activeText, global::Sungero.CoreEntities.IUser author, global::System.String threadSubject)
      {
      global::Sungero.Domain.Shared.RemoteFunctionExecutor.Execute(
          global::System.Guid.Parse("df83a2ea-8d43-4ec4-a34a-2e61863014df"),
          "SendNoticesAsSubtask(global::System.String,global::System.Collections.Generic.List<global::Sungero.CoreEntities.IUser>,global::Sungero.Workflow.ITask,global::System.String,global::Sungero.CoreEntities.IUser,global::System.String)", subject, performers, parentTask, activeText, author, threadSubject);
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
      internal static global::System.Boolean IsModuleAvailableByLicense(global::System.Guid moduleGuid)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::System.Boolean>(
          global::System.Guid.Parse("df83a2ea-8d43-4ec4-a34a-2e61863014df"),
          "IsModuleAvailableByLicense(global::System.Guid)", moduleGuid);
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
      internal static global::System.Boolean IsModuleAvailableForCurrentUserByLicense(global::System.Guid moduleGuid)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::System.Boolean>(
          global::System.Guid.Parse("df83a2ea-8d43-4ec4-a34a-2e61863014df"),
          "IsModuleAvailableForCurrentUserByLicense(global::System.Guid)", moduleGuid);
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
      internal static global::System.Collections.Generic.List<global::Sungero.Company.IEmployee> UsersCanBeResolutionAuthor(global::Sungero.Docflow.IOfficialDocument document)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::System.Collections.Generic.List<global::Sungero.Company.IEmployee>>(
          global::System.Guid.Parse("df83a2ea-8d43-4ec4-a34a-2e61863014df"),
          "UsersCanBeResolutionAuthor(global::Sungero.Docflow.IOfficialDocument)", document);
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
      internal static global::System.Boolean IsUsersCanBeResolutionAuthor(global::Sungero.Docflow.IOfficialDocument document, global::Sungero.Company.IEmployee employee)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::System.Boolean>(
          global::System.Guid.Parse("df83a2ea-8d43-4ec4-a34a-2e61863014df"),
          "IsUsersCanBeResolutionAuthor(global::Sungero.Docflow.IOfficialDocument,global::Sungero.Company.IEmployee)", document, employee);
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
      internal static global::System.Collections.Generic.List<global::System.String> GetChartModel(global::Sungero.Company.IBusinessUnit businessUnit, global::Sungero.Company.IDepartment department, global::System.DateTime periodBegin, global::System.DateTime periodEnd)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::System.Collections.Generic.List<global::System.String>>(
          global::System.Guid.Parse("df83a2ea-8d43-4ec4-a34a-2e61863014df"),
          "GetChartModel(global::Sungero.Company.IBusinessUnit,global::Sungero.Company.IDepartment,global::System.DateTime,global::System.DateTime)", businessUnit, department, periodBegin, periodEnd);
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
      internal static global::System.DateTime GetTenantDateTimeFromUserDay(global::System.DateTime date)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::System.DateTime>(
          global::System.Guid.Parse("df83a2ea-8d43-4ec4-a34a-2e61863014df"),
          "GetTenantDateTimeFromUserDay(global::System.DateTime)", date);
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
      internal static global::System.Linq.IQueryable<global::Sungero.Docflow.IDistributionList> GetDistributionLists()
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::System.Linq.IQueryable<global::Sungero.Docflow.IDistributionList>>(
          global::System.Guid.Parse("df83a2ea-8d43-4ec4-a34a-2e61863014df"),
          "GetDistributionLists()");
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
      internal static global::Sungero.Docflow.IDistributionList CreateDistributionList()
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::Sungero.Docflow.IDistributionList>(
          global::System.Guid.Parse("df83a2ea-8d43-4ec4-a34a-2e61863014df"),
          "CreateDistributionList()");
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
      internal static global::System.String GetTaskAbortingError(global::Sungero.Workflow.ITask task, global::System.String groupId)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::System.String>(
          global::System.Guid.Parse("df83a2ea-8d43-4ec4-a34a-2e61863014df"),
          "GetTaskAbortingError(global::Sungero.Workflow.ITask,global::System.String)", task, groupId);
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
      internal static global::System.Collections.Generic.List<global::Sungero.Company.IEmployee> GetEmployeesFromRecipientsRemote(global::System.Collections.Generic.List<global::Sungero.CoreEntities.IRecipient> recipients)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::System.Collections.Generic.List<global::Sungero.Company.IEmployee>>(
          global::System.Guid.Parse("df83a2ea-8d43-4ec4-a34a-2e61863014df"),
          "GetEmployeesFromRecipientsRemote(global::System.Collections.Generic.List<global::Sungero.CoreEntities.IRecipient>)", recipients);
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
      internal static global::System.Linq.IQueryable<global::Sungero.Docflow.ICounterpartyDocument> GetCounterpartyDocuments(global::Sungero.Parties.ICounterparty counterparty)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::System.Linq.IQueryable<global::Sungero.Docflow.ICounterpartyDocument>>(
          global::System.Guid.Parse("df83a2ea-8d43-4ec4-a34a-2e61863014df"),
          "GetCounterpartyDocuments(global::Sungero.Parties.ICounterparty)", counterparty);
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
      internal static global::Sungero.Company.IEmployee GetResolutionAuthor(global::Sungero.Workflow.ITask task)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::Sungero.Company.IEmployee>(
          global::System.Guid.Parse("df83a2ea-8d43-4ec4-a34a-2e61863014df"),
          "GetResolutionAuthor(global::Sungero.Workflow.ITask)", task);
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
      internal static void AddApprover(global::Sungero.Workflow.IAssignment assignment, global::Sungero.Company.IEmployee newApprover)
      {
      global::Sungero.Domain.Shared.RemoteFunctionExecutor.Execute(
          global::System.Guid.Parse("df83a2ea-8d43-4ec4-a34a-2e61863014df"),
          "AddApprover(global::Sungero.Workflow.IAssignment,global::Sungero.Company.IEmployee)", assignment, newApprover);
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
      internal static void AddApprover(global::Sungero.Workflow.IAssignment assignment, global::Sungero.Company.IEmployee newApprover, global::System.Nullable<global::System.DateTime> deadline)
      {
      global::Sungero.Domain.Shared.RemoteFunctionExecutor.Execute(
          global::System.Guid.Parse("df83a2ea-8d43-4ec4-a34a-2e61863014df"),
          "AddApprover(global::Sungero.Workflow.IAssignment,global::Sungero.Company.IEmployee,global::System.Nullable<global::System.DateTime>)", assignment, newApprover, deadline);
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
      internal static global::System.Collections.Generic.List<global::Sungero.RecordManagement.IActionItemExecutionTask> GetActionItemsByDocument(global::Sungero.Docflow.IOfficialDocument document)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::System.Collections.Generic.List<global::Sungero.RecordManagement.IActionItemExecutionTask>>(
          global::System.Guid.Parse("df83a2ea-8d43-4ec4-a34a-2e61863014df"),
          "GetActionItemsByDocument(global::Sungero.Docflow.IOfficialDocument)", document);
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
      internal static global::System.Linq.IQueryable<global::Sungero.Domain.Shared.IEntity> GetDocumentKindSettings(global::Sungero.Docflow.IDocumentKind documentKind)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::System.Linq.IQueryable<global::Sungero.Domain.Shared.IEntity>>(
          global::System.Guid.Parse("df83a2ea-8d43-4ec4-a34a-2e61863014df"),
          "GetDocumentKindSettings(global::Sungero.Docflow.IDocumentKind)", documentKind);
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
      internal static global::System.String GetCurrentTenantId()
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::System.String>(
          global::System.Guid.Parse("df83a2ea-8d43-4ec4-a34a-2e61863014df"),
          "GetCurrentTenantId()");
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
      internal static global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.AssignmentCompletionReport.TableLine> GetAssignmentCompletionReportData(global::System.String reportSessionId, global::Sungero.Company.IDepartment department, global::Sungero.CoreEntities.IUser reportPerformer, global::System.Nullable<global::System.DateTime> reportPeriodBegin, global::System.Nullable<global::System.DateTime> reportPeriodEnd, global::System.Nullable<global::System.Boolean> loadOldAssignments)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.AssignmentCompletionReport.TableLine>>(
          global::System.Guid.Parse("df83a2ea-8d43-4ec4-a34a-2e61863014df"),
          "GetAssignmentCompletionReportData(global::System.String,global::Sungero.Company.IDepartment,global::Sungero.CoreEntities.IUser,global::System.Nullable<global::System.DateTime>,global::System.Nullable<global::System.DateTime>,global::System.Nullable<global::System.Boolean>)", reportSessionId, department, reportPerformer, reportPeriodBegin, reportPeriodEnd, loadOldAssignments);
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
      internal static global::System.Collections.Generic.List<global::Sungero.CoreEntities.ICertificate> GetCertificates(global::Sungero.Docflow.IOfficialDocument document)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::System.Collections.Generic.List<global::Sungero.CoreEntities.ICertificate>>(
          global::System.Guid.Parse("df83a2ea-8d43-4ec4-a34a-2e61863014df"),
          "GetCertificates(global::Sungero.Docflow.IOfficialDocument)", document);
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
      internal static void RequeueSendNotificationForExpiringPowersOfAttorney()
      {
      global::Sungero.Domain.Shared.RemoteFunctionExecutor.Execute(
          global::System.Guid.Parse("df83a2ea-8d43-4ec4-a34a-2e61863014df"),
          "RequeueSendNotificationForExpiringPowersOfAttorney()");
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
      internal static void RequeueTransferDocuments()
      {
      global::Sungero.Domain.Shared.RemoteFunctionExecutor.Execute(
          global::System.Guid.Parse("df83a2ea-8d43-4ec4-a34a-2e61863014df"),
          "RequeueTransferDocuments()");
      }

    }
    private static object GetFunctionsContainer()
    {
      return new global::Sungero.Docflow.Client.ModuleFunctions();
    }

    private static object GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType projectType)
    {
      var moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(moduleId));
      var assemblyName = finalModuleMetadatda.GetAssemblyName(projectType);
      var moduleFunctionsType = global::System.Type.GetType(global::System.String.Format("{0}.{1}, {2}", finalModuleMetadatda.FunctionNamespace, "Module", assemblyName));
      return moduleFunctionsType.GetMethod("GetFunctionsContainer", global::System.Reflection.BindingFlags.NonPublic | global::System.Reflection.BindingFlags.Static).Invoke(null, null);
    }
  }
}

// ==================================================================
// ModuleClientPublicFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Client
{
  public partial class ModuleClientPublicFunctions : global::Sungero.Docflow.Client.IModuleClientPublicFunctions
  {
    public global::System.Boolean ApproveWithAddenda(global::Sungero.Docflow.IOfficialDocument document, global::System.Collections.Generic.List<global::Sungero.Docflow.IOfficialDocument> addenda, global::Sungero.CoreEntities.ICertificate certificate, global::Sungero.Company.IEmployee substituted, global::System.Boolean endorseWhenApproveFailed, global::System.Boolean needStrongSign, global::System.String comment)
    {
      return global::Sungero.Docflow.Functions.Module.ApproveWithAddenda(document, addenda, certificate, substituted, endorseWhenApproveFailed, needStrongSign, comment);
    }
    public global::System.String CheckDateByWorkCalendar(global::System.Nullable<global::System.DateTime> date)
    {
      return global::Sungero.Docflow.Functions.Module.CheckDateByWorkCalendar(date);
    }
    public global::System.String CheckDeadlineByWorkCalendar(global::System.Nullable<global::System.DateTime> deadline)
    {
      return global::Sungero.Docflow.Functions.Module.CheckDeadlineByWorkCalendar(deadline);
    }
    public global::System.String CheckDeadlineByWorkCalendar(global::Sungero.CoreEntities.IUser user, global::System.Nullable<global::System.DateTime> deadline)
    {
      return global::Sungero.Docflow.Functions.Module.CheckDeadlineByWorkCalendar(user, deadline);
    }
    public void CheckDialogPeriod(CommonLibrary.InputDialogButtonClickEventArgs args, CommonLibrary.IDateDialogValue dialogPeriodBegin, CommonLibrary.IDateDialogValue dialogPeriodEnd)
    {
global::Sungero.Docflow.Functions.Module.CheckDialogPeriod(args, dialogPeriodBegin, dialogPeriodEnd);
    }
    public void CheckReportDialogPeriod(CommonLibrary.InputDialogButtonClickEventArgs args, CommonLibrary.IDateDialogValue dialogPeriodBegin, CommonLibrary.IDateDialogValue dialogPeriodEnd)
    {
global::Sungero.Docflow.Functions.Module.CheckReportDialogPeriod(args, dialogPeriodBegin, dialogPeriodEnd);
    }
    public global::Sungero.Workflow.ITask CreateAcquaintanceTask(global::Sungero.Docflow.IOfficialDocument document)
    {
      return global::Sungero.Docflow.Functions.Module.CreateAcquaintanceTask(document);
    }
    public global::Sungero.Workflow.ITask CreateActionItemExecution(global::Sungero.Docflow.IOfficialDocument document)
    {
      return global::Sungero.Docflow.Functions.Module.CreateActionItemExecution(document);
    }
    public global::Sungero.Docflow.IOfficialDocument CreateCoverLetter(global::Sungero.Docflow.IOfficialDocument document)
    {
      return global::Sungero.Docflow.Functions.Module.CreateCoverLetter(document);
    }
    public void EmployeeAssignmentPage(global::Sungero.Company.IEmployee employee, global::System.Boolean overdue, global::Sungero.Core.Enumeration period, global::System.Boolean department)
    {
global::Sungero.Docflow.Functions.Module.EmployeeAssignmentPage(employee, overdue, period, department);
    }
    public void EmployeeAssignmentPage(global::Sungero.Company.IDepartment department, global::System.Boolean overdue, global::Sungero.Core.Enumeration period)
    {
global::Sungero.Docflow.Functions.Module.EmployeeAssignmentPage(department, overdue, period);
    }
    public void EmployeeDiscipline(global::Sungero.Core.Enumeration performer, global::Sungero.Core.Enumeration period)
    {
global::Sungero.Docflow.Functions.Module.EmployeeDiscipline(performer, period);
    }
    public void EmployeeDiscipline(global::Sungero.Company.IEmployee employee, global::Sungero.Core.Enumeration period, global::System.Boolean department)
    {
global::Sungero.Docflow.Functions.Module.EmployeeDiscipline(employee, period, department);
    }
    public void EmployeeDiscipline(global::Sungero.Core.Enumeration period, global::Sungero.Company.IDepartment department)
    {
global::Sungero.Docflow.Functions.Module.EmployeeDiscipline(period, department);
    }
    public global::System.Boolean EndorseWithAddenda(global::Sungero.Content.IElectronicDocument document, global::System.Collections.Generic.List<global::Sungero.Content.IElectronicDocument> addenda, global::Sungero.CoreEntities.ICertificate certificate, global::Sungero.CoreEntities.IUser substituted, global::System.Boolean needStrongSign, global::System.String comment)
    {
      return global::Sungero.Docflow.Functions.Module.EndorseWithAddenda(document, addenda, certificate, substituted, needStrongSign, comment);
    }
    public global::System.Boolean IsLocked(global::Sungero.Domain.Shared.IEntity entity)
    {
      return global::Sungero.Docflow.Functions.Module.IsLocked(entity);
    }
    public global::System.Boolean IsLockedByOther(global::Sungero.Domain.Shared.IEntity entity)
    {
      return global::Sungero.Docflow.Functions.Module.IsLockedByOther(entity);
    }
    public global::System.Boolean ShowConfirmationDialog(global::System.String text, global::System.String description, global::System.String title, global::System.String dialogID)
    {
      return global::Sungero.Docflow.Functions.Module.ShowConfirmationDialog(text, description, title, dialogID);
    }
    public global::System.Nullable<global::System.Boolean> ShowDialogGrantAccessRights(global::Sungero.Workflow.IAssignmentBase assignment, global::System.Collections.Generic.List<global::Sungero.Domain.Shared.IEntity> attachments)
    {
      return global::Sungero.Docflow.Functions.Module.ShowDialogGrantAccessRights(assignment, attachments);
    }
    public global::System.Nullable<global::System.Boolean> ShowDialogGrantAccessRights(global::Sungero.Workflow.IAssignmentBase assignment, global::System.Collections.Generic.List<global::Sungero.Domain.Shared.IEntity> attachments, global::System.Collections.Generic.List<global::Sungero.CoreEntities.IRecipient> additionalAssignees)
    {
      return global::Sungero.Docflow.Functions.Module.ShowDialogGrantAccessRights(assignment, attachments, additionalAssignees);
    }
    public global::System.Nullable<global::System.Boolean> ShowDialogGrantAccessRights(global::Sungero.Workflow.ITask task, global::System.Collections.Generic.List<global::Sungero.Domain.Shared.IEntity> attachments)
    {
      return global::Sungero.Docflow.Functions.Module.ShowDialogGrantAccessRights(task, attachments);
    }
    public global::System.Nullable<global::System.Boolean> ShowDialogGrantAccessRights(global::Sungero.Workflow.ITask task, global::System.Collections.Generic.List<global::Sungero.Domain.Shared.IEntity> attachments, global::System.Collections.Generic.List<global::Sungero.CoreEntities.IRecipient> additionalAssignees)
    {
      return global::Sungero.Docflow.Functions.Module.ShowDialogGrantAccessRights(task, attachments, additionalAssignees);
    }
    public global::System.Boolean ShowDialogGrantAccessRightsWithConfirmationDialog(global::Sungero.Workflow.IAssignmentBase assignment, global::System.Collections.Generic.List<global::Sungero.Domain.Shared.IEntity> attachments, Domain.Shared.IActionInfo action)
    {
      return global::Sungero.Docflow.Functions.Module.ShowDialogGrantAccessRightsWithConfirmationDialog(assignment, attachments, action);
    }
    public global::System.Boolean ShowDialogGrantAccessRightsWithConfirmationDialog(global::Sungero.Workflow.IAssignmentBase assignment, global::System.Collections.Generic.List<global::Sungero.Domain.Shared.IEntity> attachments, Domain.Shared.IActionInfo action, global::System.String dialogID)
    {
      return global::Sungero.Docflow.Functions.Module.ShowDialogGrantAccessRightsWithConfirmationDialog(assignment, attachments, action, dialogID);
    }
    public global::System.Boolean ShowDialogGrantAccessRightsWithConfirmationDialog(global::Sungero.Workflow.IAssignmentBase assignment, global::System.Collections.Generic.List<global::Sungero.Domain.Shared.IEntity> attachments, global::System.Collections.Generic.List<global::Sungero.CoreEntities.IRecipient> additionalAssignees, Domain.Shared.IActionInfo action)
    {
      return global::Sungero.Docflow.Functions.Module.ShowDialogGrantAccessRightsWithConfirmationDialog(assignment, attachments, additionalAssignees, action);
    }
    public global::System.Boolean ShowDialogGrantAccessRightsWithConfirmationDialog(global::Sungero.Workflow.IAssignmentBase assignment, global::System.Collections.Generic.List<global::Sungero.Domain.Shared.IEntity> attachments, global::System.Collections.Generic.List<global::Sungero.CoreEntities.IRecipient> additionalAssignees, Domain.Shared.IActionInfo action, global::System.String dialogID)
    {
      return global::Sungero.Docflow.Functions.Module.ShowDialogGrantAccessRightsWithConfirmationDialog(assignment, attachments, additionalAssignees, action, dialogID);
    }
    public global::System.Boolean ShowDialogGrantAccessRightsWithConfirmationDialog(global::Sungero.Workflow.ITask task, global::System.Collections.Generic.List<global::Sungero.Domain.Shared.IEntity> attachments, Domain.Shared.IActionInfo action)
    {
      return global::Sungero.Docflow.Functions.Module.ShowDialogGrantAccessRightsWithConfirmationDialog(task, attachments, action);
    }
    public global::System.Boolean ShowDialogGrantAccessRightsWithConfirmationDialog(global::Sungero.Workflow.ITask task, global::System.Collections.Generic.List<global::Sungero.Domain.Shared.IEntity> attachments, Domain.Shared.IActionInfo action, global::System.String dialogID)
    {
      return global::Sungero.Docflow.Functions.Module.ShowDialogGrantAccessRightsWithConfirmationDialog(task, attachments, action, dialogID);
    }
    public global::System.Boolean ShowDialogGrantAccessRightsWithConfirmationDialog(global::Sungero.Workflow.ITask task, global::System.Collections.Generic.List<global::Sungero.Domain.Shared.IEntity> attachments, global::System.Collections.Generic.List<global::Sungero.CoreEntities.IRecipient> additionalAssignees, Domain.Shared.IActionInfo action, global::System.String dialogID)
    {
      return global::Sungero.Docflow.Functions.Module.ShowDialogGrantAccessRightsWithConfirmationDialog(task, attachments, additionalAssignees, action, dialogID);
    }
    public global::System.Boolean VersionIsLocked(global::System.Collections.Generic.List<global::Sungero.Content.IElectronicDocumentVersions> versions)
    {
      return global::Sungero.Docflow.Functions.Module.VersionIsLocked(versions);
    }
  }
}

// ==================================================================
// ModuleWidgetHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Client
{
}

// ==================================================================
// ModuleHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Client
{

  public partial class ApprovalRulesFolderHandlers
  {
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    protected global::Sungero.Docflow.FolderFilterState.IApprovalRulesFilterState Filter { get; private set; }

    private global::Sungero.Docflow.FolderFilterState.IApprovalRulesFilterState _filter
    {
      get
      {
        return this.Filter;
      }
    }

    public virtual void ApprovalRulesValidateFilterPanel(global:: Sungero.Domain.Client.ValidateFilterPanelEventArgs e)
    {
    }

    public ApprovalRulesFolderHandlers(global::Sungero.Docflow.FolderFilterState.IApprovalRulesFilterState filter)
    {
      this.Filter = filter;
    }

  }

  public partial class StoragePolicyFolderHandlers
  {
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    protected global::Sungero.Docflow.FolderFilterState.IStoragePolicyFilterState Filter { get; private set; }

    private global::Sungero.Docflow.FolderFilterState.IStoragePolicyFilterState _filter
    {
      get
      {
        return this.Filter;
      }
    }

    public virtual void StoragePolicyValidateFilterPanel(global:: Sungero.Domain.Client.ValidateFilterPanelEventArgs e)
    {
    }

    public StoragePolicyFolderHandlers(global::Sungero.Docflow.FolderFilterState.IStoragePolicyFilterState filter)
    {
      this.Filter = filter;
    }

  }

}

