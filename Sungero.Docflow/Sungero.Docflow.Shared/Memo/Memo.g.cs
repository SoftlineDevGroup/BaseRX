
// ==================================================================
// MemoState.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Shared
{
  public class MemoState : 
    global::Sungero.Docflow.Shared.InternalDocumentBaseState, global::Sungero.Docflow.IMemoState
  {
    public MemoState(global::Sungero.Docflow.IMemo entity) : base(entity) { }

    public new global::Sungero.Docflow.IMemoPropertyStates Properties
    {
      get { return (global::Sungero.Docflow.IMemoPropertyStates)base.Properties; }
    }

    protected override global::Sungero.Domain.Shared.IEntityPropertyStates CreatePropertyStates(global::Sungero.Domain.Shared.IEntity entity)
    {
      return new global::Sungero.Docflow.Shared.MemoPropertyStates(entity);
    }


    public new global::Sungero.Docflow.IMemoControlStates Controls
    {
      get { return (global::Sungero.Docflow.IMemoControlStates)base.Controls; }
    }

    protected override global::Sungero.Domain.Shared.IEntityControlStates CreateControlStates(global::Sungero.Domain.Shared.IEntity entity)
    {
      return new global::Sungero.Docflow.Shared.MemoControlStates(entity);
    }

    public new global::Sungero.Docflow.IMemoPageStates Pages
    {
      get { return (global::Sungero.Docflow.IMemoPageStates)base.Pages; }
    }

    protected override global::Sungero.Domain.Shared.IEntityPageStates CreatePageStates(global::Sungero.Domain.Shared.IEntity entity)
    {
      return new global::Sungero.Docflow.Shared.MemoPageStates(entity);
    }

  }


  public class MemoControlStates : 
    global::Sungero.Docflow.Shared.InternalDocumentBaseControlStates, global::Sungero.Docflow.IMemoControlStates
  {

    protected internal MemoControlStates(global::Sungero.Domain.Shared.IEntity entity) : base(entity) { }
  }
  public class MemoPageStates : 
    global::Sungero.Docflow.Shared.InternalDocumentBasePageStates, global::Sungero.Docflow.IMemoPageStates
  {

    protected internal MemoPageStates(global::Sungero.Domain.Shared.IEntity entity) : base(entity) { }
  }

  public class MemoPropertyStates : 
    global::Sungero.Docflow.Shared.InternalDocumentBasePropertyStates, global::Sungero.Docflow.IMemoPropertyStates
  {
            public new global::Sungero.Docflow.IMemoVersionsCollectionPropertyState<global::Sungero.Docflow.IMemoVersions> Versions
            {
              get { return (global::Sungero.Docflow.IMemoVersionsCollectionPropertyState<global::Sungero.Docflow.IMemoVersions>)base.Versions; }
            }

            protected override global::Sungero.Content.IElectronicDocumentVersionsCollectionPropertyState<global::Sungero.Content.IElectronicDocumentVersions> CreateVersionsState(global::Sungero.Domain.Shared.IEntity entity, string propertyName)
            {
              return new global::Sungero.Docflow.Shared.MemoVersionsCollectionPropertyState<global::Sungero.Docflow.IMemoVersions>(entity, propertyName);
            }
            public new global::Sungero.Docflow.IMemoTrackingCollectionPropertyState<global::Sungero.Docflow.IMemoTracking> Tracking
            {
              get { return (global::Sungero.Docflow.IMemoTrackingCollectionPropertyState<global::Sungero.Docflow.IMemoTracking>)base.Tracking; }
            }

            protected override global::Sungero.Docflow.IOfficialDocumentTrackingCollectionPropertyState<global::Sungero.Docflow.IOfficialDocumentTracking> CreateTrackingState(global::Sungero.Domain.Shared.IEntity entity, string propertyName)
            {
              return new global::Sungero.Docflow.Shared.MemoTrackingCollectionPropertyState<global::Sungero.Docflow.IMemoTracking>(entity, propertyName);
            }
            public global::Sungero.Domain.Shared.IPropertyState<global::Sungero.Company.IEmployee> Addressee 
            {
              get { return this.InternalAddressee; }
            }

            protected virtual global::Sungero.Domain.Shared.IPropertyState<global::Sungero.Company.IEmployee> InternalAddressee
            {
              get { return this.GetPropertyState<global::Sungero.Company.IEmployee>("Addressee"); }
            }


    protected internal MemoPropertyStates(global::Sungero.Domain.Shared.IEntity entity) : base(entity) { }
  }

}

// ==================================================================
// MemoEventArgs.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Shared
{  
    public class MemoAddresseeChangedEventArgs : global::Sungero.Domain.Shared.PropertyChangedEventArgs<global::Sungero.Company.IEmployee>
    {
      public MemoAddresseeChangedEventArgs(global::Sungero.Domain.Shared.IPropertyState<global::Sungero.Company.IEmployee> state, global::Sungero.Company.IEmployee newValue, global::Sungero.Domain.Shared.IEntity entity): base(state, newValue, entity) { }
    }

}

// ==================================================================
// MemoInfo.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Shared
{
  public class MemoInfo : 
    global::Sungero.Docflow.Shared.InternalDocumentBaseInfo, global::Sungero.Docflow.IMemoInfo
  {
    public MemoInfo(global::System.Type entityType) : base(entityType) { }

    public new global::Sungero.Docflow.IMemoPropertiesInfo Properties
    {
      get { return (global::Sungero.Docflow.IMemoPropertiesInfo)base.Properties; }
    }

    protected override global::Sungero.Domain.Shared.IEntityPropertiesInfo CreateEntityPropertiesInfo(global::System.Type entityType)
    {
      return new global::Sungero.Docflow.Shared.MemoPropertiesInfo(entityType);
    }

  }

  public class MemoPropertiesInfo : 
    global::Sungero.Docflow.Shared.InternalDocumentBasePropertiesInfo, global::Sungero.Docflow.IMemoPropertiesInfo
  {
        public new global::Sungero.Domain.Shared.ICollectionPropertyInfo<global::Sungero.Docflow.IMemoVersionsPropertiesInfo> Versions
        {
          get
          {
             var propertyMetadata = this.GetPropertyMetadata<global::Sungero.Metadata.CollectionPropertyMetadata>("Versions");
             return new global::Sungero.Domain.Shared.CollectionPropertyInfo<global::Sungero.Docflow.IMemoVersionsPropertiesInfo>(propertyMetadata);
          }
        }
        public new global::Sungero.Domain.Shared.ICollectionPropertyInfo<global::Sungero.Docflow.IMemoTrackingPropertiesInfo> Tracking
        {
          get
          {
             var propertyMetadata = this.GetPropertyMetadata<global::Sungero.Metadata.CollectionPropertyMetadata>("Tracking");
             return new global::Sungero.Domain.Shared.CollectionPropertyInfo<global::Sungero.Docflow.IMemoTrackingPropertiesInfo>(propertyMetadata);
          }
        }
        public global::Sungero.Domain.Shared.INavigationPropertyInfo<global::Sungero.Company.IEmployeeInfo, global::Sungero.Company.IEmployee> Addressee 
        {
          get
          {
             var propertyMetadata = this.GetPropertyMetadata<global::Sungero.Metadata.NavigationPropertyMetadata>("Addressee");
             return new global::Sungero.Domain.Shared.NavigationPropertyInfo<global::Sungero.Company.IEmployeeInfo, global::Sungero.Company.IEmployee>(propertyMetadata);
          }
        }


    protected internal MemoPropertiesInfo(global::System.Type entityType) : base(entityType) { }
  }

}

// ==================================================================
// MemoHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow
{
  public partial class MemoSharedHandlers : global::Sungero.Docflow.InternalDocumentBaseSharedHandlers
  {
    private global::Sungero.Docflow.IMemo _obj
    {
      get { return (global::Sungero.Docflow.IMemo)this.Entity; }
    }
    public virtual void AddresseeChanged(global::Sungero.Docflow.Shared.MemoAddresseeChangedEventArgs e) { }




    public MemoSharedHandlers(global::Sungero.Docflow.IMemo entity) : base(entity)
    {
    }
  }

}

// ==================================================================
// MemoResources.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Shared.Memo
{
  /// <summary>
  /// Represents Memo resources.
  /// </summary>
  public class MemoResources : global::Sungero.Docflow.Shared.InternalDocumentBase.InternalDocumentBaseResources, global::Sungero.Docflow.Memo.IMemoResources
  {
  }
}

// ==================================================================
// MemoSharedFunctions.g.cs
// ==================================================================

namespace Sungero.Docflow.Shared
{
  public partial class MemoFunctions : global::Sungero.Docflow.Shared.InternalDocumentBaseFunctions
  {
    private global::Sungero.Docflow.IMemo _obj
    {
      get { return (global::Sungero.Docflow.IMemo)this.Entity; }
    }

    public MemoFunctions(global::Sungero.Docflow.IMemo entity) : base(entity) { }
  }
}

// ==================================================================
// MemoFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Functions
{
  internal static class Memo
  {
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.MemoFunctions" />
    internal static  void ChangeDocumentPropertiesAccess(global::Sungero.Docflow.IMemo memo, global::System.Boolean isEnabled, global::System.Boolean isRepeatRegister)
    {
      var functions = (global::Sungero.Docflow.Shared.MemoFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)memo).FunctionsContainer.SharedFunctions;
    functions.ChangeDocumentPropertiesAccess(isEnabled, isRepeatRegister);
    }

    internal static class Remote
    {
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.MemoFunctions" />
      internal static  void SetDocumentSignatory(global::Sungero.Docflow.IMemo memo, global::Sungero.Company.IEmployee employee)
      {
      global::Sungero.Domain.Shared.RemoteFunctionExecutor.Execute(
          global::System.Guid.Parse("95af409b-83fe-4697-a805-5a86ceec33f5"),
          "SetDocumentSignatory(global::Sungero.Docflow.IMemo,global::Sungero.Company.IEmployee)"
          , memo, employee);
      }

    }
  }
}

// ==================================================================
// MemoFilterState.g.cs
// ==================================================================

namespace Sungero.Docflow.Shared.Memo
{

  public class MemoFilterInfo : global::Sungero.Docflow.Shared.InternalDocumentBase.InternalDocumentBaseFilterInfo,
    global::Sungero.Docflow.IMemoFilterInfo
  {
  }

  public class MemoFilterState : global::Sungero.Docflow.Shared.InternalDocumentBase.InternalDocumentBaseFilterState,
    global::Sungero.Docflow.IMemoFilterState
  {



    public new Sungero.Docflow.IMemoFilterInfo Info
    {
      get
      {
        return (Sungero.Docflow.IMemoFilterInfo) base.Info;
      }
    }
    protected override global::Sungero.Domain.Shared.IFilterInfo CreateFilterInfo()
    {
      return new Sungero.Docflow.Shared.Memo.MemoFilterInfo();
    }

  }
}

// ==================================================================
// MemoSharedPublicFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Shared
{
  public class MemoSharedPublicFunctions : global::Sungero.Docflow.Shared.IMemoSharedPublicFunctions
  {
  }
}
