
// ==================================================================
// ConditionBaseState.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Shared
{
  public class ConditionBaseState : 
    global::Sungero.CoreEntities.Shared.DatabookEntryState, global::Sungero.Docflow.IConditionBaseState
  {
    public ConditionBaseState(global::Sungero.Docflow.IConditionBase entity) : base(entity) { }

    public new global::Sungero.Docflow.IConditionBasePropertyStates Properties
    {
      get { return (global::Sungero.Docflow.IConditionBasePropertyStates)base.Properties; }
    }

    protected override global::Sungero.Domain.Shared.IEntityPropertyStates CreatePropertyStates(global::Sungero.Domain.Shared.IEntity entity)
    {
      return new global::Sungero.Docflow.Shared.ConditionBasePropertyStates(entity);
    }


    public new global::Sungero.Docflow.IConditionBaseControlStates Controls
    {
      get { return (global::Sungero.Docflow.IConditionBaseControlStates)base.Controls; }
    }

    protected override global::Sungero.Domain.Shared.IEntityControlStates CreateControlStates(global::Sungero.Domain.Shared.IEntity entity)
    {
      return new global::Sungero.Docflow.Shared.ConditionBaseControlStates(entity);
    }

    public new global::Sungero.Docflow.IConditionBasePageStates Pages
    {
      get { return (global::Sungero.Docflow.IConditionBasePageStates)base.Pages; }
    }

    protected override global::Sungero.Domain.Shared.IEntityPageStates CreatePageStates(global::Sungero.Domain.Shared.IEntity entity)
    {
      return new global::Sungero.Docflow.Shared.ConditionBasePageStates(entity);
    }

  }


  public class ConditionBaseControlStates : 
    global::Sungero.CoreEntities.Shared.DatabookEntryControlStates, global::Sungero.Docflow.IConditionBaseControlStates
  {

    protected internal ConditionBaseControlStates(global::Sungero.Domain.Shared.IEntity entity) : base(entity) { }
  }
  public class ConditionBasePageStates : 
    global::Sungero.CoreEntities.Shared.DatabookEntryPageStates, global::Sungero.Docflow.IConditionBasePageStates
  {
        public global::Sungero.Domain.Shared.IStandalonePageState MainPage
        {
        get { return this.GetPageState<Sungero.Domain.Shared.IStandalonePageState>("Card"); }
        }


    protected internal ConditionBasePageStates(global::Sungero.Domain.Shared.IEntity entity) : base(entity) { }
  }

  public class ConditionBasePropertyStates : 
    global::Sungero.CoreEntities.Shared.DatabookEntryPropertyStates, global::Sungero.Docflow.IConditionBasePropertyStates
  {
            public global::Sungero.Domain.Shared.IPropertyState<global::System.String> Name 
            {
              get { return this.GetPropertyState<global::System.String>("Name"); }
            }
            public global::Sungero.Domain.Shared.IPropertyState<global::Sungero.Core.Enumeration?> ConditionType 
            {
              get { return this.GetPropertyState<global::Sungero.Core.Enumeration?>("ConditionType"); }
            }
            public global::Sungero.Domain.Shared.IPropertyState<global::System.Double?> Amount 
            {
              get { return this.GetPropertyState<global::System.Double?>("Amount"); }
            }
            public global::Sungero.Docflow.IConditionBaseCurrenciesCollectionPropertyState<global::Sungero.Docflow.IConditionBaseCurrencies> Currencies 
            {
              get { return this.GetPropertyState("Currencies", this.CreateCurrenciesState); }
            }

            protected virtual global::Sungero.Docflow.IConditionBaseCurrenciesCollectionPropertyState<global::Sungero.Docflow.IConditionBaseCurrencies> CreateCurrenciesState(global::Sungero.Domain.Shared.IEntity entity, string propertyName)
            {
              return new global::Sungero.Docflow.Shared.ConditionBaseCurrenciesCollectionPropertyState<global::Sungero.Docflow.IConditionBaseCurrencies>(entity, propertyName);
            }
            public global::Sungero.Docflow.IConditionBaseDocumentKindsCollectionPropertyState<global::Sungero.Docflow.IConditionBaseDocumentKinds> DocumentKinds 
            {
              get { return this.GetPropertyState("DocumentKinds", this.CreateDocumentKindsState); }
            }

            protected virtual global::Sungero.Docflow.IConditionBaseDocumentKindsCollectionPropertyState<global::Sungero.Docflow.IConditionBaseDocumentKinds> CreateDocumentKindsState(global::Sungero.Domain.Shared.IEntity entity, string propertyName)
            {
              return new global::Sungero.Docflow.Shared.ConditionBaseDocumentKindsCollectionPropertyState<global::Sungero.Docflow.IConditionBaseDocumentKinds>(entity, propertyName);
            }
            public global::Sungero.Domain.Shared.IPropertyState<global::Sungero.Core.Enumeration?> AmountOperator 
            {
              get { return this.GetPropertyState<global::Sungero.Core.Enumeration?>("AmountOperator"); }
            }
            public global::Sungero.Domain.Shared.IDataPropertyState Note 
            {
              get { return this.GetDataPropertyState("Note"); }
            }
            public global::Sungero.Docflow.IConditionBaseConditionDocumentKindsCollectionPropertyState<global::Sungero.Docflow.IConditionBaseConditionDocumentKinds> ConditionDocumentKinds 
            {
              get { return this.GetPropertyState("ConditionDocumentKinds", this.CreateConditionDocumentKindsState); }
            }

            protected virtual global::Sungero.Docflow.IConditionBaseConditionDocumentKindsCollectionPropertyState<global::Sungero.Docflow.IConditionBaseConditionDocumentKinds> CreateConditionDocumentKindsState(global::Sungero.Domain.Shared.IEntity entity, string propertyName)
            {
              return new global::Sungero.Docflow.Shared.ConditionBaseConditionDocumentKindsCollectionPropertyState<global::Sungero.Docflow.IConditionBaseConditionDocumentKinds>(entity, propertyName);
            }
            public global::Sungero.Domain.Shared.IPropertyState<global::Sungero.Docflow.IApprovalRoleBase> ApprovalRole 
            {
              get { return this.InternalApprovalRole; }
            }

            protected virtual global::Sungero.Domain.Shared.IPropertyState<global::Sungero.Docflow.IApprovalRoleBase> InternalApprovalRole
            {
              get { return this.GetPropertyState<global::Sungero.Docflow.IApprovalRoleBase>("ApprovalRole"); }
            }
            public global::Sungero.Domain.Shared.IPropertyState<global::Sungero.Docflow.IApprovalRoleBase> ApprovalRoleForComparison 
            {
              get { return this.InternalApprovalRoleForComparison; }
            }

            protected virtual global::Sungero.Domain.Shared.IPropertyState<global::Sungero.Docflow.IApprovalRoleBase> InternalApprovalRoleForComparison
            {
              get { return this.GetPropertyState<global::Sungero.Docflow.IApprovalRoleBase>("ApprovalRoleForComparison"); }
            }
            public global::Sungero.Domain.Shared.IPropertyState<global::Sungero.CoreEntities.IRecipient> RecipientForComparison 
            {
              get { return this.InternalRecipientForComparison; }
            }

            protected virtual global::Sungero.Domain.Shared.IPropertyState<global::Sungero.CoreEntities.IRecipient> InternalRecipientForComparison
            {
              get { return this.GetPropertyState<global::Sungero.CoreEntities.IRecipient>("RecipientForComparison"); }
            }
            public global::Sungero.Docflow.IConditionBaseDeliveryMethodsCollectionPropertyState<global::Sungero.Docflow.IConditionBaseDeliveryMethods> DeliveryMethods 
            {
              get { return this.GetPropertyState("DeliveryMethods", this.CreateDeliveryMethodsState); }
            }

            protected virtual global::Sungero.Docflow.IConditionBaseDeliveryMethodsCollectionPropertyState<global::Sungero.Docflow.IConditionBaseDeliveryMethods> CreateDeliveryMethodsState(global::Sungero.Domain.Shared.IEntity entity, string propertyName)
            {
              return new global::Sungero.Docflow.Shared.ConditionBaseDeliveryMethodsCollectionPropertyState<global::Sungero.Docflow.IConditionBaseDeliveryMethods>(entity, propertyName);
            }
            public global::Sungero.Domain.Shared.IPropertyState<global::Sungero.Docflow.IDocumentKind> AddendaDocumentKind 
            {
              get { return this.InternalAddendaDocumentKind; }
            }

            protected virtual global::Sungero.Domain.Shared.IPropertyState<global::Sungero.Docflow.IDocumentKind> InternalAddendaDocumentKind
            {
              get { return this.GetPropertyState<global::Sungero.Docflow.IDocumentKind>("AddendaDocumentKind"); }
            }


    protected internal ConditionBasePropertyStates(global::Sungero.Domain.Shared.IEntity entity) : base(entity) { }
  }

}

// ==================================================================
// ConditionBaseEventArgs.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Shared
{  
    public class ConditionBaseApprovalRoleChangedEventArgs : global::Sungero.Domain.Shared.PropertyChangedEventArgs<global::Sungero.Docflow.IApprovalRoleBase>
    {
      public ConditionBaseApprovalRoleChangedEventArgs(global::Sungero.Domain.Shared.IPropertyState<global::Sungero.Docflow.IApprovalRoleBase> state, global::Sungero.Docflow.IApprovalRoleBase newValue, global::Sungero.Domain.Shared.IEntity entity): base(state, newValue, entity) { }
    }

    public class ConditionBaseApprovalRoleForComparisonChangedEventArgs : global::Sungero.Domain.Shared.PropertyChangedEventArgs<global::Sungero.Docflow.IApprovalRoleBase>
    {
      public ConditionBaseApprovalRoleForComparisonChangedEventArgs(global::Sungero.Domain.Shared.IPropertyState<global::Sungero.Docflow.IApprovalRoleBase> state, global::Sungero.Docflow.IApprovalRoleBase newValue, global::Sungero.Domain.Shared.IEntity entity): base(state, newValue, entity) { }
    }

    public class ConditionBaseRecipientForComparisonChangedEventArgs : global::Sungero.Domain.Shared.PropertyChangedEventArgs<global::Sungero.CoreEntities.IRecipient>
    {
      public ConditionBaseRecipientForComparisonChangedEventArgs(global::Sungero.Domain.Shared.IPropertyState<global::Sungero.CoreEntities.IRecipient> state, global::Sungero.CoreEntities.IRecipient newValue, global::Sungero.Domain.Shared.IEntity entity): base(state, newValue, entity) { }
    }


    public class ConditionBaseAddendaDocumentKindChangedEventArgs : global::Sungero.Domain.Shared.PropertyChangedEventArgs<global::Sungero.Docflow.IDocumentKind>
    {
      public ConditionBaseAddendaDocumentKindChangedEventArgs(global::Sungero.Domain.Shared.IPropertyState<global::Sungero.Docflow.IDocumentKind> state, global::Sungero.Docflow.IDocumentKind newValue, global::Sungero.Domain.Shared.IEntity entity): base(state, newValue, entity) { }
    }

}

// ==================================================================
// ConditionBaseInfo.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Shared
{
  public class ConditionBaseInfo : 
    global::Sungero.CoreEntities.Shared.DatabookEntryInfo, global::Sungero.Docflow.IConditionBaseInfo
  {
    public ConditionBaseInfo(global::System.Type entityType) : base(entityType) { }

    public new global::Sungero.Docflow.IConditionBasePropertiesInfo Properties
    {
      get { return (global::Sungero.Docflow.IConditionBasePropertiesInfo)base.Properties; }
    }

    protected override global::Sungero.Domain.Shared.IEntityPropertiesInfo CreateEntityPropertiesInfo(global::System.Type entityType)
    {
      return new global::Sungero.Docflow.Shared.ConditionBasePropertiesInfo(entityType);
    }

  }

  public class ConditionBasePropertiesInfo : 
    global::Sungero.CoreEntities.Shared.DatabookEntryPropertiesInfo, global::Sungero.Docflow.IConditionBasePropertiesInfo
  {
        public global::Sungero.Domain.Shared.IStringPropertyInfo Name 
        {
          get
          {
             var propertyMetadata = this.GetPropertyMetadata<global::Sungero.Metadata.StringPropertyMetadata>("Name");
             return new global::Sungero.Domain.Shared.StringPropertyInfo(propertyMetadata);
          }
        }
        public global::Sungero.Domain.Shared.IEnumPropertyInfo ConditionType 
        {
          get
          {
             var propertyMetadata = this.GetPropertyMetadata<global::Sungero.Metadata.EnumPropertyMetadata>("ConditionType");
             return new global::Sungero.Domain.Shared.EnumPropertyInfo(propertyMetadata);
          }
        }
        public global::Sungero.Domain.Shared.IDoublePropertyInfo Amount 
        {
          get
          {
             var propertyMetadata = this.GetPropertyMetadata<global::Sungero.Metadata.DoublePropertyMetadata>("Amount");
             return new global::Sungero.Domain.Shared.DoublePropertyInfo(propertyMetadata);
          }
        }
        public global::Sungero.Domain.Shared.ICollectionPropertyInfo<global::Sungero.Docflow.IConditionBaseCurrenciesPropertiesInfo> Currencies 
        {
          get
          {
             var propertyMetadata = this.GetPropertyMetadata<global::Sungero.Metadata.CollectionPropertyMetadata>("Currencies");
             return new global::Sungero.Domain.Shared.CollectionPropertyInfo<global::Sungero.Docflow.IConditionBaseCurrenciesPropertiesInfo>(propertyMetadata);
          }
        }
        public global::Sungero.Domain.Shared.ICollectionPropertyInfo<global::Sungero.Docflow.IConditionBaseDocumentKindsPropertiesInfo> DocumentKinds 
        {
          get
          {
             var propertyMetadata = this.GetPropertyMetadata<global::Sungero.Metadata.CollectionPropertyMetadata>("DocumentKinds");
             return new global::Sungero.Domain.Shared.CollectionPropertyInfo<global::Sungero.Docflow.IConditionBaseDocumentKindsPropertiesInfo>(propertyMetadata);
          }
        }
        public global::Sungero.Domain.Shared.IEnumPropertyInfo AmountOperator 
        {
          get
          {
             var propertyMetadata = this.GetPropertyMetadata<global::Sungero.Metadata.EnumPropertyMetadata>("AmountOperator");
             return new global::Sungero.Domain.Shared.EnumPropertyInfo(propertyMetadata);
          }
        }
        public global::Sungero.Domain.Shared.ITextPropertyInfo Note 
        {
          get
          {
             var propertyMetadata = this.GetPropertyMetadata<global::Sungero.Metadata.TextPropertyMetadata>("Note");
             return new global::Sungero.Domain.Shared.TextPropertyInfo(propertyMetadata);
          }
        }
        public global::Sungero.Domain.Shared.ICollectionPropertyInfo<global::Sungero.Docflow.IConditionBaseConditionDocumentKindsPropertiesInfo> ConditionDocumentKinds 
        {
          get
          {
             var propertyMetadata = this.GetPropertyMetadata<global::Sungero.Metadata.CollectionPropertyMetadata>("ConditionDocumentKinds");
             return new global::Sungero.Domain.Shared.CollectionPropertyInfo<global::Sungero.Docflow.IConditionBaseConditionDocumentKindsPropertiesInfo>(propertyMetadata);
          }
        }
        public global::Sungero.Domain.Shared.INavigationPropertyInfo<global::Sungero.Docflow.IApprovalRoleBaseInfo, global::Sungero.Docflow.IApprovalRoleBase> ApprovalRole 
        {
          get
          {
             var propertyMetadata = this.GetPropertyMetadata<global::Sungero.Metadata.NavigationPropertyMetadata>("ApprovalRole");
             return new global::Sungero.Domain.Shared.NavigationPropertyInfo<global::Sungero.Docflow.IApprovalRoleBaseInfo, global::Sungero.Docflow.IApprovalRoleBase>(propertyMetadata);
          }
        }
        public global::Sungero.Domain.Shared.INavigationPropertyInfo<global::Sungero.Docflow.IApprovalRoleBaseInfo, global::Sungero.Docflow.IApprovalRoleBase> ApprovalRoleForComparison 
        {
          get
          {
             var propertyMetadata = this.GetPropertyMetadata<global::Sungero.Metadata.NavigationPropertyMetadata>("ApprovalRoleForComparison");
             return new global::Sungero.Domain.Shared.NavigationPropertyInfo<global::Sungero.Docflow.IApprovalRoleBaseInfo, global::Sungero.Docflow.IApprovalRoleBase>(propertyMetadata);
          }
        }
        public global::Sungero.Domain.Shared.INavigationPropertyInfo<global::Sungero.CoreEntities.IRecipientInfo, global::Sungero.CoreEntities.IRecipient> RecipientForComparison 
        {
          get
          {
             var propertyMetadata = this.GetPropertyMetadata<global::Sungero.Metadata.NavigationPropertyMetadata>("RecipientForComparison");
             return new global::Sungero.Domain.Shared.NavigationPropertyInfo<global::Sungero.CoreEntities.IRecipientInfo, global::Sungero.CoreEntities.IRecipient>(propertyMetadata);
          }
        }
        public global::Sungero.Domain.Shared.ICollectionPropertyInfo<global::Sungero.Docflow.IConditionBaseDeliveryMethodsPropertiesInfo> DeliveryMethods 
        {
          get
          {
             var propertyMetadata = this.GetPropertyMetadata<global::Sungero.Metadata.CollectionPropertyMetadata>("DeliveryMethods");
             return new global::Sungero.Domain.Shared.CollectionPropertyInfo<global::Sungero.Docflow.IConditionBaseDeliveryMethodsPropertiesInfo>(propertyMetadata);
          }
        }
        public global::Sungero.Domain.Shared.INavigationPropertyInfo<global::Sungero.Docflow.IDocumentKindInfo, global::Sungero.Docflow.IDocumentKind> AddendaDocumentKind 
        {
          get
          {
             var propertyMetadata = this.GetPropertyMetadata<global::Sungero.Metadata.NavigationPropertyMetadata>("AddendaDocumentKind");
             return new global::Sungero.Domain.Shared.NavigationPropertyInfo<global::Sungero.Docflow.IDocumentKindInfo, global::Sungero.Docflow.IDocumentKind>(propertyMetadata);
          }
        }


    protected internal ConditionBasePropertiesInfo(global::System.Type entityType) : base(entityType) { }
  }

}

// ==================================================================
// ConditionBaseHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow
{
  public partial class ConditionBaseSharedHandlers : global::Sungero.CoreEntities.DatabookEntrySharedHandlers
  {
    private global::Sungero.Docflow.IConditionBase _obj
    {
      get { return (global::Sungero.Docflow.IConditionBase)this.Entity; }
    }
    public virtual void NameChanged(global::Sungero.Domain.Shared.StringPropertyChangedEventArgs e) { }



    public virtual void AmountChanged(global::Sungero.Domain.Shared.DoublePropertyChangedEventArgs e) { }


    public virtual void CurrenciesChanged(global::Sungero.Domain.Shared.CollectionPropertyChangedEventArgs e) { }


    public virtual void DocumentKindsChanged(global::Sungero.Domain.Shared.CollectionPropertyChangedEventArgs e) { }


    public virtual void AmountOperatorChanged(global::Sungero.Domain.Shared.EnumerationPropertyChangedEventArgs e) { }


    public virtual void NoteChanged(global::Sungero.Domain.Shared.TextPropertyChangedEventArgs e) { }


    public virtual void ConditionDocumentKindsChanged(global::Sungero.Domain.Shared.CollectionPropertyChangedEventArgs e) { }


    public virtual void ApprovalRoleChanged(global::Sungero.Docflow.Shared.ConditionBaseApprovalRoleChangedEventArgs e) { }


    public virtual void ApprovalRoleForComparisonChanged(global::Sungero.Docflow.Shared.ConditionBaseApprovalRoleForComparisonChangedEventArgs e) { }


    public virtual void RecipientForComparisonChanged(global::Sungero.Docflow.Shared.ConditionBaseRecipientForComparisonChangedEventArgs e) { }


    public virtual void DeliveryMethodsChanged(global::Sungero.Domain.Shared.CollectionPropertyChangedEventArgs e) { }


    public virtual void AddendaDocumentKindChanged(global::Sungero.Docflow.Shared.ConditionBaseAddendaDocumentKindChangedEventArgs e) { }




    public ConditionBaseSharedHandlers(global::Sungero.Docflow.IConditionBase entity) : base(entity)
    {
    }
  }

  public partial class ConditionBaseCurrenciesSharedHandlers : global::Sungero.Domain.Shared.ChildEntitySharedHandlers
  {
    private global::Sungero.Docflow.IConditionBaseCurrencies _obj
    { 
      get { return (global::Sungero.Docflow.IConditionBaseCurrencies)this.Entity; }
    }
    public virtual void CurrenciesCurrencyChanged(global::Sungero.Docflow.Shared.ConditionBaseCurrenciesCurrencyChangedEventArgs e) { }



    public ConditionBaseCurrenciesSharedHandlers(global::Sungero.Docflow.IConditionBaseCurrencies entity) : base(entity)
    {
    }
  }

  public partial class ConditionBaseCurrenciesSharedCollectionHandlers : global::Sungero.Domain.Shared.ChildEntitySharedCollectionHandlers
  {
    private global::Sungero.Docflow.IConditionBase _obj
    { 
      get { return (global::Sungero.Docflow.IConditionBase)this.Entity; }
    }

    private global::Sungero.Docflow.IConditionBaseCurrencies _added
    {
      get { return (global::Sungero.Docflow.IConditionBaseCurrencies)this._Added; }
    }

    private global::Sungero.Docflow.IConditionBaseCurrencies _deleted
    {
      get { return (global::Sungero.Docflow.IConditionBaseCurrencies)this._Deleted; }
    }

    private global::Sungero.Docflow.IConditionBaseCurrencies _source
    {
      get { return (global::Sungero.Docflow.IConditionBaseCurrencies)this._Source; }
    }

    public virtual void CurrenciesAdded(global::Sungero.Domain.Shared.CollectionPropertyAddedEventArgs e) { }
    public virtual void CurrenciesDeleted(global::Sungero.Domain.Shared.CollectionPropertyDeletedEventArgs e) { }

    public ConditionBaseCurrenciesSharedCollectionHandlers(global::Sungero.Docflow.IConditionBase entity, global::Sungero.Domain.Shared.IChildEntity added, global::Sungero.Domain.Shared.IChildEntity deleted, global::Sungero.Domain.Shared.IChildEntity source)
      : base (entity, added, deleted, source)
    {
    }
  }

  public partial class ConditionBaseDocumentKindsSharedHandlers : global::Sungero.Domain.Shared.ChildEntitySharedHandlers
  {
    private global::Sungero.Docflow.IConditionBaseDocumentKinds _obj
    { 
      get { return (global::Sungero.Docflow.IConditionBaseDocumentKinds)this.Entity; }
    }
    public virtual void DocumentKindsDocumentKindChanged(global::Sungero.Docflow.Shared.ConditionBaseDocumentKindsDocumentKindChangedEventArgs e) { }



    public ConditionBaseDocumentKindsSharedHandlers(global::Sungero.Docflow.IConditionBaseDocumentKinds entity) : base(entity)
    {
    }
  }

  public partial class ConditionBaseDocumentKindsSharedCollectionHandlers : global::Sungero.Domain.Shared.ChildEntitySharedCollectionHandlers
  {
    private global::Sungero.Docflow.IConditionBase _obj
    { 
      get { return (global::Sungero.Docflow.IConditionBase)this.Entity; }
    }

    private global::Sungero.Docflow.IConditionBaseDocumentKinds _added
    {
      get { return (global::Sungero.Docflow.IConditionBaseDocumentKinds)this._Added; }
    }

    private global::Sungero.Docflow.IConditionBaseDocumentKinds _deleted
    {
      get { return (global::Sungero.Docflow.IConditionBaseDocumentKinds)this._Deleted; }
    }

    private global::Sungero.Docflow.IConditionBaseDocumentKinds _source
    {
      get { return (global::Sungero.Docflow.IConditionBaseDocumentKinds)this._Source; }
    }

    public virtual void DocumentKindsAdded(global::Sungero.Domain.Shared.CollectionPropertyAddedEventArgs e) { }
    public virtual void DocumentKindsDeleted(global::Sungero.Domain.Shared.CollectionPropertyDeletedEventArgs e) { }

    public ConditionBaseDocumentKindsSharedCollectionHandlers(global::Sungero.Docflow.IConditionBase entity, global::Sungero.Domain.Shared.IChildEntity added, global::Sungero.Domain.Shared.IChildEntity deleted, global::Sungero.Domain.Shared.IChildEntity source)
      : base (entity, added, deleted, source)
    {
    }
  }

  public partial class ConditionBaseConditionDocumentKindsSharedHandlers : global::Sungero.Domain.Shared.ChildEntitySharedHandlers
  {
    private global::Sungero.Docflow.IConditionBaseConditionDocumentKinds _obj
    { 
      get { return (global::Sungero.Docflow.IConditionBaseConditionDocumentKinds)this.Entity; }
    }
    public virtual void ConditionDocumentKindsDocumentKindChanged(global::Sungero.Docflow.Shared.ConditionBaseConditionDocumentKindsDocumentKindChangedEventArgs e) { }



    public ConditionBaseConditionDocumentKindsSharedHandlers(global::Sungero.Docflow.IConditionBaseConditionDocumentKinds entity) : base(entity)
    {
    }
  }

  public partial class ConditionBaseConditionDocumentKindsSharedCollectionHandlers : global::Sungero.Domain.Shared.ChildEntitySharedCollectionHandlers
  {
    private global::Sungero.Docflow.IConditionBase _obj
    { 
      get { return (global::Sungero.Docflow.IConditionBase)this.Entity; }
    }

    private global::Sungero.Docflow.IConditionBaseConditionDocumentKinds _added
    {
      get { return (global::Sungero.Docflow.IConditionBaseConditionDocumentKinds)this._Added; }
    }

    private global::Sungero.Docflow.IConditionBaseConditionDocumentKinds _deleted
    {
      get { return (global::Sungero.Docflow.IConditionBaseConditionDocumentKinds)this._Deleted; }
    }

    private global::Sungero.Docflow.IConditionBaseConditionDocumentKinds _source
    {
      get { return (global::Sungero.Docflow.IConditionBaseConditionDocumentKinds)this._Source; }
    }

    public virtual void ConditionDocumentKindsAdded(global::Sungero.Domain.Shared.CollectionPropertyAddedEventArgs e) { }
    public virtual void ConditionDocumentKindsDeleted(global::Sungero.Domain.Shared.CollectionPropertyDeletedEventArgs e) { }

    public ConditionBaseConditionDocumentKindsSharedCollectionHandlers(global::Sungero.Docflow.IConditionBase entity, global::Sungero.Domain.Shared.IChildEntity added, global::Sungero.Domain.Shared.IChildEntity deleted, global::Sungero.Domain.Shared.IChildEntity source)
      : base (entity, added, deleted, source)
    {
    }
  }

  public partial class ConditionBaseDeliveryMethodsSharedHandlers : global::Sungero.Domain.Shared.ChildEntitySharedHandlers
  {
    private global::Sungero.Docflow.IConditionBaseDeliveryMethods _obj
    { 
      get { return (global::Sungero.Docflow.IConditionBaseDeliveryMethods)this.Entity; }
    }
    public virtual void DeliveryMethodsDeliveryMethodChanged(global::Sungero.Docflow.Shared.ConditionBaseDeliveryMethodsDeliveryMethodChangedEventArgs e) { }



    public ConditionBaseDeliveryMethodsSharedHandlers(global::Sungero.Docflow.IConditionBaseDeliveryMethods entity) : base(entity)
    {
    }
  }

  public partial class ConditionBaseDeliveryMethodsSharedCollectionHandlers : global::Sungero.Domain.Shared.ChildEntitySharedCollectionHandlers
  {
    private global::Sungero.Docflow.IConditionBase _obj
    { 
      get { return (global::Sungero.Docflow.IConditionBase)this.Entity; }
    }

    private global::Sungero.Docflow.IConditionBaseDeliveryMethods _added
    {
      get { return (global::Sungero.Docflow.IConditionBaseDeliveryMethods)this._Added; }
    }

    private global::Sungero.Docflow.IConditionBaseDeliveryMethods _deleted
    {
      get { return (global::Sungero.Docflow.IConditionBaseDeliveryMethods)this._Deleted; }
    }

    private global::Sungero.Docflow.IConditionBaseDeliveryMethods _source
    {
      get { return (global::Sungero.Docflow.IConditionBaseDeliveryMethods)this._Source; }
    }

    public virtual void DeliveryMethodsAdded(global::Sungero.Domain.Shared.CollectionPropertyAddedEventArgs e) { }
    public virtual void DeliveryMethodsDeleted(global::Sungero.Domain.Shared.CollectionPropertyDeletedEventArgs e) { }

    public ConditionBaseDeliveryMethodsSharedCollectionHandlers(global::Sungero.Docflow.IConditionBase entity, global::Sungero.Domain.Shared.IChildEntity added, global::Sungero.Domain.Shared.IChildEntity deleted, global::Sungero.Domain.Shared.IChildEntity source)
      : base (entity, added, deleted, source)
    {
    }
  }

}

// ==================================================================
// ConditionBaseResources.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Shared.ConditionBase
{
  /// <summary>
  /// Represents ConditionBase resources.
  /// </summary>
  public class ConditionBaseResources : global::Sungero.CoreEntities.Shared.DatabookEntry.DatabookEntryResources, global::Sungero.Docflow.ConditionBase.IConditionBaseResources
  {
    public virtual global::CommonLibrary.LocalizedString DocumentNotContainsFieldAmount
    {
      get
      {
        return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Docflow.IConditionBase) , "DocumentNotContainsFieldAmount");
      }
    }

    public virtual global::CommonLibrary.LocalizedString DocumentNotContainsFieldAmountFormat(params object[] args)
    {
      return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Docflow.IConditionBase), "DocumentNotContainsFieldAmount", false, args);
    }
    public virtual global::CommonLibrary.LocalizedString FillTotalAmountInContractCard
    {
      get
      {
        return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Docflow.IConditionBase) , "FillTotalAmountInContractCard");
      }
    }

    public virtual global::CommonLibrary.LocalizedString FillTotalAmountInContractCardFormat(params object[] args)
    {
      return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Docflow.IConditionBase), "FillTotalAmountInContractCard", false, args);
    }
    public virtual global::CommonLibrary.LocalizedString DocumentNotContainsFieldCounterpartyOrCorrespondent
    {
      get
      {
        return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Docflow.IConditionBase) , "DocumentNotContainsFieldCounterpartyOrCorrespondent");
      }
    }

    public virtual global::CommonLibrary.LocalizedString DocumentNotContainsFieldCounterpartyOrCorrespondentFormat(params object[] args)
    {
      return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Docflow.IConditionBase), "DocumentNotContainsFieldCounterpartyOrCorrespondent", false, args);
    }
    public virtual global::CommonLibrary.LocalizedString DocumentNotContainsFieldCurrency
    {
      get
      {
        return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Docflow.IConditionBase) , "DocumentNotContainsFieldCurrency");
      }
    }

    public virtual global::CommonLibrary.LocalizedString DocumentNotContainsFieldCurrencyFormat(params object[] args)
    {
      return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Docflow.IConditionBase), "DocumentNotContainsFieldCurrency", false, args);
    }
    public virtual global::CommonLibrary.LocalizedString FillCurrencyInContractCard
    {
      get
      {
        return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Docflow.IConditionBase) , "FillCurrencyInContractCard");
      }
    }

    public virtual global::CommonLibrary.LocalizedString FillCurrencyInContractCardFormat(params object[] args)
    {
      return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Docflow.IConditionBase), "FillCurrencyInContractCard", false, args);
    }
    public virtual global::CommonLibrary.LocalizedString CannotPerformConditionCheck
    {
      get
      {
        return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Docflow.IConditionBase) , "CannotPerformConditionCheck");
      }
    }

    public virtual global::CommonLibrary.LocalizedString CannotPerformConditionCheckFormat(params object[] args)
    {
      return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Docflow.IConditionBase), "CannotPerformConditionCheck", false, args);
    }
    public virtual global::CommonLibrary.LocalizedString ContractIsMoreThan
    {
      get
      {
        return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Docflow.IConditionBase) , "ContractIsMoreThan");
      }
    }

    public virtual global::CommonLibrary.LocalizedString ContractIsMoreThanFormat(params object[] args)
    {
      return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Docflow.IConditionBase), "ContractIsMoreThan", false, args);
    }
    public virtual global::CommonLibrary.LocalizedString NonResidentCounterparty
    {
      get
      {
        return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Docflow.IConditionBase) , "NonResidentCounterparty");
      }
    }

    public virtual global::CommonLibrary.LocalizedString NonResidentCounterpartyFormat(params object[] args)
    {
      return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Docflow.IConditionBase), "NonResidentCounterparty", false, args);
    }
    public virtual global::CommonLibrary.LocalizedString ContractCurrency
    {
      get
      {
        return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Docflow.IConditionBase) , "ContractCurrency");
      }
    }

    public virtual global::CommonLibrary.LocalizedString ContractCurrencyFormat(params object[] args)
    {
      return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Docflow.IConditionBase), "ContractCurrency", false, args);
    }
    public virtual global::CommonLibrary.LocalizedString TitleJoinSeparator
    {
      get
      {
        return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Docflow.IConditionBase) , "TitleJoinSeparator");
      }
    }

    public virtual global::CommonLibrary.LocalizedString TitleJoinSeparatorFormat(params object[] args)
    {
      return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Docflow.IConditionBase), "TitleJoinSeparator", false, args);
    }
    public virtual global::CommonLibrary.LocalizedString ConditionHasRules
    {
      get
      {
        return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Docflow.IConditionBase) , "ConditionHasRules");
      }
    }

    public virtual global::CommonLibrary.LocalizedString ConditionHasRulesFormat(params object[] args)
    {
      return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Docflow.IConditionBase), "ConditionHasRules", false, args);
    }
    public virtual global::CommonLibrary.LocalizedString NegativeTotalAmount
    {
      get
      {
        return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Docflow.IConditionBase) , "NegativeTotalAmount");
      }
    }

    public virtual global::CommonLibrary.LocalizedString NegativeTotalAmountFormat(params object[] args)
    {
      return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Docflow.IConditionBase), "NegativeTotalAmount", false, args);
    }
    public virtual global::CommonLibrary.LocalizedString TitleLastJoinSeparator
    {
      get
      {
        return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Docflow.IConditionBase) , "TitleLastJoinSeparator");
      }
    }

    public virtual global::CommonLibrary.LocalizedString TitleLastJoinSeparatorFormat(params object[] args)
    {
      return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Docflow.IConditionBase), "TitleLastJoinSeparator", false, args);
    }
    public virtual global::CommonLibrary.LocalizedString HasProject
    {
      get
      {
        return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Docflow.IConditionBase) , "HasProject");
      }
    }

    public virtual global::CommonLibrary.LocalizedString HasProjectFormat(params object[] args)
    {
      return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Docflow.IConditionBase), "HasProject", false, args);
    }
    public virtual global::CommonLibrary.LocalizedString DeliveryByExchange
    {
      get
      {
        return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Docflow.IConditionBase) , "DeliveryByExchange");
      }
    }

    public virtual global::CommonLibrary.LocalizedString DeliveryByExchangeFormat(params object[] args)
    {
      return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Docflow.IConditionBase), "DeliveryByExchange", false, args);
    }
    public virtual global::CommonLibrary.LocalizedString ConditionDocumentKind
    {
      get
      {
        return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Docflow.IConditionBase) , "ConditionDocumentKind");
      }
    }

    public virtual global::CommonLibrary.LocalizedString ConditionDocumentKindFormat(params object[] args)
    {
      return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Docflow.IConditionBase), "ConditionDocumentKind", false, args);
    }
    public virtual global::CommonLibrary.LocalizedString RoleComparer
    {
      get
      {
        return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Docflow.IConditionBase) , "RoleComparer");
      }
    }

    public virtual global::CommonLibrary.LocalizedString RoleComparerFormat(params object[] args)
    {
      return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Docflow.IConditionBase), "RoleComparer", false, args);
    }
    public virtual global::CommonLibrary.LocalizedString CannotComputeRoles
    {
      get
      {
        return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Docflow.IConditionBase) , "CannotComputeRoles");
      }
    }

    public virtual global::CommonLibrary.LocalizedString CannotComputeRolesFormat(params object[] args)
    {
      return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Docflow.IConditionBase), "CannotComputeRoles", false, args);
    }
    public virtual global::CommonLibrary.LocalizedString ConditionDeliveryMethod
    {
      get
      {
        return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Docflow.IConditionBase) , "ConditionDeliveryMethod");
      }
    }

    public virtual global::CommonLibrary.LocalizedString ConditionDeliveryMethodFormat(params object[] args)
    {
      return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Docflow.IConditionBase), "ConditionDeliveryMethod", false, args);
    }
    public virtual global::CommonLibrary.LocalizedString SignedByCounterparty
    {
      get
      {
        return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Docflow.IConditionBase) , "SignedByCounterparty");
      }
    }

    public virtual global::CommonLibrary.LocalizedString SignedByCounterpartyFormat(params object[] args)
    {
      return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Docflow.IConditionBase), "SignedByCounterparty", false, args);
    }
    public virtual global::CommonLibrary.LocalizedString HasAddenda
    {
      get
      {
        return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Docflow.IConditionBase) , "HasAddenda");
      }
    }

    public virtual global::CommonLibrary.LocalizedString HasAddendaFormat(params object[] args)
    {
      return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Docflow.IConditionBase), "HasAddenda", false, args);
    }

  }
}

// ==================================================================
// ConditionBaseSharedFunctions.g.cs
// ==================================================================

namespace Sungero.Docflow.Shared
{
  public partial class ConditionBaseFunctions : global::Sungero.CoreEntities.Shared.DatabookEntryFunctions
  {
    private global::Sungero.Docflow.IConditionBase _obj
    {
      get { return (global::Sungero.Docflow.IConditionBase)this.Entity; }
    }

    public ConditionBaseFunctions(global::Sungero.Docflow.IConditionBase entity) : base(entity) { }
  }
}

// ==================================================================
// ConditionBaseFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Functions
{
  internal static class ConditionBase
  {
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ConditionBaseFunctions" />
    internal static  System.Collections.Generic.Dictionary<global::System.String, global::System.Collections.Generic.List<global::System.Nullable<global::Sungero.Core.Enumeration>>> GetSupportedConditions(global::Sungero.Docflow.IConditionBase conditionBase)
    {
      var functions = (global::Sungero.Docflow.Shared.ConditionBaseFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)conditionBase).FunctionsContainer.SharedFunctions;
      return functions.GetSupportedConditions();
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ConditionBaseFunctions" />
    internal static  global::System.Boolean CheckConditionAbility(global::Sungero.Docflow.IConditionBase conditionBase, global::Sungero.Docflow.IDocumentKind documentKind, System.Collections.Generic.Dictionary<global::System.String, global::System.Collections.Generic.List<global::System.Nullable<global::Sungero.Core.Enumeration>>> supportedConditions)
    {
      var functions = (global::Sungero.Docflow.Shared.ConditionBaseFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)conditionBase).FunctionsContainer.SharedFunctions;
      return functions.CheckConditionAbility(documentKind, supportedConditions);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ConditionBaseFunctions" />
    internal static  global::System.Collections.Generic.List<global::System.Nullable<global::Sungero.Core.Enumeration>> GetPossibleConditionTypes(global::Sungero.Docflow.IConditionBase conditionBase, System.Collections.Generic.Dictionary<global::System.String, global::System.Collections.Generic.List<global::System.Nullable<global::Sungero.Core.Enumeration>>> supportedConditions)
    {
      var functions = (global::Sungero.Docflow.Shared.ConditionBaseFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)conditionBase).FunctionsContainer.SharedFunctions;
      return functions.GetPossibleConditionTypes(supportedConditions);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ConditionBaseFunctions" />
    internal static  void ChangePropertiesAccess(global::Sungero.Docflow.IConditionBase conditionBase)
    {
      var functions = (global::Sungero.Docflow.Shared.ConditionBaseFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)conditionBase).FunctionsContainer.SharedFunctions;
    functions.ChangePropertiesAccess();
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ConditionBaseFunctions" />
    internal static  void ClearHiddenProperties(global::Sungero.Docflow.IConditionBase conditionBase)
    {
      var functions = (global::Sungero.Docflow.Shared.ConditionBaseFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)conditionBase).FunctionsContainer.SharedFunctions;
    functions.ClearHiddenProperties();
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ConditionBaseFunctions" />
    internal static  global::Sungero.Docflow.Structures.ConditionBase.ConditionResult CheckCondition(global::Sungero.Docflow.IConditionBase conditionBase, global::Sungero.Docflow.IOfficialDocument document, global::Sungero.Docflow.IApprovalTask task)
    {
      var functions = (global::Sungero.Docflow.Shared.ConditionBaseFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)conditionBase).FunctionsContainer.SharedFunctions;
      return functions.CheckCondition(document, task);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ConditionBaseFunctions" />
    internal static  global::Sungero.Docflow.Structures.ConditionBase.ConditionResult CheckSignedByCounterparty(global::Sungero.Docflow.IConditionBase conditionBase, global::Sungero.Docflow.IOfficialDocument document, global::Sungero.Docflow.IApprovalTask task)
    {
      var functions = (global::Sungero.Docflow.Shared.ConditionBaseFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)conditionBase).FunctionsContainer.SharedFunctions;
      return functions.CheckSignedByCounterparty(document, task);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ConditionBaseFunctions" />
    internal static  global::Sungero.Docflow.Structures.ConditionBase.ConditionResult CheckHasAddenda(global::Sungero.Docflow.IConditionBase conditionBase, global::Sungero.Docflow.IOfficialDocument document, global::Sungero.Docflow.IApprovalTask task)
    {
      var functions = (global::Sungero.Docflow.Shared.ConditionBaseFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)conditionBase).FunctionsContainer.SharedFunctions;
      return functions.CheckHasAddenda(document, task);
    }

    internal static class Remote
    {
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ConditionBaseFunctions" />
      internal static  global::Sungero.Docflow.IConditionBase GetCondition(global::System.Int32 id)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::Sungero.Docflow.IConditionBase>(
          global::System.Guid.Parse("325a0811-c109-483d-bf57-3246eade5644"),
          "GetCondition(global::System.Int32)"
      , id);
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ConditionBaseFunctions" />
      internal static  void DeleteCondition(global::Sungero.Docflow.IConditionBase condition)
      {
      global::Sungero.Domain.Shared.RemoteFunctionExecutor.Execute(
          global::System.Guid.Parse("325a0811-c109-483d-bf57-3246eade5644"),
          "DeleteCondition(global::Sungero.Docflow.IConditionBase)"
      , condition);
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ConditionBaseFunctions" />
      internal static  global::System.Boolean HasRules(global::Sungero.Docflow.IConditionBase condition)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::System.Boolean>(
          global::System.Guid.Parse("325a0811-c109-483d-bf57-3246eade5644"),
          "HasRules(global::Sungero.Docflow.IConditionBase)"
      , condition);
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ConditionBaseFunctions" />
      internal static  global::Sungero.Docflow.Structures.ConditionBase.ConditionResult CompareRoles(global::Sungero.Docflow.IConditionBase conditionBase, global::Sungero.Docflow.IApprovalTask task)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::Sungero.Docflow.Structures.ConditionBase.ConditionResult>(
          global::System.Guid.Parse("325a0811-c109-483d-bf57-3246eade5644"),
          "CompareRoles(global::Sungero.Docflow.IConditionBase,global::Sungero.Docflow.IApprovalTask)"
          , conditionBase, task);
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ConditionBaseFunctions" />
      internal static  global::Sungero.Docflow.Structures.ConditionBase.ConditionResult CompareRoleAndRecipient(global::Sungero.Docflow.IConditionBase conditionBase, global::Sungero.Docflow.IApprovalTask task)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::Sungero.Docflow.Structures.ConditionBase.ConditionResult>(
          global::System.Guid.Parse("325a0811-c109-483d-bf57-3246eade5644"),
          "CompareRoleAndRecipient(global::Sungero.Docflow.IConditionBase,global::Sungero.Docflow.IApprovalTask)"
          , conditionBase, task);
      }

    }
  }
}

// ==================================================================
// ConditionBaseFilterState.g.cs
// ==================================================================

namespace Sungero.Docflow.Shared.ConditionBase
{

  public class ConditionBaseFilterInfo : global::Sungero.CoreEntities.Shared.DatabookEntry.DatabookEntryFilterInfo,
    global::Sungero.Docflow.IConditionBaseFilterInfo
  {
  }

  public class ConditionBaseFilterState : global::Sungero.CoreEntities.Shared.DatabookEntry.DatabookEntryFilterState,
    global::Sungero.Docflow.IConditionBaseFilterState
  {



    public new Sungero.Docflow.IConditionBaseFilterInfo Info
    {
      get
      {
        return (Sungero.Docflow.IConditionBaseFilterInfo) base.Info;
      }
    }
    protected override global::Sungero.Domain.Shared.IFilterInfo CreateFilterInfo()
    {
      return new Sungero.Docflow.Shared.ConditionBase.ConditionBaseFilterInfo();
    }

  }
}

// ==================================================================
// ConditionBaseSharedPublicFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Shared
{
  public class ConditionBaseSharedPublicFunctions : global::Sungero.Docflow.Shared.IConditionBaseSharedPublicFunctions
  {
    public global::System.Boolean CheckConditionAbility(global::Sungero.Docflow.IConditionBase conditionBase, global::Sungero.Docflow.IDocumentKind documentKind, System.Collections.Generic.Dictionary<global::System.String, global::System.Collections.Generic.List<global::System.Nullable<global::Sungero.Core.Enumeration>>> supportedConditions)
    {
      return global::Sungero.Docflow.Functions.ConditionBase.CheckConditionAbility(conditionBase, documentKind, supportedConditions);
    }
    public void Remote_DeleteCondition(global::Sungero.Docflow.IConditionBase condition)
    {
global::Sungero.Docflow.Functions.ConditionBase.Remote.DeleteCondition(condition);
    }
    public global::Sungero.Docflow.IConditionBase Remote_GetCondition(global::System.Int32 id)
    {
      return global::Sungero.Docflow.Functions.ConditionBase.Remote.GetCondition(id);
    }
    public global::System.Collections.Generic.List<global::System.Nullable<global::Sungero.Core.Enumeration>> GetPossibleConditionTypes(global::Sungero.Docflow.IConditionBase conditionBase, System.Collections.Generic.Dictionary<global::System.String, global::System.Collections.Generic.List<global::System.Nullable<global::Sungero.Core.Enumeration>>> supportedConditions)
    {
      return global::Sungero.Docflow.Functions.ConditionBase.GetPossibleConditionTypes(conditionBase, supportedConditions);
    }
    public System.Collections.Generic.Dictionary<global::System.String, global::System.Collections.Generic.List<global::System.Nullable<global::Sungero.Core.Enumeration>>> GetSupportedConditions(global::Sungero.Docflow.IConditionBase conditionBase)
    {
      return global::Sungero.Docflow.Functions.ConditionBase.GetSupportedConditions(conditionBase);
    }
    public global::System.Boolean Remote_HasRules(global::Sungero.Docflow.IConditionBase condition)
    {
      return global::Sungero.Docflow.Functions.ConditionBase.Remote.HasRules(condition);
    }
  }
}
