
// ==================================================================
// SignatureSettingState.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Shared
{
  public class SignatureSettingState : 
    global::Sungero.CoreEntities.Shared.DatabookEntryState, global::Sungero.Docflow.ISignatureSettingState
  {
    public SignatureSettingState(global::Sungero.Docflow.ISignatureSetting entity) : base(entity) { }

    public new global::Sungero.Docflow.ISignatureSettingPropertyStates Properties
    {
      get { return (global::Sungero.Docflow.ISignatureSettingPropertyStates)base.Properties; }
    }

    protected override global::Sungero.Domain.Shared.IEntityPropertyStates CreatePropertyStates(global::Sungero.Domain.Shared.IEntity entity)
    {
      return new global::Sungero.Docflow.Shared.SignatureSettingPropertyStates(entity);
    }


    public new global::Sungero.Docflow.ISignatureSettingControlStates Controls
    {
      get { return (global::Sungero.Docflow.ISignatureSettingControlStates)base.Controls; }
    }

    protected override global::Sungero.Domain.Shared.IEntityControlStates CreateControlStates(global::Sungero.Domain.Shared.IEntity entity)
    {
      return new global::Sungero.Docflow.Shared.SignatureSettingControlStates(entity);
    }

    public new global::Sungero.Docflow.ISignatureSettingPageStates Pages
    {
      get { return (global::Sungero.Docflow.ISignatureSettingPageStates)base.Pages; }
    }

    protected override global::Sungero.Domain.Shared.IEntityPageStates CreatePageStates(global::Sungero.Domain.Shared.IEntity entity)
    {
      return new global::Sungero.Docflow.Shared.SignatureSettingPageStates(entity);
    }

  }


  public class SignatureSettingControlStates : 
    global::Sungero.CoreEntities.Shared.DatabookEntryControlStates, global::Sungero.Docflow.ISignatureSettingControlStates
  {

    protected internal SignatureSettingControlStates(global::Sungero.Domain.Shared.IEntity entity) : base(entity) { }
  }
  public class SignatureSettingPageStates : 
    global::Sungero.CoreEntities.Shared.DatabookEntryPageStates, global::Sungero.Docflow.ISignatureSettingPageStates
  {
        public global::Sungero.Domain.Shared.IStandalonePageState MainPage
        {
        get { return this.GetPageState<Sungero.Domain.Shared.IStandalonePageState>("Card"); }
        }


    protected internal SignatureSettingPageStates(global::Sungero.Domain.Shared.IEntity entity) : base(entity) { }
  }

  public class SignatureSettingPropertyStates : 
    global::Sungero.CoreEntities.Shared.DatabookEntryPropertyStates, global::Sungero.Docflow.ISignatureSettingPropertyStates
  {
            public global::Sungero.Domain.Shared.IPropertyState<global::System.String> Name 
            {
              get { return this.GetPropertyState<global::System.String>("Name"); }
            }
            public global::Sungero.Domain.Shared.IPropertyState<global::Sungero.CoreEntities.IRecipient> Recipient 
            {
              get { return this.InternalRecipient; }
            }

            protected virtual global::Sungero.Domain.Shared.IPropertyState<global::Sungero.CoreEntities.IRecipient> InternalRecipient
            {
              get { return this.GetPropertyState<global::Sungero.CoreEntities.IRecipient>("Recipient"); }
            }
            public global::Sungero.Domain.Shared.IPropertyState<global::Sungero.Docflow.IOfficialDocument> Document 
            {
              get { return this.InternalDocument; }
            }

            protected virtual global::Sungero.Domain.Shared.IPropertyState<global::Sungero.Docflow.IOfficialDocument> InternalDocument
            {
              get { return this.GetPropertyState<global::Sungero.Docflow.IOfficialDocument>("Document"); }
            }
            public global::Sungero.Domain.Shared.IPropertyState<global::System.DateTime?> ValidTill 
            {
              get { return this.GetPropertyState<global::System.DateTime?>("ValidTill"); }
            }
            public global::Sungero.Domain.Shared.IPropertyState<global::System.DateTime?> ValidFrom 
            {
              get { return this.GetPropertyState<global::System.DateTime?>("ValidFrom"); }
            }
            public global::Sungero.Domain.Shared.IPropertyState<global::Sungero.Core.Enumeration?> Reason 
            {
              get { return this.GetPropertyState<global::Sungero.Core.Enumeration?>("Reason"); }
            }
            public global::Sungero.Docflow.ISignatureSettingBusinessUnitsCollectionPropertyState<global::Sungero.Docflow.ISignatureSettingBusinessUnits> BusinessUnits 
            {
              get { return this.GetPropertyState("BusinessUnits", this.CreateBusinessUnitsState); }
            }

            protected virtual global::Sungero.Docflow.ISignatureSettingBusinessUnitsCollectionPropertyState<global::Sungero.Docflow.ISignatureSettingBusinessUnits> CreateBusinessUnitsState(global::Sungero.Domain.Shared.IEntity entity, string propertyName)
            {
              return new global::Sungero.Docflow.Shared.SignatureSettingBusinessUnitsCollectionPropertyState<global::Sungero.Docflow.ISignatureSettingBusinessUnits>(entity, propertyName);
            }
            public global::Sungero.Docflow.ISignatureSettingDocumentKindsCollectionPropertyState<global::Sungero.Docflow.ISignatureSettingDocumentKinds> DocumentKinds 
            {
              get { return this.GetPropertyState("DocumentKinds", this.CreateDocumentKindsState); }
            }

            protected virtual global::Sungero.Docflow.ISignatureSettingDocumentKindsCollectionPropertyState<global::Sungero.Docflow.ISignatureSettingDocumentKinds> CreateDocumentKindsState(global::Sungero.Domain.Shared.IEntity entity, string propertyName)
            {
              return new global::Sungero.Docflow.Shared.SignatureSettingDocumentKindsCollectionPropertyState<global::Sungero.Docflow.ISignatureSettingDocumentKinds>(entity, propertyName);
            }
            public global::Sungero.Domain.Shared.IPropertyState<global::Sungero.Core.Enumeration?> Limit 
            {
              get { return this.GetPropertyState<global::Sungero.Core.Enumeration?>("Limit"); }
            }
            public global::Sungero.Domain.Shared.IPropertyState<global::System.Double?> Amount 
            {
              get { return this.GetPropertyState<global::System.Double?>("Amount"); }
            }
            public global::Sungero.Domain.Shared.IPropertyState<global::Sungero.Commons.ICurrency> Currency 
            {
              get { return this.InternalCurrency; }
            }

            protected virtual global::Sungero.Domain.Shared.IPropertyState<global::Sungero.Commons.ICurrency> InternalCurrency
            {
              get { return this.GetPropertyState<global::Sungero.Commons.ICurrency>("Currency"); }
            }
            public global::Sungero.Domain.Shared.IPropertyState<global::System.String> Note 
            {
              get { return this.GetPropertyState<global::System.String>("Note"); }
            }
            public global::Sungero.Domain.Shared.IPropertyState<global::System.Boolean?> IsSystem 
            {
              get { return this.GetPropertyState<global::System.Boolean?>("IsSystem"); }
            }
            public global::Sungero.Domain.Shared.IPropertyState<global::System.String> DocumentInfo 
            {
              get { return this.GetPropertyState<global::System.String>("DocumentInfo"); }
            }
            public global::Sungero.Domain.Shared.IPropertyState<global::Sungero.Core.Enumeration?> DocumentFlow 
            {
              get { return this.GetPropertyState<global::Sungero.Core.Enumeration?>("DocumentFlow"); }
            }
            public global::Sungero.Docflow.ISignatureSettingDepartmentsCollectionPropertyState<global::Sungero.Docflow.ISignatureSettingDepartments> Departments 
            {
              get { return this.GetPropertyState("Departments", this.CreateDepartmentsState); }
            }

            protected virtual global::Sungero.Docflow.ISignatureSettingDepartmentsCollectionPropertyState<global::Sungero.Docflow.ISignatureSettingDepartments> CreateDepartmentsState(global::Sungero.Domain.Shared.IEntity entity, string propertyName)
            {
              return new global::Sungero.Docflow.Shared.SignatureSettingDepartmentsCollectionPropertyState<global::Sungero.Docflow.ISignatureSettingDepartments>(entity, propertyName);
            }
            public global::Sungero.Docflow.ISignatureSettingCategoriesCollectionPropertyState<global::Sungero.Docflow.ISignatureSettingCategories> Categories 
            {
              get { return this.GetPropertyState("Categories", this.CreateCategoriesState); }
            }

            protected virtual global::Sungero.Docflow.ISignatureSettingCategoriesCollectionPropertyState<global::Sungero.Docflow.ISignatureSettingCategories> CreateCategoriesState(global::Sungero.Domain.Shared.IEntity entity, string propertyName)
            {
              return new global::Sungero.Docflow.Shared.SignatureSettingCategoriesCollectionPropertyState<global::Sungero.Docflow.ISignatureSettingCategories>(entity, propertyName);
            }
            public global::Sungero.Domain.Shared.IPropertyState<global::System.Int32?> Priority 
            {
              get { return this.GetPropertyState<global::System.Int32?>("Priority"); }
            }
            public global::Sungero.Domain.Shared.IPropertyState<global::Sungero.CoreEntities.ICertificate> Certificate 
            {
              get { return this.InternalCertificate; }
            }

            protected virtual global::Sungero.Domain.Shared.IPropertyState<global::Sungero.CoreEntities.ICertificate> InternalCertificate
            {
              get { return this.GetPropertyState<global::Sungero.CoreEntities.ICertificate>("Certificate"); }
            }


    protected internal SignatureSettingPropertyStates(global::Sungero.Domain.Shared.IEntity entity) : base(entity) { }
  }

}

// ==================================================================
// SignatureSettingEventArgs.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Shared
{  
    public class SignatureSettingRecipientChangedEventArgs : global::Sungero.Domain.Shared.PropertyChangedEventArgs<global::Sungero.CoreEntities.IRecipient>
    {
      public SignatureSettingRecipientChangedEventArgs(global::Sungero.Domain.Shared.IPropertyState<global::Sungero.CoreEntities.IRecipient> state, global::Sungero.CoreEntities.IRecipient newValue, global::Sungero.Domain.Shared.IEntity entity): base(state, newValue, entity) { }
    }

    public class SignatureSettingDocumentChangedEventArgs : global::Sungero.Domain.Shared.PropertyChangedEventArgs<global::Sungero.Docflow.IOfficialDocument>
    {
      public SignatureSettingDocumentChangedEventArgs(global::Sungero.Domain.Shared.IPropertyState<global::Sungero.Docflow.IOfficialDocument> state, global::Sungero.Docflow.IOfficialDocument newValue, global::Sungero.Domain.Shared.IEntity entity): base(state, newValue, entity) { }
    }








    public class SignatureSettingCurrencyChangedEventArgs : global::Sungero.Domain.Shared.PropertyChangedEventArgs<global::Sungero.Commons.ICurrency>
    {
      public SignatureSettingCurrencyChangedEventArgs(global::Sungero.Domain.Shared.IPropertyState<global::Sungero.Commons.ICurrency> state, global::Sungero.Commons.ICurrency newValue, global::Sungero.Domain.Shared.IEntity entity): base(state, newValue, entity) { }
    }








    public class SignatureSettingCertificateChangedEventArgs : global::Sungero.Domain.Shared.PropertyChangedEventArgs<global::Sungero.CoreEntities.ICertificate>
    {
      public SignatureSettingCertificateChangedEventArgs(global::Sungero.Domain.Shared.IPropertyState<global::Sungero.CoreEntities.ICertificate> state, global::Sungero.CoreEntities.ICertificate newValue, global::Sungero.Domain.Shared.IEntity entity): base(state, newValue, entity) { }
    }

}

// ==================================================================
// SignatureSettingInfo.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Shared
{
  public class SignatureSettingInfo : 
    global::Sungero.CoreEntities.Shared.DatabookEntryInfo, global::Sungero.Docflow.ISignatureSettingInfo
  {
    public SignatureSettingInfo(global::System.Type entityType) : base(entityType) { }

    public new global::Sungero.Docflow.ISignatureSettingPropertiesInfo Properties
    {
      get { return (global::Sungero.Docflow.ISignatureSettingPropertiesInfo)base.Properties; }
    }

    protected override global::Sungero.Domain.Shared.IEntityPropertiesInfo CreateEntityPropertiesInfo(global::System.Type entityType)
    {
      return new global::Sungero.Docflow.Shared.SignatureSettingPropertiesInfo(entityType);
    }

  }

  public class SignatureSettingPropertiesInfo : 
    global::Sungero.CoreEntities.Shared.DatabookEntryPropertiesInfo, global::Sungero.Docflow.ISignatureSettingPropertiesInfo
  {
        public global::Sungero.Domain.Shared.IStringPropertyInfo Name 
        {
          get
          {
             var propertyMetadata = this.GetPropertyMetadata<global::Sungero.Metadata.StringPropertyMetadata>("Name");
             return new global::Sungero.Domain.Shared.StringPropertyInfo(propertyMetadata);
          }
        }
        public global::Sungero.Domain.Shared.INavigationPropertyInfo<global::Sungero.CoreEntities.IRecipientInfo, global::Sungero.CoreEntities.IRecipient> Recipient 
        {
          get
          {
             var propertyMetadata = this.GetPropertyMetadata<global::Sungero.Metadata.NavigationPropertyMetadata>("Recipient");
             return new global::Sungero.Domain.Shared.NavigationPropertyInfo<global::Sungero.CoreEntities.IRecipientInfo, global::Sungero.CoreEntities.IRecipient>(propertyMetadata);
          }
        }
        public global::Sungero.Domain.Shared.INavigationPropertyInfo<global::Sungero.Docflow.IOfficialDocumentInfo, global::Sungero.Docflow.IOfficialDocument> Document 
        {
          get
          {
             var propertyMetadata = this.GetPropertyMetadata<global::Sungero.Metadata.NavigationPropertyMetadata>("Document");
             return new global::Sungero.Domain.Shared.NavigationPropertyInfo<global::Sungero.Docflow.IOfficialDocumentInfo, global::Sungero.Docflow.IOfficialDocument>(propertyMetadata);
          }
        }
        public global::Sungero.Domain.Shared.IDateTimePropertyInfo ValidTill 
        {
          get
          {
             var propertyMetadata = this.GetPropertyMetadata<global::Sungero.Metadata.DateTimePropertyMetadata>("ValidTill");
             return new global::Sungero.Domain.Shared.DateTimePropertyInfo(propertyMetadata);
          }
        }
        public global::Sungero.Domain.Shared.IDateTimePropertyInfo ValidFrom 
        {
          get
          {
             var propertyMetadata = this.GetPropertyMetadata<global::Sungero.Metadata.DateTimePropertyMetadata>("ValidFrom");
             return new global::Sungero.Domain.Shared.DateTimePropertyInfo(propertyMetadata);
          }
        }
        public global::Sungero.Domain.Shared.IEnumPropertyInfo Reason 
        {
          get
          {
             var propertyMetadata = this.GetPropertyMetadata<global::Sungero.Metadata.EnumPropertyMetadata>("Reason");
             return new global::Sungero.Domain.Shared.EnumPropertyInfo(propertyMetadata);
          }
        }
        public global::Sungero.Domain.Shared.ICollectionPropertyInfo<global::Sungero.Docflow.ISignatureSettingBusinessUnitsPropertiesInfo> BusinessUnits 
        {
          get
          {
             var propertyMetadata = this.GetPropertyMetadata<global::Sungero.Metadata.CollectionPropertyMetadata>("BusinessUnits");
             return new global::Sungero.Domain.Shared.CollectionPropertyInfo<global::Sungero.Docflow.ISignatureSettingBusinessUnitsPropertiesInfo>(propertyMetadata);
          }
        }
        public global::Sungero.Domain.Shared.ICollectionPropertyInfo<global::Sungero.Docflow.ISignatureSettingDocumentKindsPropertiesInfo> DocumentKinds 
        {
          get
          {
             var propertyMetadata = this.GetPropertyMetadata<global::Sungero.Metadata.CollectionPropertyMetadata>("DocumentKinds");
             return new global::Sungero.Domain.Shared.CollectionPropertyInfo<global::Sungero.Docflow.ISignatureSettingDocumentKindsPropertiesInfo>(propertyMetadata);
          }
        }
        public global::Sungero.Domain.Shared.IEnumPropertyInfo Limit 
        {
          get
          {
             var propertyMetadata = this.GetPropertyMetadata<global::Sungero.Metadata.EnumPropertyMetadata>("Limit");
             return new global::Sungero.Domain.Shared.EnumPropertyInfo(propertyMetadata);
          }
        }
        public global::Sungero.Domain.Shared.IDoublePropertyInfo Amount 
        {
          get
          {
             var propertyMetadata = this.GetPropertyMetadata<global::Sungero.Metadata.DoublePropertyMetadata>("Amount");
             return new global::Sungero.Domain.Shared.DoublePropertyInfo(propertyMetadata);
          }
        }
        public global::Sungero.Domain.Shared.INavigationPropertyInfo<global::Sungero.Commons.ICurrencyInfo, global::Sungero.Commons.ICurrency> Currency 
        {
          get
          {
             var propertyMetadata = this.GetPropertyMetadata<global::Sungero.Metadata.NavigationPropertyMetadata>("Currency");
             return new global::Sungero.Domain.Shared.NavigationPropertyInfo<global::Sungero.Commons.ICurrencyInfo, global::Sungero.Commons.ICurrency>(propertyMetadata);
          }
        }
        public global::Sungero.Domain.Shared.IStringPropertyInfo Note 
        {
          get
          {
             var propertyMetadata = this.GetPropertyMetadata<global::Sungero.Metadata.StringPropertyMetadata>("Note");
             return new global::Sungero.Domain.Shared.StringPropertyInfo(propertyMetadata);
          }
        }
        public global::Sungero.Domain.Shared.IBooleanPropertyInfo IsSystem 
        {
          get
          {
             var propertyMetadata = this.GetPropertyMetadata<global::Sungero.Metadata.BooleanPropertyMetadata>("IsSystem");
             return new global::Sungero.Domain.Shared.BooleanPropertyInfo(propertyMetadata);
          }
        }
        public global::Sungero.Domain.Shared.IStringPropertyInfo DocumentInfo 
        {
          get
          {
             var propertyMetadata = this.GetPropertyMetadata<global::Sungero.Metadata.StringPropertyMetadata>("DocumentInfo");
             return new global::Sungero.Domain.Shared.StringPropertyInfo(propertyMetadata);
          }
        }
        public global::Sungero.Domain.Shared.IEnumPropertyInfo DocumentFlow 
        {
          get
          {
             var propertyMetadata = this.GetPropertyMetadata<global::Sungero.Metadata.EnumPropertyMetadata>("DocumentFlow");
             return new global::Sungero.Domain.Shared.EnumPropertyInfo(propertyMetadata);
          }
        }
        public global::Sungero.Domain.Shared.ICollectionPropertyInfo<global::Sungero.Docflow.ISignatureSettingDepartmentsPropertiesInfo> Departments 
        {
          get
          {
             var propertyMetadata = this.GetPropertyMetadata<global::Sungero.Metadata.CollectionPropertyMetadata>("Departments");
             return new global::Sungero.Domain.Shared.CollectionPropertyInfo<global::Sungero.Docflow.ISignatureSettingDepartmentsPropertiesInfo>(propertyMetadata);
          }
        }
        public global::Sungero.Domain.Shared.ICollectionPropertyInfo<global::Sungero.Docflow.ISignatureSettingCategoriesPropertiesInfo> Categories 
        {
          get
          {
             var propertyMetadata = this.GetPropertyMetadata<global::Sungero.Metadata.CollectionPropertyMetadata>("Categories");
             return new global::Sungero.Domain.Shared.CollectionPropertyInfo<global::Sungero.Docflow.ISignatureSettingCategoriesPropertiesInfo>(propertyMetadata);
          }
        }
        public global::Sungero.Domain.Shared.IIntegerPropertyInfo Priority 
        {
          get
          {
             var propertyMetadata = this.GetPropertyMetadata<global::Sungero.Metadata.IntegerPropertyMetadata>("Priority");
             return new global::Sungero.Domain.Shared.IntegerPropertyInfo(propertyMetadata);
          }
        }
        public global::Sungero.Domain.Shared.INavigationPropertyInfo<global::Sungero.CoreEntities.ICertificateInfo, global::Sungero.CoreEntities.ICertificate> Certificate 
        {
          get
          {
             var propertyMetadata = this.GetPropertyMetadata<global::Sungero.Metadata.NavigationPropertyMetadata>("Certificate");
             return new global::Sungero.Domain.Shared.NavigationPropertyInfo<global::Sungero.CoreEntities.ICertificateInfo, global::Sungero.CoreEntities.ICertificate>(propertyMetadata);
          }
        }


    protected internal SignatureSettingPropertiesInfo(global::System.Type entityType) : base(entityType) { }
  }

}

// ==================================================================
// SignatureSettingHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow
{
  public partial class SignatureSettingSharedHandlers : global::Sungero.CoreEntities.DatabookEntrySharedHandlers
  {
    private global::Sungero.Docflow.ISignatureSetting _obj
    {
      get { return (global::Sungero.Docflow.ISignatureSetting)this.Entity; }
    }
    public virtual void NameChanged(global::Sungero.Domain.Shared.StringPropertyChangedEventArgs e) { }




    public virtual void ValidTillChanged(global::Sungero.Domain.Shared.DateTimePropertyChangedEventArgs e) { }


    public virtual void ValidFromChanged(global::Sungero.Domain.Shared.DateTimePropertyChangedEventArgs e) { }







    public virtual void CurrencyChanged(global::Sungero.Docflow.Shared.SignatureSettingCurrencyChangedEventArgs e) { }


    public virtual void NoteChanged(global::Sungero.Domain.Shared.StringPropertyChangedEventArgs e) { }


    public virtual void IsSystemChanged(global::Sungero.Domain.Shared.BooleanPropertyChangedEventArgs e) { }


    public virtual void DocumentInfoChanged(global::Sungero.Domain.Shared.StringPropertyChangedEventArgs e) { }



    public virtual void DepartmentsChanged(global::Sungero.Domain.Shared.CollectionPropertyChangedEventArgs e) { }


    public virtual void CategoriesChanged(global::Sungero.Domain.Shared.CollectionPropertyChangedEventArgs e) { }


    public virtual void PriorityChanged(global::Sungero.Domain.Shared.IntegerPropertyChangedEventArgs e) { }


    public virtual void CertificateChanged(global::Sungero.Docflow.Shared.SignatureSettingCertificateChangedEventArgs e) { }




    public SignatureSettingSharedHandlers(global::Sungero.Docflow.ISignatureSetting entity) : base(entity)
    {
    }
  }

  public partial class SignatureSettingBusinessUnitsSharedHandlers : global::Sungero.Domain.Shared.ChildEntitySharedHandlers
  {
    private global::Sungero.Docflow.ISignatureSettingBusinessUnits _obj
    { 
      get { return (global::Sungero.Docflow.ISignatureSettingBusinessUnits)this.Entity; }
    }
    public virtual void BusinessUnitsBusinessUnitChanged(global::Sungero.Docflow.Shared.SignatureSettingBusinessUnitsBusinessUnitChangedEventArgs e) { }



    public SignatureSettingBusinessUnitsSharedHandlers(global::Sungero.Docflow.ISignatureSettingBusinessUnits entity) : base(entity)
    {
    }
  }

  public partial class SignatureSettingBusinessUnitsSharedCollectionHandlers : global::Sungero.Domain.Shared.ChildEntitySharedCollectionHandlers
  {
    private global::Sungero.Docflow.ISignatureSetting _obj
    { 
      get { return (global::Sungero.Docflow.ISignatureSetting)this.Entity; }
    }

    private global::Sungero.Docflow.ISignatureSettingBusinessUnits _added
    {
      get { return (global::Sungero.Docflow.ISignatureSettingBusinessUnits)this._Added; }
    }

    private global::Sungero.Docflow.ISignatureSettingBusinessUnits _deleted
    {
      get { return (global::Sungero.Docflow.ISignatureSettingBusinessUnits)this._Deleted; }
    }

    private global::Sungero.Docflow.ISignatureSettingBusinessUnits _source
    {
      get { return (global::Sungero.Docflow.ISignatureSettingBusinessUnits)this._Source; }
    }

    public virtual void BusinessUnitsAdded(global::Sungero.Domain.Shared.CollectionPropertyAddedEventArgs e) { }
    public virtual void BusinessUnitsDeleted(global::Sungero.Domain.Shared.CollectionPropertyDeletedEventArgs e) { }

    public SignatureSettingBusinessUnitsSharedCollectionHandlers(global::Sungero.Docflow.ISignatureSetting entity, global::Sungero.Domain.Shared.IChildEntity added, global::Sungero.Domain.Shared.IChildEntity deleted, global::Sungero.Domain.Shared.IChildEntity source)
      : base (entity, added, deleted, source)
    {
    }
  }

  public partial class SignatureSettingDocumentKindsSharedHandlers : global::Sungero.Domain.Shared.ChildEntitySharedHandlers
  {
    private global::Sungero.Docflow.ISignatureSettingDocumentKinds _obj
    { 
      get { return (global::Sungero.Docflow.ISignatureSettingDocumentKinds)this.Entity; }
    }
    public virtual void DocumentKindsDocumentKindChanged(global::Sungero.Docflow.Shared.SignatureSettingDocumentKindsDocumentKindChangedEventArgs e) { }



    public SignatureSettingDocumentKindsSharedHandlers(global::Sungero.Docflow.ISignatureSettingDocumentKinds entity) : base(entity)
    {
    }
  }

  public partial class SignatureSettingDocumentKindsSharedCollectionHandlers : global::Sungero.Domain.Shared.ChildEntitySharedCollectionHandlers
  {
    private global::Sungero.Docflow.ISignatureSetting _obj
    { 
      get { return (global::Sungero.Docflow.ISignatureSetting)this.Entity; }
    }

    private global::Sungero.Docflow.ISignatureSettingDocumentKinds _added
    {
      get { return (global::Sungero.Docflow.ISignatureSettingDocumentKinds)this._Added; }
    }

    private global::Sungero.Docflow.ISignatureSettingDocumentKinds _deleted
    {
      get { return (global::Sungero.Docflow.ISignatureSettingDocumentKinds)this._Deleted; }
    }

    private global::Sungero.Docflow.ISignatureSettingDocumentKinds _source
    {
      get { return (global::Sungero.Docflow.ISignatureSettingDocumentKinds)this._Source; }
    }

    public virtual void DocumentKindsAdded(global::Sungero.Domain.Shared.CollectionPropertyAddedEventArgs e) { }
    public virtual void DocumentKindsDeleted(global::Sungero.Domain.Shared.CollectionPropertyDeletedEventArgs e) { }

    public SignatureSettingDocumentKindsSharedCollectionHandlers(global::Sungero.Docflow.ISignatureSetting entity, global::Sungero.Domain.Shared.IChildEntity added, global::Sungero.Domain.Shared.IChildEntity deleted, global::Sungero.Domain.Shared.IChildEntity source)
      : base (entity, added, deleted, source)
    {
    }
  }

  public partial class SignatureSettingDepartmentsSharedHandlers : global::Sungero.Domain.Shared.ChildEntitySharedHandlers
  {
    private global::Sungero.Docflow.ISignatureSettingDepartments _obj
    { 
      get { return (global::Sungero.Docflow.ISignatureSettingDepartments)this.Entity; }
    }
    public virtual void DepartmentsDepartmentChanged(global::Sungero.Docflow.Shared.SignatureSettingDepartmentsDepartmentChangedEventArgs e) { }



    public SignatureSettingDepartmentsSharedHandlers(global::Sungero.Docflow.ISignatureSettingDepartments entity) : base(entity)
    {
    }
  }

  public partial class SignatureSettingDepartmentsSharedCollectionHandlers : global::Sungero.Domain.Shared.ChildEntitySharedCollectionHandlers
  {
    private global::Sungero.Docflow.ISignatureSetting _obj
    { 
      get { return (global::Sungero.Docflow.ISignatureSetting)this.Entity; }
    }

    private global::Sungero.Docflow.ISignatureSettingDepartments _added
    {
      get { return (global::Sungero.Docflow.ISignatureSettingDepartments)this._Added; }
    }

    private global::Sungero.Docflow.ISignatureSettingDepartments _deleted
    {
      get { return (global::Sungero.Docflow.ISignatureSettingDepartments)this._Deleted; }
    }

    private global::Sungero.Docflow.ISignatureSettingDepartments _source
    {
      get { return (global::Sungero.Docflow.ISignatureSettingDepartments)this._Source; }
    }

    public virtual void DepartmentsAdded(global::Sungero.Domain.Shared.CollectionPropertyAddedEventArgs e) { }
    public virtual void DepartmentsDeleted(global::Sungero.Domain.Shared.CollectionPropertyDeletedEventArgs e) { }

    public SignatureSettingDepartmentsSharedCollectionHandlers(global::Sungero.Docflow.ISignatureSetting entity, global::Sungero.Domain.Shared.IChildEntity added, global::Sungero.Domain.Shared.IChildEntity deleted, global::Sungero.Domain.Shared.IChildEntity source)
      : base (entity, added, deleted, source)
    {
    }
  }

  public partial class SignatureSettingCategoriesSharedHandlers : global::Sungero.Domain.Shared.ChildEntitySharedHandlers
  {
    private global::Sungero.Docflow.ISignatureSettingCategories _obj
    { 
      get { return (global::Sungero.Docflow.ISignatureSettingCategories)this.Entity; }
    }
    public virtual void CategoriesCategoryChanged(global::Sungero.Docflow.Shared.SignatureSettingCategoriesCategoryChangedEventArgs e) { }



    public SignatureSettingCategoriesSharedHandlers(global::Sungero.Docflow.ISignatureSettingCategories entity) : base(entity)
    {
    }
  }

  public partial class SignatureSettingCategoriesSharedCollectionHandlers : global::Sungero.Domain.Shared.ChildEntitySharedCollectionHandlers
  {
    private global::Sungero.Docflow.ISignatureSetting _obj
    { 
      get { return (global::Sungero.Docflow.ISignatureSetting)this.Entity; }
    }

    private global::Sungero.Docflow.ISignatureSettingCategories _added
    {
      get { return (global::Sungero.Docflow.ISignatureSettingCategories)this._Added; }
    }

    private global::Sungero.Docflow.ISignatureSettingCategories _deleted
    {
      get { return (global::Sungero.Docflow.ISignatureSettingCategories)this._Deleted; }
    }

    private global::Sungero.Docflow.ISignatureSettingCategories _source
    {
      get { return (global::Sungero.Docflow.ISignatureSettingCategories)this._Source; }
    }

    public virtual void CategoriesAdded(global::Sungero.Domain.Shared.CollectionPropertyAddedEventArgs e) { }
    public virtual void CategoriesDeleted(global::Sungero.Domain.Shared.CollectionPropertyDeletedEventArgs e) { }

    public SignatureSettingCategoriesSharedCollectionHandlers(global::Sungero.Docflow.ISignatureSetting entity, global::Sungero.Domain.Shared.IChildEntity added, global::Sungero.Domain.Shared.IChildEntity deleted, global::Sungero.Domain.Shared.IChildEntity source)
      : base (entity, added, deleted, source)
    {
    }
  }

}

// ==================================================================
// SignatureSettingResources.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Shared.SignatureSetting
{
  /// <summary>
  /// Represents SignatureSetting resources.
  /// </summary>
  public class SignatureSettingResources : global::Sungero.CoreEntities.Shared.DatabookEntry.DatabookEntryResources, global::Sungero.Docflow.SignatureSetting.ISignatureSettingResources
  {
    public virtual global::CommonLibrary.LocalizedString NegativeAmount
    {
      get
      {
        return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Docflow.ISignatureSetting) , "NegativeAmount");
      }
    }

    public virtual global::CommonLibrary.LocalizedString NegativeAmountFormat(params object[] args)
    {
      return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Docflow.ISignatureSetting), "NegativeAmount", false, args);
    }
    public virtual global::CommonLibrary.LocalizedString IncorrectValidDates
    {
      get
      {
        return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Docflow.ISignatureSetting) , "IncorrectValidDates");
      }
    }

    public virtual global::CommonLibrary.LocalizedString IncorrectValidDatesFormat(params object[] args)
    {
      return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Docflow.ISignatureSetting), "IncorrectValidDates", false, args);
    }
    public virtual global::CommonLibrary.LocalizedString DocumentAmountLessThen
    {
      get
      {
        return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Docflow.ISignatureSetting) , "DocumentAmountLessThen");
      }
    }

    public virtual global::CommonLibrary.LocalizedString DocumentAmountLessThenFormat(params object[] args)
    {
      return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Docflow.ISignatureSetting), "DocumentAmountLessThen", false, args);
    }
    public virtual global::CommonLibrary.LocalizedString IncorrectValidTill
    {
      get
      {
        return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Docflow.ISignatureSetting) , "IncorrectValidTill");
      }
    }

    public virtual global::CommonLibrary.LocalizedString IncorrectValidTillFormat(params object[] args)
    {
      return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Docflow.ISignatureSetting), "IncorrectValidTill", false, args);
    }
    public virtual global::CommonLibrary.LocalizedString IncorrectDocumentType
    {
      get
      {
        return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Docflow.ISignatureSetting) , "IncorrectDocumentType");
      }
    }

    public virtual global::CommonLibrary.LocalizedString IncorrectDocumentTypeFormat(params object[] args)
    {
      return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Docflow.ISignatureSetting), "IncorrectDocumentType", false, args);
    }
    public virtual global::CommonLibrary.LocalizedString IncompatibleDocumentKindsExcluded
    {
      get
      {
        return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Docflow.ISignatureSetting) , "IncompatibleDocumentKindsExcluded");
      }
    }

    public virtual global::CommonLibrary.LocalizedString IncompatibleDocumentKindsExcludedFormat(params object[] args)
    {
      return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Docflow.ISignatureSetting), "IncompatibleDocumentKindsExcluded", false, args);
    }
    public virtual global::CommonLibrary.LocalizedString IncompatibleCategoriesExcluded
    {
      get
      {
        return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Docflow.ISignatureSetting) , "IncompatibleCategoriesExcluded");
      }
    }

    public virtual global::CommonLibrary.LocalizedString IncompatibleCategoriesExcludedFormat(params object[] args)
    {
      return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Docflow.ISignatureSetting), "IncompatibleCategoriesExcluded", false, args);
    }
    public virtual global::CommonLibrary.LocalizedString DocumentCategories
    {
      get
      {
        return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Docflow.ISignatureSetting) , "DocumentCategories");
      }
    }

    public virtual global::CommonLibrary.LocalizedString DocumentCategoriesFormat(params object[] args)
    {
      return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Docflow.ISignatureSetting), "DocumentCategories", false, args);
    }
    public virtual global::CommonLibrary.LocalizedString DocumentAdditionalCategories
    {
      get
      {
        return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Docflow.ISignatureSetting) , "DocumentAdditionalCategories");
      }
    }

    public virtual global::CommonLibrary.LocalizedString DocumentAdditionalCategoriesFormat(params object[] args)
    {
      return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Docflow.ISignatureSetting), "DocumentAdditionalCategories", false, args);
    }
    public virtual global::CommonLibrary.LocalizedString DefaultSignatureSettingNote
    {
      get
      {
        return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Docflow.ISignatureSetting) , "DefaultSignatureSettingNote");
      }
    }

    public virtual global::CommonLibrary.LocalizedString DefaultSignatureSettingNoteFormat(params object[] args)
    {
      return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Docflow.ISignatureSetting), "DefaultSignatureSettingNote", false, args);
    }

  }
}

// ==================================================================
// SignatureSettingSharedFunctions.g.cs
// ==================================================================

namespace Sungero.Docflow.Shared
{
  public partial class SignatureSettingFunctions : global::Sungero.CoreEntities.Shared.DatabookEntryFunctions
  {
    private global::Sungero.Docflow.ISignatureSetting _obj
    {
      get { return (global::Sungero.Docflow.ISignatureSetting)this.Entity; }
    }

    public SignatureSettingFunctions(global::Sungero.Docflow.ISignatureSetting entity) : base(entity) { }
  }
}

// ==================================================================
// SignatureSettingFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Functions
{
  internal static class SignatureSetting
  {
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.SignatureSettingFunctions" />
    internal static  void ChangePropertiesAccess(global::Sungero.Docflow.ISignatureSetting signatureSetting)
    {
      var functions = (global::Sungero.Docflow.Shared.SignatureSettingFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)signatureSetting).FunctionsContainer.SharedFunctions;
    functions.ChangePropertiesAccess();
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.SignatureSettingFunctions" />
    internal static  global::System.Collections.Generic.List<global::System.Guid> GetPossibleSignatureRoles(global::Sungero.Docflow.ISignatureSetting signatureSetting)
    {
      var functions = (global::Sungero.Docflow.Shared.SignatureSettingFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)signatureSetting).FunctionsContainer.SharedFunctions;
      return functions.GetPossibleSignatureRoles();
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.SignatureSettingFunctions" />
    internal static  global::System.Linq.IQueryable<global::Sungero.Docflow.IDocumentGroupBase> FilterCategories(global::Sungero.Docflow.ISignatureSetting signatureSetting, global::System.Linq.IQueryable<global::Sungero.Docflow.IDocumentGroupBase> query)
    {
      var functions = (global::Sungero.Docflow.Shared.SignatureSettingFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)signatureSetting).FunctionsContainer.SharedFunctions;
      return functions.FilterCategories(query);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.SignatureSettingFunctions" />
    internal static  global::System.Linq.IQueryable<global::Sungero.Docflow.IDocumentGroupBase> GetPossibleCashedCategories(global::Sungero.Docflow.ISignatureSetting signatureSetting)
    {
      var functions = (global::Sungero.Docflow.Shared.SignatureSettingFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)signatureSetting).FunctionsContainer.SharedFunctions;
      return functions.GetPossibleCashedCategories();
    }

    internal static class Remote
    {
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.SignatureSettingFunctions" />
      internal static  void UpdateBusinessUnitSetting(global::Sungero.Company.IBusinessUnit unit)
      {
      global::Sungero.Domain.Shared.RemoteFunctionExecutor.Execute(
          global::System.Guid.Parse("19f9b6d8-b072-4af0-b6e1-3f8a339506be"),
          "UpdateBusinessUnitSetting(global::Sungero.Company.IBusinessUnit)"
      , unit);
      }

    }
  }
}

// ==================================================================
// SignatureSettingFilterState.g.cs
// ==================================================================

namespace Sungero.Docflow.Shared.SignatureSetting
{

  public class SignatureSettingFilterInfo : global::Sungero.CoreEntities.Shared.DatabookEntry.DatabookEntryFilterInfo,
    global::Sungero.Docflow.ISignatureSettingFilterInfo
  {
    public global::Sungero.Domain.Shared.IFilterControlInfo Active
    {
      get
      {
        return new global::Sungero.Domain.Shared.FilterControlInfo("Active");
      }
    }

    public global::Sungero.Domain.Shared.IFilterControlInfo Closed
    {
      get
      {
        return new global::Sungero.Domain.Shared.FilterControlInfo("Closed");
      }
    }

    public global::Sungero.Domain.Shared.IFilterControlInfo Incoming
    {
      get
      {
        return new global::Sungero.Domain.Shared.FilterControlInfo("Incoming");
      }
    }

    public global::Sungero.Domain.Shared.IFilterControlInfo Outgoing
    {
      get
      {
        return new global::Sungero.Domain.Shared.FilterControlInfo("Outgoing");
      }
    }

    public global::Sungero.Domain.Shared.IFilterControlInfo Inner
    {
      get
      {
        return new global::Sungero.Domain.Shared.FilterControlInfo("Inner");
      }
    }

    public global::Sungero.Domain.Shared.IFilterControlInfo Contracts
    {
      get
      {
        return new global::Sungero.Domain.Shared.FilterControlInfo("Contracts");
      }
    }

    public global::Sungero.Domain.Shared.IFilterControlInfo Today
    {
      get
      {
        return new global::Sungero.Domain.Shared.FilterControlInfo("Today");
      }
    }

    public global::Sungero.Domain.Shared.IFilterControlInfo Period
    {
      get
      {
        return new global::Sungero.Domain.Shared.FilterControlInfo("Period");
      }
    }

    public global::Sungero.Domain.Shared.IFilterControlInfo Recipient
    {
      get
      {
        return new global::Sungero.Domain.Shared.FilterControlInfo("Recipient");
      }
    }

    public global::Sungero.Domain.Shared.IFilterControlInfo DocumentKind
    {
      get
      {
        return new global::Sungero.Domain.Shared.FilterControlInfo("DocumentKind");
      }
    }

    public global::Sungero.Domain.Shared.IFilterControlInfo DateRangeFrom
    {
      get
      {
        return new global::Sungero.Domain.Shared.FilterControlInfo("DateRangeFrom");
      }
    }
    public global::Sungero.Domain.Shared.IFilterControlInfo DateRangeTo
    {
      get
      {
        return new global::Sungero.Domain.Shared.FilterControlInfo("DateRangeTo");
      }
    }


  }

  public class SignatureSettingFilterState : global::Sungero.CoreEntities.Shared.DatabookEntry.DatabookEntryFilterState,
    global::Sungero.Docflow.ISignatureSettingFilterState
  {
    public bool Active
    {
      get { return this.GetValue<bool>(); }
      set { this.SetValue(value); }
    }

    public bool Closed
    {
      get { return this.GetValue<bool>(); }
      set { this.SetValue(value); }
    }

    public bool Incoming
    {
      get { return this.GetValue<bool>(); }
      set { this.SetValue(value); }
    }

    public bool Outgoing
    {
      get { return this.GetValue<bool>(); }
      set { this.SetValue(value); }
    }

    public bool Inner
    {
      get { return this.GetValue<bool>(); }
      set { this.SetValue(value); }
    }

    public bool Contracts
    {
      get { return this.GetValue<bool>(); }
      set { this.SetValue(value); }
    }

    public bool Today
    {
      get { return this.GetValue<bool>(); }
      set { this.SetValue(value); }
    }

    public bool Period
    {
      get { return this.GetValue<bool>(); }
      set { this.SetValue(value); }
    }



    public global::Sungero.Company.IEmployee Recipient
    {
      get { return this.GetValue<global::Sungero.Company.IEmployee>(); }
      set { this.SetValue(value); }
    }

    public global::Sungero.Docflow.IDocumentKind DocumentKind
    {
      get { return this.GetValue<global::Sungero.Docflow.IDocumentKind>(); }
      set { this.SetValue(value); }
    }



    public global::System.DateTime? DateRangeFrom
    {
      get { return this.GetValue<global::System.DateTime?>(); }
      set { this.SetValue(value); }
    }
    public global::System.DateTime? DateRangeTo
    {
      get { return this.GetValue<global::System.DateTime?>(); }
      set { this.SetValue(value); }
    }



    public new Sungero.Docflow.ISignatureSettingFilterInfo Info
    {
      get
      {
        return (Sungero.Docflow.ISignatureSettingFilterInfo) base.Info;
      }
    }
    protected override global::Sungero.Domain.Shared.IFilterInfo CreateFilterInfo()
    {
      return new Sungero.Docflow.Shared.SignatureSetting.SignatureSettingFilterInfo();
    }

  }
}

// ==================================================================
// SignatureSettingSharedPublicFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Shared
{
  public class SignatureSettingSharedPublicFunctions : global::Sungero.Docflow.Shared.ISignatureSettingSharedPublicFunctions
  {
    public global::System.Linq.IQueryable<global::Sungero.Docflow.IDocumentGroupBase> FilterCategories(global::Sungero.Docflow.ISignatureSetting signatureSetting, global::System.Linq.IQueryable<global::Sungero.Docflow.IDocumentGroupBase> query)
    {
      return global::Sungero.Docflow.Functions.SignatureSetting.FilterCategories(signatureSetting, query);
    }
    public global::System.Linq.IQueryable<global::Sungero.Docflow.IDocumentGroupBase> GetPossibleCashedCategories(global::Sungero.Docflow.ISignatureSetting signatureSetting)
    {
      return global::Sungero.Docflow.Functions.SignatureSetting.GetPossibleCashedCategories(signatureSetting);
    }
    public void Remote_UpdateBusinessUnitSetting(global::Sungero.Company.IBusinessUnit unit)
    {
global::Sungero.Docflow.Functions.SignatureSetting.Remote.UpdateBusinessUnitSetting(unit);
    }
  }
}
