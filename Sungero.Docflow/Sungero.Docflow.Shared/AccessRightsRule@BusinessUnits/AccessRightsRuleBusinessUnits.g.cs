
// ==================================================================
// AccessRightsRuleBusinessUnitsState.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Shared
{
  public class AccessRightsRuleBusinessUnitsState : 
    global::Sungero.Domain.Shared.ChildEntityState, global::Sungero.Docflow.IAccessRightsRuleBusinessUnitsState
  {
    public AccessRightsRuleBusinessUnitsState(global::Sungero.Docflow.IAccessRightsRuleBusinessUnits entity) : base(entity) { }

    public new global::Sungero.Docflow.IAccessRightsRuleBusinessUnitsPropertyStates Properties
    {
      get { return (global::Sungero.Docflow.IAccessRightsRuleBusinessUnitsPropertyStates)base.Properties; }
    }

    protected override global::Sungero.Domain.Shared.IEntityPropertyStates CreatePropertyStates(global::Sungero.Domain.Shared.IEntity entity)
    {
      return new global::Sungero.Docflow.Shared.AccessRightsRuleBusinessUnitsPropertyStates(entity);
    }


  }


  public class AccessRightsRuleBusinessUnitsPropertyStates : 
    global::Sungero.Domain.Shared.ChildEntityPropertyStates, global::Sungero.Docflow.IAccessRightsRuleBusinessUnitsPropertyStates
  {
            public global::Sungero.Domain.Shared.IPropertyState<global::Sungero.Docflow.IAccessRightsRule> AccessRightsRule 
            {
              get { return this.InternalAccessRightsRule; }
            }

            protected virtual global::Sungero.Domain.Shared.IPropertyState<global::Sungero.Docflow.IAccessRightsRule> InternalAccessRightsRule
            {
              get { return this.GetPropertyState<global::Sungero.Docflow.IAccessRightsRule>("AccessRightsRule"); }
            }
            public global::Sungero.Domain.Shared.IPropertyState<global::Sungero.Company.IBusinessUnit> BusinessUnit 
            {
              get { return this.InternalBusinessUnit; }
            }

            protected virtual global::Sungero.Domain.Shared.IPropertyState<global::Sungero.Company.IBusinessUnit> InternalBusinessUnit
            {
              get { return this.GetPropertyState<global::Sungero.Company.IBusinessUnit>("BusinessUnit"); }
            }


    protected internal AccessRightsRuleBusinessUnitsPropertyStates(global::Sungero.Domain.Shared.IEntity entity) : base(entity) { }
  }

  public class AccessRightsRuleBusinessUnitsCollectionPropertyState<T> :
    global::Sungero.Domain.Shared.ChildEntityCollectionPropertyState<T>, global::Sungero.Docflow.IAccessRightsRuleBusinessUnitsCollectionPropertyState<T>
    where T : global::Sungero.Docflow.IAccessRightsRuleBusinessUnits
  {
    public new global::Sungero.Docflow.IAccessRightsRuleBusinessUnitsCollectionPropertyStates Properties
    {
      get { return (global::Sungero.Docflow.IAccessRightsRuleBusinessUnitsCollectionPropertyStates)base.Properties; }
    }

    protected override global::Sungero.Domain.Shared.IChildEntityCollectionPropertyStates CreatePropertyStates()
    {
      return new global::Sungero.Docflow.Shared.AccessRightsRuleBusinessUnitsCollectionPropertyStates(this.ChildEntityMetadata);
    }

    protected internal AccessRightsRuleBusinessUnitsCollectionPropertyState(global::Sungero.Domain.Shared.IEntity entity, string propertyName) : base(entity, propertyName) { }
  }

  public class AccessRightsRuleBusinessUnitsCollectionPropertyStates :
    global::Sungero.Domain.Shared.ChildEntityCollectionPropertyStates, global::Sungero.Docflow.IAccessRightsRuleBusinessUnitsCollectionPropertyStates
  {
        public global::Sungero.Domain.Shared.IChildPropertySummaryState AccessRightsRule
        {
          get { return this.GetChildPropertySummaryState("AccessRightsRule"); }
        }
        public global::Sungero.Domain.Shared.IChildPropertySummaryState BusinessUnit
        {
          get { return this.GetChildPropertySummaryState("BusinessUnit"); }
        }


    protected internal AccessRightsRuleBusinessUnitsCollectionPropertyStates(global::Sungero.Metadata.EntityMetadata childEntityMetadata) : base(childEntityMetadata) { }
  }
}

// ==================================================================
// AccessRightsRuleBusinessUnitsEventArgs.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Shared
{  
    public class AccessRightsRuleBusinessUnitsBusinessUnitChangedEventArgs : global::Sungero.Domain.Shared.PropertyChangedEventArgs<global::Sungero.Company.IBusinessUnit>
    {
      public AccessRightsRuleBusinessUnitsBusinessUnitChangedEventArgs(global::Sungero.Domain.Shared.IPropertyState<global::Sungero.Company.IBusinessUnit> state, global::Sungero.Company.IBusinessUnit newValue, global::Sungero.Domain.Shared.IEntity entity): base(state, newValue, entity) { }
    }

}

// ==================================================================
// AccessRightsRuleBusinessUnitsInfo.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Shared
{
  public class AccessRightsRuleBusinessUnitsInfo : 
    global::Sungero.Domain.Shared.ChildEntityInfo, global::Sungero.Docflow.IAccessRightsRuleBusinessUnitsInfo
  {
    public AccessRightsRuleBusinessUnitsInfo(global::System.Type entityType) : base(entityType) { }

    public new global::Sungero.Docflow.IAccessRightsRuleBusinessUnitsPropertiesInfo Properties
    {
      get { return (global::Sungero.Docflow.IAccessRightsRuleBusinessUnitsPropertiesInfo)base.Properties; }
    }

    protected override global::Sungero.Domain.Shared.IEntityPropertiesInfo CreateEntityPropertiesInfo(global::System.Type entityType)
    {
      return new global::Sungero.Docflow.Shared.AccessRightsRuleBusinessUnitsPropertiesInfo(entityType);
    }

  }

  public class AccessRightsRuleBusinessUnitsPropertiesInfo : 
    global::Sungero.Domain.Shared.ChildEntityPropertiesInfo, global::Sungero.Docflow.IAccessRightsRuleBusinessUnitsPropertiesInfo
  {
        public global::Sungero.Domain.Shared.INavigationPropertyInfo<global::Sungero.Docflow.IAccessRightsRuleInfo, global::Sungero.Docflow.IAccessRightsRule> AccessRightsRule 
        {
          get
          {
             var propertyMetadata = this.GetPropertyMetadata<global::Sungero.Metadata.NavigationPropertyMetadata>("AccessRightsRule");
             return new global::Sungero.Domain.Shared.NavigationPropertyInfo<global::Sungero.Docflow.IAccessRightsRuleInfo, global::Sungero.Docflow.IAccessRightsRule>(propertyMetadata);
          }
        }
        public global::Sungero.Domain.Shared.INavigationPropertyInfo<global::Sungero.Company.IBusinessUnitInfo, global::Sungero.Company.IBusinessUnit> BusinessUnit 
        {
          get
          {
             var propertyMetadata = this.GetPropertyMetadata<global::Sungero.Metadata.NavigationPropertyMetadata>("BusinessUnit");
             return new global::Sungero.Domain.Shared.NavigationPropertyInfo<global::Sungero.Company.IBusinessUnitInfo, global::Sungero.Company.IBusinessUnit>(propertyMetadata);
          }
        }


    protected internal AccessRightsRuleBusinessUnitsPropertiesInfo(global::System.Type entityType) : base(entityType) { }
  }

}
