
// ==================================================================
// StoragePolicyBaseState.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Shared
{
  public class StoragePolicyBaseState : 
    global::Sungero.CoreEntities.Shared.DatabookEntryState, global::Sungero.Docflow.IStoragePolicyBaseState
  {
    public StoragePolicyBaseState(global::Sungero.Docflow.IStoragePolicyBase entity) : base(entity) { }

    public new global::Sungero.Docflow.IStoragePolicyBasePropertyStates Properties
    {
      get { return (global::Sungero.Docflow.IStoragePolicyBasePropertyStates)base.Properties; }
    }

    protected override global::Sungero.Domain.Shared.IEntityPropertyStates CreatePropertyStates(global::Sungero.Domain.Shared.IEntity entity)
    {
      return new global::Sungero.Docflow.Shared.StoragePolicyBasePropertyStates(entity);
    }


    public new global::Sungero.Docflow.IStoragePolicyBaseControlStates Controls
    {
      get { return (global::Sungero.Docflow.IStoragePolicyBaseControlStates)base.Controls; }
    }

    protected override global::Sungero.Domain.Shared.IEntityControlStates CreateControlStates(global::Sungero.Domain.Shared.IEntity entity)
    {
      return new global::Sungero.Docflow.Shared.StoragePolicyBaseControlStates(entity);
    }

    public new global::Sungero.Docflow.IStoragePolicyBasePageStates Pages
    {
      get { return (global::Sungero.Docflow.IStoragePolicyBasePageStates)base.Pages; }
    }

    protected override global::Sungero.Domain.Shared.IEntityPageStates CreatePageStates(global::Sungero.Domain.Shared.IEntity entity)
    {
      return new global::Sungero.Docflow.Shared.StoragePolicyBasePageStates(entity);
    }

  }


  public class StoragePolicyBaseControlStates : 
    global::Sungero.CoreEntities.Shared.DatabookEntryControlStates, global::Sungero.Docflow.IStoragePolicyBaseControlStates
  {

    protected internal StoragePolicyBaseControlStates(global::Sungero.Domain.Shared.IEntity entity) : base(entity) { }
  }
  public class StoragePolicyBasePageStates : 
    global::Sungero.CoreEntities.Shared.DatabookEntryPageStates, global::Sungero.Docflow.IStoragePolicyBasePageStates
  {
        public global::Sungero.Domain.Shared.IStandalonePageState MainPage
        {
        get { return this.GetPageState<Sungero.Domain.Shared.IStandalonePageState>("Card"); }
        }


    protected internal StoragePolicyBasePageStates(global::Sungero.Domain.Shared.IEntity entity) : base(entity) { }
  }

  public class StoragePolicyBasePropertyStates : 
    global::Sungero.CoreEntities.Shared.DatabookEntryPropertyStates, global::Sungero.Docflow.IStoragePolicyBasePropertyStates
  {
            public global::Sungero.Domain.Shared.IPropertyState<global::System.Int32?> Priority 
            {
              get { return this.GetPropertyState<global::System.Int32?>("Priority"); }
            }
            public global::Sungero.Domain.Shared.IPropertyState<global::Sungero.CoreEntities.IStorage> Storage 
            {
              get { return this.InternalStorage; }
            }

            protected virtual global::Sungero.Domain.Shared.IPropertyState<global::Sungero.CoreEntities.IStorage> InternalStorage
            {
              get { return this.GetPropertyState<global::Sungero.CoreEntities.IStorage>("Storage"); }
            }
            public global::Sungero.Domain.Shared.IPropertyState<global::System.String> Name 
            {
              get { return this.GetPropertyState<global::System.String>("Name"); }
            }
            public global::Sungero.Docflow.IStoragePolicyBaseDocumentKindsCollectionPropertyState<global::Sungero.Docflow.IStoragePolicyBaseDocumentKinds> DocumentKinds 
            {
              get { return this.GetPropertyState("DocumentKinds", this.CreateDocumentKindsState); }
            }

            protected virtual global::Sungero.Docflow.IStoragePolicyBaseDocumentKindsCollectionPropertyState<global::Sungero.Docflow.IStoragePolicyBaseDocumentKinds> CreateDocumentKindsState(global::Sungero.Domain.Shared.IEntity entity, string propertyName)
            {
              return new global::Sungero.Docflow.Shared.StoragePolicyBaseDocumentKindsCollectionPropertyState<global::Sungero.Docflow.IStoragePolicyBaseDocumentKinds>(entity, propertyName);
            }
            public global::Sungero.Domain.Shared.IPropertyState<global::System.String> Note 
            {
              get { return this.GetPropertyState<global::System.String>("Note"); }
            }


    protected internal StoragePolicyBasePropertyStates(global::Sungero.Domain.Shared.IEntity entity) : base(entity) { }
  }

}

// ==================================================================
// StoragePolicyBaseEventArgs.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Shared
{  
    public class StoragePolicyBaseStorageChangedEventArgs : global::Sungero.Domain.Shared.PropertyChangedEventArgs<global::Sungero.CoreEntities.IStorage>
    {
      public StoragePolicyBaseStorageChangedEventArgs(global::Sungero.Domain.Shared.IPropertyState<global::Sungero.CoreEntities.IStorage> state, global::Sungero.CoreEntities.IStorage newValue, global::Sungero.Domain.Shared.IEntity entity): base(state, newValue, entity) { }
    }




}

// ==================================================================
// StoragePolicyBaseInfo.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Shared
{
  public class StoragePolicyBaseInfo : 
    global::Sungero.CoreEntities.Shared.DatabookEntryInfo, global::Sungero.Docflow.IStoragePolicyBaseInfo
  {
    public StoragePolicyBaseInfo(global::System.Type entityType) : base(entityType) { }

    public new global::Sungero.Docflow.IStoragePolicyBasePropertiesInfo Properties
    {
      get { return (global::Sungero.Docflow.IStoragePolicyBasePropertiesInfo)base.Properties; }
    }

    protected override global::Sungero.Domain.Shared.IEntityPropertiesInfo CreateEntityPropertiesInfo(global::System.Type entityType)
    {
      return new global::Sungero.Docflow.Shared.StoragePolicyBasePropertiesInfo(entityType);
    }

  }

  public class StoragePolicyBasePropertiesInfo : 
    global::Sungero.CoreEntities.Shared.DatabookEntryPropertiesInfo, global::Sungero.Docflow.IStoragePolicyBasePropertiesInfo
  {
        public global::Sungero.Domain.Shared.IIntegerPropertyInfo Priority 
        {
          get
          {
             var propertyMetadata = this.GetPropertyMetadata<global::Sungero.Metadata.IntegerPropertyMetadata>("Priority");
             return new global::Sungero.Domain.Shared.IntegerPropertyInfo(propertyMetadata);
          }
        }
        public global::Sungero.Domain.Shared.INavigationPropertyInfo<global::Sungero.CoreEntities.IStorageInfo, global::Sungero.CoreEntities.IStorage> Storage 
        {
          get
          {
             var propertyMetadata = this.GetPropertyMetadata<global::Sungero.Metadata.NavigationPropertyMetadata>("Storage");
             return new global::Sungero.Domain.Shared.NavigationPropertyInfo<global::Sungero.CoreEntities.IStorageInfo, global::Sungero.CoreEntities.IStorage>(propertyMetadata);
          }
        }
        public global::Sungero.Domain.Shared.IStringPropertyInfo Name 
        {
          get
          {
             var propertyMetadata = this.GetPropertyMetadata<global::Sungero.Metadata.StringPropertyMetadata>("Name");
             return new global::Sungero.Domain.Shared.StringPropertyInfo(propertyMetadata);
          }
        }
        public global::Sungero.Domain.Shared.ICollectionPropertyInfo<global::Sungero.Docflow.IStoragePolicyBaseDocumentKindsPropertiesInfo> DocumentKinds 
        {
          get
          {
             var propertyMetadata = this.GetPropertyMetadata<global::Sungero.Metadata.CollectionPropertyMetadata>("DocumentKinds");
             return new global::Sungero.Domain.Shared.CollectionPropertyInfo<global::Sungero.Docflow.IStoragePolicyBaseDocumentKindsPropertiesInfo>(propertyMetadata);
          }
        }
        public global::Sungero.Domain.Shared.IStringPropertyInfo Note 
        {
          get
          {
             var propertyMetadata = this.GetPropertyMetadata<global::Sungero.Metadata.StringPropertyMetadata>("Note");
             return new global::Sungero.Domain.Shared.StringPropertyInfo(propertyMetadata);
          }
        }


    protected internal StoragePolicyBasePropertiesInfo(global::System.Type entityType) : base(entityType) { }
  }

}

// ==================================================================
// StoragePolicyBaseHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow
{
  public partial class StoragePolicyBaseSharedHandlers : global::Sungero.CoreEntities.DatabookEntrySharedHandlers
  {
    private global::Sungero.Docflow.IStoragePolicyBase _obj
    {
      get { return (global::Sungero.Docflow.IStoragePolicyBase)this.Entity; }
    }
    public virtual void PriorityChanged(global::Sungero.Domain.Shared.IntegerPropertyChangedEventArgs e) { }


    public virtual void StorageChanged(global::Sungero.Docflow.Shared.StoragePolicyBaseStorageChangedEventArgs e) { }


    public virtual void NameChanged(global::Sungero.Domain.Shared.StringPropertyChangedEventArgs e) { }


    public virtual void DocumentKindsChanged(global::Sungero.Domain.Shared.CollectionPropertyChangedEventArgs e) { }


    public virtual void NoteChanged(global::Sungero.Domain.Shared.StringPropertyChangedEventArgs e) { }




    public StoragePolicyBaseSharedHandlers(global::Sungero.Docflow.IStoragePolicyBase entity) : base(entity)
    {
    }
  }

  public partial class StoragePolicyBaseDocumentKindsSharedHandlers : global::Sungero.Domain.Shared.ChildEntitySharedHandlers
  {
    private global::Sungero.Docflow.IStoragePolicyBaseDocumentKinds _obj
    { 
      get { return (global::Sungero.Docflow.IStoragePolicyBaseDocumentKinds)this.Entity; }
    }
    public virtual void DocumentKindsDocumentKindChanged(global::Sungero.Docflow.Shared.StoragePolicyBaseDocumentKindsDocumentKindChangedEventArgs e) { }



    public StoragePolicyBaseDocumentKindsSharedHandlers(global::Sungero.Docflow.IStoragePolicyBaseDocumentKinds entity) : base(entity)
    {
    }
  }

  public partial class StoragePolicyBaseDocumentKindsSharedCollectionHandlers : global::Sungero.Domain.Shared.ChildEntitySharedCollectionHandlers
  {
    private global::Sungero.Docflow.IStoragePolicyBase _obj
    { 
      get { return (global::Sungero.Docflow.IStoragePolicyBase)this.Entity; }
    }

    private global::Sungero.Docflow.IStoragePolicyBaseDocumentKinds _added
    {
      get { return (global::Sungero.Docflow.IStoragePolicyBaseDocumentKinds)this._Added; }
    }

    private global::Sungero.Docflow.IStoragePolicyBaseDocumentKinds _deleted
    {
      get { return (global::Sungero.Docflow.IStoragePolicyBaseDocumentKinds)this._Deleted; }
    }

    private global::Sungero.Docflow.IStoragePolicyBaseDocumentKinds _source
    {
      get { return (global::Sungero.Docflow.IStoragePolicyBaseDocumentKinds)this._Source; }
    }

    public virtual void DocumentKindsAdded(global::Sungero.Domain.Shared.CollectionPropertyAddedEventArgs e) { }
    public virtual void DocumentKindsDeleted(global::Sungero.Domain.Shared.CollectionPropertyDeletedEventArgs e) { }

    public StoragePolicyBaseDocumentKindsSharedCollectionHandlers(global::Sungero.Docflow.IStoragePolicyBase entity, global::Sungero.Domain.Shared.IChildEntity added, global::Sungero.Domain.Shared.IChildEntity deleted, global::Sungero.Domain.Shared.IChildEntity source)
      : base (entity, added, deleted, source)
    {
    }
  }

}

// ==================================================================
// StoragePolicyBaseResources.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Shared.StoragePolicyBase
{
  /// <summary>
  /// Represents StoragePolicyBase resources.
  /// </summary>
  public class StoragePolicyBaseResources : global::Sungero.CoreEntities.Shared.DatabookEntry.DatabookEntryResources, global::Sungero.Docflow.StoragePolicyBase.IStoragePolicyBaseResources
  {
    public virtual global::CommonLibrary.LocalizedString IncorrectPriority
    {
      get
      {
        return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Docflow.IStoragePolicyBase) , "IncorrectPriority");
      }
    }

    public virtual global::CommonLibrary.LocalizedString IncorrectPriorityFormat(params object[] args)
    {
      return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Docflow.IStoragePolicyBase), "IncorrectPriority", false, args);
    }
    public virtual global::CommonLibrary.LocalizedString NonUniquePriority
    {
      get
      {
        return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Docflow.IStoragePolicyBase) , "NonUniquePriority");
      }
    }

    public virtual global::CommonLibrary.LocalizedString NonUniquePriorityFormat(params object[] args)
    {
      return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Docflow.IStoragePolicyBase), "NonUniquePriority", false, args);
    }

  }
}

// ==================================================================
// StoragePolicyBaseSharedFunctions.g.cs
// ==================================================================

namespace Sungero.Docflow.Shared
{
  public partial class StoragePolicyBaseFunctions : global::Sungero.CoreEntities.Shared.DatabookEntryFunctions
  {
    private global::Sungero.Docflow.IStoragePolicyBase _obj
    {
      get { return (global::Sungero.Docflow.IStoragePolicyBase)this.Entity; }
    }

    public StoragePolicyBaseFunctions(global::Sungero.Docflow.IStoragePolicyBase entity) : base(entity) { }
  }
}

// ==================================================================
// StoragePolicyBaseFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Functions
{
  internal static class StoragePolicyBase
  {
  }
}

// ==================================================================
// StoragePolicyBaseFilterState.g.cs
// ==================================================================

namespace Sungero.Docflow.Shared.StoragePolicyBase
{

  public class StoragePolicyBaseFilterInfo : global::Sungero.CoreEntities.Shared.DatabookEntry.DatabookEntryFilterInfo,
    global::Sungero.Docflow.IStoragePolicyBaseFilterInfo
  {
  }

  public class StoragePolicyBaseFilterState : global::Sungero.CoreEntities.Shared.DatabookEntry.DatabookEntryFilterState,
    global::Sungero.Docflow.IStoragePolicyBaseFilterState
  {



    public new Sungero.Docflow.IStoragePolicyBaseFilterInfo Info
    {
      get
      {
        return (Sungero.Docflow.IStoragePolicyBaseFilterInfo) base.Info;
      }
    }
    protected override global::Sungero.Domain.Shared.IFilterInfo CreateFilterInfo()
    {
      return new Sungero.Docflow.Shared.StoragePolicyBase.StoragePolicyBaseFilterInfo();
    }

  }
}

// ==================================================================
// StoragePolicyBaseSharedPublicFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Shared
{
  public class StoragePolicyBaseSharedPublicFunctions : global::Sungero.Docflow.Shared.IStoragePolicyBaseSharedPublicFunctions
  {
  }
}
