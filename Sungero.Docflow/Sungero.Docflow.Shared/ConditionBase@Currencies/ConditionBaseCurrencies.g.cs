
// ==================================================================
// ConditionBaseCurrenciesState.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Shared
{
  public class ConditionBaseCurrenciesState : 
    global::Sungero.Domain.Shared.ChildEntityState, global::Sungero.Docflow.IConditionBaseCurrenciesState
  {
    public ConditionBaseCurrenciesState(global::Sungero.Docflow.IConditionBaseCurrencies entity) : base(entity) { }

    public new global::Sungero.Docflow.IConditionBaseCurrenciesPropertyStates Properties
    {
      get { return (global::Sungero.Docflow.IConditionBaseCurrenciesPropertyStates)base.Properties; }
    }

    protected override global::Sungero.Domain.Shared.IEntityPropertyStates CreatePropertyStates(global::Sungero.Domain.Shared.IEntity entity)
    {
      return new global::Sungero.Docflow.Shared.ConditionBaseCurrenciesPropertyStates(entity);
    }


  }


  public class ConditionBaseCurrenciesPropertyStates : 
    global::Sungero.Domain.Shared.ChildEntityPropertyStates, global::Sungero.Docflow.IConditionBaseCurrenciesPropertyStates
  {
            public global::Sungero.Domain.Shared.IPropertyState<global::Sungero.Docflow.IConditionBase> ConditionBase 
            {
              get { return this.InternalConditionBase; }
            }

            protected virtual global::Sungero.Domain.Shared.IPropertyState<global::Sungero.Docflow.IConditionBase> InternalConditionBase
            {
              get { return this.GetPropertyState<global::Sungero.Docflow.IConditionBase>("ConditionBase"); }
            }
            public global::Sungero.Domain.Shared.IPropertyState<global::Sungero.Commons.ICurrency> Currency 
            {
              get { return this.InternalCurrency; }
            }

            protected virtual global::Sungero.Domain.Shared.IPropertyState<global::Sungero.Commons.ICurrency> InternalCurrency
            {
              get { return this.GetPropertyState<global::Sungero.Commons.ICurrency>("Currency"); }
            }


    protected internal ConditionBaseCurrenciesPropertyStates(global::Sungero.Domain.Shared.IEntity entity) : base(entity) { }
  }

  public class ConditionBaseCurrenciesCollectionPropertyState<T> :
    global::Sungero.Domain.Shared.ChildEntityCollectionPropertyState<T>, global::Sungero.Docflow.IConditionBaseCurrenciesCollectionPropertyState<T>
    where T : global::Sungero.Docflow.IConditionBaseCurrencies
  {
    public new global::Sungero.Docflow.IConditionBaseCurrenciesCollectionPropertyStates Properties
    {
      get { return (global::Sungero.Docflow.IConditionBaseCurrenciesCollectionPropertyStates)base.Properties; }
    }

    protected override global::Sungero.Domain.Shared.IChildEntityCollectionPropertyStates CreatePropertyStates()
    {
      return new global::Sungero.Docflow.Shared.ConditionBaseCurrenciesCollectionPropertyStates(this.ChildEntityMetadata);
    }

    protected internal ConditionBaseCurrenciesCollectionPropertyState(global::Sungero.Domain.Shared.IEntity entity, string propertyName) : base(entity, propertyName) { }
  }

  public class ConditionBaseCurrenciesCollectionPropertyStates :
    global::Sungero.Domain.Shared.ChildEntityCollectionPropertyStates, global::Sungero.Docflow.IConditionBaseCurrenciesCollectionPropertyStates
  {
        public global::Sungero.Domain.Shared.IChildPropertySummaryState ConditionBase
        {
          get { return this.GetChildPropertySummaryState("ConditionBase"); }
        }
        public global::Sungero.Domain.Shared.IChildPropertySummaryState Currency
        {
          get { return this.GetChildPropertySummaryState("Currency"); }
        }


    protected internal ConditionBaseCurrenciesCollectionPropertyStates(global::Sungero.Metadata.EntityMetadata childEntityMetadata) : base(childEntityMetadata) { }
  }
}

// ==================================================================
// ConditionBaseCurrenciesEventArgs.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Shared
{  
    public class ConditionBaseCurrenciesCurrencyChangedEventArgs : global::Sungero.Domain.Shared.PropertyChangedEventArgs<global::Sungero.Commons.ICurrency>
    {
      public ConditionBaseCurrenciesCurrencyChangedEventArgs(global::Sungero.Domain.Shared.IPropertyState<global::Sungero.Commons.ICurrency> state, global::Sungero.Commons.ICurrency newValue, global::Sungero.Domain.Shared.IEntity entity): base(state, newValue, entity) { }
    }

}

// ==================================================================
// ConditionBaseCurrenciesInfo.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Shared
{
  public class ConditionBaseCurrenciesInfo : 
    global::Sungero.Domain.Shared.ChildEntityInfo, global::Sungero.Docflow.IConditionBaseCurrenciesInfo
  {
    public ConditionBaseCurrenciesInfo(global::System.Type entityType) : base(entityType) { }

    public new global::Sungero.Docflow.IConditionBaseCurrenciesPropertiesInfo Properties
    {
      get { return (global::Sungero.Docflow.IConditionBaseCurrenciesPropertiesInfo)base.Properties; }
    }

    protected override global::Sungero.Domain.Shared.IEntityPropertiesInfo CreateEntityPropertiesInfo(global::System.Type entityType)
    {
      return new global::Sungero.Docflow.Shared.ConditionBaseCurrenciesPropertiesInfo(entityType);
    }

  }

  public class ConditionBaseCurrenciesPropertiesInfo : 
    global::Sungero.Domain.Shared.ChildEntityPropertiesInfo, global::Sungero.Docflow.IConditionBaseCurrenciesPropertiesInfo
  {
        public global::Sungero.Domain.Shared.INavigationPropertyInfo<global::Sungero.Docflow.IConditionBaseInfo, global::Sungero.Docflow.IConditionBase> ConditionBase 
        {
          get
          {
             var propertyMetadata = this.GetPropertyMetadata<global::Sungero.Metadata.NavigationPropertyMetadata>("ConditionBase");
             return new global::Sungero.Domain.Shared.NavigationPropertyInfo<global::Sungero.Docflow.IConditionBaseInfo, global::Sungero.Docflow.IConditionBase>(propertyMetadata);
          }
        }
        public global::Sungero.Domain.Shared.INavigationPropertyInfo<global::Sungero.Commons.ICurrencyInfo, global::Sungero.Commons.ICurrency> Currency 
        {
          get
          {
             var propertyMetadata = this.GetPropertyMetadata<global::Sungero.Metadata.NavigationPropertyMetadata>("Currency");
             return new global::Sungero.Domain.Shared.NavigationPropertyInfo<global::Sungero.Commons.ICurrencyInfo, global::Sungero.Commons.ICurrency>(propertyMetadata);
          }
        }


    protected internal ConditionBaseCurrenciesPropertiesInfo(global::System.Type entityType) : base(entityType) { }
  }

}
