
// ==================================================================
// AccessRightsRuleState.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Shared
{
  public class AccessRightsRuleState : 
    global::Sungero.CoreEntities.Shared.DatabookEntryState, global::Sungero.Docflow.IAccessRightsRuleState
  {
    public AccessRightsRuleState(global::Sungero.Docflow.IAccessRightsRule entity) : base(entity) { }

    public new global::Sungero.Docflow.IAccessRightsRulePropertyStates Properties
    {
      get { return (global::Sungero.Docflow.IAccessRightsRulePropertyStates)base.Properties; }
    }

    protected override global::Sungero.Domain.Shared.IEntityPropertyStates CreatePropertyStates(global::Sungero.Domain.Shared.IEntity entity)
    {
      return new global::Sungero.Docflow.Shared.AccessRightsRulePropertyStates(entity);
    }


    public new global::Sungero.Docflow.IAccessRightsRuleControlStates Controls
    {
      get { return (global::Sungero.Docflow.IAccessRightsRuleControlStates)base.Controls; }
    }

    protected override global::Sungero.Domain.Shared.IEntityControlStates CreateControlStates(global::Sungero.Domain.Shared.IEntity entity)
    {
      return new global::Sungero.Docflow.Shared.AccessRightsRuleControlStates(entity);
    }

    public new global::Sungero.Docflow.IAccessRightsRulePageStates Pages
    {
      get { return (global::Sungero.Docflow.IAccessRightsRulePageStates)base.Pages; }
    }

    protected override global::Sungero.Domain.Shared.IEntityPageStates CreatePageStates(global::Sungero.Domain.Shared.IEntity entity)
    {
      return new global::Sungero.Docflow.Shared.AccessRightsRulePageStates(entity);
    }

  }


  public class AccessRightsRuleControlStates : 
    global::Sungero.CoreEntities.Shared.DatabookEntryControlStates, global::Sungero.Docflow.IAccessRightsRuleControlStates
  {

    protected internal AccessRightsRuleControlStates(global::Sungero.Domain.Shared.IEntity entity) : base(entity) { }
  }
  public class AccessRightsRulePageStates : 
    global::Sungero.CoreEntities.Shared.DatabookEntryPageStates, global::Sungero.Docflow.IAccessRightsRulePageStates
  {
        public global::Sungero.Domain.Shared.IStandalonePageState MainPage
        {
        get { return this.GetPageState<Sungero.Domain.Shared.IStandalonePageState>("Card"); }
        }


    protected internal AccessRightsRulePageStates(global::Sungero.Domain.Shared.IEntity entity) : base(entity) { }
  }

  public class AccessRightsRulePropertyStates : 
    global::Sungero.CoreEntities.Shared.DatabookEntryPropertyStates, global::Sungero.Docflow.IAccessRightsRulePropertyStates
  {
            public global::Sungero.Domain.Shared.IPropertyState<global::System.String> Name 
            {
              get { return this.GetPropertyState<global::System.String>("Name"); }
            }
            public global::Sungero.Docflow.IAccessRightsRuleDocumentKindsCollectionPropertyState<global::Sungero.Docflow.IAccessRightsRuleDocumentKinds> DocumentKinds 
            {
              get { return this.GetPropertyState("DocumentKinds", this.CreateDocumentKindsState); }
            }

            protected virtual global::Sungero.Docflow.IAccessRightsRuleDocumentKindsCollectionPropertyState<global::Sungero.Docflow.IAccessRightsRuleDocumentKinds> CreateDocumentKindsState(global::Sungero.Domain.Shared.IEntity entity, string propertyName)
            {
              return new global::Sungero.Docflow.Shared.AccessRightsRuleDocumentKindsCollectionPropertyState<global::Sungero.Docflow.IAccessRightsRuleDocumentKinds>(entity, propertyName);
            }
            public global::Sungero.Docflow.IAccessRightsRuleBusinessUnitsCollectionPropertyState<global::Sungero.Docflow.IAccessRightsRuleBusinessUnits> BusinessUnits 
            {
              get { return this.GetPropertyState("BusinessUnits", this.CreateBusinessUnitsState); }
            }

            protected virtual global::Sungero.Docflow.IAccessRightsRuleBusinessUnitsCollectionPropertyState<global::Sungero.Docflow.IAccessRightsRuleBusinessUnits> CreateBusinessUnitsState(global::Sungero.Domain.Shared.IEntity entity, string propertyName)
            {
              return new global::Sungero.Docflow.Shared.AccessRightsRuleBusinessUnitsCollectionPropertyState<global::Sungero.Docflow.IAccessRightsRuleBusinessUnits>(entity, propertyName);
            }
            public global::Sungero.Docflow.IAccessRightsRuleDepartmentsCollectionPropertyState<global::Sungero.Docflow.IAccessRightsRuleDepartments> Departments 
            {
              get { return this.GetPropertyState("Departments", this.CreateDepartmentsState); }
            }

            protected virtual global::Sungero.Docflow.IAccessRightsRuleDepartmentsCollectionPropertyState<global::Sungero.Docflow.IAccessRightsRuleDepartments> CreateDepartmentsState(global::Sungero.Domain.Shared.IEntity entity, string propertyName)
            {
              return new global::Sungero.Docflow.Shared.AccessRightsRuleDepartmentsCollectionPropertyState<global::Sungero.Docflow.IAccessRightsRuleDepartments>(entity, propertyName);
            }
            public global::Sungero.Docflow.IAccessRightsRuleDocumentGroupsCollectionPropertyState<global::Sungero.Docflow.IAccessRightsRuleDocumentGroups> DocumentGroups 
            {
              get { return this.GetPropertyState("DocumentGroups", this.CreateDocumentGroupsState); }
            }

            protected virtual global::Sungero.Docflow.IAccessRightsRuleDocumentGroupsCollectionPropertyState<global::Sungero.Docflow.IAccessRightsRuleDocumentGroups> CreateDocumentGroupsState(global::Sungero.Domain.Shared.IEntity entity, string propertyName)
            {
              return new global::Sungero.Docflow.Shared.AccessRightsRuleDocumentGroupsCollectionPropertyState<global::Sungero.Docflow.IAccessRightsRuleDocumentGroups>(entity, propertyName);
            }
            public global::Sungero.Domain.Shared.IPropertyState<global::System.Boolean?> GrantRightsOnLeadingDocument 
            {
              get { return this.GetPropertyState<global::System.Boolean?>("GrantRightsOnLeadingDocument"); }
            }
            public global::Sungero.Domain.Shared.IPropertyState<global::System.String> Note 
            {
              get { return this.GetPropertyState<global::System.String>("Note"); }
            }
            public global::Sungero.Docflow.IAccessRightsRuleMembersCollectionPropertyState<global::Sungero.Docflow.IAccessRightsRuleMembers> Members 
            {
              get { return this.GetPropertyState("Members", this.CreateMembersState); }
            }

            protected virtual global::Sungero.Docflow.IAccessRightsRuleMembersCollectionPropertyState<global::Sungero.Docflow.IAccessRightsRuleMembers> CreateMembersState(global::Sungero.Domain.Shared.IEntity entity, string propertyName)
            {
              return new global::Sungero.Docflow.Shared.AccessRightsRuleMembersCollectionPropertyState<global::Sungero.Docflow.IAccessRightsRuleMembers>(entity, propertyName);
            }
            public global::Sungero.Domain.Shared.IPropertyState<global::System.DateTime?> Modified 
            {
              get { return this.GetPropertyState<global::System.DateTime?>("Modified"); }
            }
            public global::Sungero.Domain.Shared.IPropertyState<global::System.Boolean?> GrantRightsOnExistingDocuments 
            {
              get { return this.GetPropertyState<global::System.Boolean?>("GrantRightsOnExistingDocuments"); }
            }


    protected internal AccessRightsRulePropertyStates(global::Sungero.Domain.Shared.IEntity entity) : base(entity) { }
  }

}

// ==================================================================
// AccessRightsRuleEventArgs.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Shared
{  
}

// ==================================================================
// AccessRightsRuleInfo.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Shared
{
  public class AccessRightsRuleInfo : 
    global::Sungero.CoreEntities.Shared.DatabookEntryInfo, global::Sungero.Docflow.IAccessRightsRuleInfo
  {
    public AccessRightsRuleInfo(global::System.Type entityType) : base(entityType) { }

    public new global::Sungero.Docflow.IAccessRightsRulePropertiesInfo Properties
    {
      get { return (global::Sungero.Docflow.IAccessRightsRulePropertiesInfo)base.Properties; }
    }

    protected override global::Sungero.Domain.Shared.IEntityPropertiesInfo CreateEntityPropertiesInfo(global::System.Type entityType)
    {
      return new global::Sungero.Docflow.Shared.AccessRightsRulePropertiesInfo(entityType);
    }

  }

  public class AccessRightsRulePropertiesInfo : 
    global::Sungero.CoreEntities.Shared.DatabookEntryPropertiesInfo, global::Sungero.Docflow.IAccessRightsRulePropertiesInfo
  {
        public global::Sungero.Domain.Shared.IStringPropertyInfo Name 
        {
          get
          {
             var propertyMetadata = this.GetPropertyMetadata<global::Sungero.Metadata.StringPropertyMetadata>("Name");
             return new global::Sungero.Domain.Shared.StringPropertyInfo(propertyMetadata);
          }
        }
        public global::Sungero.Domain.Shared.ICollectionPropertyInfo<global::Sungero.Docflow.IAccessRightsRuleDocumentKindsPropertiesInfo> DocumentKinds 
        {
          get
          {
             var propertyMetadata = this.GetPropertyMetadata<global::Sungero.Metadata.CollectionPropertyMetadata>("DocumentKinds");
             return new global::Sungero.Domain.Shared.CollectionPropertyInfo<global::Sungero.Docflow.IAccessRightsRuleDocumentKindsPropertiesInfo>(propertyMetadata);
          }
        }
        public global::Sungero.Domain.Shared.ICollectionPropertyInfo<global::Sungero.Docflow.IAccessRightsRuleBusinessUnitsPropertiesInfo> BusinessUnits 
        {
          get
          {
             var propertyMetadata = this.GetPropertyMetadata<global::Sungero.Metadata.CollectionPropertyMetadata>("BusinessUnits");
             return new global::Sungero.Domain.Shared.CollectionPropertyInfo<global::Sungero.Docflow.IAccessRightsRuleBusinessUnitsPropertiesInfo>(propertyMetadata);
          }
        }
        public global::Sungero.Domain.Shared.ICollectionPropertyInfo<global::Sungero.Docflow.IAccessRightsRuleDepartmentsPropertiesInfo> Departments 
        {
          get
          {
             var propertyMetadata = this.GetPropertyMetadata<global::Sungero.Metadata.CollectionPropertyMetadata>("Departments");
             return new global::Sungero.Domain.Shared.CollectionPropertyInfo<global::Sungero.Docflow.IAccessRightsRuleDepartmentsPropertiesInfo>(propertyMetadata);
          }
        }
        public global::Sungero.Domain.Shared.ICollectionPropertyInfo<global::Sungero.Docflow.IAccessRightsRuleDocumentGroupsPropertiesInfo> DocumentGroups 
        {
          get
          {
             var propertyMetadata = this.GetPropertyMetadata<global::Sungero.Metadata.CollectionPropertyMetadata>("DocumentGroups");
             return new global::Sungero.Domain.Shared.CollectionPropertyInfo<global::Sungero.Docflow.IAccessRightsRuleDocumentGroupsPropertiesInfo>(propertyMetadata);
          }
        }
        public global::Sungero.Domain.Shared.IBooleanPropertyInfo GrantRightsOnLeadingDocument 
        {
          get
          {
             var propertyMetadata = this.GetPropertyMetadata<global::Sungero.Metadata.BooleanPropertyMetadata>("GrantRightsOnLeadingDocument");
             return new global::Sungero.Domain.Shared.BooleanPropertyInfo(propertyMetadata);
          }
        }
        public global::Sungero.Domain.Shared.IStringPropertyInfo Note 
        {
          get
          {
             var propertyMetadata = this.GetPropertyMetadata<global::Sungero.Metadata.StringPropertyMetadata>("Note");
             return new global::Sungero.Domain.Shared.StringPropertyInfo(propertyMetadata);
          }
        }
        public global::Sungero.Domain.Shared.ICollectionPropertyInfo<global::Sungero.Docflow.IAccessRightsRuleMembersPropertiesInfo> Members 
        {
          get
          {
             var propertyMetadata = this.GetPropertyMetadata<global::Sungero.Metadata.CollectionPropertyMetadata>("Members");
             return new global::Sungero.Domain.Shared.CollectionPropertyInfo<global::Sungero.Docflow.IAccessRightsRuleMembersPropertiesInfo>(propertyMetadata);
          }
        }
        public global::Sungero.Domain.Shared.IDateTimePropertyInfo Modified 
        {
          get
          {
             var propertyMetadata = this.GetPropertyMetadata<global::Sungero.Metadata.DateTimePropertyMetadata>("Modified");
             return new global::Sungero.Domain.Shared.DateTimePropertyInfo(propertyMetadata);
          }
        }
        public global::Sungero.Domain.Shared.IBooleanPropertyInfo GrantRightsOnExistingDocuments 
        {
          get
          {
             var propertyMetadata = this.GetPropertyMetadata<global::Sungero.Metadata.BooleanPropertyMetadata>("GrantRightsOnExistingDocuments");
             return new global::Sungero.Domain.Shared.BooleanPropertyInfo(propertyMetadata);
          }
        }


    protected internal AccessRightsRulePropertiesInfo(global::System.Type entityType) : base(entityType) { }
  }

}

// ==================================================================
// AccessRightsRuleHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow
{
  public partial class AccessRightsRuleSharedHandlers : global::Sungero.CoreEntities.DatabookEntrySharedHandlers
  {
    private global::Sungero.Docflow.IAccessRightsRule _obj
    {
      get { return (global::Sungero.Docflow.IAccessRightsRule)this.Entity; }
    }
    public virtual void NameChanged(global::Sungero.Domain.Shared.StringPropertyChangedEventArgs e) { }



    public virtual void BusinessUnitsChanged(global::Sungero.Domain.Shared.CollectionPropertyChangedEventArgs e) { }


    public virtual void DepartmentsChanged(global::Sungero.Domain.Shared.CollectionPropertyChangedEventArgs e) { }


    public virtual void DocumentGroupsChanged(global::Sungero.Domain.Shared.CollectionPropertyChangedEventArgs e) { }


    public virtual void GrantRightsOnLeadingDocumentChanged(global::Sungero.Domain.Shared.BooleanPropertyChangedEventArgs e) { }


    public virtual void NoteChanged(global::Sungero.Domain.Shared.StringPropertyChangedEventArgs e) { }


    public virtual void MembersChanged(global::Sungero.Domain.Shared.CollectionPropertyChangedEventArgs e) { }


    public virtual void ModifiedChanged(global::Sungero.Domain.Shared.DateTimePropertyChangedEventArgs e) { }


    public virtual void GrantRightsOnExistingDocumentsChanged(global::Sungero.Domain.Shared.BooleanPropertyChangedEventArgs e) { }




    public AccessRightsRuleSharedHandlers(global::Sungero.Docflow.IAccessRightsRule entity) : base(entity)
    {
    }
  }

  public partial class AccessRightsRuleDocumentKindsSharedHandlers : global::Sungero.Domain.Shared.ChildEntitySharedHandlers
  {
    private global::Sungero.Docflow.IAccessRightsRuleDocumentKinds _obj
    { 
      get { return (global::Sungero.Docflow.IAccessRightsRuleDocumentKinds)this.Entity; }
    }
    public virtual void DocumentKindsDocumentKindChanged(global::Sungero.Docflow.Shared.AccessRightsRuleDocumentKindsDocumentKindChangedEventArgs e) { }



    public AccessRightsRuleDocumentKindsSharedHandlers(global::Sungero.Docflow.IAccessRightsRuleDocumentKinds entity) : base(entity)
    {
    }
  }

  public partial class AccessRightsRuleDocumentKindsSharedCollectionHandlers : global::Sungero.Domain.Shared.ChildEntitySharedCollectionHandlers
  {
    private global::Sungero.Docflow.IAccessRightsRule _obj
    { 
      get { return (global::Sungero.Docflow.IAccessRightsRule)this.Entity; }
    }

    private global::Sungero.Docflow.IAccessRightsRuleDocumentKinds _added
    {
      get { return (global::Sungero.Docflow.IAccessRightsRuleDocumentKinds)this._Added; }
    }

    private global::Sungero.Docflow.IAccessRightsRuleDocumentKinds _deleted
    {
      get { return (global::Sungero.Docflow.IAccessRightsRuleDocumentKinds)this._Deleted; }
    }

    private global::Sungero.Docflow.IAccessRightsRuleDocumentKinds _source
    {
      get { return (global::Sungero.Docflow.IAccessRightsRuleDocumentKinds)this._Source; }
    }

    public virtual void DocumentKindsAdded(global::Sungero.Domain.Shared.CollectionPropertyAddedEventArgs e) { }
    public virtual void DocumentKindsDeleted(global::Sungero.Domain.Shared.CollectionPropertyDeletedEventArgs e) { }

    public AccessRightsRuleDocumentKindsSharedCollectionHandlers(global::Sungero.Docflow.IAccessRightsRule entity, global::Sungero.Domain.Shared.IChildEntity added, global::Sungero.Domain.Shared.IChildEntity deleted, global::Sungero.Domain.Shared.IChildEntity source)
      : base (entity, added, deleted, source)
    {
    }
  }

  public partial class AccessRightsRuleBusinessUnitsSharedHandlers : global::Sungero.Domain.Shared.ChildEntitySharedHandlers
  {
    private global::Sungero.Docflow.IAccessRightsRuleBusinessUnits _obj
    { 
      get { return (global::Sungero.Docflow.IAccessRightsRuleBusinessUnits)this.Entity; }
    }
    public virtual void BusinessUnitsBusinessUnitChanged(global::Sungero.Docflow.Shared.AccessRightsRuleBusinessUnitsBusinessUnitChangedEventArgs e) { }



    public AccessRightsRuleBusinessUnitsSharedHandlers(global::Sungero.Docflow.IAccessRightsRuleBusinessUnits entity) : base(entity)
    {
    }
  }

  public partial class AccessRightsRuleBusinessUnitsSharedCollectionHandlers : global::Sungero.Domain.Shared.ChildEntitySharedCollectionHandlers
  {
    private global::Sungero.Docflow.IAccessRightsRule _obj
    { 
      get { return (global::Sungero.Docflow.IAccessRightsRule)this.Entity; }
    }

    private global::Sungero.Docflow.IAccessRightsRuleBusinessUnits _added
    {
      get { return (global::Sungero.Docflow.IAccessRightsRuleBusinessUnits)this._Added; }
    }

    private global::Sungero.Docflow.IAccessRightsRuleBusinessUnits _deleted
    {
      get { return (global::Sungero.Docflow.IAccessRightsRuleBusinessUnits)this._Deleted; }
    }

    private global::Sungero.Docflow.IAccessRightsRuleBusinessUnits _source
    {
      get { return (global::Sungero.Docflow.IAccessRightsRuleBusinessUnits)this._Source; }
    }

    public virtual void BusinessUnitsAdded(global::Sungero.Domain.Shared.CollectionPropertyAddedEventArgs e) { }
    public virtual void BusinessUnitsDeleted(global::Sungero.Domain.Shared.CollectionPropertyDeletedEventArgs e) { }

    public AccessRightsRuleBusinessUnitsSharedCollectionHandlers(global::Sungero.Docflow.IAccessRightsRule entity, global::Sungero.Domain.Shared.IChildEntity added, global::Sungero.Domain.Shared.IChildEntity deleted, global::Sungero.Domain.Shared.IChildEntity source)
      : base (entity, added, deleted, source)
    {
    }
  }

  public partial class AccessRightsRuleDepartmentsSharedHandlers : global::Sungero.Domain.Shared.ChildEntitySharedHandlers
  {
    private global::Sungero.Docflow.IAccessRightsRuleDepartments _obj
    { 
      get { return (global::Sungero.Docflow.IAccessRightsRuleDepartments)this.Entity; }
    }
    public virtual void DepartmentsDepartmentChanged(global::Sungero.Docflow.Shared.AccessRightsRuleDepartmentsDepartmentChangedEventArgs e) { }



    public AccessRightsRuleDepartmentsSharedHandlers(global::Sungero.Docflow.IAccessRightsRuleDepartments entity) : base(entity)
    {
    }
  }

  public partial class AccessRightsRuleDepartmentsSharedCollectionHandlers : global::Sungero.Domain.Shared.ChildEntitySharedCollectionHandlers
  {
    private global::Sungero.Docflow.IAccessRightsRule _obj
    { 
      get { return (global::Sungero.Docflow.IAccessRightsRule)this.Entity; }
    }

    private global::Sungero.Docflow.IAccessRightsRuleDepartments _added
    {
      get { return (global::Sungero.Docflow.IAccessRightsRuleDepartments)this._Added; }
    }

    private global::Sungero.Docflow.IAccessRightsRuleDepartments _deleted
    {
      get { return (global::Sungero.Docflow.IAccessRightsRuleDepartments)this._Deleted; }
    }

    private global::Sungero.Docflow.IAccessRightsRuleDepartments _source
    {
      get { return (global::Sungero.Docflow.IAccessRightsRuleDepartments)this._Source; }
    }

    public virtual void DepartmentsAdded(global::Sungero.Domain.Shared.CollectionPropertyAddedEventArgs e) { }
    public virtual void DepartmentsDeleted(global::Sungero.Domain.Shared.CollectionPropertyDeletedEventArgs e) { }

    public AccessRightsRuleDepartmentsSharedCollectionHandlers(global::Sungero.Docflow.IAccessRightsRule entity, global::Sungero.Domain.Shared.IChildEntity added, global::Sungero.Domain.Shared.IChildEntity deleted, global::Sungero.Domain.Shared.IChildEntity source)
      : base (entity, added, deleted, source)
    {
    }
  }

  public partial class AccessRightsRuleDocumentGroupsSharedHandlers : global::Sungero.Domain.Shared.ChildEntitySharedHandlers
  {
    private global::Sungero.Docflow.IAccessRightsRuleDocumentGroups _obj
    { 
      get { return (global::Sungero.Docflow.IAccessRightsRuleDocumentGroups)this.Entity; }
    }
    public virtual void DocumentGroupsDocumentGroupChanged(global::Sungero.Docflow.Shared.AccessRightsRuleDocumentGroupsDocumentGroupChangedEventArgs e) { }



    public AccessRightsRuleDocumentGroupsSharedHandlers(global::Sungero.Docflow.IAccessRightsRuleDocumentGroups entity) : base(entity)
    {
    }
  }

  public partial class AccessRightsRuleDocumentGroupsSharedCollectionHandlers : global::Sungero.Domain.Shared.ChildEntitySharedCollectionHandlers
  {
    private global::Sungero.Docflow.IAccessRightsRule _obj
    { 
      get { return (global::Sungero.Docflow.IAccessRightsRule)this.Entity; }
    }

    private global::Sungero.Docflow.IAccessRightsRuleDocumentGroups _added
    {
      get { return (global::Sungero.Docflow.IAccessRightsRuleDocumentGroups)this._Added; }
    }

    private global::Sungero.Docflow.IAccessRightsRuleDocumentGroups _deleted
    {
      get { return (global::Sungero.Docflow.IAccessRightsRuleDocumentGroups)this._Deleted; }
    }

    private global::Sungero.Docflow.IAccessRightsRuleDocumentGroups _source
    {
      get { return (global::Sungero.Docflow.IAccessRightsRuleDocumentGroups)this._Source; }
    }

    public virtual void DocumentGroupsAdded(global::Sungero.Domain.Shared.CollectionPropertyAddedEventArgs e) { }
    public virtual void DocumentGroupsDeleted(global::Sungero.Domain.Shared.CollectionPropertyDeletedEventArgs e) { }

    public AccessRightsRuleDocumentGroupsSharedCollectionHandlers(global::Sungero.Docflow.IAccessRightsRule entity, global::Sungero.Domain.Shared.IChildEntity added, global::Sungero.Domain.Shared.IChildEntity deleted, global::Sungero.Domain.Shared.IChildEntity source)
      : base (entity, added, deleted, source)
    {
    }
  }

  public partial class AccessRightsRuleMembersSharedHandlers : global::Sungero.Domain.Shared.ChildEntitySharedHandlers
  {
    private global::Sungero.Docflow.IAccessRightsRuleMembers _obj
    { 
      get { return (global::Sungero.Docflow.IAccessRightsRuleMembers)this.Entity; }
    }
    public virtual void MembersRecipientChanged(global::Sungero.Docflow.Shared.AccessRightsRuleMembersRecipientChangedEventArgs e) { }


    public virtual void MembersRightTypeChanged(global::Sungero.Domain.Shared.EnumerationPropertyChangedEventArgs e) { }



    public AccessRightsRuleMembersSharedHandlers(global::Sungero.Docflow.IAccessRightsRuleMembers entity) : base(entity)
    {
    }
  }

  public partial class AccessRightsRuleMembersSharedCollectionHandlers : global::Sungero.Domain.Shared.ChildEntitySharedCollectionHandlers
  {
    private global::Sungero.Docflow.IAccessRightsRule _obj
    { 
      get { return (global::Sungero.Docflow.IAccessRightsRule)this.Entity; }
    }

    private global::Sungero.Docflow.IAccessRightsRuleMembers _added
    {
      get { return (global::Sungero.Docflow.IAccessRightsRuleMembers)this._Added; }
    }

    private global::Sungero.Docflow.IAccessRightsRuleMembers _deleted
    {
      get { return (global::Sungero.Docflow.IAccessRightsRuleMembers)this._Deleted; }
    }

    private global::Sungero.Docflow.IAccessRightsRuleMembers _source
    {
      get { return (global::Sungero.Docflow.IAccessRightsRuleMembers)this._Source; }
    }

    public virtual void MembersAdded(global::Sungero.Domain.Shared.CollectionPropertyAddedEventArgs e) { }
    public virtual void MembersDeleted(global::Sungero.Domain.Shared.CollectionPropertyDeletedEventArgs e) { }

    public AccessRightsRuleMembersSharedCollectionHandlers(global::Sungero.Docflow.IAccessRightsRule entity, global::Sungero.Domain.Shared.IChildEntity added, global::Sungero.Domain.Shared.IChildEntity deleted, global::Sungero.Domain.Shared.IChildEntity source)
      : base (entity, added, deleted, source)
    {
    }
  }

}

// ==================================================================
// AccessRightsRuleResources.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Shared.AccessRightsRule
{
  /// <summary>
  /// Represents AccessRightsRule resources.
  /// </summary>
  public class AccessRightsRuleResources : global::Sungero.CoreEntities.Shared.DatabookEntry.DatabookEntryResources, global::Sungero.Docflow.AccessRightsRule.IAccessRightsRuleResources
  {
    public virtual global::CommonLibrary.LocalizedString AccessRightsAgentEnqueued
    {
      get
      {
        return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Docflow.IAccessRightsRule) , "AccessRightsAgentEnqueued");
      }
    }

    public virtual global::CommonLibrary.LocalizedString AccessRightsAgentEnqueuedFormat(params object[] args)
    {
      return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Docflow.IAccessRightsRule), "AccessRightsAgentEnqueued", false, args);
    }
    public virtual global::CommonLibrary.LocalizedString RuleMustHaveCriteria
    {
      get
      {
        return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Docflow.IAccessRightsRule) , "RuleMustHaveCriteria");
      }
    }

    public virtual global::CommonLibrary.LocalizedString RuleMustHaveCriteriaFormat(params object[] args)
    {
      return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Docflow.IAccessRightsRule), "RuleMustHaveCriteria", false, args);
    }

  }
}

// ==================================================================
// AccessRightsRuleSharedFunctions.g.cs
// ==================================================================

namespace Sungero.Docflow.Shared
{
  public partial class AccessRightsRuleFunctions : global::Sungero.CoreEntities.Shared.DatabookEntryFunctions
  {
    private global::Sungero.Docflow.IAccessRightsRule _obj
    {
      get { return (global::Sungero.Docflow.IAccessRightsRule)this.Entity; }
    }

    public AccessRightsRuleFunctions(global::Sungero.Docflow.IAccessRightsRule entity) : base(entity) { }
  }
}

// ==================================================================
// AccessRightsRuleFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Functions
{
  internal static class AccessRightsRule
  {
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.AccessRightsRuleFunctions" />
    internal static  global::System.Collections.Generic.List<global::Sungero.Docflow.IDocumentGroupBase> GetDocumentGroups(global::Sungero.Docflow.IAccessRightsRule accessRightsRule)
    {
      var functions = (global::Sungero.Docflow.Shared.AccessRightsRuleFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)accessRightsRule).FunctionsContainer.SharedFunctions;
      return functions.GetDocumentGroups();
    }

    internal static class Remote
    {
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.AccessRightsRuleFunctions" />
      internal static  void EnqueueAccessRightsAgent()
      {
      global::Sungero.Domain.Shared.RemoteFunctionExecutor.Execute(
          global::System.Guid.Parse("6b57117e-0253-4a46-a3dc-4ed0d5b512ec"),
          "EnqueueAccessRightsAgent()"
      );
      }

    }
  }
}

// ==================================================================
// AccessRightsRuleFilterState.g.cs
// ==================================================================

namespace Sungero.Docflow.Shared.AccessRightsRule
{

  public class AccessRightsRuleFilterInfo : global::Sungero.CoreEntities.Shared.DatabookEntry.DatabookEntryFilterInfo,
    global::Sungero.Docflow.IAccessRightsRuleFilterInfo
  {
    public global::Sungero.Domain.Shared.IFilterControlInfo Active
    {
      get
      {
        return new global::Sungero.Domain.Shared.FilterControlInfo("Active");
      }
    }

    public global::Sungero.Domain.Shared.IFilterControlInfo Closed
    {
      get
      {
        return new global::Sungero.Domain.Shared.FilterControlInfo("Closed");
      }
    }

    public global::Sungero.Domain.Shared.IFilterControlInfo DocumentKind
    {
      get
      {
        return new global::Sungero.Domain.Shared.FilterControlInfo("DocumentKind");
      }
    }

    public global::Sungero.Domain.Shared.IFilterControlInfo BusinessUnit
    {
      get
      {
        return new global::Sungero.Domain.Shared.FilterControlInfo("BusinessUnit");
      }
    }

    public global::Sungero.Domain.Shared.IFilterControlInfo Department
    {
      get
      {
        return new global::Sungero.Domain.Shared.FilterControlInfo("Department");
      }
    }


  }

  public class AccessRightsRuleFilterState : global::Sungero.CoreEntities.Shared.DatabookEntry.DatabookEntryFilterState,
    global::Sungero.Docflow.IAccessRightsRuleFilterState
  {
    public bool Active
    {
      get { return this.GetValue<bool>(); }
      set { this.SetValue(value); }
    }

    public bool Closed
    {
      get { return this.GetValue<bool>(); }
      set { this.SetValue(value); }
    }



    public global::Sungero.Docflow.IDocumentKind DocumentKind
    {
      get { return this.GetValue<global::Sungero.Docflow.IDocumentKind>(); }
      set { this.SetValue(value); }
    }

    public global::Sungero.Company.IBusinessUnit BusinessUnit
    {
      get { return this.GetValue<global::Sungero.Company.IBusinessUnit>(); }
      set { this.SetValue(value); }
    }

    public global::Sungero.Company.IDepartment Department
    {
      get { return this.GetValue<global::Sungero.Company.IDepartment>(); }
      set { this.SetValue(value); }
    }




    public new Sungero.Docflow.IAccessRightsRuleFilterInfo Info
    {
      get
      {
        return (Sungero.Docflow.IAccessRightsRuleFilterInfo) base.Info;
      }
    }
    protected override global::Sungero.Domain.Shared.IFilterInfo CreateFilterInfo()
    {
      return new Sungero.Docflow.Shared.AccessRightsRule.AccessRightsRuleFilterInfo();
    }

  }
}

// ==================================================================
// AccessRightsRuleSharedPublicFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Shared
{
  public class AccessRightsRuleSharedPublicFunctions : global::Sungero.Docflow.Shared.IAccessRightsRuleSharedPublicFunctions
  {
  }
}
