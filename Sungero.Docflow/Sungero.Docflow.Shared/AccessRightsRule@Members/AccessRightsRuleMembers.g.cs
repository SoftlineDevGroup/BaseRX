
// ==================================================================
// AccessRightsRuleMembersState.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Shared
{
  public class AccessRightsRuleMembersState : 
    global::Sungero.Domain.Shared.ChildEntityState, global::Sungero.Docflow.IAccessRightsRuleMembersState
  {
    public AccessRightsRuleMembersState(global::Sungero.Docflow.IAccessRightsRuleMembers entity) : base(entity) { }

    public new global::Sungero.Docflow.IAccessRightsRuleMembersPropertyStates Properties
    {
      get { return (global::Sungero.Docflow.IAccessRightsRuleMembersPropertyStates)base.Properties; }
    }

    protected override global::Sungero.Domain.Shared.IEntityPropertyStates CreatePropertyStates(global::Sungero.Domain.Shared.IEntity entity)
    {
      return new global::Sungero.Docflow.Shared.AccessRightsRuleMembersPropertyStates(entity);
    }


  }


  public class AccessRightsRuleMembersPropertyStates : 
    global::Sungero.Domain.Shared.ChildEntityPropertyStates, global::Sungero.Docflow.IAccessRightsRuleMembersPropertyStates
  {
            public global::Sungero.Domain.Shared.IPropertyState<global::Sungero.Docflow.IAccessRightsRule> AccessRightsRule 
            {
              get { return this.InternalAccessRightsRule; }
            }

            protected virtual global::Sungero.Domain.Shared.IPropertyState<global::Sungero.Docflow.IAccessRightsRule> InternalAccessRightsRule
            {
              get { return this.GetPropertyState<global::Sungero.Docflow.IAccessRightsRule>("AccessRightsRule"); }
            }
            public global::Sungero.Domain.Shared.IPropertyState<global::Sungero.CoreEntities.IRecipient> Recipient 
            {
              get { return this.InternalRecipient; }
            }

            protected virtual global::Sungero.Domain.Shared.IPropertyState<global::Sungero.CoreEntities.IRecipient> InternalRecipient
            {
              get { return this.GetPropertyState<global::Sungero.CoreEntities.IRecipient>("Recipient"); }
            }
            public global::Sungero.Domain.Shared.IPropertyState<global::Sungero.Core.Enumeration?> RightType 
            {
              get { return this.GetPropertyState<global::Sungero.Core.Enumeration?>("RightType"); }
            }


    protected internal AccessRightsRuleMembersPropertyStates(global::Sungero.Domain.Shared.IEntity entity) : base(entity) { }
  }

  public class AccessRightsRuleMembersCollectionPropertyState<T> :
    global::Sungero.Domain.Shared.ChildEntityCollectionPropertyState<T>, global::Sungero.Docflow.IAccessRightsRuleMembersCollectionPropertyState<T>
    where T : global::Sungero.Docflow.IAccessRightsRuleMembers
  {
    public new global::Sungero.Docflow.IAccessRightsRuleMembersCollectionPropertyStates Properties
    {
      get { return (global::Sungero.Docflow.IAccessRightsRuleMembersCollectionPropertyStates)base.Properties; }
    }

    protected override global::Sungero.Domain.Shared.IChildEntityCollectionPropertyStates CreatePropertyStates()
    {
      return new global::Sungero.Docflow.Shared.AccessRightsRuleMembersCollectionPropertyStates(this.ChildEntityMetadata);
    }

    protected internal AccessRightsRuleMembersCollectionPropertyState(global::Sungero.Domain.Shared.IEntity entity, string propertyName) : base(entity, propertyName) { }
  }

  public class AccessRightsRuleMembersCollectionPropertyStates :
    global::Sungero.Domain.Shared.ChildEntityCollectionPropertyStates, global::Sungero.Docflow.IAccessRightsRuleMembersCollectionPropertyStates
  {
        public global::Sungero.Domain.Shared.IChildPropertySummaryState AccessRightsRule
        {
          get { return this.GetChildPropertySummaryState("AccessRightsRule"); }
        }
        public global::Sungero.Domain.Shared.IChildPropertySummaryState Recipient
        {
          get { return this.GetChildPropertySummaryState("Recipient"); }
        }
        public global::Sungero.Domain.Shared.IChildPropertySummaryState RightType
        {
          get { return this.GetChildPropertySummaryState("RightType"); }
        }


    protected internal AccessRightsRuleMembersCollectionPropertyStates(global::Sungero.Metadata.EntityMetadata childEntityMetadata) : base(childEntityMetadata) { }
  }
}

// ==================================================================
// AccessRightsRuleMembersEventArgs.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Shared
{  
    public class AccessRightsRuleMembersRecipientChangedEventArgs : global::Sungero.Domain.Shared.PropertyChangedEventArgs<global::Sungero.CoreEntities.IRecipient>
    {
      public AccessRightsRuleMembersRecipientChangedEventArgs(global::Sungero.Domain.Shared.IPropertyState<global::Sungero.CoreEntities.IRecipient> state, global::Sungero.CoreEntities.IRecipient newValue, global::Sungero.Domain.Shared.IEntity entity): base(state, newValue, entity) { }
    }


}

// ==================================================================
// AccessRightsRuleMembersInfo.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Shared
{
  public class AccessRightsRuleMembersInfo : 
    global::Sungero.Domain.Shared.ChildEntityInfo, global::Sungero.Docflow.IAccessRightsRuleMembersInfo
  {
    public AccessRightsRuleMembersInfo(global::System.Type entityType) : base(entityType) { }

    public new global::Sungero.Docflow.IAccessRightsRuleMembersPropertiesInfo Properties
    {
      get { return (global::Sungero.Docflow.IAccessRightsRuleMembersPropertiesInfo)base.Properties; }
    }

    protected override global::Sungero.Domain.Shared.IEntityPropertiesInfo CreateEntityPropertiesInfo(global::System.Type entityType)
    {
      return new global::Sungero.Docflow.Shared.AccessRightsRuleMembersPropertiesInfo(entityType);
    }

  }

  public class AccessRightsRuleMembersPropertiesInfo : 
    global::Sungero.Domain.Shared.ChildEntityPropertiesInfo, global::Sungero.Docflow.IAccessRightsRuleMembersPropertiesInfo
  {
        public global::Sungero.Domain.Shared.INavigationPropertyInfo<global::Sungero.Docflow.IAccessRightsRuleInfo, global::Sungero.Docflow.IAccessRightsRule> AccessRightsRule 
        {
          get
          {
             var propertyMetadata = this.GetPropertyMetadata<global::Sungero.Metadata.NavigationPropertyMetadata>("AccessRightsRule");
             return new global::Sungero.Domain.Shared.NavigationPropertyInfo<global::Sungero.Docflow.IAccessRightsRuleInfo, global::Sungero.Docflow.IAccessRightsRule>(propertyMetadata);
          }
        }
        public global::Sungero.Domain.Shared.INavigationPropertyInfo<global::Sungero.CoreEntities.IRecipientInfo, global::Sungero.CoreEntities.IRecipient> Recipient 
        {
          get
          {
             var propertyMetadata = this.GetPropertyMetadata<global::Sungero.Metadata.NavigationPropertyMetadata>("Recipient");
             return new global::Sungero.Domain.Shared.NavigationPropertyInfo<global::Sungero.CoreEntities.IRecipientInfo, global::Sungero.CoreEntities.IRecipient>(propertyMetadata);
          }
        }
        public global::Sungero.Domain.Shared.IEnumPropertyInfo RightType 
        {
          get
          {
             var propertyMetadata = this.GetPropertyMetadata<global::Sungero.Metadata.EnumPropertyMetadata>("RightType");
             return new global::Sungero.Domain.Shared.EnumPropertyInfo(propertyMetadata);
          }
        }


    protected internal AccessRightsRuleMembersPropertiesInfo(global::System.Type entityType) : base(entityType) { }
  }

}
