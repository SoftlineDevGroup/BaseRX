
// ==================================================================
// ApprovalRuleBase.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
    public class ApprovalRuleBaseFilter<T> :
      global::Sungero.Domain.EntityFilterBase<T>
      where T : class, global::Sungero.Docflow.IApprovalRuleBase
    {
      protected new global::Sungero.Docflow.IApprovalRuleBaseFilterState Filter { get; private set; }

      private global::Sungero.Docflow.IApprovalRuleBaseFilterState filter
      {
        get
        {
          return this.Filter;
        }
      }

      protected override global::System.Linq.IQueryable<T> ApplyAppliedFilter(global::System.Linq.IQueryable<T> query)
      {
        return base.ApplyAppliedFilter(query);
      }

      public ApprovalRuleBaseFilter(global::Sungero.Docflow.IApprovalRuleBaseFilterState filter)
      : base()
      {
        this.Filter = filter;
      }

      protected ApprovalRuleBaseFilter()
      {
      }
    }
      public class ApprovalRuleBaseUiFilter<T> :
        global::Sungero.Domain.EntityUiFilterBase<T>
        where T : class, global::Sungero.Docflow.IApprovalRuleBase
      {
        protected override global::System.Linq.IQueryable<T> ApplyAppliedFilter(global::System.Linq.IQueryable<T> query)
        {
          return base.ApplyAppliedFilter(query);
        }
      }

    public class ApprovalRuleBaseSearchDialogModel : global::Sungero.CoreEntities.Server.DatabookEntrySearchDialogModel
        {
                  public override global::System.Int32? Id { get; protected set; }



                  public virtual global::System.String Name { get; protected set; }
                  public virtual global::System.Int32? Priority { get; protected set; }
                  public virtual global::System.String Note { get; protected set; }
                  public virtual global::System.Boolean? IsSmallApprovalAllowed { get; protected set; }
                  public virtual global::System.Int32? ReworkDeadline { get; protected set; }


                  public virtual global::System.Collections.Generic.IEnumerable<Sungero.Core.Enumeration> Status { get; protected set; }
                  public virtual global::System.Collections.Generic.IEnumerable<Sungero.Core.Enumeration> DocumentFlow { get; protected set; }
                  public virtual global::System.Collections.Generic.IEnumerable<Sungero.Core.Enumeration> ReworkPerformerType { get; protected set; }
                  public virtual global::System.Collections.Generic.IEnumerable<Sungero.CoreEntities.IRecipient> ReworkPerformer { get; protected set; }
                  public virtual global::System.Collections.Generic.IEnumerable<Sungero.Docflow.IApprovalRoleBase> ReworkApprovalRole { get; protected set; }


                   [Sungero.Domain.Shared.HideInDevStudio()]
                   public ApprovalRuleBaseDocumentKindsModel DocumentKinds { get; protected set; }
                   [Sungero.Domain.Shared.HideInDevStudio()]
                   public ApprovalRuleBaseDepartmentsModel Departments { get; protected set; }
                   [Sungero.Domain.Shared.HideInDevStudio()]
                   public ApprovalRuleBaseStagesModel Stages { get; protected set; }
                   [Sungero.Domain.Shared.HideInDevStudio()]
                   public ApprovalRuleBaseBusinessUnitsModel BusinessUnits { get; protected set; }
                   [Sungero.Domain.Shared.HideInDevStudio()]
                   public ApprovalRuleBaseDocumentGroupsModel DocumentGroups { get; protected set; }
                   [Sungero.Domain.Shared.HideInDevStudio()]
                   public ApprovalRuleBaseTransitionsModel Transitions { get; protected set; }
                   [Sungero.Domain.Shared.HideInDevStudio()]
                   public ApprovalRuleBaseConditionsModel Conditions { get; protected set; }

        }


      public class ApprovalRuleBaseDocumentKindsModel : global::Sungero.Domain.CollectionPropertySearchDialogModel
          {
            public override global::System.Int32? Id { get; protected set; }


         }
      public class ApprovalRuleBaseDepartmentsModel : global::Sungero.Domain.CollectionPropertySearchDialogModel
          {
            public override global::System.Int32? Id { get; protected set; }


         }
      public class ApprovalRuleBaseStagesModel : global::Sungero.Domain.CollectionPropertySearchDialogModel
          {
            public override global::System.Int32? Id { get; protected set; }


         }
      public class ApprovalRuleBaseBusinessUnitsModel : global::Sungero.Domain.CollectionPropertySearchDialogModel
          {
            public override global::System.Int32? Id { get; protected set; }


         }
      public class ApprovalRuleBaseDocumentGroupsModel : global::Sungero.Domain.CollectionPropertySearchDialogModel
          {
            public override global::System.Int32? Id { get; protected set; }


         }
      public class ApprovalRuleBaseTransitionsModel : global::Sungero.Domain.CollectionPropertySearchDialogModel
          {
            public override global::System.Int32? Id { get; protected set; }


         }
      public class ApprovalRuleBaseConditionsModel : global::Sungero.Domain.CollectionPropertySearchDialogModel
          {
            public override global::System.Int32? Id { get; protected set; }


         }



  public class ApprovalRuleBaseFilterForParentRule<TQueryEntity, TSourceEntity>
    : global::Sungero.Domain.EntityPropertyFilterBase<TQueryEntity, TSourceEntity>
    where TQueryEntity : class, global::Sungero.Docflow.IApprovalRuleBase
    where TSourceEntity : class, global::Sungero.Docflow.IApprovalRuleBase
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, TSourceEntity sourceEntity)
    {
      var args = new global::Sungero.Domain.PropertyFilteringEventArgs(sourceEntity);
      var result = new global::Sungero.Docflow.ApprovalRuleBaseParentRulePropertyFilteringServerHandler<TQueryEntity>(sourceEntity).ParentRuleFiltering(query, args);
      if (args.DisableUiFiltering)
        global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public ApprovalRuleBaseFilterForParentRule(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class ApprovalRuleBaseSearchFilterForParentRule<TQueryEntity>
    : global::Sungero.Domain.SearchDialogPropertyFilter<TQueryEntity>
    where TQueryEntity : class, global::Sungero.Docflow.IApprovalRuleBase
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, System.Guid entityType)
    {
      var args = new global::Sungero.Domain.PropertySearchDialogFilteringEventArgs(entityType);
      var result = new global::Sungero.Docflow.ApprovalRuleBaseParentRuleSearchPropertyFilteringServerHandler<TQueryEntity>().ParentRuleSearchDialogFiltering(query, args);
      if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public ApprovalRuleBaseSearchFilterForParentRule(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class ApprovalRuleBaseFilterForReworkPerformer<TQueryEntity, TSourceEntity>
    : global::Sungero.Domain.EntityPropertyFilterBase<TQueryEntity, TSourceEntity>
    where TQueryEntity : class, global::Sungero.CoreEntities.IRecipient
    where TSourceEntity : class, global::Sungero.Docflow.IApprovalRuleBase
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, TSourceEntity sourceEntity)
    {
      var args = new global::Sungero.Domain.PropertyFilteringEventArgs(sourceEntity);
      var result = new global::Sungero.Docflow.ApprovalRuleBaseReworkPerformerPropertyFilteringServerHandler<TQueryEntity>(sourceEntity).ReworkPerformerFiltering(query, args);
      if (args.DisableUiFiltering)
        global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public ApprovalRuleBaseFilterForReworkPerformer(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class ApprovalRuleBaseSearchFilterForReworkPerformer<TQueryEntity>
    : global::Sungero.Domain.SearchDialogPropertyFilter<TQueryEntity>
    where TQueryEntity : class, global::Sungero.CoreEntities.IRecipient
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, System.Guid entityType)
    {
      var args = new global::Sungero.Domain.PropertySearchDialogFilteringEventArgs(entityType);
      var result = new global::Sungero.Docflow.ApprovalRuleBaseReworkPerformerSearchPropertyFilteringServerHandler<TQueryEntity>().ReworkPerformerSearchDialogFiltering(query, args);
      if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public ApprovalRuleBaseSearchFilterForReworkPerformer(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class ApprovalRuleBaseFilterForReworkApprovalRole<TQueryEntity, TSourceEntity>
    : global::Sungero.Domain.EntityPropertyFilterBase<TQueryEntity, TSourceEntity>
    where TQueryEntity : class, global::Sungero.Docflow.IApprovalRoleBase
    where TSourceEntity : class, global::Sungero.Docflow.IApprovalRuleBase
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, TSourceEntity sourceEntity)
    {
      var args = new global::Sungero.Domain.PropertyFilteringEventArgs(sourceEntity);
      var result = new global::Sungero.Docflow.ApprovalRuleBaseReworkApprovalRolePropertyFilteringServerHandler<TQueryEntity>(sourceEntity).ReworkApprovalRoleFiltering(query, args);
      if (args.DisableUiFiltering)
        global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public ApprovalRuleBaseFilterForReworkApprovalRole(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class ApprovalRuleBaseSearchFilterForReworkApprovalRole<TQueryEntity>
    : global::Sungero.Domain.SearchDialogPropertyFilter<TQueryEntity>
    where TQueryEntity : class, global::Sungero.Docflow.IApprovalRoleBase
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, System.Guid entityType)
    {
      var args = new global::Sungero.Domain.PropertySearchDialogFilteringEventArgs(entityType);
      var result = new global::Sungero.Docflow.ApprovalRuleBaseReworkApprovalRoleSearchPropertyFilteringServerHandler<TQueryEntity>().ReworkApprovalRoleSearchDialogFiltering(query, args);
      if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public ApprovalRuleBaseSearchFilterForReworkApprovalRole(string propertyName)
      : base(propertyName)
    {
    }
  }



  [global::Sungero.Domain.Filter(typeof(global::Sungero.Docflow.Server.ApprovalRuleBaseFilter<global::Sungero.Docflow.IApprovalRuleBase>))]
  [global::Sungero.Domain.UiFilter(typeof(global::Sungero.Docflow.Server.ApprovalRuleBaseUiFilter<global::Sungero.Docflow.IApprovalRuleBase>))]
  [global::Sungero.Domain.PropertyFilter(typeof(global::Sungero.Docflow.Server.ApprovalRuleBaseFilterForParentRule<global::Sungero.Docflow.IApprovalRuleBase, global::Sungero.Docflow.IApprovalRuleBase>), "ParentRule")]
  [global::Sungero.Domain.SearchPropertyFilter(typeof(global::Sungero.Docflow.Server.ApprovalRuleBaseSearchFilterForParentRule<global::Sungero.Docflow.IApprovalRuleBase>), "ParentRule")]
  [global::Sungero.Domain.PropertyFilter(typeof(global::Sungero.Docflow.Server.ApprovalRuleBaseFilterForReworkPerformer<global::Sungero.CoreEntities.IRecipient, global::Sungero.Docflow.IApprovalRuleBase>), "ReworkPerformer")]
  [global::Sungero.Domain.SearchPropertyFilter(typeof(global::Sungero.Docflow.Server.ApprovalRuleBaseSearchFilterForReworkPerformer<global::Sungero.CoreEntities.IRecipient>), "ReworkPerformer")]
  [global::Sungero.Domain.PropertyFilter(typeof(global::Sungero.Docflow.Server.ApprovalRuleBaseFilterForReworkApprovalRole<global::Sungero.Docflow.IApprovalRoleBase, global::Sungero.Docflow.IApprovalRuleBase>), "ReworkApprovalRole")]
  [global::Sungero.Domain.SearchPropertyFilter(typeof(global::Sungero.Docflow.Server.ApprovalRuleBaseSearchFilterForReworkApprovalRole<global::Sungero.Docflow.IApprovalRoleBase>), "ReworkApprovalRole")]


  public class ApprovalRuleBase :
    global::Sungero.CoreEntities.Server.DatabookEntry, global::Sungero.Docflow.IApprovalRuleBase
  {
    public static new readonly global::System.Guid ClassTypeGuid = global::System.Guid.Parse("42a6a084-6828-47d9-95bb-50b0538a6037");

    public override global::System.Guid TypeGuid
    {
      get { return global::Sungero.Docflow.Server.ApprovalRuleBase.ClassTypeGuid; }
    }

    public override string TypeName
    {
      get { return "Sungero.Docflow.IApprovalRuleBase, Sungero.Domain.Interfaces"; }
    }

    public override string DisplayValue
    {
      get { return this.Name; }
      set { this.Name = value; }
    }

    public new virtual global::Sungero.Docflow.IApprovalRuleBaseState State
    {
      get { return (global::Sungero.Docflow.IApprovalRuleBaseState)base.State; }
    }

    protected override global::Sungero.Domain.Shared.IEntityState CreateState()
    {
      return new global::Sungero.Docflow.Shared.ApprovalRuleBaseState(this);
    }

    public new virtual global::Sungero.Docflow.IApprovalRuleBaseInfo Info
    {
      get { return (global::Sungero.Docflow.IApprovalRuleBaseInfo)base.Info; }
    }

    public new virtual global::Sungero.Docflow.IApprovalRuleBaseAccessRights AccessRights
    {
      get { return (global::Sungero.Docflow.IApprovalRuleBaseAccessRights)base.AccessRights; }
    }

    protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
    {
      return new global::Sungero.Docflow.Server.ApprovalRuleBaseAccessRights(this);
    }

    protected override global::Sungero.Domain.EntityFunctions CreateServerFunctions()
    {
      return new global::Sungero.Docflow.Server.ApprovalRuleBaseFunctions(this);
    }

    protected override global::Sungero.Domain.Shared.EntityFunctions CreateSharedFunctions()
    {
      return new global::Sungero.Docflow.Shared.ApprovalRuleBaseFunctions(this);
    }

    protected override object CreateHandlers() {
      return new global::Sungero.Docflow.ApprovalRuleBaseServerHandlers(this);
    }

    protected override object CreateSharedHandlers() {
      return new global::Sungero.Docflow.ApprovalRuleBaseSharedHandlers(this);
    }

    private global::System.String _Name;
    public virtual global::System.String Name
    {
      get
      {
        return this._Name;
      }

      set
      {
        this.SetPropertyValue("Name", this._Name, value, (propertyValue) => { this._Name = propertyValue; }, this.NameChangedHandler);
      }
    }
    private global::System.Int32? _Priority;
    public virtual global::System.Int32? Priority
    {
      get
      {
        return this._Priority;
      }

      set
      {
        this.SetPropertyValue("Priority", this._Priority, value, (propertyValue) => { this._Priority = propertyValue; }, this.PriorityChangedHandler);
      }
    }
    private global::System.Boolean? _IsDefaultRule;
    public virtual global::System.Boolean? IsDefaultRule
    {
      get
      {
        return this._IsDefaultRule;
      }

      set
      {
        this.SetPropertyValue("IsDefaultRule", this._IsDefaultRule, value, (propertyValue) => { this._IsDefaultRule = propertyValue; }, this.IsDefaultRuleChangedHandler);
      }
    }
    private global::System.String _Note;
    public virtual global::System.String Note
    {
      get
      {
        return this._Note;
      }

      set
      {
        this.SetPropertyValue("Note", this._Note, value, (propertyValue) => { this._Note = propertyValue; }, this.NoteChangedHandler);
      }
    }
    private global::System.Int32? _VersionNumber;
    public virtual global::System.Int32? VersionNumber
    {
      get
      {
        return this._VersionNumber;
      }

      set
      {
        this.SetPropertyValue("VersionNumber", this._VersionNumber, value, (propertyValue) => { this._VersionNumber = propertyValue; }, this.VersionNumberChangedHandler);
      }
    }
    private global::System.Boolean? _IsSmallApprovalAllowed;
    public virtual global::System.Boolean? IsSmallApprovalAllowed
    {
      get
      {
        return this._IsSmallApprovalAllowed;
      }

      set
      {
        this.SetPropertyValue("IsSmallApprovalAllowed", this._IsSmallApprovalAllowed, value, (propertyValue) => { this._IsSmallApprovalAllowed = propertyValue; }, this.IsSmallApprovalAllowedChangedHandler);
      }
    }
    private global::System.Int32? _ReworkDeadline;
    public virtual global::System.Int32? ReworkDeadline
    {
      get
      {
        return this._ReworkDeadline;
      }

      set
      {
        this.SetPropertyValue("ReworkDeadline", this._ReworkDeadline, value, (propertyValue) => { this._ReworkDeadline = propertyValue; }, this.ReworkDeadlineChangedHandler);
      }
    }






    private static global::Sungero.Domain.Shared.EnumerationItems _StatusItems = new global::Sungero.Domain.Shared.EnumerationItems(
      global::Sungero.CoreEntities.Server.DatabookEntry.StatusItems,
      typeof(global::Sungero.Docflow.ApprovalRuleBase.Status),
      typeof(global::Sungero.Docflow.Server.ApprovalRuleBase),
      "Status");

    public static new global::Sungero.Domain.Shared.EnumerationItems StatusItems
    {
      get { return global::Sungero.Docflow.Server.ApprovalRuleBase._StatusItems; }
    }

    public override global::Sungero.Domain.Shared.EnumerationItems StatusAllowedItems
    {
      get { return global::Sungero.Docflow.Server.ApprovalRuleBase.StatusItems; }
    }

    private static global::Sungero.Domain.Shared.EnumerationItems _DocumentFlowItems = new global::Sungero.Domain.Shared.EnumerationItems(
      null,
      typeof(global::Sungero.Docflow.ApprovalRuleBase.DocumentFlow),
      typeof(global::Sungero.Docflow.Server.ApprovalRuleBase),
      "DocumentFlow");

    public static global::Sungero.Domain.Shared.EnumerationItems DocumentFlowItems
    {
      get { return global::Sungero.Docflow.Server.ApprovalRuleBase._DocumentFlowItems; }
    }

    public virtual global::Sungero.Domain.Shared.EnumerationItems DocumentFlowAllowedItems
    {
      get { return global::Sungero.Docflow.Server.ApprovalRuleBase.DocumentFlowItems; }
    }

    private global::Sungero.Core.Enumeration? _DocumentFlow;

    public virtual global::Sungero.Core.Enumeration? DocumentFlow
    {
      get { return this._DocumentFlow; }
      set { this.SetEnumPropertyValue("DocumentFlow", this._DocumentFlow, value, (propertyValue) => { this._DocumentFlow = propertyValue; }, this.DocumentFlowChangedHandler, this.DocumentFlowAllowedItems); }
    }
    private static global::Sungero.Domain.Shared.EnumerationItems _ReworkPerformerTypeItems = new global::Sungero.Domain.Shared.EnumerationItems(
      null,
      typeof(global::Sungero.Docflow.ApprovalRuleBase.ReworkPerformerType),
      typeof(global::Sungero.Docflow.Server.ApprovalRuleBase),
      "ReworkPerformerType");

    public static global::Sungero.Domain.Shared.EnumerationItems ReworkPerformerTypeItems
    {
      get { return global::Sungero.Docflow.Server.ApprovalRuleBase._ReworkPerformerTypeItems; }
    }

    public virtual global::Sungero.Domain.Shared.EnumerationItems ReworkPerformerTypeAllowedItems
    {
      get { return global::Sungero.Docflow.Server.ApprovalRuleBase.ReworkPerformerTypeItems; }
    }

    private global::Sungero.Core.Enumeration? _ReworkPerformerType;

    public virtual global::Sungero.Core.Enumeration? ReworkPerformerType
    {
      get { return this._ReworkPerformerType; }
      set { this.SetEnumPropertyValue("ReworkPerformerType", this._ReworkPerformerType, value, (propertyValue) => { this._ReworkPerformerType = propertyValue; }, this.ReworkPerformerTypeChangedHandler, this.ReworkPerformerTypeAllowedItems); }
    }


    private global::Sungero.Docflow.IApprovalRuleBase _ParentRule;
    public virtual global::Sungero.Docflow.IApprovalRuleBase ParentRule
    {
      get
      {
        return this._ParentRule;
      }

      set
      {
        this.SetPropertyValue("ParentRule", this._ParentRule, value, (propertyValue) => { this._ParentRule = propertyValue; }, this.ParentRuleChangedHandler);
      }
    }
    private global::Sungero.CoreEntities.IRecipient _ReworkPerformer;
    public virtual global::Sungero.CoreEntities.IRecipient ReworkPerformer
    {
      get
      {
        return this._ReworkPerformer;
      }

      set
      {
        this.SetPropertyValue("ReworkPerformer", this._ReworkPerformer, value, (propertyValue) => { this._ReworkPerformer = propertyValue; }, this.ReworkPerformerChangedHandler);
      }
    }
    private global::Sungero.Docflow.IApprovalRoleBase _ReworkApprovalRole;
    public virtual global::Sungero.Docflow.IApprovalRoleBase ReworkApprovalRole
    {
      get
      {
        return this._ReworkApprovalRole;
      }

      set
      {
        this.SetPropertyValue("ReworkApprovalRole", this._ReworkApprovalRole, value, (propertyValue) => { this._ReworkApprovalRole = propertyValue; }, this.ReworkApprovalRoleChangedHandler);
      }
    }


    protected global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Docflow.IApprovalRuleBaseDocumentKinds> _DocumentKinds;

    public virtual global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Docflow.IApprovalRuleBaseDocumentKinds> DocumentKinds
    {
      get
      {
        if (this._DocumentKinds == null)
        {
          this._DocumentKinds = this.CreateDocumentKindsCollection();
          this.SetDocumentKindsEventHandlers();
        }
        return this._DocumentKinds;
      }

      set
      {
        if (this._DocumentKinds != null)
          this.UnsetChildCollectionEventHandlers(this._DocumentKinds);

        this._DocumentKinds = value;
        this.SetDocumentKindsEventHandlers();
      }
    }

    protected virtual global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Docflow.IApprovalRuleBaseDocumentKinds> CreateDocumentKindsCollection()
    {
      return new global::Sungero.Domain.ChildEntityCollection<global::Sungero.Docflow.IApprovalRuleBaseDocumentKinds>() { RootEntity = this };
    }

    private void SetDocumentKindsEventHandlers()
    {
      this.SetChildCollectionEventHandlers(this._DocumentKinds, "DocumentKinds");

      var changeNotifier = (global::Sungero.Domain.Shared.INotifyChildEntityCollectionChanged)this._DocumentKinds;
      changeNotifier.Added += this.DocumentKindsAddedHandler;
      changeNotifier.Deleted += this.DocumentKindsDeletedHandler;
      changeNotifier.Added += this.DocumentKindsCollectionUpdateEventHandler;
      changeNotifier.Deleted += this.DocumentKindsCollectionUpdateEventHandler;
      changeNotifier.Updated += this.DocumentKindsCollectionUpdateEventHandler;
    }

    private void DocumentKindsCollectionUpdateEventHandler(object sender, global::Sungero.Domain.Shared.BaseChildEntityEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      if (this.IsPropertyChangedHandlerEnabled)
        this.DocumentKindsChangedHandler();
    }
    protected global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Docflow.IApprovalRuleBaseDepartments> _Departments;

    public virtual global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Docflow.IApprovalRuleBaseDepartments> Departments
    {
      get
      {
        if (this._Departments == null)
        {
          this._Departments = this.CreateDepartmentsCollection();
          this.SetDepartmentsEventHandlers();
        }
        return this._Departments;
      }

      set
      {
        if (this._Departments != null)
          this.UnsetChildCollectionEventHandlers(this._Departments);

        this._Departments = value;
        this.SetDepartmentsEventHandlers();
      }
    }

    protected virtual global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Docflow.IApprovalRuleBaseDepartments> CreateDepartmentsCollection()
    {
      return new global::Sungero.Domain.ChildEntityCollection<global::Sungero.Docflow.IApprovalRuleBaseDepartments>() { RootEntity = this };
    }

    private void SetDepartmentsEventHandlers()
    {
      this.SetChildCollectionEventHandlers(this._Departments, "Departments");

      var changeNotifier = (global::Sungero.Domain.Shared.INotifyChildEntityCollectionChanged)this._Departments;
      changeNotifier.Added += this.DepartmentsAddedHandler;
      changeNotifier.Deleted += this.DepartmentsDeletedHandler;
      changeNotifier.Added += this.DepartmentsCollectionUpdateEventHandler;
      changeNotifier.Deleted += this.DepartmentsCollectionUpdateEventHandler;
      changeNotifier.Updated += this.DepartmentsCollectionUpdateEventHandler;
    }

    private void DepartmentsCollectionUpdateEventHandler(object sender, global::Sungero.Domain.Shared.BaseChildEntityEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      if (this.IsPropertyChangedHandlerEnabled)
        this.DepartmentsChangedHandler();
    }
    protected global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Docflow.IApprovalRuleBaseStages> _Stages;

    public virtual global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Docflow.IApprovalRuleBaseStages> Stages
    {
      get
      {
        if (this._Stages == null)
        {
          this._Stages = this.CreateStagesCollection();
          this.SetStagesEventHandlers();
        }
        return this._Stages;
      }

      set
      {
        if (this._Stages != null)
          this.UnsetChildCollectionEventHandlers(this._Stages);

        this._Stages = value;
        this.SetStagesEventHandlers();
      }
    }

    protected virtual global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Docflow.IApprovalRuleBaseStages> CreateStagesCollection()
    {
      return new global::Sungero.Domain.ChildEntityCollection<global::Sungero.Docflow.IApprovalRuleBaseStages>() { RootEntity = this };
    }

    private void SetStagesEventHandlers()
    {
      this.SetChildCollectionEventHandlers(this._Stages, "Stages");

      var changeNotifier = (global::Sungero.Domain.Shared.INotifyChildEntityCollectionChanged)this._Stages;
      changeNotifier.Added += this.StagesAddedHandler;
      changeNotifier.Deleted += this.StagesDeletedHandler;
      changeNotifier.Added += this.StagesCollectionUpdateEventHandler;
      changeNotifier.Deleted += this.StagesCollectionUpdateEventHandler;
      changeNotifier.Updated += this.StagesCollectionUpdateEventHandler;
    }

    private void StagesCollectionUpdateEventHandler(object sender, global::Sungero.Domain.Shared.BaseChildEntityEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      if (this.IsPropertyChangedHandlerEnabled)
        this.StagesChangedHandler();
    }
    protected global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Docflow.IApprovalRuleBaseBusinessUnits> _BusinessUnits;

    public virtual global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Docflow.IApprovalRuleBaseBusinessUnits> BusinessUnits
    {
      get
      {
        if (this._BusinessUnits == null)
        {
          this._BusinessUnits = this.CreateBusinessUnitsCollection();
          this.SetBusinessUnitsEventHandlers();
        }
        return this._BusinessUnits;
      }

      set
      {
        if (this._BusinessUnits != null)
          this.UnsetChildCollectionEventHandlers(this._BusinessUnits);

        this._BusinessUnits = value;
        this.SetBusinessUnitsEventHandlers();
      }
    }

    protected virtual global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Docflow.IApprovalRuleBaseBusinessUnits> CreateBusinessUnitsCollection()
    {
      return new global::Sungero.Domain.ChildEntityCollection<global::Sungero.Docflow.IApprovalRuleBaseBusinessUnits>() { RootEntity = this };
    }

    private void SetBusinessUnitsEventHandlers()
    {
      this.SetChildCollectionEventHandlers(this._BusinessUnits, "BusinessUnits");

      var changeNotifier = (global::Sungero.Domain.Shared.INotifyChildEntityCollectionChanged)this._BusinessUnits;
      changeNotifier.Added += this.BusinessUnitsAddedHandler;
      changeNotifier.Deleted += this.BusinessUnitsDeletedHandler;
      changeNotifier.Added += this.BusinessUnitsCollectionUpdateEventHandler;
      changeNotifier.Deleted += this.BusinessUnitsCollectionUpdateEventHandler;
      changeNotifier.Updated += this.BusinessUnitsCollectionUpdateEventHandler;
    }

    private void BusinessUnitsCollectionUpdateEventHandler(object sender, global::Sungero.Domain.Shared.BaseChildEntityEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      if (this.IsPropertyChangedHandlerEnabled)
        this.BusinessUnitsChangedHandler();
    }
    protected global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Docflow.IApprovalRuleBaseDocumentGroups> _DocumentGroups;

    public virtual global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Docflow.IApprovalRuleBaseDocumentGroups> DocumentGroups
    {
      get
      {
        if (this._DocumentGroups == null)
        {
          this._DocumentGroups = this.CreateDocumentGroupsCollection();
          this.SetDocumentGroupsEventHandlers();
        }
        return this._DocumentGroups;
      }

      set
      {
        if (this._DocumentGroups != null)
          this.UnsetChildCollectionEventHandlers(this._DocumentGroups);

        this._DocumentGroups = value;
        this.SetDocumentGroupsEventHandlers();
      }
    }

    protected virtual global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Docflow.IApprovalRuleBaseDocumentGroups> CreateDocumentGroupsCollection()
    {
      return new global::Sungero.Domain.ChildEntityCollection<global::Sungero.Docflow.IApprovalRuleBaseDocumentGroups>() { RootEntity = this };
    }

    private void SetDocumentGroupsEventHandlers()
    {
      this.SetChildCollectionEventHandlers(this._DocumentGroups, "DocumentGroups");

      var changeNotifier = (global::Sungero.Domain.Shared.INotifyChildEntityCollectionChanged)this._DocumentGroups;
      changeNotifier.Added += this.DocumentGroupsAddedHandler;
      changeNotifier.Deleted += this.DocumentGroupsDeletedHandler;
      changeNotifier.Added += this.DocumentGroupsCollectionUpdateEventHandler;
      changeNotifier.Deleted += this.DocumentGroupsCollectionUpdateEventHandler;
      changeNotifier.Updated += this.DocumentGroupsCollectionUpdateEventHandler;
    }

    private void DocumentGroupsCollectionUpdateEventHandler(object sender, global::Sungero.Domain.Shared.BaseChildEntityEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      if (this.IsPropertyChangedHandlerEnabled)
        this.DocumentGroupsChangedHandler();
    }
    protected global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Docflow.IApprovalRuleBaseTransitions> _Transitions;

    public virtual global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Docflow.IApprovalRuleBaseTransitions> Transitions
    {
      get
      {
        if (this._Transitions == null)
        {
          this._Transitions = this.CreateTransitionsCollection();
          this.SetTransitionsEventHandlers();
        }
        return this._Transitions;
      }

      set
      {
        if (this._Transitions != null)
          this.UnsetChildCollectionEventHandlers(this._Transitions);

        this._Transitions = value;
        this.SetTransitionsEventHandlers();
      }
    }

    protected virtual global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Docflow.IApprovalRuleBaseTransitions> CreateTransitionsCollection()
    {
      return new global::Sungero.Domain.ChildEntityCollection<global::Sungero.Docflow.IApprovalRuleBaseTransitions>() { RootEntity = this };
    }

    private void SetTransitionsEventHandlers()
    {
      this.SetChildCollectionEventHandlers(this._Transitions, "Transitions");

      var changeNotifier = (global::Sungero.Domain.Shared.INotifyChildEntityCollectionChanged)this._Transitions;
      changeNotifier.Added += this.TransitionsAddedHandler;
      changeNotifier.Deleted += this.TransitionsDeletedHandler;
      changeNotifier.Added += this.TransitionsCollectionUpdateEventHandler;
      changeNotifier.Deleted += this.TransitionsCollectionUpdateEventHandler;
      changeNotifier.Updated += this.TransitionsCollectionUpdateEventHandler;
    }

    private void TransitionsCollectionUpdateEventHandler(object sender, global::Sungero.Domain.Shared.BaseChildEntityEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      if (this.IsPropertyChangedHandlerEnabled)
        this.TransitionsChangedHandler();
    }
    protected global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Docflow.IApprovalRuleBaseConditions> _Conditions;

    public virtual global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Docflow.IApprovalRuleBaseConditions> Conditions
    {
      get
      {
        if (this._Conditions == null)
        {
          this._Conditions = this.CreateConditionsCollection();
          this.SetConditionsEventHandlers();
        }
        return this._Conditions;
      }

      set
      {
        if (this._Conditions != null)
          this.UnsetChildCollectionEventHandlers(this._Conditions);

        this._Conditions = value;
        this.SetConditionsEventHandlers();
      }
    }

    protected virtual global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Docflow.IApprovalRuleBaseConditions> CreateConditionsCollection()
    {
      return new global::Sungero.Domain.ChildEntityCollection<global::Sungero.Docflow.IApprovalRuleBaseConditions>() { RootEntity = this };
    }

    private void SetConditionsEventHandlers()
    {
      this.SetChildCollectionEventHandlers(this._Conditions, "Conditions");

      var changeNotifier = (global::Sungero.Domain.Shared.INotifyChildEntityCollectionChanged)this._Conditions;
      changeNotifier.Added += this.ConditionsAddedHandler;
      changeNotifier.Deleted += this.ConditionsDeletedHandler;
      changeNotifier.Added += this.ConditionsCollectionUpdateEventHandler;
      changeNotifier.Deleted += this.ConditionsCollectionUpdateEventHandler;
      changeNotifier.Updated += this.ConditionsCollectionUpdateEventHandler;
    }

    private void ConditionsCollectionUpdateEventHandler(object sender, global::Sungero.Domain.Shared.BaseChildEntityEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      if (this.IsPropertyChangedHandlerEnabled)
        this.ConditionsChangedHandler();
    }



    protected override global::Sungero.Domain.Shared.EntityCreatingFromServerHandler CreateCreatingFromServerHandler(
      global::Sungero.Domain.Shared.IEntity entitySource)
    {
      return new global::Sungero.Docflow.ApprovalRuleBaseCreatingFromServerHandler((global::Sungero.Docflow.IApprovalRuleBase)entitySource, this.Info);
    }

    #region Framework events

    protected void NameChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.Name, this.Name, this);
     ((global::Sungero.Docflow.ApprovalRuleBaseSharedHandlers)this.SharedHandlers).NameChanged(args);
    }

    protected void DocumentKindsChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.CollectionPropertyChangedEventArgs(this);
     ((global::Sungero.Docflow.ApprovalRuleBaseSharedHandlers)this.SharedHandlers).DocumentKindsChanged(args);
    }

    protected void DepartmentsChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.CollectionPropertyChangedEventArgs(this);
     ((global::Sungero.Docflow.ApprovalRuleBaseSharedHandlers)this.SharedHandlers).DepartmentsChanged(args);
    }

    protected void StagesChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.CollectionPropertyChangedEventArgs(this);
     ((global::Sungero.Docflow.ApprovalRuleBaseSharedHandlers)this.SharedHandlers).StagesChanged(args);
    }

    protected void PriorityChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.IntegerPropertyChangedEventArgs(this.State.Properties.Priority, this.Priority, this);
     ((global::Sungero.Docflow.ApprovalRuleBaseSharedHandlers)this.SharedHandlers).PriorityChanged(args);
    }

    protected void BusinessUnitsChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.CollectionPropertyChangedEventArgs(this);
     ((global::Sungero.Docflow.ApprovalRuleBaseSharedHandlers)this.SharedHandlers).BusinessUnitsChanged(args);
    }

    protected void DocumentGroupsChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.CollectionPropertyChangedEventArgs(this);
     ((global::Sungero.Docflow.ApprovalRuleBaseSharedHandlers)this.SharedHandlers).DocumentGroupsChanged(args);
    }

    protected void DocumentFlowChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.EnumerationPropertyChangedEventArgs(this.State.Properties.DocumentFlow, this.DocumentFlow, this);
     ((global::Sungero.Docflow.ApprovalRuleBaseSharedHandlers)this.SharedHandlers).DocumentFlowChanged(args);
    }

    protected void IsDefaultRuleChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.BooleanPropertyChangedEventArgs(this.State.Properties.IsDefaultRule, this.IsDefaultRule, this);
     ((global::Sungero.Docflow.ApprovalRuleBaseSharedHandlers)this.SharedHandlers).IsDefaultRuleChanged(args);
    }

    protected void TransitionsChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.CollectionPropertyChangedEventArgs(this);
     ((global::Sungero.Docflow.ApprovalRuleBaseSharedHandlers)this.SharedHandlers).TransitionsChanged(args);
    }

    protected void ConditionsChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.CollectionPropertyChangedEventArgs(this);
     ((global::Sungero.Docflow.ApprovalRuleBaseSharedHandlers)this.SharedHandlers).ConditionsChanged(args);
    }

    protected void NoteChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.Note, this.Note, this);
     ((global::Sungero.Docflow.ApprovalRuleBaseSharedHandlers)this.SharedHandlers).NoteChanged(args);
    }

    protected void ParentRuleChangedHandler()
    {
      var args = new global::Sungero.Docflow.Shared.ApprovalRuleBaseParentRuleChangedEventArgs(this.State.Properties.ParentRule, this.ParentRule, this);
     ((global::Sungero.Docflow.ApprovalRuleBaseSharedHandlers)this.SharedHandlers).ParentRuleChanged(args);
    }

    protected void VersionNumberChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.IntegerPropertyChangedEventArgs(this.State.Properties.VersionNumber, this.VersionNumber, this);
     ((global::Sungero.Docflow.ApprovalRuleBaseSharedHandlers)this.SharedHandlers).VersionNumberChanged(args);
    }

    protected void IsSmallApprovalAllowedChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.BooleanPropertyChangedEventArgs(this.State.Properties.IsSmallApprovalAllowed, this.IsSmallApprovalAllowed, this);
     ((global::Sungero.Docflow.ApprovalRuleBaseSharedHandlers)this.SharedHandlers).IsSmallApprovalAllowedChanged(args);
    }

    protected void ReworkPerformerTypeChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.EnumerationPropertyChangedEventArgs(this.State.Properties.ReworkPerformerType, this.ReworkPerformerType, this);
     ((global::Sungero.Docflow.ApprovalRuleBaseSharedHandlers)this.SharedHandlers).ReworkPerformerTypeChanged(args);
    }

    protected void ReworkPerformerChangedHandler()
    {
      var args = new global::Sungero.Docflow.Shared.ApprovalRuleBaseReworkPerformerChangedEventArgs(this.State.Properties.ReworkPerformer, this.ReworkPerformer, this);
     ((global::Sungero.Docflow.ApprovalRuleBaseSharedHandlers)this.SharedHandlers).ReworkPerformerChanged(args);
    }

    protected void ReworkDeadlineChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.IntegerPropertyChangedEventArgs(this.State.Properties.ReworkDeadline, this.ReworkDeadline, this);
     ((global::Sungero.Docflow.ApprovalRuleBaseSharedHandlers)this.SharedHandlers).ReworkDeadlineChanged(args);
    }

    protected void ReworkApprovalRoleChangedHandler()
    {
      var args = new global::Sungero.Docflow.Shared.ApprovalRuleBaseReworkApprovalRoleChangedEventArgs(this.State.Properties.ReworkApprovalRole, this.ReworkApprovalRole, this);
     ((global::Sungero.Docflow.ApprovalRuleBaseSharedHandlers)this.SharedHandlers).ReworkApprovalRoleChanged(args);
    }



    protected virtual global::Sungero.Docflow.ApprovalRuleBaseDocumentKindsSharedCollectionHandlers CreateDocumentKindsAddedHandler(global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.Docflow.ApprovalRuleBaseDocumentKindsSharedCollectionHandlers(this, e.Value, null, e.Source);
    }

    protected virtual global::Sungero.Docflow.ApprovalRuleBaseDocumentKindsSharedCollectionHandlers CreateDocumentKindsDeletedHandler(global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.Docflow.ApprovalRuleBaseDocumentKindsSharedCollectionHandlers(this, null, e.Value, null);
    }

    protected virtual void DocumentKindsAddedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {  
      var collectionHandlers = this.CreateDocumentKindsAddedHandler(e);
      if (collectionHandlers != null)
      {
        var args = new global::Sungero.Domain.Shared.CollectionPropertyAddedEventArgs(this);
        collectionHandlers.DocumentKindsAdded(args);
      }
    }

    protected virtual void DocumentKindsDeletedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {  
      var collectionHandlers = this.CreateDocumentKindsDeletedHandler(e);
      if (collectionHandlers != null)
      {
        var args = new global::Sungero.Domain.Shared.CollectionPropertyDeletedEventArgs(this);
        collectionHandlers.DocumentKindsDeleted(args);
      }
    }


    protected virtual global::Sungero.Docflow.ApprovalRuleBaseDepartmentsSharedCollectionHandlers CreateDepartmentsAddedHandler(global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.Docflow.ApprovalRuleBaseDepartmentsSharedCollectionHandlers(this, e.Value, null, e.Source);
    }

    protected virtual global::Sungero.Docflow.ApprovalRuleBaseDepartmentsSharedCollectionHandlers CreateDepartmentsDeletedHandler(global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.Docflow.ApprovalRuleBaseDepartmentsSharedCollectionHandlers(this, null, e.Value, null);
    }

    protected virtual void DepartmentsAddedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {  
      var collectionHandlers = this.CreateDepartmentsAddedHandler(e);
      if (collectionHandlers != null)
      {
        var args = new global::Sungero.Domain.Shared.CollectionPropertyAddedEventArgs(this);
        collectionHandlers.DepartmentsAdded(args);
      }
    }

    protected virtual void DepartmentsDeletedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {  
      var collectionHandlers = this.CreateDepartmentsDeletedHandler(e);
      if (collectionHandlers != null)
      {
        var args = new global::Sungero.Domain.Shared.CollectionPropertyDeletedEventArgs(this);
        collectionHandlers.DepartmentsDeleted(args);
      }
    }


    protected virtual global::Sungero.Docflow.ApprovalRuleBaseStagesSharedCollectionHandlers CreateStagesAddedHandler(global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.Docflow.ApprovalRuleBaseStagesSharedCollectionHandlers(this, e.Value, null, e.Source);
    }

    protected virtual global::Sungero.Docflow.ApprovalRuleBaseStagesSharedCollectionHandlers CreateStagesDeletedHandler(global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.Docflow.ApprovalRuleBaseStagesSharedCollectionHandlers(this, null, e.Value, null);
    }

    protected virtual void StagesAddedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {  
      var collectionHandlers = this.CreateStagesAddedHandler(e);
      if (collectionHandlers != null)
      {
        var args = new global::Sungero.Domain.Shared.CollectionPropertyAddedEventArgs(this);
        collectionHandlers.StagesAdded(args);
      }
    }

    protected virtual void StagesDeletedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {  
      var collectionHandlers = this.CreateStagesDeletedHandler(e);
      if (collectionHandlers != null)
      {
        var args = new global::Sungero.Domain.Shared.CollectionPropertyDeletedEventArgs(this);
        collectionHandlers.StagesDeleted(args);
      }
    }


    protected virtual global::Sungero.Docflow.ApprovalRuleBaseBusinessUnitsSharedCollectionHandlers CreateBusinessUnitsAddedHandler(global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.Docflow.ApprovalRuleBaseBusinessUnitsSharedCollectionHandlers(this, e.Value, null, e.Source);
    }

    protected virtual global::Sungero.Docflow.ApprovalRuleBaseBusinessUnitsSharedCollectionHandlers CreateBusinessUnitsDeletedHandler(global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.Docflow.ApprovalRuleBaseBusinessUnitsSharedCollectionHandlers(this, null, e.Value, null);
    }

    protected virtual void BusinessUnitsAddedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {  
      var collectionHandlers = this.CreateBusinessUnitsAddedHandler(e);
      if (collectionHandlers != null)
      {
        var args = new global::Sungero.Domain.Shared.CollectionPropertyAddedEventArgs(this);
        collectionHandlers.BusinessUnitsAdded(args);
      }
    }

    protected virtual void BusinessUnitsDeletedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {  
      var collectionHandlers = this.CreateBusinessUnitsDeletedHandler(e);
      if (collectionHandlers != null)
      {
        var args = new global::Sungero.Domain.Shared.CollectionPropertyDeletedEventArgs(this);
        collectionHandlers.BusinessUnitsDeleted(args);
      }
    }


    protected virtual global::Sungero.Docflow.ApprovalRuleBaseDocumentGroupsSharedCollectionHandlers CreateDocumentGroupsAddedHandler(global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.Docflow.ApprovalRuleBaseDocumentGroupsSharedCollectionHandlers(this, e.Value, null, e.Source);
    }

    protected virtual global::Sungero.Docflow.ApprovalRuleBaseDocumentGroupsSharedCollectionHandlers CreateDocumentGroupsDeletedHandler(global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.Docflow.ApprovalRuleBaseDocumentGroupsSharedCollectionHandlers(this, null, e.Value, null);
    }

    protected virtual void DocumentGroupsAddedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {  
      var collectionHandlers = this.CreateDocumentGroupsAddedHandler(e);
      if (collectionHandlers != null)
      {
        var args = new global::Sungero.Domain.Shared.CollectionPropertyAddedEventArgs(this);
        collectionHandlers.DocumentGroupsAdded(args);
      }
    }

    protected virtual void DocumentGroupsDeletedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {  
      var collectionHandlers = this.CreateDocumentGroupsDeletedHandler(e);
      if (collectionHandlers != null)
      {
        var args = new global::Sungero.Domain.Shared.CollectionPropertyDeletedEventArgs(this);
        collectionHandlers.DocumentGroupsDeleted(args);
      }
    }


    protected virtual global::Sungero.Docflow.ApprovalRuleBaseTransitionsSharedCollectionHandlers CreateTransitionsAddedHandler(global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.Docflow.ApprovalRuleBaseTransitionsSharedCollectionHandlers(this, e.Value, null, e.Source);
    }

    protected virtual global::Sungero.Docflow.ApprovalRuleBaseTransitionsSharedCollectionHandlers CreateTransitionsDeletedHandler(global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.Docflow.ApprovalRuleBaseTransitionsSharedCollectionHandlers(this, null, e.Value, null);
    }

    protected virtual void TransitionsAddedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {  
      var collectionHandlers = this.CreateTransitionsAddedHandler(e);
      if (collectionHandlers != null)
      {
        var args = new global::Sungero.Domain.Shared.CollectionPropertyAddedEventArgs(this);
        collectionHandlers.TransitionsAdded(args);
      }
    }

    protected virtual void TransitionsDeletedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {  
      var collectionHandlers = this.CreateTransitionsDeletedHandler(e);
      if (collectionHandlers != null)
      {
        var args = new global::Sungero.Domain.Shared.CollectionPropertyDeletedEventArgs(this);
        collectionHandlers.TransitionsDeleted(args);
      }
    }


    protected virtual global::Sungero.Docflow.ApprovalRuleBaseConditionsSharedCollectionHandlers CreateConditionsAddedHandler(global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.Docflow.ApprovalRuleBaseConditionsSharedCollectionHandlers(this, e.Value, null, e.Source);
    }

    protected virtual global::Sungero.Docflow.ApprovalRuleBaseConditionsSharedCollectionHandlers CreateConditionsDeletedHandler(global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.Docflow.ApprovalRuleBaseConditionsSharedCollectionHandlers(this, null, e.Value, null);
    }

    protected virtual void ConditionsAddedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {  
      var collectionHandlers = this.CreateConditionsAddedHandler(e);
      if (collectionHandlers != null)
      {
        var args = new global::Sungero.Domain.Shared.CollectionPropertyAddedEventArgs(this);
        collectionHandlers.ConditionsAdded(args);
      }
    }

    protected virtual void ConditionsDeletedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {  
      var collectionHandlers = this.CreateConditionsDeletedHandler(e);
      if (collectionHandlers != null)
      {
        var args = new global::Sungero.Domain.Shared.CollectionPropertyDeletedEventArgs(this);
        collectionHandlers.ConditionsDeleted(args);
      }
    }


    #endregion


    public ApprovalRuleBase()
    {
    }

  }
}

// ==================================================================
// ApprovalRuleBaseHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow
{
  public partial class ApprovalRuleBaseParentRulePropertyFilteringServerHandler<T>
    : global::Sungero.Domain.EntityPropertyFilteringServerHandler
    where T : class, global::Sungero.Docflow.IApprovalRuleBase
  {
    private global::Sungero.Docflow.IApprovalRuleBase _obj
    {
      get { return (global::Sungero.Docflow.IApprovalRuleBase)this.Entity; }
    }

    public virtual global::System.Linq.IQueryable<T> ParentRuleFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertyFilteringEventArgs e)
    {
      return query;
    }

    public ApprovalRuleBaseParentRulePropertyFilteringServerHandler(global::Sungero.Docflow.IApprovalRuleBase entity)
      : base(entity)
    {
    }
  }

  public partial class ApprovalRuleBaseParentRuleSearchPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.SearchPropertyFilteringServerHandler
    where T : class, global::Sungero.Docflow.IApprovalRuleBase
  {

    public virtual global::System.Linq.IQueryable<T> ParentRuleSearchDialogFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertySearchDialogFilteringEventArgs e)
    {
      return query;
    }

    public ApprovalRuleBaseParentRuleSearchPropertyFilteringServerHandler()
      : base()
    {
    }
  }

  public partial class ApprovalRuleBaseReworkPerformerPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.EntityPropertyFilteringServerHandler
    where T : class, global::Sungero.CoreEntities.IRecipient
  {
    private global::Sungero.Docflow.IApprovalRuleBase _obj
    {
      get { return (global::Sungero.Docflow.IApprovalRuleBase)this.Entity; }
    }

    public ApprovalRuleBaseReworkPerformerPropertyFilteringServerHandler(global::Sungero.Docflow.IApprovalRuleBase entity)
      : base(entity)
    {
    }
  }

  public partial class ApprovalRuleBaseReworkPerformerSearchPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.SearchPropertyFilteringServerHandler
    where T : class, global::Sungero.CoreEntities.IRecipient
  {

    public virtual global::System.Linq.IQueryable<T> ReworkPerformerSearchDialogFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertySearchDialogFilteringEventArgs e)
    {
      return query;
    }

    public ApprovalRuleBaseReworkPerformerSearchPropertyFilteringServerHandler()
      : base()
    {
    }
  }

  public partial class ApprovalRuleBaseReworkApprovalRolePropertyFilteringServerHandler<T>
    : global::Sungero.Domain.EntityPropertyFilteringServerHandler
    where T : class, global::Sungero.Docflow.IApprovalRoleBase
  {
    private global::Sungero.Docflow.IApprovalRuleBase _obj
    {
      get { return (global::Sungero.Docflow.IApprovalRuleBase)this.Entity; }
    }

    public ApprovalRuleBaseReworkApprovalRolePropertyFilteringServerHandler(global::Sungero.Docflow.IApprovalRuleBase entity)
      : base(entity)
    {
    }
  }

  public partial class ApprovalRuleBaseReworkApprovalRoleSearchPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.SearchPropertyFilteringServerHandler
    where T : class, global::Sungero.Docflow.IApprovalRoleBase
  {

    public virtual global::System.Linq.IQueryable<T> ReworkApprovalRoleSearchDialogFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertySearchDialogFilteringEventArgs e)
    {
      return query;
    }

    public ApprovalRuleBaseReworkApprovalRoleSearchPropertyFilteringServerHandler()
      : base()
    {
    }
  }



  public partial class ApprovalRuleBaseFilteringServerHandler<T>
    : global::Sungero.Domain.EntityFilteringServerHandler<T>  
    where T : class, global::Sungero.Docflow.IApprovalRuleBase
  {
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    protected new global::Sungero.Docflow.IApprovalRuleBaseFilterState Filter { get; private set; }

    private global::Sungero.Docflow.IApprovalRuleBaseFilterState _filter
    {
      get
      {
        return this.Filter;
      }
    }

    public ApprovalRuleBaseFilteringServerHandler(global::Sungero.Docflow.IApprovalRuleBaseFilterState filter)
    : base()
    {
      this.Filter = filter;
    }

    protected ApprovalRuleBaseFilteringServerHandler()
    {
    }

    public override global::System.Linq.IQueryable<T> Filtering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.FilteringEventArgs e)
    {
      return query;
    }


  }

  public partial class ApprovalRuleBaseUiFilteringServerHandler<T>
    : global::Sungero.Domain.EntityUiFilteringServerHandler<T>
    where T : class, global::Sungero.Docflow.IApprovalRuleBase
  {
    public override global::System.Linq.IQueryable<T> Filtering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.UiFilteringEventArgs e)
    {
      query = base.Filtering(query, e);
            return query;
    }
  }

  public partial class ApprovalRuleBaseSearchDialogServerHandler : global::Sungero.CoreEntities.DatabookEntrySearchDialogServerHandler
   {
     private global::Sungero.Docflow.Server.ApprovalRuleBaseSearchDialogModel _dialog
     {
       get
       {
         return (global::Sungero.Docflow.Server.ApprovalRuleBaseSearchDialogModel)this.Dialog;
       }
     }

     public ApprovalRuleBaseSearchDialogServerHandler(global::Sungero.Docflow.Server.ApprovalRuleBaseSearchDialogModel dialog)
       : base(dialog)
     {
     }
   }

  public partial class ApprovalRuleBaseServerHandlers : global::Sungero.CoreEntities.DatabookEntryServerHandlers
  {
    private global::Sungero.Docflow.IApprovalRuleBase _obj
    {
      get { return (global::Sungero.Docflow.IApprovalRuleBase)this.Entity; }
    }

    public ApprovalRuleBaseServerHandlers(global::Sungero.Docflow.IApprovalRuleBase entity)
      : base(entity)
    {
    }
  }

  public partial class ApprovalRuleBaseCreatingFromServerHandler : global::Sungero.CoreEntities.DatabookEntryCreatingFromServerHandler
  {
    private global::Sungero.Docflow.IApprovalRuleBase _source
    {
      get { return (global::Sungero.Docflow.IApprovalRuleBase)this.Source; }
    }

    private global::Sungero.Docflow.IApprovalRuleBaseInfo _info
    {
      get { return (global::Sungero.Docflow.IApprovalRuleBaseInfo)this._Info; }
    }

    public ApprovalRuleBaseCreatingFromServerHandler(global::Sungero.Docflow.IApprovalRuleBase source, global::Sungero.Docflow.IApprovalRuleBaseInfo info)
      : base(source, info)
    {
    }
  }

}

// ==================================================================
// ApprovalRuleBaseEventArgs.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
}

// ==================================================================
// ApprovalRuleBaseAccessRights.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
  public class ApprovalRuleBaseAccessRights : 
    Sungero.CoreEntities.Server.DatabookEntryAccessRights, Sungero.Docflow.IApprovalRuleBaseAccessRights
  {

    public ApprovalRuleBaseAccessRights(global::Sungero.Domain.Shared.IEntity entity) : base(entity)
    {
    }
  }

  public class ApprovalRuleBaseTypeAccessRights : 
    Sungero.CoreEntities.Server.DatabookEntryTypeAccessRights, Sungero.Docflow.IApprovalRuleBaseAccessRights
  {

    public ApprovalRuleBaseTypeAccessRights(global::System.Type entityType) : base(entityType)
    {
    }
  }
}

// ==================================================================
// ApprovalRuleBaseRepositoryImplementer.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
    public class ApprovalRuleBaseRepositoryImplementer<T> : 
      global::Sungero.Domain.RepositoryImplementer<T>,
      global::Sungero.Docflow.IApprovalRuleBaseRepositoryImplementer<T>
      where T : global::Sungero.Docflow.IApprovalRuleBase 
    {
       public new global::Sungero.Docflow.IApprovalRuleBaseAccessRights AccessRights
       {
          get { return (global::Sungero.Docflow.IApprovalRuleBaseAccessRights)base.AccessRights; }
       }

       public new global::Sungero.Docflow.IApprovalRuleBaseInfo Info
       {
          get { return (global::Sungero.Docflow.IApprovalRuleBaseInfo)base.Info; }
       }

       protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
       {
         return new global::Sungero.Docflow.Server.ApprovalRuleBaseTypeAccessRights(typeof(T));
       }
    }
}

// ==================================================================
// ApprovalRuleBasePanelNavigationFilters.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
}

// ==================================================================
// ApprovalRuleBaseServerFunctions.g.cs
// ==================================================================

namespace Sungero.Docflow.Server
{
  public partial class ApprovalRuleBaseFunctions : global::Sungero.CoreEntities.Server.DatabookEntryFunctions
  {
    private global::Sungero.Docflow.IApprovalRuleBase _obj
    {
      get { return (global::Sungero.Docflow.IApprovalRuleBase)this.Entity; }
    }

    public ApprovalRuleBaseFunctions(global::Sungero.Docflow.IApprovalRuleBase entity) : base(entity) { }
  }
}

// ==================================================================
// ApprovalRuleBaseFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Functions
{
  internal static class ApprovalRuleBase
  {
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalRuleBaseFunctions" />
    internal static  global::Sungero.Core.StateView GetStagesStateView(global::Sungero.Workflow.IAssignment assignment)
    {
      return global::Sungero.Docflow.Server.ApprovalRuleBaseFunctions.GetStagesStateView(assignment);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalRuleBaseFunctions" />
    internal static  global::Sungero.Core.StateView GetStagesStateView(global::Sungero.Workflow.INotice assignment)
    {
      return global::Sungero.Docflow.Server.ApprovalRuleBaseFunctions.GetStagesStateView(assignment);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalRuleBaseFunctions" />
    internal static  global::Sungero.Core.StateView GetStagesStateView(global::Sungero.Docflow.IApprovalTask task, global::System.Collections.Generic.List<global::Sungero.CoreEntities.IRecipient> additionalApprovers, global::Sungero.Company.IEmployee signatory, global::Sungero.Company.IEmployee addressee, global::Sungero.Docflow.IMailDeliveryMethod deliveryMethod, global::Sungero.ExchangeCore.IExchangeService exchangeService)
    {
      return global::Sungero.Docflow.Server.ApprovalRuleBaseFunctions.GetStagesStateView(task, additionalApprovers, signatory, addressee, deliveryMethod, exchangeService);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalRuleBaseFunctions" />
    internal static  global::Sungero.Core.StateView GetStagesStateView(global::Sungero.Docflow.IApprovalTask task, global::System.Collections.Generic.List<global::Sungero.CoreEntities.IRecipient> additionalApprovers, global::Sungero.Company.IEmployee signatory, global::Sungero.Company.IEmployee addressee, global::Sungero.Docflow.IMailDeliveryMethod deliveryMethod, global::Sungero.ExchangeCore.IExchangeService exchangeService, global::System.Boolean withApprovalRule)
    {
      return global::Sungero.Docflow.Server.ApprovalRuleBaseFunctions.GetStagesStateView(task, additionalApprovers, signatory, addressee, deliveryMethod, exchangeService, withApprovalRule);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalRuleBaseFunctions" />
    internal static  void SetIcon(global::System.Nullable<global::Sungero.Core.Enumeration> stageType, Sungero.Core.StateBlock block)
    {
    global::Sungero.Docflow.Server.ApprovalRuleBaseFunctions.SetIcon(stageType, block);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalRuleBaseFunctions" />
    internal static  global::System.String GetBlockHeader(global::Sungero.Docflow.IApprovalStage stage)
    {
      return global::Sungero.Docflow.Server.ApprovalRuleBaseFunctions.GetBlockHeader(stage);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalRuleBaseFunctions" />
    internal static  global::Sungero.Docflow.Structures.ApprovalRuleBase.StageStatusInfo GetStatusInfo(global::Sungero.Docflow.IApprovalTask task, global::Sungero.Docflow.Structures.Module.DefinedApprovalStageLite ruleStage, global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.Module.DefinedApprovalStageLite> stages)
    {
      return global::Sungero.Docflow.Server.ApprovalRuleBaseFunctions.GetStatusInfo(task, ruleStage, stages);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalRuleBaseFunctions" />
    internal static  global::Sungero.Docflow.Structures.ApprovalRuleBase.BlockPerformers GetBlockPerformers(global::Sungero.Docflow.IApprovalTask task, global::Sungero.Docflow.IApprovalStage stage, global::Sungero.Company.IEmployee signatory, global::Sungero.Company.IEmployee addressee, global::System.Collections.Generic.List<global::Sungero.CoreEntities.IRecipient> additionalApprovers)
    {
      return global::Sungero.Docflow.Server.ApprovalRuleBaseFunctions.GetBlockPerformers(task, stage, signatory, addressee, additionalApprovers);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalRuleBaseFunctions" />
    internal static  global::System.String FormatStageSubject(global::Sungero.Docflow.IApprovalStage stage, global::Sungero.Content.IElectronicDocument document)
    {
      return global::Sungero.Docflow.Server.ApprovalRuleBaseFunctions.FormatStageSubject(stage, document);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalRuleBaseFunctions" />
    internal static  global::Sungero.Docflow.Structures.ApprovalRuleBase.StagesVariants GetAllStagesVariants(global::Sungero.Docflow.IApprovalRuleBase approvalRuleBase)
    {
      var functions = (global::Sungero.Docflow.Server.ApprovalRuleBaseFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)approvalRuleBase).FunctionsContainer.ServerFunctions;
      return functions.GetAllStagesVariants();
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalRuleBaseFunctions" />
    internal static  global::System.Boolean CheckRoutePossibility(global::Sungero.Docflow.IApprovalRuleBase approvalRuleBase, global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.ApprovalRuleBase.RouteStep> route, global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.ApprovalRuleBase.ConditionRouteStep> ruleConditions, global::Sungero.Docflow.Structures.ApprovalRuleBase.RouteStep conditionStep)
    {
      var functions = (global::Sungero.Docflow.Server.ApprovalRuleBaseFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)approvalRuleBase).FunctionsContainer.ServerFunctions;
      return functions.CheckRoutePossibility(route, ruleConditions, conditionStep);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalRuleBaseFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static  global::System.Int32 CanRegisterAndHasTaskInProcess(global::Sungero.Docflow.IApprovalRuleBase rule)
    {
      return global::Sungero.Docflow.Server.ApprovalRuleBaseFunctions.CanRegisterAndHasTaskInProcess(rule);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalRuleBaseFunctions" />
    internal static  global::System.Boolean ClerkCanRegisterAllDocumentKinds(global::Sungero.Docflow.IApprovalRuleBase rule)
    {
      return global::Sungero.Docflow.Server.ApprovalRuleBaseFunctions.ClerkCanRegisterAllDocumentKinds(rule);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalRuleBaseFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static  global::System.Collections.Generic.List<global::Sungero.Docflow.IApprovalRuleBase> GetDoubleRules(global::Sungero.Docflow.IApprovalRuleBase approvalRuleBase)
    {
      var functions = (global::Sungero.Docflow.Server.ApprovalRuleBaseFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)approvalRuleBase).FunctionsContainer.ServerFunctions;
      return functions.GetDoubleRules();
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalRuleBaseFunctions" />
    internal static  global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.ApprovalRuleBase.StagesIncorrectRoles> CheckImpossibleRoles(global::Sungero.Docflow.IApprovalRuleBase approvalRuleBase, global::System.Collections.Generic.List<global::System.Int32> route, global::System.Boolean showErrors, global::System.Collections.Generic.List<global::System.Nullable<global::Sungero.Core.Enumeration>> verifiedRoles)
    {
      var functions = (global::Sungero.Docflow.Server.ApprovalRuleBaseFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)approvalRuleBase).FunctionsContainer.ServerFunctions;
      return functions.CheckImpossibleRoles(route, showErrors, verifiedRoles);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalRuleBaseFunctions" />
    internal static  void AddConditionToRule(global::Sungero.Docflow.IApprovalRuleBase rule, global::Sungero.Docflow.IConditionBase condition, global::System.Int32 stageNumberBeforeCondition, global::System.Int32 targetStageTrueCase, global::System.Int32 targetStageFalseCase)
    {
    global::Sungero.Docflow.Server.ApprovalRuleBaseFunctions.AddConditionToRule(rule, condition, stageNumberBeforeCondition, targetStageTrueCase, targetStageFalseCase);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalRuleBaseFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static  global::System.Linq.IQueryable<global::Sungero.Docflow.IApprovalTask> GetTasksInProcess(global::Sungero.Docflow.IApprovalRuleBase approvalRuleBase)
    {
      var functions = (global::Sungero.Docflow.Server.ApprovalRuleBaseFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)approvalRuleBase).FunctionsContainer.ServerFunctions;
      return functions.GetTasksInProcess();
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalRuleBaseFunctions" />
    internal static  global::System.Boolean HasTasksInProcess(global::Sungero.Docflow.IApprovalRuleBase approvalRuleBase)
    {
      var functions = (global::Sungero.Docflow.Server.ApprovalRuleBaseFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)approvalRuleBase).FunctionsContainer.ServerFunctions;
      return functions.HasTasksInProcess();
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalRuleBaseFunctions" />
    internal static  global::System.Int32 GetForReapprovingAssignmentResultId(global::System.Int32 taskId)
    {
      return global::Sungero.Docflow.Server.ApprovalRuleBaseFunctions.GetForReapprovingAssignmentResultId(taskId);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalRuleBaseFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static  global::Sungero.Docflow.IApprovalRuleBase GetOrCreateNextVersion(global::Sungero.Docflow.IApprovalRuleBase approvalRuleBase)
    {
      var functions = (global::Sungero.Docflow.Server.ApprovalRuleBaseFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)approvalRuleBase).FunctionsContainer.ServerFunctions;
      return functions.GetOrCreateNextVersion();
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalRuleBaseFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static  global::System.Linq.IQueryable<global::Sungero.Docflow.IApprovalRuleBase> GetAvailableRulesByDocument(global::Sungero.Docflow.IOfficialDocument document)
    {
      return global::Sungero.Docflow.Server.ApprovalRuleBaseFunctions.GetAvailableRulesByDocument(document);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalRuleBaseFunctions" />
    internal static  global::System.Linq.IQueryable<global::Sungero.Docflow.IApprovalRuleBase> GetAvailableRulesByParams(global::System.Nullable<global::Sungero.Core.Enumeration> documentFlow, global::Sungero.Company.IBusinessUnit businessUnit, global::Sungero.Docflow.IDocumentKind documentKind, global::Sungero.Company.IDepartment department, global::Sungero.Docflow.IDocumentGroupBase documentGroup)
    {
      return global::Sungero.Docflow.Server.ApprovalRuleBaseFunctions.GetAvailableRulesByParams(documentFlow, businessUnit, documentKind, department, documentGroup);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalRuleBaseFunctions" />
    internal static  global::System.Linq.IQueryable<global::Sungero.Docflow.IApprovalRuleBase> GetApprovalRulesByDocumentKind(global::Sungero.Docflow.IDocumentKind documentKind)
    {
      return global::Sungero.Docflow.Server.ApprovalRuleBaseFunctions.GetApprovalRulesByDocumentKind(documentKind);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalRuleBaseFunctions" />
    internal static  global::System.Linq.IQueryable<global::Sungero.Docflow.IApprovalRuleBase> GetRulesByParamsIds(global::System.Collections.Generic.List<global::Sungero.Docflow.IApprovalRuleBase> activeRules, global::System.Nullable<global::Sungero.Core.Enumeration> documentFlow, global::System.Int32 businessUnitId, global::System.Int32 documentKindId, global::System.Int32 departmentId, global::System.Int32 documentGroupId)
    {
      return global::Sungero.Docflow.Server.ApprovalRuleBaseFunctions.GetRulesByParamsIds(activeRules, documentFlow, businessUnitId, documentKindId, departmentId, documentGroupId);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalRuleBaseFunctions" />
    internal static  global::Sungero.Docflow.IApprovalRuleBase GetRuleByParamsIds(global::System.Collections.Generic.List<global::Sungero.Docflow.IApprovalRuleBase> activeRules, global::System.Nullable<global::Sungero.Core.Enumeration> documentFlow, global::System.Int32 businessUnitId, global::System.Int32 documentKindId, global::System.Int32 departmentId, global::System.Int32 documentGroupId)
    {
      return global::Sungero.Docflow.Server.ApprovalRuleBaseFunctions.GetRuleByParamsIds(activeRules, documentFlow, businessUnitId, documentKindId, departmentId, documentGroupId);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalRuleBaseFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static  global::Sungero.Company.IEmployee GetEmployeeByAssignee(global::Sungero.CoreEntities.IRecipient assignee)
    {
      return global::Sungero.Docflow.Server.ApprovalRuleBaseFunctions.GetEmployeeByAssignee(assignee);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalRuleBaseFunctions" />
    internal static  global::System.String GetApproversByRule(global::Sungero.Docflow.IApprovalRuleBase rule, global::System.Collections.Generic.List<global::System.Int32> transitions)
    {
      return global::Sungero.Docflow.Server.ApprovalRuleBaseFunctions.GetApproversByRule(rule, transitions);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalRuleBaseFunctions" />
    internal static  global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.SignatureSetting.SignatoriesList> GetSignatoriesByRule(global::Sungero.Docflow.IApprovalRuleBase rule, global::System.Collections.Generic.List<global::System.Int32> transitions, global::Sungero.Company.IBusinessUnit businessUnit, global::Sungero.Docflow.IDocumentKind kind, global::System.Nullable<global::System.Double> minAmount, global::System.Collections.Generic.List<global::Sungero.Company.IDepartment> departments)
    {
      return global::Sungero.Docflow.Server.ApprovalRuleBaseFunctions.GetSignatoriesByRule(rule, transitions, businessUnit, kind, minAmount, departments);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalRuleBaseFunctions" />
    internal static  global::System.Linq.IQueryable<global::Sungero.Docflow.ISignatureSetting> GetSignatureSetting(global::Sungero.Docflow.IApprovalRuleBase approvalRuleBase, global::Sungero.Company.IBusinessUnit businessUnit, global::Sungero.Docflow.IDocumentKind kind, global::System.Nullable<global::System.Double> minAmount, global::System.Collections.Generic.List<global::Sungero.Company.IDepartment> departments)
    {
      var functions = (global::Sungero.Docflow.Server.ApprovalRuleBaseFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)approvalRuleBase).FunctionsContainer.ServerFunctions;
      return functions.GetSignatureSetting(businessUnit, kind, minAmount, departments);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalRuleBaseFunctions" />
    internal static  global::System.Linq.IQueryable<global::Sungero.Docflow.ISignatureSetting> GetSignatureSettingWithoutDocumentFlowFilter(global::Sungero.Docflow.IApprovalRuleBase approvalRuleBase, global::Sungero.Company.IBusinessUnit businessUnit, global::Sungero.Docflow.IDocumentKind kind, global::System.Nullable<global::System.Double> minAmount, global::System.Collections.Generic.List<global::Sungero.Company.IDepartment> departments)
    {
      var functions = (global::Sungero.Docflow.Server.ApprovalRuleBaseFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)approvalRuleBase).FunctionsContainer.ServerFunctions;
      return functions.GetSignatureSettingWithoutDocumentFlowFilter(businessUnit, kind, minAmount, departments);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalRuleBaseFunctions" />
    internal static  global::System.Boolean IsVersionUnique(global::Sungero.Docflow.IApprovalRuleBase approvalRuleBase)
    {
      var functions = (global::Sungero.Docflow.Server.ApprovalRuleBaseFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)approvalRuleBase).FunctionsContainer.ServerFunctions;
      return functions.IsVersionUnique();
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalRuleBaseFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static  global::System.Linq.IQueryable<global::Sungero.Docflow.IApprovalStage> ChartSelectStage(global::System.Nullable<global::Sungero.Core.Enumeration> stageType)
    {
      return global::Sungero.Docflow.Server.ApprovalRuleBaseFunctions.ChartSelectStage(stageType);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalRuleBaseFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static  global::System.Collections.Generic.List<global::Sungero.Docflow.IApprovalRuleBase> GetAllRuleVersions(global::Sungero.Docflow.IApprovalRuleBase rule)
    {
      return global::Sungero.Docflow.Server.ApprovalRuleBaseFunctions.GetAllRuleVersions(rule);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalRuleBaseFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static  global::Sungero.Docflow.IApprovalRuleBase GetPreviousActiveRule(global::Sungero.Docflow.IApprovalRuleBase rule)
    {
      return global::Sungero.Docflow.Server.ApprovalRuleBaseFunctions.GetPreviousActiveRule(rule);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalRuleBaseFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static  global::Sungero.Docflow.IApprovalRuleBase GetNextVersion(global::Sungero.Docflow.IApprovalRuleBase approvalRuleBase)
    {
      var functions = (global::Sungero.Docflow.Server.ApprovalRuleBaseFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)approvalRuleBase).FunctionsContainer.ServerFunctions;
      return functions.GetNextVersion();
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalRuleBaseFunctions" />
    [global::Sungero.Core.RemoteAttribute(PackResultEntityEagerly = true, IsPure = true)]
    internal static  global::Sungero.Docflow.Structures.Module.DefinedApprovalStages GetStages(global::Sungero.Docflow.IApprovalRuleBase approvalRuleBase, global::Sungero.Docflow.IOfficialDocument document, global::Sungero.Docflow.IApprovalTask task)
    {
      var functions = (global::Sungero.Docflow.Server.ApprovalRuleBaseFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)approvalRuleBase).FunctionsContainer.ServerFunctions;
      return functions.GetStages(document, task);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalRuleBaseFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static  global::Sungero.Docflow.Structures.Module.DefinedApprovalStageLite GetNextStage(global::Sungero.Docflow.IApprovalRuleBase approvalRuleBase, global::Sungero.Docflow.IOfficialDocument document, global::Sungero.Docflow.Structures.Module.DefinedApprovalStageLite currentStage, global::Sungero.Docflow.IApprovalTask task)
    {
      var functions = (global::Sungero.Docflow.Server.ApprovalRuleBaseFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)approvalRuleBase).FunctionsContainer.ServerFunctions;
      return functions.GetNextStage(document, currentStage, task);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalRuleBaseFunctions" />
    internal static  void CheckRuleStages(global::Sungero.Docflow.IApprovalRuleBase approvalRuleBase, global::Sungero.Docflow.Structures.ApprovalRuleBase.StagesVariants stagesVariants, Sungero.Domain.BeforeSaveEventArgs e)
    {
      var functions = (global::Sungero.Docflow.Server.ApprovalRuleBaseFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)approvalRuleBase).FunctionsContainer.ServerFunctions;
    functions.CheckRuleStages(stagesVariants, e);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalRuleBaseFunctions" />
    internal static  global::System.Collections.Generic.List<global::Sungero.Docflow.IApprovalRoleBase> GetSupportedApprovalRolesForRework(global::Sungero.Docflow.IApprovalRuleBase approvalRuleBase)
    {
      var functions = (global::Sungero.Docflow.Server.ApprovalRuleBaseFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)approvalRuleBase).FunctionsContainer.ServerFunctions;
      return functions.GetSupportedApprovalRolesForRework();
    }

    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ApprovalRuleBaseFunctions" />
    internal static  global::System.Int32 GetNextNumber(global::Sungero.Docflow.IApprovalRuleBase approvalRuleBase)
    {
      var functions = (global::Sungero.Docflow.Shared.ApprovalRuleBaseFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)approvalRuleBase).FunctionsContainer.SharedFunctions;
      return functions.GetNextNumber();
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ApprovalRuleBaseFunctions" />
    internal static  global::System.Collections.Generic.List<global::Sungero.Docflow.IApprovalRuleBaseConditions> GetConditions(global::Sungero.Docflow.IApprovalRuleBase approvalRuleBase, global::Sungero.Docflow.IOfficialDocument document, global::Sungero.Docflow.IApprovalTask task)
    {
      var functions = (global::Sungero.Docflow.Shared.ApprovalRuleBaseFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)approvalRuleBase).FunctionsContainer.SharedFunctions;
      return functions.GetConditions(document, task);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ApprovalRuleBaseFunctions" />
    internal static  global::Sungero.Docflow.Structures.ApprovalRuleBase.NextStageNumber GetNextStageNumber(global::Sungero.Docflow.IApprovalRuleBase approvalRuleBase, global::Sungero.Docflow.IOfficialDocument document, global::System.Nullable<global::System.Int32> currentStageNumber, global::Sungero.Docflow.IApprovalTask task)
    {
      var functions = (global::Sungero.Docflow.Shared.ApprovalRuleBaseFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)approvalRuleBase).FunctionsContainer.SharedFunctions;
      return functions.GetNextStageNumber(document, currentStageNumber, task);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ApprovalRuleBaseFunctions" />
    internal static  global::System.String GetIncompatibleDocumentGroupsExcludedHint(global::Sungero.Docflow.IApprovalRuleBase approvalRuleBase)
    {
      var functions = (global::Sungero.Docflow.Shared.ApprovalRuleBaseFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)approvalRuleBase).FunctionsContainer.SharedFunctions;
      return functions.GetIncompatibleDocumentGroupsExcludedHint();
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ApprovalRuleBaseFunctions" />
    internal static  global::System.Collections.Generic.List<global::Sungero.Docflow.IDocumentGroupBase> GetAvailableDocumentGroups(global::Sungero.Docflow.IApprovalRuleBase approvalRuleBase)
    {
      var functions = (global::Sungero.Docflow.Shared.ApprovalRuleBaseFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)approvalRuleBase).FunctionsContainer.SharedFunctions;
      return functions.GetAvailableDocumentGroups();
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ApprovalRuleBaseFunctions" />
    internal static  global::System.Boolean HasApprovalStage(global::Sungero.Docflow.IApprovalRuleBase approvalRuleBase, global::Sungero.Core.Enumeration stage, global::Sungero.Docflow.IOfficialDocument document, global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.Module.DefinedApprovalStageLite> stages)
    {
      var functions = (global::Sungero.Docflow.Shared.ApprovalRuleBaseFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)approvalRuleBase).FunctionsContainer.SharedFunctions;
      return functions.HasApprovalStage(stage, document, stages);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ApprovalRuleBaseFunctions" />
    internal static  global::System.Boolean HasApprovalCondition(global::Sungero.Docflow.IApprovalRuleBase approvalRuleBase, global::Sungero.Docflow.IOfficialDocument document, global::Sungero.Docflow.IApprovalTask task, global::Sungero.Core.Enumeration condition)
    {
      var functions = (global::Sungero.Docflow.Shared.ApprovalRuleBaseFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)approvalRuleBase).FunctionsContainer.SharedFunctions;
      return functions.HasApprovalCondition(document, task, condition);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ApprovalRuleBaseFunctions" />
    internal static  void CreateAutoTransitions(global::Sungero.Docflow.IApprovalRuleBase rule)
    {
    global::Sungero.Docflow.Shared.ApprovalRuleBaseFunctions.CreateAutoTransitions(rule);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ApprovalRuleBaseFunctions" />
    internal static  void AddDocumentKindToCondition(global::Sungero.Docflow.IApprovalRuleBase approvalRuleBase, global::Sungero.Docflow.IConditionBase condition)
    {
      var functions = (global::Sungero.Docflow.Shared.ApprovalRuleBaseFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)approvalRuleBase).FunctionsContainer.SharedFunctions;
    functions.AddDocumentKindToCondition(condition);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ApprovalRuleBaseFunctions" />
    internal static  global::System.Collections.Generic.List<global::Sungero.Docflow.IDocumentKind> GetAvaliableDocumentKinds(global::Sungero.Docflow.IApprovalRuleBase approvalRuleBase)
    {
      var functions = (global::Sungero.Docflow.Shared.ApprovalRuleBaseFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)approvalRuleBase).FunctionsContainer.SharedFunctions;
      return functions.GetAvaliableDocumentKinds();
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ApprovalRuleBaseFunctions" />
    internal static  void SetStateProperties(global::Sungero.Docflow.IApprovalRuleBase approvalRuleBase)
    {
      var functions = (global::Sungero.Docflow.Shared.ApprovalRuleBaseFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)approvalRuleBase).FunctionsContainer.SharedFunctions;
    functions.SetStateProperties();
    }

  }
}

// ==================================================================
// ApprovalRuleBaseServerPublicFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
  public class ApprovalRuleBaseServerPublicFunctions : global::Sungero.Docflow.Server.IApprovalRuleBaseServerPublicFunctions
  {
    public global::System.String FormatStageSubject(global::Sungero.Docflow.IApprovalStage stage, global::Sungero.Content.IElectronicDocument document)
    {
      return global::Sungero.Docflow.Functions.ApprovalRuleBase.FormatStageSubject(stage, document);
    }
    public global::System.Linq.IQueryable<global::Sungero.Docflow.IApprovalRuleBase> GetApprovalRulesByDocumentKind(global::Sungero.Docflow.IDocumentKind documentKind)
    {
      return global::Sungero.Docflow.Functions.ApprovalRuleBase.GetApprovalRulesByDocumentKind(documentKind);
    }
    public global::System.String GetApproversByRule(global::Sungero.Docflow.IApprovalRuleBase rule, global::System.Collections.Generic.List<global::System.Int32> transitions)
    {
      return global::Sungero.Docflow.Functions.ApprovalRuleBase.GetApproversByRule(rule, transitions);
    }
    public global::System.Linq.IQueryable<global::Sungero.Docflow.IApprovalRuleBase> GetAvailableRulesByParams(global::System.Nullable<global::Sungero.Core.Enumeration> documentFlow, global::Sungero.Company.IBusinessUnit businessUnit, global::Sungero.Docflow.IDocumentKind documentKind, global::Sungero.Company.IDepartment department, global::Sungero.Docflow.IDocumentGroupBase documentGroup)
    {
      return global::Sungero.Docflow.Functions.ApprovalRuleBase.GetAvailableRulesByParams(documentFlow, businessUnit, documentKind, department, documentGroup);
    }
    public global::Sungero.Docflow.IApprovalRuleBase GetRuleByParamsIds(global::System.Collections.Generic.List<global::Sungero.Docflow.IApprovalRuleBase> activeRules, global::System.Nullable<global::Sungero.Core.Enumeration> documentFlow, global::System.Int32 businessUnitId, global::System.Int32 documentKindId, global::System.Int32 departmentId, global::System.Int32 documentGroupId)
    {
      return global::Sungero.Docflow.Functions.ApprovalRuleBase.GetRuleByParamsIds(activeRules, documentFlow, businessUnitId, documentKindId, departmentId, documentGroupId);
    }
    public global::System.Linq.IQueryable<global::Sungero.Docflow.IApprovalRuleBase> GetRulesByParamsIds(global::System.Collections.Generic.List<global::Sungero.Docflow.IApprovalRuleBase> activeRules, global::System.Nullable<global::Sungero.Core.Enumeration> documentFlow, global::System.Int32 businessUnitId, global::System.Int32 documentKindId, global::System.Int32 departmentId, global::System.Int32 documentGroupId)
    {
      return global::Sungero.Docflow.Functions.ApprovalRuleBase.GetRulesByParamsIds(activeRules, documentFlow, businessUnitId, documentKindId, departmentId, documentGroupId);
    }
    public global::System.Linq.IQueryable<global::Sungero.Docflow.ISignatureSetting> GetSignatureSetting(global::Sungero.Docflow.IApprovalRuleBase approvalRuleBase, global::Sungero.Company.IBusinessUnit businessUnit, global::Sungero.Docflow.IDocumentKind kind, global::System.Nullable<global::System.Double> minAmount, global::System.Collections.Generic.List<global::Sungero.Company.IDepartment> departments)
    {
      return global::Sungero.Docflow.Functions.ApprovalRuleBase.GetSignatureSetting(approvalRuleBase, businessUnit, kind, minAmount, departments);
    }
    public global::Sungero.Core.StateView GetStagesStateView(global::Sungero.Workflow.IAssignment assignment)
    {
      return global::Sungero.Docflow.Functions.ApprovalRuleBase.GetStagesStateView(assignment);
    }
    public global::Sungero.Core.StateView GetStagesStateView(global::Sungero.Workflow.INotice assignment)
    {
      return global::Sungero.Docflow.Functions.ApprovalRuleBase.GetStagesStateView(assignment);
    }
    public global::Sungero.Core.StateView GetStagesStateView(global::Sungero.Docflow.IApprovalTask task, global::System.Collections.Generic.List<global::Sungero.CoreEntities.IRecipient> additionalApprovers, global::Sungero.Company.IEmployee signatory, global::Sungero.Company.IEmployee addressee, global::Sungero.Docflow.IMailDeliveryMethod deliveryMethod, global::Sungero.ExchangeCore.IExchangeService exchangeService)
    {
      return global::Sungero.Docflow.Functions.ApprovalRuleBase.GetStagesStateView(task, additionalApprovers, signatory, addressee, deliveryMethod, exchangeService);
    }
    public global::Sungero.Core.StateView GetStagesStateView(global::Sungero.Docflow.IApprovalTask task, global::System.Collections.Generic.List<global::Sungero.CoreEntities.IRecipient> additionalApprovers, global::Sungero.Company.IEmployee signatory, global::Sungero.Company.IEmployee addressee, global::Sungero.Docflow.IMailDeliveryMethod deliveryMethod, global::Sungero.ExchangeCore.IExchangeService exchangeService, global::System.Boolean withApprovalRule)
    {
      return global::Sungero.Docflow.Functions.ApprovalRuleBase.GetStagesStateView(task, additionalApprovers, signatory, addressee, deliveryMethod, exchangeService, withApprovalRule);
    }
  }
}

// ==================================================================
// ApprovalRuleBaseQueries.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Queries
{
  public class ApprovalRuleBase
  {
    private static global::Sungero.Domain.SqlQueryResolver resolver = new global::Sungero.Domain.SqlQueryResolver("Sungero.Docflow.Server.ApprovalRuleBase.ApprovalRuleBaseQueries.xml", System.Reflection.Assembly.GetExecutingAssembly());
    public static string HasTaskInProcess
    {
       get { return resolver.GetQuery("HasTaskInProcess"); }
    }
    public static string GetForReapprovingAssignmentResultId
    {
       get { return resolver.GetQuery("GetForReapprovingAssignmentResultId"); }
    }
  }
}
