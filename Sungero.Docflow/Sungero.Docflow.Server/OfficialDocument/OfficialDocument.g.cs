
// ==================================================================
// OfficialDocument.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
    public class OfficialDocumentFilter<T> :
      global::Sungero.Content.Server.ElectronicDocumentFilter<T>
      where T : class, global::Sungero.Docflow.IOfficialDocument
    {
      protected new global::Sungero.Docflow.IOfficialDocumentFilterState Filter { get; private set; }

      private global::Sungero.Docflow.IOfficialDocumentFilterState filter
      {
        get
        {
          return this.Filter;
        }
      }

      protected override global::System.Linq.IQueryable<T> ApplyAppliedFilter(global::System.Linq.IQueryable<T> query)
      {
        return base.ApplyAppliedFilter(query);
      }

      public OfficialDocumentFilter(global::Sungero.Docflow.IOfficialDocumentFilterState filter)
      : base()
      {
        this.Filter = filter;
      }

      protected OfficialDocumentFilter()
      {
      }
    }
    public class OfficialDocumentSearchDialogModel : global::Sungero.Content.Server.ElectronicDocumentSearchDialogModel
        {
                  public override global::System.Int32? Id { get; protected set; }
                  public override global::System.String Name { get; protected set; }


                  public override global::System.Collections.Generic.IEnumerable<Sungero.Content.IAssociatedApplication> AssociatedApplication { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<Sungero.CoreEntities.IRecipient> Author { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<CommonLibrary.DateRangeValue> Created { get; protected set; }


                  public virtual global::System.String Subject { get; protected set; }


                  public virtual global::System.Collections.Generic.IEnumerable<Sungero.Docflow.IDocumentKind> DocumentKind { get; protected set; }
                  public virtual global::System.Collections.Generic.IEnumerable<Sungero.Company.IBusinessUnit> BusinessUnit { get; protected set; }
                  public virtual global::System.Collections.Generic.IEnumerable<Sungero.CoreEntities.IRecipient> OurSignatory { get; protected set; }
                  public virtual global::System.Collections.Generic.IEnumerable<Sungero.Company.IDepartment> Department { get; protected set; }
                  public virtual global::System.Collections.Generic.IEnumerable<Sungero.Core.Enumeration> VerificationState { get; protected set; }


                   public new OfficialDocumentVersionsModel Versions { get { return (OfficialDocumentVersionsModel)base.Versions; } protected set { base.Versions = value; } }
                   [Sungero.Domain.Shared.HideInDevStudio()]
                   public OfficialDocumentTrackingModel Tracking { get; protected set; }

        }

      public class OfficialDocumentVersionsModel : global::Sungero.Content.Server.ElectronicDocumentVersionsModel
          {
                      [Sungero.Domain.Shared.HideInDevStudio()]
                      public override global::System.Int32? Id { get; protected set; }
                      public override global::System.String Body { get; protected set; }




         }


      public class OfficialDocumentTrackingModel : global::Sungero.Domain.CollectionPropertySearchDialogModel
          {
            public override global::System.Int32? Id { get; protected set; }


         }



  public class OfficialDocumentFilterForDocumentRegister<TQueryEntity, TSourceEntity>
    : global::Sungero.Domain.EntityPropertyFilterBase<TQueryEntity, TSourceEntity>
    where TQueryEntity : class, global::Sungero.Docflow.IDocumentRegister
    where TSourceEntity : class, global::Sungero.Docflow.IOfficialDocument
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, TSourceEntity sourceEntity)
    {
      var args = new global::Sungero.Domain.PropertyFilteringEventArgs(sourceEntity);
      var result = new global::Sungero.Docflow.OfficialDocumentDocumentRegisterPropertyFilteringServerHandler<TQueryEntity>(sourceEntity).DocumentRegisterFiltering(query, args);
      if (args.DisableUiFiltering)
        global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public OfficialDocumentFilterForDocumentRegister(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class OfficialDocumentSearchFilterForDocumentRegister<TQueryEntity>
    : global::Sungero.Domain.SearchDialogPropertyFilter<TQueryEntity>
    where TQueryEntity : class, global::Sungero.Docflow.IDocumentRegister
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, System.Guid entityType)
    {
      var args = new global::Sungero.Domain.PropertySearchDialogFilteringEventArgs(entityType);
      var result = new global::Sungero.Docflow.OfficialDocumentDocumentRegisterSearchPropertyFilteringServerHandler<TQueryEntity>().DocumentRegisterSearchDialogFiltering(query, args);
      if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public OfficialDocumentSearchFilterForDocumentRegister(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class OfficialDocumentFilterForDeliveryMethod<TQueryEntity, TSourceEntity>
    : global::Sungero.Domain.EntityPropertyFilterBase<TQueryEntity, TSourceEntity>
    where TQueryEntity : class, global::Sungero.Docflow.IMailDeliveryMethod
    where TSourceEntity : class, global::Sungero.Docflow.IOfficialDocument
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, TSourceEntity sourceEntity)
    {
      var args = new global::Sungero.Domain.PropertyFilteringEventArgs(sourceEntity);
      var result = new global::Sungero.Docflow.OfficialDocumentDeliveryMethodPropertyFilteringServerHandler<TQueryEntity>(sourceEntity).DeliveryMethodFiltering(query, args);
      if (args.DisableUiFiltering)
        global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public OfficialDocumentFilterForDeliveryMethod(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class OfficialDocumentSearchFilterForDeliveryMethod<TQueryEntity>
    : global::Sungero.Domain.SearchDialogPropertyFilter<TQueryEntity>
    where TQueryEntity : class, global::Sungero.Docflow.IMailDeliveryMethod
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, System.Guid entityType)
    {
      var args = new global::Sungero.Domain.PropertySearchDialogFilteringEventArgs(entityType);
      var result = new global::Sungero.Docflow.OfficialDocumentDeliveryMethodSearchPropertyFilteringServerHandler<TQueryEntity>().DeliveryMethodSearchDialogFiltering(query, args);
      if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public OfficialDocumentSearchFilterForDeliveryMethod(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class OfficialDocumentFilterForCaseFile<TQueryEntity, TSourceEntity>
    : global::Sungero.Domain.EntityPropertyFilterBase<TQueryEntity, TSourceEntity>
    where TQueryEntity : class, global::Sungero.Docflow.ICaseFile
    where TSourceEntity : class, global::Sungero.Docflow.IOfficialDocument
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, TSourceEntity sourceEntity)
    {
      var args = new global::Sungero.Domain.PropertyFilteringEventArgs(sourceEntity);
      var result = new global::Sungero.Docflow.OfficialDocumentCaseFilePropertyFilteringServerHandler<TQueryEntity>(sourceEntity).CaseFileFiltering(query, args);
      if (args.DisableUiFiltering)
        global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public OfficialDocumentFilterForCaseFile(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class OfficialDocumentSearchFilterForCaseFile<TQueryEntity>
    : global::Sungero.Domain.SearchDialogPropertyFilter<TQueryEntity>
    where TQueryEntity : class, global::Sungero.Docflow.ICaseFile
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, System.Guid entityType)
    {
      var args = new global::Sungero.Domain.PropertySearchDialogFilteringEventArgs(entityType);
      var result = new global::Sungero.Docflow.OfficialDocumentCaseFileSearchPropertyFilteringServerHandler<TQueryEntity>().CaseFileSearchDialogFiltering(query, args);
      if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public OfficialDocumentSearchFilterForCaseFile(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class OfficialDocumentFilterForDeliveredTo<TQueryEntity, TSourceEntity>
    : global::Sungero.Domain.EntityPropertyFilterBase<TQueryEntity, TSourceEntity>
    where TQueryEntity : class, global::Sungero.Company.IEmployee
    where TSourceEntity : class, global::Sungero.Docflow.IOfficialDocument
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, TSourceEntity sourceEntity)
    {
      var args = new global::Sungero.Domain.PropertyFilteringEventArgs(sourceEntity);
      var result = new global::Sungero.Docflow.OfficialDocumentDeliveredToPropertyFilteringServerHandler<TQueryEntity>(sourceEntity).DeliveredToFiltering(query, args);
      if (args.DisableUiFiltering)
        global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public OfficialDocumentFilterForDeliveredTo(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class OfficialDocumentSearchFilterForDeliveredTo<TQueryEntity>
    : global::Sungero.Domain.SearchDialogPropertyFilter<TQueryEntity>
    where TQueryEntity : class, global::Sungero.CoreEntities.IRecipient
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, System.Guid entityType)
    {
      var args = new global::Sungero.Domain.PropertySearchDialogFilteringEventArgs(entityType);
      var result = new global::Sungero.Docflow.OfficialDocumentDeliveredToSearchPropertyFilteringServerHandler<TQueryEntity>().DeliveredToSearchDialogFiltering(query, args);
      if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public OfficialDocumentSearchFilterForDeliveredTo(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class OfficialDocumentFilterForResponsibleForReturnEmployee<TQueryEntity, TSourceEntity>
    : global::Sungero.Domain.EntityPropertyFilterBase<TQueryEntity, TSourceEntity>
    where TQueryEntity : class, global::Sungero.Company.IEmployee
    where TSourceEntity : class, global::Sungero.Docflow.IOfficialDocument
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, TSourceEntity sourceEntity)
    {
      var args = new global::Sungero.Domain.PropertyFilteringEventArgs(sourceEntity);
      var result = new global::Sungero.Docflow.OfficialDocumentResponsibleForReturnEmployeePropertyFilteringServerHandler<TQueryEntity>(sourceEntity).ResponsibleForReturnEmployeeFiltering(query, args);
      if (args.DisableUiFiltering)
        global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public OfficialDocumentFilterForResponsibleForReturnEmployee(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class OfficialDocumentSearchFilterForResponsibleForReturnEmployee<TQueryEntity>
    : global::Sungero.Domain.SearchDialogPropertyFilter<TQueryEntity>
    where TQueryEntity : class, global::Sungero.CoreEntities.IRecipient
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, System.Guid entityType)
    {
      var args = new global::Sungero.Domain.PropertySearchDialogFilteringEventArgs(entityType);
      var result = new global::Sungero.Docflow.OfficialDocumentResponsibleForReturnEmployeeSearchPropertyFilteringServerHandler<TQueryEntity>().ResponsibleForReturnEmployeeSearchDialogFiltering(query, args);
      if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public OfficialDocumentSearchFilterForResponsibleForReturnEmployee(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class OfficialDocumentFilterForDocumentKind<TQueryEntity, TSourceEntity>
    : global::Sungero.Domain.EntityPropertyFilterBase<TQueryEntity, TSourceEntity>
    where TQueryEntity : class, global::Sungero.Docflow.IDocumentKind
    where TSourceEntity : class, global::Sungero.Docflow.IOfficialDocument
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, TSourceEntity sourceEntity)
    {
      var args = new global::Sungero.Domain.PropertyFilteringEventArgs(sourceEntity);
      var result = new global::Sungero.Docflow.OfficialDocumentDocumentKindPropertyFilteringServerHandler<TQueryEntity>(sourceEntity).DocumentKindFiltering(query, args);
      if (args.DisableUiFiltering)
        global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public OfficialDocumentFilterForDocumentKind(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class OfficialDocumentSearchFilterForDocumentKind<TQueryEntity>
    : global::Sungero.Domain.SearchDialogPropertyFilter<TQueryEntity>
    where TQueryEntity : class, global::Sungero.Docflow.IDocumentKind
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, System.Guid entityType)
    {
      var args = new global::Sungero.Domain.PropertySearchDialogFilteringEventArgs(entityType);
      var result = new global::Sungero.Docflow.OfficialDocumentDocumentKindSearchPropertyFilteringServerHandler<TQueryEntity>().DocumentKindSearchDialogFiltering(query, args);
      if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public OfficialDocumentSearchFilterForDocumentKind(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class OfficialDocumentFilterForBusinessUnit<TQueryEntity, TSourceEntity>
    : global::Sungero.Domain.EntityPropertyFilterBase<TQueryEntity, TSourceEntity>
    where TQueryEntity : class, global::Sungero.Company.IBusinessUnit
    where TSourceEntity : class, global::Sungero.Docflow.IOfficialDocument
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, TSourceEntity sourceEntity)
    {
      var args = new global::Sungero.Domain.PropertyFilteringEventArgs(sourceEntity);
      var result = new global::Sungero.Docflow.OfficialDocumentBusinessUnitPropertyFilteringServerHandler<TQueryEntity>(sourceEntity).BusinessUnitFiltering(query, args);
      if (args.DisableUiFiltering)
        global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public OfficialDocumentFilterForBusinessUnit(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class OfficialDocumentSearchFilterForBusinessUnit<TQueryEntity>
    : global::Sungero.Domain.SearchDialogPropertyFilter<TQueryEntity>
    where TQueryEntity : class, global::Sungero.Company.IBusinessUnit
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, System.Guid entityType)
    {
      var args = new global::Sungero.Domain.PropertySearchDialogFilteringEventArgs(entityType);
      var result = new global::Sungero.Docflow.OfficialDocumentBusinessUnitSearchPropertyFilteringServerHandler<TQueryEntity>().BusinessUnitSearchDialogFiltering(query, args);
      if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public OfficialDocumentSearchFilterForBusinessUnit(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class OfficialDocumentFilterForOurSignatory<TQueryEntity, TSourceEntity>
    : global::Sungero.Domain.EntityPropertyFilterBase<TQueryEntity, TSourceEntity>
    where TQueryEntity : class, global::Sungero.Company.IEmployee
    where TSourceEntity : class, global::Sungero.Docflow.IOfficialDocument
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, TSourceEntity sourceEntity)
    {
      var args = new global::Sungero.Domain.PropertyFilteringEventArgs(sourceEntity);
      var result = new global::Sungero.Docflow.OfficialDocumentOurSignatoryPropertyFilteringServerHandler<TQueryEntity>(sourceEntity).OurSignatoryFiltering(query, args);
      if (args.DisableUiFiltering)
        global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public OfficialDocumentFilterForOurSignatory(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class OfficialDocumentSearchFilterForOurSignatory<TQueryEntity>
    : global::Sungero.Domain.SearchDialogPropertyFilter<TQueryEntity>
    where TQueryEntity : class, global::Sungero.CoreEntities.IRecipient
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, System.Guid entityType)
    {
      var args = new global::Sungero.Domain.PropertySearchDialogFilteringEventArgs(entityType);
      var result = new global::Sungero.Docflow.OfficialDocumentOurSignatorySearchPropertyFilteringServerHandler<TQueryEntity>().OurSignatorySearchDialogFiltering(query, args);
      if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public OfficialDocumentSearchFilterForOurSignatory(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class OfficialDocumentFilterForDocumentGroup<TQueryEntity, TSourceEntity>
    : global::Sungero.Domain.EntityPropertyFilterBase<TQueryEntity, TSourceEntity>
    where TQueryEntity : class, global::Sungero.Docflow.IDocumentGroupBase
    where TSourceEntity : class, global::Sungero.Docflow.IOfficialDocument
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, TSourceEntity sourceEntity)
    {
      var args = new global::Sungero.Domain.PropertyFilteringEventArgs(sourceEntity);
      var result = new global::Sungero.Docflow.OfficialDocumentDocumentGroupPropertyFilteringServerHandler<TQueryEntity>(sourceEntity).DocumentGroupFiltering(query, args);
      if (args.DisableUiFiltering)
        global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public OfficialDocumentFilterForDocumentGroup(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class OfficialDocumentSearchFilterForDocumentGroup<TQueryEntity>
    : global::Sungero.Domain.SearchDialogPropertyFilter<TQueryEntity>
    where TQueryEntity : class, global::Sungero.Docflow.IDocumentGroupBase
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, System.Guid entityType)
    {
      var args = new global::Sungero.Domain.PropertySearchDialogFilteringEventArgs(entityType);
      var result = new global::Sungero.Docflow.OfficialDocumentDocumentGroupSearchPropertyFilteringServerHandler<TQueryEntity>().DocumentGroupSearchDialogFiltering(query, args);
      if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public OfficialDocumentSearchFilterForDocumentGroup(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class OfficialDocumentFilterForAssignee<TQueryEntity, TSourceEntity>
    : global::Sungero.Domain.EntityPropertyFilterBase<TQueryEntity, TSourceEntity>
    where TQueryEntity : class, global::Sungero.Company.IEmployee
    where TSourceEntity : class, global::Sungero.Docflow.IOfficialDocument
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, TSourceEntity sourceEntity)
    {
      var args = new global::Sungero.Domain.PropertyFilteringEventArgs(sourceEntity);
      var result = new global::Sungero.Docflow.OfficialDocumentAssigneePropertyFilteringServerHandler<TQueryEntity>(sourceEntity).AssigneeFiltering(query, args);
      if (args.DisableUiFiltering)
        global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public OfficialDocumentFilterForAssignee(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class OfficialDocumentSearchFilterForAssignee<TQueryEntity>
    : global::Sungero.Domain.SearchDialogPropertyFilter<TQueryEntity>
    where TQueryEntity : class, global::Sungero.CoreEntities.IRecipient
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, System.Guid entityType)
    {
      var args = new global::Sungero.Domain.PropertySearchDialogFilteringEventArgs(entityType);
      var result = new global::Sungero.Docflow.OfficialDocumentAssigneeSearchPropertyFilteringServerHandler<TQueryEntity>().AssigneeSearchDialogFiltering(query, args);
      if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public OfficialDocumentSearchFilterForAssignee(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class OfficialDocumentFilterForDepartment<TQueryEntity, TSourceEntity>
    : global::Sungero.Domain.EntityPropertyFilterBase<TQueryEntity, TSourceEntity>
    where TQueryEntity : class, global::Sungero.Company.IDepartment
    where TSourceEntity : class, global::Sungero.Docflow.IOfficialDocument
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, TSourceEntity sourceEntity)
    {
      var args = new global::Sungero.Domain.PropertyFilteringEventArgs(sourceEntity);
      var result = new global::Sungero.Docflow.OfficialDocumentDepartmentPropertyFilteringServerHandler<TQueryEntity>(sourceEntity).DepartmentFiltering(query, args);
      if (args.DisableUiFiltering)
        global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public OfficialDocumentFilterForDepartment(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class OfficialDocumentSearchFilterForDepartment<TQueryEntity>
    : global::Sungero.Domain.SearchDialogPropertyFilter<TQueryEntity>
    where TQueryEntity : class, global::Sungero.Company.IDepartment
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, System.Guid entityType)
    {
      var args = new global::Sungero.Domain.PropertySearchDialogFilteringEventArgs(entityType);
      var result = new global::Sungero.Docflow.OfficialDocumentDepartmentSearchPropertyFilteringServerHandler<TQueryEntity>().DepartmentSearchDialogFiltering(query, args);
      if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public OfficialDocumentSearchFilterForDepartment(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class OfficialDocumentFilterForPreparedBy<TQueryEntity, TSourceEntity>
    : global::Sungero.Domain.EntityPropertyFilterBase<TQueryEntity, TSourceEntity>
    where TQueryEntity : class, global::Sungero.Company.IEmployee
    where TSourceEntity : class, global::Sungero.Docflow.IOfficialDocument
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, TSourceEntity sourceEntity)
    {
      var args = new global::Sungero.Domain.PropertyFilteringEventArgs(sourceEntity);
      var result = new global::Sungero.Docflow.OfficialDocumentPreparedByPropertyFilteringServerHandler<TQueryEntity>(sourceEntity).PreparedByFiltering(query, args);
      if (args.DisableUiFiltering)
        global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public OfficialDocumentFilterForPreparedBy(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class OfficialDocumentSearchFilterForPreparedBy<TQueryEntity>
    : global::Sungero.Domain.SearchDialogPropertyFilter<TQueryEntity>
    where TQueryEntity : class, global::Sungero.CoreEntities.IRecipient
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, System.Guid entityType)
    {
      var args = new global::Sungero.Domain.PropertySearchDialogFilteringEventArgs(entityType);
      var result = new global::Sungero.Docflow.OfficialDocumentPreparedBySearchPropertyFilteringServerHandler<TQueryEntity>().PreparedBySearchDialogFiltering(query, args);
      if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public OfficialDocumentSearchFilterForPreparedBy(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class OfficialDocumentFilterForProject<TQueryEntity, TSourceEntity>
    : global::Sungero.Domain.EntityPropertyFilterBase<TQueryEntity, TSourceEntity>
    where TQueryEntity : class, global::Sungero.Docflow.IProjectBase
    where TSourceEntity : class, global::Sungero.Docflow.IOfficialDocument
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, TSourceEntity sourceEntity)
    {
      var args = new global::Sungero.Domain.PropertyFilteringEventArgs(sourceEntity);
      var result = new global::Sungero.Docflow.OfficialDocumentProjectPropertyFilteringServerHandler<TQueryEntity>(sourceEntity).ProjectFiltering(query, args);
      if (args.DisableUiFiltering)
        global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public OfficialDocumentFilterForProject(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class OfficialDocumentSearchFilterForProject<TQueryEntity>
    : global::Sungero.Domain.SearchDialogPropertyFilter<TQueryEntity>
    where TQueryEntity : class, global::Sungero.Docflow.IProjectBase
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, System.Guid entityType)
    {
      var args = new global::Sungero.Domain.PropertySearchDialogFilteringEventArgs(entityType);
      var result = new global::Sungero.Docflow.OfficialDocumentProjectSearchPropertyFilteringServerHandler<TQueryEntity>().ProjectSearchDialogFiltering(query, args);
      if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public OfficialDocumentSearchFilterForProject(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class OfficialDocumentFilterForLeadingDocument<TQueryEntity, TSourceEntity>
    : global::Sungero.Domain.EntityPropertyFilterBase<TQueryEntity, TSourceEntity>
    where TQueryEntity : class, global::Sungero.Docflow.IOfficialDocument
    where TSourceEntity : class, global::Sungero.Docflow.IOfficialDocument
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, TSourceEntity sourceEntity)
    {
      var args = new global::Sungero.Domain.PropertyFilteringEventArgs(sourceEntity);
      var result = new global::Sungero.Docflow.OfficialDocumentLeadingDocumentPropertyFilteringServerHandler<TQueryEntity>(sourceEntity).LeadingDocumentFiltering(query, args);
      if (args.DisableUiFiltering)
        global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public OfficialDocumentFilterForLeadingDocument(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class OfficialDocumentSearchFilterForLeadingDocument<TQueryEntity>
    : global::Sungero.Domain.SearchDialogPropertyFilter<TQueryEntity>
    where TQueryEntity : class, global::Sungero.Docflow.IOfficialDocument
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, System.Guid entityType)
    {
      var args = new global::Sungero.Domain.PropertySearchDialogFilteringEventArgs(entityType);
      var result = new global::Sungero.Docflow.OfficialDocumentLeadingDocumentSearchPropertyFilteringServerHandler<TQueryEntity>().LeadingDocumentSearchDialogFiltering(query, args);
      if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public OfficialDocumentSearchFilterForLeadingDocument(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class OfficialDocumentFilterForStorage<TQueryEntity, TSourceEntity>
    : global::Sungero.Domain.EntityPropertyFilterBase<TQueryEntity, TSourceEntity>
    where TQueryEntity : class, global::Sungero.CoreEntities.IStorage
    where TSourceEntity : class, global::Sungero.Docflow.IOfficialDocument
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, TSourceEntity sourceEntity)
    {
      var args = new global::Sungero.Domain.PropertyFilteringEventArgs(sourceEntity);
      var result = new global::Sungero.Docflow.OfficialDocumentStoragePropertyFilteringServerHandler<TQueryEntity>(sourceEntity).StorageFiltering(query, args);
      if (args.DisableUiFiltering)
        global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public OfficialDocumentFilterForStorage(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class OfficialDocumentSearchFilterForStorage<TQueryEntity>
    : global::Sungero.Domain.SearchDialogPropertyFilter<TQueryEntity>
    where TQueryEntity : class, global::Sungero.CoreEntities.IStorage
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, System.Guid entityType)
    {
      var args = new global::Sungero.Domain.PropertySearchDialogFilteringEventArgs(entityType);
      var result = new global::Sungero.Docflow.OfficialDocumentStorageSearchPropertyFilteringServerHandler<TQueryEntity>().StorageSearchDialogFiltering(query, args);
      if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public OfficialDocumentSearchFilterForStorage(string propertyName)
      : base(propertyName)
    {
    }
  }



  [global::Sungero.Domain.Filter(typeof(global::Sungero.Docflow.Server.OfficialDocumentFilter<global::Sungero.Docflow.IOfficialDocument>))]
  [global::Sungero.Domain.PropertyFilter(typeof(global::Sungero.Docflow.Server.OfficialDocumentFilterForDocumentRegister<global::Sungero.Docflow.IDocumentRegister, global::Sungero.Docflow.IOfficialDocument>), "DocumentRegister")]
  [global::Sungero.Domain.SearchPropertyFilter(typeof(global::Sungero.Docflow.Server.OfficialDocumentSearchFilterForDocumentRegister<global::Sungero.Docflow.IDocumentRegister>), "DocumentRegister")]
  [global::Sungero.Domain.PropertyFilter(typeof(global::Sungero.Docflow.Server.OfficialDocumentFilterForDeliveryMethod<global::Sungero.Docflow.IMailDeliveryMethod, global::Sungero.Docflow.IOfficialDocument>), "DeliveryMethod")]
  [global::Sungero.Domain.SearchPropertyFilter(typeof(global::Sungero.Docflow.Server.OfficialDocumentSearchFilterForDeliveryMethod<global::Sungero.Docflow.IMailDeliveryMethod>), "DeliveryMethod")]
  [global::Sungero.Domain.PropertyFilter(typeof(global::Sungero.Docflow.Server.OfficialDocumentFilterForCaseFile<global::Sungero.Docflow.ICaseFile, global::Sungero.Docflow.IOfficialDocument>), "CaseFile")]
  [global::Sungero.Domain.SearchPropertyFilter(typeof(global::Sungero.Docflow.Server.OfficialDocumentSearchFilterForCaseFile<global::Sungero.Docflow.ICaseFile>), "CaseFile")]
  [global::Sungero.Domain.PropertyFilter(typeof(global::Sungero.Docflow.Server.OfficialDocumentFilterForDeliveredTo<global::Sungero.Company.IEmployee, global::Sungero.Docflow.IOfficialDocument>), "DeliveredTo")]
  [global::Sungero.Domain.SearchPropertyFilter(typeof(global::Sungero.Docflow.Server.OfficialDocumentSearchFilterForDeliveredTo<global::Sungero.CoreEntities.IRecipient>), "DeliveredTo")]
  [global::Sungero.Domain.PropertyFilter(typeof(global::Sungero.Docflow.Server.OfficialDocumentFilterForResponsibleForReturnEmployee<global::Sungero.Company.IEmployee, global::Sungero.Docflow.IOfficialDocument>), "ResponsibleForReturnEmployee")]
  [global::Sungero.Domain.SearchPropertyFilter(typeof(global::Sungero.Docflow.Server.OfficialDocumentSearchFilterForResponsibleForReturnEmployee<global::Sungero.CoreEntities.IRecipient>), "ResponsibleForReturnEmployee")]
  [global::Sungero.Domain.PropertyFilter(typeof(global::Sungero.Docflow.Server.OfficialDocumentFilterForDocumentKind<global::Sungero.Docflow.IDocumentKind, global::Sungero.Docflow.IOfficialDocument>), "DocumentKind")]
  [global::Sungero.Domain.SearchPropertyFilter(typeof(global::Sungero.Docflow.Server.OfficialDocumentSearchFilterForDocumentKind<global::Sungero.Docflow.IDocumentKind>), "DocumentKind")]
  [global::Sungero.Domain.PropertyFilter(typeof(global::Sungero.Docflow.Server.OfficialDocumentFilterForBusinessUnit<global::Sungero.Company.IBusinessUnit, global::Sungero.Docflow.IOfficialDocument>), "BusinessUnit")]
  [global::Sungero.Domain.SearchPropertyFilter(typeof(global::Sungero.Docflow.Server.OfficialDocumentSearchFilterForBusinessUnit<global::Sungero.Company.IBusinessUnit>), "BusinessUnit")]
  [global::Sungero.Domain.PropertyFilter(typeof(global::Sungero.Docflow.Server.OfficialDocumentFilterForOurSignatory<global::Sungero.Company.IEmployee, global::Sungero.Docflow.IOfficialDocument>), "OurSignatory")]
  [global::Sungero.Domain.SearchPropertyFilter(typeof(global::Sungero.Docflow.Server.OfficialDocumentSearchFilterForOurSignatory<global::Sungero.CoreEntities.IRecipient>), "OurSignatory")]
  [global::Sungero.Domain.PropertyFilter(typeof(global::Sungero.Docflow.Server.OfficialDocumentFilterForDocumentGroup<global::Sungero.Docflow.IDocumentGroupBase, global::Sungero.Docflow.IOfficialDocument>), "DocumentGroup")]
  [global::Sungero.Domain.SearchPropertyFilter(typeof(global::Sungero.Docflow.Server.OfficialDocumentSearchFilterForDocumentGroup<global::Sungero.Docflow.IDocumentGroupBase>), "DocumentGroup")]
  [global::Sungero.Domain.PropertyFilter(typeof(global::Sungero.Docflow.Server.OfficialDocumentFilterForAssignee<global::Sungero.Company.IEmployee, global::Sungero.Docflow.IOfficialDocument>), "Assignee")]
  [global::Sungero.Domain.SearchPropertyFilter(typeof(global::Sungero.Docflow.Server.OfficialDocumentSearchFilterForAssignee<global::Sungero.CoreEntities.IRecipient>), "Assignee")]
  [global::Sungero.Domain.PropertyFilter(typeof(global::Sungero.Docflow.Server.OfficialDocumentFilterForDepartment<global::Sungero.Company.IDepartment, global::Sungero.Docflow.IOfficialDocument>), "Department")]
  [global::Sungero.Domain.SearchPropertyFilter(typeof(global::Sungero.Docflow.Server.OfficialDocumentSearchFilterForDepartment<global::Sungero.Company.IDepartment>), "Department")]
  [global::Sungero.Domain.PropertyFilter(typeof(global::Sungero.Docflow.Server.OfficialDocumentFilterForPreparedBy<global::Sungero.Company.IEmployee, global::Sungero.Docflow.IOfficialDocument>), "PreparedBy")]
  [global::Sungero.Domain.SearchPropertyFilter(typeof(global::Sungero.Docflow.Server.OfficialDocumentSearchFilterForPreparedBy<global::Sungero.CoreEntities.IRecipient>), "PreparedBy")]
  [global::Sungero.Domain.PropertyFilter(typeof(global::Sungero.Docflow.Server.OfficialDocumentFilterForProject<global::Sungero.Docflow.IProjectBase, global::Sungero.Docflow.IOfficialDocument>), "Project")]
  [global::Sungero.Domain.SearchPropertyFilter(typeof(global::Sungero.Docflow.Server.OfficialDocumentSearchFilterForProject<global::Sungero.Docflow.IProjectBase>), "Project")]
  [global::Sungero.Domain.PropertyFilter(typeof(global::Sungero.Docflow.Server.OfficialDocumentFilterForLeadingDocument<global::Sungero.Docflow.IOfficialDocument, global::Sungero.Docflow.IOfficialDocument>), "LeadingDocument")]
  [global::Sungero.Domain.SearchPropertyFilter(typeof(global::Sungero.Docflow.Server.OfficialDocumentSearchFilterForLeadingDocument<global::Sungero.Docflow.IOfficialDocument>), "LeadingDocument")]
  [global::Sungero.Domain.PropertyFilter(typeof(global::Sungero.Docflow.Server.OfficialDocumentFilterForStorage<global::Sungero.CoreEntities.IStorage, global::Sungero.Docflow.IOfficialDocument>), "Storage")]
  [global::Sungero.Domain.SearchPropertyFilter(typeof(global::Sungero.Docflow.Server.OfficialDocumentSearchFilterForStorage<global::Sungero.CoreEntities.IStorage>), "Storage")]


  public class OfficialDocument :
    global::Sungero.Content.Server.ElectronicDocument, global::Sungero.Docflow.IOfficialDocument, global::Sungero.Domain.Shared.ISecurableEntity, global::Sungero.Domain.IInternalSecurableEntity
  {
    public static new readonly global::System.Guid ClassTypeGuid = global::System.Guid.Parse("58cca102-1e97-4f07-b6ac-fd866a8b7cb1");

    public override global::System.Guid TypeGuid
    {
      get { return global::Sungero.Docflow.Server.OfficialDocument.ClassTypeGuid; }
    }

    public override string TypeName
    {
      get { return "Sungero.Docflow.IOfficialDocument, Sungero.Domain.Interfaces"; }
    }

    public override string DisplayValue
    {
      get { return this.Name; }
      set { this.Name = value; }
    }

    public new virtual global::Sungero.Docflow.IOfficialDocumentState State
    {
      get { return (global::Sungero.Docflow.IOfficialDocumentState)base.State; }
    }

    protected override global::Sungero.Domain.Shared.IEntityState CreateState()
    {
      return new global::Sungero.Docflow.Shared.OfficialDocumentState(this);
    }

    public new virtual global::Sungero.Docflow.IOfficialDocumentInfo Info
    {
      get { return (global::Sungero.Docflow.IOfficialDocumentInfo)base.Info; }
    }

    public new virtual global::Sungero.Docflow.IOfficialDocumentAccessRights AccessRights
    {
      get { return (global::Sungero.Docflow.IOfficialDocumentAccessRights)base.AccessRights; }
    }

    protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
    {
      return new global::Sungero.Docflow.Server.OfficialDocumentAccessRights(this);
    }

    protected override global::Sungero.Domain.EntityFunctions CreateServerFunctions()
    {
      return new global::Sungero.Docflow.Server.OfficialDocumentFunctions(this);
    }

    protected override global::Sungero.Domain.Shared.EntityFunctions CreateSharedFunctions()
    {
      return new global::Sungero.Docflow.Shared.OfficialDocumentFunctions(this);
    }

    protected override object CreateHandlers() {
      return new global::Sungero.Docflow.OfficialDocumentServerHandlers(this);
    }

    protected override object CreateSharedHandlers() {
      return new global::Sungero.Docflow.OfficialDocumentSharedHandlers(this);
    }

    private global::System.String _RegistrationNumber;
    public virtual global::System.String RegistrationNumber
    {
      get
      {
        return this._RegistrationNumber;
      }

      set
      {
        this.SetPropertyValue("RegistrationNumber", this._RegistrationNumber, value, (propertyValue) => { this._RegistrationNumber = propertyValue; }, this.RegistrationNumberChangedHandler);
      }
    }
    private global::System.Int32? _Index;
    public virtual global::System.Int32? Index
    {
      get
      {
        return this._Index;
      }

      set
      {
        this.SetPropertyValue("Index", this._Index, value, (propertyValue) => { this._Index = propertyValue; }, this.IndexChangedHandler);
      }
    }
    private global::System.DateTime? _RegistrationDate;
    public virtual global::System.DateTime? RegistrationDate
    {
      get
      {
        return this._RegistrationDate;
      }

      set
      {
        this.SetPropertyValue("RegistrationDate", this._RegistrationDate, value, (propertyValue) => { this._RegistrationDate = propertyValue; }, this.RegistrationDateChangedHandler);
      }
    }
    private global::System.DateTime? _PlacedToCaseFileDate;
    public virtual global::System.DateTime? PlacedToCaseFileDate
    {
      get
      {
        return this._PlacedToCaseFileDate;
      }

      set
      {
        this.SetPropertyValue("PlacedToCaseFileDate", this._PlacedToCaseFileDate, value, (propertyValue) => { this._PlacedToCaseFileDate = propertyValue; }, this.PlacedToCaseFileDateChangedHandler);
      }
    }
    private global::System.Boolean? _IsReturnRequired;
    public virtual global::System.Boolean? IsReturnRequired
    {
      get
      {
        return this._IsReturnRequired;
      }

      set
      {
        this.SetPropertyValue("IsReturnRequired", this._IsReturnRequired, value, (propertyValue) => { this._IsReturnRequired = propertyValue; }, this.IsReturnRequiredChangedHandler);
      }
    }
    private global::System.Boolean? _IsHeldByCounterParty;
    public virtual global::System.Boolean? IsHeldByCounterParty
    {
      get
      {
        return this._IsHeldByCounterParty;
      }

      set
      {
        this.SetPropertyValue("IsHeldByCounterParty", this._IsHeldByCounterParty, value, (propertyValue) => { this._IsHeldByCounterParty = propertyValue; }, this.IsHeldByCounterPartyChangedHandler);
      }
    }
    private global::System.DateTime? _ReturnDeadline;
    public virtual global::System.DateTime? ReturnDeadline
    {
      get
      {
        return this._ReturnDeadline;
      }

      set
      {
        this.SetPropertyValue("ReturnDeadline", this._ReturnDeadline, value, (propertyValue) => { this._ReturnDeadline = propertyValue; }, this.ReturnDeadlineChangedHandler);
      }
    }
    private global::System.DateTime? _ReturnDate;
    public virtual global::System.DateTime? ReturnDate
    {
      get
      {
        return this._ReturnDate;
      }

      set
      {
        this.SetPropertyValue("ReturnDate", this._ReturnDate, value, (propertyValue) => { this._ReturnDate = propertyValue; }, this.ReturnDateChangedHandler);
      }
    }
    private global::System.DateTime? _ScheduledReturnDateFromCounterparty;
    public virtual global::System.DateTime? ScheduledReturnDateFromCounterparty
    {
      get
      {
        return this._ScheduledReturnDateFromCounterparty;
      }

      set
      {
        this.SetPropertyValue("ScheduledReturnDateFromCounterparty", this._ScheduledReturnDateFromCounterparty, value, (propertyValue) => { this._ScheduledReturnDateFromCounterparty = propertyValue; }, this.ScheduledReturnDateFromCounterpartyChangedHandler);
      }
    }
    private global::System.String _Subject;
    public virtual global::System.String Subject
    {
      get
      {
        return this._Subject;
      }

      set
      {
        this.SetPropertyValue("Subject", this._Subject, value, (propertyValue) => { this._Subject = propertyValue; }, this.SubjectChangedHandler);
      }
    }
    private global::System.String _Note;
    public virtual global::System.String Note
    {
      get
      {
        return this._Note;
      }

      set
      {
        this.SetPropertyValue("Note", this._Note, value, (propertyValue) => { this._Note = propertyValue; }, this.NoteChangedHandler);
      }
    }
    private global::System.DateTime? _DocumentDate;
    public virtual global::System.DateTime? DocumentDate
    {
      get
      {
        return this._DocumentDate;
      }

      set
      {
        this.SetPropertyValue("DocumentDate", this._DocumentDate, value, (propertyValue) => { this._DocumentDate = propertyValue; }, this.DocumentDateChangedHandler);
      }
    }



    private global::System.String _LocationState;
    [global::Sungero.Domain.Shared.DoNotSavePreviousValue]
    public virtual global::System.String LocationState
    {
      get
      {
        return this._LocationState;
      }

      set
      {
        this.SetPropertyValue("LocationState", this._LocationState, value, (propertyValue) => { this._LocationState = propertyValue; }, this.LocationStateChangedHandler);
      }
    }




    private static global::Sungero.Domain.Shared.EnumerationItems _LifeCycleStateItems = new global::Sungero.Domain.Shared.EnumerationItems(
      null,
      typeof(global::Sungero.Docflow.OfficialDocument.LifeCycleState),
      typeof(global::Sungero.Docflow.Server.OfficialDocument),
      "LifeCycleState");

    public static global::Sungero.Domain.Shared.EnumerationItems LifeCycleStateItems
    {
      get { return global::Sungero.Docflow.Server.OfficialDocument._LifeCycleStateItems; }
    }

    public virtual global::Sungero.Domain.Shared.EnumerationItems LifeCycleStateAllowedItems
    {
      get { return global::Sungero.Docflow.Server.OfficialDocument.LifeCycleStateItems; }
    }

    private global::Sungero.Core.Enumeration? _LifeCycleState;

    public virtual global::Sungero.Core.Enumeration? LifeCycleState
    {
      get { return this._LifeCycleState; }
      set { this.SetEnumPropertyValue("LifeCycleState", this._LifeCycleState, value, (propertyValue) => { this._LifeCycleState = propertyValue; }, this.LifeCycleStateChangedHandler, this.LifeCycleStateAllowedItems); }
    }
    private static global::Sungero.Domain.Shared.EnumerationItems _RegistrationStateItems = new global::Sungero.Domain.Shared.EnumerationItems(
      null,
      typeof(global::Sungero.Docflow.OfficialDocument.RegistrationState),
      typeof(global::Sungero.Docflow.Server.OfficialDocument),
      "RegistrationState");

    public static global::Sungero.Domain.Shared.EnumerationItems RegistrationStateItems
    {
      get { return global::Sungero.Docflow.Server.OfficialDocument._RegistrationStateItems; }
    }

    public virtual global::Sungero.Domain.Shared.EnumerationItems RegistrationStateAllowedItems
    {
      get { return global::Sungero.Docflow.Server.OfficialDocument.RegistrationStateItems; }
    }

    private global::Sungero.Core.Enumeration? _RegistrationState;

    public virtual global::Sungero.Core.Enumeration? RegistrationState
    {
      get { return this._RegistrationState; }
      set { this.SetEnumPropertyValue("RegistrationState", this._RegistrationState, value, (propertyValue) => { this._RegistrationState = propertyValue; }, this.RegistrationStateChangedHandler, this.RegistrationStateAllowedItems); }
    }
    private static global::Sungero.Domain.Shared.EnumerationItems _InternalApprovalStateItems = new global::Sungero.Domain.Shared.EnumerationItems(
      null,
      typeof(global::Sungero.Docflow.OfficialDocument.InternalApprovalState),
      typeof(global::Sungero.Docflow.Server.OfficialDocument),
      "InternalApprovalState");

    public static global::Sungero.Domain.Shared.EnumerationItems InternalApprovalStateItems
    {
      get { return global::Sungero.Docflow.Server.OfficialDocument._InternalApprovalStateItems; }
    }

    public virtual global::Sungero.Domain.Shared.EnumerationItems InternalApprovalStateAllowedItems
    {
      get { return global::Sungero.Docflow.Server.OfficialDocument.InternalApprovalStateItems; }
    }

    private global::Sungero.Core.Enumeration? _InternalApprovalState;

    public virtual global::Sungero.Core.Enumeration? InternalApprovalState
    {
      get { return this._InternalApprovalState; }
      set { this.SetEnumPropertyValue("InternalApprovalState", this._InternalApprovalState, value, (propertyValue) => { this._InternalApprovalState = propertyValue; }, this.InternalApprovalStateChangedHandler, this.InternalApprovalStateAllowedItems); }
    }
    private static global::Sungero.Domain.Shared.EnumerationItems _ExternalApprovalStateItems = new global::Sungero.Domain.Shared.EnumerationItems(
      null,
      typeof(global::Sungero.Docflow.OfficialDocument.ExternalApprovalState),
      typeof(global::Sungero.Docflow.Server.OfficialDocument),
      "ExternalApprovalState");

    public static global::Sungero.Domain.Shared.EnumerationItems ExternalApprovalStateItems
    {
      get { return global::Sungero.Docflow.Server.OfficialDocument._ExternalApprovalStateItems; }
    }

    public virtual global::Sungero.Domain.Shared.EnumerationItems ExternalApprovalStateAllowedItems
    {
      get { return global::Sungero.Docflow.Server.OfficialDocument.ExternalApprovalStateItems; }
    }

    private global::Sungero.Core.Enumeration? _ExternalApprovalState;

    public virtual global::Sungero.Core.Enumeration? ExternalApprovalState
    {
      get { return this._ExternalApprovalState; }
      set { this.SetEnumPropertyValue("ExternalApprovalState", this._ExternalApprovalState, value, (propertyValue) => { this._ExternalApprovalState = propertyValue; }, this.ExternalApprovalStateChangedHandler, this.ExternalApprovalStateAllowedItems); }
    }
    private static global::Sungero.Domain.Shared.EnumerationItems _ExecutionStateItems = new global::Sungero.Domain.Shared.EnumerationItems(
      null,
      typeof(global::Sungero.Docflow.OfficialDocument.ExecutionState),
      typeof(global::Sungero.Docflow.Server.OfficialDocument),
      "ExecutionState");

    public static global::Sungero.Domain.Shared.EnumerationItems ExecutionStateItems
    {
      get { return global::Sungero.Docflow.Server.OfficialDocument._ExecutionStateItems; }
    }

    public virtual global::Sungero.Domain.Shared.EnumerationItems ExecutionStateAllowedItems
    {
      get { return global::Sungero.Docflow.Server.OfficialDocument.ExecutionStateItems; }
    }

    private global::Sungero.Core.Enumeration? _ExecutionState;

    public virtual global::Sungero.Core.Enumeration? ExecutionState
    {
      get { return this._ExecutionState; }
      set { this.SetEnumPropertyValue("ExecutionState", this._ExecutionState, value, (propertyValue) => { this._ExecutionState = propertyValue; }, this.ExecutionStateChangedHandler, this.ExecutionStateAllowedItems); }
    }
    private static global::Sungero.Domain.Shared.EnumerationItems _ControlExecutionStateItems = new global::Sungero.Domain.Shared.EnumerationItems(
      null,
      typeof(global::Sungero.Docflow.OfficialDocument.ControlExecutionState),
      typeof(global::Sungero.Docflow.Server.OfficialDocument),
      "ControlExecutionState");

    public static global::Sungero.Domain.Shared.EnumerationItems ControlExecutionStateItems
    {
      get { return global::Sungero.Docflow.Server.OfficialDocument._ControlExecutionStateItems; }
    }

    public virtual global::Sungero.Domain.Shared.EnumerationItems ControlExecutionStateAllowedItems
    {
      get { return global::Sungero.Docflow.Server.OfficialDocument.ControlExecutionStateItems; }
    }

    private global::Sungero.Core.Enumeration? _ControlExecutionState;

    public virtual global::Sungero.Core.Enumeration? ControlExecutionState
    {
      get { return this._ControlExecutionState; }
      set { this.SetEnumPropertyValue("ControlExecutionState", this._ControlExecutionState, value, (propertyValue) => { this._ControlExecutionState = propertyValue; }, this.ControlExecutionStateChangedHandler, this.ControlExecutionStateAllowedItems); }
    }
    private static global::Sungero.Domain.Shared.EnumerationItems _ExchangeStateItems = new global::Sungero.Domain.Shared.EnumerationItems(
      null,
      typeof(global::Sungero.Docflow.OfficialDocument.ExchangeState),
      typeof(global::Sungero.Docflow.Server.OfficialDocument),
      "ExchangeState");

    public static global::Sungero.Domain.Shared.EnumerationItems ExchangeStateItems
    {
      get { return global::Sungero.Docflow.Server.OfficialDocument._ExchangeStateItems; }
    }

    public virtual global::Sungero.Domain.Shared.EnumerationItems ExchangeStateAllowedItems
    {
      get { return global::Sungero.Docflow.Server.OfficialDocument.ExchangeStateItems; }
    }

    private global::Sungero.Core.Enumeration? _ExchangeState;

    public virtual global::Sungero.Core.Enumeration? ExchangeState
    {
      get { return this._ExchangeState; }
      set { this.SetEnumPropertyValue("ExchangeState", this._ExchangeState, value, (propertyValue) => { this._ExchangeState = propertyValue; }, this.ExchangeStateChangedHandler, this.ExchangeStateAllowedItems); }
    }
    private static global::Sungero.Domain.Shared.EnumerationItems _VerificationStateItems = new global::Sungero.Domain.Shared.EnumerationItems(
      null,
      typeof(global::Sungero.Docflow.OfficialDocument.VerificationState),
      typeof(global::Sungero.Docflow.Server.OfficialDocument),
      "VerificationState");

    public static global::Sungero.Domain.Shared.EnumerationItems VerificationStateItems
    {
      get { return global::Sungero.Docflow.Server.OfficialDocument._VerificationStateItems; }
    }

    public virtual global::Sungero.Domain.Shared.EnumerationItems VerificationStateAllowedItems
    {
      get { return global::Sungero.Docflow.Server.OfficialDocument.VerificationStateItems; }
    }

    private global::Sungero.Core.Enumeration? _VerificationState;

    public virtual global::Sungero.Core.Enumeration? VerificationState
    {
      get { return this._VerificationState; }
      set { this.SetEnumPropertyValue("VerificationState", this._VerificationState, value, (propertyValue) => { this._VerificationState = propertyValue; }, this.VerificationStateChangedHandler, this.VerificationStateAllowedItems); }
    }


    private global::Sungero.Docflow.IDocumentRegister _DocumentRegister;
    public virtual global::Sungero.Docflow.IDocumentRegister DocumentRegister
    {
      get
      {
        return this._DocumentRegister;
      }

      set
      {
        this.SetPropertyValue("DocumentRegister", this._DocumentRegister, value, (propertyValue) => { this._DocumentRegister = propertyValue; }, this.DocumentRegisterChangedHandler);
      }
    }
    private global::Sungero.Docflow.IMailDeliveryMethod _DeliveryMethod;
    public virtual global::Sungero.Docflow.IMailDeliveryMethod DeliveryMethod
    {
      get
      {
        return this._DeliveryMethod;
      }

      set
      {
        this.SetPropertyValue("DeliveryMethod", this._DeliveryMethod, value, (propertyValue) => { this._DeliveryMethod = propertyValue; }, this.DeliveryMethodChangedHandler);
      }
    }
    private global::Sungero.Docflow.ICaseFile _CaseFile;
    public virtual global::Sungero.Docflow.ICaseFile CaseFile
    {
      get
      {
        return this._CaseFile;
      }

      set
      {
        this.SetPropertyValue("CaseFile", this._CaseFile, value, (propertyValue) => { this._CaseFile = propertyValue; }, this.CaseFileChangedHandler);
      }
    }
    private global::Sungero.Company.IEmployee _DeliveredTo;
    public virtual global::Sungero.Company.IEmployee DeliveredTo
    {
      get
      {
        return this._DeliveredTo;
      }

      set
      {
        this.SetPropertyValue("DeliveredTo", this._DeliveredTo, value, (propertyValue) => { this._DeliveredTo = propertyValue; }, this.DeliveredToChangedHandler);
      }
    }
    private global::Sungero.Company.IEmployee _ResponsibleForReturnEmployee;
    public virtual global::Sungero.Company.IEmployee ResponsibleForReturnEmployee
    {
      get
      {
        return this._ResponsibleForReturnEmployee;
      }

      set
      {
        this.SetPropertyValue("ResponsibleForReturnEmployee", this._ResponsibleForReturnEmployee, value, (propertyValue) => { this._ResponsibleForReturnEmployee = propertyValue; }, this.ResponsibleForReturnEmployeeChangedHandler);
      }
    }
    private global::Sungero.Docflow.IDocumentKind _DocumentKind;
    public virtual global::Sungero.Docflow.IDocumentKind DocumentKind
    {
      get
      {
        return this._DocumentKind;
      }

      set
      {
        this.SetPropertyValue("DocumentKind", this._DocumentKind, value, (propertyValue) => { this._DocumentKind = propertyValue; }, this.DocumentKindChangedHandler);
      }
    }
    private global::Sungero.Company.IBusinessUnit _BusinessUnit;
    public virtual global::Sungero.Company.IBusinessUnit BusinessUnit
    {
      get
      {
        return this._BusinessUnit;
      }

      set
      {
        this.SetPropertyValue("BusinessUnit", this._BusinessUnit, value, (propertyValue) => { this._BusinessUnit = propertyValue; }, this.BusinessUnitChangedHandler);
      }
    }
    private global::Sungero.Company.IEmployee _OurSignatory;
    public virtual global::Sungero.Company.IEmployee OurSignatory
    {
      get
      {
        return this._OurSignatory;
      }

      set
      {
        this.SetPropertyValue("OurSignatory", this._OurSignatory, value, (propertyValue) => { this._OurSignatory = propertyValue; }, this.OurSignatoryChangedHandler);
      }
    }
    private global::Sungero.Docflow.IDocumentGroupBase _DocumentGroup;
    public virtual global::Sungero.Docflow.IDocumentGroupBase DocumentGroup
    {
      get
      {
        return this._DocumentGroup;
      }

      set
      {
        this.SetPropertyValue("DocumentGroup", this._DocumentGroup, value, (propertyValue) => { this._DocumentGroup = propertyValue; }, this.DocumentGroupChangedHandler);
      }
    }
    private global::Sungero.Company.IEmployee _Assignee;
    public virtual global::Sungero.Company.IEmployee Assignee
    {
      get
      {
        return this._Assignee;
      }

      set
      {
        this.SetPropertyValue("Assignee", this._Assignee, value, (propertyValue) => { this._Assignee = propertyValue; }, this.AssigneeChangedHandler);
      }
    }
    private global::Sungero.Company.IDepartment _Department;
    public virtual global::Sungero.Company.IDepartment Department
    {
      get
      {
        return this._Department;
      }

      set
      {
        this.SetPropertyValue("Department", this._Department, value, (propertyValue) => { this._Department = propertyValue; }, this.DepartmentChangedHandler);
      }
    }
    private global::Sungero.Company.IEmployee _PreparedBy;
    public virtual global::Sungero.Company.IEmployee PreparedBy
    {
      get
      {
        return this._PreparedBy;
      }

      set
      {
        this.SetPropertyValue("PreparedBy", this._PreparedBy, value, (propertyValue) => { this._PreparedBy = propertyValue; }, this.PreparedByChangedHandler);
      }
    }
    private global::Sungero.Docflow.IProjectBase _Project;
    public virtual global::Sungero.Docflow.IProjectBase Project
    {
      get
      {
        return this._Project;
      }

      set
      {
        this.SetPropertyValue("Project", this._Project, value, (propertyValue) => { this._Project = propertyValue; }, this.ProjectChangedHandler);
      }
    }
    private global::Sungero.Docflow.IOfficialDocument _LeadingDocument;
    public virtual global::Sungero.Docflow.IOfficialDocument LeadingDocument
    {
      get
      {
        return this._LeadingDocument;
      }

      set
      {
        this.SetPropertyValue("LeadingDocument", this._LeadingDocument, value, (propertyValue) => { this._LeadingDocument = propertyValue; }, this.LeadingDocumentChangedHandler);
      }
    }
    private global::Sungero.CoreEntities.IStorage _Storage;
    public virtual global::Sungero.CoreEntities.IStorage Storage
    {
      get
      {
        return this._Storage;
      }

      set
      {
        this.SetPropertyValue("Storage", this._Storage, value, (propertyValue) => { this._Storage = propertyValue; }, this.StorageChangedHandler);
      }
    }


    protected global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Docflow.IOfficialDocumentTracking> _Tracking;

    public virtual global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Docflow.IOfficialDocumentTracking> Tracking
    {
      get
      {
        if (this._Tracking == null)
        {
          this._Tracking = this.CreateTrackingCollection();
          this.SetTrackingEventHandlers();
        }
        return this._Tracking;
      }

      set
      {
        if (this._Tracking != null)
          this.UnsetChildCollectionEventHandlers(this._Tracking);

        this._Tracking = value;
        this.SetTrackingEventHandlers();
      }
    }

    protected virtual global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Docflow.IOfficialDocumentTracking> CreateTrackingCollection()
    {
      return new global::Sungero.Domain.ChildEntityCollection<global::Sungero.Docflow.IOfficialDocumentTracking>() { RootEntity = this };
    }

    private void SetTrackingEventHandlers()
    {
      this.SetChildCollectionEventHandlers(this._Tracking, "Tracking");

      var changeNotifier = (global::Sungero.Domain.Shared.INotifyChildEntityCollectionChanged)this._Tracking;
      changeNotifier.Added += this.TrackingAddedHandler;
      changeNotifier.Deleted += this.TrackingDeletedHandler;
      changeNotifier.Added += this.TrackingCollectionUpdateEventHandler;
      changeNotifier.Deleted += this.TrackingCollectionUpdateEventHandler;
      changeNotifier.Updated += this.TrackingCollectionUpdateEventHandler;
    }

    private void TrackingCollectionUpdateEventHandler(object sender, global::Sungero.Domain.Shared.BaseChildEntityEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      if (this.IsPropertyChangedHandlerEnabled)
        this.TrackingChangedHandler();
    }


    protected override global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Content.IElectronicDocumentVersions> CreateVersionsCollection()
    {
      return new global::Sungero.Domain.ChildEntityCollection<global::Sungero.Docflow.IOfficialDocumentVersions>() { RootEntity = this };
    }


    protected override global::Sungero.Domain.Shared.EntityCreatingFromServerHandler CreateCreatingFromServerHandler(
      global::Sungero.Domain.Shared.IEntity entitySource)
    {
      return new global::Sungero.Docflow.OfficialDocumentCreatingFromServerHandler((global::Sungero.Docflow.IOfficialDocument)entitySource, this.Info);
    }

    #region Framework events

    protected void RegistrationNumberChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.RegistrationNumber, this.RegistrationNumber, this);
     ((global::Sungero.Docflow.OfficialDocumentSharedHandlers)this.SharedHandlers).RegistrationNumberChanged(args);
    }

    protected void IndexChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.IntegerPropertyChangedEventArgs(this.State.Properties.Index, this.Index, this);
     ((global::Sungero.Docflow.OfficialDocumentSharedHandlers)this.SharedHandlers).IndexChanged(args);
    }

    protected void RegistrationDateChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.DateTimePropertyChangedEventArgs(this.State.Properties.RegistrationDate, this.RegistrationDate, this);
     ((global::Sungero.Docflow.OfficialDocumentSharedHandlers)this.SharedHandlers).RegistrationDateChanged(args);
    }

    protected void DocumentRegisterChangedHandler()
    {
      var args = new global::Sungero.Docflow.Shared.OfficialDocumentDocumentRegisterChangedEventArgs(this.State.Properties.DocumentRegister, this.DocumentRegister, this);
     ((global::Sungero.Docflow.OfficialDocumentSharedHandlers)this.SharedHandlers).DocumentRegisterChanged(args);
    }

    protected void DeliveryMethodChangedHandler()
    {
      var args = new global::Sungero.Docflow.Shared.OfficialDocumentDeliveryMethodChangedEventArgs(this.State.Properties.DeliveryMethod, this.DeliveryMethod, this);
     ((global::Sungero.Docflow.OfficialDocumentSharedHandlers)this.SharedHandlers).DeliveryMethodChanged(args);
    }

    protected void CaseFileChangedHandler()
    {
      var args = new global::Sungero.Docflow.Shared.OfficialDocumentCaseFileChangedEventArgs(this.State.Properties.CaseFile, this.CaseFile, this);
     ((global::Sungero.Docflow.OfficialDocumentSharedHandlers)this.SharedHandlers).CaseFileChanged(args);
    }

    protected void PlacedToCaseFileDateChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.DateTimePropertyChangedEventArgs(this.State.Properties.PlacedToCaseFileDate, this.PlacedToCaseFileDate, this);
     ((global::Sungero.Docflow.OfficialDocumentSharedHandlers)this.SharedHandlers).PlacedToCaseFileDateChanged(args);
    }

    protected void TrackingChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.CollectionPropertyChangedEventArgs(this);
     ((global::Sungero.Docflow.OfficialDocumentSharedHandlers)this.SharedHandlers).TrackingChanged(args);
    }

    protected void IsReturnRequiredChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.BooleanPropertyChangedEventArgs(this.State.Properties.IsReturnRequired, this.IsReturnRequired, this);
     ((global::Sungero.Docflow.OfficialDocumentSharedHandlers)this.SharedHandlers).IsReturnRequiredChanged(args);
    }

    protected void IsHeldByCounterPartyChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.BooleanPropertyChangedEventArgs(this.State.Properties.IsHeldByCounterParty, this.IsHeldByCounterParty, this);
     ((global::Sungero.Docflow.OfficialDocumentSharedHandlers)this.SharedHandlers).IsHeldByCounterPartyChanged(args);
    }

    protected void DeliveredToChangedHandler()
    {
      var args = new global::Sungero.Docflow.Shared.OfficialDocumentDeliveredToChangedEventArgs(this.State.Properties.DeliveredTo, this.DeliveredTo, this);
     ((global::Sungero.Docflow.OfficialDocumentSharedHandlers)this.SharedHandlers).DeliveredToChanged(args);
    }

    protected void ReturnDeadlineChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.DateTimePropertyChangedEventArgs(this.State.Properties.ReturnDeadline, this.ReturnDeadline, this);
     ((global::Sungero.Docflow.OfficialDocumentSharedHandlers)this.SharedHandlers).ReturnDeadlineChanged(args);
    }

    protected void ReturnDateChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.DateTimePropertyChangedEventArgs(this.State.Properties.ReturnDate, this.ReturnDate, this);
     ((global::Sungero.Docflow.OfficialDocumentSharedHandlers)this.SharedHandlers).ReturnDateChanged(args);
    }

    protected void LifeCycleStateChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.EnumerationPropertyChangedEventArgs(this.State.Properties.LifeCycleState, this.LifeCycleState, this);
     ((global::Sungero.Docflow.OfficialDocumentSharedHandlers)this.SharedHandlers).LifeCycleStateChanged(args);
    }

    protected void RegistrationStateChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.EnumerationPropertyChangedEventArgs(this.State.Properties.RegistrationState, this.RegistrationState, this);
     ((global::Sungero.Docflow.OfficialDocumentSharedHandlers)this.SharedHandlers).RegistrationStateChanged(args);
    }

    protected void InternalApprovalStateChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.EnumerationPropertyChangedEventArgs(this.State.Properties.InternalApprovalState, this.InternalApprovalState, this);
     ((global::Sungero.Docflow.OfficialDocumentSharedHandlers)this.SharedHandlers).InternalApprovalStateChanged(args);
    }

    protected void ExternalApprovalStateChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.EnumerationPropertyChangedEventArgs(this.State.Properties.ExternalApprovalState, this.ExternalApprovalState, this);
     ((global::Sungero.Docflow.OfficialDocumentSharedHandlers)this.SharedHandlers).ExternalApprovalStateChanged(args);
    }

    protected void ExecutionStateChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.EnumerationPropertyChangedEventArgs(this.State.Properties.ExecutionState, this.ExecutionState, this);
     ((global::Sungero.Docflow.OfficialDocumentSharedHandlers)this.SharedHandlers).ExecutionStateChanged(args);
    }

    protected void ControlExecutionStateChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.EnumerationPropertyChangedEventArgs(this.State.Properties.ControlExecutionState, this.ControlExecutionState, this);
     ((global::Sungero.Docflow.OfficialDocumentSharedHandlers)this.SharedHandlers).ControlExecutionStateChanged(args);
    }

    protected void LocationStateChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.TextPropertyChangedEventArgs(this.State.Properties.LocationState, this.LocationState, this);
     ((global::Sungero.Docflow.OfficialDocumentSharedHandlers)this.SharedHandlers).LocationStateChanged(args);
    }

    protected void ResponsibleForReturnEmployeeChangedHandler()
    {
      var args = new global::Sungero.Docflow.Shared.OfficialDocumentResponsibleForReturnEmployeeChangedEventArgs(this.State.Properties.ResponsibleForReturnEmployee, this.ResponsibleForReturnEmployee, this);
     ((global::Sungero.Docflow.OfficialDocumentSharedHandlers)this.SharedHandlers).ResponsibleForReturnEmployeeChanged(args);
    }

    protected void ScheduledReturnDateFromCounterpartyChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.DateTimePropertyChangedEventArgs(this.State.Properties.ScheduledReturnDateFromCounterparty, this.ScheduledReturnDateFromCounterparty, this);
     ((global::Sungero.Docflow.OfficialDocumentSharedHandlers)this.SharedHandlers).ScheduledReturnDateFromCounterpartyChanged(args);
    }

    protected void DocumentKindChangedHandler()
    {
      var args = new global::Sungero.Docflow.Shared.OfficialDocumentDocumentKindChangedEventArgs(this.State.Properties.DocumentKind, this.DocumentKind, this);
     ((global::Sungero.Docflow.OfficialDocumentSharedHandlers)this.SharedHandlers).DocumentKindChanged(args);
    }

    protected void BusinessUnitChangedHandler()
    {
      var args = new global::Sungero.Docflow.Shared.OfficialDocumentBusinessUnitChangedEventArgs(this.State.Properties.BusinessUnit, this.BusinessUnit, this);
     ((global::Sungero.Docflow.OfficialDocumentSharedHandlers)this.SharedHandlers).BusinessUnitChanged(args);
    }

    protected void SubjectChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.Subject, this.Subject, this);
     ((global::Sungero.Docflow.OfficialDocumentSharedHandlers)this.SharedHandlers).SubjectChanged(args);
    }

    protected void NoteChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.Note, this.Note, this);
     ((global::Sungero.Docflow.OfficialDocumentSharedHandlers)this.SharedHandlers).NoteChanged(args);
    }

    protected void OurSignatoryChangedHandler()
    {
      var args = new global::Sungero.Docflow.Shared.OfficialDocumentOurSignatoryChangedEventArgs(this.State.Properties.OurSignatory, this.OurSignatory, this);
     ((global::Sungero.Docflow.OfficialDocumentSharedHandlers)this.SharedHandlers).OurSignatoryChanged(args);
    }

    protected void DocumentGroupChangedHandler()
    {
      var args = new global::Sungero.Docflow.Shared.OfficialDocumentDocumentGroupChangedEventArgs(this.State.Properties.DocumentGroup, this.DocumentGroup, this);
     ((global::Sungero.Docflow.OfficialDocumentSharedHandlers)this.SharedHandlers).DocumentGroupChanged(args);
    }

    protected void AssigneeChangedHandler()
    {
      var args = new global::Sungero.Docflow.Shared.OfficialDocumentAssigneeChangedEventArgs(this.State.Properties.Assignee, this.Assignee, this);
     ((global::Sungero.Docflow.OfficialDocumentSharedHandlers)this.SharedHandlers).AssigneeChanged(args);
    }

    protected void DepartmentChangedHandler()
    {
      var args = new global::Sungero.Docflow.Shared.OfficialDocumentDepartmentChangedEventArgs(this.State.Properties.Department, this.Department, this);
     ((global::Sungero.Docflow.OfficialDocumentSharedHandlers)this.SharedHandlers).DepartmentChanged(args);
    }

    protected void PreparedByChangedHandler()
    {
      var args = new global::Sungero.Docflow.Shared.OfficialDocumentPreparedByChangedEventArgs(this.State.Properties.PreparedBy, this.PreparedBy, this);
     ((global::Sungero.Docflow.OfficialDocumentSharedHandlers)this.SharedHandlers).PreparedByChanged(args);
    }

    protected void ProjectChangedHandler()
    {
      var args = new global::Sungero.Docflow.Shared.OfficialDocumentProjectChangedEventArgs(this.State.Properties.Project, this.Project, this);
     ((global::Sungero.Docflow.OfficialDocumentSharedHandlers)this.SharedHandlers).ProjectChanged(args);
    }

    protected void ExchangeStateChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.EnumerationPropertyChangedEventArgs(this.State.Properties.ExchangeState, this.ExchangeState, this);
     ((global::Sungero.Docflow.OfficialDocumentSharedHandlers)this.SharedHandlers).ExchangeStateChanged(args);
    }

    protected void LeadingDocumentChangedHandler()
    {
      var args = new global::Sungero.Docflow.Shared.OfficialDocumentLeadingDocumentChangedEventArgs(this.State.Properties.LeadingDocument, this.LeadingDocument, this);
     ((global::Sungero.Docflow.OfficialDocumentSharedHandlers)this.SharedHandlers).LeadingDocumentChanged(args);
    }

    protected void VerificationStateChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.EnumerationPropertyChangedEventArgs(this.State.Properties.VerificationState, this.VerificationState, this);
     ((global::Sungero.Docflow.OfficialDocumentSharedHandlers)this.SharedHandlers).VerificationStateChanged(args);
    }

    protected void DocumentDateChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.DateTimePropertyChangedEventArgs(this.State.Properties.DocumentDate, this.DocumentDate, this);
     ((global::Sungero.Docflow.OfficialDocumentSharedHandlers)this.SharedHandlers).DocumentDateChanged(args);
    }

    protected void StorageChangedHandler()
    {
      var args = new global::Sungero.Docflow.Shared.OfficialDocumentStorageChangedEventArgs(this.State.Properties.Storage, this.Storage, this);
     ((global::Sungero.Docflow.OfficialDocumentSharedHandlers)this.SharedHandlers).StorageChanged(args);
    }



    protected override global::Sungero.Content.ElectronicDocumentVersionsSharedCollectionHandlers CreateVersionsAddedHandler(global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.Docflow.OfficialDocumentVersionsSharedCollectionHandlers(this, e.Value, null, e.Source);
    }

    protected override global::Sungero.Content.ElectronicDocumentVersionsSharedCollectionHandlers CreateVersionsDeletedHandler(global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.Docflow.OfficialDocumentVersionsSharedCollectionHandlers(this, null, e.Value, null);
    }



    protected virtual global::Sungero.Docflow.OfficialDocumentTrackingSharedCollectionHandlers CreateTrackingAddedHandler(global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.Docflow.OfficialDocumentTrackingSharedCollectionHandlers(this, e.Value, null, e.Source);
    }

    protected virtual global::Sungero.Docflow.OfficialDocumentTrackingSharedCollectionHandlers CreateTrackingDeletedHandler(global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.Docflow.OfficialDocumentTrackingSharedCollectionHandlers(this, null, e.Value, null);
    }

    protected virtual void TrackingAddedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {  
      var collectionHandlers = this.CreateTrackingAddedHandler(e);
      if (collectionHandlers != null)
      {
        var args = new global::Sungero.Domain.Shared.CollectionPropertyAddedEventArgs(this);
        collectionHandlers.TrackingAdded(args);
      }
    }

    protected virtual void TrackingDeletedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {  
      var collectionHandlers = this.CreateTrackingDeletedHandler(e);
      if (collectionHandlers != null)
      {
        var args = new global::Sungero.Domain.Shared.CollectionPropertyDeletedEventArgs(this);
        collectionHandlers.TrackingDeleted(args);
      }
    }


    #endregion


    public OfficialDocument()
    {
    }

    protected override global::Sungero.Domain.Shared.EntityConvertingFromServerHandler CreateConvertingFromServerHandler(   
      global::Sungero.Domain.Shared.IEntity entitySource)
    {
      return new global::Sungero.Docflow.OfficialDocumentConvertingFromServerHandler((global::Sungero.Content.IElectronicDocument)entitySource, this.Info);
    }

  }
}

// ==================================================================
// OfficialDocumentHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow
{
  public partial class OfficialDocumentDocumentRegisterPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.EntityPropertyFilteringServerHandler
    where T : class, global::Sungero.Docflow.IDocumentRegister
  {
    private global::Sungero.Docflow.IOfficialDocument _obj
    {
      get { return (global::Sungero.Docflow.IOfficialDocument)this.Entity; }
    }

    public OfficialDocumentDocumentRegisterPropertyFilteringServerHandler(global::Sungero.Docflow.IOfficialDocument entity)
      : base(entity)
    {
    }
  }

  public partial class OfficialDocumentDocumentRegisterSearchPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.SearchPropertyFilteringServerHandler
    where T : class, global::Sungero.Docflow.IDocumentRegister
  {

    public virtual global::System.Linq.IQueryable<T> DocumentRegisterSearchDialogFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertySearchDialogFilteringEventArgs e)
    {
      return query;
    }

    public OfficialDocumentDocumentRegisterSearchPropertyFilteringServerHandler()
      : base()
    {
    }
  }

  public partial class OfficialDocumentDeliveryMethodPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.EntityPropertyFilteringServerHandler
    where T : class, global::Sungero.Docflow.IMailDeliveryMethod
  {
    private global::Sungero.Docflow.IOfficialDocument _obj
    {
      get { return (global::Sungero.Docflow.IOfficialDocument)this.Entity; }
    }

    public virtual global::System.Linq.IQueryable<T> DeliveryMethodFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertyFilteringEventArgs e)
    {
      return query;
    }

    public OfficialDocumentDeliveryMethodPropertyFilteringServerHandler(global::Sungero.Docflow.IOfficialDocument entity)
      : base(entity)
    {
    }
  }

  public partial class OfficialDocumentDeliveryMethodSearchPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.SearchPropertyFilteringServerHandler
    where T : class, global::Sungero.Docflow.IMailDeliveryMethod
  {

    public virtual global::System.Linq.IQueryable<T> DeliveryMethodSearchDialogFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertySearchDialogFilteringEventArgs e)
    {
      return query;
    }

    public OfficialDocumentDeliveryMethodSearchPropertyFilteringServerHandler()
      : base()
    {
    }
  }

  public partial class OfficialDocumentCaseFilePropertyFilteringServerHandler<T>
    : global::Sungero.Domain.EntityPropertyFilteringServerHandler
    where T : class, global::Sungero.Docflow.ICaseFile
  {
    private global::Sungero.Docflow.IOfficialDocument _obj
    {
      get { return (global::Sungero.Docflow.IOfficialDocument)this.Entity; }
    }

    public virtual global::System.Linq.IQueryable<T> CaseFileFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertyFilteringEventArgs e)
    {
      return query;
    }

    public OfficialDocumentCaseFilePropertyFilteringServerHandler(global::Sungero.Docflow.IOfficialDocument entity)
      : base(entity)
    {
    }
  }

  public partial class OfficialDocumentCaseFileSearchPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.SearchPropertyFilteringServerHandler
    where T : class, global::Sungero.Docflow.ICaseFile
  {

    public virtual global::System.Linq.IQueryable<T> CaseFileSearchDialogFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertySearchDialogFilteringEventArgs e)
    {
      return query;
    }

    public OfficialDocumentCaseFileSearchPropertyFilteringServerHandler()
      : base()
    {
    }
  }

  public partial class OfficialDocumentDeliveredToPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.EntityPropertyFilteringServerHandler
    where T : class, global::Sungero.Company.IEmployee
  {
    private global::Sungero.Docflow.IOfficialDocument _obj
    {
      get { return (global::Sungero.Docflow.IOfficialDocument)this.Entity; }
    }

    public virtual global::System.Linq.IQueryable<T> DeliveredToFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertyFilteringEventArgs e)
    {
      return query;
    }

    public OfficialDocumentDeliveredToPropertyFilteringServerHandler(global::Sungero.Docflow.IOfficialDocument entity)
      : base(entity)
    {
    }
  }

  public partial class OfficialDocumentDeliveredToSearchPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.SearchPropertyFilteringServerHandler
    where T : class, global::Sungero.CoreEntities.IRecipient
  {

    public virtual global::System.Linq.IQueryable<T> DeliveredToSearchDialogFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertySearchDialogFilteringEventArgs e)
    {
      return query;
    }

    public OfficialDocumentDeliveredToSearchPropertyFilteringServerHandler()
      : base()
    {
    }
  }

  public partial class OfficialDocumentResponsibleForReturnEmployeePropertyFilteringServerHandler<T>
    : global::Sungero.Domain.EntityPropertyFilteringServerHandler
    where T : class, global::Sungero.Company.IEmployee
  {
    private global::Sungero.Docflow.IOfficialDocument _obj
    {
      get { return (global::Sungero.Docflow.IOfficialDocument)this.Entity; }
    }

    public virtual global::System.Linq.IQueryable<T> ResponsibleForReturnEmployeeFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertyFilteringEventArgs e)
    {
      return query;
    }

    public OfficialDocumentResponsibleForReturnEmployeePropertyFilteringServerHandler(global::Sungero.Docflow.IOfficialDocument entity)
      : base(entity)
    {
    }
  }

  public partial class OfficialDocumentResponsibleForReturnEmployeeSearchPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.SearchPropertyFilteringServerHandler
    where T : class, global::Sungero.CoreEntities.IRecipient
  {

    public virtual global::System.Linq.IQueryable<T> ResponsibleForReturnEmployeeSearchDialogFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertySearchDialogFilteringEventArgs e)
    {
      return query;
    }

    public OfficialDocumentResponsibleForReturnEmployeeSearchPropertyFilteringServerHandler()
      : base()
    {
    }
  }

  public partial class OfficialDocumentDocumentKindPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.EntityPropertyFilteringServerHandler
    where T : class, global::Sungero.Docflow.IDocumentKind
  {
    private global::Sungero.Docflow.IOfficialDocument _obj
    {
      get { return (global::Sungero.Docflow.IOfficialDocument)this.Entity; }
    }

    public OfficialDocumentDocumentKindPropertyFilteringServerHandler(global::Sungero.Docflow.IOfficialDocument entity)
      : base(entity)
    {
    }
  }

  public partial class OfficialDocumentDocumentKindSearchPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.SearchPropertyFilteringServerHandler
    where T : class, global::Sungero.Docflow.IDocumentKind
  {

    public OfficialDocumentDocumentKindSearchPropertyFilteringServerHandler()
      : base()
    {
    }
  }

  public partial class OfficialDocumentBusinessUnitPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.EntityPropertyFilteringServerHandler
    where T : class, global::Sungero.Company.IBusinessUnit
  {
    private global::Sungero.Docflow.IOfficialDocument _obj
    {
      get { return (global::Sungero.Docflow.IOfficialDocument)this.Entity; }
    }

    public virtual global::System.Linq.IQueryable<T> BusinessUnitFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertyFilteringEventArgs e)
    {
      return query;
    }

    public OfficialDocumentBusinessUnitPropertyFilteringServerHandler(global::Sungero.Docflow.IOfficialDocument entity)
      : base(entity)
    {
    }
  }

  public partial class OfficialDocumentBusinessUnitSearchPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.SearchPropertyFilteringServerHandler
    where T : class, global::Sungero.Company.IBusinessUnit
  {

    public virtual global::System.Linq.IQueryable<T> BusinessUnitSearchDialogFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertySearchDialogFilteringEventArgs e)
    {
      return query;
    }

    public OfficialDocumentBusinessUnitSearchPropertyFilteringServerHandler()
      : base()
    {
    }
  }

  public partial class OfficialDocumentOurSignatoryPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.EntityPropertyFilteringServerHandler
    where T : class, global::Sungero.Company.IEmployee
  {
    private global::Sungero.Docflow.IOfficialDocument _obj
    {
      get { return (global::Sungero.Docflow.IOfficialDocument)this.Entity; }
    }

    public OfficialDocumentOurSignatoryPropertyFilteringServerHandler(global::Sungero.Docflow.IOfficialDocument entity)
      : base(entity)
    {
    }
  }

  public partial class OfficialDocumentOurSignatorySearchPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.SearchPropertyFilteringServerHandler
    where T : class, global::Sungero.CoreEntities.IRecipient
  {

    public virtual global::System.Linq.IQueryable<T> OurSignatorySearchDialogFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertySearchDialogFilteringEventArgs e)
    {
      return query;
    }

    public OfficialDocumentOurSignatorySearchPropertyFilteringServerHandler()
      : base()
    {
    }
  }

  public partial class OfficialDocumentDocumentGroupPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.EntityPropertyFilteringServerHandler
    where T : class, global::Sungero.Docflow.IDocumentGroupBase
  {
    private global::Sungero.Docflow.IOfficialDocument _obj
    {
      get { return (global::Sungero.Docflow.IOfficialDocument)this.Entity; }
    }

    public OfficialDocumentDocumentGroupPropertyFilteringServerHandler(global::Sungero.Docflow.IOfficialDocument entity)
      : base(entity)
    {
    }
  }

  public partial class OfficialDocumentDocumentGroupSearchPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.SearchPropertyFilteringServerHandler
    where T : class, global::Sungero.Docflow.IDocumentGroupBase
  {

    public virtual global::System.Linq.IQueryable<T> DocumentGroupSearchDialogFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertySearchDialogFilteringEventArgs e)
    {
      return query;
    }

    public OfficialDocumentDocumentGroupSearchPropertyFilteringServerHandler()
      : base()
    {
    }
  }

  public partial class OfficialDocumentAssigneePropertyFilteringServerHandler<T>
    : global::Sungero.Domain.EntityPropertyFilteringServerHandler
    where T : class, global::Sungero.Company.IEmployee
  {
    private global::Sungero.Docflow.IOfficialDocument _obj
    {
      get { return (global::Sungero.Docflow.IOfficialDocument)this.Entity; }
    }

    public virtual global::System.Linq.IQueryable<T> AssigneeFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertyFilteringEventArgs e)
    {
      return query;
    }

    public OfficialDocumentAssigneePropertyFilteringServerHandler(global::Sungero.Docflow.IOfficialDocument entity)
      : base(entity)
    {
    }
  }

  public partial class OfficialDocumentAssigneeSearchPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.SearchPropertyFilteringServerHandler
    where T : class, global::Sungero.CoreEntities.IRecipient
  {

    public virtual global::System.Linq.IQueryable<T> AssigneeSearchDialogFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertySearchDialogFilteringEventArgs e)
    {
      return query;
    }

    public OfficialDocumentAssigneeSearchPropertyFilteringServerHandler()
      : base()
    {
    }
  }

  public partial class OfficialDocumentDepartmentPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.EntityPropertyFilteringServerHandler
    where T : class, global::Sungero.Company.IDepartment
  {
    private global::Sungero.Docflow.IOfficialDocument _obj
    {
      get { return (global::Sungero.Docflow.IOfficialDocument)this.Entity; }
    }

    public virtual global::System.Linq.IQueryable<T> DepartmentFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertyFilteringEventArgs e)
    {
      return query;
    }

    public OfficialDocumentDepartmentPropertyFilteringServerHandler(global::Sungero.Docflow.IOfficialDocument entity)
      : base(entity)
    {
    }
  }

  public partial class OfficialDocumentDepartmentSearchPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.SearchPropertyFilteringServerHandler
    where T : class, global::Sungero.Company.IDepartment
  {

    public virtual global::System.Linq.IQueryable<T> DepartmentSearchDialogFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertySearchDialogFilteringEventArgs e)
    {
      return query;
    }

    public OfficialDocumentDepartmentSearchPropertyFilteringServerHandler()
      : base()
    {
    }
  }

  public partial class OfficialDocumentPreparedByPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.EntityPropertyFilteringServerHandler
    where T : class, global::Sungero.Company.IEmployee
  {
    private global::Sungero.Docflow.IOfficialDocument _obj
    {
      get { return (global::Sungero.Docflow.IOfficialDocument)this.Entity; }
    }

    public virtual global::System.Linq.IQueryable<T> PreparedByFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertyFilteringEventArgs e)
    {
      return query;
    }

    public OfficialDocumentPreparedByPropertyFilteringServerHandler(global::Sungero.Docflow.IOfficialDocument entity)
      : base(entity)
    {
    }
  }

  public partial class OfficialDocumentPreparedBySearchPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.SearchPropertyFilteringServerHandler
    where T : class, global::Sungero.CoreEntities.IRecipient
  {

    public virtual global::System.Linq.IQueryable<T> PreparedBySearchDialogFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertySearchDialogFilteringEventArgs e)
    {
      return query;
    }

    public OfficialDocumentPreparedBySearchPropertyFilteringServerHandler()
      : base()
    {
    }
  }

  public partial class OfficialDocumentProjectPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.EntityPropertyFilteringServerHandler
    where T : class, global::Sungero.Docflow.IProjectBase
  {
    private global::Sungero.Docflow.IOfficialDocument _obj
    {
      get { return (global::Sungero.Docflow.IOfficialDocument)this.Entity; }
    }

    public OfficialDocumentProjectPropertyFilteringServerHandler(global::Sungero.Docflow.IOfficialDocument entity)
      : base(entity)
    {
    }
  }

  public partial class OfficialDocumentProjectSearchPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.SearchPropertyFilteringServerHandler
    where T : class, global::Sungero.Docflow.IProjectBase
  {

    public virtual global::System.Linq.IQueryable<T> ProjectSearchDialogFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertySearchDialogFilteringEventArgs e)
    {
      return query;
    }

    public OfficialDocumentProjectSearchPropertyFilteringServerHandler()
      : base()
    {
    }
  }

  public partial class OfficialDocumentLeadingDocumentPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.EntityPropertyFilteringServerHandler
    where T : class, global::Sungero.Docflow.IOfficialDocument
  {
    private global::Sungero.Docflow.IOfficialDocument _obj
    {
      get { return (global::Sungero.Docflow.IOfficialDocument)this.Entity; }
    }

    public virtual global::System.Linq.IQueryable<T> LeadingDocumentFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertyFilteringEventArgs e)
    {
      return query;
    }

    public OfficialDocumentLeadingDocumentPropertyFilteringServerHandler(global::Sungero.Docflow.IOfficialDocument entity)
      : base(entity)
    {
    }
  }

  public partial class OfficialDocumentLeadingDocumentSearchPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.SearchPropertyFilteringServerHandler
    where T : class, global::Sungero.Docflow.IOfficialDocument
  {

    public virtual global::System.Linq.IQueryable<T> LeadingDocumentSearchDialogFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertySearchDialogFilteringEventArgs e)
    {
      return query;
    }

    public OfficialDocumentLeadingDocumentSearchPropertyFilteringServerHandler()
      : base()
    {
    }
  }

  public partial class OfficialDocumentStoragePropertyFilteringServerHandler<T>
    : global::Sungero.Domain.EntityPropertyFilteringServerHandler
    where T : class, global::Sungero.CoreEntities.IStorage
  {
    private global::Sungero.Docflow.IOfficialDocument _obj
    {
      get { return (global::Sungero.Docflow.IOfficialDocument)this.Entity; }
    }

    public virtual global::System.Linq.IQueryable<T> StorageFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertyFilteringEventArgs e)
    {
      return query;
    }

    public OfficialDocumentStoragePropertyFilteringServerHandler(global::Sungero.Docflow.IOfficialDocument entity)
      : base(entity)
    {
    }
  }

  public partial class OfficialDocumentStorageSearchPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.SearchPropertyFilteringServerHandler
    where T : class, global::Sungero.CoreEntities.IStorage
  {

    public virtual global::System.Linq.IQueryable<T> StorageSearchDialogFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertySearchDialogFilteringEventArgs e)
    {
      return query;
    }

    public OfficialDocumentStorageSearchPropertyFilteringServerHandler()
      : base()
    {
    }
  }



  public partial class OfficialDocumentFilteringServerHandler<T>
    : global::Sungero.Domain.EntityFilteringServerHandler<T>  
    where T : class, global::Sungero.Docflow.IOfficialDocument
  {
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    protected new global::Sungero.Docflow.IOfficialDocumentFilterState Filter { get; private set; }

    private global::Sungero.Docflow.IOfficialDocumentFilterState _filter
    {
      get
      {
        return this.Filter;
      }
    }

    public OfficialDocumentFilteringServerHandler(global::Sungero.Docflow.IOfficialDocumentFilterState filter)
    : base()
    {
      this.Filter = filter;
    }

    protected OfficialDocumentFilteringServerHandler()
    {
    }

    public override global::System.Linq.IQueryable<T> Filtering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.FilteringEventArgs e)
    {
      return query;
    }


  }

  public partial class OfficialDocumentSearchDialogServerHandler : global::Sungero.Content.ElectronicDocumentSearchDialogServerHandler
   {
     private global::Sungero.Docflow.Server.OfficialDocumentSearchDialogModel _dialog
     {
       get
       {
         return (global::Sungero.Docflow.Server.OfficialDocumentSearchDialogModel)this.Dialog;
       }
     }

     public OfficialDocumentSearchDialogServerHandler(global::Sungero.Docflow.Server.OfficialDocumentSearchDialogModel dialog)
       : base(dialog)
     {
     }
   }

  public partial class OfficialDocumentServerHandlers : global::Sungero.Content.ElectronicDocumentServerHandlers
  {
    private global::Sungero.Docflow.IOfficialDocument _obj
    {
      get { return (global::Sungero.Docflow.IOfficialDocument)this.Entity; }
    }

    public OfficialDocumentServerHandlers(global::Sungero.Docflow.IOfficialDocument entity)
      : base(entity)
    {
    }
  }

  public partial class OfficialDocumentCreatingFromServerHandler : global::Sungero.Content.ElectronicDocumentCreatingFromServerHandler
  {
    private global::Sungero.Docflow.IOfficialDocument _source
    {
      get { return (global::Sungero.Docflow.IOfficialDocument)this.Source; }
    }

    private global::Sungero.Docflow.IOfficialDocumentInfo _info
    {
      get { return (global::Sungero.Docflow.IOfficialDocumentInfo)this._Info; }
    }

    public OfficialDocumentCreatingFromServerHandler(global::Sungero.Docflow.IOfficialDocument source, global::Sungero.Docflow.IOfficialDocumentInfo info)
      : base(source, info)
    {
    }
  }

}

// ==================================================================
// OfficialDocumentEventArgs.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
}

// ==================================================================
// OfficialDocumentAccessRights.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
  public class OfficialDocumentAccessRights : 
    Sungero.Content.Server.ElectronicDocumentAccessRights, Sungero.Docflow.IOfficialDocumentAccessRights
  {
           public bool CanRegister(global::Sungero.CoreEntities.IRecipient recipient)
           {
              return this.IsGranted(global::Sungero.Docflow.OfficialDocumentOperations.Register, recipient);
           }
           public bool CanRegister()
           {
              return this.IsGranted(global::Sungero.Docflow.OfficialDocumentOperations.Register, null);
           }
           public global::System.Collections.Generic.IEnumerable<global::Sungero.CoreEntities.IRecipient> GetSubstitutedWhoCanRegister()
           {
              return this.GetSubstitutedWhoIsGranted(global::Sungero.Docflow.OfficialDocumentOperations.Register);
           }
           public bool CanSendByExchange(global::Sungero.CoreEntities.IRecipient recipient)
           {
              return this.IsGranted(global::Sungero.Docflow.OfficialDocumentOperations.SendByExchange, recipient);
           }
           public bool CanSendByExchange()
           {
              return this.IsGranted(global::Sungero.Docflow.OfficialDocumentOperations.SendByExchange, null);
           }
           public global::System.Collections.Generic.IEnumerable<global::Sungero.CoreEntities.IRecipient> GetSubstitutedWhoCanSendByExchange()
           {
              return this.GetSubstitutedWhoIsGranted(global::Sungero.Docflow.OfficialDocumentOperations.SendByExchange);
           }


    public OfficialDocumentAccessRights(global::Sungero.Domain.Shared.IEntity entity) : base(entity)
    {
    }
  }

  public class OfficialDocumentTypeAccessRights : 
    Sungero.Content.Server.ElectronicDocumentTypeAccessRights, Sungero.Docflow.IOfficialDocumentAccessRights
  {
           public bool CanRegister(global::Sungero.CoreEntities.IRecipient recipient)
           {
              return this.IsGranted(global::Sungero.Docflow.OfficialDocumentOperations.Register, recipient);
           }
           public bool CanRegister()
           {
              return this.IsGranted(global::Sungero.Docflow.OfficialDocumentOperations.Register, null);
           }
           public global::System.Collections.Generic.IEnumerable<global::Sungero.CoreEntities.IRecipient> GetSubstitutedWhoCanRegister()
           {
              return this.GetSubstitutedWhoIsGranted(global::Sungero.Docflow.OfficialDocumentOperations.Register);
           }
           public bool CanSendByExchange(global::Sungero.CoreEntities.IRecipient recipient)
           {
              return this.IsGranted(global::Sungero.Docflow.OfficialDocumentOperations.SendByExchange, recipient);
           }
           public bool CanSendByExchange()
           {
              return this.IsGranted(global::Sungero.Docflow.OfficialDocumentOperations.SendByExchange, null);
           }
           public global::System.Collections.Generic.IEnumerable<global::Sungero.CoreEntities.IRecipient> GetSubstitutedWhoCanSendByExchange()
           {
              return this.GetSubstitutedWhoIsGranted(global::Sungero.Docflow.OfficialDocumentOperations.SendByExchange);
           }


    public OfficialDocumentTypeAccessRights(global::System.Type entityType) : base(entityType)
    {
    }
  }
}

// ==================================================================
// OfficialDocumentRepositoryImplementer.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
    public class OfficialDocumentRepositoryImplementer<T> : 
      global::Sungero.Content.Server.ElectronicDocumentRepositoryImplementer<T>,
      global::Sungero.Docflow.IOfficialDocumentRepositoryImplementer<T>
      where T : global::Sungero.Docflow.IOfficialDocument 
    {
       public new global::Sungero.Docflow.IOfficialDocumentAccessRights AccessRights
       {
          get { return (global::Sungero.Docflow.IOfficialDocumentAccessRights)base.AccessRights; }
       }

       public new global::Sungero.Docflow.IOfficialDocumentInfo Info
       {
          get { return (global::Sungero.Docflow.IOfficialDocumentInfo)base.Info; }
       }

       protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
       {
         return new global::Sungero.Docflow.Server.OfficialDocumentTypeAccessRights(typeof(T));
       }
    }
}

// ==================================================================
// OfficialDocumentPanelNavigationFilters.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
}

// ==================================================================
// OfficialDocumentServerFunctions.g.cs
// ==================================================================

namespace Sungero.Docflow.Server
{
  public partial class OfficialDocumentFunctions : global::Sungero.Content.Server.ElectronicDocumentFunctions
  {
    private global::Sungero.Docflow.IOfficialDocument _obj
    {
      get { return (global::Sungero.Docflow.IOfficialDocument)this.Entity; }
    }

    public OfficialDocumentFunctions(global::Sungero.Docflow.IOfficialDocument entity) : base(entity) { }
  }
}

// ==================================================================
// OfficialDocumentFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Functions
{
  internal static class OfficialDocument
  {
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static  global::Sungero.Core.StateView GetStateViewXml(global::Sungero.Docflow.IOfficialDocument officialDocument)
    {
      var functions = (global::Sungero.Docflow.Server.OfficialDocumentFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.ServerFunctions;
      return functions.GetStateViewXml();
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    internal static  global::Sungero.Core.StateView GetStateView(global::Sungero.Content.IElectronicDocument document)
    {
      return global::Sungero.Docflow.Server.OfficialDocumentFunctions.GetStateView(document);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static  global::Sungero.Core.StateView GetDocumentSummary(global::Sungero.Docflow.IOfficialDocument officialDocument)
    {
      var functions = (global::Sungero.Docflow.Server.OfficialDocumentFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.ServerFunctions;
      return functions.GetDocumentSummary();
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    internal static  void AddUserActionBlock(System.Object stateView, global::Sungero.CoreEntities.IUser user, global::System.String text, global::System.DateTime date, global::Sungero.Domain.Shared.IEntity entity, global::System.String comment, global::Sungero.CoreEntities.IUser substituted)
    {
    global::Sungero.Docflow.Server.OfficialDocumentFunctions.AddUserActionBlock(stateView, user, text, date, entity, comment, substituted);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    internal static  global::System.String GetAuthor(global::Sungero.CoreEntities.IUser author, global::Sungero.CoreEntities.IUser startedBy)
    {
      return global::Sungero.Docflow.Server.OfficialDocumentFunctions.GetAuthor(author, startedBy);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    internal static  global::System.String GetUserActionText(global::Sungero.CoreEntities.IUser user, global::System.String text, global::Sungero.CoreEntities.IUser substituted)
    {
      return global::Sungero.Docflow.Server.OfficialDocumentFunctions.GetUserActionText(user, text, substituted);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    internal static  global::System.Int32 DurationInWorkdays(global::System.DateTime startDate, global::System.DateTime endDate, global::Sungero.CoreEntities.IUser user)
    {
      return global::Sungero.Docflow.Server.OfficialDocumentFunctions.DurationInWorkdays(startDate, endDate, user);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    internal static  void AddDeadlineHeaderToRight(Sungero.Core.StateBlock block, global::System.DateTime deadline, global::Sungero.CoreEntities.IUser user)
    {
    global::Sungero.Docflow.Server.OfficialDocumentFunctions.AddDeadlineHeaderToRight(block, deadline, user);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    internal static  global::System.String GetPerformersInText(global::System.Collections.Generic.List<global::Sungero.Company.IEmployee> employees)
    {
      return global::Sungero.Docflow.Server.OfficialDocumentFunctions.GetPerformersInText(employees);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    internal static  global::CommonLibrary.PersonFullName FullName(global::Sungero.Company.IEmployee employee)
    {
      return global::Sungero.Docflow.Server.OfficialDocumentFunctions.FullName(employee);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    internal static  global::CommonLibrary.PersonFullName FullName(global::Sungero.Parties.IContact contact)
    {
      return global::Sungero.Docflow.Server.OfficialDocumentFunctions.FullName(contact);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    internal static  global::CommonLibrary.PersonFullName FullName(global::Sungero.Parties.IPerson person)
    {
      return global::Sungero.Docflow.Server.OfficialDocumentFunctions.FullName(person);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    internal static  global::CommonLibrary.PersonFullName LastNameAndInitials(global::Sungero.Company.IEmployee employee)
    {
      return global::Sungero.Docflow.Server.OfficialDocumentFunctions.LastNameAndInitials(employee);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    internal static  global::CommonLibrary.PersonFullName LastNameAndInitials(global::Sungero.Parties.IContact contact)
    {
      return global::Sungero.Docflow.Server.OfficialDocumentFunctions.LastNameAndInitials(contact);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    internal static  global::CommonLibrary.PersonFullName LastNameAndInitials(global::Sungero.Parties.IPerson counterparty)
    {
      return global::Sungero.Docflow.Server.OfficialDocumentFunctions.LastNameAndInitials(counterparty);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    internal static  global::CommonLibrary.PersonFullName InitialsAndLastName(global::Sungero.Company.IEmployee employee)
    {
      return global::Sungero.Docflow.Server.OfficialDocumentFunctions.InitialsAndLastName(employee);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    internal static  global::CommonLibrary.PersonFullName InitialsAndLastName(global::Sungero.Parties.IContact contact)
    {
      return global::Sungero.Docflow.Server.OfficialDocumentFunctions.InitialsAndLastName(contact);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    internal static  global::CommonLibrary.PersonFullName InitialsAndLastName(global::Sungero.Parties.IPerson person)
    {
      return global::Sungero.Docflow.Server.OfficialDocumentFunctions.InitialsAndLastName(person);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    internal static  global::System.String Addenda(global::Sungero.Docflow.IOfficialDocument document)
    {
      return global::Sungero.Docflow.Server.OfficialDocumentFunctions.Addenda(document);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    internal static  global::System.String PerformerNotes(global::Sungero.Docflow.IOfficialDocument document)
    {
      return global::Sungero.Docflow.Server.OfficialDocumentFunctions.PerformerNotes(document);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static  global::Sungero.CoreEntities.IRelationType GetRelationTypeByName(global::System.String relationName)
    {
      return global::Sungero.Docflow.Server.OfficialDocumentFunctions.GetRelationTypeByName(relationName);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static  global::System.Collections.Generic.List<global::Sungero.Docflow.IOfficialDocument> GetRelatedDocumentsByRelationType(global::Sungero.Docflow.IOfficialDocument document, global::System.String relationTypeName, global::System.Boolean withVersion)
    {
      return global::Sungero.Docflow.Server.OfficialDocumentFunctions.GetRelatedDocumentsByRelationType(document, relationTypeName, withVersion);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static  global::Sungero.Docflow.Structures.OfficialDocument.DialogParams GetRegistrationDialogParams(global::Sungero.Docflow.IOfficialDocument document, global::Sungero.Core.Enumeration operation)
    {
      return global::Sungero.Docflow.Server.OfficialDocumentFunctions.GetRegistrationDialogParams(document, operation);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static  global::System.Boolean IsNumberValidationDisabled(global::Sungero.Docflow.IOfficialDocument officialDocument)
    {
      var functions = (global::Sungero.Docflow.Server.OfficialDocumentFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.ServerFunctions;
      return functions.IsNumberValidationDisabled();
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    internal static  global::System.String GetLocationState(global::Sungero.Docflow.IOfficialDocument officialDocument)
    {
      var functions = (global::Sungero.Docflow.Server.OfficialDocumentFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.ServerFunctions;
      return functions.GetLocationState();
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    internal static  global::System.Boolean IsOnlyVersionChanged(global::Sungero.Docflow.IOfficialDocument officialDocument)
    {
      var functions = (global::Sungero.Docflow.Server.OfficialDocumentFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.ServerFunctions;
      return functions.IsOnlyVersionChanged();
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    internal static  global::System.String GetExchangeLocation(global::Sungero.Docflow.IOfficialDocument officialDocument)
    {
      var functions = (global::Sungero.Docflow.Server.OfficialDocumentFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.ServerFunctions;
      return functions.GetExchangeLocation();
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static  global::System.Collections.Generic.List<global::System.Int32> GetTaskIdsWhereDocumentInRequredGroup(global::Sungero.Docflow.IOfficialDocument officialDocument)
    {
      var functions = (global::Sungero.Docflow.Server.OfficialDocumentFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.ServerFunctions;
      return functions.GetTaskIdsWhereDocumentInRequredGroup();
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static  global::System.Boolean HasSignatureForApprovalSheetReport(global::Sungero.Docflow.IOfficialDocument officialDocument)
    {
      var functions = (global::Sungero.Docflow.Server.OfficialDocumentFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.ServerFunctions;
      return functions.HasSignatureForApprovalSheetReport();
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static  global::System.Collections.Generic.List<global::Sungero.RecordManagement.IAcquaintanceTask> GetAcquaintanceTasks(global::Sungero.Docflow.IOfficialDocument officialDocument)
    {
      var functions = (global::Sungero.Docflow.Server.OfficialDocumentFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.ServerFunctions;
      return functions.GetAcquaintanceTasks();
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    internal static  global::Sungero.Company.IEmployee GetBusinessUnitCEO(global::Sungero.Company.IEmployee employee, global::Sungero.Docflow.IOfficialDocument document)
    {
      return global::Sungero.Docflow.Server.OfficialDocumentFunctions.GetBusinessUnitCEO(employee, document);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static  global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.SignatureSetting.Signatory> GetSignatories(global::Sungero.Docflow.IOfficialDocument officialDocument)
    {
      var functions = (global::Sungero.Docflow.Server.OfficialDocumentFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.ServerFunctions;
      return functions.GetSignatories();
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    internal static  global::System.Collections.Generic.List<global::System.Int32> GetAllRecipientMembersIdsInGroup(global::System.Int32 groupId)
    {
      return global::Sungero.Docflow.Server.OfficialDocumentFunctions.GetAllRecipientMembersIdsInGroup(groupId);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static  global::System.Collections.Generic.List<global::System.Int32> GetEmployeeSignatories(global::Sungero.Docflow.IOfficialDocument officialDocument)
    {
      var functions = (global::Sungero.Docflow.Server.OfficialDocumentFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.ServerFunctions;
      return functions.GetEmployeeSignatories();
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static  global::System.Collections.Generic.List<global::Sungero.Docflow.ISignatureSetting> GetSignatureSettings(global::Sungero.Docflow.IOfficialDocument officialDocument)
    {
      var functions = (global::Sungero.Docflow.Server.OfficialDocumentFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.ServerFunctions;
      return functions.GetSignatureSettings();
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static  global::System.Collections.Generic.List<global::Sungero.Docflow.ISignatureSetting> GetSignatureSettings(global::Sungero.Docflow.IOfficialDocument officialDocument, global::Sungero.Company.IEmployee employee)
    {
      var functions = (global::Sungero.Docflow.Server.OfficialDocumentFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.ServerFunctions;
      return functions.GetSignatureSettings(employee);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static  void SetInternalApprovalStateToSigned(global::Sungero.Docflow.IOfficialDocument officialDocument)
    {
      var functions = (global::Sungero.Docflow.Server.OfficialDocumentFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.ServerFunctions;
    functions.SetInternalApprovalStateToSigned();
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static  void SetDocumentSignatory(global::Sungero.Docflow.IOfficialDocument officialDocument, global::Sungero.Company.IEmployee employee)
    {
      var functions = (global::Sungero.Docflow.Server.OfficialDocumentFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.ServerFunctions;
    functions.SetDocumentSignatory(employee);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static  global::System.Collections.Generic.List<global::Sungero.Workflow.IAssignment> GetReturnAssignments(global::Sungero.Workflow.ITask returnTask)
    {
      return global::Sungero.Docflow.Server.OfficialDocumentFunctions.GetReturnAssignments(returnTask);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static  global::System.Collections.Generic.List<global::Sungero.Workflow.IAssignment> GetReturnAssignments(global::System.Collections.Generic.List<global::Sungero.Workflow.ITask> returnTasks)
    {
      return global::Sungero.Docflow.Server.OfficialDocumentFunctions.GetReturnAssignments(returnTasks);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static  global::System.Collections.Generic.List<global::System.String> GetApprovalValidationErrors(global::Sungero.Docflow.IOfficialDocument officialDocument, global::System.Boolean checkSignatureSettings)
    {
      var functions = (global::Sungero.Docflow.Server.OfficialDocumentFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.ServerFunctions;
      return functions.GetApprovalValidationErrors(checkSignatureSettings);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    internal static  global::System.Collections.Generic.List<global::System.String> GetDocumentLockErrors(global::Sungero.Docflow.IOfficialDocument officialDocument)
    {
      var functions = (global::Sungero.Docflow.Server.OfficialDocumentFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.ServerFunctions;
      return functions.GetDocumentLockErrors();
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    internal static  global::System.Nullable<global::Sungero.Core.Enumeration> GetHistoryOperationByLifeCycleState(global::System.Nullable<global::Sungero.Core.Enumeration> state, global::System.String statePrefix, global::System.Boolean isUpdateAction)
    {
      return global::Sungero.Docflow.Server.OfficialDocumentFunctions.GetHistoryOperationByLifeCycleState(state, statePrefix, isUpdateAction);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static  global::System.Collections.Generic.List<global::Sungero.Docflow.IApprovalRuleBase> GetApprovalRules(global::Sungero.Docflow.IOfficialDocument officialDocument)
    {
      var functions = (global::Sungero.Docflow.Server.OfficialDocumentFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.ServerFunctions;
      return functions.GetApprovalRules();
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    internal static  global::Sungero.Docflow.IDocumentKind GetDefaultDocumentKind(global::Sungero.Docflow.IOfficialDocument officialDocument)
    {
      var functions = (global::Sungero.Docflow.Server.OfficialDocumentFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.ServerFunctions;
      return functions.GetDefaultDocumentKind();
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static  global::System.Boolean CanChangeAssignee(global::Sungero.Docflow.IOfficialDocument officialDocument)
    {
      var functions = (global::Sungero.Docflow.Server.OfficialDocumentFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.ServerFunctions;
      return functions.CanChangeAssignee();
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    internal static  global::System.Boolean NeedValidateOurSignatorySignatureSetting(global::Sungero.Docflow.IOfficialDocument officialDocument)
    {
      var functions = (global::Sungero.Docflow.Server.OfficialDocumentFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.ServerFunctions;
      return functions.NeedValidateOurSignatorySignatureSetting();
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static  global::System.Boolean CanSendAnswer(global::Sungero.Docflow.IOfficialDocument officialDocument)
    {
      var functions = (global::Sungero.Docflow.Server.OfficialDocumentFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.ServerFunctions;
      return functions.CanSendAnswer();
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    internal static  void SendAnswer(global::Sungero.Docflow.IOfficialDocument officialDocument, global::Sungero.ExchangeCore.IBusinessUnitBox box, global::Sungero.Parties.ICounterparty party, global::Sungero.CoreEntities.ICertificate certificate, global::System.Boolean isAgent)
    {
      var functions = (global::Sungero.Docflow.Server.OfficialDocumentFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.ServerFunctions;
    functions.SendAnswer(box, party, certificate, isAgent);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    internal static  global::System.Boolean TryExternalRegister(global::Sungero.Docflow.IOfficialDocument officialDocument, global::System.String number, global::System.Nullable<global::System.DateTime> date)
    {
      var functions = (global::Sungero.Docflow.Server.OfficialDocumentFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.ServerFunctions;
      return functions.TryExternalRegister(number, date);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static  global::Sungero.Docflow.IOfficialDocument GetOfficialDocument(global::System.Int32 id)
    {
      return global::Sungero.Docflow.Server.OfficialDocumentFunctions.GetOfficialDocument(id);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static  global::Sungero.Docflow.IOfficialDocument CreateReplyDocument(global::Sungero.Docflow.IOfficialDocument officialDocument)
    {
      var functions = (global::Sungero.Docflow.Server.OfficialDocumentFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.ServerFunctions;
      return functions.CreateReplyDocument();
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    internal static  void GrantAccessRightsToActionItemAttachment(global::Sungero.Docflow.IOfficialDocument officialDocument, global::Sungero.Company.IEmployee employee)
    {
      var functions = (global::Sungero.Docflow.Server.OfficialDocumentFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.ServerFunctions;
    functions.GrantAccessRightsToActionItemAttachment(employee);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    internal static  void CreatePdfPublicBodyFromHtml(global::Sungero.Docflow.IOfficialDocument officialDocument, global::System.String sourceHtml)
    {
      var functions = (global::Sungero.Docflow.Server.OfficialDocumentFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.ServerFunctions;
    functions.CreatePdfPublicBodyFromHtml(sourceHtml);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static  void DeleteDocument(global::System.Int32 documentId)
    {
    global::Sungero.Docflow.Server.OfficialDocumentFunctions.DeleteDocument(documentId);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static  global::System.Boolean TryDeleteActionItemTask(global::System.Int32 actionItemId)
    {
      return global::Sungero.Docflow.Server.OfficialDocumentFunctions.TryDeleteActionItemTask(actionItemId);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static  global::System.Linq.IQueryable<global::Sungero.RecordManagement.IActionItemExecutionTask> GetCreatedActionItems(global::Sungero.Docflow.IOfficialDocument officialDocument)
    {
      var functions = (global::Sungero.Docflow.Server.OfficialDocumentFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.ServerFunctions;
      return functions.GetCreatedActionItems();
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static  global::System.Collections.Generic.List<global::Sungero.RecordManagement.IActionItemExecutionTask> CreateActionItemsFromDocument(global::Sungero.Docflow.IOfficialDocument officialDocument)
    {
      var functions = (global::Sungero.Docflow.Server.OfficialDocumentFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.ServerFunctions;
      return functions.CreateActionItemsFromDocument();
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    internal static  void FillActionItemExecutionTaskOnCreatedFromDocument(global::Sungero.Docflow.IOfficialDocument officialDocument, global::Sungero.RecordManagement.IActionItemExecutionTask actionItem)
    {
      var functions = (global::Sungero.Docflow.Server.OfficialDocumentFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.ServerFunctions;
    functions.FillActionItemExecutionTaskOnCreatedFromDocument(actionItem);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static  global::System.Collections.Generic.List<global::Sungero.RecordManagement.IActionItemExecutionTask> GetActionItemsExecutionTasks(global::System.Collections.Generic.List<global::System.Int32> ids)
    {
      return global::Sungero.Docflow.Server.OfficialDocumentFunctions.GetActionItemsExecutionTasks(ids);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static  global::Sungero.Docflow.Structures.OfficialDocument.СonversionToPdfResult ConvertToPdfWithSignatureMark(global::Sungero.Docflow.IOfficialDocument officialDocument)
    {
      var functions = (global::Sungero.Docflow.Server.OfficialDocumentFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.ServerFunctions;
      return functions.ConvertToPdfWithSignatureMark();
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static  global::Sungero.Docflow.Structures.OfficialDocument.СonversionToPdfResult ConvertToPdfAndAddSignatureMark(global::Sungero.Docflow.IOfficialDocument officialDocument, global::System.Int32 versionId)
    {
      var functions = (global::Sungero.Docflow.Server.OfficialDocumentFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.ServerFunctions;
      return functions.ConvertToPdfAndAddSignatureMark(versionId);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    internal static  global::Sungero.Docflow.Structures.OfficialDocument.СonversionToPdfResult ValidateDocumentBeforeConvertion(global::Sungero.Docflow.IOfficialDocument officialDocument, global::System.Int32 versionId)
    {
      var functions = (global::Sungero.Docflow.Server.OfficialDocumentFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.ServerFunctions;
      return functions.ValidateDocumentBeforeConvertion(versionId);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    internal static  global::Sungero.Docflow.Structures.OfficialDocument.СonversionToPdfResult GeneratePublicBodyWithSignatureMark(global::Sungero.Docflow.IOfficialDocument officialDocument, global::System.Int32 versionId, global::System.String signatureMark)
    {
      var functions = (global::Sungero.Docflow.Server.OfficialDocumentFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.ServerFunctions;
      return functions.GeneratePublicBodyWithSignatureMark(versionId, signatureMark);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    internal static  global::System.String GetSignatureMarkAsHtml(global::Sungero.Docflow.IOfficialDocument officialDocument, global::System.Int32 versionId)
    {
      var functions = (global::Sungero.Docflow.Server.OfficialDocumentFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.ServerFunctions;
      return functions.GetSignatureMarkAsHtml(versionId);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    internal static  global::Sungero.Docflow.Structures.Module.ICertificateSubject ParseSignatureSubject(global::System.String subject)
    {
      return global::Sungero.Docflow.Server.OfficialDocumentFunctions.ParseSignatureSubject(subject);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    internal static  Sungero.Domain.Shared.ISignature GetSignatureForMark(global::Sungero.Docflow.IOfficialDocument officialDocument, global::System.Int32 versionId)
    {
      var functions = (global::Sungero.Docflow.Server.OfficialDocumentFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.ServerFunctions;
      return functions.GetSignatureForMark(versionId);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    internal static  global::System.Boolean CanConvertToPdfInteractively(global::Sungero.Docflow.IOfficialDocument officialDocument)
    {
      var functions = (global::Sungero.Docflow.Server.OfficialDocumentFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.ServerFunctions;
      return functions.CanConvertToPdfInteractively();
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    internal static  void StoreVerifiedPropertiesValues(global::Sungero.Docflow.IOfficialDocument officialDocument)
    {
      var functions = (global::Sungero.Docflow.Server.OfficialDocumentFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.ServerFunctions;
    functions.StoreVerifiedPropertiesValues();
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static  global::System.Boolean HasApprovalTasksWithCurrentDocument(global::Sungero.Docflow.IOfficialDocument officialDocument)
    {
      var functions = (global::Sungero.Docflow.Server.OfficialDocumentFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.ServerFunctions;
      return functions.HasApprovalTasksWithCurrentDocument();
    }

    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.OfficialDocumentFunctions" />
    internal static  global::System.Int32 GetLeadDocumentId(global::Sungero.Docflow.IOfficialDocument officialDocument)
    {
      var functions = (global::Sungero.Docflow.Shared.OfficialDocumentFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.SharedFunctions;
      return functions.GetLeadDocumentId();
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.OfficialDocumentFunctions" />
    internal static  global::System.String GetLeadDocumentNumber(global::Sungero.Docflow.IOfficialDocument officialDocument)
    {
      var functions = (global::Sungero.Docflow.Shared.OfficialDocumentFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.SharedFunctions;
      return functions.GetLeadDocumentNumber();
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.OfficialDocumentFunctions" />
    internal static  void RegisterDocument(global::Sungero.Docflow.IOfficialDocument document, global::Sungero.Docflow.IDocumentRegister documentRegister, global::System.Nullable<global::System.DateTime> registrationDate, global::System.String registrationNumber, global::System.Nullable<global::System.Boolean> numberReservation, global::System.Boolean needSaveDocument)
    {
    global::Sungero.Docflow.Shared.OfficialDocumentFunctions.RegisterDocument(document, documentRegister, registrationDate, registrationNumber, numberReservation, needSaveDocument);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.OfficialDocumentFunctions" />
    internal static  void FillCaseFileAndDeliveryMethod(global::Sungero.Docflow.IOfficialDocument document, global::Sungero.Docflow.IDocumentRegister documentRegister)
    {
    global::Sungero.Docflow.Shared.OfficialDocumentFunctions.FillCaseFileAndDeliveryMethod(document, documentRegister);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.OfficialDocumentFunctions" />
    internal static  global::System.Boolean CheckRegistrationNumberUnique(global::Sungero.Docflow.IOfficialDocument officialDocument)
    {
      var functions = (global::Sungero.Docflow.Shared.OfficialDocumentFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.SharedFunctions;
      return functions.CheckRegistrationNumberUnique();
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.OfficialDocumentFunctions" />
    internal static  void SetRequiredProperties(global::Sungero.Docflow.IOfficialDocument officialDocument)
    {
      var functions = (global::Sungero.Docflow.Shared.OfficialDocumentFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.SharedFunctions;
    functions.SetRequiredProperties();
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.OfficialDocumentFunctions" />
    internal static  global::System.String GetRegistrationOperation()
    {
      return global::Sungero.Docflow.Shared.OfficialDocumentFunctions.GetRegistrationOperation();
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.OfficialDocumentFunctions" />
    internal static  System.Collections.Generic.IEnumerable<global::Sungero.Docflow.IOfficialDocumentTracking> GetDeletedTrackingRecords(global::Sungero.Docflow.IOfficialDocument entity)
    {
      return global::Sungero.Docflow.Shared.OfficialDocumentFunctions.GetDeletedTrackingRecords(entity);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.OfficialDocumentFunctions" />
    internal static  System.Collections.Generic.IEnumerable<global::Sungero.Docflow.IOfficialDocumentTracking> GetTrackingRecordsWithEmployeeChanged(global::Sungero.Docflow.IOfficialDocument entity)
    {
      return global::Sungero.Docflow.Shared.OfficialDocumentFunctions.GetTrackingRecordsWithEmployeeChanged(entity);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.OfficialDocumentFunctions" />
    internal static  System.Collections.Generic.IEnumerable<global::Sungero.Docflow.IOfficialDocumentTracking> GetChangedTrackingRecordsWithTasksInProcess(global::Sungero.Docflow.IOfficialDocument entity)
    {
      return global::Sungero.Docflow.Shared.OfficialDocumentFunctions.GetChangedTrackingRecordsWithTasksInProcess(entity);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.OfficialDocumentFunctions" />
    internal static  System.Collections.Generic.IEnumerable<global::Sungero.Docflow.IOfficialDocumentTracking> GetTrackingRecordsWithDeadlineChanged(global::Sungero.Docflow.IOfficialDocument entity)
    {
      return global::Sungero.Docflow.Shared.OfficialDocumentFunctions.GetTrackingRecordsWithDeadlineChanged(entity);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.OfficialDocumentFunctions" />
    internal static  global::System.Collections.Generic.List<global::Sungero.Docflow.IDocumentRegister> GetDocumentRegistersByDocument(global::Sungero.Docflow.IOfficialDocument document)
    {
      return global::Sungero.Docflow.Shared.OfficialDocumentFunctions.GetDocumentRegistersByDocument(document);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.OfficialDocumentFunctions" />
    internal static  global::System.Collections.Generic.List<global::Sungero.Docflow.IDocumentRegister> GetDocumentRegistersByDocument(global::Sungero.Docflow.IOfficialDocument document, global::System.Nullable<global::Sungero.Core.Enumeration> settingType)
    {
      return global::Sungero.Docflow.Shared.OfficialDocumentFunctions.GetDocumentRegistersByDocument(document, settingType);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.OfficialDocumentFunctions" />
    internal static  global::System.Boolean CanChangeRequisitesOrCancelRegistration(global::Sungero.Docflow.IOfficialDocument officialDocument)
    {
      var functions = (global::Sungero.Docflow.Shared.OfficialDocumentFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.SharedFunctions;
      return functions.CanChangeRequisitesOrCancelRegistration();
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.OfficialDocumentFunctions" />
    internal static  global::System.Nullable<global::Sungero.Core.Enumeration> GetSettingType(global::Sungero.Docflow.IOfficialDocument document)
    {
      return global::Sungero.Docflow.Shared.OfficialDocumentFunctions.GetSettingType(document);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.OfficialDocumentFunctions" />
    internal static  void RefreshDocumentForm(global::Sungero.Docflow.IOfficialDocument officialDocument)
    {
      var functions = (global::Sungero.Docflow.Shared.OfficialDocumentFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.SharedFunctions;
    functions.RefreshDocumentForm();
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.OfficialDocumentFunctions" />
    internal static  global::System.Boolean NeedShowRegistrationPane(global::Sungero.Docflow.IOfficialDocument officialDocument, global::System.Boolean additionalCondition)
    {
      var functions = (global::Sungero.Docflow.Shared.OfficialDocumentFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.SharedFunctions;
      return functions.NeedShowRegistrationPane(additionalCondition);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.OfficialDocumentFunctions" />
    internal static  void ChangeDocumentPropertiesAccess(global::Sungero.Docflow.IOfficialDocument officialDocument, global::System.Boolean isEnabled, global::System.Boolean repeatRegister)
    {
      var functions = (global::Sungero.Docflow.Shared.OfficialDocumentFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.SharedFunctions;
    functions.ChangeDocumentPropertiesAccess(isEnabled, repeatRegister);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.OfficialDocumentFunctions" />
    internal static  void ChangeCounterpartyPropertyAccess(global::Sungero.Docflow.IOfficialDocument officialDocument, global::System.Boolean isEnabled, global::System.Boolean counterpartyCodeInNumber)
    {
      var functions = (global::Sungero.Docflow.Shared.OfficialDocumentFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.SharedFunctions;
    functions.ChangeCounterpartyPropertyAccess(isEnabled, counterpartyCodeInNumber);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.OfficialDocumentFunctions" />
    internal static  void ChangeCounterpartyPropertyAccess(global::Sungero.Docflow.IOfficialDocument officialDocument, global::System.Boolean isEnabled, global::System.Boolean counterpartyCodeInNumber, global::System.Boolean enabledState)
    {
      var functions = (global::Sungero.Docflow.Shared.OfficialDocumentFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.SharedFunctions;
    functions.ChangeCounterpartyPropertyAccess(isEnabled, counterpartyCodeInNumber, enabledState);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.OfficialDocumentFunctions" />
    internal static  void ChangeRegistrationPaneVisibility(global::Sungero.Docflow.IOfficialDocument officialDocument, global::System.Boolean needShow, global::System.Boolean repeatRegister)
    {
      var functions = (global::Sungero.Docflow.Shared.OfficialDocumentFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.SharedFunctions;
    functions.ChangeRegistrationPaneVisibility(needShow, repeatRegister);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.OfficialDocumentFunctions" />
    internal static  global::System.Boolean DefaultRegistrationPaneVisibility(global::Sungero.Docflow.IOfficialDocument officialDocument)
    {
      var functions = (global::Sungero.Docflow.Shared.OfficialDocumentFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.SharedFunctions;
      return functions.DefaultRegistrationPaneVisibility();
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.OfficialDocumentFunctions" />
    internal static  void UpdateLifeCycle(global::Sungero.Docflow.IOfficialDocument officialDocument, global::System.Nullable<global::Sungero.Core.Enumeration> registrationState, global::System.Nullable<global::Sungero.Core.Enumeration> approvalState, global::System.Nullable<global::Sungero.Core.Enumeration> counterpartyApprovalState)
    {
      var functions = (global::Sungero.Docflow.Shared.OfficialDocumentFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.SharedFunctions;
    functions.UpdateLifeCycle(registrationState, approvalState, counterpartyApprovalState);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.OfficialDocumentFunctions" />
    internal static  global::System.Boolean IsLifeCycleMustBeActive(global::System.Nullable<global::Sungero.Core.Enumeration> direction, global::System.Nullable<global::Sungero.Core.Enumeration> approvalState, global::System.Nullable<global::Sungero.Core.Enumeration> counterpartyApprovalState)
    {
      return global::Sungero.Docflow.Shared.OfficialDocumentFunctions.IsLifeCycleMustBeActive(direction, approvalState, counterpartyApprovalState);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.OfficialDocumentFunctions" />
    internal static  void SetLifeCycleState(global::Sungero.Docflow.IOfficialDocument officialDocument)
    {
      var functions = (global::Sungero.Docflow.Shared.OfficialDocumentFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.SharedFunctions;
    functions.SetLifeCycleState();
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.OfficialDocumentFunctions" />
    internal static  void SetObsolete(global::Sungero.Docflow.IOfficialDocument officialDocument, global::System.Boolean isActive)
    {
      var functions = (global::Sungero.Docflow.Shared.OfficialDocumentFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.SharedFunctions;
    functions.SetObsolete(isActive);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.OfficialDocumentFunctions" />
    internal static  global::System.Boolean IsObsolete(global::Sungero.Docflow.IOfficialDocument officialDocument, global::System.Nullable<global::Sungero.Core.Enumeration> lifeCycleState)
    {
      var functions = (global::Sungero.Docflow.Shared.OfficialDocumentFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.SharedFunctions;
      return functions.IsObsolete(lifeCycleState);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.OfficialDocumentFunctions" />
    internal static  global::Sungero.Docflow.IDocumentGroupBase GetDocumentGroup(global::Sungero.Docflow.IOfficialDocument officialDocument)
    {
      var functions = (global::Sungero.Docflow.Shared.OfficialDocumentFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.SharedFunctions;
      return functions.GetDocumentGroup();
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.OfficialDocumentFunctions" />
    internal static  global::System.Collections.Generic.List<global::Sungero.Parties.ICounterparty> GetCounterparties(global::Sungero.Docflow.IOfficialDocument officialDocument)
    {
      var functions = (global::Sungero.Docflow.Shared.OfficialDocumentFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.SharedFunctions;
      return functions.GetCounterparties();
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.OfficialDocumentFunctions" />
    internal static  global::System.String GetCounterpartyCode(global::Sungero.Docflow.IOfficialDocument officialDocument)
    {
      var functions = (global::Sungero.Docflow.Shared.OfficialDocumentFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.SharedFunctions;
      return functions.GetCounterpartyCode();
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.OfficialDocumentFunctions" />
    internal static  global::Sungero.Company.IEmployee GetDocumentResponsibleEmployee(global::Sungero.Docflow.IOfficialDocument officialDocument)
    {
      var functions = (global::Sungero.Docflow.Shared.OfficialDocumentFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.SharedFunctions;
      return functions.GetDocumentResponsibleEmployee();
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.OfficialDocumentFunctions" />
    internal static  global::Sungero.Company.IEmployee GetDefaultSignatory(global::Sungero.Docflow.IOfficialDocument officialDocument, global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.SignatureSetting.Signatory> signatories)
    {
      var functions = (global::Sungero.Docflow.Shared.OfficialDocumentFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.SharedFunctions;
      return functions.GetDefaultSignatory(signatories);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.OfficialDocumentFunctions" />
    internal static  void DocumentAttachedInMainGroup(global::Sungero.Docflow.IOfficialDocument officialDocument, global::Sungero.Workflow.ITask task)
    {
      var functions = (global::Sungero.Docflow.Shared.OfficialDocumentFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.SharedFunctions;
    functions.DocumentAttachedInMainGroup(task);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.OfficialDocumentFunctions" />
    internal static  global::System.Boolean NeedDisableLeadingDocument(global::Sungero.Docflow.IOfficialDocument officialDocument)
    {
      var functions = (global::Sungero.Docflow.Shared.OfficialDocumentFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.SharedFunctions;
      return functions.NeedDisableLeadingDocument();
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.OfficialDocumentFunctions" />
    internal static  global::System.Boolean NeedDisableBusinessUnit(global::Sungero.Docflow.IOfficialDocument officialDocument)
    {
      var functions = (global::Sungero.Docflow.Shared.OfficialDocumentFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.SharedFunctions;
      return functions.NeedDisableBusinessUnit();
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.OfficialDocumentFunctions" />
    internal static  global::System.Boolean NeedDisableDepartment(global::Sungero.Docflow.IOfficialDocument officialDocument)
    {
      var functions = (global::Sungero.Docflow.Shared.OfficialDocumentFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.SharedFunctions;
      return functions.NeedDisableDepartment();
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.OfficialDocumentFunctions" />
    internal static  global::System.Nullable<global::System.Boolean> NeedDisablePropertyByRegistration(global::Sungero.Docflow.IOfficialDocument officialDocument)
    {
      var functions = (global::Sungero.Docflow.Shared.OfficialDocumentFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.SharedFunctions;
      return functions.NeedDisablePropertyByRegistration();
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.OfficialDocumentFunctions" />
    internal static  void FillName(global::Sungero.Docflow.IOfficialDocument officialDocument)
    {
      var functions = (global::Sungero.Docflow.Shared.OfficialDocumentFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.SharedFunctions;
    functions.FillName();
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.OfficialDocumentFunctions" />
    internal static  global::System.String AddClosingQuote(global::System.String name, global::Sungero.Docflow.IOfficialDocument document)
    {
      return global::Sungero.Docflow.Shared.OfficialDocumentFunctions.AddClosingQuote(name, document);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.OfficialDocumentFunctions" />
    internal static  global::System.String AddClosingQuoteToSubject(global::System.String subject, global::Sungero.Docflow.IOfficialDocument document)
    {
      return global::Sungero.Docflow.Shared.OfficialDocumentFunctions.AddClosingQuoteToSubject(subject, document);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.OfficialDocumentFunctions" />
    internal static  void AddRelatedDocumentsToAttachmentGroup(global::Sungero.Docflow.IOfficialDocument officialDocument, Sungero.Workflow.Interfaces.IWorkflowEntityAttachmentGroup group)
    {
      var functions = (global::Sungero.Docflow.Shared.OfficialDocumentFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.SharedFunctions;
    functions.AddRelatedDocumentsToAttachmentGroup(group);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.OfficialDocumentFunctions" />
    internal static  void RemoveRelatedDocumentsFromAttachmentGroup(global::Sungero.Docflow.IOfficialDocument officialDocument, Sungero.Workflow.Interfaces.IWorkflowEntityAttachmentGroup group)
    {
      var functions = (global::Sungero.Docflow.Shared.OfficialDocumentFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.SharedFunctions;
    functions.RemoveRelatedDocumentsFromAttachmentGroup(group);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.OfficialDocumentFunctions" />
    internal static  void CopyProjects(global::Sungero.Docflow.IOfficialDocument mainDocument, global::Sungero.Docflow.IOfficialDocument document)
    {
    global::Sungero.Docflow.Shared.OfficialDocumentFunctions.CopyProjects(mainDocument, document);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.OfficialDocumentFunctions" />
    internal static  global::System.Boolean NeedClearProject(global::Sungero.Docflow.IOfficialDocument officialDocument, Sungero.Docflow.Shared.OfficialDocumentDocumentKindChangedEventArgs e)
    {
      var functions = (global::Sungero.Docflow.Shared.OfficialDocumentFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.SharedFunctions;
      return functions.NeedClearProject(e);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.OfficialDocumentFunctions" />
    internal static  global::System.Boolean CheckDeleteEntityRights(global::Sungero.Docflow.IOfficialDocument officialDocument)
    {
      var functions = (global::Sungero.Docflow.Shared.OfficialDocumentFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.SharedFunctions;
      return functions.CheckDeleteEntityRights();
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.OfficialDocumentFunctions" />
    internal static  void FillOrganizationStructure(global::Sungero.Docflow.IOfficialDocument officialDocument)
    {
      var functions = (global::Sungero.Docflow.Shared.OfficialDocumentFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.SharedFunctions;
    functions.FillOrganizationStructure();
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.OfficialDocumentFunctions" />
    internal static  void ClearBusinessUnit(global::Sungero.Docflow.IOfficialDocument officialDocument, global::Sungero.Docflow.IDocumentKind documentKind)
    {
      var functions = (global::Sungero.Docflow.Shared.OfficialDocumentFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.SharedFunctions;
    functions.ClearBusinessUnit(documentKind);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.OfficialDocumentFunctions" />
    internal static  global::System.Boolean IsProjectDocument(global::Sungero.Docflow.IOfficialDocument officialDocument)
    {
      var functions = (global::Sungero.Docflow.Shared.OfficialDocumentFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.SharedFunctions;
      return functions.IsProjectDocument();
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.OfficialDocumentFunctions" />
    internal static  global::Sungero.Docflow.IProjectBase GetProject(global::Sungero.Docflow.IOfficialDocument officialDocument)
    {
      var functions = (global::Sungero.Docflow.Shared.OfficialDocumentFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.SharedFunctions;
      return functions.GetProject();
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.OfficialDocumentFunctions" />
    internal static  global::System.Boolean IsVerificationModeSupported(global::Sungero.Docflow.IOfficialDocument officialDocument)
    {
      var functions = (global::Sungero.Docflow.Shared.OfficialDocumentFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.SharedFunctions;
      return functions.IsVerificationModeSupported();
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.OfficialDocumentFunctions" />
    internal static  global::System.Boolean IsNumerationSucceed(global::Sungero.Docflow.IOfficialDocument officialDocument)
    {
      var functions = (global::Sungero.Docflow.Shared.OfficialDocumentFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.SharedFunctions;
      return functions.IsNumerationSucceed();
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.OfficialDocumentFunctions" />
    internal static  void EnableRequisitesForVerification(global::Sungero.Docflow.IOfficialDocument officialDocument)
    {
      var functions = (global::Sungero.Docflow.Shared.OfficialDocumentFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.SharedFunctions;
    functions.EnableRequisitesForVerification();
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.OfficialDocumentFunctions" />
    internal static  void EnableRegistrationNumberAndDate(global::Sungero.Docflow.IOfficialDocument officialDocument)
    {
      var functions = (global::Sungero.Docflow.Shared.OfficialDocumentFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.SharedFunctions;
    functions.EnableRegistrationNumberAndDate();
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.OfficialDocumentFunctions" />
    internal static  void ChangeCounterpartyPropertyAccess(global::Sungero.Docflow.IOfficialDocument officialDocument, global::System.Boolean isEnabled)
    {
      var functions = (global::Sungero.Docflow.Shared.OfficialDocumentFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.SharedFunctions;
    functions.ChangeCounterpartyPropertyAccess(isEnabled);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.OfficialDocumentFunctions" />
    internal static  global::System.Boolean HasEmptyRequiredProperties(global::Sungero.Docflow.IOfficialDocument officialDocument)
    {
      var functions = (global::Sungero.Docflow.Shared.OfficialDocumentFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.SharedFunctions;
      return functions.HasEmptyRequiredProperties();
    }

  }
}

// ==================================================================
// OfficialDocumentServerPublicFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
  public class OfficialDocumentServerPublicFunctions : global::Sungero.Docflow.Server.IOfficialDocumentServerPublicFunctions
  {
    public void AddDeadlineHeaderToRight(Sungero.Core.StateBlock block, global::System.DateTime deadline, global::Sungero.CoreEntities.IUser user)
    {
global::Sungero.Docflow.Functions.OfficialDocument.AddDeadlineHeaderToRight(block, deadline, user);
    }
    public void AddUserActionBlock(System.Object stateView, global::Sungero.CoreEntities.IUser user, global::System.String text, global::System.DateTime date, global::Sungero.Domain.Shared.IEntity entity, global::System.String comment, global::Sungero.CoreEntities.IUser substituted)
    {
global::Sungero.Docflow.Functions.OfficialDocument.AddUserActionBlock(stateView, user, text, date, entity, comment, substituted);
    }
    public void CreatePdfPublicBodyFromHtml(global::Sungero.Docflow.IOfficialDocument officialDocument, global::System.String sourceHtml)
    {
global::Sungero.Docflow.Functions.OfficialDocument.CreatePdfPublicBodyFromHtml(officialDocument, sourceHtml);
    }
    public global::System.Int32 DurationInWorkdays(global::System.DateTime startDate, global::System.DateTime endDate, global::Sungero.CoreEntities.IUser user)
    {
      return global::Sungero.Docflow.Functions.OfficialDocument.DurationInWorkdays(startDate, endDate, user);
    }
    public global::System.Collections.Generic.List<global::System.Int32> GetAllRecipientMembersIdsInGroup(global::System.Int32 groupId)
    {
      return global::Sungero.Docflow.Functions.OfficialDocument.GetAllRecipientMembersIdsInGroup(groupId);
    }
    public global::System.String GetAuthor(global::Sungero.CoreEntities.IUser author, global::Sungero.CoreEntities.IUser startedBy)
    {
      return global::Sungero.Docflow.Functions.OfficialDocument.GetAuthor(author, startedBy);
    }
    public global::Sungero.Docflow.IDocumentKind GetDefaultDocumentKind(global::Sungero.Docflow.IOfficialDocument officialDocument)
    {
      return global::Sungero.Docflow.Functions.OfficialDocument.GetDefaultDocumentKind(officialDocument);
    }
    public global::System.String GetPerformersInText(global::System.Collections.Generic.List<global::Sungero.Company.IEmployee> employees)
    {
      return global::Sungero.Docflow.Functions.OfficialDocument.GetPerformersInText(employees);
    }
    public Sungero.Domain.Shared.ISignature GetSignatureForMark(global::Sungero.Docflow.IOfficialDocument officialDocument, global::System.Int32 versionId)
    {
      return global::Sungero.Docflow.Functions.OfficialDocument.GetSignatureForMark(officialDocument, versionId);
    }
    public global::System.String GetSignatureMarkAsHtml(global::Sungero.Docflow.IOfficialDocument officialDocument, global::System.Int32 versionId)
    {
      return global::Sungero.Docflow.Functions.OfficialDocument.GetSignatureMarkAsHtml(officialDocument, versionId);
    }
    public global::Sungero.Core.StateView GetStateView(global::Sungero.Content.IElectronicDocument document)
    {
      return global::Sungero.Docflow.Functions.OfficialDocument.GetStateView(document);
    }
    public global::System.String GetUserActionText(global::Sungero.CoreEntities.IUser user, global::System.String text, global::Sungero.CoreEntities.IUser substituted)
    {
      return global::Sungero.Docflow.Functions.OfficialDocument.GetUserActionText(user, text, substituted);
    }
    public void GrantAccessRightsToActionItemAttachment(global::Sungero.Docflow.IOfficialDocument officialDocument, global::Sungero.Company.IEmployee employee)
    {
global::Sungero.Docflow.Functions.OfficialDocument.GrantAccessRightsToActionItemAttachment(officialDocument, employee);
    }
    public void SendAnswer(global::Sungero.Docflow.IOfficialDocument officialDocument, global::Sungero.ExchangeCore.IBusinessUnitBox box, global::Sungero.Parties.ICounterparty party, global::Sungero.CoreEntities.ICertificate certificate, global::System.Boolean isAgent)
    {
global::Sungero.Docflow.Functions.OfficialDocument.SendAnswer(officialDocument, box, party, certificate, isAgent);
    }
    public void StoreVerifiedPropertiesValues(global::Sungero.Docflow.IOfficialDocument officialDocument)
    {
global::Sungero.Docflow.Functions.OfficialDocument.StoreVerifiedPropertiesValues(officialDocument);
    }
    public global::System.Boolean TryExternalRegister(global::Sungero.Docflow.IOfficialDocument officialDocument, global::System.String number, global::System.Nullable<global::System.DateTime> date)
    {
      return global::Sungero.Docflow.Functions.OfficialDocument.TryExternalRegister(officialDocument, number, date);
    }
  }
}

// ==================================================================
// OfficialDocumentQueries.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Queries
{
  public class OfficialDocument
  {
    private static global::Sungero.Domain.SqlQueryResolver resolver = new global::Sungero.Domain.SqlQueryResolver("Sungero.Docflow.Server.OfficialDocument.OfficialDocumentQueries.xml", System.Reflection.Assembly.GetExecutingAssembly());
  }
}

// ==================================================================
// OfficialDocumentServerHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow
{
  public partial class OfficialDocumentConvertingFromServerHandler : global::Sungero.Content.ElectronicDocumentConvertingFromServerHandler
  { 
    private global::Sungero.Docflow.IOfficialDocumentInfo _info
    {
      get { return (global::Sungero.Docflow.IOfficialDocumentInfo)this._Info; }
    }

    public OfficialDocumentConvertingFromServerHandler(global::Sungero.Content.IElectronicDocument source, global::Sungero.Docflow.IOfficialDocumentInfo info)
      : base(source, info)
    {
    }
  }
}
