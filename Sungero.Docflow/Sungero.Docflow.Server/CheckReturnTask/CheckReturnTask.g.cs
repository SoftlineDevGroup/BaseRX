
// ==================================================================
// CheckReturnTask.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
    public class CheckReturnTaskFilter<T> :
      global::Sungero.Workflow.Server.TaskFilter<T>
      where T : class, global::Sungero.Docflow.ICheckReturnTask
    {
      protected new global::Sungero.Docflow.ICheckReturnTaskFilterState Filter { get; private set; }

      private global::Sungero.Docflow.ICheckReturnTaskFilterState filter
      {
        get
        {
          return this.Filter;
        }
      }

      protected override global::System.Linq.IQueryable<T> ApplyAppliedFilter(global::System.Linq.IQueryable<T> query)
      {
        return base.ApplyAppliedFilter(query);
      }

      public CheckReturnTaskFilter(global::Sungero.Docflow.ICheckReturnTaskFilterState filter)
      : base()
      {
        this.Filter = filter;
      }

      protected CheckReturnTaskFilter()
      {
      }
    }
    public class CheckReturnTaskSearchDialogModel : global::Sungero.Workflow.Server.TaskSearchDialogModel
        {
                  public override global::System.Int32? Id { get; protected set; }
                  public override global::System.String Subject { get; protected set; }


                  public override global::System.Collections.Generic.IEnumerable<Sungero.CoreEntities.IRecipient> Author { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<Sungero.Core.Enumeration> Status { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<Sungero.Core.Enumeration> Importance { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<CommonLibrary.DateRangeValue> Started { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<CommonLibrary.DateRangeValue> MaxDeadline { get; protected set; }



                  public virtual global::System.Collections.Generic.IEnumerable<Sungero.CoreEntities.IRecipient> Assignee { get; protected set; }


                   [Sungero.Domain.Shared.HideInDevStudio()]
                   public new CheckReturnTaskObserversModel Observers { get { return (CheckReturnTaskObserversModel)base.Observers; } protected set { base.Observers = value; } }

        }

      public class CheckReturnTaskObserversModel : global::Sungero.Workflow.Server.TaskObserversModel
          {
                      [Sungero.Domain.Shared.HideInDevStudio()]
                      public override global::System.Int32? Id { get; protected set; }




         }




  public class CheckReturnTaskFilterForAssignee<TQueryEntity, TSourceEntity>
    : global::Sungero.Domain.EntityPropertyFilterBase<TQueryEntity, TSourceEntity>
    where TQueryEntity : class, global::Sungero.Company.IEmployee
    where TSourceEntity : class, global::Sungero.Docflow.ICheckReturnTask
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, TSourceEntity sourceEntity)
    {
      var args = new global::Sungero.Domain.PropertyFilteringEventArgs(sourceEntity);
      var result = new global::Sungero.Docflow.CheckReturnTaskAssigneePropertyFilteringServerHandler<TQueryEntity>(sourceEntity).AssigneeFiltering(query, args);
      if (args.DisableUiFiltering)
        global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public CheckReturnTaskFilterForAssignee(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class CheckReturnTaskSearchFilterForAssignee<TQueryEntity>
    : global::Sungero.Domain.SearchDialogPropertyFilter<TQueryEntity>
    where TQueryEntity : class, global::Sungero.CoreEntities.IRecipient
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, System.Guid entityType)
    {
      var args = new global::Sungero.Domain.PropertySearchDialogFilteringEventArgs(entityType);
      var result = new global::Sungero.Docflow.CheckReturnTaskAssigneeSearchPropertyFilteringServerHandler<TQueryEntity>().AssigneeSearchDialogFiltering(query, args);
      if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public CheckReturnTaskSearchFilterForAssignee(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class CheckReturnTaskFilterForDocumentToReturn<TQueryEntity, TSourceEntity>
    : global::Sungero.Domain.EntityPropertyFilterBase<TQueryEntity, TSourceEntity>
    where TQueryEntity : class, global::Sungero.Content.IElectronicDocument
    where TSourceEntity : class, global::Sungero.Docflow.ICheckReturnTask
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, TSourceEntity sourceEntity)
    {
      var args = new global::Sungero.Domain.PropertyFilteringEventArgs(sourceEntity);
      var result = new global::Sungero.Docflow.CheckReturnTaskDocumentToReturnPropertyFilteringServerHandler<TQueryEntity>(sourceEntity).DocumentToReturnFiltering(query, args);
      if (args.DisableUiFiltering)
        global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public CheckReturnTaskFilterForDocumentToReturn(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class CheckReturnTaskSearchFilterForDocumentToReturn<TQueryEntity>
    : global::Sungero.Domain.SearchDialogPropertyFilter<TQueryEntity>
    where TQueryEntity : class, global::Sungero.Content.IElectronicDocument
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, System.Guid entityType)
    {
      var args = new global::Sungero.Domain.PropertySearchDialogFilteringEventArgs(entityType);
      var result = new global::Sungero.Docflow.CheckReturnTaskDocumentToReturnSearchPropertyFilteringServerHandler<TQueryEntity>().DocumentToReturnSearchDialogFiltering(query, args);
      if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public CheckReturnTaskSearchFilterForDocumentToReturn(string propertyName)
      : base(propertyName)
    {
    }
  }



  [global::Sungero.Domain.Filter(typeof(global::Sungero.Docflow.Server.CheckReturnTaskFilter<global::Sungero.Docflow.ICheckReturnTask>))]
  [global::Sungero.Domain.PropertyFilter(typeof(global::Sungero.Docflow.Server.CheckReturnTaskFilterForAssignee<global::Sungero.Company.IEmployee, global::Sungero.Docflow.ICheckReturnTask>), "Assignee")]
  [global::Sungero.Domain.SearchPropertyFilter(typeof(global::Sungero.Docflow.Server.CheckReturnTaskSearchFilterForAssignee<global::Sungero.CoreEntities.IRecipient>), "Assignee")]
  [global::Sungero.Domain.PropertyFilter(typeof(global::Sungero.Docflow.Server.CheckReturnTaskFilterForDocumentToReturn<global::Sungero.Content.IElectronicDocument, global::Sungero.Docflow.ICheckReturnTask>), "DocumentToReturn")]
  [global::Sungero.Domain.SearchPropertyFilter(typeof(global::Sungero.Docflow.Server.CheckReturnTaskSearchFilterForDocumentToReturn<global::Sungero.Content.IElectronicDocument>), "DocumentToReturn")]


  public class CheckReturnTask :
    global::Sungero.Workflow.Server.Task, global::Sungero.Docflow.ICheckReturnTask, global::Sungero.Domain.Shared.ISecurableEntity, global::Sungero.Domain.IInternalSecurableEntity
  {
    public static new readonly global::System.Guid ClassTypeGuid = global::System.Guid.Parse("af000bfc-7c6a-4308-883a-df6fe4ab7265");

    public override global::System.Guid TypeGuid
    {
      get { return global::Sungero.Docflow.Server.CheckReturnTask.ClassTypeGuid; }
    }

    public override string TypeName
    {
      get { return "Sungero.Docflow.ICheckReturnTask, Sungero.Domain.Interfaces"; }
    }

    public override string DisplayValue
    {
      get { return this.Subject; }
      set { this.Subject = value; }
    }

    public new virtual global::Sungero.Docflow.ICheckReturnTaskState State
    {
      get { return (global::Sungero.Docflow.ICheckReturnTaskState)base.State; }
    }

    protected override global::Sungero.Domain.Shared.IEntityState CreateState()
    {
      return new global::Sungero.Docflow.Shared.CheckReturnTaskState(this);
    }

    public new virtual global::Sungero.Docflow.ICheckReturnTaskInfo Info
    {
      get { return (global::Sungero.Docflow.ICheckReturnTaskInfo)base.Info; }
    }

    public new virtual global::Sungero.Docflow.ICheckReturnTaskAccessRights AccessRights
    {
      get { return (global::Sungero.Docflow.ICheckReturnTaskAccessRights)base.AccessRights; }
    }

    protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
    {
      return new global::Sungero.Docflow.Server.CheckReturnTaskAccessRights(this);
    }

    protected override global::Sungero.Domain.EntityFunctions CreateServerFunctions()
    {
      return new global::Sungero.Docflow.Server.CheckReturnTaskFunctions(this);
    }

    protected override global::Sungero.Domain.Shared.EntityFunctions CreateSharedFunctions()
    {
      return new global::Sungero.Docflow.Shared.CheckReturnTaskFunctions(this);
    }

    protected override object CreateHandlers() {
      return new global::Sungero.Docflow.CheckReturnTaskServerHandlers(this);
    }

    protected override object CreateSharedHandlers() {
      return new global::Sungero.Docflow.CheckReturnTaskSharedHandlers(this);
    }

    private global::System.DateTime? _Deadline;
    public virtual global::System.DateTime? Deadline
    {
      get
      {
        return this._Deadline;
      }

      set
      {
        this.SetPropertyValue("Deadline", this._Deadline, value, (propertyValue) => { this._Deadline = propertyValue; }, this.DeadlineChangedHandler);
      }
    }
    private global::System.DateTime? _AssignmentStartDate;
    public virtual global::System.DateTime? AssignmentStartDate
    {
      get
      {
        return this._AssignmentStartDate;
      }

      set
      {
        this.SetPropertyValue("AssignmentStartDate", this._AssignmentStartDate, value, (propertyValue) => { this._AssignmentStartDate = propertyValue; }, this.AssignmentStartDateChangedHandler);
      }
    }







    private global::Sungero.Company.IEmployee _Assignee;
    public virtual global::Sungero.Company.IEmployee Assignee
    {
      get
      {
        return this._Assignee;
      }

      set
      {
        this.SetPropertyValue("Assignee", this._Assignee, value, (propertyValue) => { this._Assignee = propertyValue; }, this.AssigneeChangedHandler);
      }
    }
    private global::Sungero.Content.IElectronicDocument _DocumentToReturn;
    public virtual global::Sungero.Content.IElectronicDocument DocumentToReturn
    {
      get
      {
        return this._DocumentToReturn;
      }

      set
      {
        this.SetPropertyValue("DocumentToReturn", this._DocumentToReturn, value, (propertyValue) => { this._DocumentToReturn = propertyValue; }, this.DocumentToReturnChangedHandler);
      }
    }



    protected override global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Workflow.ITaskObservers> CreateObserversCollection()
    {
      return new global::Sungero.Domain.ChildEntityCollection<global::Sungero.Docflow.ICheckReturnTaskObservers>() { RootEntity = this };
    }


    protected override global::Sungero.Domain.Shared.EntityCreatingFromServerHandler CreateCreatingFromServerHandler(
      global::Sungero.Domain.Shared.IEntity entitySource)
    {
      return new global::Sungero.Docflow.CheckReturnTaskCreatingFromServerHandler((global::Sungero.Docflow.ICheckReturnTask)entitySource, this.Info);
    }

    #region Framework events

    protected void AssigneeChangedHandler()
    {
      var args = new global::Sungero.Docflow.Shared.CheckReturnTaskAssigneeChangedEventArgs(this.State.Properties.Assignee, this.Assignee, this);
     ((global::Sungero.Docflow.CheckReturnTaskSharedHandlers)this.SharedHandlers).AssigneeChanged(args);
    }

    protected void DeadlineChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.DateTimePropertyChangedEventArgs(this.State.Properties.Deadline, this.Deadline, this);
     ((global::Sungero.Docflow.CheckReturnTaskSharedHandlers)this.SharedHandlers).DeadlineChanged(args);
    }

    protected void AssignmentStartDateChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.DateTimePropertyChangedEventArgs(this.State.Properties.AssignmentStartDate, this.AssignmentStartDate, this);
     ((global::Sungero.Docflow.CheckReturnTaskSharedHandlers)this.SharedHandlers).AssignmentStartDateChanged(args);
    }

    protected void DocumentToReturnChangedHandler()
    {
      var args = new global::Sungero.Docflow.Shared.CheckReturnTaskDocumentToReturnChangedEventArgs(this.State.Properties.DocumentToReturn, this.DocumentToReturn, this);
     ((global::Sungero.Docflow.CheckReturnTaskSharedHandlers)this.SharedHandlers).DocumentToReturnChanged(args);
    }




    #endregion


    public CheckReturnTask()
    {
      ((global::Sungero.Workflow.Interfaces.IWorkflowEntity)this).AttachmentCreated += this.AttachmentCreatedHandler;
      ((global::Sungero.Workflow.Interfaces.IWorkflowEntity)this).AttachmentAdded += this.AttachmentAddedHandler;
      ((global::Sungero.Workflow.Interfaces.IWorkflowEntity)this).AttachmentDeleted += this.AttachmentDeletedHandler;


    }

    #region Workflow attachments
    public virtual global::Sungero.Docflow.ICheckReturnTaskDocumentGroupAttachments DocumentGroup
    {
      get
      {
        return new global::Sungero.Docflow.Shared.CheckReturnTaskDocumentGroupAttachments(this);
      }
    }


    private void AttachmentCreatedHandler(object sender, global::Sungero.Workflow.Interfaces.AttachmentCreatedEventArgs e)
    {
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "DocumentGroup")
      {
        ((global::Sungero.Docflow.CheckReturnTaskSharedHandlers)this.SharedHandlers).DocumentGroupCreated(e);
        return;
      }

    }

    private void AttachmentAddedHandler(object sender, global::Sungero.Workflow.Interfaces.AttachmentAddedEventArgs e)
    {
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "DocumentGroup")
      {
        ((global::Sungero.Docflow.CheckReturnTaskSharedHandlers)this.SharedHandlers).DocumentGroupAdded(e);
        return;
      }

    }

    private void AttachmentDeletedHandler(object sender, global::Sungero.Workflow.Interfaces.AttachmentDeletedEventArgs e)
    {
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "DocumentGroup")
      {
        ((global::Sungero.Docflow.CheckReturnTaskSharedHandlers)this.SharedHandlers).DocumentGroupDeleted(e);
        return;
      }

    }
    #endregion

  }
}

// ==================================================================
// CheckReturnTaskHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow
{
  public partial class CheckReturnTaskAssigneePropertyFilteringServerHandler<T>
    : global::Sungero.Domain.EntityPropertyFilteringServerHandler
    where T : class, global::Sungero.Company.IEmployee
  {
    private global::Sungero.Docflow.ICheckReturnTask _obj
    {
      get { return (global::Sungero.Docflow.ICheckReturnTask)this.Entity; }
    }

    public virtual global::System.Linq.IQueryable<T> AssigneeFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertyFilteringEventArgs e)
    {
      return query;
    }

    public CheckReturnTaskAssigneePropertyFilteringServerHandler(global::Sungero.Docflow.ICheckReturnTask entity)
      : base(entity)
    {
    }
  }

  public partial class CheckReturnTaskAssigneeSearchPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.SearchPropertyFilteringServerHandler
    where T : class, global::Sungero.CoreEntities.IRecipient
  {

    public virtual global::System.Linq.IQueryable<T> AssigneeSearchDialogFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertySearchDialogFilteringEventArgs e)
    {
      return query;
    }

    public CheckReturnTaskAssigneeSearchPropertyFilteringServerHandler()
      : base()
    {
    }
  }

  public partial class CheckReturnTaskDocumentToReturnPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.EntityPropertyFilteringServerHandler
    where T : class, global::Sungero.Content.IElectronicDocument
  {
    private global::Sungero.Docflow.ICheckReturnTask _obj
    {
      get { return (global::Sungero.Docflow.ICheckReturnTask)this.Entity; }
    }

    public virtual global::System.Linq.IQueryable<T> DocumentToReturnFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertyFilteringEventArgs e)
    {
      return query;
    }

    public CheckReturnTaskDocumentToReturnPropertyFilteringServerHandler(global::Sungero.Docflow.ICheckReturnTask entity)
      : base(entity)
    {
    }
  }

  public partial class CheckReturnTaskDocumentToReturnSearchPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.SearchPropertyFilteringServerHandler
    where T : class, global::Sungero.Content.IElectronicDocument
  {

    public virtual global::System.Linq.IQueryable<T> DocumentToReturnSearchDialogFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertySearchDialogFilteringEventArgs e)
    {
      return query;
    }

    public CheckReturnTaskDocumentToReturnSearchPropertyFilteringServerHandler()
      : base()
    {
    }
  }



  public partial class CheckReturnTaskFilteringServerHandler<T>
    : global::Sungero.Domain.EntityFilteringServerHandler<T>  
    where T : class, global::Sungero.Docflow.ICheckReturnTask
  {
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    protected new global::Sungero.Docflow.ICheckReturnTaskFilterState Filter { get; private set; }

    private global::Sungero.Docflow.ICheckReturnTaskFilterState _filter
    {
      get
      {
        return this.Filter;
      }
    }

    public CheckReturnTaskFilteringServerHandler(global::Sungero.Docflow.ICheckReturnTaskFilterState filter)
    : base()
    {
      this.Filter = filter;
    }

    protected CheckReturnTaskFilteringServerHandler()
    {
    }

    public override global::System.Linq.IQueryable<T> Filtering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.FilteringEventArgs e)
    {
      return query;
    }


  }

  public partial class CheckReturnTaskSearchDialogServerHandler : global::Sungero.Workflow.TaskSearchDialogServerHandler
   {
     private global::Sungero.Docflow.Server.CheckReturnTaskSearchDialogModel _dialog
     {
       get
       {
         return (global::Sungero.Docflow.Server.CheckReturnTaskSearchDialogModel)this.Dialog;
       }
     }

     public CheckReturnTaskSearchDialogServerHandler(global::Sungero.Docflow.Server.CheckReturnTaskSearchDialogModel dialog)
       : base(dialog)
     {
     }
   }

  public partial class CheckReturnTaskServerHandlers : global::Sungero.Workflow.TaskServerHandlers
  {
    private global::Sungero.Docflow.ICheckReturnTask _obj
    {
      get { return (global::Sungero.Docflow.ICheckReturnTask)this.Entity; }
    }

    public CheckReturnTaskServerHandlers(global::Sungero.Docflow.ICheckReturnTask entity)
      : base(entity)
    {
    }
  }

  public partial class CheckReturnTaskCreatingFromServerHandler : global::Sungero.Workflow.TaskCreatingFromServerHandler
  {
    private global::Sungero.Docflow.ICheckReturnTask _source
    {
      get { return (global::Sungero.Docflow.ICheckReturnTask)this.Source; }
    }

    private global::Sungero.Docflow.ICheckReturnTaskInfo _info
    {
      get { return (global::Sungero.Docflow.ICheckReturnTaskInfo)this._Info; }
    }

    public CheckReturnTaskCreatingFromServerHandler(global::Sungero.Docflow.ICheckReturnTask source, global::Sungero.Docflow.ICheckReturnTaskInfo info)
      : base(source, info)
    {
    }
  }

}

// ==================================================================
// CheckReturnTaskEventArgs.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
}

// ==================================================================
// CheckReturnTaskAccessRights.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
  public class CheckReturnTaskAccessRights : 
    Sungero.Workflow.Server.TaskAccessRights, Sungero.Docflow.ICheckReturnTaskAccessRights
  {

    public CheckReturnTaskAccessRights(global::Sungero.Domain.Shared.IEntity entity) : base(entity)
    {
    }
  }

  public class CheckReturnTaskTypeAccessRights : 
    Sungero.Workflow.Server.TaskTypeAccessRights, Sungero.Docflow.ICheckReturnTaskAccessRights
  {

    public CheckReturnTaskTypeAccessRights(global::System.Type entityType) : base(entityType)
    {
    }
  }
}

// ==================================================================
// CheckReturnTaskRepositoryImplementer.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
    public class CheckReturnTaskRepositoryImplementer<T> : 
      global::Sungero.Workflow.Server.TaskRepositoryImplementer<T>,
      global::Sungero.Docflow.ICheckReturnTaskRepositoryImplementer<T>
      where T : global::Sungero.Docflow.ICheckReturnTask 
    {
       public new global::Sungero.Docflow.ICheckReturnTaskAccessRights AccessRights
       {
          get { return (global::Sungero.Docflow.ICheckReturnTaskAccessRights)base.AccessRights; }
       }

       public new global::Sungero.Docflow.ICheckReturnTaskInfo Info
       {
          get { return (global::Sungero.Docflow.ICheckReturnTaskInfo)base.Info; }
       }

       protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
       {
         return new global::Sungero.Docflow.Server.CheckReturnTaskTypeAccessRights(typeof(T));
       }
    }
}

// ==================================================================
// CheckReturnTaskPanelNavigationFilters.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
}

// ==================================================================
// CheckReturnTaskServerFunctions.g.cs
// ==================================================================

namespace Sungero.Docflow.Server
{
  public partial class CheckReturnTaskFunctions : global::Sungero.Workflow.Server.TaskFunctions
  {
    private global::Sungero.Docflow.ICheckReturnTask _obj
    {
      get { return (global::Sungero.Docflow.ICheckReturnTask)this.Entity; }
    }

    public CheckReturnTaskFunctions(global::Sungero.Docflow.ICheckReturnTask entity) : base(entity) { }
  }
}

// ==================================================================
// CheckReturnTaskFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Functions
{
  internal static class CheckReturnTask
  {
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.CheckReturnTaskFunctions" />
    internal static  Sungero.Core.StateBlock GetAssignmentBlock(global::Sungero.Workflow.IAssignmentBase assignment)
    {
      return global::Sungero.Docflow.Server.CheckReturnTaskFunctions.GetAssignmentBlock(assignment);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.CheckReturnTaskFunctions" />
    internal static  void SetReturnResult(global::Sungero.Docflow.ICheckReturnTask returnContol, global::Sungero.CoreEntities.IUser performer, global::System.Boolean documentIsReturned)
    {
    global::Sungero.Docflow.Server.CheckReturnTaskFunctions.SetReturnResult(returnContol, performer, documentIsReturned);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.CheckReturnTaskFunctions" />
    internal static  global::Sungero.Docflow.IOfficialDocumentTracking GetTrackingByTask(global::Sungero.Docflow.ICheckReturnTask returnContol)
    {
      return global::Sungero.Docflow.Server.CheckReturnTaskFunctions.GetTrackingByTask(returnContol);
    }

  }
}

// ==================================================================
// CheckReturnTaskServerPublicFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
  public class CheckReturnTaskServerPublicFunctions : global::Sungero.Docflow.Server.ICheckReturnTaskServerPublicFunctions
  {
    public Sungero.Core.StateBlock GetAssignmentBlock(global::Sungero.Workflow.IAssignmentBase assignment)
    {
      return global::Sungero.Docflow.Functions.CheckReturnTask.GetAssignmentBlock(assignment);
    }
  }
}

// ==================================================================
// CheckReturnTaskQueries.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Queries
{
  public class CheckReturnTask
  {
    private static global::Sungero.Domain.SqlQueryResolver resolver = new global::Sungero.Domain.SqlQueryResolver("Sungero.Docflow.Server.CheckReturnTask.CheckReturnTaskQueries.xml", System.Reflection.Assembly.GetExecutingAssembly());
  }
}

// ==================================================================
// CheckReturnTaskBlock.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
  public class CheckReturnTaskArguments: global::Sungero.Workflow.Server.Route.TaskStartEventArguments<CheckReturnTaskBlock, global::Sungero.Workflow.TaskBlock>
  {
    public CheckReturnTaskArguments(CheckReturnTaskBlock block) : base(block) { }
  }

  public class CheckReturnTaskEndBlockEventArguments: global::Sungero.Workflow.Server.Route.TaskEndBlockEventArguments<CheckReturnTaskBlock, global::Sungero.Workflow.TaskBlock, Sungero.Docflow.ICheckReturnTask> 
  {
    public CheckReturnTaskEndBlockEventArguments(CheckReturnTaskBlock block) : base(block) { }
  }

  public partial class CheckReturnTaskBlock : global::Sungero.Workflow.Blocks.TaskBlockWrapper<global::Sungero.Workflow.TaskBlock>    
  {
    public virtual global::System.DateTime? Deadline
    {
      get { return this.GetCustomProperty<global::System.DateTime?>("Deadline"); }
      set { this.SetCustomProperty("Deadline", value); }
    }
    public virtual global::System.DateTime? AssignmentStartDate
    {
      get { return this.GetCustomProperty<global::System.DateTime?>("AssignmentStartDate"); }
      set { this.SetCustomProperty("AssignmentStartDate", value); }
    }

    public virtual global::Sungero.Company.IEmployee Assignee
    {
      get { return this.GetCustomNavigationProperty<global::Sungero.Company.IEmployee>("Assignee"); }
      set { this.SetCustomNavigationProperty("Assignee", value); }
    }
    public virtual global::Sungero.Content.IElectronicDocument DocumentToReturn
    {
      get { return this.GetCustomNavigationProperty<global::Sungero.Content.IElectronicDocument>("DocumentToReturn"); }
      set { this.SetCustomNavigationProperty("DocumentToReturn", value); }
    }




    public CheckReturnTaskBlock(global::Sungero.Workflow.TaskBlock block) : base(block) { }
  }
}

// ==================================================================
// CheckReturnTaskChildWrappers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
}

// ==================================================================
// CheckReturnTaskRouteHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
  public partial class CheckReturnTaskRouteHandlers{
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    protected global::Sungero.Workflow.ITask Task { get; private set; }

    private global::Sungero.Docflow.ICheckReturnTask _obj
    {
      get { return (global::Sungero.Docflow.ICheckReturnTask)this.Task; }
    }


    protected readonly int _schemeVersion;

    public CheckReturnTaskRouteHandlers(global::Sungero.Docflow.ICheckReturnTask task, int schemeVersion) 
    {
      this.Task = task;
      this._schemeVersion = schemeVersion;
    }


    [global::System.ObsoleteAttribute("Используйте ExtendedSchemeVersions")]
    private static class SchemeVersions
    {
      public static readonly int V1 = 1;
}

    }
}
