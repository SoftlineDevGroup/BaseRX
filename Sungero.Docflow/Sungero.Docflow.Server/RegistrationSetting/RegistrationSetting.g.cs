
// ==================================================================
// RegistrationSetting.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
    public class RegistrationSettingFilter<T> :
      global::Sungero.Domain.EntityFilterBase<T>
      where T : class, global::Sungero.Docflow.IRegistrationSetting
    {
      protected new global::Sungero.Docflow.IRegistrationSettingFilterState Filter { get; private set; }

      private global::Sungero.Docflow.IRegistrationSettingFilterState filter
      {
        get
        {
          return this.Filter;
        }
      }

      protected override global::System.Linq.IQueryable<T> ApplyAppliedFilter(global::System.Linq.IQueryable<T> query)
      {
        return base.ApplyAppliedFilter(query);
      }

      public RegistrationSettingFilter(global::Sungero.Docflow.IRegistrationSettingFilterState filter)
      : base()
      {
        this.Filter = filter;
      }

      protected RegistrationSettingFilter()
      {
      }
    }
      public class RegistrationSettingUiFilter<T> :
        global::Sungero.Domain.EntityUiFilterBase<T>
        where T : class, global::Sungero.Docflow.IRegistrationSetting
      {
        protected override global::System.Linq.IQueryable<T> ApplyAppliedFilter(global::System.Linq.IQueryable<T> query)
        {
          return base.ApplyAppliedFilter(query);
        }
      }

    public class RegistrationSettingSearchDialogModel : global::Sungero.CoreEntities.Server.DatabookEntrySearchDialogModel
        {
                  public override global::System.Int32? Id { get; protected set; }



                  public virtual global::System.String Name { get; protected set; }
                  public virtual global::System.Int32? Priority { get; protected set; }


                  public virtual global::System.Collections.Generic.IEnumerable<Sungero.Core.Enumeration> Status { get; protected set; }
                  public virtual global::System.Collections.Generic.IEnumerable<Sungero.Core.Enumeration> DocumentFlow { get; protected set; }
                  public virtual global::System.Collections.Generic.IEnumerable<Sungero.Docflow.IDocumentRegister> DocumentRegister { get; protected set; }
                  public virtual global::System.Collections.Generic.IEnumerable<Sungero.Core.Enumeration> SettingType { get; protected set; }


                   [Sungero.Domain.Shared.HideInDevStudio()]
                   public RegistrationSettingDocumentKindsModel DocumentKinds { get; protected set; }
                   [Sungero.Domain.Shared.HideInDevStudio()]
                   public RegistrationSettingBusinessUnitsModel BusinessUnits { get; protected set; }
                   [Sungero.Domain.Shared.HideInDevStudio()]
                   public RegistrationSettingDepartmentsModel Departments { get; protected set; }

        }


      public class RegistrationSettingDocumentKindsModel : global::Sungero.Domain.CollectionPropertySearchDialogModel
          {
            public override global::System.Int32? Id { get; protected set; }


         }
      public class RegistrationSettingBusinessUnitsModel : global::Sungero.Domain.CollectionPropertySearchDialogModel
          {
            public override global::System.Int32? Id { get; protected set; }


         }
      public class RegistrationSettingDepartmentsModel : global::Sungero.Domain.CollectionPropertySearchDialogModel
          {
            public override global::System.Int32? Id { get; protected set; }


         }



  public class RegistrationSettingFilterForDocumentRegister<TQueryEntity, TSourceEntity>
    : global::Sungero.Domain.EntityPropertyFilterBase<TQueryEntity, TSourceEntity>
    where TQueryEntity : class, global::Sungero.Docflow.IDocumentRegister
    where TSourceEntity : class, global::Sungero.Docflow.IRegistrationSetting
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, TSourceEntity sourceEntity)
    {
      var args = new global::Sungero.Domain.PropertyFilteringEventArgs(sourceEntity);
      var result = new global::Sungero.Docflow.RegistrationSettingDocumentRegisterPropertyFilteringServerHandler<TQueryEntity>(sourceEntity).DocumentRegisterFiltering(query, args);
      if (args.DisableUiFiltering)
        global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public RegistrationSettingFilterForDocumentRegister(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class RegistrationSettingSearchFilterForDocumentRegister<TQueryEntity>
    : global::Sungero.Domain.SearchDialogPropertyFilter<TQueryEntity>
    where TQueryEntity : class, global::Sungero.Docflow.IDocumentRegister
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, System.Guid entityType)
    {
      var args = new global::Sungero.Domain.PropertySearchDialogFilteringEventArgs(entityType);
      var result = new global::Sungero.Docflow.RegistrationSettingDocumentRegisterSearchPropertyFilteringServerHandler<TQueryEntity>().DocumentRegisterSearchDialogFiltering(query, args);
      if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public RegistrationSettingSearchFilterForDocumentRegister(string propertyName)
      : base(propertyName)
    {
    }
  }



  [global::Sungero.Domain.Filter(typeof(global::Sungero.Docflow.Server.RegistrationSettingFilter<global::Sungero.Docflow.IRegistrationSetting>))]
  [global::Sungero.Domain.UiFilter(typeof(global::Sungero.Docflow.Server.RegistrationSettingUiFilter<global::Sungero.Docflow.IRegistrationSetting>))]
  [global::Sungero.Domain.PropertyFilter(typeof(global::Sungero.Docflow.Server.RegistrationSettingFilterForDocumentRegister<global::Sungero.Docflow.IDocumentRegister, global::Sungero.Docflow.IRegistrationSetting>), "DocumentRegister")]
  [global::Sungero.Domain.SearchPropertyFilter(typeof(global::Sungero.Docflow.Server.RegistrationSettingSearchFilterForDocumentRegister<global::Sungero.Docflow.IDocumentRegister>), "DocumentRegister")]


  public class RegistrationSetting :
    global::Sungero.CoreEntities.Server.DatabookEntry, global::Sungero.Docflow.IRegistrationSetting
  {
    public static new readonly global::System.Guid ClassTypeGuid = global::System.Guid.Parse("ff9c10ff-2c62-43cd-8bcf-d6184359b5b6");

    public override global::System.Guid TypeGuid
    {
      get { return global::Sungero.Docflow.Server.RegistrationSetting.ClassTypeGuid; }
    }

    public override string TypeName
    {
      get { return "Sungero.Docflow.IRegistrationSetting, Sungero.Domain.Interfaces"; }
    }

    public override string DisplayValue
    {
      get { return this.Name; }
      set { this.Name = value; }
    }

    public new virtual global::Sungero.Docflow.IRegistrationSettingState State
    {
      get { return (global::Sungero.Docflow.IRegistrationSettingState)base.State; }
    }

    protected override global::Sungero.Domain.Shared.IEntityState CreateState()
    {
      return new global::Sungero.Docflow.Shared.RegistrationSettingState(this);
    }

    public new virtual global::Sungero.Docflow.IRegistrationSettingInfo Info
    {
      get { return (global::Sungero.Docflow.IRegistrationSettingInfo)base.Info; }
    }

    public new virtual global::Sungero.Docflow.IRegistrationSettingAccessRights AccessRights
    {
      get { return (global::Sungero.Docflow.IRegistrationSettingAccessRights)base.AccessRights; }
    }

    protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
    {
      return new global::Sungero.Docflow.Server.RegistrationSettingAccessRights(this);
    }

    protected override global::Sungero.Domain.EntityFunctions CreateServerFunctions()
    {
      return new global::Sungero.Docflow.Server.RegistrationSettingFunctions(this);
    }

    protected override global::Sungero.Domain.Shared.EntityFunctions CreateSharedFunctions()
    {
      return new global::Sungero.Docflow.Shared.RegistrationSettingFunctions(this);
    }

    protected override object CreateHandlers() {
      return new global::Sungero.Docflow.RegistrationSettingServerHandlers(this);
    }

    protected override object CreateSharedHandlers() {
      return new global::Sungero.Docflow.RegistrationSettingSharedHandlers(this);
    }

    private global::System.String _Name;
    public virtual global::System.String Name
    {
      get
      {
        return this._Name;
      }

      set
      {
        this.SetPropertyValue("Name", this._Name, value, (propertyValue) => { this._Name = propertyValue; }, this.NameChangedHandler);
      }
    }
    private global::System.Int32? _Priority;
    public virtual global::System.Int32? Priority
    {
      get
      {
        return this._Priority;
      }

      set
      {
        this.SetPropertyValue("Priority", this._Priority, value, (propertyValue) => { this._Priority = propertyValue; }, this.PriorityChangedHandler);
      }
    }






    private static global::Sungero.Domain.Shared.EnumerationItems _DocumentFlowItems = new global::Sungero.Domain.Shared.EnumerationItems(
      null,
      typeof(global::Sungero.Docflow.RegistrationSetting.DocumentFlow),
      typeof(global::Sungero.Docflow.Server.RegistrationSetting),
      "DocumentFlow");

    public static global::Sungero.Domain.Shared.EnumerationItems DocumentFlowItems
    {
      get { return global::Sungero.Docflow.Server.RegistrationSetting._DocumentFlowItems; }
    }

    public virtual global::Sungero.Domain.Shared.EnumerationItems DocumentFlowAllowedItems
    {
      get { return global::Sungero.Docflow.Server.RegistrationSetting.DocumentFlowItems; }
    }

    private global::Sungero.Core.Enumeration? _DocumentFlow;

    public virtual global::Sungero.Core.Enumeration? DocumentFlow
    {
      get { return this._DocumentFlow; }
      set { this.SetEnumPropertyValue("DocumentFlow", this._DocumentFlow, value, (propertyValue) => { this._DocumentFlow = propertyValue; }, this.DocumentFlowChangedHandler, this.DocumentFlowAllowedItems); }
    }
    private static global::Sungero.Domain.Shared.EnumerationItems _SettingTypeItems = new global::Sungero.Domain.Shared.EnumerationItems(
      null,
      typeof(global::Sungero.Docflow.RegistrationSetting.SettingType),
      typeof(global::Sungero.Docflow.Server.RegistrationSetting),
      "SettingType");

    public static global::Sungero.Domain.Shared.EnumerationItems SettingTypeItems
    {
      get { return global::Sungero.Docflow.Server.RegistrationSetting._SettingTypeItems; }
    }

    public virtual global::Sungero.Domain.Shared.EnumerationItems SettingTypeAllowedItems
    {
      get { return global::Sungero.Docflow.Server.RegistrationSetting.SettingTypeItems; }
    }

    private global::Sungero.Core.Enumeration? _SettingType;

    public virtual global::Sungero.Core.Enumeration? SettingType
    {
      get { return this._SettingType; }
      set { this.SetEnumPropertyValue("SettingType", this._SettingType, value, (propertyValue) => { this._SettingType = propertyValue; }, this.SettingTypeChangedHandler, this.SettingTypeAllowedItems); }
    }


    private global::Sungero.Docflow.IDocumentRegister _DocumentRegister;
    public virtual global::Sungero.Docflow.IDocumentRegister DocumentRegister
    {
      get
      {
        return this._DocumentRegister;
      }

      set
      {
        this.SetPropertyValue("DocumentRegister", this._DocumentRegister, value, (propertyValue) => { this._DocumentRegister = propertyValue; }, this.DocumentRegisterChangedHandler);
      }
    }


    protected global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Docflow.IRegistrationSettingDocumentKinds> _DocumentKinds;

    public virtual global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Docflow.IRegistrationSettingDocumentKinds> DocumentKinds
    {
      get
      {
        if (this._DocumentKinds == null)
        {
          this._DocumentKinds = this.CreateDocumentKindsCollection();
          this.SetDocumentKindsEventHandlers();
        }
        return this._DocumentKinds;
      }

      set
      {
        if (this._DocumentKinds != null)
          this.UnsetChildCollectionEventHandlers(this._DocumentKinds);

        this._DocumentKinds = value;
        this.SetDocumentKindsEventHandlers();
      }
    }

    protected virtual global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Docflow.IRegistrationSettingDocumentKinds> CreateDocumentKindsCollection()
    {
      return new global::Sungero.Domain.ChildEntityCollection<global::Sungero.Docflow.IRegistrationSettingDocumentKinds>() { RootEntity = this };
    }

    private void SetDocumentKindsEventHandlers()
    {
      this.SetChildCollectionEventHandlers(this._DocumentKinds, "DocumentKinds");

      var changeNotifier = (global::Sungero.Domain.Shared.INotifyChildEntityCollectionChanged)this._DocumentKinds;
      changeNotifier.Added += this.DocumentKindsAddedHandler;
      changeNotifier.Deleted += this.DocumentKindsDeletedHandler;
      changeNotifier.Added += this.DocumentKindsCollectionUpdateEventHandler;
      changeNotifier.Deleted += this.DocumentKindsCollectionUpdateEventHandler;
      changeNotifier.Updated += this.DocumentKindsCollectionUpdateEventHandler;
    }

    private void DocumentKindsCollectionUpdateEventHandler(object sender, global::Sungero.Domain.Shared.BaseChildEntityEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      if (this.IsPropertyChangedHandlerEnabled)
        this.DocumentKindsChangedHandler();
    }
    protected global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Docflow.IRegistrationSettingBusinessUnits> _BusinessUnits;

    public virtual global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Docflow.IRegistrationSettingBusinessUnits> BusinessUnits
    {
      get
      {
        if (this._BusinessUnits == null)
        {
          this._BusinessUnits = this.CreateBusinessUnitsCollection();
          this.SetBusinessUnitsEventHandlers();
        }
        return this._BusinessUnits;
      }

      set
      {
        if (this._BusinessUnits != null)
          this.UnsetChildCollectionEventHandlers(this._BusinessUnits);

        this._BusinessUnits = value;
        this.SetBusinessUnitsEventHandlers();
      }
    }

    protected virtual global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Docflow.IRegistrationSettingBusinessUnits> CreateBusinessUnitsCollection()
    {
      return new global::Sungero.Domain.ChildEntityCollection<global::Sungero.Docflow.IRegistrationSettingBusinessUnits>() { RootEntity = this };
    }

    private void SetBusinessUnitsEventHandlers()
    {
      this.SetChildCollectionEventHandlers(this._BusinessUnits, "BusinessUnits");

      var changeNotifier = (global::Sungero.Domain.Shared.INotifyChildEntityCollectionChanged)this._BusinessUnits;
      changeNotifier.Added += this.BusinessUnitsAddedHandler;
      changeNotifier.Deleted += this.BusinessUnitsDeletedHandler;
      changeNotifier.Added += this.BusinessUnitsCollectionUpdateEventHandler;
      changeNotifier.Deleted += this.BusinessUnitsCollectionUpdateEventHandler;
      changeNotifier.Updated += this.BusinessUnitsCollectionUpdateEventHandler;
    }

    private void BusinessUnitsCollectionUpdateEventHandler(object sender, global::Sungero.Domain.Shared.BaseChildEntityEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      if (this.IsPropertyChangedHandlerEnabled)
        this.BusinessUnitsChangedHandler();
    }
    protected global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Docflow.IRegistrationSettingDepartments> _Departments;

    public virtual global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Docflow.IRegistrationSettingDepartments> Departments
    {
      get
      {
        if (this._Departments == null)
        {
          this._Departments = this.CreateDepartmentsCollection();
          this.SetDepartmentsEventHandlers();
        }
        return this._Departments;
      }

      set
      {
        if (this._Departments != null)
          this.UnsetChildCollectionEventHandlers(this._Departments);

        this._Departments = value;
        this.SetDepartmentsEventHandlers();
      }
    }

    protected virtual global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Docflow.IRegistrationSettingDepartments> CreateDepartmentsCollection()
    {
      return new global::Sungero.Domain.ChildEntityCollection<global::Sungero.Docflow.IRegistrationSettingDepartments>() { RootEntity = this };
    }

    private void SetDepartmentsEventHandlers()
    {
      this.SetChildCollectionEventHandlers(this._Departments, "Departments");

      var changeNotifier = (global::Sungero.Domain.Shared.INotifyChildEntityCollectionChanged)this._Departments;
      changeNotifier.Added += this.DepartmentsAddedHandler;
      changeNotifier.Deleted += this.DepartmentsDeletedHandler;
      changeNotifier.Added += this.DepartmentsCollectionUpdateEventHandler;
      changeNotifier.Deleted += this.DepartmentsCollectionUpdateEventHandler;
      changeNotifier.Updated += this.DepartmentsCollectionUpdateEventHandler;
    }

    private void DepartmentsCollectionUpdateEventHandler(object sender, global::Sungero.Domain.Shared.BaseChildEntityEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      if (this.IsPropertyChangedHandlerEnabled)
        this.DepartmentsChangedHandler();
    }



    protected override global::Sungero.Domain.Shared.EntityCreatingFromServerHandler CreateCreatingFromServerHandler(
      global::Sungero.Domain.Shared.IEntity entitySource)
    {
      return new global::Sungero.Docflow.RegistrationSettingCreatingFromServerHandler((global::Sungero.Docflow.IRegistrationSetting)entitySource, this.Info);
    }

    #region Framework events

    protected void NameChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.Name, this.Name, this);
     ((global::Sungero.Docflow.RegistrationSettingSharedHandlers)this.SharedHandlers).NameChanged(args);
    }

    protected void DocumentFlowChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.EnumerationPropertyChangedEventArgs(this.State.Properties.DocumentFlow, this.DocumentFlow, this);
     ((global::Sungero.Docflow.RegistrationSettingSharedHandlers)this.SharedHandlers).DocumentFlowChanged(args);
    }

    protected void DocumentKindsChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.CollectionPropertyChangedEventArgs(this);
     ((global::Sungero.Docflow.RegistrationSettingSharedHandlers)this.SharedHandlers).DocumentKindsChanged(args);
    }

    protected void BusinessUnitsChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.CollectionPropertyChangedEventArgs(this);
     ((global::Sungero.Docflow.RegistrationSettingSharedHandlers)this.SharedHandlers).BusinessUnitsChanged(args);
    }

    protected void DepartmentsChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.CollectionPropertyChangedEventArgs(this);
     ((global::Sungero.Docflow.RegistrationSettingSharedHandlers)this.SharedHandlers).DepartmentsChanged(args);
    }

    protected void DocumentRegisterChangedHandler()
    {
      var args = new global::Sungero.Docflow.Shared.RegistrationSettingDocumentRegisterChangedEventArgs(this.State.Properties.DocumentRegister, this.DocumentRegister, this);
     ((global::Sungero.Docflow.RegistrationSettingSharedHandlers)this.SharedHandlers).DocumentRegisterChanged(args);
    }

    protected void PriorityChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.IntegerPropertyChangedEventArgs(this.State.Properties.Priority, this.Priority, this);
     ((global::Sungero.Docflow.RegistrationSettingSharedHandlers)this.SharedHandlers).PriorityChanged(args);
    }

    protected void SettingTypeChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.EnumerationPropertyChangedEventArgs(this.State.Properties.SettingType, this.SettingType, this);
     ((global::Sungero.Docflow.RegistrationSettingSharedHandlers)this.SharedHandlers).SettingTypeChanged(args);
    }



    protected virtual global::Sungero.Docflow.RegistrationSettingDocumentKindsSharedCollectionHandlers CreateDocumentKindsAddedHandler(global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.Docflow.RegistrationSettingDocumentKindsSharedCollectionHandlers(this, e.Value, null, e.Source);
    }

    protected virtual global::Sungero.Docflow.RegistrationSettingDocumentKindsSharedCollectionHandlers CreateDocumentKindsDeletedHandler(global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.Docflow.RegistrationSettingDocumentKindsSharedCollectionHandlers(this, null, e.Value, null);
    }

    protected virtual void DocumentKindsAddedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {  
      var collectionHandlers = this.CreateDocumentKindsAddedHandler(e);
      if (collectionHandlers != null)
      {
        var args = new global::Sungero.Domain.Shared.CollectionPropertyAddedEventArgs(this);
        collectionHandlers.DocumentKindsAdded(args);
      }
    }

    protected virtual void DocumentKindsDeletedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {  
      var collectionHandlers = this.CreateDocumentKindsDeletedHandler(e);
      if (collectionHandlers != null)
      {
        var args = new global::Sungero.Domain.Shared.CollectionPropertyDeletedEventArgs(this);
        collectionHandlers.DocumentKindsDeleted(args);
      }
    }


    protected virtual global::Sungero.Docflow.RegistrationSettingBusinessUnitsSharedCollectionHandlers CreateBusinessUnitsAddedHandler(global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.Docflow.RegistrationSettingBusinessUnitsSharedCollectionHandlers(this, e.Value, null, e.Source);
    }

    protected virtual global::Sungero.Docflow.RegistrationSettingBusinessUnitsSharedCollectionHandlers CreateBusinessUnitsDeletedHandler(global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.Docflow.RegistrationSettingBusinessUnitsSharedCollectionHandlers(this, null, e.Value, null);
    }

    protected virtual void BusinessUnitsAddedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {  
      var collectionHandlers = this.CreateBusinessUnitsAddedHandler(e);
      if (collectionHandlers != null)
      {
        var args = new global::Sungero.Domain.Shared.CollectionPropertyAddedEventArgs(this);
        collectionHandlers.BusinessUnitsAdded(args);
      }
    }

    protected virtual void BusinessUnitsDeletedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {  
      var collectionHandlers = this.CreateBusinessUnitsDeletedHandler(e);
      if (collectionHandlers != null)
      {
        var args = new global::Sungero.Domain.Shared.CollectionPropertyDeletedEventArgs(this);
        collectionHandlers.BusinessUnitsDeleted(args);
      }
    }


    protected virtual global::Sungero.Docflow.RegistrationSettingDepartmentsSharedCollectionHandlers CreateDepartmentsAddedHandler(global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.Docflow.RegistrationSettingDepartmentsSharedCollectionHandlers(this, e.Value, null, e.Source);
    }

    protected virtual global::Sungero.Docflow.RegistrationSettingDepartmentsSharedCollectionHandlers CreateDepartmentsDeletedHandler(global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.Docflow.RegistrationSettingDepartmentsSharedCollectionHandlers(this, null, e.Value, null);
    }

    protected virtual void DepartmentsAddedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {  
      var collectionHandlers = this.CreateDepartmentsAddedHandler(e);
      if (collectionHandlers != null)
      {
        var args = new global::Sungero.Domain.Shared.CollectionPropertyAddedEventArgs(this);
        collectionHandlers.DepartmentsAdded(args);
      }
    }

    protected virtual void DepartmentsDeletedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {  
      var collectionHandlers = this.CreateDepartmentsDeletedHandler(e);
      if (collectionHandlers != null)
      {
        var args = new global::Sungero.Domain.Shared.CollectionPropertyDeletedEventArgs(this);
        collectionHandlers.DepartmentsDeleted(args);
      }
    }


    #endregion


    public RegistrationSetting()
    {
    }

  }
}

// ==================================================================
// RegistrationSettingHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow
{
  public partial class RegistrationSettingDocumentRegisterPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.EntityPropertyFilteringServerHandler
    where T : class, global::Sungero.Docflow.IDocumentRegister
  {
    private global::Sungero.Docflow.IRegistrationSetting _obj
    {
      get { return (global::Sungero.Docflow.IRegistrationSetting)this.Entity; }
    }

    public RegistrationSettingDocumentRegisterPropertyFilteringServerHandler(global::Sungero.Docflow.IRegistrationSetting entity)
      : base(entity)
    {
    }
  }

  public partial class RegistrationSettingDocumentRegisterSearchPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.SearchPropertyFilteringServerHandler
    where T : class, global::Sungero.Docflow.IDocumentRegister
  {

    public virtual global::System.Linq.IQueryable<T> DocumentRegisterSearchDialogFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertySearchDialogFilteringEventArgs e)
    {
      return query;
    }

    public RegistrationSettingDocumentRegisterSearchPropertyFilteringServerHandler()
      : base()
    {
    }
  }



  public partial class RegistrationSettingFilteringServerHandler<T>
    : global::Sungero.Domain.EntityFilteringServerHandler<T>  
    where T : class, global::Sungero.Docflow.IRegistrationSetting
  {
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    protected new global::Sungero.Docflow.IRegistrationSettingFilterState Filter { get; private set; }

    private global::Sungero.Docflow.IRegistrationSettingFilterState _filter
    {
      get
      {
        return this.Filter;
      }
    }

    public RegistrationSettingFilteringServerHandler(global::Sungero.Docflow.IRegistrationSettingFilterState filter)
    : base()
    {
      this.Filter = filter;
    }

    protected RegistrationSettingFilteringServerHandler()
    {
    }

    public override global::System.Linq.IQueryable<T> Filtering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.FilteringEventArgs e)
    {
      return query;
    }


  }

  public partial class RegistrationSettingUiFilteringServerHandler<T>
    : global::Sungero.Domain.EntityUiFilteringServerHandler<T>
    where T : class, global::Sungero.Docflow.IRegistrationSetting
  {
    public override global::System.Linq.IQueryable<T> Filtering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.UiFilteringEventArgs e)
    {
      query = base.Filtering(query, e);
            return query;
    }
  }

  public partial class RegistrationSettingSearchDialogServerHandler : global::Sungero.CoreEntities.DatabookEntrySearchDialogServerHandler
   {
     private global::Sungero.Docflow.Server.RegistrationSettingSearchDialogModel _dialog
     {
       get
       {
         return (global::Sungero.Docflow.Server.RegistrationSettingSearchDialogModel)this.Dialog;
       }
     }

     public RegistrationSettingSearchDialogServerHandler(global::Sungero.Docflow.Server.RegistrationSettingSearchDialogModel dialog)
       : base(dialog)
     {
     }
   }

  public partial class RegistrationSettingServerHandlers : global::Sungero.CoreEntities.DatabookEntryServerHandlers
  {
    private global::Sungero.Docflow.IRegistrationSetting _obj
    {
      get { return (global::Sungero.Docflow.IRegistrationSetting)this.Entity; }
    }

    public RegistrationSettingServerHandlers(global::Sungero.Docflow.IRegistrationSetting entity)
      : base(entity)
    {
    }
  }

  public partial class RegistrationSettingCreatingFromServerHandler : global::Sungero.CoreEntities.DatabookEntryCreatingFromServerHandler
  {
    private global::Sungero.Docflow.IRegistrationSetting _source
    {
      get { return (global::Sungero.Docflow.IRegistrationSetting)this.Source; }
    }

    private global::Sungero.Docflow.IRegistrationSettingInfo _info
    {
      get { return (global::Sungero.Docflow.IRegistrationSettingInfo)this._Info; }
    }

    public RegistrationSettingCreatingFromServerHandler(global::Sungero.Docflow.IRegistrationSetting source, global::Sungero.Docflow.IRegistrationSettingInfo info)
      : base(source, info)
    {
    }
  }

}

// ==================================================================
// RegistrationSettingEventArgs.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
}

// ==================================================================
// RegistrationSettingAccessRights.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
  public class RegistrationSettingAccessRights : 
    Sungero.CoreEntities.Server.DatabookEntryAccessRights, Sungero.Docflow.IRegistrationSettingAccessRights
  {

    public RegistrationSettingAccessRights(global::Sungero.Domain.Shared.IEntity entity) : base(entity)
    {
    }
  }

  public class RegistrationSettingTypeAccessRights : 
    Sungero.CoreEntities.Server.DatabookEntryTypeAccessRights, Sungero.Docflow.IRegistrationSettingAccessRights
  {

    public RegistrationSettingTypeAccessRights(global::System.Type entityType) : base(entityType)
    {
    }
  }
}

// ==================================================================
// RegistrationSettingRepositoryImplementer.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
    public class RegistrationSettingRepositoryImplementer<T> : 
      global::Sungero.Domain.RepositoryImplementer<T>,
      global::Sungero.Docflow.IRegistrationSettingRepositoryImplementer<T>
      where T : global::Sungero.Docflow.IRegistrationSetting 
    {
       public new global::Sungero.Docflow.IRegistrationSettingAccessRights AccessRights
       {
          get { return (global::Sungero.Docflow.IRegistrationSettingAccessRights)base.AccessRights; }
       }

       public new global::Sungero.Docflow.IRegistrationSettingInfo Info
       {
          get { return (global::Sungero.Docflow.IRegistrationSettingInfo)base.Info; }
       }

       protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
       {
         return new global::Sungero.Docflow.Server.RegistrationSettingTypeAccessRights(typeof(T));
       }
    }
}

// ==================================================================
// RegistrationSettingPanelNavigationFilters.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
}

// ==================================================================
// RegistrationSettingServerFunctions.g.cs
// ==================================================================

namespace Sungero.Docflow.Server
{
  public partial class RegistrationSettingFunctions : global::Sungero.CoreEntities.Server.DatabookEntryFunctions
  {
    private global::Sungero.Docflow.IRegistrationSetting _obj
    {
      get { return (global::Sungero.Docflow.IRegistrationSetting)this.Entity; }
    }

    public RegistrationSettingFunctions(global::Sungero.Docflow.IRegistrationSetting entity) : base(entity) { }
  }
}

// ==================================================================
// RegistrationSettingFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Functions
{
  internal static class RegistrationSetting
  {
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.RegistrationSettingFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static  global::System.Collections.Generic.List<global::Sungero.Docflow.IRegistrationSetting> GetDoubleSettings(global::Sungero.Docflow.IRegistrationSetting setting)
    {
      return global::Sungero.Docflow.Server.RegistrationSettingFunctions.GetDoubleSettings(setting);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.RegistrationSettingFunctions" />
    internal static  global::System.Linq.IQueryable<global::Sungero.Docflow.IRegistrationSetting> GetRegistrationSettingsByDocumentKind(global::Sungero.Docflow.IDocumentKind documentKind)
    {
      return global::Sungero.Docflow.Server.RegistrationSettingFunctions.GetRegistrationSettingsByDocumentKind(documentKind);
    }

    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.RegistrationSettingFunctions" />
    internal static  global::System.Collections.Generic.List<global::Sungero.Docflow.IRegistrationSetting> GetByDocumentRegister(global::Sungero.Docflow.IDocumentRegister documentRegister)
    {
      return global::Sungero.Docflow.Shared.RegistrationSettingFunctions.GetByDocumentRegister(documentRegister);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.RegistrationSettingFunctions" />
    internal static  global::Sungero.Docflow.IRegistrationSetting GetSettingByDocument(global::Sungero.Docflow.IOfficialDocument document, global::System.Nullable<global::Sungero.Core.Enumeration> settingType)
    {
      return global::Sungero.Docflow.Shared.RegistrationSettingFunctions.GetSettingByDocument(document, settingType);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.RegistrationSettingFunctions" />
    internal static  global::Sungero.Docflow.IRegistrationSetting GetSettingForKind(global::Sungero.Docflow.IOfficialDocument document, global::System.Nullable<global::Sungero.Core.Enumeration> settingType, global::Sungero.Docflow.IDocumentKind documentKind)
    {
      return global::Sungero.Docflow.Shared.RegistrationSettingFunctions.GetSettingForKind(document, settingType, documentKind);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.RegistrationSettingFunctions" />
    internal static  global::Sungero.Docflow.IRegistrationSetting GetSettingByParams(global::System.Nullable<global::Sungero.Core.Enumeration> settingType, global::Sungero.Company.IBusinessUnit businessUnit, global::Sungero.Docflow.IDocumentKind documentKind, global::Sungero.Company.IDepartment department)
    {
      return global::Sungero.Docflow.Shared.RegistrationSettingFunctions.GetSettingByParams(settingType, businessUnit, documentKind, department);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.RegistrationSettingFunctions" />
    internal static  global::System.Linq.IQueryable<global::Sungero.Docflow.IRegistrationSetting> GetAvailableSettingsByParams(global::System.Nullable<global::Sungero.Core.Enumeration> settingType, global::Sungero.Company.IBusinessUnit businessUnit, global::Sungero.Docflow.IDocumentKind documentKind, global::Sungero.Company.IDepartment department)
    {
      return global::Sungero.Docflow.Shared.RegistrationSettingFunctions.GetAvailableSettingsByParams(settingType, businessUnit, documentKind, department);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.RegistrationSettingFunctions" />
    internal static  global::Sungero.Docflow.IRegistrationSetting GetSettingByParamsIds(global::System.Collections.Generic.List<global::Sungero.Docflow.IRegistrationSetting> activeSettings, global::System.Nullable<global::Sungero.Core.Enumeration> settingType, global::System.Int32 businessUnitId, global::System.Int32 documentKindId, global::System.Int32 departmentId)
    {
      return global::Sungero.Docflow.Shared.RegistrationSettingFunctions.GetSettingByParamsIds(activeSettings, settingType, businessUnitId, documentKindId, departmentId);
    }

  }
}

// ==================================================================
// RegistrationSettingServerPublicFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
  public class RegistrationSettingServerPublicFunctions : global::Sungero.Docflow.Server.IRegistrationSettingServerPublicFunctions
  {
    public global::System.Linq.IQueryable<global::Sungero.Docflow.IRegistrationSetting> GetRegistrationSettingsByDocumentKind(global::Sungero.Docflow.IDocumentKind documentKind)
    {
      return global::Sungero.Docflow.Functions.RegistrationSetting.GetRegistrationSettingsByDocumentKind(documentKind);
    }
  }
}

// ==================================================================
// RegistrationSettingQueries.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Queries
{
  public class RegistrationSetting
  {
    private static global::Sungero.Domain.SqlQueryResolver resolver = new global::Sungero.Domain.SqlQueryResolver("Sungero.Docflow.Server.RegistrationSetting.RegistrationSettingQueries.xml", System.Reflection.Assembly.GetExecutingAssembly());
  }
}
