
// ==================================================================
// AccessRightsRuleDocumentGroups.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
  public class AccessRightsRuleDocumentGroupsFilterForDocumentGroup<TQueryEntity, TSourceEntity, TRootEntity>
    : global::Sungero.Domain.ChildEntityPropertyFilterBase<TQueryEntity, TSourceEntity, TRootEntity>
    where TQueryEntity : class, global::Sungero.Docflow.IDocumentGroupBase
    where TSourceEntity : class, global::Sungero.Docflow.IAccessRightsRuleDocumentGroups
    where TRootEntity : class, global::Sungero.Docflow.IAccessRightsRule
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, TSourceEntity sourceEntity, TRootEntity rootEntity)
    {
      var args = new global::Sungero.Domain.PropertyFilteringEventArgs(sourceEntity);
      var result = new global::Sungero.Docflow.AccessRightsRuleDocumentGroupsDocumentGroupPropertyFilteringServerHandler<TQueryEntity>(sourceEntity, rootEntity).DocumentGroupsDocumentGroupFiltering(query, args);
      if (args.DisableUiFiltering)
        global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public AccessRightsRuleDocumentGroupsFilterForDocumentGroup(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class AccessRightsRuleDocumentGroupsSearchFilterForDocumentGroup<TQueryEntity>
    : global::Sungero.Domain.SearchDialogPropertyFilter<TQueryEntity>
    where TQueryEntity : class, global::Sungero.Docflow.IDocumentGroupBase
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, System.Guid entityType)
    {
      var args = new global::Sungero.Domain.PropertySearchDialogFilteringEventArgs(entityType);
      var result = new global::Sungero.Docflow.AccessRightsRuleDocumentGroupsDocumentGroupSearchPropertyFilteringServerHandler<TQueryEntity>().DocumentGroupsDocumentGroupSearchDialogFiltering(query, args);
      if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public AccessRightsRuleDocumentGroupsSearchFilterForDocumentGroup(string propertyName)
      : base(propertyName)
    {
    }
  }



  [global::Sungero.Domain.PropertyFilter(typeof(global::Sungero.Docflow.Server.AccessRightsRuleDocumentGroupsFilterForDocumentGroup<global::Sungero.Docflow.IDocumentGroupBase, global::Sungero.Docflow.IAccessRightsRuleDocumentGroups, global::Sungero.Docflow.IAccessRightsRule>), "DocumentGroup")]
  [global::Sungero.Domain.SearchPropertyFilter(typeof(global::Sungero.Docflow.Server.AccessRightsRuleDocumentGroupsSearchFilterForDocumentGroup<global::Sungero.Docflow.IDocumentGroupBase>), "DocumentGroup")]


  public class AccessRightsRuleDocumentGroups :
    global::Sungero.Domain.ChildEntity, global::Sungero.Docflow.IAccessRightsRuleDocumentGroups
  {
    public static new readonly global::System.Guid ClassTypeGuid = global::System.Guid.Parse("c7de5a86-53fe-44b2-b6a9-7703aab6c48b");

    public override global::System.Guid TypeGuid
    {
      get { return global::Sungero.Docflow.Server.AccessRightsRuleDocumentGroups.ClassTypeGuid; }
    }

    public override string TypeName
    {
      get { return "Sungero.Docflow.IAccessRightsRuleDocumentGroups, Sungero.Domain.Interfaces"; }
    }

    public new virtual global::Sungero.Docflow.IAccessRightsRuleDocumentGroupsState State
    {
      get { return (global::Sungero.Docflow.IAccessRightsRuleDocumentGroupsState)base.State; }
    }

    protected override global::Sungero.Domain.Shared.IEntityState CreateState()
    {
      return new global::Sungero.Docflow.Shared.AccessRightsRuleDocumentGroupsState(this);
    }

    public new virtual global::Sungero.Docflow.IAccessRightsRuleDocumentGroupsInfo Info
    {
      get { return (global::Sungero.Docflow.IAccessRightsRuleDocumentGroupsInfo)base.Info; }
    }


    public global::Sungero.Docflow.IAccessRightsRule AccessRightsRule { get; set; }

    public override global::Sungero.Domain.Shared.IEntity RootEntity
    {
      get { return this.AccessRightsRule; }
      set { this.AccessRightsRule = (global::Sungero.Docflow.IAccessRightsRule)value; }
    }

    protected override object CreateSharedHandlers() {
      return new global::Sungero.Docflow.AccessRightsRuleDocumentGroupsSharedHandlers(this);
    }







    private global::Sungero.Docflow.IDocumentGroupBase _DocumentGroup;
    public virtual global::Sungero.Docflow.IDocumentGroupBase DocumentGroup
    {
      get
      {
        return this._DocumentGroup;
      }

      set
      {
        this.SetPropertyValue("DocumentGroup", this._DocumentGroup, value, (propertyValue) => { this._DocumentGroup = propertyValue; }, this.DocumentGroupChangedHandler);
      }
    }




    #region Framework events

    protected void DocumentGroupChangedHandler()
    {
      var args = new global::Sungero.Docflow.Shared.AccessRightsRuleDocumentGroupsDocumentGroupChangedEventArgs(this.State.Properties.DocumentGroup, this.DocumentGroup, this);
     ((global::Sungero.Docflow.AccessRightsRuleDocumentGroupsSharedHandlers)this.SharedHandlers).DocumentGroupsDocumentGroupChanged(args);
    }



    #endregion


    public AccessRightsRuleDocumentGroups()
    {
    }

  }
}

// ==================================================================
// AccessRightsRuleDocumentGroupsHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow
{
  public partial class AccessRightsRuleDocumentGroupsDocumentGroupPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.ChildEntityPropertyFilteringServerHandler
    where T : class, global::Sungero.Docflow.IDocumentGroupBase
  {
    private global::Sungero.Docflow.IAccessRightsRuleDocumentGroups _obj
    {
      get { return (global::Sungero.Docflow.IAccessRightsRuleDocumentGroups)this.Entity; }
    }

    private global::Sungero.Docflow.IAccessRightsRule _root
    {
      get { return (global::Sungero.Docflow.IAccessRightsRule)this.Root; }
    }

    public AccessRightsRuleDocumentGroupsDocumentGroupPropertyFilteringServerHandler(global::Sungero.Docflow.IAccessRightsRuleDocumentGroups entity, global::Sungero.Docflow.IAccessRightsRule root)
      : base(entity, root)
    {
    }
  }

  public partial class AccessRightsRuleDocumentGroupsDocumentGroupSearchPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.SearchPropertyFilteringServerHandler
    where T : class, global::Sungero.Docflow.IDocumentGroupBase
  {

    public virtual global::System.Linq.IQueryable<T> DocumentGroupsDocumentGroupSearchDialogFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertySearchDialogFilteringEventArgs e)
    {
      return query;
    }

    public AccessRightsRuleDocumentGroupsDocumentGroupSearchPropertyFilteringServerHandler()
      : base()
    {
    }
  }



}

// ==================================================================
// AccessRightsRuleDocumentGroupsEventArgs.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
}
