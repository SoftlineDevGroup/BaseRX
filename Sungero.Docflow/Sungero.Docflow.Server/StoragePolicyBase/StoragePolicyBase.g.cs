
// ==================================================================
// StoragePolicyBase.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
    public class StoragePolicyBaseFilter<T> :
      global::Sungero.Domain.EntityFilterBase<T>
      where T : class, global::Sungero.Docflow.IStoragePolicyBase
    {
      protected new global::Sungero.Docflow.IStoragePolicyBaseFilterState Filter { get; private set; }

      private global::Sungero.Docflow.IStoragePolicyBaseFilterState filter
      {
        get
        {
          return this.Filter;
        }
      }

      protected override global::System.Linq.IQueryable<T> ApplyAppliedFilter(global::System.Linq.IQueryable<T> query)
      {
        return base.ApplyAppliedFilter(query);
      }

      public StoragePolicyBaseFilter(global::Sungero.Docflow.IStoragePolicyBaseFilterState filter)
      : base()
      {
        this.Filter = filter;
      }

      protected StoragePolicyBaseFilter()
      {
      }
    }
      public class StoragePolicyBaseUiFilter<T> :
        global::Sungero.Domain.EntityUiFilterBase<T>
        where T : class, global::Sungero.Docflow.IStoragePolicyBase
      {
        protected override global::System.Linq.IQueryable<T> ApplyAppliedFilter(global::System.Linq.IQueryable<T> query)
        {
          return base.ApplyAppliedFilter(query);
        }
      }

    public class StoragePolicyBaseSearchDialogModel : global::Sungero.CoreEntities.Server.DatabookEntrySearchDialogModel
        {
                  public override global::System.Int32? Id { get; protected set; }



                  public virtual global::System.Int32? Priority { get; protected set; }
                  public virtual global::System.String Name { get; protected set; }
                  public virtual global::System.String Note { get; protected set; }


                  public virtual global::System.Collections.Generic.IEnumerable<Sungero.CoreEntities.IStorage> Storage { get; protected set; }


                   [Sungero.Domain.Shared.HideInDevStudio()]
                   public StoragePolicyBaseDocumentKindsModel DocumentKinds { get; protected set; }

        }


      public class StoragePolicyBaseDocumentKindsModel : global::Sungero.Domain.CollectionPropertySearchDialogModel
          {
            public override global::System.Int32? Id { get; protected set; }


         }



  public class StoragePolicyBaseFilterForStorage<TQueryEntity, TSourceEntity>
    : global::Sungero.Domain.EntityPropertyFilterBase<TQueryEntity, TSourceEntity>
    where TQueryEntity : class, global::Sungero.CoreEntities.IStorage
    where TSourceEntity : class, global::Sungero.Docflow.IStoragePolicyBase
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, TSourceEntity sourceEntity)
    {
      var args = new global::Sungero.Domain.PropertyFilteringEventArgs(sourceEntity);
      var result = new global::Sungero.Docflow.StoragePolicyBaseStoragePropertyFilteringServerHandler<TQueryEntity>(sourceEntity).StorageFiltering(query, args);
      if (args.DisableUiFiltering)
        global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public StoragePolicyBaseFilterForStorage(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class StoragePolicyBaseSearchFilterForStorage<TQueryEntity>
    : global::Sungero.Domain.SearchDialogPropertyFilter<TQueryEntity>
    where TQueryEntity : class, global::Sungero.CoreEntities.IStorage
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, System.Guid entityType)
    {
      var args = new global::Sungero.Domain.PropertySearchDialogFilteringEventArgs(entityType);
      var result = new global::Sungero.Docflow.StoragePolicyBaseStorageSearchPropertyFilteringServerHandler<TQueryEntity>().StorageSearchDialogFiltering(query, args);
      if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public StoragePolicyBaseSearchFilterForStorage(string propertyName)
      : base(propertyName)
    {
    }
  }



  [global::Sungero.Domain.Filter(typeof(global::Sungero.Docflow.Server.StoragePolicyBaseFilter<global::Sungero.Docflow.IStoragePolicyBase>))]
  [global::Sungero.Domain.UiFilter(typeof(global::Sungero.Docflow.Server.StoragePolicyBaseUiFilter<global::Sungero.Docflow.IStoragePolicyBase>))]
  [global::Sungero.Domain.PropertyFilter(typeof(global::Sungero.Docflow.Server.StoragePolicyBaseFilterForStorage<global::Sungero.CoreEntities.IStorage, global::Sungero.Docflow.IStoragePolicyBase>), "Storage")]
  [global::Sungero.Domain.SearchPropertyFilter(typeof(global::Sungero.Docflow.Server.StoragePolicyBaseSearchFilterForStorage<global::Sungero.CoreEntities.IStorage>), "Storage")]


  public class StoragePolicyBase :
    global::Sungero.CoreEntities.Server.DatabookEntry, global::Sungero.Docflow.IStoragePolicyBase
  {
    public static new readonly global::System.Guid ClassTypeGuid = global::System.Guid.Parse("a745bc15-ae3d-4fdc-a136-3715a923b3d9");

    public override global::System.Guid TypeGuid
    {
      get { return global::Sungero.Docflow.Server.StoragePolicyBase.ClassTypeGuid; }
    }

    public override string TypeName
    {
      get { return "Sungero.Docflow.IStoragePolicyBase, Sungero.Domain.Interfaces"; }
    }

    public override string DisplayValue
    {
      get { return this.Name; }
      set { this.Name = value; }
    }

    public new virtual global::Sungero.Docflow.IStoragePolicyBaseState State
    {
      get { return (global::Sungero.Docflow.IStoragePolicyBaseState)base.State; }
    }

    protected override global::Sungero.Domain.Shared.IEntityState CreateState()
    {
      return new global::Sungero.Docflow.Shared.StoragePolicyBaseState(this);
    }

    public new virtual global::Sungero.Docflow.IStoragePolicyBaseInfo Info
    {
      get { return (global::Sungero.Docflow.IStoragePolicyBaseInfo)base.Info; }
    }

    public new virtual global::Sungero.Docflow.IStoragePolicyBaseAccessRights AccessRights
    {
      get { return (global::Sungero.Docflow.IStoragePolicyBaseAccessRights)base.AccessRights; }
    }

    protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
    {
      return new global::Sungero.Docflow.Server.StoragePolicyBaseAccessRights(this);
    }

    protected override global::Sungero.Domain.EntityFunctions CreateServerFunctions()
    {
      return new global::Sungero.Docflow.Server.StoragePolicyBaseFunctions(this);
    }

    protected override global::Sungero.Domain.Shared.EntityFunctions CreateSharedFunctions()
    {
      return new global::Sungero.Docflow.Shared.StoragePolicyBaseFunctions(this);
    }

    protected override object CreateHandlers() {
      return new global::Sungero.Docflow.StoragePolicyBaseServerHandlers(this);
    }

    protected override object CreateSharedHandlers() {
      return new global::Sungero.Docflow.StoragePolicyBaseSharedHandlers(this);
    }

    private global::System.Int32? _Priority;
    public virtual global::System.Int32? Priority
    {
      get
      {
        return this._Priority;
      }

      set
      {
        this.SetPropertyValue("Priority", this._Priority, value, (propertyValue) => { this._Priority = propertyValue; }, this.PriorityChangedHandler);
      }
    }
    private global::System.String _Name;
    public virtual global::System.String Name
    {
      get
      {
        return this._Name;
      }

      set
      {
        this.SetPropertyValue("Name", this._Name, value, (propertyValue) => { this._Name = propertyValue; }, this.NameChangedHandler);
      }
    }
    private global::System.String _Note;
    public virtual global::System.String Note
    {
      get
      {
        return this._Note;
      }

      set
      {
        this.SetPropertyValue("Note", this._Note, value, (propertyValue) => { this._Note = propertyValue; }, this.NoteChangedHandler);
      }
    }







    private global::Sungero.CoreEntities.IStorage _Storage;
    public virtual global::Sungero.CoreEntities.IStorage Storage
    {
      get
      {
        return this._Storage;
      }

      set
      {
        this.SetPropertyValue("Storage", this._Storage, value, (propertyValue) => { this._Storage = propertyValue; }, this.StorageChangedHandler);
      }
    }


    protected global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Docflow.IStoragePolicyBaseDocumentKinds> _DocumentKinds;

    public virtual global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Docflow.IStoragePolicyBaseDocumentKinds> DocumentKinds
    {
      get
      {
        if (this._DocumentKinds == null)
        {
          this._DocumentKinds = this.CreateDocumentKindsCollection();
          this.SetDocumentKindsEventHandlers();
        }
        return this._DocumentKinds;
      }

      set
      {
        if (this._DocumentKinds != null)
          this.UnsetChildCollectionEventHandlers(this._DocumentKinds);

        this._DocumentKinds = value;
        this.SetDocumentKindsEventHandlers();
      }
    }

    protected virtual global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Docflow.IStoragePolicyBaseDocumentKinds> CreateDocumentKindsCollection()
    {
      return new global::Sungero.Domain.ChildEntityCollection<global::Sungero.Docflow.IStoragePolicyBaseDocumentKinds>() { RootEntity = this };
    }

    private void SetDocumentKindsEventHandlers()
    {
      this.SetChildCollectionEventHandlers(this._DocumentKinds, "DocumentKinds");

      var changeNotifier = (global::Sungero.Domain.Shared.INotifyChildEntityCollectionChanged)this._DocumentKinds;
      changeNotifier.Added += this.DocumentKindsAddedHandler;
      changeNotifier.Deleted += this.DocumentKindsDeletedHandler;
      changeNotifier.Added += this.DocumentKindsCollectionUpdateEventHandler;
      changeNotifier.Deleted += this.DocumentKindsCollectionUpdateEventHandler;
      changeNotifier.Updated += this.DocumentKindsCollectionUpdateEventHandler;
    }

    private void DocumentKindsCollectionUpdateEventHandler(object sender, global::Sungero.Domain.Shared.BaseChildEntityEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      if (this.IsPropertyChangedHandlerEnabled)
        this.DocumentKindsChangedHandler();
    }



    protected override global::Sungero.Domain.Shared.EntityCreatingFromServerHandler CreateCreatingFromServerHandler(
      global::Sungero.Domain.Shared.IEntity entitySource)
    {
      return new global::Sungero.Docflow.StoragePolicyBaseCreatingFromServerHandler((global::Sungero.Docflow.IStoragePolicyBase)entitySource, this.Info);
    }

    #region Framework events

    protected void PriorityChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.IntegerPropertyChangedEventArgs(this.State.Properties.Priority, this.Priority, this);
     ((global::Sungero.Docflow.StoragePolicyBaseSharedHandlers)this.SharedHandlers).PriorityChanged(args);
    }

    protected void StorageChangedHandler()
    {
      var args = new global::Sungero.Docflow.Shared.StoragePolicyBaseStorageChangedEventArgs(this.State.Properties.Storage, this.Storage, this);
     ((global::Sungero.Docflow.StoragePolicyBaseSharedHandlers)this.SharedHandlers).StorageChanged(args);
    }

    protected void NameChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.Name, this.Name, this);
     ((global::Sungero.Docflow.StoragePolicyBaseSharedHandlers)this.SharedHandlers).NameChanged(args);
    }

    protected void DocumentKindsChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.CollectionPropertyChangedEventArgs(this);
     ((global::Sungero.Docflow.StoragePolicyBaseSharedHandlers)this.SharedHandlers).DocumentKindsChanged(args);
    }

    protected void NoteChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.Note, this.Note, this);
     ((global::Sungero.Docflow.StoragePolicyBaseSharedHandlers)this.SharedHandlers).NoteChanged(args);
    }



    protected virtual global::Sungero.Docflow.StoragePolicyBaseDocumentKindsSharedCollectionHandlers CreateDocumentKindsAddedHandler(global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.Docflow.StoragePolicyBaseDocumentKindsSharedCollectionHandlers(this, e.Value, null, e.Source);
    }

    protected virtual global::Sungero.Docflow.StoragePolicyBaseDocumentKindsSharedCollectionHandlers CreateDocumentKindsDeletedHandler(global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.Docflow.StoragePolicyBaseDocumentKindsSharedCollectionHandlers(this, null, e.Value, null);
    }

    protected virtual void DocumentKindsAddedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {  
      var collectionHandlers = this.CreateDocumentKindsAddedHandler(e);
      if (collectionHandlers != null)
      {
        var args = new global::Sungero.Domain.Shared.CollectionPropertyAddedEventArgs(this);
        collectionHandlers.DocumentKindsAdded(args);
      }
    }

    protected virtual void DocumentKindsDeletedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {  
      var collectionHandlers = this.CreateDocumentKindsDeletedHandler(e);
      if (collectionHandlers != null)
      {
        var args = new global::Sungero.Domain.Shared.CollectionPropertyDeletedEventArgs(this);
        collectionHandlers.DocumentKindsDeleted(args);
      }
    }


    #endregion


    public StoragePolicyBase()
    {
    }

  }
}

// ==================================================================
// StoragePolicyBaseHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow
{
  public partial class StoragePolicyBaseStoragePropertyFilteringServerHandler<T>
    : global::Sungero.Domain.EntityPropertyFilteringServerHandler
    where T : class, global::Sungero.CoreEntities.IStorage
  {
    private global::Sungero.Docflow.IStoragePolicyBase _obj
    {
      get { return (global::Sungero.Docflow.IStoragePolicyBase)this.Entity; }
    }

    public virtual global::System.Linq.IQueryable<T> StorageFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertyFilteringEventArgs e)
    {
      return query;
    }

    public StoragePolicyBaseStoragePropertyFilteringServerHandler(global::Sungero.Docflow.IStoragePolicyBase entity)
      : base(entity)
    {
    }
  }

  public partial class StoragePolicyBaseStorageSearchPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.SearchPropertyFilteringServerHandler
    where T : class, global::Sungero.CoreEntities.IStorage
  {

    public virtual global::System.Linq.IQueryable<T> StorageSearchDialogFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertySearchDialogFilteringEventArgs e)
    {
      return query;
    }

    public StoragePolicyBaseStorageSearchPropertyFilteringServerHandler()
      : base()
    {
    }
  }



  public partial class StoragePolicyBaseFilteringServerHandler<T>
    : global::Sungero.Domain.EntityFilteringServerHandler<T>  
    where T : class, global::Sungero.Docflow.IStoragePolicyBase
  {
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    protected new global::Sungero.Docflow.IStoragePolicyBaseFilterState Filter { get; private set; }

    private global::Sungero.Docflow.IStoragePolicyBaseFilterState _filter
    {
      get
      {
        return this.Filter;
      }
    }

    public StoragePolicyBaseFilteringServerHandler(global::Sungero.Docflow.IStoragePolicyBaseFilterState filter)
    : base()
    {
      this.Filter = filter;
    }

    protected StoragePolicyBaseFilteringServerHandler()
    {
    }

    public override global::System.Linq.IQueryable<T> Filtering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.FilteringEventArgs e)
    {
      return query;
    }


  }

  public partial class StoragePolicyBaseUiFilteringServerHandler<T>
    : global::Sungero.Domain.EntityUiFilteringServerHandler<T>
    where T : class, global::Sungero.Docflow.IStoragePolicyBase
  {
    public override global::System.Linq.IQueryable<T> Filtering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.UiFilteringEventArgs e)
    {
      query = base.Filtering(query, e);
            return query;
    }
  }

  public partial class StoragePolicyBaseSearchDialogServerHandler : global::Sungero.CoreEntities.DatabookEntrySearchDialogServerHandler
   {
     private global::Sungero.Docflow.Server.StoragePolicyBaseSearchDialogModel _dialog
     {
       get
       {
         return (global::Sungero.Docflow.Server.StoragePolicyBaseSearchDialogModel)this.Dialog;
       }
     }

     public StoragePolicyBaseSearchDialogServerHandler(global::Sungero.Docflow.Server.StoragePolicyBaseSearchDialogModel dialog)
       : base(dialog)
     {
     }
   }

  public partial class StoragePolicyBaseServerHandlers : global::Sungero.CoreEntities.DatabookEntryServerHandlers
  {
    private global::Sungero.Docflow.IStoragePolicyBase _obj
    {
      get { return (global::Sungero.Docflow.IStoragePolicyBase)this.Entity; }
    }

    public StoragePolicyBaseServerHandlers(global::Sungero.Docflow.IStoragePolicyBase entity)
      : base(entity)
    {
    }
  }

  public partial class StoragePolicyBaseCreatingFromServerHandler : global::Sungero.CoreEntities.DatabookEntryCreatingFromServerHandler
  {
    private global::Sungero.Docflow.IStoragePolicyBase _source
    {
      get { return (global::Sungero.Docflow.IStoragePolicyBase)this.Source; }
    }

    private global::Sungero.Docflow.IStoragePolicyBaseInfo _info
    {
      get { return (global::Sungero.Docflow.IStoragePolicyBaseInfo)this._Info; }
    }

    public StoragePolicyBaseCreatingFromServerHandler(global::Sungero.Docflow.IStoragePolicyBase source, global::Sungero.Docflow.IStoragePolicyBaseInfo info)
      : base(source, info)
    {
    }
  }

}

// ==================================================================
// StoragePolicyBaseEventArgs.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
}

// ==================================================================
// StoragePolicyBaseAccessRights.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
  public class StoragePolicyBaseAccessRights : 
    Sungero.CoreEntities.Server.DatabookEntryAccessRights, Sungero.Docflow.IStoragePolicyBaseAccessRights
  {

    public StoragePolicyBaseAccessRights(global::Sungero.Domain.Shared.IEntity entity) : base(entity)
    {
    }
  }

  public class StoragePolicyBaseTypeAccessRights : 
    Sungero.CoreEntities.Server.DatabookEntryTypeAccessRights, Sungero.Docflow.IStoragePolicyBaseAccessRights
  {

    public StoragePolicyBaseTypeAccessRights(global::System.Type entityType) : base(entityType)
    {
    }
  }
}

// ==================================================================
// StoragePolicyBaseRepositoryImplementer.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
    public class StoragePolicyBaseRepositoryImplementer<T> : 
      global::Sungero.Domain.RepositoryImplementer<T>,
      global::Sungero.Docflow.IStoragePolicyBaseRepositoryImplementer<T>
      where T : global::Sungero.Docflow.IStoragePolicyBase 
    {
       public new global::Sungero.Docflow.IStoragePolicyBaseAccessRights AccessRights
       {
          get { return (global::Sungero.Docflow.IStoragePolicyBaseAccessRights)base.AccessRights; }
       }

       public new global::Sungero.Docflow.IStoragePolicyBaseInfo Info
       {
          get { return (global::Sungero.Docflow.IStoragePolicyBaseInfo)base.Info; }
       }

       protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
       {
         return new global::Sungero.Docflow.Server.StoragePolicyBaseTypeAccessRights(typeof(T));
       }
    }
}

// ==================================================================
// StoragePolicyBasePanelNavigationFilters.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
}

// ==================================================================
// StoragePolicyBaseServerFunctions.g.cs
// ==================================================================

namespace Sungero.Docflow.Server
{
  public partial class StoragePolicyBaseFunctions : global::Sungero.CoreEntities.Server.DatabookEntryFunctions
  {
    private global::Sungero.Docflow.IStoragePolicyBase _obj
    {
      get { return (global::Sungero.Docflow.IStoragePolicyBase)this.Entity; }
    }

    public StoragePolicyBaseFunctions(global::Sungero.Docflow.IStoragePolicyBase entity) : base(entity) { }
  }
}

// ==================================================================
// StoragePolicyBaseFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Functions
{
  internal static class StoragePolicyBase
  {
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.StoragePolicyBaseFunctions" />
    internal static  global::System.Boolean HasSamePriorityPolicies(global::Sungero.Docflow.IStoragePolicyBase storagePolicyBase)
    {
      var functions = (global::Sungero.Docflow.Server.StoragePolicyBaseFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)storagePolicyBase).FunctionsContainer.ServerFunctions;
      return functions.HasSamePriorityPolicies();
    }

  }
}

// ==================================================================
// StoragePolicyBaseServerPublicFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
  public class StoragePolicyBaseServerPublicFunctions : global::Sungero.Docflow.Server.IStoragePolicyBaseServerPublicFunctions
  {
  }
}

// ==================================================================
// StoragePolicyBaseQueries.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Queries
{
  public class StoragePolicyBase
  {
    private static global::Sungero.Domain.SqlQueryResolver resolver = new global::Sungero.Domain.SqlQueryResolver("Sungero.Docflow.Server.StoragePolicyBase.StoragePolicyBaseQueries.xml", System.Reflection.Assembly.GetExecutingAssembly());
  }
}
