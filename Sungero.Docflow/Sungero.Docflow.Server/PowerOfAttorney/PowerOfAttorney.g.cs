
// ==================================================================
// PowerOfAttorney.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
    public class PowerOfAttorneyFilter<T> :
      global::Sungero.Docflow.Server.InternalDocumentBaseFilter<T>
      where T : class, global::Sungero.Docflow.IPowerOfAttorney
    {
      private global::Sungero.Docflow.IPowerOfAttorneyFilterState filter
      {
        get
        {
          return (Sungero.Docflow.IPowerOfAttorneyFilterState)this.Filter;
        }
      }

      protected override global::System.Linq.IQueryable<T> ApplyAppliedFilter(global::System.Linq.IQueryable<T> query)
      {
        var args = new global::Sungero.Domain.FilteringEventArgs();
        var result = new global::Sungero.Docflow.PowerOfAttorneyFilteringServerHandler<T>(this.filter).Filtering(query, args);
        if (args.DisableCheckRights)
    	  global::Sungero.Domain.Security.FilteringAccessRightsOptions.DisableCheckRights<T>();
        return result;
      }

      public PowerOfAttorneyFilter(global::Sungero.Docflow.IPowerOfAttorneyFilterState filter)
      : base(filter)
      {
      }

      protected PowerOfAttorneyFilter()
      {
      }
    }
    public class PowerOfAttorneySearchDialogModel : global::Sungero.Docflow.Server.InternalDocumentBaseSearchDialogModel
        {
                  public override global::System.Int32? Id { get; protected set; }
                  public override global::System.String Name { get; protected set; }
                  public override global::System.String Subject { get; protected set; }


                  public override global::System.Collections.Generic.IEnumerable<Sungero.Core.Enumeration> VerificationState { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<Sungero.Docflow.IDocumentKind> DocumentKind { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<Sungero.Content.IAssociatedApplication> AssociatedApplication { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<Sungero.CoreEntities.IRecipient> PreparedBy { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<Sungero.CoreEntities.IRecipient> Author { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<CommonLibrary.DateRangeValue> Created { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<Sungero.Company.IBusinessUnit> BusinessUnit { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<Sungero.Company.IDepartment> Department { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<Sungero.CoreEntities.IRecipient> OurSignatory { get; protected set; }



                  public virtual global::System.Collections.Generic.IEnumerable<Sungero.CoreEntities.IRecipient> IssuedTo { get; protected set; }


                   public new PowerOfAttorneyVersionsModel Versions { get { return (PowerOfAttorneyVersionsModel)base.Versions; } protected set { base.Versions = value; } }
                   [Sungero.Domain.Shared.HideInDevStudio()]
                   public new PowerOfAttorneyTrackingModel Tracking { get { return (PowerOfAttorneyTrackingModel)base.Tracking; } protected set { base.Tracking = value; } }

        }

      public class PowerOfAttorneyVersionsModel : global::Sungero.Docflow.Server.InternalDocumentBaseVersionsModel
          {
                      [Sungero.Domain.Shared.HideInDevStudio()]
                      public override global::System.Int32? Id { get; protected set; }
                      public override global::System.String Body { get; protected set; }




         }
      public class PowerOfAttorneyTrackingModel : global::Sungero.Docflow.Server.InternalDocumentBaseTrackingModel
          {
                      [Sungero.Domain.Shared.HideInDevStudio()]
                      public override global::System.Int32? Id { get; protected set; }




         }




  public class PowerOfAttorneyFilterForIssuedTo<TQueryEntity, TSourceEntity>
    : global::Sungero.Domain.EntityPropertyFilterBase<TQueryEntity, TSourceEntity>
    where TQueryEntity : class, global::Sungero.Company.IEmployee
    where TSourceEntity : class, global::Sungero.Docflow.IPowerOfAttorney
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, TSourceEntity sourceEntity)
    {
      var args = new global::Sungero.Domain.PropertyFilteringEventArgs(sourceEntity);
      var result = new global::Sungero.Docflow.PowerOfAttorneyIssuedToPropertyFilteringServerHandler<TQueryEntity>(sourceEntity).IssuedToFiltering(query, args);
      if (args.DisableUiFiltering)
        global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public PowerOfAttorneyFilterForIssuedTo(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class PowerOfAttorneySearchFilterForIssuedTo<TQueryEntity>
    : global::Sungero.Domain.SearchDialogPropertyFilter<TQueryEntity>
    where TQueryEntity : class, global::Sungero.CoreEntities.IRecipient
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, System.Guid entityType)
    {
      var args = new global::Sungero.Domain.PropertySearchDialogFilteringEventArgs(entityType);
      var result = new global::Sungero.Docflow.PowerOfAttorneyIssuedToSearchPropertyFilteringServerHandler<TQueryEntity>().IssuedToSearchDialogFiltering(query, args);
      if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public PowerOfAttorneySearchFilterForIssuedTo(string propertyName)
      : base(propertyName)
    {
    }
  }



  [global::Sungero.Domain.Filter(typeof(global::Sungero.Docflow.Server.PowerOfAttorneyFilter<global::Sungero.Docflow.IPowerOfAttorney>))]
  [global::Sungero.Domain.PropertyFilter(typeof(global::Sungero.Docflow.Server.PowerOfAttorneyFilterForIssuedTo<global::Sungero.Company.IEmployee, global::Sungero.Docflow.IPowerOfAttorney>), "IssuedTo")]
  [global::Sungero.Domain.SearchPropertyFilter(typeof(global::Sungero.Docflow.Server.PowerOfAttorneySearchFilterForIssuedTo<global::Sungero.CoreEntities.IRecipient>), "IssuedTo")]


  public class PowerOfAttorney :
    global::Sungero.Docflow.Server.InternalDocumentBase, global::Sungero.Docflow.IPowerOfAttorney, global::Sungero.Domain.Shared.ISecurableEntity, global::Sungero.Domain.IInternalSecurableEntity
  {
    public static new readonly global::System.Guid ClassTypeGuid = global::System.Guid.Parse("be859f9b-7a04-4f07-82bc-441352bce627");

    public override global::System.Guid TypeGuid
    {
      get { return global::Sungero.Docflow.Server.PowerOfAttorney.ClassTypeGuid; }
    }

    public override string TypeName
    {
      get { return "Sungero.Docflow.IPowerOfAttorney, Sungero.Domain.Interfaces"; }
    }

    public override string DisplayValue
    {
      get { return this.Name; }
      set { this.Name = value; }
    }

    public new virtual global::Sungero.Docflow.IPowerOfAttorneyState State
    {
      get { return (global::Sungero.Docflow.IPowerOfAttorneyState)base.State; }
    }

    protected override global::Sungero.Domain.Shared.IEntityState CreateState()
    {
      return new global::Sungero.Docflow.Shared.PowerOfAttorneyState(this);
    }

    public new virtual global::Sungero.Docflow.IPowerOfAttorneyInfo Info
    {
      get { return (global::Sungero.Docflow.IPowerOfAttorneyInfo)base.Info; }
    }

    public new virtual global::Sungero.Docflow.IPowerOfAttorneyAccessRights AccessRights
    {
      get { return (global::Sungero.Docflow.IPowerOfAttorneyAccessRights)base.AccessRights; }
    }

    protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
    {
      return new global::Sungero.Docflow.Server.PowerOfAttorneyAccessRights(this);
    }

    protected override global::Sungero.Domain.EntityFunctions CreateServerFunctions()
    {
      return new global::Sungero.Docflow.Server.PowerOfAttorneyFunctions(this);
    }

    protected override global::Sungero.Domain.Shared.EntityFunctions CreateSharedFunctions()
    {
      return new global::Sungero.Docflow.Shared.PowerOfAttorneyFunctions(this);
    }

    protected override object CreateHandlers() {
      return new global::Sungero.Docflow.PowerOfAttorneyServerHandlers(this);
    }

    protected override object CreateSharedHandlers() {
      return new global::Sungero.Docflow.PowerOfAttorneySharedHandlers(this);
    }

    private global::System.DateTime? _ValidTill;
    public virtual global::System.DateTime? ValidTill
    {
      get
      {
        return this._ValidTill;
      }

      set
      {
        this.SetPropertyValue("ValidTill", this._ValidTill, value, (propertyValue) => { this._ValidTill = propertyValue; }, this.ValidTillChangedHandler);
      }
    }
    private global::System.Int32? _DaysToFinishWorks;
    public virtual global::System.Int32? DaysToFinishWorks
    {
      get
      {
        return this._DaysToFinishWorks;
      }

      set
      {
        this.SetPropertyValue("DaysToFinishWorks", this._DaysToFinishWorks, value, (propertyValue) => { this._DaysToFinishWorks = propertyValue; }, this.DaysToFinishWorksChangedHandler);
      }
    }







    private global::Sungero.Company.IEmployee _IssuedTo;
    public virtual global::Sungero.Company.IEmployee IssuedTo
    {
      get
      {
        return this._IssuedTo;
      }

      set
      {
        this.SetPropertyValue("IssuedTo", this._IssuedTo, value, (propertyValue) => { this._IssuedTo = propertyValue; }, this.IssuedToChangedHandler);
      }
    }



    protected override global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Content.IElectronicDocumentVersions> CreateVersionsCollection()
    {
      return new global::Sungero.Domain.ChildEntityCollection<global::Sungero.Docflow.IPowerOfAttorneyVersions>() { RootEntity = this };
    }
    protected override global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Docflow.IOfficialDocumentTracking> CreateTrackingCollection()
    {
      return new global::Sungero.Domain.ChildEntityCollection<global::Sungero.Docflow.IPowerOfAttorneyTracking>() { RootEntity = this };
    }


    protected override global::Sungero.Domain.Shared.EntityCreatingFromServerHandler CreateCreatingFromServerHandler(
      global::Sungero.Domain.Shared.IEntity entitySource)
    {
      return new global::Sungero.Docflow.PowerOfAttorneyCreatingFromServerHandler((global::Sungero.Docflow.IPowerOfAttorney)entitySource, this.Info);
    }

    #region Framework events

    protected void ValidTillChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.DateTimePropertyChangedEventArgs(this.State.Properties.ValidTill, this.ValidTill, this);
     ((global::Sungero.Docflow.PowerOfAttorneySharedHandlers)this.SharedHandlers).ValidTillChanged(args);
    }

    protected void IssuedToChangedHandler()
    {
      var args = new global::Sungero.Docflow.Shared.PowerOfAttorneyIssuedToChangedEventArgs(this.State.Properties.IssuedTo, this.IssuedTo, this);
     ((global::Sungero.Docflow.PowerOfAttorneySharedHandlers)this.SharedHandlers).IssuedToChanged(args);
    }

    protected void DaysToFinishWorksChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.IntegerPropertyChangedEventArgs(this.State.Properties.DaysToFinishWorks, this.DaysToFinishWorks, this);
     ((global::Sungero.Docflow.PowerOfAttorneySharedHandlers)this.SharedHandlers).DaysToFinishWorksChanged(args);
    }





    #endregion


    public PowerOfAttorney()
    {
    }

    protected override global::Sungero.Domain.Shared.EntityConvertingFromServerHandler CreateConvertingFromServerHandler(   
      global::Sungero.Domain.Shared.IEntity entitySource)
    {
      return new global::Sungero.Docflow.PowerOfAttorneyConvertingFromServerHandler((global::Sungero.Content.IElectronicDocument)entitySource, this.Info);
    }

  }
}

// ==================================================================
// PowerOfAttorneyHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow
{
  public partial class PowerOfAttorneyIssuedToPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.EntityPropertyFilteringServerHandler
    where T : class, global::Sungero.Company.IEmployee
  {
    private global::Sungero.Docflow.IPowerOfAttorney _obj
    {
      get { return (global::Sungero.Docflow.IPowerOfAttorney)this.Entity; }
    }

    public virtual global::System.Linq.IQueryable<T> IssuedToFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertyFilteringEventArgs e)
    {
      return query;
    }

    public PowerOfAttorneyIssuedToPropertyFilteringServerHandler(global::Sungero.Docflow.IPowerOfAttorney entity)
      : base(entity)
    {
    }
  }

  public partial class PowerOfAttorneyIssuedToSearchPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.SearchPropertyFilteringServerHandler
    where T : class, global::Sungero.CoreEntities.IRecipient
  {

    public virtual global::System.Linq.IQueryable<T> IssuedToSearchDialogFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertySearchDialogFilteringEventArgs e)
    {
      return query;
    }

    public PowerOfAttorneyIssuedToSearchPropertyFilteringServerHandler()
      : base()
    {
    }
  }



  public partial class PowerOfAttorneyFilteringServerHandler<T>
    : global::Sungero.Docflow.InternalDocumentBaseFilteringServerHandler<T>  
    where T : class, global::Sungero.Docflow.IPowerOfAttorney
  {
    private global::Sungero.Docflow.IPowerOfAttorneyFilterState _filter
    {
      get
      {
        return (Sungero.Docflow.IPowerOfAttorneyFilterState)this.Filter;
      }
    }

    public PowerOfAttorneyFilteringServerHandler(global::Sungero.Docflow.IPowerOfAttorneyFilterState filter)
    : base(filter)
    {
    }

    protected PowerOfAttorneyFilteringServerHandler()
    {
    }

      public override global::System.Linq.IQueryable<Sungero.Docflow.IDocumentRegister> DocumentRegisterFiltering(global::System.Linq.IQueryable<Sungero.Docflow.IDocumentRegister> query, global::Sungero.Domain.FilteringEventArgs e)
      {
        query = base.DocumentRegisterFiltering(query, e);
              return query;
      }

      public override global::System.Linq.IQueryable<Sungero.Docflow.IDocumentKind> DocumentKindFiltering(global::System.Linq.IQueryable<Sungero.Docflow.IDocumentKind> query, global::Sungero.Domain.FilteringEventArgs e)
      {
        query = base.DocumentKindFiltering(query, e);
              return query;
      }

      public override global::System.Linq.IQueryable<Sungero.Company.IBusinessUnit> BusinessUnitFiltering(global::System.Linq.IQueryable<Sungero.Company.IBusinessUnit> query, global::Sungero.Domain.FilteringEventArgs e)
      {
        query = base.BusinessUnitFiltering(query, e);
              return query;
      }

      public override global::System.Linq.IQueryable<Sungero.Company.IDepartment> DepartmentFiltering(global::System.Linq.IQueryable<Sungero.Company.IDepartment> query, global::Sungero.Domain.FilteringEventArgs e)
      {
        query = base.DepartmentFiltering(query, e);
              return query;
      }

      public virtual global::System.Linq.IQueryable<Sungero.Company.IEmployee> PerformerFiltering(global::System.Linq.IQueryable<Sungero.Company.IEmployee> query, global::Sungero.Domain.FilteringEventArgs e)
      {
        return query;
      }


  }

  public partial class PowerOfAttorneySearchDialogServerHandler : global::Sungero.Docflow.InternalDocumentBaseSearchDialogServerHandler
   {
     private global::Sungero.Docflow.Server.PowerOfAttorneySearchDialogModel _dialog
     {
       get
       {
         return (global::Sungero.Docflow.Server.PowerOfAttorneySearchDialogModel)this.Dialog;
       }
     }

     public PowerOfAttorneySearchDialogServerHandler(global::Sungero.Docflow.Server.PowerOfAttorneySearchDialogModel dialog)
       : base(dialog)
     {
     }
   }

  public partial class PowerOfAttorneyServerHandlers : global::Sungero.Docflow.InternalDocumentBaseServerHandlers
  {
    private global::Sungero.Docflow.IPowerOfAttorney _obj
    {
      get { return (global::Sungero.Docflow.IPowerOfAttorney)this.Entity; }
    }

    public PowerOfAttorneyServerHandlers(global::Sungero.Docflow.IPowerOfAttorney entity)
      : base(entity)
    {
    }
  }

  public partial class PowerOfAttorneyCreatingFromServerHandler : global::Sungero.Docflow.InternalDocumentBaseCreatingFromServerHandler
  {
    private global::Sungero.Docflow.IPowerOfAttorney _source
    {
      get { return (global::Sungero.Docflow.IPowerOfAttorney)this.Source; }
    }

    private global::Sungero.Docflow.IPowerOfAttorneyInfo _info
    {
      get { return (global::Sungero.Docflow.IPowerOfAttorneyInfo)this._Info; }
    }

    public PowerOfAttorneyCreatingFromServerHandler(global::Sungero.Docflow.IPowerOfAttorney source, global::Sungero.Docflow.IPowerOfAttorneyInfo info)
      : base(source, info)
    {
    }
  }

}

// ==================================================================
// PowerOfAttorneyEventArgs.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
}

// ==================================================================
// PowerOfAttorneyAccessRights.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
  public class PowerOfAttorneyAccessRights : 
    Sungero.Docflow.Server.InternalDocumentBaseAccessRights, Sungero.Docflow.IPowerOfAttorneyAccessRights
  {

    public PowerOfAttorneyAccessRights(global::Sungero.Domain.Shared.IEntity entity) : base(entity)
    {
    }
  }

  public class PowerOfAttorneyTypeAccessRights : 
    Sungero.Docflow.Server.InternalDocumentBaseTypeAccessRights, Sungero.Docflow.IPowerOfAttorneyAccessRights
  {

    public PowerOfAttorneyTypeAccessRights(global::System.Type entityType) : base(entityType)
    {
    }
  }
}

// ==================================================================
// PowerOfAttorneyRepositoryImplementer.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
    public class PowerOfAttorneyRepositoryImplementer<T> : 
      global::Sungero.Docflow.Server.InternalDocumentBaseRepositoryImplementer<T>,
      global::Sungero.Docflow.IPowerOfAttorneyRepositoryImplementer<T>
      where T : global::Sungero.Docflow.IPowerOfAttorney 
    {
       public new global::Sungero.Docflow.IPowerOfAttorneyAccessRights AccessRights
       {
          get { return (global::Sungero.Docflow.IPowerOfAttorneyAccessRights)base.AccessRights; }
       }

       public new global::Sungero.Docflow.IPowerOfAttorneyInfo Info
       {
          get { return (global::Sungero.Docflow.IPowerOfAttorneyInfo)base.Info; }
       }

       protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
       {
         return new global::Sungero.Docflow.Server.PowerOfAttorneyTypeAccessRights(typeof(T));
       }
    }
}

// ==================================================================
// PowerOfAttorneyPanelNavigationFilters.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
    public class PowerOfAttorneyDocumentRegisterPanelNavigationFilter : global::Sungero.Docflow.Server.InternalDocumentBaseDocumentRegisterPanelNavigationFilter
    {
      private global::System.Linq.IQueryable Apply<T>(global::System.Linq.IQueryable query) where T: class, global::Sungero.Docflow.IPowerOfAttorney
      {
        var typedQuery = (global::System.Linq.IQueryable<global::Sungero.Docflow.IDocumentRegister>)query;
        var typedState = (global::Sungero.Docflow.IPowerOfAttorneyFilterState)this.State;
        var handlers = new global::Sungero.Docflow.PowerOfAttorneyFilteringServerHandler<T>(typedState);
        var args = new global::Sungero.Domain.FilteringEventArgs();
        var result = handlers.DocumentRegisterFiltering(typedQuery, args);
        if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<global::Sungero.Docflow.IDocumentRegister>();
        return result;
      }

      public override global::System.Linq.IQueryable Apply(global::System.Linq.IQueryable query)
      {
        return this.Apply<global::Sungero.Docflow.IPowerOfAttorney>(query);
      }
    }

    public class PowerOfAttorneyDocumentKindPanelNavigationFilter : global::Sungero.Docflow.Server.InternalDocumentBaseDocumentKindPanelNavigationFilter
    {
      private global::System.Linq.IQueryable Apply<T>(global::System.Linq.IQueryable query) where T: class, global::Sungero.Docflow.IPowerOfAttorney
      {
        var typedQuery = (global::System.Linq.IQueryable<global::Sungero.Docflow.IDocumentKind>)query;
        var typedState = (global::Sungero.Docflow.IPowerOfAttorneyFilterState)this.State;
        var handlers = new global::Sungero.Docflow.PowerOfAttorneyFilteringServerHandler<T>(typedState);
        var args = new global::Sungero.Domain.FilteringEventArgs();
        var result = handlers.DocumentKindFiltering(typedQuery, args);
        if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<global::Sungero.Docflow.IDocumentKind>();
        return result;
      }

      public override global::System.Linq.IQueryable Apply(global::System.Linq.IQueryable query)
      {
        return this.Apply<global::Sungero.Docflow.IPowerOfAttorney>(query);
      }
    }

    public class PowerOfAttorneyBusinessUnitPanelNavigationFilter : global::Sungero.Docflow.Server.InternalDocumentBaseBusinessUnitPanelNavigationFilter
    {
      private global::System.Linq.IQueryable Apply<T>(global::System.Linq.IQueryable query) where T: class, global::Sungero.Docflow.IPowerOfAttorney
      {
        var typedQuery = (global::System.Linq.IQueryable<global::Sungero.Company.IBusinessUnit>)query;
        var typedState = (global::Sungero.Docflow.IPowerOfAttorneyFilterState)this.State;
        var handlers = new global::Sungero.Docflow.PowerOfAttorneyFilteringServerHandler<T>(typedState);
        var args = new global::Sungero.Domain.FilteringEventArgs();
        var result = handlers.BusinessUnitFiltering(typedQuery, args);
        if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<global::Sungero.Company.IBusinessUnit>();
        return result;
      }

      public override global::System.Linq.IQueryable Apply(global::System.Linq.IQueryable query)
      {
        return this.Apply<global::Sungero.Docflow.IPowerOfAttorney>(query);
      }
    }

    public class PowerOfAttorneyDepartmentPanelNavigationFilter : global::Sungero.Docflow.Server.InternalDocumentBaseDepartmentPanelNavigationFilter
    {
      private global::System.Linq.IQueryable Apply<T>(global::System.Linq.IQueryable query) where T: class, global::Sungero.Docflow.IPowerOfAttorney
      {
        var typedQuery = (global::System.Linq.IQueryable<global::Sungero.Company.IDepartment>)query;
        var typedState = (global::Sungero.Docflow.IPowerOfAttorneyFilterState)this.State;
        var handlers = new global::Sungero.Docflow.PowerOfAttorneyFilteringServerHandler<T>(typedState);
        var args = new global::Sungero.Domain.FilteringEventArgs();
        var result = handlers.DepartmentFiltering(typedQuery, args);
        if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<global::Sungero.Company.IDepartment>();
        return result;
      }

      public override global::System.Linq.IQueryable Apply(global::System.Linq.IQueryable query)
      {
        return this.Apply<global::Sungero.Docflow.IPowerOfAttorney>(query);
      }
    }

    public class PowerOfAttorneyPerformerPanelNavigationFilter : global::Sungero.Domain.PanelNavigationFilterBase
    {
      private global::System.Linq.IQueryable Apply<T>(global::System.Linq.IQueryable query) where T: class, global::Sungero.Docflow.IPowerOfAttorney
      {
        var typedQuery = (global::System.Linq.IQueryable<global::Sungero.Company.IEmployee>)query;
        var typedState = (global::Sungero.Docflow.IPowerOfAttorneyFilterState)this.State;
        var handlers = new global::Sungero.Docflow.PowerOfAttorneyFilteringServerHandler<T>(typedState);
        var args = new global::Sungero.Domain.FilteringEventArgs();
        var result = handlers.PerformerFiltering(typedQuery, args);
        if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<global::Sungero.Company.IEmployee>();
        return result;
      }

      public override global::System.Linq.IQueryable Apply(global::System.Linq.IQueryable query)
      {
        return this.Apply<global::Sungero.Docflow.IPowerOfAttorney>(query);
      }
    }

}

// ==================================================================
// PowerOfAttorneyServerFunctions.g.cs
// ==================================================================

namespace Sungero.Docflow.Server
{
  public partial class PowerOfAttorneyFunctions : global::Sungero.Docflow.Server.InternalDocumentBaseFunctions
  {
    private global::Sungero.Docflow.IPowerOfAttorney _obj
    {
      get { return (global::Sungero.Docflow.IPowerOfAttorney)this.Entity; }
    }

    public PowerOfAttorneyFunctions(global::Sungero.Docflow.IPowerOfAttorney entity) : base(entity) { }
  }
}

// ==================================================================
// PowerOfAttorneyFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Functions
{
  internal static class PowerOfAttorney
  {
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.PowerOfAttorneyFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static  global::System.Linq.IQueryable<global::Sungero.Docflow.ISignatureSetting> GetSignatureSettingsByPOA(global::Sungero.Docflow.IPowerOfAttorney powerOfAttorney)
    {
      var functions = (global::Sungero.Docflow.Server.PowerOfAttorneyFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)powerOfAttorney).FunctionsContainer.ServerFunctions;
      return functions.GetSignatureSettingsByPOA();
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.PowerOfAttorneyFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static  global::System.Linq.IQueryable<global::Sungero.Docflow.ISignatureSetting> GetActiveSignatureSettingsByPOA(global::Sungero.Docflow.IPowerOfAttorney powerOfAttorney)
    {
      var functions = (global::Sungero.Docflow.Server.PowerOfAttorneyFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)powerOfAttorney).FunctionsContainer.ServerFunctions;
      return functions.GetActiveSignatureSettingsByPOA();
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.PowerOfAttorneyFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static  global::System.Collections.Generic.List<global::Sungero.Docflow.IPowerOfAttorney> GetActivePowerOfAttorneys(global::Sungero.Company.IEmployee employee, global::System.Nullable<global::System.DateTime> date)
    {
      return global::Sungero.Docflow.Server.PowerOfAttorneyFunctions.GetActivePowerOfAttorneys(employee, date);
    }

    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.PowerOfAttorneyFunctions" />
    internal static  void FillName(global::Sungero.Docflow.IPowerOfAttorney powerOfAttorney)
    {
      var functions = (global::Sungero.Docflow.Shared.PowerOfAttorneyFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)powerOfAttorney).FunctionsContainer.SharedFunctions;
    functions.FillName();
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.PowerOfAttorneyFunctions" />
    internal static  void ChangeRegistrationPaneVisibility(global::Sungero.Docflow.IPowerOfAttorney powerOfAttorney, global::System.Boolean needShow, global::System.Boolean repeatRegister)
    {
      var functions = (global::Sungero.Docflow.Shared.PowerOfAttorneyFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)powerOfAttorney).FunctionsContainer.SharedFunctions;
    functions.ChangeRegistrationPaneVisibility(needShow, repeatRegister);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.PowerOfAttorneyFunctions" />
    internal static  void ChangeDocumentPropertiesAccess(global::Sungero.Docflow.IPowerOfAttorney powerOfAttorney, global::System.Boolean isEnabled, global::System.Boolean isRepeatRegister)
    {
      var functions = (global::Sungero.Docflow.Shared.PowerOfAttorneyFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)powerOfAttorney).FunctionsContainer.SharedFunctions;
    functions.ChangeDocumentPropertiesAccess(isEnabled, isRepeatRegister);
    }

  }
}

// ==================================================================
// PowerOfAttorneyServerPublicFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
  public class PowerOfAttorneyServerPublicFunctions : global::Sungero.Docflow.Server.IPowerOfAttorneyServerPublicFunctions
  {
  }
}

// ==================================================================
// PowerOfAttorneyQueries.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Queries
{
  public class PowerOfAttorney
  {
    private static global::Sungero.Domain.SqlQueryResolver resolver = new global::Sungero.Domain.SqlQueryResolver("Sungero.Docflow.Server.PowerOfAttorney.PowerOfAttorneyQueries.xml", System.Reflection.Assembly.GetExecutingAssembly());
  }
}

// ==================================================================
// PowerOfAttorneyServerHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow
{
  public partial class PowerOfAttorneyConvertingFromServerHandler : global::Sungero.Docflow.InternalDocumentBaseConvertingFromServerHandler
  { 
    private global::Sungero.Docflow.IPowerOfAttorneyInfo _info
    {
      get { return (global::Sungero.Docflow.IPowerOfAttorneyInfo)this._Info; }
    }

    public PowerOfAttorneyConvertingFromServerHandler(global::Sungero.Content.IElectronicDocument source, global::Sungero.Docflow.IPowerOfAttorneyInfo info)
      : base(source, info)
    {
    }
  }
}
