
// ==================================================================
// PersonalSetting.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
    public class PersonalSettingFilter<T> :
      global::Sungero.Domain.EntityFilterBase<T>
      where T : class, global::Sungero.Docflow.IPersonalSetting
    {
      protected new global::Sungero.Docflow.IPersonalSettingFilterState Filter { get; private set; }

      private global::Sungero.Docflow.IPersonalSettingFilterState filter
      {
        get
        {
          return this.Filter;
        }
      }

      protected override global::System.Linq.IQueryable<T> ApplyAppliedFilter(global::System.Linq.IQueryable<T> query)
      {
        return base.ApplyAppliedFilter(query);
      }

      public PersonalSettingFilter(global::Sungero.Docflow.IPersonalSettingFilterState filter)
      : base()
      {
        this.Filter = filter;
      }

      protected PersonalSettingFilter()
      {
      }
    }
      public class PersonalSettingUiFilter<T> :
        global::Sungero.Domain.EntityUiFilterBase<T>
        where T : class, global::Sungero.Docflow.IPersonalSetting
      {
        protected override global::System.Linq.IQueryable<T> ApplyAppliedFilter(global::System.Linq.IQueryable<T> query)
        {
          return base.ApplyAppliedFilter(query);
        }
      }

    public class PersonalSettingSearchDialogModel : global::Sungero.CoreEntities.Server.DatabookEntrySearchDialogModel
        {
                  public override global::System.Int32? Id { get; protected set; }



                  public virtual global::System.String Name { get; protected set; }
                  public virtual global::System.Boolean? ShowRegPane { get; protected set; }
                  public virtual global::System.Boolean? MyContractsNotification { get; protected set; }
                  public virtual global::System.Boolean? MySubordinatesContractsNotification { get; protected set; }
                  public virtual global::System.Boolean? ShowNotApproveSign { get; protected set; }
                  public virtual global::System.Boolean? MyPowersOfAttorneyNotification { get; protected set; }
                  public virtual global::System.Boolean? MySubordinatesPowersOfAttorneyNotification { get; protected set; }


                  public virtual global::System.Collections.Generic.IEnumerable<Sungero.Core.Enumeration> Period { get; protected set; }
                  public virtual global::System.Collections.Generic.IEnumerable<Sungero.Docflow.IDocumentRegister> IncomingDocRegister { get; protected set; }
                  public virtual global::System.Collections.Generic.IEnumerable<Sungero.Docflow.IDocumentRegister> OutgoingDocRegister { get; protected set; }
                  public virtual global::System.Collections.Generic.IEnumerable<Sungero.Docflow.IDocumentRegister> InnerDocRegister { get; protected set; }
                  public virtual global::System.Collections.Generic.IEnumerable<CommonLibrary.DateRangeValue> StartDate { get; protected set; }
                  public virtual global::System.Collections.Generic.IEnumerable<CommonLibrary.DateRangeValue> EndDate { get; protected set; }
                  public virtual global::System.Collections.Generic.IEnumerable<Sungero.CoreEntities.IRecipient> Supervisor { get; protected set; }
                  public virtual global::System.Collections.Generic.IEnumerable<Sungero.Docflow.ICaseFile> IncomingCaseFile { get; protected set; }
                  public virtual global::System.Collections.Generic.IEnumerable<Sungero.Docflow.ICaseFile> OutgoingCaseFile { get; protected set; }
                  public virtual global::System.Collections.Generic.IEnumerable<Sungero.Docflow.ICaseFile> InnerCaseFile { get; protected set; }
                  public virtual global::System.Collections.Generic.IEnumerable<Sungero.Docflow.IMailDeliveryMethod> IncomingDeliveryMethod { get; protected set; }
                  public virtual global::System.Collections.Generic.IEnumerable<Sungero.Docflow.IMailDeliveryMethod> OutgoingDeliveryMethod { get; protected set; }
                  public virtual global::System.Collections.Generic.IEnumerable<Sungero.Docflow.IMailDeliveryMethod> InnerDeliveryMethod { get; protected set; }
                  public virtual global::System.Collections.Generic.IEnumerable<Sungero.CoreEntities.IRecipient> ResolutionAuthor { get; protected set; }
                  public virtual global::System.Collections.Generic.IEnumerable<Sungero.CoreEntities.IRecipient> Employee { get; protected set; }
                  public virtual global::System.Collections.Generic.IEnumerable<Sungero.Company.IBusinessUnit> BusinessUnit { get; protected set; }
                  public virtual global::System.Collections.Generic.IEnumerable<Sungero.Docflow.IDocumentRegister> ContractDocRegister { get; protected set; }
                  public virtual global::System.Collections.Generic.IEnumerable<Sungero.Company.IDepartment> Department { get; protected set; }


        }




  public class PersonalSettingFilterForIncomingDocRegister<TQueryEntity, TSourceEntity>
    : global::Sungero.Domain.EntityPropertyFilterBase<TQueryEntity, TSourceEntity>
    where TQueryEntity : class, global::Sungero.Docflow.IDocumentRegister
    where TSourceEntity : class, global::Sungero.Docflow.IPersonalSetting
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, TSourceEntity sourceEntity)
    {
      var args = new global::Sungero.Domain.PropertyFilteringEventArgs(sourceEntity);
      var result = new global::Sungero.Docflow.PersonalSettingIncomingDocRegisterPropertyFilteringServerHandler<TQueryEntity>(sourceEntity).IncomingDocRegisterFiltering(query, args);
      if (args.DisableUiFiltering)
        global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public PersonalSettingFilterForIncomingDocRegister(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class PersonalSettingSearchFilterForIncomingDocRegister<TQueryEntity>
    : global::Sungero.Domain.SearchDialogPropertyFilter<TQueryEntity>
    where TQueryEntity : class, global::Sungero.Docflow.IDocumentRegister
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, System.Guid entityType)
    {
      var args = new global::Sungero.Domain.PropertySearchDialogFilteringEventArgs(entityType);
      var result = new global::Sungero.Docflow.PersonalSettingIncomingDocRegisterSearchPropertyFilteringServerHandler<TQueryEntity>().IncomingDocRegisterSearchDialogFiltering(query, args);
      if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public PersonalSettingSearchFilterForIncomingDocRegister(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class PersonalSettingFilterForOutgoingDocRegister<TQueryEntity, TSourceEntity>
    : global::Sungero.Domain.EntityPropertyFilterBase<TQueryEntity, TSourceEntity>
    where TQueryEntity : class, global::Sungero.Docflow.IDocumentRegister
    where TSourceEntity : class, global::Sungero.Docflow.IPersonalSetting
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, TSourceEntity sourceEntity)
    {
      var args = new global::Sungero.Domain.PropertyFilteringEventArgs(sourceEntity);
      var result = new global::Sungero.Docflow.PersonalSettingOutgoingDocRegisterPropertyFilteringServerHandler<TQueryEntity>(sourceEntity).OutgoingDocRegisterFiltering(query, args);
      if (args.DisableUiFiltering)
        global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public PersonalSettingFilterForOutgoingDocRegister(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class PersonalSettingSearchFilterForOutgoingDocRegister<TQueryEntity>
    : global::Sungero.Domain.SearchDialogPropertyFilter<TQueryEntity>
    where TQueryEntity : class, global::Sungero.Docflow.IDocumentRegister
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, System.Guid entityType)
    {
      var args = new global::Sungero.Domain.PropertySearchDialogFilteringEventArgs(entityType);
      var result = new global::Sungero.Docflow.PersonalSettingOutgoingDocRegisterSearchPropertyFilteringServerHandler<TQueryEntity>().OutgoingDocRegisterSearchDialogFiltering(query, args);
      if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public PersonalSettingSearchFilterForOutgoingDocRegister(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class PersonalSettingFilterForInnerDocRegister<TQueryEntity, TSourceEntity>
    : global::Sungero.Domain.EntityPropertyFilterBase<TQueryEntity, TSourceEntity>
    where TQueryEntity : class, global::Sungero.Docflow.IDocumentRegister
    where TSourceEntity : class, global::Sungero.Docflow.IPersonalSetting
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, TSourceEntity sourceEntity)
    {
      var args = new global::Sungero.Domain.PropertyFilteringEventArgs(sourceEntity);
      var result = new global::Sungero.Docflow.PersonalSettingInnerDocRegisterPropertyFilteringServerHandler<TQueryEntity>(sourceEntity).InnerDocRegisterFiltering(query, args);
      if (args.DisableUiFiltering)
        global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public PersonalSettingFilterForInnerDocRegister(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class PersonalSettingSearchFilterForInnerDocRegister<TQueryEntity>
    : global::Sungero.Domain.SearchDialogPropertyFilter<TQueryEntity>
    where TQueryEntity : class, global::Sungero.Docflow.IDocumentRegister
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, System.Guid entityType)
    {
      var args = new global::Sungero.Domain.PropertySearchDialogFilteringEventArgs(entityType);
      var result = new global::Sungero.Docflow.PersonalSettingInnerDocRegisterSearchPropertyFilteringServerHandler<TQueryEntity>().InnerDocRegisterSearchDialogFiltering(query, args);
      if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public PersonalSettingSearchFilterForInnerDocRegister(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class PersonalSettingFilterForSupervisor<TQueryEntity, TSourceEntity>
    : global::Sungero.Domain.EntityPropertyFilterBase<TQueryEntity, TSourceEntity>
    where TQueryEntity : class, global::Sungero.Company.IEmployee
    where TSourceEntity : class, global::Sungero.Docflow.IPersonalSetting
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, TSourceEntity sourceEntity)
    {
      var args = new global::Sungero.Domain.PropertyFilteringEventArgs(sourceEntity);
      var result = new global::Sungero.Docflow.PersonalSettingSupervisorPropertyFilteringServerHandler<TQueryEntity>(sourceEntity).SupervisorFiltering(query, args);
      if (args.DisableUiFiltering)
        global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public PersonalSettingFilterForSupervisor(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class PersonalSettingSearchFilterForSupervisor<TQueryEntity>
    : global::Sungero.Domain.SearchDialogPropertyFilter<TQueryEntity>
    where TQueryEntity : class, global::Sungero.CoreEntities.IRecipient
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, System.Guid entityType)
    {
      var args = new global::Sungero.Domain.PropertySearchDialogFilteringEventArgs(entityType);
      var result = new global::Sungero.Docflow.PersonalSettingSupervisorSearchPropertyFilteringServerHandler<TQueryEntity>().SupervisorSearchDialogFiltering(query, args);
      if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public PersonalSettingSearchFilterForSupervisor(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class PersonalSettingFilterForIncomingCaseFile<TQueryEntity, TSourceEntity>
    : global::Sungero.Domain.EntityPropertyFilterBase<TQueryEntity, TSourceEntity>
    where TQueryEntity : class, global::Sungero.Docflow.ICaseFile
    where TSourceEntity : class, global::Sungero.Docflow.IPersonalSetting
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, TSourceEntity sourceEntity)
    {
      var args = new global::Sungero.Domain.PropertyFilteringEventArgs(sourceEntity);
      var result = new global::Sungero.Docflow.PersonalSettingIncomingCaseFilePropertyFilteringServerHandler<TQueryEntity>(sourceEntity).IncomingCaseFileFiltering(query, args);
      if (args.DisableUiFiltering)
        global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public PersonalSettingFilterForIncomingCaseFile(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class PersonalSettingSearchFilterForIncomingCaseFile<TQueryEntity>
    : global::Sungero.Domain.SearchDialogPropertyFilter<TQueryEntity>
    where TQueryEntity : class, global::Sungero.Docflow.ICaseFile
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, System.Guid entityType)
    {
      var args = new global::Sungero.Domain.PropertySearchDialogFilteringEventArgs(entityType);
      var result = new global::Sungero.Docflow.PersonalSettingIncomingCaseFileSearchPropertyFilteringServerHandler<TQueryEntity>().IncomingCaseFileSearchDialogFiltering(query, args);
      if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public PersonalSettingSearchFilterForIncomingCaseFile(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class PersonalSettingFilterForOutgoingCaseFile<TQueryEntity, TSourceEntity>
    : global::Sungero.Domain.EntityPropertyFilterBase<TQueryEntity, TSourceEntity>
    where TQueryEntity : class, global::Sungero.Docflow.ICaseFile
    where TSourceEntity : class, global::Sungero.Docflow.IPersonalSetting
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, TSourceEntity sourceEntity)
    {
      var args = new global::Sungero.Domain.PropertyFilteringEventArgs(sourceEntity);
      var result = new global::Sungero.Docflow.PersonalSettingOutgoingCaseFilePropertyFilteringServerHandler<TQueryEntity>(sourceEntity).OutgoingCaseFileFiltering(query, args);
      if (args.DisableUiFiltering)
        global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public PersonalSettingFilterForOutgoingCaseFile(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class PersonalSettingSearchFilterForOutgoingCaseFile<TQueryEntity>
    : global::Sungero.Domain.SearchDialogPropertyFilter<TQueryEntity>
    where TQueryEntity : class, global::Sungero.Docflow.ICaseFile
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, System.Guid entityType)
    {
      var args = new global::Sungero.Domain.PropertySearchDialogFilteringEventArgs(entityType);
      var result = new global::Sungero.Docflow.PersonalSettingOutgoingCaseFileSearchPropertyFilteringServerHandler<TQueryEntity>().OutgoingCaseFileSearchDialogFiltering(query, args);
      if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public PersonalSettingSearchFilterForOutgoingCaseFile(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class PersonalSettingFilterForInnerCaseFile<TQueryEntity, TSourceEntity>
    : global::Sungero.Domain.EntityPropertyFilterBase<TQueryEntity, TSourceEntity>
    where TQueryEntity : class, global::Sungero.Docflow.ICaseFile
    where TSourceEntity : class, global::Sungero.Docflow.IPersonalSetting
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, TSourceEntity sourceEntity)
    {
      var args = new global::Sungero.Domain.PropertyFilteringEventArgs(sourceEntity);
      var result = new global::Sungero.Docflow.PersonalSettingInnerCaseFilePropertyFilteringServerHandler<TQueryEntity>(sourceEntity).InnerCaseFileFiltering(query, args);
      if (args.DisableUiFiltering)
        global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public PersonalSettingFilterForInnerCaseFile(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class PersonalSettingSearchFilterForInnerCaseFile<TQueryEntity>
    : global::Sungero.Domain.SearchDialogPropertyFilter<TQueryEntity>
    where TQueryEntity : class, global::Sungero.Docflow.ICaseFile
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, System.Guid entityType)
    {
      var args = new global::Sungero.Domain.PropertySearchDialogFilteringEventArgs(entityType);
      var result = new global::Sungero.Docflow.PersonalSettingInnerCaseFileSearchPropertyFilteringServerHandler<TQueryEntity>().InnerCaseFileSearchDialogFiltering(query, args);
      if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public PersonalSettingSearchFilterForInnerCaseFile(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class PersonalSettingFilterForIncomingDeliveryMethod<TQueryEntity, TSourceEntity>
    : global::Sungero.Domain.EntityPropertyFilterBase<TQueryEntity, TSourceEntity>
    where TQueryEntity : class, global::Sungero.Docflow.IMailDeliveryMethod
    where TSourceEntity : class, global::Sungero.Docflow.IPersonalSetting
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, TSourceEntity sourceEntity)
    {
      var args = new global::Sungero.Domain.PropertyFilteringEventArgs(sourceEntity);
      var result = new global::Sungero.Docflow.PersonalSettingIncomingDeliveryMethodPropertyFilteringServerHandler<TQueryEntity>(sourceEntity).IncomingDeliveryMethodFiltering(query, args);
      if (args.DisableUiFiltering)
        global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public PersonalSettingFilterForIncomingDeliveryMethod(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class PersonalSettingSearchFilterForIncomingDeliveryMethod<TQueryEntity>
    : global::Sungero.Domain.SearchDialogPropertyFilter<TQueryEntity>
    where TQueryEntity : class, global::Sungero.Docflow.IMailDeliveryMethod
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, System.Guid entityType)
    {
      var args = new global::Sungero.Domain.PropertySearchDialogFilteringEventArgs(entityType);
      var result = new global::Sungero.Docflow.PersonalSettingIncomingDeliveryMethodSearchPropertyFilteringServerHandler<TQueryEntity>().IncomingDeliveryMethodSearchDialogFiltering(query, args);
      if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public PersonalSettingSearchFilterForIncomingDeliveryMethod(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class PersonalSettingFilterForOutgoingDeliveryMethod<TQueryEntity, TSourceEntity>
    : global::Sungero.Domain.EntityPropertyFilterBase<TQueryEntity, TSourceEntity>
    where TQueryEntity : class, global::Sungero.Docflow.IMailDeliveryMethod
    where TSourceEntity : class, global::Sungero.Docflow.IPersonalSetting
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, TSourceEntity sourceEntity)
    {
      var args = new global::Sungero.Domain.PropertyFilteringEventArgs(sourceEntity);
      var result = new global::Sungero.Docflow.PersonalSettingOutgoingDeliveryMethodPropertyFilteringServerHandler<TQueryEntity>(sourceEntity).OutgoingDeliveryMethodFiltering(query, args);
      if (args.DisableUiFiltering)
        global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public PersonalSettingFilterForOutgoingDeliveryMethod(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class PersonalSettingSearchFilterForOutgoingDeliveryMethod<TQueryEntity>
    : global::Sungero.Domain.SearchDialogPropertyFilter<TQueryEntity>
    where TQueryEntity : class, global::Sungero.Docflow.IMailDeliveryMethod
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, System.Guid entityType)
    {
      var args = new global::Sungero.Domain.PropertySearchDialogFilteringEventArgs(entityType);
      var result = new global::Sungero.Docflow.PersonalSettingOutgoingDeliveryMethodSearchPropertyFilteringServerHandler<TQueryEntity>().OutgoingDeliveryMethodSearchDialogFiltering(query, args);
      if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public PersonalSettingSearchFilterForOutgoingDeliveryMethod(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class PersonalSettingFilterForInnerDeliveryMethod<TQueryEntity, TSourceEntity>
    : global::Sungero.Domain.EntityPropertyFilterBase<TQueryEntity, TSourceEntity>
    where TQueryEntity : class, global::Sungero.Docflow.IMailDeliveryMethod
    where TSourceEntity : class, global::Sungero.Docflow.IPersonalSetting
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, TSourceEntity sourceEntity)
    {
      var args = new global::Sungero.Domain.PropertyFilteringEventArgs(sourceEntity);
      var result = new global::Sungero.Docflow.PersonalSettingInnerDeliveryMethodPropertyFilteringServerHandler<TQueryEntity>(sourceEntity).InnerDeliveryMethodFiltering(query, args);
      if (args.DisableUiFiltering)
        global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public PersonalSettingFilterForInnerDeliveryMethod(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class PersonalSettingSearchFilterForInnerDeliveryMethod<TQueryEntity>
    : global::Sungero.Domain.SearchDialogPropertyFilter<TQueryEntity>
    where TQueryEntity : class, global::Sungero.Docflow.IMailDeliveryMethod
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, System.Guid entityType)
    {
      var args = new global::Sungero.Domain.PropertySearchDialogFilteringEventArgs(entityType);
      var result = new global::Sungero.Docflow.PersonalSettingInnerDeliveryMethodSearchPropertyFilteringServerHandler<TQueryEntity>().InnerDeliveryMethodSearchDialogFiltering(query, args);
      if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public PersonalSettingSearchFilterForInnerDeliveryMethod(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class PersonalSettingFilterForResolutionAuthor<TQueryEntity, TSourceEntity>
    : global::Sungero.Domain.EntityPropertyFilterBase<TQueryEntity, TSourceEntity>
    where TQueryEntity : class, global::Sungero.Company.IEmployee
    where TSourceEntity : class, global::Sungero.Docflow.IPersonalSetting
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, TSourceEntity sourceEntity)
    {
      var args = new global::Sungero.Domain.PropertyFilteringEventArgs(sourceEntity);
      var result = new global::Sungero.Docflow.PersonalSettingResolutionAuthorPropertyFilteringServerHandler<TQueryEntity>(sourceEntity).ResolutionAuthorFiltering(query, args);
      if (args.DisableUiFiltering)
        global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public PersonalSettingFilterForResolutionAuthor(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class PersonalSettingSearchFilterForResolutionAuthor<TQueryEntity>
    : global::Sungero.Domain.SearchDialogPropertyFilter<TQueryEntity>
    where TQueryEntity : class, global::Sungero.CoreEntities.IRecipient
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, System.Guid entityType)
    {
      var args = new global::Sungero.Domain.PropertySearchDialogFilteringEventArgs(entityType);
      var result = new global::Sungero.Docflow.PersonalSettingResolutionAuthorSearchPropertyFilteringServerHandler<TQueryEntity>().ResolutionAuthorSearchDialogFiltering(query, args);
      if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public PersonalSettingSearchFilterForResolutionAuthor(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class PersonalSettingFilterForEmployee<TQueryEntity, TSourceEntity>
    : global::Sungero.Domain.EntityPropertyFilterBase<TQueryEntity, TSourceEntity>
    where TQueryEntity : class, global::Sungero.Company.IEmployee
    where TSourceEntity : class, global::Sungero.Docflow.IPersonalSetting
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, TSourceEntity sourceEntity)
    {
      var args = new global::Sungero.Domain.PropertyFilteringEventArgs(sourceEntity);
      var result = new global::Sungero.Docflow.PersonalSettingEmployeePropertyFilteringServerHandler<TQueryEntity>(sourceEntity).EmployeeFiltering(query, args);
      if (args.DisableUiFiltering)
        global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public PersonalSettingFilterForEmployee(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class PersonalSettingSearchFilterForEmployee<TQueryEntity>
    : global::Sungero.Domain.SearchDialogPropertyFilter<TQueryEntity>
    where TQueryEntity : class, global::Sungero.CoreEntities.IRecipient
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, System.Guid entityType)
    {
      var args = new global::Sungero.Domain.PropertySearchDialogFilteringEventArgs(entityType);
      var result = new global::Sungero.Docflow.PersonalSettingEmployeeSearchPropertyFilteringServerHandler<TQueryEntity>().EmployeeSearchDialogFiltering(query, args);
      if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public PersonalSettingSearchFilterForEmployee(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class PersonalSettingFilterForBusinessUnit<TQueryEntity, TSourceEntity>
    : global::Sungero.Domain.EntityPropertyFilterBase<TQueryEntity, TSourceEntity>
    where TQueryEntity : class, global::Sungero.Company.IBusinessUnit
    where TSourceEntity : class, global::Sungero.Docflow.IPersonalSetting
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, TSourceEntity sourceEntity)
    {
      var args = new global::Sungero.Domain.PropertyFilteringEventArgs(sourceEntity);
      var result = new global::Sungero.Docflow.PersonalSettingBusinessUnitPropertyFilteringServerHandler<TQueryEntity>(sourceEntity).BusinessUnitFiltering(query, args);
      if (args.DisableUiFiltering)
        global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public PersonalSettingFilterForBusinessUnit(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class PersonalSettingSearchFilterForBusinessUnit<TQueryEntity>
    : global::Sungero.Domain.SearchDialogPropertyFilter<TQueryEntity>
    where TQueryEntity : class, global::Sungero.Company.IBusinessUnit
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, System.Guid entityType)
    {
      var args = new global::Sungero.Domain.PropertySearchDialogFilteringEventArgs(entityType);
      var result = new global::Sungero.Docflow.PersonalSettingBusinessUnitSearchPropertyFilteringServerHandler<TQueryEntity>().BusinessUnitSearchDialogFiltering(query, args);
      if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public PersonalSettingSearchFilterForBusinessUnit(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class PersonalSettingFilterForContractDocRegister<TQueryEntity, TSourceEntity>
    : global::Sungero.Domain.EntityPropertyFilterBase<TQueryEntity, TSourceEntity>
    where TQueryEntity : class, global::Sungero.Docflow.IDocumentRegister
    where TSourceEntity : class, global::Sungero.Docflow.IPersonalSetting
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, TSourceEntity sourceEntity)
    {
      var args = new global::Sungero.Domain.PropertyFilteringEventArgs(sourceEntity);
      var result = new global::Sungero.Docflow.PersonalSettingContractDocRegisterPropertyFilteringServerHandler<TQueryEntity>(sourceEntity).ContractDocRegisterFiltering(query, args);
      if (args.DisableUiFiltering)
        global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public PersonalSettingFilterForContractDocRegister(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class PersonalSettingSearchFilterForContractDocRegister<TQueryEntity>
    : global::Sungero.Domain.SearchDialogPropertyFilter<TQueryEntity>
    where TQueryEntity : class, global::Sungero.Docflow.IDocumentRegister
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, System.Guid entityType)
    {
      var args = new global::Sungero.Domain.PropertySearchDialogFilteringEventArgs(entityType);
      var result = new global::Sungero.Docflow.PersonalSettingContractDocRegisterSearchPropertyFilteringServerHandler<TQueryEntity>().ContractDocRegisterSearchDialogFiltering(query, args);
      if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public PersonalSettingSearchFilterForContractDocRegister(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class PersonalSettingFilterForDepartment<TQueryEntity, TSourceEntity>
    : global::Sungero.Domain.EntityPropertyFilterBase<TQueryEntity, TSourceEntity>
    where TQueryEntity : class, global::Sungero.Company.IDepartment
    where TSourceEntity : class, global::Sungero.Docflow.IPersonalSetting
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, TSourceEntity sourceEntity)
    {
      var args = new global::Sungero.Domain.PropertyFilteringEventArgs(sourceEntity);
      var result = new global::Sungero.Docflow.PersonalSettingDepartmentPropertyFilteringServerHandler<TQueryEntity>(sourceEntity).DepartmentFiltering(query, args);
      if (args.DisableUiFiltering)
        global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public PersonalSettingFilterForDepartment(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class PersonalSettingSearchFilterForDepartment<TQueryEntity>
    : global::Sungero.Domain.SearchDialogPropertyFilter<TQueryEntity>
    where TQueryEntity : class, global::Sungero.Company.IDepartment
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, System.Guid entityType)
    {
      var args = new global::Sungero.Domain.PropertySearchDialogFilteringEventArgs(entityType);
      var result = new global::Sungero.Docflow.PersonalSettingDepartmentSearchPropertyFilteringServerHandler<TQueryEntity>().DepartmentSearchDialogFiltering(query, args);
      if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public PersonalSettingSearchFilterForDepartment(string propertyName)
      : base(propertyName)
    {
    }
  }



  [global::Sungero.Domain.Filter(typeof(global::Sungero.Docflow.Server.PersonalSettingFilter<global::Sungero.Docflow.IPersonalSetting>))]
  [global::Sungero.Domain.UiFilter(typeof(global::Sungero.Docflow.Server.PersonalSettingUiFilter<global::Sungero.Docflow.IPersonalSetting>))]
  [global::Sungero.Domain.PropertyFilter(typeof(global::Sungero.Docflow.Server.PersonalSettingFilterForIncomingDocRegister<global::Sungero.Docflow.IDocumentRegister, global::Sungero.Docflow.IPersonalSetting>), "IncomingDocRegister")]
  [global::Sungero.Domain.SearchPropertyFilter(typeof(global::Sungero.Docflow.Server.PersonalSettingSearchFilterForIncomingDocRegister<global::Sungero.Docflow.IDocumentRegister>), "IncomingDocRegister")]
  [global::Sungero.Domain.PropertyFilter(typeof(global::Sungero.Docflow.Server.PersonalSettingFilterForOutgoingDocRegister<global::Sungero.Docflow.IDocumentRegister, global::Sungero.Docflow.IPersonalSetting>), "OutgoingDocRegister")]
  [global::Sungero.Domain.SearchPropertyFilter(typeof(global::Sungero.Docflow.Server.PersonalSettingSearchFilterForOutgoingDocRegister<global::Sungero.Docflow.IDocumentRegister>), "OutgoingDocRegister")]
  [global::Sungero.Domain.PropertyFilter(typeof(global::Sungero.Docflow.Server.PersonalSettingFilterForInnerDocRegister<global::Sungero.Docflow.IDocumentRegister, global::Sungero.Docflow.IPersonalSetting>), "InnerDocRegister")]
  [global::Sungero.Domain.SearchPropertyFilter(typeof(global::Sungero.Docflow.Server.PersonalSettingSearchFilterForInnerDocRegister<global::Sungero.Docflow.IDocumentRegister>), "InnerDocRegister")]
  [global::Sungero.Domain.PropertyFilter(typeof(global::Sungero.Docflow.Server.PersonalSettingFilterForSupervisor<global::Sungero.Company.IEmployee, global::Sungero.Docflow.IPersonalSetting>), "Supervisor")]
  [global::Sungero.Domain.SearchPropertyFilter(typeof(global::Sungero.Docflow.Server.PersonalSettingSearchFilterForSupervisor<global::Sungero.CoreEntities.IRecipient>), "Supervisor")]
  [global::Sungero.Domain.PropertyFilter(typeof(global::Sungero.Docflow.Server.PersonalSettingFilterForIncomingCaseFile<global::Sungero.Docflow.ICaseFile, global::Sungero.Docflow.IPersonalSetting>), "IncomingCaseFile")]
  [global::Sungero.Domain.SearchPropertyFilter(typeof(global::Sungero.Docflow.Server.PersonalSettingSearchFilterForIncomingCaseFile<global::Sungero.Docflow.ICaseFile>), "IncomingCaseFile")]
  [global::Sungero.Domain.PropertyFilter(typeof(global::Sungero.Docflow.Server.PersonalSettingFilterForOutgoingCaseFile<global::Sungero.Docflow.ICaseFile, global::Sungero.Docflow.IPersonalSetting>), "OutgoingCaseFile")]
  [global::Sungero.Domain.SearchPropertyFilter(typeof(global::Sungero.Docflow.Server.PersonalSettingSearchFilterForOutgoingCaseFile<global::Sungero.Docflow.ICaseFile>), "OutgoingCaseFile")]
  [global::Sungero.Domain.PropertyFilter(typeof(global::Sungero.Docflow.Server.PersonalSettingFilterForInnerCaseFile<global::Sungero.Docflow.ICaseFile, global::Sungero.Docflow.IPersonalSetting>), "InnerCaseFile")]
  [global::Sungero.Domain.SearchPropertyFilter(typeof(global::Sungero.Docflow.Server.PersonalSettingSearchFilterForInnerCaseFile<global::Sungero.Docflow.ICaseFile>), "InnerCaseFile")]
  [global::Sungero.Domain.PropertyFilter(typeof(global::Sungero.Docflow.Server.PersonalSettingFilterForIncomingDeliveryMethod<global::Sungero.Docflow.IMailDeliveryMethod, global::Sungero.Docflow.IPersonalSetting>), "IncomingDeliveryMethod")]
  [global::Sungero.Domain.SearchPropertyFilter(typeof(global::Sungero.Docflow.Server.PersonalSettingSearchFilterForIncomingDeliveryMethod<global::Sungero.Docflow.IMailDeliveryMethod>), "IncomingDeliveryMethod")]
  [global::Sungero.Domain.PropertyFilter(typeof(global::Sungero.Docflow.Server.PersonalSettingFilterForOutgoingDeliveryMethod<global::Sungero.Docflow.IMailDeliveryMethod, global::Sungero.Docflow.IPersonalSetting>), "OutgoingDeliveryMethod")]
  [global::Sungero.Domain.SearchPropertyFilter(typeof(global::Sungero.Docflow.Server.PersonalSettingSearchFilterForOutgoingDeliveryMethod<global::Sungero.Docflow.IMailDeliveryMethod>), "OutgoingDeliveryMethod")]
  [global::Sungero.Domain.PropertyFilter(typeof(global::Sungero.Docflow.Server.PersonalSettingFilterForInnerDeliveryMethod<global::Sungero.Docflow.IMailDeliveryMethod, global::Sungero.Docflow.IPersonalSetting>), "InnerDeliveryMethod")]
  [global::Sungero.Domain.SearchPropertyFilter(typeof(global::Sungero.Docflow.Server.PersonalSettingSearchFilterForInnerDeliveryMethod<global::Sungero.Docflow.IMailDeliveryMethod>), "InnerDeliveryMethod")]
  [global::Sungero.Domain.PropertyFilter(typeof(global::Sungero.Docflow.Server.PersonalSettingFilterForResolutionAuthor<global::Sungero.Company.IEmployee, global::Sungero.Docflow.IPersonalSetting>), "ResolutionAuthor")]
  [global::Sungero.Domain.SearchPropertyFilter(typeof(global::Sungero.Docflow.Server.PersonalSettingSearchFilterForResolutionAuthor<global::Sungero.CoreEntities.IRecipient>), "ResolutionAuthor")]
  [global::Sungero.Domain.PropertyFilter(typeof(global::Sungero.Docflow.Server.PersonalSettingFilterForEmployee<global::Sungero.Company.IEmployee, global::Sungero.Docflow.IPersonalSetting>), "Employee")]
  [global::Sungero.Domain.SearchPropertyFilter(typeof(global::Sungero.Docflow.Server.PersonalSettingSearchFilterForEmployee<global::Sungero.CoreEntities.IRecipient>), "Employee")]
  [global::Sungero.Domain.PropertyFilter(typeof(global::Sungero.Docflow.Server.PersonalSettingFilterForBusinessUnit<global::Sungero.Company.IBusinessUnit, global::Sungero.Docflow.IPersonalSetting>), "BusinessUnit")]
  [global::Sungero.Domain.SearchPropertyFilter(typeof(global::Sungero.Docflow.Server.PersonalSettingSearchFilterForBusinessUnit<global::Sungero.Company.IBusinessUnit>), "BusinessUnit")]
  [global::Sungero.Domain.PropertyFilter(typeof(global::Sungero.Docflow.Server.PersonalSettingFilterForContractDocRegister<global::Sungero.Docflow.IDocumentRegister, global::Sungero.Docflow.IPersonalSetting>), "ContractDocRegister")]
  [global::Sungero.Domain.SearchPropertyFilter(typeof(global::Sungero.Docflow.Server.PersonalSettingSearchFilterForContractDocRegister<global::Sungero.Docflow.IDocumentRegister>), "ContractDocRegister")]
  [global::Sungero.Domain.PropertyFilter(typeof(global::Sungero.Docflow.Server.PersonalSettingFilterForDepartment<global::Sungero.Company.IDepartment, global::Sungero.Docflow.IPersonalSetting>), "Department")]
  [global::Sungero.Domain.SearchPropertyFilter(typeof(global::Sungero.Docflow.Server.PersonalSettingSearchFilterForDepartment<global::Sungero.Company.IDepartment>), "Department")]


  public class PersonalSetting :
    global::Sungero.CoreEntities.Server.DatabookEntry, global::Sungero.Docflow.IPersonalSetting
  {
    public static new readonly global::System.Guid ClassTypeGuid = global::System.Guid.Parse("edabdc0e-13d1-45e0-82a8-e60a5ea5bf68");

    public override global::System.Guid TypeGuid
    {
      get { return global::Sungero.Docflow.Server.PersonalSetting.ClassTypeGuid; }
    }

    public override string TypeName
    {
      get { return "Sungero.Docflow.IPersonalSetting, Sungero.Domain.Interfaces"; }
    }

    public override string DisplayValue
    {
      get { return this.Employee == null ? string.Empty : this.Employee.ToString(); }
      set { throw new global::System.NotSupportedException(global::CommonLibrary.Properties.Resources.SpecifiedPropertyIsNotSupportedFormat("DisplayValue")); }
    }

    public new virtual global::Sungero.Docflow.IPersonalSettingState State
    {
      get { return (global::Sungero.Docflow.IPersonalSettingState)base.State; }
    }

    protected override global::Sungero.Domain.Shared.IEntityState CreateState()
    {
      return new global::Sungero.Docflow.Shared.PersonalSettingState(this);
    }

    public new virtual global::Sungero.Docflow.IPersonalSettingInfo Info
    {
      get { return (global::Sungero.Docflow.IPersonalSettingInfo)base.Info; }
    }

    public new virtual global::Sungero.Docflow.IPersonalSettingAccessRights AccessRights
    {
      get { return (global::Sungero.Docflow.IPersonalSettingAccessRights)base.AccessRights; }
    }

    protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
    {
      return new global::Sungero.Docflow.Server.PersonalSettingAccessRights(this);
    }

    protected override global::Sungero.Domain.EntityFunctions CreateServerFunctions()
    {
      return new global::Sungero.Docflow.Server.PersonalSettingFunctions(this);
    }

    protected override global::Sungero.Domain.Shared.EntityFunctions CreateSharedFunctions()
    {
      return new global::Sungero.Docflow.Shared.PersonalSettingFunctions(this);
    }

    protected override object CreateHandlers() {
      return new global::Sungero.Docflow.PersonalSettingServerHandlers(this);
    }

    protected override object CreateSharedHandlers() {
      return new global::Sungero.Docflow.PersonalSettingSharedHandlers(this);
    }

    private global::System.String _Name;
    public virtual global::System.String Name
    {
      get
      {
        return this._Name;
      }

      set
      {
        this.SetPropertyValue("Name", this._Name, value, (propertyValue) => { this._Name = propertyValue; }, this.NameChangedHandler);
      }
    }
    private global::System.DateTime? _StartDate;
    public virtual global::System.DateTime? StartDate
    {
      get
      {
        return this._StartDate;
      }

      set
      {
        this.SetPropertyValue("StartDate", this._StartDate, value, (propertyValue) => { this._StartDate = propertyValue; }, this.StartDateChangedHandler);
      }
    }
    private global::System.DateTime? _EndDate;
    public virtual global::System.DateTime? EndDate
    {
      get
      {
        return this._EndDate;
      }

      set
      {
        this.SetPropertyValue("EndDate", this._EndDate, value, (propertyValue) => { this._EndDate = propertyValue; }, this.EndDateChangedHandler);
      }
    }
    private global::System.Boolean? _IsAutoCalcSupervisor;
    public virtual global::System.Boolean? IsAutoCalcSupervisor
    {
      get
      {
        return this._IsAutoCalcSupervisor;
      }

      set
      {
        this.SetPropertyValue("IsAutoCalcSupervisor", this._IsAutoCalcSupervisor, value, (propertyValue) => { this._IsAutoCalcSupervisor = propertyValue; }, this.IsAutoCalcSupervisorChangedHandler);
      }
    }
    private global::System.Boolean? _IsAutoCalcResolutionAuthor;
    public virtual global::System.Boolean? IsAutoCalcResolutionAuthor
    {
      get
      {
        return this._IsAutoCalcResolutionAuthor;
      }

      set
      {
        this.SetPropertyValue("IsAutoCalcResolutionAuthor", this._IsAutoCalcResolutionAuthor, value, (propertyValue) => { this._IsAutoCalcResolutionAuthor = propertyValue; }, this.IsAutoCalcResolutionAuthorChangedHandler);
      }
    }
    private global::System.Boolean? _ShowRegPane;
    public virtual global::System.Boolean? ShowRegPane
    {
      get
      {
        return this._ShowRegPane;
      }

      set
      {
        this.SetPropertyValue("ShowRegPane", this._ShowRegPane, value, (propertyValue) => { this._ShowRegPane = propertyValue; }, this.ShowRegPaneChangedHandler);
      }
    }
    private global::System.Boolean? _FollowUpActionItem;
    public virtual global::System.Boolean? FollowUpActionItem
    {
      get
      {
        return this._FollowUpActionItem;
      }

      set
      {
        this.SetPropertyValue("FollowUpActionItem", this._FollowUpActionItem, value, (propertyValue) => { this._FollowUpActionItem = propertyValue; }, this.FollowUpActionItemChangedHandler);
      }
    }
    private global::System.Boolean? _MyContractsNotification;
    public virtual global::System.Boolean? MyContractsNotification
    {
      get
      {
        return this._MyContractsNotification;
      }

      set
      {
        this.SetPropertyValue("MyContractsNotification", this._MyContractsNotification, value, (propertyValue) => { this._MyContractsNotification = propertyValue; }, this.MyContractsNotificationChangedHandler);
      }
    }
    private global::System.Boolean? _MySubordinatesContractsNotification;
    public virtual global::System.Boolean? MySubordinatesContractsNotification
    {
      get
      {
        return this._MySubordinatesContractsNotification;
      }

      set
      {
        this.SetPropertyValue("MySubordinatesContractsNotification", this._MySubordinatesContractsNotification, value, (propertyValue) => { this._MySubordinatesContractsNotification = propertyValue; }, this.MySubordinatesContractsNotificationChangedHandler);
      }
    }
    private global::System.Boolean? _PrintSender;
    public virtual global::System.Boolean? PrintSender
    {
      get
      {
        return this._PrintSender;
      }

      set
      {
        this.SetPropertyValue("PrintSender", this._PrintSender, value, (propertyValue) => { this._PrintSender = propertyValue; }, this.PrintSenderChangedHandler);
      }
    }
    private global::System.String _FinArchiveExportPath;
    public virtual global::System.String FinArchiveExportPath
    {
      get
      {
        return this._FinArchiveExportPath;
      }

      set
      {
        this.SetPropertyValue("FinArchiveExportPath", this._FinArchiveExportPath, value, (propertyValue) => { this._FinArchiveExportPath = propertyValue; }, this.FinArchiveExportPathChangedHandler);
      }
    }
    private global::System.Boolean? _ShowNotApproveSign;
    public virtual global::System.Boolean? ShowNotApproveSign
    {
      get
      {
        return this._ShowNotApproveSign;
      }

      set
      {
        this.SetPropertyValue("ShowNotApproveSign", this._ShowNotApproveSign, value, (propertyValue) => { this._ShowNotApproveSign = propertyValue; }, this.ShowNotApproveSignChangedHandler);
      }
    }
    private global::System.Boolean? _MyPowersOfAttorneyNotification;
    public virtual global::System.Boolean? MyPowersOfAttorneyNotification
    {
      get
      {
        return this._MyPowersOfAttorneyNotification;
      }

      set
      {
        this.SetPropertyValue("MyPowersOfAttorneyNotification", this._MyPowersOfAttorneyNotification, value, (propertyValue) => { this._MyPowersOfAttorneyNotification = propertyValue; }, this.MyPowersOfAttorneyNotificationChangedHandler);
      }
    }
    private global::System.Boolean? _MySubordinatesPowersOfAttorneyNotification;
    public virtual global::System.Boolean? MySubordinatesPowersOfAttorneyNotification
    {
      get
      {
        return this._MySubordinatesPowersOfAttorneyNotification;
      }

      set
      {
        this.SetPropertyValue("MySubordinatesPowersOfAttorneyNotification", this._MySubordinatesPowersOfAttorneyNotification, value, (propertyValue) => { this._MySubordinatesPowersOfAttorneyNotification = propertyValue; }, this.MySubordinatesPowersOfAttorneyNotificationChangedHandler);
      }
    }






    private static global::Sungero.Domain.Shared.EnumerationItems _PeriodItems = new global::Sungero.Domain.Shared.EnumerationItems(
      null,
      typeof(global::Sungero.Docflow.PersonalSetting.Period),
      typeof(global::Sungero.Docflow.Server.PersonalSetting),
      "Period");

    public static global::Sungero.Domain.Shared.EnumerationItems PeriodItems
    {
      get { return global::Sungero.Docflow.Server.PersonalSetting._PeriodItems; }
    }

    public virtual global::Sungero.Domain.Shared.EnumerationItems PeriodAllowedItems
    {
      get { return global::Sungero.Docflow.Server.PersonalSetting.PeriodItems; }
    }

    private global::Sungero.Core.Enumeration? _Period;

    public virtual global::Sungero.Core.Enumeration? Period
    {
      get { return this._Period; }
      set { this.SetEnumPropertyValue("Period", this._Period, value, (propertyValue) => { this._Period = propertyValue; }, this.PeriodChangedHandler, this.PeriodAllowedItems); }
    }
    private static global::Sungero.Domain.Shared.EnumerationItems _EnvelopeFormatItems = new global::Sungero.Domain.Shared.EnumerationItems(
      null,
      typeof(global::Sungero.Docflow.PersonalSetting.EnvelopeFormat),
      typeof(global::Sungero.Docflow.Server.PersonalSetting),
      "EnvelopeFormat");

    public static global::Sungero.Domain.Shared.EnumerationItems EnvelopeFormatItems
    {
      get { return global::Sungero.Docflow.Server.PersonalSetting._EnvelopeFormatItems; }
    }

    public virtual global::Sungero.Domain.Shared.EnumerationItems EnvelopeFormatAllowedItems
    {
      get { return global::Sungero.Docflow.Server.PersonalSetting.EnvelopeFormatItems; }
    }

    private global::Sungero.Core.Enumeration? _EnvelopeFormat;

    public virtual global::Sungero.Core.Enumeration? EnvelopeFormat
    {
      get { return this._EnvelopeFormat; }
      set { this.SetEnumPropertyValue("EnvelopeFormat", this._EnvelopeFormat, value, (propertyValue) => { this._EnvelopeFormat = propertyValue; }, this.EnvelopeFormatChangedHandler, this.EnvelopeFormatAllowedItems); }
    }
    private static global::Sungero.Domain.Shared.EnumerationItems _CompanyServiceItems = new global::Sungero.Domain.Shared.EnumerationItems(
      null,
      typeof(global::Sungero.Docflow.PersonalSetting.CompanyService),
      typeof(global::Sungero.Docflow.Server.PersonalSetting),
      "CompanyService");

    public static global::Sungero.Domain.Shared.EnumerationItems CompanyServiceItems
    {
      get { return global::Sungero.Docflow.Server.PersonalSetting._CompanyServiceItems; }
    }

    public virtual global::Sungero.Domain.Shared.EnumerationItems CompanyServiceAllowedItems
    {
      get { return global::Sungero.Docflow.Server.PersonalSetting.CompanyServiceItems; }
    }

    private global::Sungero.Core.Enumeration? _CompanyService;

    public virtual global::Sungero.Core.Enumeration? CompanyService
    {
      get { return this._CompanyService; }
      set { this.SetEnumPropertyValue("CompanyService", this._CompanyService, value, (propertyValue) => { this._CompanyService = propertyValue; }, this.CompanyServiceChangedHandler, this.CompanyServiceAllowedItems); }
    }


    private global::Sungero.Docflow.IDocumentRegister _IncomingDocRegister;
    public virtual global::Sungero.Docflow.IDocumentRegister IncomingDocRegister
    {
      get
      {
        return this._IncomingDocRegister;
      }

      set
      {
        this.SetPropertyValue("IncomingDocRegister", this._IncomingDocRegister, value, (propertyValue) => { this._IncomingDocRegister = propertyValue; }, this.IncomingDocRegisterChangedHandler);
      }
    }
    private global::Sungero.Docflow.IDocumentRegister _OutgoingDocRegister;
    public virtual global::Sungero.Docflow.IDocumentRegister OutgoingDocRegister
    {
      get
      {
        return this._OutgoingDocRegister;
      }

      set
      {
        this.SetPropertyValue("OutgoingDocRegister", this._OutgoingDocRegister, value, (propertyValue) => { this._OutgoingDocRegister = propertyValue; }, this.OutgoingDocRegisterChangedHandler);
      }
    }
    private global::Sungero.Docflow.IDocumentRegister _InnerDocRegister;
    public virtual global::Sungero.Docflow.IDocumentRegister InnerDocRegister
    {
      get
      {
        return this._InnerDocRegister;
      }

      set
      {
        this.SetPropertyValue("InnerDocRegister", this._InnerDocRegister, value, (propertyValue) => { this._InnerDocRegister = propertyValue; }, this.InnerDocRegisterChangedHandler);
      }
    }
    private global::Sungero.Company.IEmployee _Supervisor;
    public virtual global::Sungero.Company.IEmployee Supervisor
    {
      get
      {
        return this._Supervisor;
      }

      set
      {
        this.SetPropertyValue("Supervisor", this._Supervisor, value, (propertyValue) => { this._Supervisor = propertyValue; }, this.SupervisorChangedHandler);
      }
    }
    private global::Sungero.Docflow.ICaseFile _IncomingCaseFile;
    public virtual global::Sungero.Docflow.ICaseFile IncomingCaseFile
    {
      get
      {
        return this._IncomingCaseFile;
      }

      set
      {
        this.SetPropertyValue("IncomingCaseFile", this._IncomingCaseFile, value, (propertyValue) => { this._IncomingCaseFile = propertyValue; }, this.IncomingCaseFileChangedHandler);
      }
    }
    private global::Sungero.Docflow.ICaseFile _OutgoingCaseFile;
    public virtual global::Sungero.Docflow.ICaseFile OutgoingCaseFile
    {
      get
      {
        return this._OutgoingCaseFile;
      }

      set
      {
        this.SetPropertyValue("OutgoingCaseFile", this._OutgoingCaseFile, value, (propertyValue) => { this._OutgoingCaseFile = propertyValue; }, this.OutgoingCaseFileChangedHandler);
      }
    }
    private global::Sungero.Docflow.ICaseFile _InnerCaseFile;
    public virtual global::Sungero.Docflow.ICaseFile InnerCaseFile
    {
      get
      {
        return this._InnerCaseFile;
      }

      set
      {
        this.SetPropertyValue("InnerCaseFile", this._InnerCaseFile, value, (propertyValue) => { this._InnerCaseFile = propertyValue; }, this.InnerCaseFileChangedHandler);
      }
    }
    private global::Sungero.Docflow.IMailDeliveryMethod _IncomingDeliveryMethod;
    public virtual global::Sungero.Docflow.IMailDeliveryMethod IncomingDeliveryMethod
    {
      get
      {
        return this._IncomingDeliveryMethod;
      }

      set
      {
        this.SetPropertyValue("IncomingDeliveryMethod", this._IncomingDeliveryMethod, value, (propertyValue) => { this._IncomingDeliveryMethod = propertyValue; }, this.IncomingDeliveryMethodChangedHandler);
      }
    }
    private global::Sungero.Docflow.IMailDeliveryMethod _OutgoingDeliveryMethod;
    public virtual global::Sungero.Docflow.IMailDeliveryMethod OutgoingDeliveryMethod
    {
      get
      {
        return this._OutgoingDeliveryMethod;
      }

      set
      {
        this.SetPropertyValue("OutgoingDeliveryMethod", this._OutgoingDeliveryMethod, value, (propertyValue) => { this._OutgoingDeliveryMethod = propertyValue; }, this.OutgoingDeliveryMethodChangedHandler);
      }
    }
    private global::Sungero.Docflow.IMailDeliveryMethod _InnerDeliveryMethod;
    public virtual global::Sungero.Docflow.IMailDeliveryMethod InnerDeliveryMethod
    {
      get
      {
        return this._InnerDeliveryMethod;
      }

      set
      {
        this.SetPropertyValue("InnerDeliveryMethod", this._InnerDeliveryMethod, value, (propertyValue) => { this._InnerDeliveryMethod = propertyValue; }, this.InnerDeliveryMethodChangedHandler);
      }
    }
    private global::Sungero.Company.IEmployee _ResolutionAuthor;
    public virtual global::Sungero.Company.IEmployee ResolutionAuthor
    {
      get
      {
        return this._ResolutionAuthor;
      }

      set
      {
        this.SetPropertyValue("ResolutionAuthor", this._ResolutionAuthor, value, (propertyValue) => { this._ResolutionAuthor = propertyValue; }, this.ResolutionAuthorChangedHandler);
      }
    }
    private global::Sungero.Company.IEmployee _Employee;
    public virtual global::Sungero.Company.IEmployee Employee
    {
      get
      {
        return this._Employee;
      }

      set
      {
        this.SetPropertyValue("Employee", this._Employee, value, (propertyValue) => { this._Employee = propertyValue; }, this.EmployeeChangedHandler);
      }
    }
    private global::Sungero.Company.IBusinessUnit _BusinessUnit;
    public virtual global::Sungero.Company.IBusinessUnit BusinessUnit
    {
      get
      {
        return this._BusinessUnit;
      }

      set
      {
        this.SetPropertyValue("BusinessUnit", this._BusinessUnit, value, (propertyValue) => { this._BusinessUnit = propertyValue; }, this.BusinessUnitChangedHandler);
      }
    }
    private global::Sungero.Docflow.IDocumentRegister _ContractDocRegister;
    public virtual global::Sungero.Docflow.IDocumentRegister ContractDocRegister
    {
      get
      {
        return this._ContractDocRegister;
      }

      set
      {
        this.SetPropertyValue("ContractDocRegister", this._ContractDocRegister, value, (propertyValue) => { this._ContractDocRegister = propertyValue; }, this.ContractDocRegisterChangedHandler);
      }
    }
    private global::Sungero.Company.IDepartment _Department;
    public virtual global::Sungero.Company.IDepartment Department
    {
      get
      {
        return this._Department;
      }

      set
      {
        this.SetPropertyValue("Department", this._Department, value, (propertyValue) => { this._Department = propertyValue; }, this.DepartmentChangedHandler);
      }
    }




    protected override global::Sungero.Domain.Shared.EntityCreatingFromServerHandler CreateCreatingFromServerHandler(
      global::Sungero.Domain.Shared.IEntity entitySource)
    {
      return new global::Sungero.Docflow.PersonalSettingCreatingFromServerHandler((global::Sungero.Docflow.IPersonalSetting)entitySource, this.Info);
    }

    #region Framework events

    protected void NameChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.Name, this.Name, this);
     ((global::Sungero.Docflow.PersonalSettingSharedHandlers)this.SharedHandlers).NameChanged(args);
    }

    protected void PeriodChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.EnumerationPropertyChangedEventArgs(this.State.Properties.Period, this.Period, this);
     ((global::Sungero.Docflow.PersonalSettingSharedHandlers)this.SharedHandlers).PeriodChanged(args);
    }

    protected void IncomingDocRegisterChangedHandler()
    {
      var args = new global::Sungero.Docflow.Shared.PersonalSettingIncomingDocRegisterChangedEventArgs(this.State.Properties.IncomingDocRegister, this.IncomingDocRegister, this);
     ((global::Sungero.Docflow.PersonalSettingSharedHandlers)this.SharedHandlers).IncomingDocRegisterChanged(args);
    }

    protected void OutgoingDocRegisterChangedHandler()
    {
      var args = new global::Sungero.Docflow.Shared.PersonalSettingOutgoingDocRegisterChangedEventArgs(this.State.Properties.OutgoingDocRegister, this.OutgoingDocRegister, this);
     ((global::Sungero.Docflow.PersonalSettingSharedHandlers)this.SharedHandlers).OutgoingDocRegisterChanged(args);
    }

    protected void InnerDocRegisterChangedHandler()
    {
      var args = new global::Sungero.Docflow.Shared.PersonalSettingInnerDocRegisterChangedEventArgs(this.State.Properties.InnerDocRegister, this.InnerDocRegister, this);
     ((global::Sungero.Docflow.PersonalSettingSharedHandlers)this.SharedHandlers).InnerDocRegisterChanged(args);
    }

    protected void StartDateChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.DateTimePropertyChangedEventArgs(this.State.Properties.StartDate, this.StartDate, this);
     ((global::Sungero.Docflow.PersonalSettingSharedHandlers)this.SharedHandlers).StartDateChanged(args);
    }

    protected void EndDateChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.DateTimePropertyChangedEventArgs(this.State.Properties.EndDate, this.EndDate, this);
     ((global::Sungero.Docflow.PersonalSettingSharedHandlers)this.SharedHandlers).EndDateChanged(args);
    }

    protected void SupervisorChangedHandler()
    {
      var args = new global::Sungero.Docflow.Shared.PersonalSettingSupervisorChangedEventArgs(this.State.Properties.Supervisor, this.Supervisor, this);
     ((global::Sungero.Docflow.PersonalSettingSharedHandlers)this.SharedHandlers).SupervisorChanged(args);
    }

    protected void IncomingCaseFileChangedHandler()
    {
      var args = new global::Sungero.Docflow.Shared.PersonalSettingIncomingCaseFileChangedEventArgs(this.State.Properties.IncomingCaseFile, this.IncomingCaseFile, this);
     ((global::Sungero.Docflow.PersonalSettingSharedHandlers)this.SharedHandlers).IncomingCaseFileChanged(args);
    }

    protected void OutgoingCaseFileChangedHandler()
    {
      var args = new global::Sungero.Docflow.Shared.PersonalSettingOutgoingCaseFileChangedEventArgs(this.State.Properties.OutgoingCaseFile, this.OutgoingCaseFile, this);
     ((global::Sungero.Docflow.PersonalSettingSharedHandlers)this.SharedHandlers).OutgoingCaseFileChanged(args);
    }

    protected void InnerCaseFileChangedHandler()
    {
      var args = new global::Sungero.Docflow.Shared.PersonalSettingInnerCaseFileChangedEventArgs(this.State.Properties.InnerCaseFile, this.InnerCaseFile, this);
     ((global::Sungero.Docflow.PersonalSettingSharedHandlers)this.SharedHandlers).InnerCaseFileChanged(args);
    }

    protected void IncomingDeliveryMethodChangedHandler()
    {
      var args = new global::Sungero.Docflow.Shared.PersonalSettingIncomingDeliveryMethodChangedEventArgs(this.State.Properties.IncomingDeliveryMethod, this.IncomingDeliveryMethod, this);
     ((global::Sungero.Docflow.PersonalSettingSharedHandlers)this.SharedHandlers).IncomingDeliveryMethodChanged(args);
    }

    protected void OutgoingDeliveryMethodChangedHandler()
    {
      var args = new global::Sungero.Docflow.Shared.PersonalSettingOutgoingDeliveryMethodChangedEventArgs(this.State.Properties.OutgoingDeliveryMethod, this.OutgoingDeliveryMethod, this);
     ((global::Sungero.Docflow.PersonalSettingSharedHandlers)this.SharedHandlers).OutgoingDeliveryMethodChanged(args);
    }

    protected void InnerDeliveryMethodChangedHandler()
    {
      var args = new global::Sungero.Docflow.Shared.PersonalSettingInnerDeliveryMethodChangedEventArgs(this.State.Properties.InnerDeliveryMethod, this.InnerDeliveryMethod, this);
     ((global::Sungero.Docflow.PersonalSettingSharedHandlers)this.SharedHandlers).InnerDeliveryMethodChanged(args);
    }

    protected void ResolutionAuthorChangedHandler()
    {
      var args = new global::Sungero.Docflow.Shared.PersonalSettingResolutionAuthorChangedEventArgs(this.State.Properties.ResolutionAuthor, this.ResolutionAuthor, this);
     ((global::Sungero.Docflow.PersonalSettingSharedHandlers)this.SharedHandlers).ResolutionAuthorChanged(args);
    }

    protected void EmployeeChangedHandler()
    {
      var args = new global::Sungero.Docflow.Shared.PersonalSettingEmployeeChangedEventArgs(this.State.Properties.Employee, this.Employee, this);
     ((global::Sungero.Docflow.PersonalSettingSharedHandlers)this.SharedHandlers).EmployeeChanged(args);
    }

    protected void IsAutoCalcSupervisorChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.BooleanPropertyChangedEventArgs(this.State.Properties.IsAutoCalcSupervisor, this.IsAutoCalcSupervisor, this);
     ((global::Sungero.Docflow.PersonalSettingSharedHandlers)this.SharedHandlers).IsAutoCalcSupervisorChanged(args);
    }

    protected void IsAutoCalcResolutionAuthorChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.BooleanPropertyChangedEventArgs(this.State.Properties.IsAutoCalcResolutionAuthor, this.IsAutoCalcResolutionAuthor, this);
     ((global::Sungero.Docflow.PersonalSettingSharedHandlers)this.SharedHandlers).IsAutoCalcResolutionAuthorChanged(args);
    }

    protected void BusinessUnitChangedHandler()
    {
      var args = new global::Sungero.Docflow.Shared.PersonalSettingBusinessUnitChangedEventArgs(this.State.Properties.BusinessUnit, this.BusinessUnit, this);
     ((global::Sungero.Docflow.PersonalSettingSharedHandlers)this.SharedHandlers).BusinessUnitChanged(args);
    }

    protected void ContractDocRegisterChangedHandler()
    {
      var args = new global::Sungero.Docflow.Shared.PersonalSettingContractDocRegisterChangedEventArgs(this.State.Properties.ContractDocRegister, this.ContractDocRegister, this);
     ((global::Sungero.Docflow.PersonalSettingSharedHandlers)this.SharedHandlers).ContractDocRegisterChanged(args);
    }

    protected void ShowRegPaneChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.BooleanPropertyChangedEventArgs(this.State.Properties.ShowRegPane, this.ShowRegPane, this);
     ((global::Sungero.Docflow.PersonalSettingSharedHandlers)this.SharedHandlers).ShowRegPaneChanged(args);
    }

    protected void FollowUpActionItemChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.BooleanPropertyChangedEventArgs(this.State.Properties.FollowUpActionItem, this.FollowUpActionItem, this);
     ((global::Sungero.Docflow.PersonalSettingSharedHandlers)this.SharedHandlers).FollowUpActionItemChanged(args);
    }

    protected void DepartmentChangedHandler()
    {
      var args = new global::Sungero.Docflow.Shared.PersonalSettingDepartmentChangedEventArgs(this.State.Properties.Department, this.Department, this);
     ((global::Sungero.Docflow.PersonalSettingSharedHandlers)this.SharedHandlers).DepartmentChanged(args);
    }

    protected void MyContractsNotificationChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.BooleanPropertyChangedEventArgs(this.State.Properties.MyContractsNotification, this.MyContractsNotification, this);
     ((global::Sungero.Docflow.PersonalSettingSharedHandlers)this.SharedHandlers).MyContractsNotificationChanged(args);
    }

    protected void MySubordinatesContractsNotificationChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.BooleanPropertyChangedEventArgs(this.State.Properties.MySubordinatesContractsNotification, this.MySubordinatesContractsNotification, this);
     ((global::Sungero.Docflow.PersonalSettingSharedHandlers)this.SharedHandlers).MySubordinatesContractsNotificationChanged(args);
    }

    protected void EnvelopeFormatChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.EnumerationPropertyChangedEventArgs(this.State.Properties.EnvelopeFormat, this.EnvelopeFormat, this);
     ((global::Sungero.Docflow.PersonalSettingSharedHandlers)this.SharedHandlers).EnvelopeFormatChanged(args);
    }

    protected void PrintSenderChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.BooleanPropertyChangedEventArgs(this.State.Properties.PrintSender, this.PrintSender, this);
     ((global::Sungero.Docflow.PersonalSettingSharedHandlers)this.SharedHandlers).PrintSenderChanged(args);
    }

    protected void FinArchiveExportPathChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.FinArchiveExportPath, this.FinArchiveExportPath, this);
     ((global::Sungero.Docflow.PersonalSettingSharedHandlers)this.SharedHandlers).FinArchiveExportPathChanged(args);
    }

    protected void ShowNotApproveSignChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.BooleanPropertyChangedEventArgs(this.State.Properties.ShowNotApproveSign, this.ShowNotApproveSign, this);
     ((global::Sungero.Docflow.PersonalSettingSharedHandlers)this.SharedHandlers).ShowNotApproveSignChanged(args);
    }

    protected void CompanyServiceChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.EnumerationPropertyChangedEventArgs(this.State.Properties.CompanyService, this.CompanyService, this);
     ((global::Sungero.Docflow.PersonalSettingSharedHandlers)this.SharedHandlers).CompanyServiceChanged(args);
    }

    protected void MyPowersOfAttorneyNotificationChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.BooleanPropertyChangedEventArgs(this.State.Properties.MyPowersOfAttorneyNotification, this.MyPowersOfAttorneyNotification, this);
     ((global::Sungero.Docflow.PersonalSettingSharedHandlers)this.SharedHandlers).MyPowersOfAttorneyNotificationChanged(args);
    }

    protected void MySubordinatesPowersOfAttorneyNotificationChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.BooleanPropertyChangedEventArgs(this.State.Properties.MySubordinatesPowersOfAttorneyNotification, this.MySubordinatesPowersOfAttorneyNotification, this);
     ((global::Sungero.Docflow.PersonalSettingSharedHandlers)this.SharedHandlers).MySubordinatesPowersOfAttorneyNotificationChanged(args);
    }



    #endregion


    public PersonalSetting()
    {
    }

  }
}

// ==================================================================
// PersonalSettingHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow
{
  public partial class PersonalSettingIncomingDocRegisterPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.EntityPropertyFilteringServerHandler
    where T : class, global::Sungero.Docflow.IDocumentRegister
  {
    private global::Sungero.Docflow.IPersonalSetting _obj
    {
      get { return (global::Sungero.Docflow.IPersonalSetting)this.Entity; }
    }

    public PersonalSettingIncomingDocRegisterPropertyFilteringServerHandler(global::Sungero.Docflow.IPersonalSetting entity)
      : base(entity)
    {
    }
  }

  public partial class PersonalSettingIncomingDocRegisterSearchPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.SearchPropertyFilteringServerHandler
    where T : class, global::Sungero.Docflow.IDocumentRegister
  {

    public virtual global::System.Linq.IQueryable<T> IncomingDocRegisterSearchDialogFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertySearchDialogFilteringEventArgs e)
    {
      return query;
    }

    public PersonalSettingIncomingDocRegisterSearchPropertyFilteringServerHandler()
      : base()
    {
    }
  }

  public partial class PersonalSettingOutgoingDocRegisterPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.EntityPropertyFilteringServerHandler
    where T : class, global::Sungero.Docflow.IDocumentRegister
  {
    private global::Sungero.Docflow.IPersonalSetting _obj
    {
      get { return (global::Sungero.Docflow.IPersonalSetting)this.Entity; }
    }

    public PersonalSettingOutgoingDocRegisterPropertyFilteringServerHandler(global::Sungero.Docflow.IPersonalSetting entity)
      : base(entity)
    {
    }
  }

  public partial class PersonalSettingOutgoingDocRegisterSearchPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.SearchPropertyFilteringServerHandler
    where T : class, global::Sungero.Docflow.IDocumentRegister
  {

    public virtual global::System.Linq.IQueryable<T> OutgoingDocRegisterSearchDialogFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertySearchDialogFilteringEventArgs e)
    {
      return query;
    }

    public PersonalSettingOutgoingDocRegisterSearchPropertyFilteringServerHandler()
      : base()
    {
    }
  }

  public partial class PersonalSettingInnerDocRegisterPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.EntityPropertyFilteringServerHandler
    where T : class, global::Sungero.Docflow.IDocumentRegister
  {
    private global::Sungero.Docflow.IPersonalSetting _obj
    {
      get { return (global::Sungero.Docflow.IPersonalSetting)this.Entity; }
    }

    public PersonalSettingInnerDocRegisterPropertyFilteringServerHandler(global::Sungero.Docflow.IPersonalSetting entity)
      : base(entity)
    {
    }
  }

  public partial class PersonalSettingInnerDocRegisterSearchPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.SearchPropertyFilteringServerHandler
    where T : class, global::Sungero.Docflow.IDocumentRegister
  {

    public virtual global::System.Linq.IQueryable<T> InnerDocRegisterSearchDialogFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertySearchDialogFilteringEventArgs e)
    {
      return query;
    }

    public PersonalSettingInnerDocRegisterSearchPropertyFilteringServerHandler()
      : base()
    {
    }
  }

  public partial class PersonalSettingSupervisorPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.EntityPropertyFilteringServerHandler
    where T : class, global::Sungero.Company.IEmployee
  {
    private global::Sungero.Docflow.IPersonalSetting _obj
    {
      get { return (global::Sungero.Docflow.IPersonalSetting)this.Entity; }
    }

    public virtual global::System.Linq.IQueryable<T> SupervisorFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertyFilteringEventArgs e)
    {
      return query;
    }

    public PersonalSettingSupervisorPropertyFilteringServerHandler(global::Sungero.Docflow.IPersonalSetting entity)
      : base(entity)
    {
    }
  }

  public partial class PersonalSettingSupervisorSearchPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.SearchPropertyFilteringServerHandler
    where T : class, global::Sungero.CoreEntities.IRecipient
  {

    public virtual global::System.Linq.IQueryable<T> SupervisorSearchDialogFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertySearchDialogFilteringEventArgs e)
    {
      return query;
    }

    public PersonalSettingSupervisorSearchPropertyFilteringServerHandler()
      : base()
    {
    }
  }

  public partial class PersonalSettingIncomingCaseFilePropertyFilteringServerHandler<T>
    : global::Sungero.Domain.EntityPropertyFilteringServerHandler
    where T : class, global::Sungero.Docflow.ICaseFile
  {
    private global::Sungero.Docflow.IPersonalSetting _obj
    {
      get { return (global::Sungero.Docflow.IPersonalSetting)this.Entity; }
    }

    public virtual global::System.Linq.IQueryable<T> IncomingCaseFileFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertyFilteringEventArgs e)
    {
      return query;
    }

    public PersonalSettingIncomingCaseFilePropertyFilteringServerHandler(global::Sungero.Docflow.IPersonalSetting entity)
      : base(entity)
    {
    }
  }

  public partial class PersonalSettingIncomingCaseFileSearchPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.SearchPropertyFilteringServerHandler
    where T : class, global::Sungero.Docflow.ICaseFile
  {

    public virtual global::System.Linq.IQueryable<T> IncomingCaseFileSearchDialogFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertySearchDialogFilteringEventArgs e)
    {
      return query;
    }

    public PersonalSettingIncomingCaseFileSearchPropertyFilteringServerHandler()
      : base()
    {
    }
  }

  public partial class PersonalSettingOutgoingCaseFilePropertyFilteringServerHandler<T>
    : global::Sungero.Domain.EntityPropertyFilteringServerHandler
    where T : class, global::Sungero.Docflow.ICaseFile
  {
    private global::Sungero.Docflow.IPersonalSetting _obj
    {
      get { return (global::Sungero.Docflow.IPersonalSetting)this.Entity; }
    }

    public virtual global::System.Linq.IQueryable<T> OutgoingCaseFileFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertyFilteringEventArgs e)
    {
      return query;
    }

    public PersonalSettingOutgoingCaseFilePropertyFilteringServerHandler(global::Sungero.Docflow.IPersonalSetting entity)
      : base(entity)
    {
    }
  }

  public partial class PersonalSettingOutgoingCaseFileSearchPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.SearchPropertyFilteringServerHandler
    where T : class, global::Sungero.Docflow.ICaseFile
  {

    public virtual global::System.Linq.IQueryable<T> OutgoingCaseFileSearchDialogFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertySearchDialogFilteringEventArgs e)
    {
      return query;
    }

    public PersonalSettingOutgoingCaseFileSearchPropertyFilteringServerHandler()
      : base()
    {
    }
  }

  public partial class PersonalSettingInnerCaseFilePropertyFilteringServerHandler<T>
    : global::Sungero.Domain.EntityPropertyFilteringServerHandler
    where T : class, global::Sungero.Docflow.ICaseFile
  {
    private global::Sungero.Docflow.IPersonalSetting _obj
    {
      get { return (global::Sungero.Docflow.IPersonalSetting)this.Entity; }
    }

    public virtual global::System.Linq.IQueryable<T> InnerCaseFileFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertyFilteringEventArgs e)
    {
      return query;
    }

    public PersonalSettingInnerCaseFilePropertyFilteringServerHandler(global::Sungero.Docflow.IPersonalSetting entity)
      : base(entity)
    {
    }
  }

  public partial class PersonalSettingInnerCaseFileSearchPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.SearchPropertyFilteringServerHandler
    where T : class, global::Sungero.Docflow.ICaseFile
  {

    public virtual global::System.Linq.IQueryable<T> InnerCaseFileSearchDialogFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertySearchDialogFilteringEventArgs e)
    {
      return query;
    }

    public PersonalSettingInnerCaseFileSearchPropertyFilteringServerHandler()
      : base()
    {
    }
  }

  public partial class PersonalSettingIncomingDeliveryMethodPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.EntityPropertyFilteringServerHandler
    where T : class, global::Sungero.Docflow.IMailDeliveryMethod
  {
    private global::Sungero.Docflow.IPersonalSetting _obj
    {
      get { return (global::Sungero.Docflow.IPersonalSetting)this.Entity; }
    }

    public virtual global::System.Linq.IQueryable<T> IncomingDeliveryMethodFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertyFilteringEventArgs e)
    {
      return query;
    }

    public PersonalSettingIncomingDeliveryMethodPropertyFilteringServerHandler(global::Sungero.Docflow.IPersonalSetting entity)
      : base(entity)
    {
    }
  }

  public partial class PersonalSettingIncomingDeliveryMethodSearchPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.SearchPropertyFilteringServerHandler
    where T : class, global::Sungero.Docflow.IMailDeliveryMethod
  {

    public virtual global::System.Linq.IQueryable<T> IncomingDeliveryMethodSearchDialogFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertySearchDialogFilteringEventArgs e)
    {
      return query;
    }

    public PersonalSettingIncomingDeliveryMethodSearchPropertyFilteringServerHandler()
      : base()
    {
    }
  }

  public partial class PersonalSettingOutgoingDeliveryMethodPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.EntityPropertyFilteringServerHandler
    where T : class, global::Sungero.Docflow.IMailDeliveryMethod
  {
    private global::Sungero.Docflow.IPersonalSetting _obj
    {
      get { return (global::Sungero.Docflow.IPersonalSetting)this.Entity; }
    }

    public virtual global::System.Linq.IQueryable<T> OutgoingDeliveryMethodFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertyFilteringEventArgs e)
    {
      return query;
    }

    public PersonalSettingOutgoingDeliveryMethodPropertyFilteringServerHandler(global::Sungero.Docflow.IPersonalSetting entity)
      : base(entity)
    {
    }
  }

  public partial class PersonalSettingOutgoingDeliveryMethodSearchPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.SearchPropertyFilteringServerHandler
    where T : class, global::Sungero.Docflow.IMailDeliveryMethod
  {

    public virtual global::System.Linq.IQueryable<T> OutgoingDeliveryMethodSearchDialogFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertySearchDialogFilteringEventArgs e)
    {
      return query;
    }

    public PersonalSettingOutgoingDeliveryMethodSearchPropertyFilteringServerHandler()
      : base()
    {
    }
  }

  public partial class PersonalSettingInnerDeliveryMethodPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.EntityPropertyFilteringServerHandler
    where T : class, global::Sungero.Docflow.IMailDeliveryMethod
  {
    private global::Sungero.Docflow.IPersonalSetting _obj
    {
      get { return (global::Sungero.Docflow.IPersonalSetting)this.Entity; }
    }

    public virtual global::System.Linq.IQueryable<T> InnerDeliveryMethodFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertyFilteringEventArgs e)
    {
      return query;
    }

    public PersonalSettingInnerDeliveryMethodPropertyFilteringServerHandler(global::Sungero.Docflow.IPersonalSetting entity)
      : base(entity)
    {
    }
  }

  public partial class PersonalSettingInnerDeliveryMethodSearchPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.SearchPropertyFilteringServerHandler
    where T : class, global::Sungero.Docflow.IMailDeliveryMethod
  {

    public virtual global::System.Linq.IQueryable<T> InnerDeliveryMethodSearchDialogFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertySearchDialogFilteringEventArgs e)
    {
      return query;
    }

    public PersonalSettingInnerDeliveryMethodSearchPropertyFilteringServerHandler()
      : base()
    {
    }
  }

  public partial class PersonalSettingResolutionAuthorPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.EntityPropertyFilteringServerHandler
    where T : class, global::Sungero.Company.IEmployee
  {
    private global::Sungero.Docflow.IPersonalSetting _obj
    {
      get { return (global::Sungero.Docflow.IPersonalSetting)this.Entity; }
    }

    public PersonalSettingResolutionAuthorPropertyFilteringServerHandler(global::Sungero.Docflow.IPersonalSetting entity)
      : base(entity)
    {
    }
  }

  public partial class PersonalSettingResolutionAuthorSearchPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.SearchPropertyFilteringServerHandler
    where T : class, global::Sungero.CoreEntities.IRecipient
  {

    public virtual global::System.Linq.IQueryable<T> ResolutionAuthorSearchDialogFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertySearchDialogFilteringEventArgs e)
    {
      return query;
    }

    public PersonalSettingResolutionAuthorSearchPropertyFilteringServerHandler()
      : base()
    {
    }
  }

  public partial class PersonalSettingEmployeePropertyFilteringServerHandler<T>
    : global::Sungero.Domain.EntityPropertyFilteringServerHandler
    where T : class, global::Sungero.Company.IEmployee
  {
    private global::Sungero.Docflow.IPersonalSetting _obj
    {
      get { return (global::Sungero.Docflow.IPersonalSetting)this.Entity; }
    }

    public virtual global::System.Linq.IQueryable<T> EmployeeFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertyFilteringEventArgs e)
    {
      return query;
    }

    public PersonalSettingEmployeePropertyFilteringServerHandler(global::Sungero.Docflow.IPersonalSetting entity)
      : base(entity)
    {
    }
  }

  public partial class PersonalSettingEmployeeSearchPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.SearchPropertyFilteringServerHandler
    where T : class, global::Sungero.CoreEntities.IRecipient
  {

    public virtual global::System.Linq.IQueryable<T> EmployeeSearchDialogFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertySearchDialogFilteringEventArgs e)
    {
      return query;
    }

    public PersonalSettingEmployeeSearchPropertyFilteringServerHandler()
      : base()
    {
    }
  }

  public partial class PersonalSettingBusinessUnitPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.EntityPropertyFilteringServerHandler
    where T : class, global::Sungero.Company.IBusinessUnit
  {
    private global::Sungero.Docflow.IPersonalSetting _obj
    {
      get { return (global::Sungero.Docflow.IPersonalSetting)this.Entity; }
    }

    public virtual global::System.Linq.IQueryable<T> BusinessUnitFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertyFilteringEventArgs e)
    {
      return query;
    }

    public PersonalSettingBusinessUnitPropertyFilteringServerHandler(global::Sungero.Docflow.IPersonalSetting entity)
      : base(entity)
    {
    }
  }

  public partial class PersonalSettingBusinessUnitSearchPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.SearchPropertyFilteringServerHandler
    where T : class, global::Sungero.Company.IBusinessUnit
  {

    public virtual global::System.Linq.IQueryable<T> BusinessUnitSearchDialogFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertySearchDialogFilteringEventArgs e)
    {
      return query;
    }

    public PersonalSettingBusinessUnitSearchPropertyFilteringServerHandler()
      : base()
    {
    }
  }

  public partial class PersonalSettingContractDocRegisterPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.EntityPropertyFilteringServerHandler
    where T : class, global::Sungero.Docflow.IDocumentRegister
  {
    private global::Sungero.Docflow.IPersonalSetting _obj
    {
      get { return (global::Sungero.Docflow.IPersonalSetting)this.Entity; }
    }

    public PersonalSettingContractDocRegisterPropertyFilteringServerHandler(global::Sungero.Docflow.IPersonalSetting entity)
      : base(entity)
    {
    }
  }

  public partial class PersonalSettingContractDocRegisterSearchPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.SearchPropertyFilteringServerHandler
    where T : class, global::Sungero.Docflow.IDocumentRegister
  {

    public virtual global::System.Linq.IQueryable<T> ContractDocRegisterSearchDialogFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertySearchDialogFilteringEventArgs e)
    {
      return query;
    }

    public PersonalSettingContractDocRegisterSearchPropertyFilteringServerHandler()
      : base()
    {
    }
  }

  public partial class PersonalSettingDepartmentPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.EntityPropertyFilteringServerHandler
    where T : class, global::Sungero.Company.IDepartment
  {
    private global::Sungero.Docflow.IPersonalSetting _obj
    {
      get { return (global::Sungero.Docflow.IPersonalSetting)this.Entity; }
    }

    public virtual global::System.Linq.IQueryable<T> DepartmentFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertyFilteringEventArgs e)
    {
      return query;
    }

    public PersonalSettingDepartmentPropertyFilteringServerHandler(global::Sungero.Docflow.IPersonalSetting entity)
      : base(entity)
    {
    }
  }

  public partial class PersonalSettingDepartmentSearchPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.SearchPropertyFilteringServerHandler
    where T : class, global::Sungero.Company.IDepartment
  {

    public virtual global::System.Linq.IQueryable<T> DepartmentSearchDialogFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertySearchDialogFilteringEventArgs e)
    {
      return query;
    }

    public PersonalSettingDepartmentSearchPropertyFilteringServerHandler()
      : base()
    {
    }
  }



  public partial class PersonalSettingFilteringServerHandler<T>
    : global::Sungero.Domain.EntityFilteringServerHandler<T>  
    where T : class, global::Sungero.Docflow.IPersonalSetting
  {
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    protected new global::Sungero.Docflow.IPersonalSettingFilterState Filter { get; private set; }

    private global::Sungero.Docflow.IPersonalSettingFilterState _filter
    {
      get
      {
        return this.Filter;
      }
    }

    public PersonalSettingFilteringServerHandler(global::Sungero.Docflow.IPersonalSettingFilterState filter)
    : base()
    {
      this.Filter = filter;
    }

    protected PersonalSettingFilteringServerHandler()
    {
    }

    public override global::System.Linq.IQueryable<T> Filtering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.FilteringEventArgs e)
    {
      return query;
    }


  }

  public partial class PersonalSettingUiFilteringServerHandler<T>
    : global::Sungero.Domain.EntityUiFilteringServerHandler<T>
    where T : class, global::Sungero.Docflow.IPersonalSetting
  {
    public override global::System.Linq.IQueryable<T> Filtering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.UiFilteringEventArgs e)
    {
      query = base.Filtering(query, e);
            return query;
    }
  }

  public partial class PersonalSettingSearchDialogServerHandler : global::Sungero.CoreEntities.DatabookEntrySearchDialogServerHandler
   {
     private global::Sungero.Docflow.Server.PersonalSettingSearchDialogModel _dialog
     {
       get
       {
         return (global::Sungero.Docflow.Server.PersonalSettingSearchDialogModel)this.Dialog;
       }
     }

     public PersonalSettingSearchDialogServerHandler(global::Sungero.Docflow.Server.PersonalSettingSearchDialogModel dialog)
       : base(dialog)
     {
     }
   }

  public partial class PersonalSettingServerHandlers : global::Sungero.CoreEntities.DatabookEntryServerHandlers
  {
    private global::Sungero.Docflow.IPersonalSetting _obj
    {
      get { return (global::Sungero.Docflow.IPersonalSetting)this.Entity; }
    }

    public PersonalSettingServerHandlers(global::Sungero.Docflow.IPersonalSetting entity)
      : base(entity)
    {
    }
  }

  public partial class PersonalSettingCreatingFromServerHandler : global::Sungero.CoreEntities.DatabookEntryCreatingFromServerHandler
  {
    private global::Sungero.Docflow.IPersonalSetting _source
    {
      get { return (global::Sungero.Docflow.IPersonalSetting)this.Source; }
    }

    private global::Sungero.Docflow.IPersonalSettingInfo _info
    {
      get { return (global::Sungero.Docflow.IPersonalSettingInfo)this._Info; }
    }

    public PersonalSettingCreatingFromServerHandler(global::Sungero.Docflow.IPersonalSetting source, global::Sungero.Docflow.IPersonalSettingInfo info)
      : base(source, info)
    {
    }
  }

}

// ==================================================================
// PersonalSettingEventArgs.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
}

// ==================================================================
// PersonalSettingAccessRights.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
  public class PersonalSettingAccessRights : 
    Sungero.CoreEntities.Server.DatabookEntryAccessRights, Sungero.Docflow.IPersonalSettingAccessRights
  {

    public PersonalSettingAccessRights(global::Sungero.Domain.Shared.IEntity entity) : base(entity)
    {
    }
  }

  public class PersonalSettingTypeAccessRights : 
    Sungero.CoreEntities.Server.DatabookEntryTypeAccessRights, Sungero.Docflow.IPersonalSettingAccessRights
  {

    public PersonalSettingTypeAccessRights(global::System.Type entityType) : base(entityType)
    {
    }
  }
}

// ==================================================================
// PersonalSettingRepositoryImplementer.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
    public class PersonalSettingRepositoryImplementer<T> : 
      global::Sungero.Domain.RepositoryImplementer<T>,
      global::Sungero.Docflow.IPersonalSettingRepositoryImplementer<T>
      where T : global::Sungero.Docflow.IPersonalSetting 
    {
       public new global::Sungero.Docflow.IPersonalSettingAccessRights AccessRights
       {
          get { return (global::Sungero.Docflow.IPersonalSettingAccessRights)base.AccessRights; }
       }

       public new global::Sungero.Docflow.IPersonalSettingInfo Info
       {
          get { return (global::Sungero.Docflow.IPersonalSettingInfo)base.Info; }
       }

       protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
       {
         return new global::Sungero.Docflow.Server.PersonalSettingTypeAccessRights(typeof(T));
       }
    }
}

// ==================================================================
// PersonalSettingPanelNavigationFilters.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
}

// ==================================================================
// PersonalSettingServerFunctions.g.cs
// ==================================================================

namespace Sungero.Docflow.Server
{
  public partial class PersonalSettingFunctions : global::Sungero.CoreEntities.Server.DatabookEntryFunctions
  {
    private global::Sungero.Docflow.IPersonalSetting _obj
    {
      get { return (global::Sungero.Docflow.IPersonalSetting)this.Entity; }
    }

    public PersonalSettingFunctions(global::Sungero.Docflow.IPersonalSetting entity) : base(entity) { }
  }
}

// ==================================================================
// PersonalSettingFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Functions
{
  internal static class PersonalSetting
  {
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.PersonalSettingFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static  global::Sungero.Company.IEmployee GetEmployeeResolutionAuthor(global::Sungero.Company.IEmployee employee)
    {
      return global::Sungero.Docflow.Server.PersonalSettingFunctions.GetEmployeeResolutionAuthor(employee);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.PersonalSettingFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static  global::Sungero.Docflow.IPersonalSetting CreatePersonalSettings(global::Sungero.Company.IEmployee employee)
    {
      return global::Sungero.Docflow.Server.PersonalSettingFunctions.CreatePersonalSettings(employee);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.PersonalSettingFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static  global::Sungero.Docflow.IPersonalSetting GetOrCreatePersonalSettings(global::Sungero.Company.IEmployee employee)
    {
      return global::Sungero.Docflow.Server.PersonalSettingFunctions.GetOrCreatePersonalSettings(employee);
    }

    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.PersonalSettingFunctions" />
    internal static  global::System.String GetCompanyServiceUrl(global::System.Boolean isPerson)
    {
      return global::Sungero.Docflow.Shared.PersonalSettingFunctions.GetCompanyServiceUrl(isPerson);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.PersonalSettingFunctions" />
    internal static  global::System.Boolean NeedTinToCompanyService(global::System.Boolean isPerson)
    {
      return global::Sungero.Docflow.Shared.PersonalSettingFunctions.NeedTinToCompanyService(isPerson);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.PersonalSettingFunctions" />
    internal static  global::Sungero.Company.IEmployee GetResolutionAuthor(global::Sungero.Docflow.IPersonalSetting entity)
    {
      return global::Sungero.Docflow.Shared.PersonalSettingFunctions.GetResolutionAuthor(entity);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.PersonalSettingFunctions" />
    internal static  global::Sungero.Company.IEmployee GetSupervisor(global::Sungero.Docflow.IPersonalSetting entity)
    {
      return global::Sungero.Docflow.Shared.PersonalSettingFunctions.GetSupervisor(entity);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.PersonalSettingFunctions" />
    internal static  global::Sungero.Docflow.IPersonalSetting GetPersonalSettings(global::Sungero.Company.IEmployee employee)
    {
      return global::Sungero.Docflow.Shared.PersonalSettingFunctions.GetPersonalSettings(employee);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.PersonalSettingFunctions" />
    internal static  global::System.Nullable<global::System.DateTime> GetStartDate(global::Sungero.Docflow.IPersonalSetting settings)
    {
      return global::Sungero.Docflow.Shared.PersonalSettingFunctions.GetStartDate(settings);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.PersonalSettingFunctions" />
    internal static  global::System.Nullable<global::System.DateTime> GetEndDate(global::Sungero.Docflow.IPersonalSetting settings)
    {
      return global::Sungero.Docflow.Shared.PersonalSettingFunctions.GetEndDate(settings);
    }

  }
}

// ==================================================================
// PersonalSettingServerPublicFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
  public class PersonalSettingServerPublicFunctions : global::Sungero.Docflow.Server.IPersonalSettingServerPublicFunctions
  {
  }
}

// ==================================================================
// PersonalSettingQueries.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Queries
{
  public class PersonalSetting
  {
    private static global::Sungero.Domain.SqlQueryResolver resolver = new global::Sungero.Domain.SqlQueryResolver("Sungero.Docflow.Server.PersonalSetting.PersonalSettingQueries.xml", System.Reflection.Assembly.GetExecutingAssembly());
  }
}
