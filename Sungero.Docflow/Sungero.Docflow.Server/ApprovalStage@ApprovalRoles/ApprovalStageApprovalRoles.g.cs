
// ==================================================================
// ApprovalStageApprovalRoles.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
  public class ApprovalStageApprovalRolesFilterForApprovalRole<TQueryEntity, TSourceEntity, TRootEntity>
    : global::Sungero.Domain.ChildEntityPropertyFilterBase<TQueryEntity, TSourceEntity, TRootEntity>
    where TQueryEntity : class, global::Sungero.Docflow.IApprovalRoleBase
    where TSourceEntity : class, global::Sungero.Docflow.IApprovalStageApprovalRoles
    where TRootEntity : class, global::Sungero.Docflow.IApprovalStage
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, TSourceEntity sourceEntity, TRootEntity rootEntity)
    {
      var args = new global::Sungero.Domain.PropertyFilteringEventArgs(sourceEntity);
      var result = new global::Sungero.Docflow.ApprovalStageApprovalRolesApprovalRolePropertyFilteringServerHandler<TQueryEntity>(sourceEntity, rootEntity).ApprovalRolesApprovalRoleFiltering(query, args);
      if (args.DisableUiFiltering)
        global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public ApprovalStageApprovalRolesFilterForApprovalRole(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class ApprovalStageApprovalRolesSearchFilterForApprovalRole<TQueryEntity>
    : global::Sungero.Domain.SearchDialogPropertyFilter<TQueryEntity>
    where TQueryEntity : class, global::Sungero.Docflow.IApprovalRoleBase
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, System.Guid entityType)
    {
      var args = new global::Sungero.Domain.PropertySearchDialogFilteringEventArgs(entityType);
      var result = new global::Sungero.Docflow.ApprovalStageApprovalRolesApprovalRoleSearchPropertyFilteringServerHandler<TQueryEntity>().ApprovalRolesApprovalRoleSearchDialogFiltering(query, args);
      if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public ApprovalStageApprovalRolesSearchFilterForApprovalRole(string propertyName)
      : base(propertyName)
    {
    }
  }



  [global::Sungero.Domain.PropertyFilter(typeof(global::Sungero.Docflow.Server.ApprovalStageApprovalRolesFilterForApprovalRole<global::Sungero.Docflow.IApprovalRoleBase, global::Sungero.Docflow.IApprovalStageApprovalRoles, global::Sungero.Docflow.IApprovalStage>), "ApprovalRole")]
  [global::Sungero.Domain.SearchPropertyFilter(typeof(global::Sungero.Docflow.Server.ApprovalStageApprovalRolesSearchFilterForApprovalRole<global::Sungero.Docflow.IApprovalRoleBase>), "ApprovalRole")]


  public class ApprovalStageApprovalRoles :
    global::Sungero.Domain.ChildEntity, global::Sungero.Docflow.IApprovalStageApprovalRoles
  {
    public static new readonly global::System.Guid ClassTypeGuid = global::System.Guid.Parse("b58b8d30-76b1-448c-b71e-b58e0716a840");

    public override global::System.Guid TypeGuid
    {
      get { return global::Sungero.Docflow.Server.ApprovalStageApprovalRoles.ClassTypeGuid; }
    }

    public override string TypeName
    {
      get { return "Sungero.Docflow.IApprovalStageApprovalRoles, Sungero.Domain.Interfaces"; }
    }

    public new virtual global::Sungero.Docflow.IApprovalStageApprovalRolesState State
    {
      get { return (global::Sungero.Docflow.IApprovalStageApprovalRolesState)base.State; }
    }

    protected override global::Sungero.Domain.Shared.IEntityState CreateState()
    {
      return new global::Sungero.Docflow.Shared.ApprovalStageApprovalRolesState(this);
    }

    public new virtual global::Sungero.Docflow.IApprovalStageApprovalRolesInfo Info
    {
      get { return (global::Sungero.Docflow.IApprovalStageApprovalRolesInfo)base.Info; }
    }


    public global::Sungero.Docflow.IApprovalStage ApprovalStage { get; set; }

    public override global::Sungero.Domain.Shared.IEntity RootEntity
    {
      get { return this.ApprovalStage; }
      set { this.ApprovalStage = (global::Sungero.Docflow.IApprovalStage)value; }
    }

    protected override object CreateSharedHandlers() {
      return new global::Sungero.Docflow.ApprovalStageApprovalRolesSharedHandlers(this);
    }







    private global::Sungero.Docflow.IApprovalRoleBase _ApprovalRole;
    public virtual global::Sungero.Docflow.IApprovalRoleBase ApprovalRole
    {
      get
      {
        return this._ApprovalRole;
      }

      set
      {
        this.SetPropertyValue("ApprovalRole", this._ApprovalRole, value, (propertyValue) => { this._ApprovalRole = propertyValue; }, this.ApprovalRoleChangedHandler);
      }
    }




    #region Framework events

    protected void ApprovalRoleChangedHandler()
    {
      var args = new global::Sungero.Docflow.Shared.ApprovalStageApprovalRolesApprovalRoleChangedEventArgs(this.State.Properties.ApprovalRole, this.ApprovalRole, this);
     ((global::Sungero.Docflow.ApprovalStageApprovalRolesSharedHandlers)this.SharedHandlers).ApprovalRolesApprovalRoleChanged(args);
    }



    #endregion


    public ApprovalStageApprovalRoles()
    {
    }

  }
}

// ==================================================================
// ApprovalStageApprovalRolesHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow
{
  public partial class ApprovalStageApprovalRolesApprovalRolePropertyFilteringServerHandler<T>
    : global::Sungero.Domain.ChildEntityPropertyFilteringServerHandler
    where T : class, global::Sungero.Docflow.IApprovalRoleBase
  {
    private global::Sungero.Docflow.IApprovalStageApprovalRoles _obj
    {
      get { return (global::Sungero.Docflow.IApprovalStageApprovalRoles)this.Entity; }
    }

    private global::Sungero.Docflow.IApprovalStage _root
    {
      get { return (global::Sungero.Docflow.IApprovalStage)this.Root; }
    }

    public ApprovalStageApprovalRolesApprovalRolePropertyFilteringServerHandler(global::Sungero.Docflow.IApprovalStageApprovalRoles entity, global::Sungero.Docflow.IApprovalStage root)
      : base(entity, root)
    {
    }
  }

  public partial class ApprovalStageApprovalRolesApprovalRoleSearchPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.SearchPropertyFilteringServerHandler
    where T : class, global::Sungero.Docflow.IApprovalRoleBase
  {

    public virtual global::System.Linq.IQueryable<T> ApprovalRolesApprovalRoleSearchDialogFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertySearchDialogFilteringEventArgs e)
    {
      return query;
    }

    public ApprovalStageApprovalRolesApprovalRoleSearchPropertyFilteringServerHandler()
      : base()
    {
    }
  }



}

// ==================================================================
// ApprovalStageApprovalRolesEventArgs.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
}
