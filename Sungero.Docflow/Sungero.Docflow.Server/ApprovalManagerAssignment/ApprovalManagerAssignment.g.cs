
// ==================================================================
// ApprovalManagerAssignment.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
    public class ApprovalManagerAssignmentFilter<T> :
      global::Sungero.Workflow.Server.AssignmentFilter<T>
      where T : class, global::Sungero.Docflow.IApprovalManagerAssignment
    {
      protected new global::Sungero.Docflow.IApprovalManagerAssignmentFilterState Filter { get; private set; }

      private global::Sungero.Docflow.IApprovalManagerAssignmentFilterState filter
      {
        get
        {
          return this.Filter;
        }
      }

      protected override global::System.Linq.IQueryable<T> ApplyAppliedFilter(global::System.Linq.IQueryable<T> query)
      {
        return base.ApplyAppliedFilter(query);
      }

      public ApprovalManagerAssignmentFilter(global::Sungero.Docflow.IApprovalManagerAssignmentFilterState filter)
      : base()
      {
        this.Filter = filter;
      }

      protected ApprovalManagerAssignmentFilter()
      {
      }
    }
    public class ApprovalManagerAssignmentSearchDialogModel : global::Sungero.Workflow.Server.AssignmentSearchDialogModel
        {
                  public override global::System.Int32? Id { get; protected set; }
                  public override global::System.String Subject { get; protected set; }


                  public override global::System.Collections.Generic.IEnumerable<Sungero.CoreEntities.IRecipient> Author { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<Sungero.CoreEntities.IRecipient> Performer { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<Sungero.Core.Enumeration> Status { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<Sungero.Core.Enumeration> Importance { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<CommonLibrary.DateRangeValue> Deadline { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<CommonLibrary.DateRangeValue> Created { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<Sungero.Core.Enumeration> Result { get; protected set; }



                  public virtual global::System.Collections.Generic.IEnumerable<Sungero.CoreEntities.IRecipient> Signatory { get; protected set; }
                  public virtual global::System.Collections.Generic.IEnumerable<Sungero.Docflow.IApprovalStage> Stage { get; protected set; }
                  public virtual global::System.Collections.Generic.IEnumerable<Sungero.Docflow.IApprovalRuleBase> ApprovalRule { get; protected set; }
                  public virtual global::System.Collections.Generic.IEnumerable<Sungero.CoreEntities.IRecipient> Addressee { get; protected set; }


                   [Sungero.Domain.Shared.HideInDevStudio()]
                   public ApprovalManagerAssignmentAddApproversModel AddApprovers { get; protected set; }

        }


      public class ApprovalManagerAssignmentAddApproversModel : global::Sungero.Domain.CollectionPropertySearchDialogModel
          {
            public override global::System.Int32? Id { get; protected set; }


         }



  public class ApprovalManagerAssignmentFilterForSignatory<TQueryEntity, TSourceEntity>
    : global::Sungero.Domain.EntityPropertyFilterBase<TQueryEntity, TSourceEntity>
    where TQueryEntity : class, global::Sungero.Company.IEmployee
    where TSourceEntity : class, global::Sungero.Docflow.IApprovalManagerAssignment
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, TSourceEntity sourceEntity)
    {
      var args = new global::Sungero.Domain.PropertyFilteringEventArgs(sourceEntity);
      var result = new global::Sungero.Docflow.ApprovalManagerAssignmentSignatoryPropertyFilteringServerHandler<TQueryEntity>(sourceEntity).SignatoryFiltering(query, args);
      if (args.DisableUiFiltering)
        global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public ApprovalManagerAssignmentFilterForSignatory(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class ApprovalManagerAssignmentSearchFilterForSignatory<TQueryEntity>
    : global::Sungero.Domain.SearchDialogPropertyFilter<TQueryEntity>
    where TQueryEntity : class, global::Sungero.CoreEntities.IRecipient
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, System.Guid entityType)
    {
      var args = new global::Sungero.Domain.PropertySearchDialogFilteringEventArgs(entityType);
      var result = new global::Sungero.Docflow.ApprovalManagerAssignmentSignatorySearchPropertyFilteringServerHandler<TQueryEntity>().SignatorySearchDialogFiltering(query, args);
      if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public ApprovalManagerAssignmentSearchFilterForSignatory(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class ApprovalManagerAssignmentFilterForStage<TQueryEntity, TSourceEntity>
    : global::Sungero.Domain.EntityPropertyFilterBase<TQueryEntity, TSourceEntity>
    where TQueryEntity : class, global::Sungero.Docflow.IApprovalStage
    where TSourceEntity : class, global::Sungero.Docflow.IApprovalManagerAssignment
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, TSourceEntity sourceEntity)
    {
      var args = new global::Sungero.Domain.PropertyFilteringEventArgs(sourceEntity);
      var result = new global::Sungero.Docflow.ApprovalManagerAssignmentStagePropertyFilteringServerHandler<TQueryEntity>(sourceEntity).StageFiltering(query, args);
      if (args.DisableUiFiltering)
        global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public ApprovalManagerAssignmentFilterForStage(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class ApprovalManagerAssignmentSearchFilterForStage<TQueryEntity>
    : global::Sungero.Domain.SearchDialogPropertyFilter<TQueryEntity>
    where TQueryEntity : class, global::Sungero.Docflow.IApprovalStage
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, System.Guid entityType)
    {
      var args = new global::Sungero.Domain.PropertySearchDialogFilteringEventArgs(entityType);
      var result = new global::Sungero.Docflow.ApprovalManagerAssignmentStageSearchPropertyFilteringServerHandler<TQueryEntity>().StageSearchDialogFiltering(query, args);
      if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public ApprovalManagerAssignmentSearchFilterForStage(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class ApprovalManagerAssignmentFilterForApprovalRule<TQueryEntity, TSourceEntity>
    : global::Sungero.Domain.EntityPropertyFilterBase<TQueryEntity, TSourceEntity>
    where TQueryEntity : class, global::Sungero.Docflow.IApprovalRuleBase
    where TSourceEntity : class, global::Sungero.Docflow.IApprovalManagerAssignment
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, TSourceEntity sourceEntity)
    {
      var args = new global::Sungero.Domain.PropertyFilteringEventArgs(sourceEntity);
      var result = new global::Sungero.Docflow.ApprovalManagerAssignmentApprovalRulePropertyFilteringServerHandler<TQueryEntity>(sourceEntity).ApprovalRuleFiltering(query, args);
      if (args.DisableUiFiltering)
        global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public ApprovalManagerAssignmentFilterForApprovalRule(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class ApprovalManagerAssignmentSearchFilterForApprovalRule<TQueryEntity>
    : global::Sungero.Domain.SearchDialogPropertyFilter<TQueryEntity>
    where TQueryEntity : class, global::Sungero.Docflow.IApprovalRuleBase
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, System.Guid entityType)
    {
      var args = new global::Sungero.Domain.PropertySearchDialogFilteringEventArgs(entityType);
      var result = new global::Sungero.Docflow.ApprovalManagerAssignmentApprovalRuleSearchPropertyFilteringServerHandler<TQueryEntity>().ApprovalRuleSearchDialogFiltering(query, args);
      if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public ApprovalManagerAssignmentSearchFilterForApprovalRule(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class ApprovalManagerAssignmentFilterForAddressee<TQueryEntity, TSourceEntity>
    : global::Sungero.Domain.EntityPropertyFilterBase<TQueryEntity, TSourceEntity>
    where TQueryEntity : class, global::Sungero.Company.IEmployee
    where TSourceEntity : class, global::Sungero.Docflow.IApprovalManagerAssignment
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, TSourceEntity sourceEntity)
    {
      var args = new global::Sungero.Domain.PropertyFilteringEventArgs(sourceEntity);
      var result = new global::Sungero.Docflow.ApprovalManagerAssignmentAddresseePropertyFilteringServerHandler<TQueryEntity>(sourceEntity).AddresseeFiltering(query, args);
      if (args.DisableUiFiltering)
        global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public ApprovalManagerAssignmentFilterForAddressee(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class ApprovalManagerAssignmentSearchFilterForAddressee<TQueryEntity>
    : global::Sungero.Domain.SearchDialogPropertyFilter<TQueryEntity>
    where TQueryEntity : class, global::Sungero.CoreEntities.IRecipient
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, System.Guid entityType)
    {
      var args = new global::Sungero.Domain.PropertySearchDialogFilteringEventArgs(entityType);
      var result = new global::Sungero.Docflow.ApprovalManagerAssignmentAddresseeSearchPropertyFilteringServerHandler<TQueryEntity>().AddresseeSearchDialogFiltering(query, args);
      if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public ApprovalManagerAssignmentSearchFilterForAddressee(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class ApprovalManagerAssignmentFilterForDeliveryMethod<TQueryEntity, TSourceEntity>
    : global::Sungero.Domain.EntityPropertyFilterBase<TQueryEntity, TSourceEntity>
    where TQueryEntity : class, global::Sungero.Docflow.IMailDeliveryMethod
    where TSourceEntity : class, global::Sungero.Docflow.IApprovalManagerAssignment
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, TSourceEntity sourceEntity)
    {
      var args = new global::Sungero.Domain.PropertyFilteringEventArgs(sourceEntity);
      var result = new global::Sungero.Docflow.ApprovalManagerAssignmentDeliveryMethodPropertyFilteringServerHandler<TQueryEntity>(sourceEntity).DeliveryMethodFiltering(query, args);
      if (args.DisableUiFiltering)
        global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public ApprovalManagerAssignmentFilterForDeliveryMethod(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class ApprovalManagerAssignmentSearchFilterForDeliveryMethod<TQueryEntity>
    : global::Sungero.Domain.SearchDialogPropertyFilter<TQueryEntity>
    where TQueryEntity : class, global::Sungero.Docflow.IMailDeliveryMethod
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, System.Guid entityType)
    {
      var args = new global::Sungero.Domain.PropertySearchDialogFilteringEventArgs(entityType);
      var result = new global::Sungero.Docflow.ApprovalManagerAssignmentDeliveryMethodSearchPropertyFilteringServerHandler<TQueryEntity>().DeliveryMethodSearchDialogFiltering(query, args);
      if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public ApprovalManagerAssignmentSearchFilterForDeliveryMethod(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class ApprovalManagerAssignmentFilterForExchangeService<TQueryEntity, TSourceEntity>
    : global::Sungero.Domain.EntityPropertyFilterBase<TQueryEntity, TSourceEntity>
    where TQueryEntity : class, global::Sungero.ExchangeCore.IExchangeService
    where TSourceEntity : class, global::Sungero.Docflow.IApprovalManagerAssignment
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, TSourceEntity sourceEntity)
    {
      var args = new global::Sungero.Domain.PropertyFilteringEventArgs(sourceEntity);
      var result = new global::Sungero.Docflow.ApprovalManagerAssignmentExchangeServicePropertyFilteringServerHandler<TQueryEntity>(sourceEntity).ExchangeServiceFiltering(query, args);
      if (args.DisableUiFiltering)
        global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public ApprovalManagerAssignmentFilterForExchangeService(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class ApprovalManagerAssignmentSearchFilterForExchangeService<TQueryEntity>
    : global::Sungero.Domain.SearchDialogPropertyFilter<TQueryEntity>
    where TQueryEntity : class, global::Sungero.ExchangeCore.IExchangeService
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, System.Guid entityType)
    {
      var args = new global::Sungero.Domain.PropertySearchDialogFilteringEventArgs(entityType);
      var result = new global::Sungero.Docflow.ApprovalManagerAssignmentExchangeServiceSearchPropertyFilteringServerHandler<TQueryEntity>().ExchangeServiceSearchDialogFiltering(query, args);
      if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public ApprovalManagerAssignmentSearchFilterForExchangeService(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class ApprovalManagerAssignmentFilterForReworkPerformer<TQueryEntity, TSourceEntity>
    : global::Sungero.Domain.EntityPropertyFilterBase<TQueryEntity, TSourceEntity>
    where TQueryEntity : class, global::Sungero.Company.IEmployee
    where TSourceEntity : class, global::Sungero.Docflow.IApprovalManagerAssignment
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, TSourceEntity sourceEntity)
    {
      var args = new global::Sungero.Domain.PropertyFilteringEventArgs(sourceEntity);
      var result = new global::Sungero.Docflow.ApprovalManagerAssignmentReworkPerformerPropertyFilteringServerHandler<TQueryEntity>(sourceEntity).ReworkPerformerFiltering(query, args);
      if (args.DisableUiFiltering)
        global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public ApprovalManagerAssignmentFilterForReworkPerformer(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class ApprovalManagerAssignmentSearchFilterForReworkPerformer<TQueryEntity>
    : global::Sungero.Domain.SearchDialogPropertyFilter<TQueryEntity>
    where TQueryEntity : class, global::Sungero.CoreEntities.IRecipient
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, System.Guid entityType)
    {
      var args = new global::Sungero.Domain.PropertySearchDialogFilteringEventArgs(entityType);
      var result = new global::Sungero.Docflow.ApprovalManagerAssignmentReworkPerformerSearchPropertyFilteringServerHandler<TQueryEntity>().ReworkPerformerSearchDialogFiltering(query, args);
      if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public ApprovalManagerAssignmentSearchFilterForReworkPerformer(string propertyName)
      : base(propertyName)
    {
    }
  }



  [global::Sungero.Domain.Filter(typeof(global::Sungero.Docflow.Server.ApprovalManagerAssignmentFilter<global::Sungero.Docflow.IApprovalManagerAssignment>))]
  [global::Sungero.Domain.PropertyFilter(typeof(global::Sungero.Docflow.Server.ApprovalManagerAssignmentFilterForSignatory<global::Sungero.Company.IEmployee, global::Sungero.Docflow.IApprovalManagerAssignment>), "Signatory")]
  [global::Sungero.Domain.SearchPropertyFilter(typeof(global::Sungero.Docflow.Server.ApprovalManagerAssignmentSearchFilterForSignatory<global::Sungero.CoreEntities.IRecipient>), "Signatory")]
  [global::Sungero.Domain.PropertyFilter(typeof(global::Sungero.Docflow.Server.ApprovalManagerAssignmentFilterForStage<global::Sungero.Docflow.IApprovalStage, global::Sungero.Docflow.IApprovalManagerAssignment>), "Stage")]
  [global::Sungero.Domain.SearchPropertyFilter(typeof(global::Sungero.Docflow.Server.ApprovalManagerAssignmentSearchFilterForStage<global::Sungero.Docflow.IApprovalStage>), "Stage")]
  [global::Sungero.Domain.PropertyFilter(typeof(global::Sungero.Docflow.Server.ApprovalManagerAssignmentFilterForApprovalRule<global::Sungero.Docflow.IApprovalRuleBase, global::Sungero.Docflow.IApprovalManagerAssignment>), "ApprovalRule")]
  [global::Sungero.Domain.SearchPropertyFilter(typeof(global::Sungero.Docflow.Server.ApprovalManagerAssignmentSearchFilterForApprovalRule<global::Sungero.Docflow.IApprovalRuleBase>), "ApprovalRule")]
  [global::Sungero.Domain.PropertyFilter(typeof(global::Sungero.Docflow.Server.ApprovalManagerAssignmentFilterForAddressee<global::Sungero.Company.IEmployee, global::Sungero.Docflow.IApprovalManagerAssignment>), "Addressee")]
  [global::Sungero.Domain.SearchPropertyFilter(typeof(global::Sungero.Docflow.Server.ApprovalManagerAssignmentSearchFilterForAddressee<global::Sungero.CoreEntities.IRecipient>), "Addressee")]
  [global::Sungero.Domain.PropertyFilter(typeof(global::Sungero.Docflow.Server.ApprovalManagerAssignmentFilterForDeliveryMethod<global::Sungero.Docflow.IMailDeliveryMethod, global::Sungero.Docflow.IApprovalManagerAssignment>), "DeliveryMethod")]
  [global::Sungero.Domain.SearchPropertyFilter(typeof(global::Sungero.Docflow.Server.ApprovalManagerAssignmentSearchFilterForDeliveryMethod<global::Sungero.Docflow.IMailDeliveryMethod>), "DeliveryMethod")]
  [global::Sungero.Domain.PropertyFilter(typeof(global::Sungero.Docflow.Server.ApprovalManagerAssignmentFilterForExchangeService<global::Sungero.ExchangeCore.IExchangeService, global::Sungero.Docflow.IApprovalManagerAssignment>), "ExchangeService")]
  [global::Sungero.Domain.SearchPropertyFilter(typeof(global::Sungero.Docflow.Server.ApprovalManagerAssignmentSearchFilterForExchangeService<global::Sungero.ExchangeCore.IExchangeService>), "ExchangeService")]
  [global::Sungero.Domain.PropertyFilter(typeof(global::Sungero.Docflow.Server.ApprovalManagerAssignmentFilterForReworkPerformer<global::Sungero.Company.IEmployee, global::Sungero.Docflow.IApprovalManagerAssignment>), "ReworkPerformer")]
  [global::Sungero.Domain.SearchPropertyFilter(typeof(global::Sungero.Docflow.Server.ApprovalManagerAssignmentSearchFilterForReworkPerformer<global::Sungero.CoreEntities.IRecipient>), "ReworkPerformer")]


  public class ApprovalManagerAssignment :
    global::Sungero.Workflow.Server.Assignment, global::Sungero.Docflow.IApprovalManagerAssignment, global::Sungero.Domain.Shared.ISecurableEntity, global::Sungero.Domain.IInternalSecurableEntity
  {
    public static new readonly global::System.Guid ClassTypeGuid = global::System.Guid.Parse("bbb08f45-60c1-4496-9ff6-b32caed44215");

    public override global::System.Guid TypeGuid
    {
      get { return global::Sungero.Docflow.Server.ApprovalManagerAssignment.ClassTypeGuid; }
    }

    public override string TypeName
    {
      get { return "Sungero.Docflow.IApprovalManagerAssignment, Sungero.Domain.Interfaces"; }
    }

    public override string DisplayValue
    {
      get { return this.Subject; }
      set { this.Subject = value; }
    }

    public new virtual global::Sungero.Docflow.IApprovalManagerAssignmentState State
    {
      get { return (global::Sungero.Docflow.IApprovalManagerAssignmentState)base.State; }
    }

    protected override global::Sungero.Domain.Shared.IEntityState CreateState()
    {
      return new global::Sungero.Docflow.Shared.ApprovalManagerAssignmentState(this);
    }

    public new virtual global::Sungero.Docflow.IApprovalManagerAssignmentInfo Info
    {
      get { return (global::Sungero.Docflow.IApprovalManagerAssignmentInfo)base.Info; }
    }

    public new virtual global::Sungero.Docflow.IApprovalManagerAssignmentAccessRights AccessRights
    {
      get { return (global::Sungero.Docflow.IApprovalManagerAssignmentAccessRights)base.AccessRights; }
    }

    protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
    {
      return new global::Sungero.Docflow.Server.ApprovalManagerAssignmentAccessRights(this);
    }

    protected override global::Sungero.Domain.EntityFunctions CreateServerFunctions()
    {
      return new global::Sungero.Docflow.Server.ApprovalManagerAssignmentFunctions(this);
    }

    protected override global::Sungero.Domain.Shared.EntityFunctions CreateSharedFunctions()
    {
      return new global::Sungero.Docflow.Shared.ApprovalManagerAssignmentFunctions(this);
    }

    protected override object CreateHandlers() {
      return new global::Sungero.Docflow.ApprovalManagerAssignmentServerHandlers(this);
    }

    protected override object CreateSharedHandlers() {
      return new global::Sungero.Docflow.ApprovalManagerAssignmentSharedHandlers(this);
    }

    private global::System.Int32? _StageNumber;
    public virtual global::System.Int32? StageNumber
    {
      get
      {
        return this._StageNumber;
      }

      set
      {
        this.SetPropertyValue("StageNumber", this._StageNumber, value, (propertyValue) => { this._StageNumber = propertyValue; }, this.StageNumberChangedHandler);
      }
    }






    private static global::Sungero.Domain.Shared.EnumerationItems _ResultItems = new global::Sungero.Domain.Shared.EnumerationItems(
      global::Sungero.Workflow.Server.Assignment.ResultItems,
      typeof(global::Sungero.Docflow.ApprovalManagerAssignment.Result),
      typeof(global::Sungero.Docflow.Server.ApprovalManagerAssignment),
      "Result");

    public static new global::Sungero.Domain.Shared.EnumerationItems ResultItems
    {
      get { return global::Sungero.Docflow.Server.ApprovalManagerAssignment._ResultItems; }
    }

    public override global::Sungero.Domain.Shared.EnumerationItems ResultAllowedItems
    {
      get { return global::Sungero.Docflow.Server.ApprovalManagerAssignment.ResultItems; }
    }



    private global::Sungero.Company.IEmployee _Signatory;
    public virtual global::Sungero.Company.IEmployee Signatory
    {
      get
      {
        return this._Signatory;
      }

      set
      {
        this.SetPropertyValue("Signatory", this._Signatory, value, (propertyValue) => { this._Signatory = propertyValue; }, this.SignatoryChangedHandler);
      }
    }
    private global::Sungero.Docflow.IApprovalStage _Stage;
    public virtual global::Sungero.Docflow.IApprovalStage Stage
    {
      get
      {
        return this._Stage;
      }

      set
      {
        this.SetPropertyValue("Stage", this._Stage, value, (propertyValue) => { this._Stage = propertyValue; }, this.StageChangedHandler);
      }
    }
    private global::Sungero.Docflow.IApprovalRuleBase _ApprovalRule;
    public virtual global::Sungero.Docflow.IApprovalRuleBase ApprovalRule
    {
      get
      {
        return this._ApprovalRule;
      }

      set
      {
        this.SetPropertyValue("ApprovalRule", this._ApprovalRule, value, (propertyValue) => { this._ApprovalRule = propertyValue; }, this.ApprovalRuleChangedHandler);
      }
    }
    private global::Sungero.Company.IEmployee _Addressee;
    public virtual global::Sungero.Company.IEmployee Addressee
    {
      get
      {
        return this._Addressee;
      }

      set
      {
        this.SetPropertyValue("Addressee", this._Addressee, value, (propertyValue) => { this._Addressee = propertyValue; }, this.AddresseeChangedHandler);
      }
    }
    private global::Sungero.Docflow.IMailDeliveryMethod _DeliveryMethod;
    public virtual global::Sungero.Docflow.IMailDeliveryMethod DeliveryMethod
    {
      get
      {
        return this._DeliveryMethod;
      }

      set
      {
        this.SetPropertyValue("DeliveryMethod", this._DeliveryMethod, value, (propertyValue) => { this._DeliveryMethod = propertyValue; }, this.DeliveryMethodChangedHandler);
      }
    }
    private global::Sungero.ExchangeCore.IExchangeService _ExchangeService;
    public virtual global::Sungero.ExchangeCore.IExchangeService ExchangeService
    {
      get
      {
        return this._ExchangeService;
      }

      set
      {
        this.SetPropertyValue("ExchangeService", this._ExchangeService, value, (propertyValue) => { this._ExchangeService = propertyValue; }, this.ExchangeServiceChangedHandler);
      }
    }
    private global::Sungero.Company.IEmployee _ReworkPerformer;
    public virtual global::Sungero.Company.IEmployee ReworkPerformer
    {
      get
      {
        return this._ReworkPerformer;
      }

      set
      {
        this.SetPropertyValue("ReworkPerformer", this._ReworkPerformer, value, (propertyValue) => { this._ReworkPerformer = propertyValue; }, this.ReworkPerformerChangedHandler);
      }
    }


    protected global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Docflow.IApprovalManagerAssignmentAddApprovers> _AddApprovers;

    public virtual global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Docflow.IApprovalManagerAssignmentAddApprovers> AddApprovers
    {
      get
      {
        if (this._AddApprovers == null)
        {
          this._AddApprovers = this.CreateAddApproversCollection();
          this.SetAddApproversEventHandlers();
        }
        return this._AddApprovers;
      }

      set
      {
        if (this._AddApprovers != null)
          this.UnsetChildCollectionEventHandlers(this._AddApprovers);

        this._AddApprovers = value;
        this.SetAddApproversEventHandlers();
      }
    }

    protected virtual global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Docflow.IApprovalManagerAssignmentAddApprovers> CreateAddApproversCollection()
    {
      return new global::Sungero.Domain.ChildEntityCollection<global::Sungero.Docflow.IApprovalManagerAssignmentAddApprovers>() { RootEntity = this };
    }

    private void SetAddApproversEventHandlers()
    {
      this.SetChildCollectionEventHandlers(this._AddApprovers, "AddApprovers");

      var changeNotifier = (global::Sungero.Domain.Shared.INotifyChildEntityCollectionChanged)this._AddApprovers;
      changeNotifier.Added += this.AddApproversAddedHandler;
      changeNotifier.Deleted += this.AddApproversDeletedHandler;
      changeNotifier.Added += this.AddApproversCollectionUpdateEventHandler;
      changeNotifier.Deleted += this.AddApproversCollectionUpdateEventHandler;
      changeNotifier.Updated += this.AddApproversCollectionUpdateEventHandler;
    }

    private void AddApproversCollectionUpdateEventHandler(object sender, global::Sungero.Domain.Shared.BaseChildEntityEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      if (this.IsPropertyChangedHandlerEnabled)
        this.AddApproversChangedHandler();
    }



    protected override global::Sungero.Domain.Shared.EntityCreatingFromServerHandler CreateCreatingFromServerHandler(
      global::Sungero.Domain.Shared.IEntity entitySource)
    {
      return new global::Sungero.Docflow.ApprovalManagerAssignmentCreatingFromServerHandler((global::Sungero.Docflow.IApprovalManagerAssignment)entitySource, this.Info);
    }

    #region Framework events

    protected void AddApproversChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.CollectionPropertyChangedEventArgs(this);
     ((global::Sungero.Docflow.ApprovalManagerAssignmentSharedHandlers)this.SharedHandlers).AddApproversChanged(args);
    }

    protected void SignatoryChangedHandler()
    {
      var args = new global::Sungero.Docflow.Shared.ApprovalManagerAssignmentSignatoryChangedEventArgs(this.State.Properties.Signatory, this.Signatory, this);
     ((global::Sungero.Docflow.ApprovalManagerAssignmentSharedHandlers)this.SharedHandlers).SignatoryChanged(args);
    }

    protected void StageChangedHandler()
    {
      var args = new global::Sungero.Docflow.Shared.ApprovalManagerAssignmentStageChangedEventArgs(this.State.Properties.Stage, this.Stage, this);
     ((global::Sungero.Docflow.ApprovalManagerAssignmentSharedHandlers)this.SharedHandlers).StageChanged(args);
    }

    protected void ApprovalRuleChangedHandler()
    {
      var args = new global::Sungero.Docflow.Shared.ApprovalManagerAssignmentApprovalRuleChangedEventArgs(this.State.Properties.ApprovalRule, this.ApprovalRule, this);
     ((global::Sungero.Docflow.ApprovalManagerAssignmentSharedHandlers)this.SharedHandlers).ApprovalRuleChanged(args);
    }

    protected void AddresseeChangedHandler()
    {
      var args = new global::Sungero.Docflow.Shared.ApprovalManagerAssignmentAddresseeChangedEventArgs(this.State.Properties.Addressee, this.Addressee, this);
     ((global::Sungero.Docflow.ApprovalManagerAssignmentSharedHandlers)this.SharedHandlers).AddresseeChanged(args);
    }

    protected void StageNumberChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.IntegerPropertyChangedEventArgs(this.State.Properties.StageNumber, this.StageNumber, this);
     ((global::Sungero.Docflow.ApprovalManagerAssignmentSharedHandlers)this.SharedHandlers).StageNumberChanged(args);
    }

    protected void DeliveryMethodChangedHandler()
    {
      var args = new global::Sungero.Docflow.Shared.ApprovalManagerAssignmentDeliveryMethodChangedEventArgs(this.State.Properties.DeliveryMethod, this.DeliveryMethod, this);
     ((global::Sungero.Docflow.ApprovalManagerAssignmentSharedHandlers)this.SharedHandlers).DeliveryMethodChanged(args);
    }

    protected void ExchangeServiceChangedHandler()
    {
      var args = new global::Sungero.Docflow.Shared.ApprovalManagerAssignmentExchangeServiceChangedEventArgs(this.State.Properties.ExchangeService, this.ExchangeService, this);
     ((global::Sungero.Docflow.ApprovalManagerAssignmentSharedHandlers)this.SharedHandlers).ExchangeServiceChanged(args);
    }

    protected void ReworkPerformerChangedHandler()
    {
      var args = new global::Sungero.Docflow.Shared.ApprovalManagerAssignmentReworkPerformerChangedEventArgs(this.State.Properties.ReworkPerformer, this.ReworkPerformer, this);
     ((global::Sungero.Docflow.ApprovalManagerAssignmentSharedHandlers)this.SharedHandlers).ReworkPerformerChanged(args);
    }



    protected virtual global::Sungero.Docflow.ApprovalManagerAssignmentAddApproversSharedCollectionHandlers CreateAddApproversAddedHandler(global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.Docflow.ApprovalManagerAssignmentAddApproversSharedCollectionHandlers(this, e.Value, null, e.Source);
    }

    protected virtual global::Sungero.Docflow.ApprovalManagerAssignmentAddApproversSharedCollectionHandlers CreateAddApproversDeletedHandler(global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.Docflow.ApprovalManagerAssignmentAddApproversSharedCollectionHandlers(this, null, e.Value, null);
    }

    protected virtual void AddApproversAddedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {  
      var collectionHandlers = this.CreateAddApproversAddedHandler(e);
      if (collectionHandlers != null)
      {
        var args = new global::Sungero.Domain.Shared.CollectionPropertyAddedEventArgs(this);
        collectionHandlers.AddApproversAdded(args);
      }
    }

    protected virtual void AddApproversDeletedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {  
      var collectionHandlers = this.CreateAddApproversDeletedHandler(e);
      if (collectionHandlers != null)
      {
        var args = new global::Sungero.Domain.Shared.CollectionPropertyDeletedEventArgs(this);
        collectionHandlers.AddApproversDeleted(args);
      }
    }


    #endregion


    public ApprovalManagerAssignment()
    {
      ((global::Sungero.Workflow.Interfaces.IWorkflowEntity)this).AttachmentCreated += this.AttachmentCreatedHandler;
      ((global::Sungero.Workflow.Interfaces.IWorkflowEntity)this).AttachmentAdded += this.AttachmentAddedHandler;
      ((global::Sungero.Workflow.Interfaces.IWorkflowEntity)this).AttachmentDeleted += this.AttachmentDeletedHandler;


    }

    #region Workflow attachments
    public virtual global::Sungero.Docflow.IApprovalManagerAssignmentAddendaGroupAttachments AddendaGroup
    {
      get
      {
        return new global::Sungero.Docflow.Shared.ApprovalManagerAssignmentAddendaGroupAttachments(this);
      }
    }
    public virtual global::Sungero.Docflow.IApprovalManagerAssignmentOtherGroupAttachments OtherGroup
    {
      get
      {
        return new global::Sungero.Docflow.Shared.ApprovalManagerAssignmentOtherGroupAttachments(this);
      }
    }
    public virtual global::Sungero.Docflow.IApprovalManagerAssignmentDocumentGroupAttachments DocumentGroup
    {
      get
      {
        return new global::Sungero.Docflow.Shared.ApprovalManagerAssignmentDocumentGroupAttachments(this);
      }
    }


    private void AttachmentCreatedHandler(object sender, global::Sungero.Workflow.Interfaces.AttachmentCreatedEventArgs e)
    {
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "AddendaGroup")
      {
        ((global::Sungero.Docflow.ApprovalManagerAssignmentSharedHandlers)this.SharedHandlers).AddendaGroupCreated(e);
        return;
      }
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "OtherGroup")
      {
        ((global::Sungero.Docflow.ApprovalManagerAssignmentSharedHandlers)this.SharedHandlers).OtherGroupCreated(e);
        return;
      }
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "DocumentGroup")
      {
        ((global::Sungero.Docflow.ApprovalManagerAssignmentSharedHandlers)this.SharedHandlers).DocumentGroupCreated(e);
        return;
      }

    }

    private void AttachmentAddedHandler(object sender, global::Sungero.Workflow.Interfaces.AttachmentAddedEventArgs e)
    {
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "AddendaGroup")
      {
        ((global::Sungero.Docflow.ApprovalManagerAssignmentSharedHandlers)this.SharedHandlers).AddendaGroupAdded(e);
        return;
      }
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "OtherGroup")
      {
        ((global::Sungero.Docflow.ApprovalManagerAssignmentSharedHandlers)this.SharedHandlers).OtherGroupAdded(e);
        return;
      }
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "DocumentGroup")
      {
        ((global::Sungero.Docflow.ApprovalManagerAssignmentSharedHandlers)this.SharedHandlers).DocumentGroupAdded(e);
        return;
      }

    }

    private void AttachmentDeletedHandler(object sender, global::Sungero.Workflow.Interfaces.AttachmentDeletedEventArgs e)
    {
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "AddendaGroup")
      {
        ((global::Sungero.Docflow.ApprovalManagerAssignmentSharedHandlers)this.SharedHandlers).AddendaGroupDeleted(e);
        return;
      }
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "OtherGroup")
      {
        ((global::Sungero.Docflow.ApprovalManagerAssignmentSharedHandlers)this.SharedHandlers).OtherGroupDeleted(e);
        return;
      }
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "DocumentGroup")
      {
        ((global::Sungero.Docflow.ApprovalManagerAssignmentSharedHandlers)this.SharedHandlers).DocumentGroupDeleted(e);
        return;
      }

    }
    #endregion

  }
}

// ==================================================================
// ApprovalManagerAssignmentHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow
{
  public partial class ApprovalManagerAssignmentSignatoryPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.EntityPropertyFilteringServerHandler
    where T : class, global::Sungero.Company.IEmployee
  {
    private global::Sungero.Docflow.IApprovalManagerAssignment _obj
    {
      get { return (global::Sungero.Docflow.IApprovalManagerAssignment)this.Entity; }
    }

    public ApprovalManagerAssignmentSignatoryPropertyFilteringServerHandler(global::Sungero.Docflow.IApprovalManagerAssignment entity)
      : base(entity)
    {
    }
  }

  public partial class ApprovalManagerAssignmentSignatorySearchPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.SearchPropertyFilteringServerHandler
    where T : class, global::Sungero.CoreEntities.IRecipient
  {

    public virtual global::System.Linq.IQueryable<T> SignatorySearchDialogFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertySearchDialogFilteringEventArgs e)
    {
      return query;
    }

    public ApprovalManagerAssignmentSignatorySearchPropertyFilteringServerHandler()
      : base()
    {
    }
  }

  public partial class ApprovalManagerAssignmentStagePropertyFilteringServerHandler<T>
    : global::Sungero.Domain.EntityPropertyFilteringServerHandler
    where T : class, global::Sungero.Docflow.IApprovalStage
  {
    private global::Sungero.Docflow.IApprovalManagerAssignment _obj
    {
      get { return (global::Sungero.Docflow.IApprovalManagerAssignment)this.Entity; }
    }

    public virtual global::System.Linq.IQueryable<T> StageFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertyFilteringEventArgs e)
    {
      return query;
    }

    public ApprovalManagerAssignmentStagePropertyFilteringServerHandler(global::Sungero.Docflow.IApprovalManagerAssignment entity)
      : base(entity)
    {
    }
  }

  public partial class ApprovalManagerAssignmentStageSearchPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.SearchPropertyFilteringServerHandler
    where T : class, global::Sungero.Docflow.IApprovalStage
  {

    public virtual global::System.Linq.IQueryable<T> StageSearchDialogFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertySearchDialogFilteringEventArgs e)
    {
      return query;
    }

    public ApprovalManagerAssignmentStageSearchPropertyFilteringServerHandler()
      : base()
    {
    }
  }

  public partial class ApprovalManagerAssignmentApprovalRulePropertyFilteringServerHandler<T>
    : global::Sungero.Domain.EntityPropertyFilteringServerHandler
    where T : class, global::Sungero.Docflow.IApprovalRuleBase
  {
    private global::Sungero.Docflow.IApprovalManagerAssignment _obj
    {
      get { return (global::Sungero.Docflow.IApprovalManagerAssignment)this.Entity; }
    }

    public virtual global::System.Linq.IQueryable<T> ApprovalRuleFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertyFilteringEventArgs e)
    {
      return query;
    }

    public ApprovalManagerAssignmentApprovalRulePropertyFilteringServerHandler(global::Sungero.Docflow.IApprovalManagerAssignment entity)
      : base(entity)
    {
    }
  }

  public partial class ApprovalManagerAssignmentApprovalRuleSearchPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.SearchPropertyFilteringServerHandler
    where T : class, global::Sungero.Docflow.IApprovalRuleBase
  {

    public virtual global::System.Linq.IQueryable<T> ApprovalRuleSearchDialogFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertySearchDialogFilteringEventArgs e)
    {
      return query;
    }

    public ApprovalManagerAssignmentApprovalRuleSearchPropertyFilteringServerHandler()
      : base()
    {
    }
  }

  public partial class ApprovalManagerAssignmentAddresseePropertyFilteringServerHandler<T>
    : global::Sungero.Domain.EntityPropertyFilteringServerHandler
    where T : class, global::Sungero.Company.IEmployee
  {
    private global::Sungero.Docflow.IApprovalManagerAssignment _obj
    {
      get { return (global::Sungero.Docflow.IApprovalManagerAssignment)this.Entity; }
    }

    public virtual global::System.Linq.IQueryable<T> AddresseeFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertyFilteringEventArgs e)
    {
      return query;
    }

    public ApprovalManagerAssignmentAddresseePropertyFilteringServerHandler(global::Sungero.Docflow.IApprovalManagerAssignment entity)
      : base(entity)
    {
    }
  }

  public partial class ApprovalManagerAssignmentAddresseeSearchPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.SearchPropertyFilteringServerHandler
    where T : class, global::Sungero.CoreEntities.IRecipient
  {

    public virtual global::System.Linq.IQueryable<T> AddresseeSearchDialogFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertySearchDialogFilteringEventArgs e)
    {
      return query;
    }

    public ApprovalManagerAssignmentAddresseeSearchPropertyFilteringServerHandler()
      : base()
    {
    }
  }

  public partial class ApprovalManagerAssignmentDeliveryMethodPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.EntityPropertyFilteringServerHandler
    where T : class, global::Sungero.Docflow.IMailDeliveryMethod
  {
    private global::Sungero.Docflow.IApprovalManagerAssignment _obj
    {
      get { return (global::Sungero.Docflow.IApprovalManagerAssignment)this.Entity; }
    }

    public virtual global::System.Linq.IQueryable<T> DeliveryMethodFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertyFilteringEventArgs e)
    {
      return query;
    }

    public ApprovalManagerAssignmentDeliveryMethodPropertyFilteringServerHandler(global::Sungero.Docflow.IApprovalManagerAssignment entity)
      : base(entity)
    {
    }
  }

  public partial class ApprovalManagerAssignmentDeliveryMethodSearchPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.SearchPropertyFilteringServerHandler
    where T : class, global::Sungero.Docflow.IMailDeliveryMethod
  {

    public virtual global::System.Linq.IQueryable<T> DeliveryMethodSearchDialogFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertySearchDialogFilteringEventArgs e)
    {
      return query;
    }

    public ApprovalManagerAssignmentDeliveryMethodSearchPropertyFilteringServerHandler()
      : base()
    {
    }
  }

  public partial class ApprovalManagerAssignmentExchangeServicePropertyFilteringServerHandler<T>
    : global::Sungero.Domain.EntityPropertyFilteringServerHandler
    where T : class, global::Sungero.ExchangeCore.IExchangeService
  {
    private global::Sungero.Docflow.IApprovalManagerAssignment _obj
    {
      get { return (global::Sungero.Docflow.IApprovalManagerAssignment)this.Entity; }
    }

    public ApprovalManagerAssignmentExchangeServicePropertyFilteringServerHandler(global::Sungero.Docflow.IApprovalManagerAssignment entity)
      : base(entity)
    {
    }
  }

  public partial class ApprovalManagerAssignmentExchangeServiceSearchPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.SearchPropertyFilteringServerHandler
    where T : class, global::Sungero.ExchangeCore.IExchangeService
  {

    public virtual global::System.Linq.IQueryable<T> ExchangeServiceSearchDialogFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertySearchDialogFilteringEventArgs e)
    {
      return query;
    }

    public ApprovalManagerAssignmentExchangeServiceSearchPropertyFilteringServerHandler()
      : base()
    {
    }
  }

  public partial class ApprovalManagerAssignmentReworkPerformerPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.EntityPropertyFilteringServerHandler
    where T : class, global::Sungero.Company.IEmployee
  {
    private global::Sungero.Docflow.IApprovalManagerAssignment _obj
    {
      get { return (global::Sungero.Docflow.IApprovalManagerAssignment)this.Entity; }
    }

    public ApprovalManagerAssignmentReworkPerformerPropertyFilteringServerHandler(global::Sungero.Docflow.IApprovalManagerAssignment entity)
      : base(entity)
    {
    }
  }

  public partial class ApprovalManagerAssignmentReworkPerformerSearchPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.SearchPropertyFilteringServerHandler
    where T : class, global::Sungero.CoreEntities.IRecipient
  {

    public virtual global::System.Linq.IQueryable<T> ReworkPerformerSearchDialogFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertySearchDialogFilteringEventArgs e)
    {
      return query;
    }

    public ApprovalManagerAssignmentReworkPerformerSearchPropertyFilteringServerHandler()
      : base()
    {
    }
  }



  public partial class ApprovalManagerAssignmentFilteringServerHandler<T>
    : global::Sungero.Domain.EntityFilteringServerHandler<T>  
    where T : class, global::Sungero.Docflow.IApprovalManagerAssignment
  {
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    protected new global::Sungero.Docflow.IApprovalManagerAssignmentFilterState Filter { get; private set; }

    private global::Sungero.Docflow.IApprovalManagerAssignmentFilterState _filter
    {
      get
      {
        return this.Filter;
      }
    }

    public ApprovalManagerAssignmentFilteringServerHandler(global::Sungero.Docflow.IApprovalManagerAssignmentFilterState filter)
    : base()
    {
      this.Filter = filter;
    }

    protected ApprovalManagerAssignmentFilteringServerHandler()
    {
    }

    public override global::System.Linq.IQueryable<T> Filtering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.FilteringEventArgs e)
    {
      return query;
    }


  }

  public partial class ApprovalManagerAssignmentSearchDialogServerHandler : global::Sungero.Workflow.AssignmentSearchDialogServerHandler
   {
     private global::Sungero.Docflow.Server.ApprovalManagerAssignmentSearchDialogModel _dialog
     {
       get
       {
         return (global::Sungero.Docflow.Server.ApprovalManagerAssignmentSearchDialogModel)this.Dialog;
       }
     }

     public ApprovalManagerAssignmentSearchDialogServerHandler(global::Sungero.Docflow.Server.ApprovalManagerAssignmentSearchDialogModel dialog)
       : base(dialog)
     {
     }
   }

  public partial class ApprovalManagerAssignmentServerHandlers : global::Sungero.Workflow.AssignmentServerHandlers
  {
    private global::Sungero.Docflow.IApprovalManagerAssignment _obj
    {
      get { return (global::Sungero.Docflow.IApprovalManagerAssignment)this.Entity; }
    }

    public ApprovalManagerAssignmentServerHandlers(global::Sungero.Docflow.IApprovalManagerAssignment entity)
      : base(entity)
    {
    }
  }

  public partial class ApprovalManagerAssignmentCreatingFromServerHandler : global::Sungero.Workflow.AssignmentCreatingFromServerHandler
  {
    private global::Sungero.Docflow.IApprovalManagerAssignment _source
    {
      get { return (global::Sungero.Docflow.IApprovalManagerAssignment)this.Source; }
    }

    private global::Sungero.Docflow.IApprovalManagerAssignmentInfo _info
    {
      get { return (global::Sungero.Docflow.IApprovalManagerAssignmentInfo)this._Info; }
    }

    public ApprovalManagerAssignmentCreatingFromServerHandler(global::Sungero.Docflow.IApprovalManagerAssignment source, global::Sungero.Docflow.IApprovalManagerAssignmentInfo info)
      : base(source, info)
    {
    }
  }

}

// ==================================================================
// ApprovalManagerAssignmentEventArgs.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
}

// ==================================================================
// ApprovalManagerAssignmentAccessRights.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
  public class ApprovalManagerAssignmentAccessRights : 
    Sungero.Workflow.Server.AssignmentAccessRights, Sungero.Docflow.IApprovalManagerAssignmentAccessRights
  {

    public ApprovalManagerAssignmentAccessRights(global::Sungero.Domain.Shared.IEntity entity) : base(entity)
    {
    }
  }

  public class ApprovalManagerAssignmentTypeAccessRights : 
    Sungero.Workflow.Server.AssignmentTypeAccessRights, Sungero.Docflow.IApprovalManagerAssignmentAccessRights
  {

    public ApprovalManagerAssignmentTypeAccessRights(global::System.Type entityType) : base(entityType)
    {
    }
  }
}

// ==================================================================
// ApprovalManagerAssignmentRepositoryImplementer.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
    public class ApprovalManagerAssignmentRepositoryImplementer<T> : 
      global::Sungero.Workflow.Server.AssignmentRepositoryImplementer<T>,
      global::Sungero.Docflow.IApprovalManagerAssignmentRepositoryImplementer<T>
      where T : global::Sungero.Docflow.IApprovalManagerAssignment 
    {
       public new global::Sungero.Docflow.IApprovalManagerAssignmentAccessRights AccessRights
       {
          get { return (global::Sungero.Docflow.IApprovalManagerAssignmentAccessRights)base.AccessRights; }
       }

       public new global::Sungero.Docflow.IApprovalManagerAssignmentInfo Info
       {
          get { return (global::Sungero.Docflow.IApprovalManagerAssignmentInfo)base.Info; }
       }

       protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
       {
         return new global::Sungero.Docflow.Server.ApprovalManagerAssignmentTypeAccessRights(typeof(T));
       }
    }
}

// ==================================================================
// ApprovalManagerAssignmentPanelNavigationFilters.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
}

// ==================================================================
// ApprovalManagerAssignmentServerFunctions.g.cs
// ==================================================================

namespace Sungero.Docflow.Server
{
  public partial class ApprovalManagerAssignmentFunctions : global::Sungero.Workflow.Server.AssignmentFunctions
  {
    private global::Sungero.Docflow.IApprovalManagerAssignment _obj
    {
      get { return (global::Sungero.Docflow.IApprovalManagerAssignment)this.Entity; }
    }

    public ApprovalManagerAssignmentFunctions(global::Sungero.Docflow.IApprovalManagerAssignment entity) : base(entity) { }
  }
}

// ==================================================================
// ApprovalManagerAssignmentFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Functions
{
  internal static class ApprovalManagerAssignment
  {
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalManagerAssignmentFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static  global::Sungero.Core.StateView GetStagesStateView(global::Sungero.Docflow.IApprovalManagerAssignment approvalManagerAssignment)
    {
      var functions = (global::Sungero.Docflow.Server.ApprovalManagerAssignmentFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)approvalManagerAssignment).FunctionsContainer.ServerFunctions;
      return functions.GetStagesStateView();
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalManagerAssignmentFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static  global::Sungero.Core.StateView GetDocumentSummary(global::Sungero.Docflow.IApprovalManagerAssignment approvalManagerAssignment)
    {
      var functions = (global::Sungero.Docflow.Server.ApprovalManagerAssignmentFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)approvalManagerAssignment).FunctionsContainer.ServerFunctions;
      return functions.GetDocumentSummary();
    }

    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ApprovalManagerAssignmentFunctions" />
    internal static  void UpdateDeliveryMethod(global::Sungero.Docflow.IApprovalManagerAssignment approvalManagerAssignment)
    {
      var functions = (global::Sungero.Docflow.Shared.ApprovalManagerAssignmentFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)approvalManagerAssignment).FunctionsContainer.SharedFunctions;
    functions.UpdateDeliveryMethod();
    }

  }
}

// ==================================================================
// ApprovalManagerAssignmentServerPublicFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
  public class ApprovalManagerAssignmentServerPublicFunctions : global::Sungero.Docflow.Server.IApprovalManagerAssignmentServerPublicFunctions
  {
  }
}

// ==================================================================
// ApprovalManagerAssignmentQueries.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Queries
{
  public class ApprovalManagerAssignment
  {
    private static global::Sungero.Domain.SqlQueryResolver resolver = new global::Sungero.Domain.SqlQueryResolver("Sungero.Docflow.Server.ApprovalManagerAssignment.ApprovalManagerAssignmentQueries.xml", System.Reflection.Assembly.GetExecutingAssembly());
  }
}

// ==================================================================
// ApprovalManagerAssignmentBlock.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
  public class ApprovalManagerAssignmentArguments: global::Sungero.Workflow.Server.Route.AssignmentStartEventArguments<ApprovalManagerAssignmentBlock, global::Sungero.Workflow.AssignmentBlock>
  {
    public ApprovalManagerAssignmentArguments(ApprovalManagerAssignmentBlock block) : base(block) { }
  }

  public class ApprovalManagerAssignmentEndBlockEventArguments: global::Sungero.Workflow.Server.Route.AssignmentEndBlockEventArguments<ApprovalManagerAssignmentBlock, global::Sungero.Workflow.AssignmentBlock, Sungero.Docflow.IApprovalManagerAssignment> 
  {
    public ApprovalManagerAssignmentEndBlockEventArguments(ApprovalManagerAssignmentBlock block) : base(block) { }
  }

  public partial class ApprovalManagerAssignmentBlock : global::Sungero.Workflow.Blocks.AssignmentBlockWrapper<global::Sungero.Workflow.AssignmentBlock>    
  {
    public virtual global::System.Int32? StageNumber
    {
      get { return this.GetCustomProperty<global::System.Int32?>("StageNumber"); }
      set { this.SetCustomProperty("StageNumber", value); }
    }

    public virtual global::Sungero.Company.IEmployee Signatory
    {
      get { return this.GetCustomNavigationProperty<global::Sungero.Company.IEmployee>("Signatory"); }
      set { this.SetCustomNavigationProperty("Signatory", value); }
    }
    public virtual global::Sungero.Docflow.IApprovalStage Stage
    {
      get { return this.GetCustomNavigationProperty<global::Sungero.Docflow.IApprovalStage>("Stage"); }
      set { this.SetCustomNavigationProperty("Stage", value); }
    }
    public virtual global::Sungero.Docflow.IApprovalRuleBase ApprovalRule
    {
      get { return this.GetCustomNavigationProperty<global::Sungero.Docflow.IApprovalRuleBase>("ApprovalRule"); }
      set { this.SetCustomNavigationProperty("ApprovalRule", value); }
    }
    public virtual global::Sungero.Company.IEmployee Addressee
    {
      get { return this.GetCustomNavigationProperty<global::Sungero.Company.IEmployee>("Addressee"); }
      set { this.SetCustomNavigationProperty("Addressee", value); }
    }
    public virtual global::Sungero.Docflow.IMailDeliveryMethod DeliveryMethod
    {
      get { return this.GetCustomNavigationProperty<global::Sungero.Docflow.IMailDeliveryMethod>("DeliveryMethod"); }
      set { this.SetCustomNavigationProperty("DeliveryMethod", value); }
    }
    public virtual global::Sungero.ExchangeCore.IExchangeService ExchangeService
    {
      get { return this.GetCustomNavigationProperty<global::Sungero.ExchangeCore.IExchangeService>("ExchangeService"); }
      set { this.SetCustomNavigationProperty("ExchangeService", value); }
    }
    public virtual global::Sungero.Company.IEmployee ReworkPerformer
    {
      get { return this.GetCustomNavigationProperty<global::Sungero.Company.IEmployee>("ReworkPerformer"); }
      set { this.SetCustomNavigationProperty("ReworkPerformer", value); }
    }


    private global::Sungero.Workflow.Blocks.IChildCollectionWrapper<global::Sungero.Docflow.Server.ApprovalManagerAssignmentAddApproversWrapper> _AddApprovers;

	protected virtual global::Sungero.Workflow.Blocks.IChildCollectionWrapper<global::Sungero.Docflow.Server.ApprovalManagerAssignmentAddApproversWrapper> GetApprovalManagerAssignmentAddApproversCollectionWrapper(global::System.Collections.ObjectModel.Collection<global::System.Collections.ObjectModel.Collection<global::Sungero.Workflow.CustomTypeProperty>> items)
	{
	  return new global::Sungero.Docflow.Server.ApprovalManagerAssignmentAddApproversCollectionWrapper(items);
	}

    public virtual global::Sungero.Workflow.Blocks.IChildCollectionWrapper<global::Sungero.Docflow.Server.ApprovalManagerAssignmentAddApproversWrapper> AddApprovers
    {
      get 
      {
        if(this._AddApprovers == null)
        {
          var items = this.GetCustomCollectionPropertyInternalValue("AddApprovers"); 
          this._AddApprovers = this.GetApprovalManagerAssignmentAddApproversCollectionWrapper(items);
        }

        return this._AddApprovers;
      }
    }



    public ApprovalManagerAssignmentBlock(global::Sungero.Workflow.AssignmentBlock block) : base(block) { }
  }
}

// ==================================================================
// ApprovalManagerAssignmentChildWrappers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
  public class ApprovalManagerAssignmentAddApproversCollectionWrapper :
       global::Sungero.Workflow.Blocks.ChildCollectionWrapper<ApprovalManagerAssignmentAddApproversWrapper>
  {
    protected override ApprovalManagerAssignmentAddApproversWrapper CreateWrapper(global::System.Collections.ObjectModel.Collection<global::Sungero.Workflow.CustomTypeProperty> value)
    {
      return new ApprovalManagerAssignmentAddApproversWrapper(value);
    }

    public ApprovalManagerAssignmentAddApproversCollectionWrapper(global::System.Collections.ObjectModel.Collection<global::System.Collections.ObjectModel.Collection<global::Sungero.Workflow.CustomTypeProperty>> items) : base(items) { }
  }

  public class ApprovalManagerAssignmentAddApproversWrapper: 
        global::Sungero.Workflow.Blocks.ChildEntityWrapper
  {

    public virtual global::Sungero.CoreEntities.IRecipient Approver
    {
      get { return this.GetCustomNavigationProperty<global::Sungero.CoreEntities.IRecipient>("Approver"); }
      set { this.SetCustomNavigationProperty("Approver", value); }
    }

    public ApprovalManagerAssignmentAddApproversWrapper(global::System.Collections.ObjectModel.Collection<global::Sungero.Workflow.CustomTypeProperty> properties): base(properties) { }
  }

}
