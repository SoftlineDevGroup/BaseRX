
// ==================================================================
// DocumentRegister.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
    public class DocumentRegisterFilter<T> :
      global::Sungero.Domain.EntityFilterBase<T>
      where T : class, global::Sungero.Docflow.IDocumentRegister
    {
      protected new global::Sungero.Docflow.IDocumentRegisterFilterState Filter { get; private set; }

      private global::Sungero.Docflow.IDocumentRegisterFilterState filter
      {
        get
        {
          return this.Filter;
        }
      }

      protected override global::System.Linq.IQueryable<T> ApplyAppliedFilter(global::System.Linq.IQueryable<T> query)
      {
        return base.ApplyAppliedFilter(query);
      }

      public DocumentRegisterFilter(global::Sungero.Docflow.IDocumentRegisterFilterState filter)
      : base()
      {
        this.Filter = filter;
      }

      protected DocumentRegisterFilter()
      {
      }
    }
      public class DocumentRegisterUiFilter<T> :
        global::Sungero.Domain.EntityUiFilterBase<T>
        where T : class, global::Sungero.Docflow.IDocumentRegister
      {
        protected override global::System.Linq.IQueryable<T> ApplyAppliedFilter(global::System.Linq.IQueryable<T> query)
        {
          return base.ApplyAppliedFilter(query);
        }
      }

    public class DocumentRegisterSearchDialogModel : global::Sungero.CoreEntities.Server.DatabookEntrySearchDialogModel
        {
                  public override global::System.Int32? Id { get; protected set; }



                  public virtual global::System.Int32? NumberOfDigitsInNumber { get; protected set; }
                  public virtual global::System.String ValueExample { get; protected set; }
                  public virtual global::System.String DisplayName { get; protected set; }


                  public virtual global::System.Collections.Generic.IEnumerable<Sungero.Core.Enumeration> Status { get; protected set; }
                  public virtual global::System.Collections.Generic.IEnumerable<Sungero.Core.Enumeration> DocumentFlow { get; protected set; }
                  public virtual global::System.Collections.Generic.IEnumerable<Sungero.Docflow.IRegistrationGroup> RegistrationGroup { get; protected set; }
                  public virtual global::System.Collections.Generic.IEnumerable<Sungero.Core.Enumeration> RegisterType { get; protected set; }
                  public virtual global::System.Collections.Generic.IEnumerable<Sungero.Core.Enumeration> NumberingPeriod { get; protected set; }
                  public virtual global::System.Collections.Generic.IEnumerable<Sungero.Core.Enumeration> NumberingSection { get; protected set; }


                   public DocumentRegisterNumberFormatItemsModel NumberFormatItems { get; protected set; }

        }


      public class DocumentRegisterNumberFormatItemsModel : global::Sungero.Domain.CollectionPropertySearchDialogModel
          {
            public override global::System.Int32? Id { get; protected set; }

                      public virtual global::System.Int32? Number { get; protected set; }
                      public virtual global::System.String Separator { get; protected set; }


                      public virtual global::System.Collections.Generic.IEnumerable<global::Sungero.Docflow.IDocumentRegister> DocumentRegister { get; protected set; }
                      public virtual global::System.Collections.Generic.IEnumerable<global::Sungero.Core.Enumeration> Element { get; protected set; }

         }



  public class DocumentRegisterFilterForRegistrationGroup<TQueryEntity, TSourceEntity>
    : global::Sungero.Domain.EntityPropertyFilterBase<TQueryEntity, TSourceEntity>
    where TQueryEntity : class, global::Sungero.Docflow.IRegistrationGroup
    where TSourceEntity : class, global::Sungero.Docflow.IDocumentRegister
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, TSourceEntity sourceEntity)
    {
      var args = new global::Sungero.Domain.PropertyFilteringEventArgs(sourceEntity);
      var result = new global::Sungero.Docflow.DocumentRegisterRegistrationGroupPropertyFilteringServerHandler<TQueryEntity>(sourceEntity).RegistrationGroupFiltering(query, args);
      if (args.DisableUiFiltering)
        global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public DocumentRegisterFilterForRegistrationGroup(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class DocumentRegisterSearchFilterForRegistrationGroup<TQueryEntity>
    : global::Sungero.Domain.SearchDialogPropertyFilter<TQueryEntity>
    where TQueryEntity : class, global::Sungero.Docflow.IRegistrationGroup
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, System.Guid entityType)
    {
      var args = new global::Sungero.Domain.PropertySearchDialogFilteringEventArgs(entityType);
      var result = new global::Sungero.Docflow.DocumentRegisterRegistrationGroupSearchPropertyFilteringServerHandler<TQueryEntity>().RegistrationGroupSearchDialogFiltering(query, args);
      if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public DocumentRegisterSearchFilterForRegistrationGroup(string propertyName)
      : base(propertyName)
    {
    }
  }



  [global::Sungero.Domain.Filter(typeof(global::Sungero.Docflow.Server.DocumentRegisterFilter<global::Sungero.Docflow.IDocumentRegister>))]
  [global::Sungero.Domain.UiFilter(typeof(global::Sungero.Docflow.Server.DocumentRegisterUiFilter<global::Sungero.Docflow.IDocumentRegister>))]
  [global::Sungero.Domain.PropertyFilter(typeof(global::Sungero.Docflow.Server.DocumentRegisterFilterForRegistrationGroup<global::Sungero.Docflow.IRegistrationGroup, global::Sungero.Docflow.IDocumentRegister>), "RegistrationGroup")]
  [global::Sungero.Domain.SearchPropertyFilter(typeof(global::Sungero.Docflow.Server.DocumentRegisterSearchFilterForRegistrationGroup<global::Sungero.Docflow.IRegistrationGroup>), "RegistrationGroup")]


  public class DocumentRegister :
    global::Sungero.CoreEntities.Server.DatabookEntry, global::Sungero.Docflow.IDocumentRegister
  {
    public static new readonly global::System.Guid ClassTypeGuid = global::System.Guid.Parse("d7800dd5-a9d2-41e9-bbc4-a39292ac1eeb");

    public override global::System.Guid TypeGuid
    {
      get { return global::Sungero.Docflow.Server.DocumentRegister.ClassTypeGuid; }
    }

    public override string TypeName
    {
      get { return "Sungero.Docflow.IDocumentRegister, Sungero.Domain.Interfaces"; }
    }

    public override string DisplayValue
    {
      get { return this.DisplayName; }
      set { this.DisplayName = value; }
    }

    public new virtual global::Sungero.Docflow.IDocumentRegisterState State
    {
      get { return (global::Sungero.Docflow.IDocumentRegisterState)base.State; }
    }

    protected override global::Sungero.Domain.Shared.IEntityState CreateState()
    {
      return new global::Sungero.Docflow.Shared.DocumentRegisterState(this);
    }

    public new virtual global::Sungero.Docflow.IDocumentRegisterInfo Info
    {
      get { return (global::Sungero.Docflow.IDocumentRegisterInfo)base.Info; }
    }

    public new virtual global::Sungero.Docflow.IDocumentRegisterAccessRights AccessRights
    {
      get { return (global::Sungero.Docflow.IDocumentRegisterAccessRights)base.AccessRights; }
    }

    protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
    {
      return new global::Sungero.Docflow.Server.DocumentRegisterAccessRights(this);
    }

    protected override global::Sungero.Domain.EntityFunctions CreateServerFunctions()
    {
      return new global::Sungero.Docflow.Server.DocumentRegisterFunctions(this);
    }

    protected override global::Sungero.Domain.Shared.EntityFunctions CreateSharedFunctions()
    {
      return new global::Sungero.Docflow.Shared.DocumentRegisterFunctions(this);
    }

    protected override object CreateHandlers() {
      return new global::Sungero.Docflow.DocumentRegisterServerHandlers(this);
    }

    protected override object CreateSharedHandlers() {
      return new global::Sungero.Docflow.DocumentRegisterSharedHandlers(this);
    }

    private global::System.String _Name;
    public virtual global::System.String Name
    {
      get
      {
        return this._Name;
      }

      set
      {
        this.SetPropertyValue("Name", this._Name, value, (propertyValue) => { this._Name = propertyValue; }, this.NameChangedHandler);
      }
    }
    private global::System.String _Index;
    public virtual global::System.String Index
    {
      get
      {
        return this._Index;
      }

      set
      {
        this.SetPropertyValue("Index", this._Index, value, (propertyValue) => { this._Index = propertyValue; }, this.IndexChangedHandler);
      }
    }
    private global::System.Int32? _NumberOfDigitsInNumber;
    public virtual global::System.Int32? NumberOfDigitsInNumber
    {
      get
      {
        return this._NumberOfDigitsInNumber;
      }

      set
      {
        this.SetPropertyValue("NumberOfDigitsInNumber", this._NumberOfDigitsInNumber, value, (propertyValue) => { this._NumberOfDigitsInNumber = propertyValue; }, this.NumberOfDigitsInNumberChangedHandler);
      }
    }
    private global::System.String _ValueExample;
    public virtual global::System.String ValueExample
    {
      get
      {
        return this._ValueExample;
      }

      set
      {
        this.SetPropertyValue("ValueExample", this._ValueExample, value, (propertyValue) => { this._ValueExample = propertyValue; }, this.ValueExampleChangedHandler);
      }
    }
    private global::System.String _DisplayName;
    public virtual global::System.String DisplayName
    {
      get
      {
        return this._DisplayName;
      }

      set
      {
        this.SetPropertyValue("DisplayName", this._DisplayName, value, (propertyValue) => { this._DisplayName = propertyValue; }, this.DisplayNameChangedHandler);
      }
    }






    private static global::Sungero.Domain.Shared.EnumerationItems _DocumentFlowItems = new global::Sungero.Domain.Shared.EnumerationItems(
      null,
      typeof(global::Sungero.Docflow.DocumentRegister.DocumentFlow),
      typeof(global::Sungero.Docflow.Server.DocumentRegister),
      "DocumentFlow");

    public static global::Sungero.Domain.Shared.EnumerationItems DocumentFlowItems
    {
      get { return global::Sungero.Docflow.Server.DocumentRegister._DocumentFlowItems; }
    }

    public virtual global::Sungero.Domain.Shared.EnumerationItems DocumentFlowAllowedItems
    {
      get { return global::Sungero.Docflow.Server.DocumentRegister.DocumentFlowItems; }
    }

    private global::Sungero.Core.Enumeration? _DocumentFlow;

    public virtual global::Sungero.Core.Enumeration? DocumentFlow
    {
      get { return this._DocumentFlow; }
      set { this.SetEnumPropertyValue("DocumentFlow", this._DocumentFlow, value, (propertyValue) => { this._DocumentFlow = propertyValue; }, this.DocumentFlowChangedHandler, this.DocumentFlowAllowedItems); }
    }
    private static global::Sungero.Domain.Shared.EnumerationItems _RegisterTypeItems = new global::Sungero.Domain.Shared.EnumerationItems(
      null,
      typeof(global::Sungero.Docflow.DocumentRegister.RegisterType),
      typeof(global::Sungero.Docflow.Server.DocumentRegister),
      "RegisterType");

    public static global::Sungero.Domain.Shared.EnumerationItems RegisterTypeItems
    {
      get { return global::Sungero.Docflow.Server.DocumentRegister._RegisterTypeItems; }
    }

    public virtual global::Sungero.Domain.Shared.EnumerationItems RegisterTypeAllowedItems
    {
      get { return global::Sungero.Docflow.Server.DocumentRegister.RegisterTypeItems; }
    }

    private global::Sungero.Core.Enumeration? _RegisterType;

    public virtual global::Sungero.Core.Enumeration? RegisterType
    {
      get { return this._RegisterType; }
      set { this.SetEnumPropertyValue("RegisterType", this._RegisterType, value, (propertyValue) => { this._RegisterType = propertyValue; }, this.RegisterTypeChangedHandler, this.RegisterTypeAllowedItems); }
    }
    private static global::Sungero.Domain.Shared.EnumerationItems _NumberingPeriodItems = new global::Sungero.Domain.Shared.EnumerationItems(
      null,
      typeof(global::Sungero.Docflow.DocumentRegister.NumberingPeriod),
      typeof(global::Sungero.Docflow.Server.DocumentRegister),
      "NumberingPeriod");

    public static global::Sungero.Domain.Shared.EnumerationItems NumberingPeriodItems
    {
      get { return global::Sungero.Docflow.Server.DocumentRegister._NumberingPeriodItems; }
    }

    public virtual global::Sungero.Domain.Shared.EnumerationItems NumberingPeriodAllowedItems
    {
      get { return global::Sungero.Docflow.Server.DocumentRegister.NumberingPeriodItems; }
    }

    private global::Sungero.Core.Enumeration? _NumberingPeriod;

    public virtual global::Sungero.Core.Enumeration? NumberingPeriod
    {
      get { return this._NumberingPeriod; }
      set { this.SetEnumPropertyValue("NumberingPeriod", this._NumberingPeriod, value, (propertyValue) => { this._NumberingPeriod = propertyValue; }, this.NumberingPeriodChangedHandler, this.NumberingPeriodAllowedItems); }
    }
    private static global::Sungero.Domain.Shared.EnumerationItems _NumberingSectionItems = new global::Sungero.Domain.Shared.EnumerationItems(
      null,
      typeof(global::Sungero.Docflow.DocumentRegister.NumberingSection),
      typeof(global::Sungero.Docflow.Server.DocumentRegister),
      "NumberingSection");

    public static global::Sungero.Domain.Shared.EnumerationItems NumberingSectionItems
    {
      get { return global::Sungero.Docflow.Server.DocumentRegister._NumberingSectionItems; }
    }

    public virtual global::Sungero.Domain.Shared.EnumerationItems NumberingSectionAllowedItems
    {
      get { return global::Sungero.Docflow.Server.DocumentRegister.NumberingSectionItems; }
    }

    private global::Sungero.Core.Enumeration? _NumberingSection;

    public virtual global::Sungero.Core.Enumeration? NumberingSection
    {
      get { return this._NumberingSection; }
      set { this.SetEnumPropertyValue("NumberingSection", this._NumberingSection, value, (propertyValue) => { this._NumberingSection = propertyValue; }, this.NumberingSectionChangedHandler, this.NumberingSectionAllowedItems); }
    }


    private global::Sungero.Docflow.IRegistrationGroup _RegistrationGroup;
    public virtual global::Sungero.Docflow.IRegistrationGroup RegistrationGroup
    {
      get
      {
        return this._RegistrationGroup;
      }

      set
      {
        this.SetPropertyValue("RegistrationGroup", this._RegistrationGroup, value, (propertyValue) => { this._RegistrationGroup = propertyValue; }, this.RegistrationGroupChangedHandler);
      }
    }


    protected global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Docflow.IDocumentRegisterNumberFormatItems> _NumberFormatItems;

    public virtual global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Docflow.IDocumentRegisterNumberFormatItems> NumberFormatItems
    {
      get
      {
        if (this._NumberFormatItems == null)
        {
          this._NumberFormatItems = this.CreateNumberFormatItemsCollection();
          this.SetNumberFormatItemsEventHandlers();
        }
        return this._NumberFormatItems;
      }

      set
      {
        if (this._NumberFormatItems != null)
          this.UnsetChildCollectionEventHandlers(this._NumberFormatItems);

        this._NumberFormatItems = value;
        this.SetNumberFormatItemsEventHandlers();
      }
    }

    protected virtual global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Docflow.IDocumentRegisterNumberFormatItems> CreateNumberFormatItemsCollection()
    {
      return new global::Sungero.Domain.ChildEntityCollection<global::Sungero.Docflow.IDocumentRegisterNumberFormatItems>() { RootEntity = this };
    }

    private void SetNumberFormatItemsEventHandlers()
    {
      this.SetChildCollectionEventHandlers(this._NumberFormatItems, "NumberFormatItems");

      var changeNotifier = (global::Sungero.Domain.Shared.INotifyChildEntityCollectionChanged)this._NumberFormatItems;
      changeNotifier.Added += this.NumberFormatItemsAddedHandler;
      changeNotifier.Deleted += this.NumberFormatItemsDeletedHandler;
      changeNotifier.Added += this.NumberFormatItemsCollectionUpdateEventHandler;
      changeNotifier.Deleted += this.NumberFormatItemsCollectionUpdateEventHandler;
      changeNotifier.Updated += this.NumberFormatItemsCollectionUpdateEventHandler;
    }

    private void NumberFormatItemsCollectionUpdateEventHandler(object sender, global::Sungero.Domain.Shared.BaseChildEntityEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      if (this.IsPropertyChangedHandlerEnabled)
        this.NumberFormatItemsChangedHandler();
    }



    protected override global::Sungero.Domain.Shared.EntityCreatingFromServerHandler CreateCreatingFromServerHandler(
      global::Sungero.Domain.Shared.IEntity entitySource)
    {
      return new global::Sungero.Docflow.DocumentRegisterCreatingFromServerHandler((global::Sungero.Docflow.IDocumentRegister)entitySource, this.Info);
    }

    #region Framework events

    protected void NameChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.Name, this.Name, this);
     ((global::Sungero.Docflow.DocumentRegisterSharedHandlers)this.SharedHandlers).NameChanged(args);
    }

    protected void IndexChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.Index, this.Index, this);
     ((global::Sungero.Docflow.DocumentRegisterSharedHandlers)this.SharedHandlers).IndexChanged(args);
    }

    protected void NumberOfDigitsInNumberChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.IntegerPropertyChangedEventArgs(this.State.Properties.NumberOfDigitsInNumber, this.NumberOfDigitsInNumber, this);
     ((global::Sungero.Docflow.DocumentRegisterSharedHandlers)this.SharedHandlers).NumberOfDigitsInNumberChanged(args);
    }

    protected void DocumentFlowChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.EnumerationPropertyChangedEventArgs(this.State.Properties.DocumentFlow, this.DocumentFlow, this);
     ((global::Sungero.Docflow.DocumentRegisterSharedHandlers)this.SharedHandlers).DocumentFlowChanged(args);
    }

    protected void NumberFormatItemsChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.CollectionPropertyChangedEventArgs(this);
     ((global::Sungero.Docflow.DocumentRegisterSharedHandlers)this.SharedHandlers).NumberFormatItemsChanged(args);
    }

    protected void ValueExampleChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.ValueExample, this.ValueExample, this);
     ((global::Sungero.Docflow.DocumentRegisterSharedHandlers)this.SharedHandlers).ValueExampleChanged(args);
    }

    protected void RegistrationGroupChangedHandler()
    {
      var args = new global::Sungero.Docflow.Shared.DocumentRegisterRegistrationGroupChangedEventArgs(this.State.Properties.RegistrationGroup, this.RegistrationGroup, this);
     ((global::Sungero.Docflow.DocumentRegisterSharedHandlers)this.SharedHandlers).RegistrationGroupChanged(args);
    }

    protected void DisplayNameChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.DisplayName, this.DisplayName, this);
     ((global::Sungero.Docflow.DocumentRegisterSharedHandlers)this.SharedHandlers).DisplayNameChanged(args);
    }

    protected void RegisterTypeChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.EnumerationPropertyChangedEventArgs(this.State.Properties.RegisterType, this.RegisterType, this);
     ((global::Sungero.Docflow.DocumentRegisterSharedHandlers)this.SharedHandlers).RegisterTypeChanged(args);
    }

    protected void NumberingPeriodChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.EnumerationPropertyChangedEventArgs(this.State.Properties.NumberingPeriod, this.NumberingPeriod, this);
     ((global::Sungero.Docflow.DocumentRegisterSharedHandlers)this.SharedHandlers).NumberingPeriodChanged(args);
    }

    protected void NumberingSectionChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.EnumerationPropertyChangedEventArgs(this.State.Properties.NumberingSection, this.NumberingSection, this);
     ((global::Sungero.Docflow.DocumentRegisterSharedHandlers)this.SharedHandlers).NumberingSectionChanged(args);
    }



    protected virtual global::Sungero.Docflow.DocumentRegisterNumberFormatItemsSharedCollectionHandlers CreateNumberFormatItemsAddedHandler(global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.Docflow.DocumentRegisterNumberFormatItemsSharedCollectionHandlers(this, e.Value, null, e.Source);
    }

    protected virtual global::Sungero.Docflow.DocumentRegisterNumberFormatItemsSharedCollectionHandlers CreateNumberFormatItemsDeletedHandler(global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.Docflow.DocumentRegisterNumberFormatItemsSharedCollectionHandlers(this, null, e.Value, null);
    }

    protected virtual void NumberFormatItemsAddedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {  
      var collectionHandlers = this.CreateNumberFormatItemsAddedHandler(e);
      if (collectionHandlers != null)
      {
        var args = new global::Sungero.Domain.Shared.CollectionPropertyAddedEventArgs(this);
        collectionHandlers.NumberFormatItemsAdded(args);
      }
    }

    protected virtual void NumberFormatItemsDeletedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {  
      var collectionHandlers = this.CreateNumberFormatItemsDeletedHandler(e);
      if (collectionHandlers != null)
      {
        var args = new global::Sungero.Domain.Shared.CollectionPropertyDeletedEventArgs(this);
        collectionHandlers.NumberFormatItemsDeleted(args);
      }
    }


    #endregion


    public DocumentRegister()
    {
    }

  }
}

// ==================================================================
// DocumentRegisterHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow
{
  public partial class DocumentRegisterRegistrationGroupPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.EntityPropertyFilteringServerHandler
    where T : class, global::Sungero.Docflow.IRegistrationGroup
  {
    private global::Sungero.Docflow.IDocumentRegister _obj
    {
      get { return (global::Sungero.Docflow.IDocumentRegister)this.Entity; }
    }

    public DocumentRegisterRegistrationGroupPropertyFilteringServerHandler(global::Sungero.Docflow.IDocumentRegister entity)
      : base(entity)
    {
    }
  }

  public partial class DocumentRegisterRegistrationGroupSearchPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.SearchPropertyFilteringServerHandler
    where T : class, global::Sungero.Docflow.IRegistrationGroup
  {

    public virtual global::System.Linq.IQueryable<T> RegistrationGroupSearchDialogFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertySearchDialogFilteringEventArgs e)
    {
      return query;
    }

    public DocumentRegisterRegistrationGroupSearchPropertyFilteringServerHandler()
      : base()
    {
    }
  }



  public partial class DocumentRegisterFilteringServerHandler<T>
    : global::Sungero.Domain.EntityFilteringServerHandler<T>  
    where T : class, global::Sungero.Docflow.IDocumentRegister
  {
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    protected new global::Sungero.Docflow.IDocumentRegisterFilterState Filter { get; private set; }

    private global::Sungero.Docflow.IDocumentRegisterFilterState _filter
    {
      get
      {
        return this.Filter;
      }
    }

    public DocumentRegisterFilteringServerHandler(global::Sungero.Docflow.IDocumentRegisterFilterState filter)
    : base()
    {
      this.Filter = filter;
    }

    protected DocumentRegisterFilteringServerHandler()
    {
    }

    public override global::System.Linq.IQueryable<T> Filtering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.FilteringEventArgs e)
    {
      return query;
    }


  }

  public partial class DocumentRegisterUiFilteringServerHandler<T>
    : global::Sungero.Domain.EntityUiFilteringServerHandler<T>
    where T : class, global::Sungero.Docflow.IDocumentRegister
  {
    public override global::System.Linq.IQueryable<T> Filtering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.UiFilteringEventArgs e)
    {
      query = base.Filtering(query, e);
            return query;
    }
  }

  public partial class DocumentRegisterSearchDialogServerHandler : global::Sungero.CoreEntities.DatabookEntrySearchDialogServerHandler
   {
     private global::Sungero.Docflow.Server.DocumentRegisterSearchDialogModel _dialog
     {
       get
       {
         return (global::Sungero.Docflow.Server.DocumentRegisterSearchDialogModel)this.Dialog;
       }
     }

     public DocumentRegisterSearchDialogServerHandler(global::Sungero.Docflow.Server.DocumentRegisterSearchDialogModel dialog)
       : base(dialog)
     {
     }
   }

  public partial class DocumentRegisterServerHandlers : global::Sungero.CoreEntities.DatabookEntryServerHandlers
  {
    private global::Sungero.Docflow.IDocumentRegister _obj
    {
      get { return (global::Sungero.Docflow.IDocumentRegister)this.Entity; }
    }

    public DocumentRegisterServerHandlers(global::Sungero.Docflow.IDocumentRegister entity)
      : base(entity)
    {
    }
  }

  public partial class DocumentRegisterCreatingFromServerHandler : global::Sungero.CoreEntities.DatabookEntryCreatingFromServerHandler
  {
    private global::Sungero.Docflow.IDocumentRegister _source
    {
      get { return (global::Sungero.Docflow.IDocumentRegister)this.Source; }
    }

    private global::Sungero.Docflow.IDocumentRegisterInfo _info
    {
      get { return (global::Sungero.Docflow.IDocumentRegisterInfo)this._Info; }
    }

    public DocumentRegisterCreatingFromServerHandler(global::Sungero.Docflow.IDocumentRegister source, global::Sungero.Docflow.IDocumentRegisterInfo info)
      : base(source, info)
    {
    }
  }

}

// ==================================================================
// DocumentRegisterEventArgs.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
}

// ==================================================================
// DocumentRegisterAccessRights.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
  public class DocumentRegisterAccessRights : 
    Sungero.CoreEntities.Server.DatabookEntryAccessRights, Sungero.Docflow.IDocumentRegisterAccessRights
  {

    public DocumentRegisterAccessRights(global::Sungero.Domain.Shared.IEntity entity) : base(entity)
    {
    }
  }

  public class DocumentRegisterTypeAccessRights : 
    Sungero.CoreEntities.Server.DatabookEntryTypeAccessRights, Sungero.Docflow.IDocumentRegisterAccessRights
  {

    public DocumentRegisterTypeAccessRights(global::System.Type entityType) : base(entityType)
    {
    }
  }
}

// ==================================================================
// DocumentRegisterRepositoryImplementer.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
    public class DocumentRegisterRepositoryImplementer<T> : 
      global::Sungero.Domain.RepositoryImplementer<T>,
      global::Sungero.Docflow.IDocumentRegisterRepositoryImplementer<T>
      where T : global::Sungero.Docflow.IDocumentRegister 
    {
       public new global::Sungero.Docflow.IDocumentRegisterAccessRights AccessRights
       {
          get { return (global::Sungero.Docflow.IDocumentRegisterAccessRights)base.AccessRights; }
       }

       public new global::Sungero.Docflow.IDocumentRegisterInfo Info
       {
          get { return (global::Sungero.Docflow.IDocumentRegisterInfo)base.Info; }
       }

       protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
       {
         return new global::Sungero.Docflow.Server.DocumentRegisterTypeAccessRights(typeof(T));
       }
    }
}

// ==================================================================
// DocumentRegisterPanelNavigationFilters.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
}

// ==================================================================
// DocumentRegisterServerFunctions.g.cs
// ==================================================================

namespace Sungero.Docflow.Server
{
  public partial class DocumentRegisterFunctions : global::Sungero.CoreEntities.Server.DatabookEntryFunctions
  {
    private global::Sungero.Docflow.IDocumentRegister _obj
    {
      get { return (global::Sungero.Docflow.IDocumentRegister)this.Entity; }
    }

    public DocumentRegisterFunctions(global::Sungero.Docflow.IDocumentRegister entity) : base(entity) { }
  }
}

// ==================================================================
// DocumentRegisterFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Functions
{
  internal static class DocumentRegister
  {
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.DocumentRegisterFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static  global::System.Linq.IQueryable<global::Sungero.Docflow.IRegistrationGroup> GetUsersRegistrationGroups(global::Sungero.Docflow.IDocumentRegister documentRegister)
    {
      var functions = (global::Sungero.Docflow.Server.DocumentRegisterFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)documentRegister).FunctionsContainer.ServerFunctions;
      return functions.GetUsersRegistrationGroups();
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.DocumentRegisterFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static  global::System.Linq.IQueryable<global::Sungero.Docflow.IOfficialDocument> GetRegisteredDocuments(global::Sungero.Docflow.IDocumentRegister documentRegister)
    {
      var functions = (global::Sungero.Docflow.Server.DocumentRegisterFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)documentRegister).FunctionsContainer.ServerFunctions;
      return functions.GetRegisteredDocuments();
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.DocumentRegisterFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static  global::System.Linq.IQueryable<global::Sungero.Docflow.IDocumentRegister> GetFilteredDocumentRegisters(global::Sungero.Core.Enumeration direction, global::System.Nullable<global::System.Boolean> isNotifiable, global::System.Boolean forCurrentUser)
    {
      return global::Sungero.Docflow.Server.DocumentRegisterFunctions.GetFilteredDocumentRegisters(direction, isNotifiable, forCurrentUser);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.DocumentRegisterFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static  global::System.Collections.Generic.List<global::Sungero.Docflow.IDocumentRegister> GetDocumentRegistersByParams(global::Sungero.Docflow.IDocumentKind kind, global::Sungero.Company.IBusinessUnit unit, global::Sungero.Company.IDepartment department, global::System.Nullable<global::Sungero.Core.Enumeration> settingType, global::System.Boolean forCurrentUser)
    {
      return global::Sungero.Docflow.Server.DocumentRegisterFunctions.GetDocumentRegistersByParams(kind, unit, department, settingType, forCurrentUser);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.DocumentRegisterFunctions" />
    internal static  global::System.Linq.IQueryable<global::Sungero.Docflow.IDocumentRegister> GetAvailableDocumentRegisters(global::Sungero.Core.Enumeration direction)
    {
      return global::Sungero.Docflow.Server.DocumentRegisterFunctions.GetAvailableDocumentRegisters(direction);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.DocumentRegisterFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static  global::System.Boolean HasRegisteredDocuments(global::Sungero.Docflow.IDocumentRegister documentRegister)
    {
      return global::Sungero.Docflow.Server.DocumentRegisterFunctions.HasRegisteredDocuments(documentRegister);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.DocumentRegisterFunctions" />
    internal static  global::System.Linq.IQueryable<global::Sungero.Docflow.IOfficialDocument> FilterDocumentsByPeriod(global::System.Linq.IQueryable<global::Sungero.Docflow.IOfficialDocument> documents, global::System.Nullable<global::System.DateTime> periodBegin, global::System.Nullable<global::System.DateTime> periodEnd)
    {
      return global::Sungero.Docflow.Server.DocumentRegisterFunctions.FilterDocumentsByPeriod(documents, periodBegin, periodEnd);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.DocumentRegisterFunctions" />
    internal static  global::System.Nullable<global::System.Int32> GetIndex(global::System.Linq.IQueryable<global::Sungero.Docflow.IOfficialDocument> documents, global::System.Nullable<global::System.DateTime> periodBegin, global::System.Nullable<global::System.DateTime> periodEnd, global::System.Boolean orderByDescending)
    {
      return global::Sungero.Docflow.Server.DocumentRegisterFunctions.GetIndex(documents, periodBegin, periodEnd, orderByDescending);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.DocumentRegisterFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static  global::Sungero.CoreEntities.IRole GetClerks()
    {
      return global::Sungero.Docflow.Server.DocumentRegisterFunctions.GetClerks();
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.DocumentRegisterFunctions" />
    internal static  global::System.Int32 GetNextRegistrationNumber(global::Sungero.Docflow.IDocumentRegister documentRegister, global::System.DateTime registrationDate, global::System.Int32 leadDocument, global::System.Int32 department, global::System.Int32 businessUnit)
    {
      var functions = (global::Sungero.Docflow.Server.DocumentRegisterFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)documentRegister).FunctionsContainer.ServerFunctions;
      return functions.GetNextRegistrationNumber(registrationDate, leadDocument, department, businessUnit);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.DocumentRegisterFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static  global::System.Int32 GetCurrentNumber(global::Sungero.Docflow.IDocumentRegister documentRegister, global::System.DateTime date)
    {
      var functions = (global::Sungero.Docflow.Server.DocumentRegisterFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)documentRegister).FunctionsContainer.ServerFunctions;
      return functions.GetCurrentNumber(date);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.DocumentRegisterFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static  global::System.Int32 GetCurrentNumber(global::Sungero.Docflow.IDocumentRegister documentRegister, global::System.DateTime date, global::System.Int32 leadDocumentId, global::System.Int32 departmentId, global::System.Int32 businessUnitId)
    {
      var functions = (global::Sungero.Docflow.Server.DocumentRegisterFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)documentRegister).FunctionsContainer.ServerFunctions;
      return functions.GetCurrentNumber(date, leadDocumentId, departmentId, businessUnitId);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.DocumentRegisterFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static  void SetCurrentNumber(global::Sungero.Docflow.IDocumentRegister documentRegister, global::System.Int32 index, global::System.Int32 leadDocumentId, global::System.Int32 departmentId, global::System.Int32 businessUnitId, global::System.DateTime date)
    {
      var functions = (global::Sungero.Docflow.Server.DocumentRegisterFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)documentRegister).FunctionsContainer.ServerFunctions;
    functions.SetCurrentNumber(index, leadDocumentId, departmentId, businessUnitId, date);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.DocumentRegisterFunctions" />
    internal static  global::System.Nullable<global::System.Int32> GetNextIndex(global::Sungero.Docflow.IDocumentRegister documentRegister, global::System.DateTime date, global::System.Int32 leadDocumentId, global::System.Int32 departmentId, global::System.Int32 businessUnitId, global::Sungero.Docflow.IOfficialDocument document)
    {
      var functions = (global::Sungero.Docflow.Server.DocumentRegisterFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)documentRegister).FunctionsContainer.ServerFunctions;
      return functions.GetNextIndex(date, leadDocumentId, departmentId, businessUnitId, document);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.DocumentRegisterFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static  global::System.String GetNextNumber(global::Sungero.Docflow.IDocumentRegister documentRegister, global::System.DateTime date, global::System.Int32 leadDocumentId, global::Sungero.Docflow.IOfficialDocument document, global::System.String leadingDocumentNumber, global::System.Int32 departmentId, global::System.Int32 businessUnitId, global::System.String caseFileIndex, global::System.String docKindCode, global::System.String indexLeadingSymbol)
    {
      var functions = (global::Sungero.Docflow.Server.DocumentRegisterFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)documentRegister).FunctionsContainer.ServerFunctions;
      return functions.GetNextNumber(date, leadDocumentId, document, leadingDocumentNumber, departmentId, businessUnitId, caseFileIndex, docKindCode, indexLeadingSymbol);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.DocumentRegisterFunctions" />
    internal static  global::System.Linq.IQueryable<global::Sungero.Docflow.IOfficialDocument> GetSameNumberDocuments(global::Sungero.Docflow.IDocumentRegister documentRegister, global::Sungero.Docflow.IOfficialDocument doc, global::System.DateTime registrationDate, global::System.Int32 index)
    {
      var functions = (global::Sungero.Docflow.Server.DocumentRegisterFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)documentRegister).FunctionsContainer.ServerFunctions;
      return functions.GetSameNumberDocuments(doc, registrationDate, index);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.DocumentRegisterFunctions" />
    internal static  global::System.Linq.IQueryable<global::Sungero.Docflow.IOfficialDocument> GetOtherDocumentsInPeriodBySections(global::Sungero.Docflow.IDocumentRegister documentRegister, global::Sungero.Docflow.IOfficialDocument doc, global::System.DateTime registrationDate)
    {
      var functions = (global::Sungero.Docflow.Server.DocumentRegisterFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)documentRegister).FunctionsContainer.ServerFunctions;
      return functions.GetOtherDocumentsInPeriodBySections(doc, registrationDate);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.DocumentRegisterFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static  global::System.Boolean IsRegistrationNumberUnique(global::Sungero.Docflow.IDocumentRegister documentRegister, global::Sungero.Docflow.IOfficialDocument document, global::System.String registrationNumber, global::System.Int32 index, global::System.DateTime registrationDate, global::System.String departmentCode, global::System.String businessUnitCode, global::System.String caseFileIndex, global::System.String docKindCode, global::System.String counterpartyCode, global::System.Int32 leadDocumentId)
    {
      var functions = (global::Sungero.Docflow.Server.DocumentRegisterFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)documentRegister).FunctionsContainer.ServerFunctions;
      return functions.IsRegistrationNumberUnique(document, registrationNumber, index, registrationDate, departmentCode, businessUnitCode, caseFileIndex, docKindCode, counterpartyCode, leadDocumentId);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.DocumentRegisterFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static  global::System.Boolean HasDepartmentWithNullCode()
    {
      return global::Sungero.Docflow.Server.DocumentRegisterFunctions.HasDepartmentWithNullCode();
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.DocumentRegisterFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static  global::System.Boolean HasBusinessUnitWithNullCode()
    {
      return global::Sungero.Docflow.Server.DocumentRegisterFunctions.HasBusinessUnitWithNullCode();
    }

    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.DocumentRegisterFunctions" />
    internal static  global::System.Nullable<global::System.DateTime> GetBeginPeriod(global::Sungero.Docflow.IDocumentRegister documentRegister, global::System.DateTime registrationDate)
    {
      var functions = (global::Sungero.Docflow.Shared.DocumentRegisterFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)documentRegister).FunctionsContainer.SharedFunctions;
      return functions.GetBeginPeriod(registrationDate);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.DocumentRegisterFunctions" />
    internal static  global::System.Nullable<global::System.DateTime> GetEndPeriod(global::Sungero.Docflow.IDocumentRegister documentRegister, global::System.DateTime registrationDate)
    {
      var functions = (global::Sungero.Docflow.Shared.DocumentRegisterFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)documentRegister).FunctionsContainer.SharedFunctions;
      return functions.GetEndPeriod(registrationDate);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.DocumentRegisterFunctions" />
    internal static  global::System.Int32 GetCurrentMonth(global::Sungero.Docflow.IDocumentRegister documentRegister, global::System.DateTime registrationDate)
    {
      var functions = (global::Sungero.Docflow.Shared.DocumentRegisterFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)documentRegister).FunctionsContainer.SharedFunctions;
      return functions.GetCurrentMonth(registrationDate);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.DocumentRegisterFunctions" />
    internal static  global::System.Int32 GetCurrentQuarter(global::Sungero.Docflow.IDocumentRegister documentRegister, global::System.DateTime registrationDate)
    {
      var functions = (global::Sungero.Docflow.Shared.DocumentRegisterFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)documentRegister).FunctionsContainer.SharedFunctions;
      return functions.GetCurrentQuarter(registrationDate);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.DocumentRegisterFunctions" />
    internal static  global::System.Int32 GetCurrentYear(global::Sungero.Docflow.IDocumentRegister documentRegister, global::System.DateTime registrationDate)
    {
      var functions = (global::Sungero.Docflow.Shared.DocumentRegisterFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)documentRegister).FunctionsContainer.SharedFunctions;
      return functions.GetCurrentYear(registrationDate);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.DocumentRegisterFunctions" />
    internal static  global::System.String ToQuarterString(global::System.DateTime date)
    {
      return global::Sungero.Docflow.Shared.DocumentRegisterFunctions.ToQuarterString(date);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.DocumentRegisterFunctions" />
    internal static  void FillValueExample(global::Sungero.Docflow.IDocumentRegister documentRegister)
    {
      var functions = (global::Sungero.Docflow.Shared.DocumentRegisterFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)documentRegister).FunctionsContainer.SharedFunctions;
    functions.FillValueExample();
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.DocumentRegisterFunctions" />
    internal static  global::System.String GetValueExample(global::Sungero.Docflow.IDocumentRegister documentRegister)
    {
      var functions = (global::Sungero.Docflow.Shared.DocumentRegisterFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)documentRegister).FunctionsContainer.SharedFunctions;
      return functions.GetValueExample();
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.DocumentRegisterFunctions" />
    internal static  global::System.String GenerateRegistrationNumber(global::Sungero.Docflow.IDocumentRegister documentRegister, global::System.DateTime date, global::System.String index, global::System.String departmentCode, global::System.String businessUnitCode, global::System.String caseFileIndex, global::System.String docKindCode, global::System.String counterpartyCode, global::System.String leadingDocumentNumber)
    {
      var functions = (global::Sungero.Docflow.Shared.DocumentRegisterFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)documentRegister).FunctionsContainer.SharedFunctions;
      return functions.GenerateRegistrationNumber(date, index, departmentCode, businessUnitCode, caseFileIndex, docKindCode, counterpartyCode, leadingDocumentNumber);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.DocumentRegisterFunctions" />
    internal static  global::System.String GenerateRegistrationNumberFromDialog(global::Sungero.Docflow.IDocumentRegister documentRegister, global::System.DateTime date, global::System.String index, global::System.String leadingDocumentNumber, global::System.String departmentCode, global::System.String businessUnitCode, global::System.String caseFileIndex, global::System.String docKindCode, global::System.String counterpartyCode, global::System.String indexLeadingSymbol)
    {
      var functions = (global::Sungero.Docflow.Shared.DocumentRegisterFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)documentRegister).FunctionsContainer.SharedFunctions;
      return functions.GenerateRegistrationNumberFromDialog(date, index, leadingDocumentNumber, departmentCode, businessUnitCode, caseFileIndex, docKindCode, counterpartyCode, indexLeadingSymbol);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.DocumentRegisterFunctions" />
    internal static  global::System.String GenerateRegistrationNumber(global::Sungero.Docflow.IDocumentRegister documentRegister, global::System.DateTime date, global::System.String index, global::System.String leadingDocumentNumber, global::System.String departmentCode, global::System.String businessUnitCode, global::System.String caseFileIndex, global::System.String docKindCode, global::System.String counterpartyCode, global::System.String indexLeadingSymbol)
    {
      var functions = (global::Sungero.Docflow.Shared.DocumentRegisterFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)documentRegister).FunctionsContainer.SharedFunctions;
      return functions.GenerateRegistrationNumber(date, index, leadingDocumentNumber, departmentCode, businessUnitCode, caseFileIndex, docKindCode, counterpartyCode, indexLeadingSymbol);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.DocumentRegisterFunctions" />
    internal static  global::Sungero.Docflow.Structures.DocumentRegister.RegistrationNumberParts GenerateRegistrationNumberPrefixAndPostfix(global::Sungero.Docflow.IDocumentRegister documentRegister, global::System.DateTime date, global::System.String leadingDocumentNumber, global::System.String departmentCode, global::System.String businessUnitCode, global::System.String caseFileIndex, global::System.String docKindCode, global::System.String counterpartyCode, global::System.Boolean counterpartyCodeIsMetasymbol)
    {
      var functions = (global::Sungero.Docflow.Shared.DocumentRegisterFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)documentRegister).FunctionsContainer.SharedFunctions;
      return functions.GenerateRegistrationNumberPrefixAndPostfix(date, leadingDocumentNumber, departmentCode, businessUnitCode, caseFileIndex, docKindCode, counterpartyCode, counterpartyCodeIsMetasymbol);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.DocumentRegisterFunctions" />
    internal static  global::System.String CheckDocumentRegisterSections(global::Sungero.Docflow.IDocumentRegister documentRegister, global::Sungero.Docflow.IOfficialDocument document)
    {
      var functions = (global::Sungero.Docflow.Shared.DocumentRegisterFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)documentRegister).FunctionsContainer.SharedFunctions;
      return functions.CheckDocumentRegisterSections(document);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.DocumentRegisterFunctions" />
    internal static  global::System.String CheckRegistrationNumberFormat(global::Sungero.Docflow.IDocumentRegister documentRegister, global::System.Nullable<global::System.DateTime> registrationDate, global::System.String registrationNumber, global::System.String departmentCode, global::System.String businessUnitCode, global::System.String caseFileIndex, global::System.String docKindCode, global::System.String counterpartyCode, global::System.String leadDocNumber, global::System.Boolean searchCorrectingPostfix)
    {
      var functions = (global::Sungero.Docflow.Shared.DocumentRegisterFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)documentRegister).FunctionsContainer.SharedFunctions;
      return functions.CheckRegistrationNumberFormat(registrationDate, registrationNumber, departmentCode, businessUnitCode, caseFileIndex, docKindCode, counterpartyCode, leadDocNumber, searchCorrectingPostfix);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.DocumentRegisterFunctions" />
    internal static  global::System.Int32 GetIndexFromRegistrationNumber(global::Sungero.Docflow.IDocumentRegister documentRegister, global::System.DateTime date, global::System.String registrationNumber, global::System.String departmentCode, global::System.String businessUnitCode, global::System.String caseFileIndex, global::System.String docKindCode, global::System.String counterpartyCode, global::System.String leadDocNumber, global::System.Boolean searchCorrectingPostfix)
    {
      return global::Sungero.Docflow.Shared.DocumentRegisterFunctions.GetIndexFromRegistrationNumber(documentRegister, date, registrationNumber, departmentCode, businessUnitCode, caseFileIndex, docKindCode, counterpartyCode, leadDocNumber, searchCorrectingPostfix);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.DocumentRegisterFunctions" />
    internal static  global::Sungero.Docflow.Structures.DocumentRegister.RegistrationNumberIndex ParseRegistrationNumber(global::Sungero.Docflow.IDocumentRegister documentRegister, global::System.DateTime date, global::System.String registrationNumber, global::System.String departmentCode, global::System.String businessUnitCode, global::System.String caseFileIndex, global::System.String docKindCode, global::System.String counterpartyCode, global::System.String leadDocNumber, global::System.Boolean searchCorrectingPostfix)
    {
      return global::Sungero.Docflow.Shared.DocumentRegisterFunctions.ParseRegistrationNumber(documentRegister, date, registrationNumber, departmentCode, businessUnitCode, caseFileIndex, docKindCode, counterpartyCode, leadDocNumber, searchCorrectingPostfix);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.DocumentRegisterFunctions" />
    internal static  global::System.Boolean IsEqualsRegistrationNumbers(global::Sungero.Docflow.IDocumentRegister documentRegister, global::System.DateTime date, global::System.String registrationNumber, global::System.String departmentCode, global::System.String businessUnitCode, global::System.String caseFileIndex, global::System.String docKindCode, global::System.String counterpartyCode, global::System.String leadDocNumber, global::System.String registrationNumberSample, global::System.Boolean searchCorrectingPostfix)
    {
      return global::Sungero.Docflow.Shared.DocumentRegisterFunctions.IsEqualsRegistrationNumbers(documentRegister, date, registrationNumber, departmentCode, businessUnitCode, caseFileIndex, docKindCode, counterpartyCode, leadDocNumber, registrationNumberSample, searchCorrectingPostfix);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.DocumentRegisterFunctions" />
    internal static  global::System.String GetDepartmentValidationError(global::Sungero.Docflow.IDocumentRegister documentRegister, global::Sungero.Docflow.IOfficialDocument document)
    {
      return global::Sungero.Docflow.Shared.DocumentRegisterFunctions.GetDepartmentValidationError(documentRegister, document);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.DocumentRegisterFunctions" />
    internal static  global::System.String GetBusinessUnitValidationError(global::Sungero.Docflow.IDocumentRegister documentRegister, global::Sungero.Docflow.IOfficialDocument document)
    {
      return global::Sungero.Docflow.Shared.DocumentRegisterFunctions.GetBusinessUnitValidationError(documentRegister, document);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.DocumentRegisterFunctions" />
    internal static  global::System.String GetDocumentKindValidationError(global::Sungero.Docflow.IDocumentRegister documentRegister, global::Sungero.Docflow.IOfficialDocument document)
    {
      return global::Sungero.Docflow.Shared.DocumentRegisterFunctions.GetDocumentKindValidationError(documentRegister, document);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.DocumentRegisterFunctions" />
    internal static  global::System.String GetCaseFileValidationError(global::Sungero.Docflow.IDocumentRegister documentRegister, global::Sungero.Docflow.IOfficialDocument document)
    {
      return global::Sungero.Docflow.Shared.DocumentRegisterFunctions.GetCaseFileValidationError(documentRegister, document);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.DocumentRegisterFunctions" />
    internal static  global::System.String CreateValidationError(global::Sungero.Docflow.IDocumentRegister documentRegister, global::System.String errorModel)
    {
      return global::Sungero.Docflow.Shared.DocumentRegisterFunctions.CreateValidationError(documentRegister, errorModel);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.DocumentRegisterFunctions" />
    internal static  global::Sungero.Docflow.IDocumentRegister GetDefaultDocRegister(global::Sungero.Docflow.IOfficialDocument document, global::System.Collections.Generic.List<global::Sungero.Docflow.IDocumentRegister> filteredDocRegisters, global::System.Nullable<global::Sungero.Core.Enumeration> settingType)
    {
      return global::Sungero.Docflow.Shared.DocumentRegisterFunctions.GetDefaultDocRegister(document, filteredDocRegisters, settingType);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.DocumentRegisterFunctions" />
    internal static  void SetRequiredProperties(global::Sungero.Docflow.IDocumentRegister documentRegister)
    {
      var functions = (global::Sungero.Docflow.Shared.DocumentRegisterFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)documentRegister).FunctionsContainer.SharedFunctions;
    functions.SetRequiredProperties();
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.DocumentRegisterFunctions" />
    internal static  global::System.Collections.Generic.List<global::Sungero.Core.Enumeration> GetFilteredDocumentFlows(global::Sungero.Docflow.IDocumentRegister documentRegister, global::System.Linq.IQueryable<global::Sungero.Core.Enumeration> query)
    {
      var functions = (global::Sungero.Docflow.Shared.DocumentRegisterFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)documentRegister).FunctionsContainer.SharedFunctions;
      return functions.GetFilteredDocumentFlows(query);
    }

  }
}

// ==================================================================
// DocumentRegisterServerPublicFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
  public class DocumentRegisterServerPublicFunctions : global::Sungero.Docflow.Server.IDocumentRegisterServerPublicFunctions
  {
    public global::System.Int32 GetNextRegistrationNumber(global::Sungero.Docflow.IDocumentRegister documentRegister, global::System.DateTime registrationDate, global::System.Int32 leadDocument, global::System.Int32 department, global::System.Int32 businessUnit)
    {
      return global::Sungero.Docflow.Functions.DocumentRegister.GetNextRegistrationNumber(documentRegister, registrationDate, leadDocument, department, businessUnit);
    }
    public global::System.Linq.IQueryable<global::Sungero.Docflow.IOfficialDocument> GetOtherDocumentsInPeriodBySections(global::Sungero.Docflow.IDocumentRegister documentRegister, global::Sungero.Docflow.IOfficialDocument doc, global::System.DateTime registrationDate)
    {
      return global::Sungero.Docflow.Functions.DocumentRegister.GetOtherDocumentsInPeriodBySections(documentRegister, doc, registrationDate);
    }
    public global::System.Linq.IQueryable<global::Sungero.Docflow.IOfficialDocument> GetSameNumberDocuments(global::Sungero.Docflow.IDocumentRegister documentRegister, global::Sungero.Docflow.IOfficialDocument doc, global::System.DateTime registrationDate, global::System.Int32 index)
    {
      return global::Sungero.Docflow.Functions.DocumentRegister.GetSameNumberDocuments(documentRegister, doc, registrationDate, index);
    }
  }
}

// ==================================================================
// DocumentRegisterQueries.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Queries
{
  public class DocumentRegister
  {
    private static global::Sungero.Domain.SqlQueryResolver resolver = new global::Sungero.Domain.SqlQueryResolver("Sungero.Docflow.Server.DocumentRegister.DocumentRegisterQueries.xml", System.Reflection.Assembly.GetExecutingAssembly());
    public static string HasRegisteredDocuments
    {
       get { return resolver.GetQuery("HasRegisteredDocuments"); }
    }
    public static string GetCurrentNumber
    {
       get { return resolver.GetQuery("GetCurrentNumber"); }
    }
    public static string SetCurrentNumber
    {
       get { return resolver.GetQuery("SetCurrentNumber"); }
    }
  }
}
