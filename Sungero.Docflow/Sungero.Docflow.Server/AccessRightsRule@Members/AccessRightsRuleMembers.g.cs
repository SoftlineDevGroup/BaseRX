
// ==================================================================
// AccessRightsRuleMembers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
  public class AccessRightsRuleMembersFilterForRecipient<TQueryEntity, TSourceEntity, TRootEntity>
    : global::Sungero.Domain.ChildEntityPropertyFilterBase<TQueryEntity, TSourceEntity, TRootEntity>
    where TQueryEntity : class, global::Sungero.CoreEntities.IRecipient
    where TSourceEntity : class, global::Sungero.Docflow.IAccessRightsRuleMembers
    where TRootEntity : class, global::Sungero.Docflow.IAccessRightsRule
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, TSourceEntity sourceEntity, TRootEntity rootEntity)
    {
      var args = new global::Sungero.Domain.PropertyFilteringEventArgs(sourceEntity);
      var result = new global::Sungero.Docflow.AccessRightsRuleMembersRecipientPropertyFilteringServerHandler<TQueryEntity>(sourceEntity, rootEntity).MembersRecipientFiltering(query, args);
      if (args.DisableUiFiltering)
        global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public AccessRightsRuleMembersFilterForRecipient(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class AccessRightsRuleMembersSearchFilterForRecipient<TQueryEntity>
    : global::Sungero.Domain.SearchDialogPropertyFilter<TQueryEntity>
    where TQueryEntity : class, global::Sungero.CoreEntities.IRecipient
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, System.Guid entityType)
    {
      var args = new global::Sungero.Domain.PropertySearchDialogFilteringEventArgs(entityType);
      var result = new global::Sungero.Docflow.AccessRightsRuleMembersRecipientSearchPropertyFilteringServerHandler<TQueryEntity>().MembersRecipientSearchDialogFiltering(query, args);
      if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public AccessRightsRuleMembersSearchFilterForRecipient(string propertyName)
      : base(propertyName)
    {
    }
  }



  [global::Sungero.Domain.PropertyFilter(typeof(global::Sungero.Docflow.Server.AccessRightsRuleMembersFilterForRecipient<global::Sungero.CoreEntities.IRecipient, global::Sungero.Docflow.IAccessRightsRuleMembers, global::Sungero.Docflow.IAccessRightsRule>), "Recipient")]
  [global::Sungero.Domain.SearchPropertyFilter(typeof(global::Sungero.Docflow.Server.AccessRightsRuleMembersSearchFilterForRecipient<global::Sungero.CoreEntities.IRecipient>), "Recipient")]


  public class AccessRightsRuleMembers :
    global::Sungero.Domain.ChildEntity, global::Sungero.Docflow.IAccessRightsRuleMembers
  {
    public static new readonly global::System.Guid ClassTypeGuid = global::System.Guid.Parse("f6f931a8-3f7f-4532-aee6-47aa4ce7f0e4");

    public override global::System.Guid TypeGuid
    {
      get { return global::Sungero.Docflow.Server.AccessRightsRuleMembers.ClassTypeGuid; }
    }

    public override string TypeName
    {
      get { return "Sungero.Docflow.IAccessRightsRuleMembers, Sungero.Domain.Interfaces"; }
    }

    public new virtual global::Sungero.Docflow.IAccessRightsRuleMembersState State
    {
      get { return (global::Sungero.Docflow.IAccessRightsRuleMembersState)base.State; }
    }

    protected override global::Sungero.Domain.Shared.IEntityState CreateState()
    {
      return new global::Sungero.Docflow.Shared.AccessRightsRuleMembersState(this);
    }

    public new virtual global::Sungero.Docflow.IAccessRightsRuleMembersInfo Info
    {
      get { return (global::Sungero.Docflow.IAccessRightsRuleMembersInfo)base.Info; }
    }


    public global::Sungero.Docflow.IAccessRightsRule AccessRightsRule { get; set; }

    public override global::Sungero.Domain.Shared.IEntity RootEntity
    {
      get { return this.AccessRightsRule; }
      set { this.AccessRightsRule = (global::Sungero.Docflow.IAccessRightsRule)value; }
    }

    protected override object CreateSharedHandlers() {
      return new global::Sungero.Docflow.AccessRightsRuleMembersSharedHandlers(this);
    }






    private static global::Sungero.Domain.Shared.EnumerationItems _RightTypeItems = new global::Sungero.Domain.Shared.EnumerationItems(
      null,
      typeof(global::Sungero.Docflow.AccessRightsRuleMembers.RightType),
      typeof(global::Sungero.Docflow.Server.AccessRightsRuleMembers),
      "RightType");

    public static global::Sungero.Domain.Shared.EnumerationItems RightTypeItems
    {
      get { return global::Sungero.Docflow.Server.AccessRightsRuleMembers._RightTypeItems; }
    }

    public virtual global::Sungero.Domain.Shared.EnumerationItems RightTypeAllowedItems
    {
      get { return global::Sungero.Docflow.Server.AccessRightsRuleMembers.RightTypeItems; }
    }

    private global::Sungero.Core.Enumeration? _RightType;

    public virtual global::Sungero.Core.Enumeration? RightType
    {
      get { return this._RightType; }
      set { this.SetEnumPropertyValue("RightType", this._RightType, value, (propertyValue) => { this._RightType = propertyValue; }, this.RightTypeChangedHandler, this.RightTypeAllowedItems); }
    }


    private global::Sungero.CoreEntities.IRecipient _Recipient;
    public virtual global::Sungero.CoreEntities.IRecipient Recipient
    {
      get
      {
        return this._Recipient;
      }

      set
      {
        this.SetPropertyValue("Recipient", this._Recipient, value, (propertyValue) => { this._Recipient = propertyValue; }, this.RecipientChangedHandler);
      }
    }




    #region Framework events

    protected void RecipientChangedHandler()
    {
      var args = new global::Sungero.Docflow.Shared.AccessRightsRuleMembersRecipientChangedEventArgs(this.State.Properties.Recipient, this.Recipient, this);
     ((global::Sungero.Docflow.AccessRightsRuleMembersSharedHandlers)this.SharedHandlers).MembersRecipientChanged(args);
    }

    protected void RightTypeChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.EnumerationPropertyChangedEventArgs(this.State.Properties.RightType, this.RightType, this);
     ((global::Sungero.Docflow.AccessRightsRuleMembersSharedHandlers)this.SharedHandlers).MembersRightTypeChanged(args);
    }



    #endregion


    public AccessRightsRuleMembers()
    {
    }

  }
}

// ==================================================================
// AccessRightsRuleMembersHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow
{
  public partial class AccessRightsRuleMembersRecipientPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.ChildEntityPropertyFilteringServerHandler
    where T : class, global::Sungero.CoreEntities.IRecipient
  {
    private global::Sungero.Docflow.IAccessRightsRuleMembers _obj
    {
      get { return (global::Sungero.Docflow.IAccessRightsRuleMembers)this.Entity; }
    }

    private global::Sungero.Docflow.IAccessRightsRule _root
    {
      get { return (global::Sungero.Docflow.IAccessRightsRule)this.Root; }
    }

    public virtual global::System.Linq.IQueryable<T> MembersRecipientFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertyFilteringEventArgs e)
    {
      return query;
    }

    public AccessRightsRuleMembersRecipientPropertyFilteringServerHandler(global::Sungero.Docflow.IAccessRightsRuleMembers entity, global::Sungero.Docflow.IAccessRightsRule root)
      : base(entity, root)
    {
    }
  }

  public partial class AccessRightsRuleMembersRecipientSearchPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.SearchPropertyFilteringServerHandler
    where T : class, global::Sungero.CoreEntities.IRecipient
  {

    public virtual global::System.Linq.IQueryable<T> MembersRecipientSearchDialogFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertySearchDialogFilteringEventArgs e)
    {
      return query;
    }

    public AccessRightsRuleMembersRecipientSearchPropertyFilteringServerHandler()
      : base()
    {
    }
  }



}

// ==================================================================
// AccessRightsRuleMembersEventArgs.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
}
