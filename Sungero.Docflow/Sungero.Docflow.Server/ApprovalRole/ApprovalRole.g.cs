
// ==================================================================
// ApprovalRole.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
    public class ApprovalRoleFilter<T> :
      global::Sungero.Docflow.Server.ApprovalRoleBaseFilter<T>
      where T : class, global::Sungero.Docflow.IApprovalRole
    {
      private global::Sungero.Docflow.IApprovalRoleFilterState filter
      {
        get
        {
          return (Sungero.Docflow.IApprovalRoleFilterState)this.Filter;
        }
      }

      protected override global::System.Linq.IQueryable<T> ApplyAppliedFilter(global::System.Linq.IQueryable<T> query)
      {
        return base.ApplyAppliedFilter(query);
      }

      public ApprovalRoleFilter(global::Sungero.Docflow.IApprovalRoleFilterState filter)
      : base(filter)
      {
      }

      protected ApprovalRoleFilter()
      {
      }
    }
      public class ApprovalRoleUiFilter<T> :
        global::Sungero.Docflow.Server.ApprovalRoleBaseUiFilter<T>
        where T : class, global::Sungero.Docflow.IApprovalRole
      {
        protected override global::System.Linq.IQueryable<T> ApplyAppliedFilter(global::System.Linq.IQueryable<T> query)
        {
          return base.ApplyAppliedFilter(query);
        }
      }

    public class ApprovalRoleSearchDialogModel : global::Sungero.Docflow.Server.ApprovalRoleBaseSearchDialogModel
        {
                  public override global::System.Int32? Id { get; protected set; }
                  public override global::System.String Name { get; protected set; }
                  public override global::System.String Description { get; protected set; }


                  public override global::System.Collections.Generic.IEnumerable<Sungero.Core.Enumeration> Type { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<Sungero.Core.Enumeration> Status { get; protected set; }




        }





  [global::Sungero.Domain.Filter(typeof(global::Sungero.Docflow.Server.ApprovalRoleFilter<global::Sungero.Docflow.IApprovalRole>))]
  [global::Sungero.Domain.UiFilter(typeof(global::Sungero.Docflow.Server.ApprovalRoleUiFilter<global::Sungero.Docflow.IApprovalRole>))]

  public class ApprovalRole :
    global::Sungero.Docflow.Server.ApprovalRoleBase, global::Sungero.Docflow.IApprovalRole
  {
    public static new readonly global::System.Guid ClassTypeGuid = global::System.Guid.Parse("9f5b8596-f73a-498f-b1b1-219ed77bb031");

    public override global::System.Guid TypeGuid
    {
      get { return global::Sungero.Docflow.Server.ApprovalRole.ClassTypeGuid; }
    }

    public override string TypeName
    {
      get { return "Sungero.Docflow.IApprovalRole, Sungero.Domain.Interfaces"; }
    }

    public override string DisplayValue
    {
      get { return this.Name; }
      set { this.Name = value; }
    }

    public new virtual global::Sungero.Docflow.IApprovalRoleState State
    {
      get { return (global::Sungero.Docflow.IApprovalRoleState)base.State; }
    }

    protected override global::Sungero.Domain.Shared.IEntityState CreateState()
    {
      return new global::Sungero.Docflow.Shared.ApprovalRoleState(this);
    }

    public new virtual global::Sungero.Docflow.IApprovalRoleInfo Info
    {
      get { return (global::Sungero.Docflow.IApprovalRoleInfo)base.Info; }
    }

    public new virtual global::Sungero.Docflow.IApprovalRoleAccessRights AccessRights
    {
      get { return (global::Sungero.Docflow.IApprovalRoleAccessRights)base.AccessRights; }
    }

    protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
    {
      return new global::Sungero.Docflow.Server.ApprovalRoleAccessRights(this);
    }

    protected override global::Sungero.Domain.EntityFunctions CreateServerFunctions()
    {
      return new global::Sungero.Docflow.Server.ApprovalRoleFunctions(this);
    }

    protected override global::Sungero.Domain.Shared.EntityFunctions CreateSharedFunctions()
    {
      return new global::Sungero.Docflow.Shared.ApprovalRoleFunctions(this);
    }

    protected override object CreateHandlers() {
      return new global::Sungero.Docflow.ApprovalRoleServerHandlers(this);
    }

    protected override object CreateSharedHandlers() {
      return new global::Sungero.Docflow.ApprovalRoleSharedHandlers(this);
    }










    protected override global::Sungero.Domain.Shared.EntityCreatingFromServerHandler CreateCreatingFromServerHandler(
      global::Sungero.Domain.Shared.IEntity entitySource)
    {
      return new global::Sungero.Docflow.ApprovalRoleCreatingFromServerHandler((global::Sungero.Docflow.IApprovalRole)entitySource, this.Info);
    }

    #region Framework events



    #endregion


    public ApprovalRole()
    {
    }

  }
}

// ==================================================================
// ApprovalRoleHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow
{

  public partial class ApprovalRoleFilteringServerHandler<T>
    : global::Sungero.Docflow.ApprovalRoleBaseFilteringServerHandler<T>  
    where T : class, global::Sungero.Docflow.IApprovalRole
  {
    private global::Sungero.Docflow.IApprovalRoleFilterState _filter
    {
      get
      {
        return (Sungero.Docflow.IApprovalRoleFilterState)this.Filter;
      }
    }

    public ApprovalRoleFilteringServerHandler(global::Sungero.Docflow.IApprovalRoleFilterState filter)
    : base(filter)
    {
    }

    protected ApprovalRoleFilteringServerHandler()
    {
    }

    public override global::System.Linq.IQueryable<T> Filtering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.FilteringEventArgs e)
    {
      query = base.Filtering(query, e);
            return query;
    }


  }

  public partial class ApprovalRoleUiFilteringServerHandler<T>
    : global::Sungero.Docflow.ApprovalRoleBaseUiFilteringServerHandler<T>
    where T : class, global::Sungero.Docflow.IApprovalRole
  {
    public override global::System.Linq.IQueryable<T> Filtering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.UiFilteringEventArgs e)
    {
      query = base.Filtering(query, e);
            return query;
    }
  }

  public partial class ApprovalRoleSearchDialogServerHandler : global::Sungero.Docflow.ApprovalRoleBaseSearchDialogServerHandler
   {
     private global::Sungero.Docflow.Server.ApprovalRoleSearchDialogModel _dialog
     {
       get
       {
         return (global::Sungero.Docflow.Server.ApprovalRoleSearchDialogModel)this.Dialog;
       }
     }

     public ApprovalRoleSearchDialogServerHandler(global::Sungero.Docflow.Server.ApprovalRoleSearchDialogModel dialog)
       : base(dialog)
     {
     }
   }

  public partial class ApprovalRoleServerHandlers : global::Sungero.Docflow.ApprovalRoleBaseServerHandlers
  {
    private global::Sungero.Docflow.IApprovalRole _obj
    {
      get { return (global::Sungero.Docflow.IApprovalRole)this.Entity; }
    }

    public ApprovalRoleServerHandlers(global::Sungero.Docflow.IApprovalRole entity)
      : base(entity)
    {
    }
  }

  public partial class ApprovalRoleCreatingFromServerHandler : global::Sungero.Docflow.ApprovalRoleBaseCreatingFromServerHandler
  {
    private global::Sungero.Docflow.IApprovalRole _source
    {
      get { return (global::Sungero.Docflow.IApprovalRole)this.Source; }
    }

    private global::Sungero.Docflow.IApprovalRoleInfo _info
    {
      get { return (global::Sungero.Docflow.IApprovalRoleInfo)this._Info; }
    }

    public ApprovalRoleCreatingFromServerHandler(global::Sungero.Docflow.IApprovalRole source, global::Sungero.Docflow.IApprovalRoleInfo info)
      : base(source, info)
    {
    }
  }

}

// ==================================================================
// ApprovalRoleEventArgs.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
}

// ==================================================================
// ApprovalRoleAccessRights.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
  public class ApprovalRoleAccessRights : 
    Sungero.Docflow.Server.ApprovalRoleBaseAccessRights, Sungero.Docflow.IApprovalRoleAccessRights
  {

    public ApprovalRoleAccessRights(global::Sungero.Domain.Shared.IEntity entity) : base(entity)
    {
    }
  }

  public class ApprovalRoleTypeAccessRights : 
    Sungero.Docflow.Server.ApprovalRoleBaseTypeAccessRights, Sungero.Docflow.IApprovalRoleAccessRights
  {

    public ApprovalRoleTypeAccessRights(global::System.Type entityType) : base(entityType)
    {
    }
  }
}

// ==================================================================
// ApprovalRoleRepositoryImplementer.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
    public class ApprovalRoleRepositoryImplementer<T> : 
      global::Sungero.Docflow.Server.ApprovalRoleBaseRepositoryImplementer<T>,
      global::Sungero.Docflow.IApprovalRoleRepositoryImplementer<T>
      where T : global::Sungero.Docflow.IApprovalRole 
    {
       public new global::Sungero.Docflow.IApprovalRoleAccessRights AccessRights
       {
          get { return (global::Sungero.Docflow.IApprovalRoleAccessRights)base.AccessRights; }
       }

       public new global::Sungero.Docflow.IApprovalRoleInfo Info
       {
          get { return (global::Sungero.Docflow.IApprovalRoleInfo)base.Info; }
       }

       protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
       {
         return new global::Sungero.Docflow.Server.ApprovalRoleTypeAccessRights(typeof(T));
       }
    }
}

// ==================================================================
// ApprovalRolePanelNavigationFilters.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
}

// ==================================================================
// ApprovalRoleServerFunctions.g.cs
// ==================================================================

namespace Sungero.Docflow.Server
{
  public partial class ApprovalRoleFunctions : global::Sungero.Docflow.Server.ApprovalRoleBaseFunctions
  {
    private global::Sungero.Docflow.IApprovalRole _obj
    {
      get { return (global::Sungero.Docflow.IApprovalRole)this.Entity; }
    }

    public ApprovalRoleFunctions(global::Sungero.Docflow.IApprovalRole entity) : base(entity) { }
  }
}

// ==================================================================
// ApprovalRoleFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Functions
{
  internal static class ApprovalRole
  {
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalRoleFunctions" />
    internal static  global::Sungero.Company.IEmployee GetRolePerformer(global::Sungero.Docflow.IApprovalRole approvalRole, global::Sungero.Docflow.IApprovalTask task)
    {
      var functions = (global::Sungero.Docflow.Server.ApprovalRoleFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)approvalRole).FunctionsContainer.ServerFunctions;
      return functions.GetRolePerformer(task);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalRoleFunctions" />
    internal static  global::System.Collections.Generic.List<global::Sungero.Company.IEmployee> GetApproversRolePerformers(global::Sungero.Docflow.IApprovalRole approvalRole, global::Sungero.Docflow.IApprovalTask task, global::System.Collections.Generic.List<global::Sungero.CoreEntities.IRecipient> additionalApprovers)
    {
      var functions = (global::Sungero.Docflow.Server.ApprovalRoleFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)approvalRole).FunctionsContainer.ServerFunctions;
      return functions.GetApproversRolePerformers(task, additionalApprovers);
    }

  }
}

// ==================================================================
// ApprovalRoleServerPublicFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
  public class ApprovalRoleServerPublicFunctions : global::Sungero.Docflow.Server.IApprovalRoleServerPublicFunctions
  {
  }
}

// ==================================================================
// ApprovalRoleQueries.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Queries
{
  public class ApprovalRole
  {
    private static global::Sungero.Domain.SqlQueryResolver resolver = new global::Sungero.Domain.SqlQueryResolver("Sungero.Docflow.Server.ApprovalRole.ApprovalRoleQueries.xml", System.Reflection.Assembly.GetExecutingAssembly());
  }
}
