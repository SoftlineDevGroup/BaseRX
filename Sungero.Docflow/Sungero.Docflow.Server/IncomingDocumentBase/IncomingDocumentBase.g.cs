
// ==================================================================
// IncomingDocumentBase.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
    public class IncomingDocumentBaseFilter<T> :
      global::Sungero.Docflow.Server.OfficialDocumentFilter<T>
      where T : class, global::Sungero.Docflow.IIncomingDocumentBase
    {
      private global::Sungero.Docflow.IIncomingDocumentBaseFilterState filter
      {
        get
        {
          return (Sungero.Docflow.IIncomingDocumentBaseFilterState)this.Filter;
        }
      }

      protected override global::System.Linq.IQueryable<T> ApplyAppliedFilter(global::System.Linq.IQueryable<T> query)
      {
        var args = new global::Sungero.Domain.FilteringEventArgs();
        var result = new global::Sungero.Docflow.IncomingDocumentBaseFilteringServerHandler<T>(this.filter).Filtering(query, args);
        if (args.DisableCheckRights)
    	  global::Sungero.Domain.Security.FilteringAccessRightsOptions.DisableCheckRights<T>();
        return result;
      }

      public IncomingDocumentBaseFilter(global::Sungero.Docflow.IIncomingDocumentBaseFilterState filter)
      : base(filter)
      {
      }

      protected IncomingDocumentBaseFilter()
      {
      }
    }
    public class IncomingDocumentBaseSearchDialogModel : global::Sungero.Docflow.Server.OfficialDocumentSearchDialogModel
        {
                  public override global::System.Int32? Id { get; protected set; }
                  public override global::System.String Name { get; protected set; }
                  public override global::System.String Subject { get; protected set; }


                  public override global::System.Collections.Generic.IEnumerable<Sungero.Content.IAssociatedApplication> AssociatedApplication { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<Sungero.Core.Enumeration> VerificationState { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<Sungero.CoreEntities.IRecipient> Author { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<CommonLibrary.DateRangeValue> Created { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<Sungero.Docflow.IDocumentKind> DocumentKind { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<Sungero.Company.IBusinessUnit> BusinessUnit { get; protected set; }
                  [Sungero.Domain.Shared.HideInDevStudio()]
                  public override global::System.Collections.Generic.IEnumerable<Sungero.CoreEntities.IRecipient> OurSignatory { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<Sungero.Company.IDepartment> Department { get; protected set; }


                  public virtual global::System.String InNumber { get; protected set; }


                  public virtual global::System.Collections.Generic.IEnumerable<Sungero.Parties.ICounterparty> Correspondent { get; protected set; }
                  public virtual global::System.Collections.Generic.IEnumerable<Sungero.Docflow.IOutgoingDocumentBase> InResponseTo { get; protected set; }
                  public virtual global::System.Collections.Generic.IEnumerable<CommonLibrary.DateRangeValue> Dated { get; protected set; }
                  public virtual global::System.Collections.Generic.IEnumerable<Sungero.CoreEntities.IRecipient> Addressee { get; protected set; }


                   public new IncomingDocumentBaseVersionsModel Versions { get { return (IncomingDocumentBaseVersionsModel)base.Versions; } protected set { base.Versions = value; } }
                   [Sungero.Domain.Shared.HideInDevStudio()]
                   public new IncomingDocumentBaseTrackingModel Tracking { get { return (IncomingDocumentBaseTrackingModel)base.Tracking; } protected set { base.Tracking = value; } }

        }

      public class IncomingDocumentBaseVersionsModel : global::Sungero.Docflow.Server.OfficialDocumentVersionsModel
          {
                      [Sungero.Domain.Shared.HideInDevStudio()]
                      public override global::System.Int32? Id { get; protected set; }
                      public override global::System.String Body { get; protected set; }




         }
      public class IncomingDocumentBaseTrackingModel : global::Sungero.Docflow.Server.OfficialDocumentTrackingModel
          {
                      [Sungero.Domain.Shared.HideInDevStudio()]
                      public override global::System.Int32? Id { get; protected set; }




         }




  public class IncomingDocumentBaseFilterForCorrespondent<TQueryEntity, TSourceEntity>
    : global::Sungero.Domain.EntityPropertyFilterBase<TQueryEntity, TSourceEntity>
    where TQueryEntity : class, global::Sungero.Parties.ICounterparty
    where TSourceEntity : class, global::Sungero.Docflow.IIncomingDocumentBase
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, TSourceEntity sourceEntity)
    {
      var args = new global::Sungero.Domain.PropertyFilteringEventArgs(sourceEntity);
      var result = new global::Sungero.Docflow.IncomingDocumentBaseCorrespondentPropertyFilteringServerHandler<TQueryEntity>(sourceEntity).CorrespondentFiltering(query, args);
      if (args.DisableUiFiltering)
        global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public IncomingDocumentBaseFilterForCorrespondent(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class IncomingDocumentBaseSearchFilterForCorrespondent<TQueryEntity>
    : global::Sungero.Domain.SearchDialogPropertyFilter<TQueryEntity>
    where TQueryEntity : class, global::Sungero.Parties.ICounterparty
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, System.Guid entityType)
    {
      var args = new global::Sungero.Domain.PropertySearchDialogFilteringEventArgs(entityType);
      var result = new global::Sungero.Docflow.IncomingDocumentBaseCorrespondentSearchPropertyFilteringServerHandler<TQueryEntity>().CorrespondentSearchDialogFiltering(query, args);
      if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public IncomingDocumentBaseSearchFilterForCorrespondent(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class IncomingDocumentBaseFilterForInResponseTo<TQueryEntity, TSourceEntity>
    : global::Sungero.Domain.EntityPropertyFilterBase<TQueryEntity, TSourceEntity>
    where TQueryEntity : class, global::Sungero.Docflow.IOutgoingDocumentBase
    where TSourceEntity : class, global::Sungero.Docflow.IIncomingDocumentBase
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, TSourceEntity sourceEntity)
    {
      var args = new global::Sungero.Domain.PropertyFilteringEventArgs(sourceEntity);
      var result = new global::Sungero.Docflow.IncomingDocumentBaseInResponseToPropertyFilteringServerHandler<TQueryEntity>(sourceEntity).InResponseToFiltering(query, args);
      if (args.DisableUiFiltering)
        global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public IncomingDocumentBaseFilterForInResponseTo(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class IncomingDocumentBaseSearchFilterForInResponseTo<TQueryEntity>
    : global::Sungero.Domain.SearchDialogPropertyFilter<TQueryEntity>
    where TQueryEntity : class, global::Sungero.Docflow.IOutgoingDocumentBase
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, System.Guid entityType)
    {
      var args = new global::Sungero.Domain.PropertySearchDialogFilteringEventArgs(entityType);
      var result = new global::Sungero.Docflow.IncomingDocumentBaseInResponseToSearchPropertyFilteringServerHandler<TQueryEntity>().InResponseToSearchDialogFiltering(query, args);
      if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public IncomingDocumentBaseSearchFilterForInResponseTo(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class IncomingDocumentBaseFilterForAddressee<TQueryEntity, TSourceEntity>
    : global::Sungero.Domain.EntityPropertyFilterBase<TQueryEntity, TSourceEntity>
    where TQueryEntity : class, global::Sungero.Company.IEmployee
    where TSourceEntity : class, global::Sungero.Docflow.IIncomingDocumentBase
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, TSourceEntity sourceEntity)
    {
      var args = new global::Sungero.Domain.PropertyFilteringEventArgs(sourceEntity);
      var result = new global::Sungero.Docflow.IncomingDocumentBaseAddresseePropertyFilteringServerHandler<TQueryEntity>(sourceEntity).AddresseeFiltering(query, args);
      if (args.DisableUiFiltering)
        global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public IncomingDocumentBaseFilterForAddressee(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class IncomingDocumentBaseSearchFilterForAddressee<TQueryEntity>
    : global::Sungero.Domain.SearchDialogPropertyFilter<TQueryEntity>
    where TQueryEntity : class, global::Sungero.CoreEntities.IRecipient
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, System.Guid entityType)
    {
      var args = new global::Sungero.Domain.PropertySearchDialogFilteringEventArgs(entityType);
      var result = new global::Sungero.Docflow.IncomingDocumentBaseAddresseeSearchPropertyFilteringServerHandler<TQueryEntity>().AddresseeSearchDialogFiltering(query, args);
      if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public IncomingDocumentBaseSearchFilterForAddressee(string propertyName)
      : base(propertyName)
    {
    }
  }



  [global::Sungero.Domain.Filter(typeof(global::Sungero.Docflow.Server.IncomingDocumentBaseFilter<global::Sungero.Docflow.IIncomingDocumentBase>))]
  [global::Sungero.Domain.PropertyFilter(typeof(global::Sungero.Docflow.Server.IncomingDocumentBaseFilterForCorrespondent<global::Sungero.Parties.ICounterparty, global::Sungero.Docflow.IIncomingDocumentBase>), "Correspondent")]
  [global::Sungero.Domain.SearchPropertyFilter(typeof(global::Sungero.Docflow.Server.IncomingDocumentBaseSearchFilterForCorrespondent<global::Sungero.Parties.ICounterparty>), "Correspondent")]
  [global::Sungero.Domain.PropertyFilter(typeof(global::Sungero.Docflow.Server.IncomingDocumentBaseFilterForInResponseTo<global::Sungero.Docflow.IOutgoingDocumentBase, global::Sungero.Docflow.IIncomingDocumentBase>), "InResponseTo")]
  [global::Sungero.Domain.SearchPropertyFilter(typeof(global::Sungero.Docflow.Server.IncomingDocumentBaseSearchFilterForInResponseTo<global::Sungero.Docflow.IOutgoingDocumentBase>), "InResponseTo")]
  [global::Sungero.Domain.PropertyFilter(typeof(global::Sungero.Docflow.Server.IncomingDocumentBaseFilterForAddressee<global::Sungero.Company.IEmployee, global::Sungero.Docflow.IIncomingDocumentBase>), "Addressee")]
  [global::Sungero.Domain.SearchPropertyFilter(typeof(global::Sungero.Docflow.Server.IncomingDocumentBaseSearchFilterForAddressee<global::Sungero.CoreEntities.IRecipient>), "Addressee")]


  public class IncomingDocumentBase :
    global::Sungero.Docflow.Server.OfficialDocument, global::Sungero.Docflow.IIncomingDocumentBase, global::Sungero.Domain.Shared.ISecurableEntity, global::Sungero.Domain.IInternalSecurableEntity
  {
    public static new readonly global::System.Guid ClassTypeGuid = global::System.Guid.Parse("4e7bf176-40b2-4e5d-b10b-af81ad7c62c3");

    public override global::System.Guid TypeGuid
    {
      get { return global::Sungero.Docflow.Server.IncomingDocumentBase.ClassTypeGuid; }
    }

    public override string TypeName
    {
      get { return "Sungero.Docflow.IIncomingDocumentBase, Sungero.Domain.Interfaces"; }
    }

    public override string DisplayValue
    {
      get { return this.Name; }
      set { this.Name = value; }
    }

    public new virtual global::Sungero.Docflow.IIncomingDocumentBaseState State
    {
      get { return (global::Sungero.Docflow.IIncomingDocumentBaseState)base.State; }
    }

    protected override global::Sungero.Domain.Shared.IEntityState CreateState()
    {
      return new global::Sungero.Docflow.Shared.IncomingDocumentBaseState(this);
    }

    public new virtual global::Sungero.Docflow.IIncomingDocumentBaseInfo Info
    {
      get { return (global::Sungero.Docflow.IIncomingDocumentBaseInfo)base.Info; }
    }

    public new virtual global::Sungero.Docflow.IIncomingDocumentBaseAccessRights AccessRights
    {
      get { return (global::Sungero.Docflow.IIncomingDocumentBaseAccessRights)base.AccessRights; }
    }

    protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
    {
      return new global::Sungero.Docflow.Server.IncomingDocumentBaseAccessRights(this);
    }

    protected override global::Sungero.Domain.EntityFunctions CreateServerFunctions()
    {
      return new global::Sungero.Docflow.Server.IncomingDocumentBaseFunctions(this);
    }

    protected override global::Sungero.Domain.Shared.EntityFunctions CreateSharedFunctions()
    {
      return new global::Sungero.Docflow.Shared.IncomingDocumentBaseFunctions(this);
    }

    protected override object CreateHandlers() {
      return new global::Sungero.Docflow.IncomingDocumentBaseServerHandlers(this);
    }

    protected override object CreateSharedHandlers() {
      return new global::Sungero.Docflow.IncomingDocumentBaseSharedHandlers(this);
    }

    private global::System.DateTime? _Dated;
    public virtual global::System.DateTime? Dated
    {
      get
      {
        return this._Dated;
      }

      set
      {
        this.SetPropertyValue("Dated", this._Dated, value, (propertyValue) => { this._Dated = propertyValue; }, this.DatedChangedHandler);
      }
    }
    private global::System.String _InNumber;
    public virtual global::System.String InNumber
    {
      get
      {
        return this._InNumber;
      }

      set
      {
        this.SetPropertyValue("InNumber", this._InNumber, value, (propertyValue) => { this._InNumber = propertyValue; }, this.InNumberChangedHandler);
      }
    }







    private global::Sungero.Parties.ICounterparty _Correspondent;
    public virtual global::Sungero.Parties.ICounterparty Correspondent
    {
      get
      {
        return this._Correspondent;
      }

      set
      {
        this.SetPropertyValue("Correspondent", this._Correspondent, value, (propertyValue) => { this._Correspondent = propertyValue; }, this.CorrespondentChangedHandler);
      }
    }
    private global::Sungero.Docflow.IOutgoingDocumentBase _InResponseTo;
    public virtual global::Sungero.Docflow.IOutgoingDocumentBase InResponseTo
    {
      get
      {
        return this._InResponseTo;
      }

      set
      {
        this.SetPropertyValue("InResponseTo", this._InResponseTo, value, (propertyValue) => { this._InResponseTo = propertyValue; }, this.InResponseToChangedHandler);
      }
    }
    private global::Sungero.Company.IEmployee _Addressee;
    public virtual global::Sungero.Company.IEmployee Addressee
    {
      get
      {
        return this._Addressee;
      }

      set
      {
        this.SetPropertyValue("Addressee", this._Addressee, value, (propertyValue) => { this._Addressee = propertyValue; }, this.AddresseeChangedHandler);
      }
    }



    protected override global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Content.IElectronicDocumentVersions> CreateVersionsCollection()
    {
      return new global::Sungero.Domain.ChildEntityCollection<global::Sungero.Docflow.IIncomingDocumentBaseVersions>() { RootEntity = this };
    }
    protected override global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Docflow.IOfficialDocumentTracking> CreateTrackingCollection()
    {
      return new global::Sungero.Domain.ChildEntityCollection<global::Sungero.Docflow.IIncomingDocumentBaseTracking>() { RootEntity = this };
    }


    protected override global::Sungero.Domain.Shared.EntityCreatingFromServerHandler CreateCreatingFromServerHandler(
      global::Sungero.Domain.Shared.IEntity entitySource)
    {
      return new global::Sungero.Docflow.IncomingDocumentBaseCreatingFromServerHandler((global::Sungero.Docflow.IIncomingDocumentBase)entitySource, this.Info);
    }

    #region Framework events

    protected void CorrespondentChangedHandler()
    {
      var args = new global::Sungero.Docflow.Shared.IncomingDocumentBaseCorrespondentChangedEventArgs(this.State.Properties.Correspondent, this.Correspondent, this);
     ((global::Sungero.Docflow.IncomingDocumentBaseSharedHandlers)this.SharedHandlers).CorrespondentChanged(args);
    }

    protected void InResponseToChangedHandler()
    {
      var args = new global::Sungero.Docflow.Shared.IncomingDocumentBaseInResponseToChangedEventArgs(this.State.Properties.InResponseTo, this.InResponseTo, this);
     ((global::Sungero.Docflow.IncomingDocumentBaseSharedHandlers)this.SharedHandlers).InResponseToChanged(args);
    }

    protected void DatedChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.DateTimePropertyChangedEventArgs(this.State.Properties.Dated, this.Dated, this);
     ((global::Sungero.Docflow.IncomingDocumentBaseSharedHandlers)this.SharedHandlers).DatedChanged(args);
    }

    protected void AddresseeChangedHandler()
    {
      var args = new global::Sungero.Docflow.Shared.IncomingDocumentBaseAddresseeChangedEventArgs(this.State.Properties.Addressee, this.Addressee, this);
     ((global::Sungero.Docflow.IncomingDocumentBaseSharedHandlers)this.SharedHandlers).AddresseeChanged(args);
    }

    protected void InNumberChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.InNumber, this.InNumber, this);
     ((global::Sungero.Docflow.IncomingDocumentBaseSharedHandlers)this.SharedHandlers).InNumberChanged(args);
    }







    #endregion


    public IncomingDocumentBase()
    {
    }

    protected override global::Sungero.Domain.Shared.EntityConvertingFromServerHandler CreateConvertingFromServerHandler(   
      global::Sungero.Domain.Shared.IEntity entitySource)
    {
      return new global::Sungero.Docflow.IncomingDocumentBaseConvertingFromServerHandler((global::Sungero.Content.IElectronicDocument)entitySource, this.Info);
    }

  }
}

// ==================================================================
// IncomingDocumentBaseHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow
{
  public partial class IncomingDocumentBaseCorrespondentPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.EntityPropertyFilteringServerHandler
    where T : class, global::Sungero.Parties.ICounterparty
  {
    private global::Sungero.Docflow.IIncomingDocumentBase _obj
    {
      get { return (global::Sungero.Docflow.IIncomingDocumentBase)this.Entity; }
    }

    public virtual global::System.Linq.IQueryable<T> CorrespondentFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertyFilteringEventArgs e)
    {
      return query;
    }

    public IncomingDocumentBaseCorrespondentPropertyFilteringServerHandler(global::Sungero.Docflow.IIncomingDocumentBase entity)
      : base(entity)
    {
    }
  }

  public partial class IncomingDocumentBaseCorrespondentSearchPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.SearchPropertyFilteringServerHandler
    where T : class, global::Sungero.Parties.ICounterparty
  {

    public virtual global::System.Linq.IQueryable<T> CorrespondentSearchDialogFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertySearchDialogFilteringEventArgs e)
    {
      return query;
    }

    public IncomingDocumentBaseCorrespondentSearchPropertyFilteringServerHandler()
      : base()
    {
    }
  }

  public partial class IncomingDocumentBaseInResponseToPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.EntityPropertyFilteringServerHandler
    where T : class, global::Sungero.Docflow.IOutgoingDocumentBase
  {
    private global::Sungero.Docflow.IIncomingDocumentBase _obj
    {
      get { return (global::Sungero.Docflow.IIncomingDocumentBase)this.Entity; }
    }

    public IncomingDocumentBaseInResponseToPropertyFilteringServerHandler(global::Sungero.Docflow.IIncomingDocumentBase entity)
      : base(entity)
    {
    }
  }

  public partial class IncomingDocumentBaseInResponseToSearchPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.SearchPropertyFilteringServerHandler
    where T : class, global::Sungero.Docflow.IOutgoingDocumentBase
  {

    public virtual global::System.Linq.IQueryable<T> InResponseToSearchDialogFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertySearchDialogFilteringEventArgs e)
    {
      return query;
    }

    public IncomingDocumentBaseInResponseToSearchPropertyFilteringServerHandler()
      : base()
    {
    }
  }

  public partial class IncomingDocumentBaseAddresseePropertyFilteringServerHandler<T>
    : global::Sungero.Domain.EntityPropertyFilteringServerHandler
    where T : class, global::Sungero.Company.IEmployee
  {
    private global::Sungero.Docflow.IIncomingDocumentBase _obj
    {
      get { return (global::Sungero.Docflow.IIncomingDocumentBase)this.Entity; }
    }

    public virtual global::System.Linq.IQueryable<T> AddresseeFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertyFilteringEventArgs e)
    {
      return query;
    }

    public IncomingDocumentBaseAddresseePropertyFilteringServerHandler(global::Sungero.Docflow.IIncomingDocumentBase entity)
      : base(entity)
    {
    }
  }

  public partial class IncomingDocumentBaseAddresseeSearchPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.SearchPropertyFilteringServerHandler
    where T : class, global::Sungero.CoreEntities.IRecipient
  {

    public virtual global::System.Linq.IQueryable<T> AddresseeSearchDialogFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertySearchDialogFilteringEventArgs e)
    {
      return query;
    }

    public IncomingDocumentBaseAddresseeSearchPropertyFilteringServerHandler()
      : base()
    {
    }
  }



  public partial class IncomingDocumentBaseFilteringServerHandler<T>
    : global::Sungero.Docflow.OfficialDocumentFilteringServerHandler<T>  
    where T : class, global::Sungero.Docflow.IIncomingDocumentBase
  {
    private global::Sungero.Docflow.IIncomingDocumentBaseFilterState _filter
    {
      get
      {
        return (Sungero.Docflow.IIncomingDocumentBaseFilterState)this.Filter;
      }
    }

    public IncomingDocumentBaseFilteringServerHandler(global::Sungero.Docflow.IIncomingDocumentBaseFilterState filter)
    : base(filter)
    {
    }

    protected IncomingDocumentBaseFilteringServerHandler()
    {
    }

      public virtual global::System.Linq.IQueryable<Sungero.Parties.ICounterparty> CounterpartyFiltering(global::System.Linq.IQueryable<Sungero.Parties.ICounterparty> query, global::Sungero.Domain.FilteringEventArgs e)
      {
        return query;
      }

      public virtual global::System.Linq.IQueryable<Sungero.Company.IDepartment> DepartmentFiltering(global::System.Linq.IQueryable<Sungero.Company.IDepartment> query, global::Sungero.Domain.FilteringEventArgs e)
      {
        return query;
      }


  }

  public partial class IncomingDocumentBaseSearchDialogServerHandler : global::Sungero.Docflow.OfficialDocumentSearchDialogServerHandler
   {
     private global::Sungero.Docflow.Server.IncomingDocumentBaseSearchDialogModel _dialog
     {
       get
       {
         return (global::Sungero.Docflow.Server.IncomingDocumentBaseSearchDialogModel)this.Dialog;
       }
     }

     public IncomingDocumentBaseSearchDialogServerHandler(global::Sungero.Docflow.Server.IncomingDocumentBaseSearchDialogModel dialog)
       : base(dialog)
     {
     }
   }

  public partial class IncomingDocumentBaseServerHandlers : global::Sungero.Docflow.OfficialDocumentServerHandlers
  {
    private global::Sungero.Docflow.IIncomingDocumentBase _obj
    {
      get { return (global::Sungero.Docflow.IIncomingDocumentBase)this.Entity; }
    }

    public IncomingDocumentBaseServerHandlers(global::Sungero.Docflow.IIncomingDocumentBase entity)
      : base(entity)
    {
    }
  }

  public partial class IncomingDocumentBaseCreatingFromServerHandler : global::Sungero.Docflow.OfficialDocumentCreatingFromServerHandler
  {
    private global::Sungero.Docflow.IIncomingDocumentBase _source
    {
      get { return (global::Sungero.Docflow.IIncomingDocumentBase)this.Source; }
    }

    private global::Sungero.Docflow.IIncomingDocumentBaseInfo _info
    {
      get { return (global::Sungero.Docflow.IIncomingDocumentBaseInfo)this._Info; }
    }

    public IncomingDocumentBaseCreatingFromServerHandler(global::Sungero.Docflow.IIncomingDocumentBase source, global::Sungero.Docflow.IIncomingDocumentBaseInfo info)
      : base(source, info)
    {
    }
  }

}

// ==================================================================
// IncomingDocumentBaseEventArgs.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
}

// ==================================================================
// IncomingDocumentBaseAccessRights.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
  public class IncomingDocumentBaseAccessRights : 
    Sungero.Docflow.Server.OfficialDocumentAccessRights, Sungero.Docflow.IIncomingDocumentBaseAccessRights
  {

    public IncomingDocumentBaseAccessRights(global::Sungero.Domain.Shared.IEntity entity) : base(entity)
    {
    }
  }

  public class IncomingDocumentBaseTypeAccessRights : 
    Sungero.Docflow.Server.OfficialDocumentTypeAccessRights, Sungero.Docflow.IIncomingDocumentBaseAccessRights
  {

    public IncomingDocumentBaseTypeAccessRights(global::System.Type entityType) : base(entityType)
    {
    }
  }
}

// ==================================================================
// IncomingDocumentBaseRepositoryImplementer.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
    public class IncomingDocumentBaseRepositoryImplementer<T> : 
      global::Sungero.Docflow.Server.OfficialDocumentRepositoryImplementer<T>,
      global::Sungero.Docflow.IIncomingDocumentBaseRepositoryImplementer<T>
      where T : global::Sungero.Docflow.IIncomingDocumentBase 
    {
       public new global::Sungero.Docflow.IIncomingDocumentBaseAccessRights AccessRights
       {
          get { return (global::Sungero.Docflow.IIncomingDocumentBaseAccessRights)base.AccessRights; }
       }

       public new global::Sungero.Docflow.IIncomingDocumentBaseInfo Info
       {
          get { return (global::Sungero.Docflow.IIncomingDocumentBaseInfo)base.Info; }
       }

       protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
       {
         return new global::Sungero.Docflow.Server.IncomingDocumentBaseTypeAccessRights(typeof(T));
       }
    }
}

// ==================================================================
// IncomingDocumentBasePanelNavigationFilters.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
    public class IncomingDocumentBaseDocumentRegisterPanelNavigationFilter : global::Sungero.Domain.PanelNavigationFilterBase
    {
      private global::System.Linq.IQueryable Apply<T>(global::System.Linq.IQueryable query) where T: class, global::Sungero.Docflow.IIncomingDocumentBase
      {
        var typedQuery = (global::System.Linq.IQueryable<global::Sungero.Docflow.IDocumentRegister>)query;
        var typedState = (global::Sungero.Docflow.IIncomingDocumentBaseFilterState)this.State;
        var handlers = new global::Sungero.Docflow.IncomingDocumentBaseFilteringServerHandler<T>(typedState);
        var args = new global::Sungero.Domain.FilteringEventArgs();
        var result = handlers.DocumentRegisterFiltering(typedQuery, args);
        if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<global::Sungero.Docflow.IDocumentRegister>();
        return result;
      }

      public override global::System.Linq.IQueryable Apply(global::System.Linq.IQueryable query)
      {
        return this.Apply<global::Sungero.Docflow.IIncomingDocumentBase>(query);
      }
    }

    public class IncomingDocumentBaseDocumentKindPanelNavigationFilter : global::Sungero.Domain.PanelNavigationFilterBase
    {
      private global::System.Linq.IQueryable Apply<T>(global::System.Linq.IQueryable query) where T: class, global::Sungero.Docflow.IIncomingDocumentBase
      {
        var typedQuery = (global::System.Linq.IQueryable<global::Sungero.Docflow.IDocumentKind>)query;
        var typedState = (global::Sungero.Docflow.IIncomingDocumentBaseFilterState)this.State;
        var handlers = new global::Sungero.Docflow.IncomingDocumentBaseFilteringServerHandler<T>(typedState);
        var args = new global::Sungero.Domain.FilteringEventArgs();
        var result = handlers.DocumentKindFiltering(typedQuery, args);
        if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<global::Sungero.Docflow.IDocumentKind>();
        return result;
      }

      public override global::System.Linq.IQueryable Apply(global::System.Linq.IQueryable query)
      {
        return this.Apply<global::Sungero.Docflow.IIncomingDocumentBase>(query);
      }
    }

    public class IncomingDocumentBaseCounterpartyPanelNavigationFilter : global::Sungero.Domain.PanelNavigationFilterBase
    {
      private global::System.Linq.IQueryable Apply<T>(global::System.Linq.IQueryable query) where T: class, global::Sungero.Docflow.IIncomingDocumentBase
      {
        var typedQuery = (global::System.Linq.IQueryable<global::Sungero.Parties.ICounterparty>)query;
        var typedState = (global::Sungero.Docflow.IIncomingDocumentBaseFilterState)this.State;
        var handlers = new global::Sungero.Docflow.IncomingDocumentBaseFilteringServerHandler<T>(typedState);
        var args = new global::Sungero.Domain.FilteringEventArgs();
        var result = handlers.CounterpartyFiltering(typedQuery, args);
        if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<global::Sungero.Parties.ICounterparty>();
        return result;
      }

      public override global::System.Linq.IQueryable Apply(global::System.Linq.IQueryable query)
      {
        return this.Apply<global::Sungero.Docflow.IIncomingDocumentBase>(query);
      }
    }

    public class IncomingDocumentBaseDepartmentPanelNavigationFilter : global::Sungero.Domain.PanelNavigationFilterBase
    {
      private global::System.Linq.IQueryable Apply<T>(global::System.Linq.IQueryable query) where T: class, global::Sungero.Docflow.IIncomingDocumentBase
      {
        var typedQuery = (global::System.Linq.IQueryable<global::Sungero.Company.IDepartment>)query;
        var typedState = (global::Sungero.Docflow.IIncomingDocumentBaseFilterState)this.State;
        var handlers = new global::Sungero.Docflow.IncomingDocumentBaseFilteringServerHandler<T>(typedState);
        var args = new global::Sungero.Domain.FilteringEventArgs();
        var result = handlers.DepartmentFiltering(typedQuery, args);
        if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<global::Sungero.Company.IDepartment>();
        return result;
      }

      public override global::System.Linq.IQueryable Apply(global::System.Linq.IQueryable query)
      {
        return this.Apply<global::Sungero.Docflow.IIncomingDocumentBase>(query);
      }
    }

}

// ==================================================================
// IncomingDocumentBaseServerFunctions.g.cs
// ==================================================================

namespace Sungero.Docflow.Server
{
  public partial class IncomingDocumentBaseFunctions : global::Sungero.Docflow.Server.OfficialDocumentFunctions
  {
    private global::Sungero.Docflow.IIncomingDocumentBase _obj
    {
      get { return (global::Sungero.Docflow.IIncomingDocumentBase)this.Entity; }
    }

    public IncomingDocumentBaseFunctions(global::Sungero.Docflow.IIncomingDocumentBase entity) : base(entity) { }
  }
}

// ==================================================================
// IncomingDocumentBaseFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Functions
{
  internal static class IncomingDocumentBase
  {
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.IncomingDocumentBaseFunctions" />
    internal static  void AddRelatedDocumentsToAttachmentGroup(global::Sungero.Docflow.IIncomingDocumentBase incomingDocumentBase, Sungero.Workflow.Interfaces.IWorkflowEntityAttachmentGroup group)
    {
      var functions = (global::Sungero.Docflow.Shared.IncomingDocumentBaseFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)incomingDocumentBase).FunctionsContainer.SharedFunctions;
    functions.AddRelatedDocumentsToAttachmentGroup(group);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.IncomingDocumentBaseFunctions" />
    internal static  global::System.Collections.Generic.List<global::Sungero.Parties.ICounterparty> GetCounterparties(global::Sungero.Docflow.IIncomingDocumentBase incomingDocumentBase)
    {
      var functions = (global::Sungero.Docflow.Shared.IncomingDocumentBaseFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)incomingDocumentBase).FunctionsContainer.SharedFunctions;
      return functions.GetCounterparties();
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.IncomingDocumentBaseFunctions" />
    internal static  void ChangeCounterpartyPropertyAccess(global::Sungero.Docflow.IIncomingDocumentBase incomingDocumentBase, global::System.Boolean isEnabled, global::System.Boolean counterpartyCodeInNumber)
    {
      var functions = (global::Sungero.Docflow.Shared.IncomingDocumentBaseFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)incomingDocumentBase).FunctionsContainer.SharedFunctions;
    functions.ChangeCounterpartyPropertyAccess(isEnabled, counterpartyCodeInNumber);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.IncomingDocumentBaseFunctions" />
    internal static  void EnableRegistrationNumberAndDate(global::Sungero.Docflow.IIncomingDocumentBase incomingDocumentBase)
    {
      var functions = (global::Sungero.Docflow.Shared.IncomingDocumentBaseFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)incomingDocumentBase).FunctionsContainer.SharedFunctions;
    functions.EnableRegistrationNumberAndDate();
    }

  }
}

// ==================================================================
// IncomingDocumentBaseServerPublicFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
  public class IncomingDocumentBaseServerPublicFunctions : global::Sungero.Docflow.Server.IIncomingDocumentBaseServerPublicFunctions
  {
  }
}

// ==================================================================
// IncomingDocumentBaseQueries.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Queries
{
  public class IncomingDocumentBase
  {
    private static global::Sungero.Domain.SqlQueryResolver resolver = new global::Sungero.Domain.SqlQueryResolver("Sungero.Docflow.Server.IncomingDocumentBase.IncomingDocumentBaseQueries.xml", System.Reflection.Assembly.GetExecutingAssembly());
  }
}

// ==================================================================
// IncomingDocumentBaseServerHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow
{
  public partial class IncomingDocumentBaseConvertingFromServerHandler : global::Sungero.Docflow.OfficialDocumentConvertingFromServerHandler
  { 
    private global::Sungero.Docflow.IIncomingDocumentBaseInfo _info
    {
      get { return (global::Sungero.Docflow.IIncomingDocumentBaseInfo)this._Info; }
    }

    public IncomingDocumentBaseConvertingFromServerHandler(global::Sungero.Content.IElectronicDocument source, global::Sungero.Docflow.IIncomingDocumentBaseInfo info)
      : base(source, info)
    {
    }
  }
}
