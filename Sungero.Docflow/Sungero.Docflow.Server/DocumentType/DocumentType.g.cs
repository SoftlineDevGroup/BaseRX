
// ==================================================================
// DocumentType.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
    public class DocumentTypeFilter<T> :
      global::Sungero.Domain.EntityFilterBase<T>
      where T : class, global::Sungero.Docflow.IDocumentType
    {
      protected new global::Sungero.Docflow.IDocumentTypeFilterState Filter { get; private set; }

      private global::Sungero.Docflow.IDocumentTypeFilterState filter
      {
        get
        {
          return this.Filter;
        }
      }

      protected override global::System.Linq.IQueryable<T> ApplyAppliedFilter(global::System.Linq.IQueryable<T> query)
      {
        return base.ApplyAppliedFilter(query);
      }

      public DocumentTypeFilter(global::Sungero.Docflow.IDocumentTypeFilterState filter)
      : base()
      {
        this.Filter = filter;
      }

      protected DocumentTypeFilter()
      {
      }
    }
      public class DocumentTypeUiFilter<T> :
        global::Sungero.Domain.EntityUiFilterBase<T>
        where T : class, global::Sungero.Docflow.IDocumentType
      {
        protected override global::System.Linq.IQueryable<T> ApplyAppliedFilter(global::System.Linq.IQueryable<T> query)
        {
          return base.ApplyAppliedFilter(query);
        }
      }

    public class DocumentTypeSearchDialogModel : global::Sungero.CoreEntities.Server.DatabookEntrySearchDialogModel
        {
                  public override global::System.Int32? Id { get; protected set; }



                  public virtual global::System.String Name { get; protected set; }
                  public virtual global::System.String DocumentTypeGuid { get; protected set; }
                  public virtual global::System.Boolean? IsRegistrationAllowed { get; protected set; }


                  public virtual global::System.Collections.Generic.IEnumerable<Sungero.Core.Enumeration> DocumentFlow { get; protected set; }


        }





  [global::Sungero.Domain.Filter(typeof(global::Sungero.Docflow.Server.DocumentTypeFilter<global::Sungero.Docflow.IDocumentType>))]
  [global::Sungero.Domain.UiFilter(typeof(global::Sungero.Docflow.Server.DocumentTypeUiFilter<global::Sungero.Docflow.IDocumentType>))]

  public class DocumentType :
    global::Sungero.CoreEntities.Server.DatabookEntry, global::Sungero.Docflow.IDocumentType
  {
    public static new readonly global::System.Guid ClassTypeGuid = global::System.Guid.Parse("0896aa80-e1da-4a1e-9485-d172f8e242bc");

    public override global::System.Guid TypeGuid
    {
      get { return global::Sungero.Docflow.Server.DocumentType.ClassTypeGuid; }
    }

    public override string TypeName
    {
      get { return "Sungero.Docflow.IDocumentType, Sungero.Domain.Interfaces"; }
    }

    public override string DisplayValue
    {
      get { return this.Name; }
      set { this.Name = value; }
    }

    public new virtual global::Sungero.Docflow.IDocumentTypeState State
    {
      get { return (global::Sungero.Docflow.IDocumentTypeState)base.State; }
    }

    protected override global::Sungero.Domain.Shared.IEntityState CreateState()
    {
      return new global::Sungero.Docflow.Shared.DocumentTypeState(this);
    }

    public new virtual global::Sungero.Docflow.IDocumentTypeInfo Info
    {
      get { return (global::Sungero.Docflow.IDocumentTypeInfo)base.Info; }
    }

    public new virtual global::Sungero.Docflow.IDocumentTypeAccessRights AccessRights
    {
      get { return (global::Sungero.Docflow.IDocumentTypeAccessRights)base.AccessRights; }
    }

    protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
    {
      return new global::Sungero.Docflow.Server.DocumentTypeAccessRights(this);
    }

    protected override global::Sungero.Domain.EntityFunctions CreateServerFunctions()
    {
      return new global::Sungero.Docflow.Server.DocumentTypeFunctions(this);
    }

    protected override global::Sungero.Domain.Shared.EntityFunctions CreateSharedFunctions()
    {
      return new global::Sungero.Docflow.Shared.DocumentTypeFunctions(this);
    }

    protected override object CreateHandlers() {
      return new global::Sungero.Docflow.DocumentTypeServerHandlers(this);
    }

    protected override object CreateSharedHandlers() {
      return new global::Sungero.Docflow.DocumentTypeSharedHandlers(this);
    }

    private global::System.String _Name;
    public virtual global::System.String Name
    {
      get
      {
        return this._Name;
      }

      set
      {
        this.SetPropertyValue("Name", this._Name, value, (propertyValue) => { this._Name = propertyValue; }, this.NameChangedHandler);
      }
    }
    private global::System.String _DocumentTypeGuid;
    public virtual global::System.String DocumentTypeGuid
    {
      get
      {
        return this._DocumentTypeGuid;
      }

      set
      {
        this.SetPropertyValue("DocumentTypeGuid", this._DocumentTypeGuid, value, (propertyValue) => { this._DocumentTypeGuid = propertyValue; }, this.DocumentTypeGuidChangedHandler);
      }
    }
    private global::System.Boolean? _IsRegistrationAllowed;
    public virtual global::System.Boolean? IsRegistrationAllowed
    {
      get
      {
        return this._IsRegistrationAllowed;
      }

      set
      {
        this.SetPropertyValue("IsRegistrationAllowed", this._IsRegistrationAllowed, value, (propertyValue) => { this._IsRegistrationAllowed = propertyValue; }, this.IsRegistrationAllowedChangedHandler);
      }
    }






    private static global::Sungero.Domain.Shared.EnumerationItems _DocumentFlowItems = new global::Sungero.Domain.Shared.EnumerationItems(
      null,
      typeof(global::Sungero.Docflow.DocumentType.DocumentFlow),
      typeof(global::Sungero.Docflow.Server.DocumentType),
      "DocumentFlow");

    public static global::Sungero.Domain.Shared.EnumerationItems DocumentFlowItems
    {
      get { return global::Sungero.Docflow.Server.DocumentType._DocumentFlowItems; }
    }

    public virtual global::Sungero.Domain.Shared.EnumerationItems DocumentFlowAllowedItems
    {
      get { return global::Sungero.Docflow.Server.DocumentType.DocumentFlowItems; }
    }

    private global::Sungero.Core.Enumeration? _DocumentFlow;

    public virtual global::Sungero.Core.Enumeration? DocumentFlow
    {
      get { return this._DocumentFlow; }
      set { this.SetEnumPropertyValue("DocumentFlow", this._DocumentFlow, value, (propertyValue) => { this._DocumentFlow = propertyValue; }, this.DocumentFlowChangedHandler, this.DocumentFlowAllowedItems); }
    }





    protected override global::Sungero.Domain.Shared.EntityCreatingFromServerHandler CreateCreatingFromServerHandler(
      global::Sungero.Domain.Shared.IEntity entitySource)
    {
      return new global::Sungero.Docflow.DocumentTypeCreatingFromServerHandler((global::Sungero.Docflow.IDocumentType)entitySource, this.Info);
    }

    #region Framework events

    protected void NameChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.Name, this.Name, this);
     ((global::Sungero.Docflow.DocumentTypeSharedHandlers)this.SharedHandlers).NameChanged(args);
    }

    protected void DocumentTypeGuidChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.DocumentTypeGuid, this.DocumentTypeGuid, this);
     ((global::Sungero.Docflow.DocumentTypeSharedHandlers)this.SharedHandlers).DocumentTypeGuidChanged(args);
    }

    protected void DocumentFlowChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.EnumerationPropertyChangedEventArgs(this.State.Properties.DocumentFlow, this.DocumentFlow, this);
     ((global::Sungero.Docflow.DocumentTypeSharedHandlers)this.SharedHandlers).DocumentFlowChanged(args);
    }

    protected void IsRegistrationAllowedChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.BooleanPropertyChangedEventArgs(this.State.Properties.IsRegistrationAllowed, this.IsRegistrationAllowed, this);
     ((global::Sungero.Docflow.DocumentTypeSharedHandlers)this.SharedHandlers).IsRegistrationAllowedChanged(args);
    }



    #endregion


    public DocumentType()
    {
    }

  }
}

// ==================================================================
// DocumentTypeHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow
{

  public partial class DocumentTypeFilteringServerHandler<T>
    : global::Sungero.Domain.EntityFilteringServerHandler<T>  
    where T : class, global::Sungero.Docflow.IDocumentType
  {
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    protected new global::Sungero.Docflow.IDocumentTypeFilterState Filter { get; private set; }

    private global::Sungero.Docflow.IDocumentTypeFilterState _filter
    {
      get
      {
        return this.Filter;
      }
    }

    public DocumentTypeFilteringServerHandler(global::Sungero.Docflow.IDocumentTypeFilterState filter)
    : base()
    {
      this.Filter = filter;
    }

    protected DocumentTypeFilteringServerHandler()
    {
    }

    public override global::System.Linq.IQueryable<T> Filtering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.FilteringEventArgs e)
    {
      return query;
    }


  }

  public partial class DocumentTypeUiFilteringServerHandler<T>
    : global::Sungero.Domain.EntityUiFilteringServerHandler<T>
    where T : class, global::Sungero.Docflow.IDocumentType
  {
    public override global::System.Linq.IQueryable<T> Filtering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.UiFilteringEventArgs e)
    {
      query = base.Filtering(query, e);
            return query;
    }
  }

  public partial class DocumentTypeSearchDialogServerHandler : global::Sungero.CoreEntities.DatabookEntrySearchDialogServerHandler
   {
     private global::Sungero.Docflow.Server.DocumentTypeSearchDialogModel _dialog
     {
       get
       {
         return (global::Sungero.Docflow.Server.DocumentTypeSearchDialogModel)this.Dialog;
       }
     }

     public DocumentTypeSearchDialogServerHandler(global::Sungero.Docflow.Server.DocumentTypeSearchDialogModel dialog)
       : base(dialog)
     {
     }
   }

  public partial class DocumentTypeServerHandlers : global::Sungero.CoreEntities.DatabookEntryServerHandlers
  {
    private global::Sungero.Docflow.IDocumentType _obj
    {
      get { return (global::Sungero.Docflow.IDocumentType)this.Entity; }
    }

    public DocumentTypeServerHandlers(global::Sungero.Docflow.IDocumentType entity)
      : base(entity)
    {
    }
  }

  public partial class DocumentTypeCreatingFromServerHandler : global::Sungero.CoreEntities.DatabookEntryCreatingFromServerHandler
  {
    private global::Sungero.Docflow.IDocumentType _source
    {
      get { return (global::Sungero.Docflow.IDocumentType)this.Source; }
    }

    private global::Sungero.Docflow.IDocumentTypeInfo _info
    {
      get { return (global::Sungero.Docflow.IDocumentTypeInfo)this._Info; }
    }

    public DocumentTypeCreatingFromServerHandler(global::Sungero.Docflow.IDocumentType source, global::Sungero.Docflow.IDocumentTypeInfo info)
      : base(source, info)
    {
    }
  }

}

// ==================================================================
// DocumentTypeEventArgs.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
}

// ==================================================================
// DocumentTypeAccessRights.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
  public class DocumentTypeAccessRights : 
    Sungero.CoreEntities.Server.DatabookEntryAccessRights, Sungero.Docflow.IDocumentTypeAccessRights
  {

    public DocumentTypeAccessRights(global::Sungero.Domain.Shared.IEntity entity) : base(entity)
    {
    }
  }

  public class DocumentTypeTypeAccessRights : 
    Sungero.CoreEntities.Server.DatabookEntryTypeAccessRights, Sungero.Docflow.IDocumentTypeAccessRights
  {

    public DocumentTypeTypeAccessRights(global::System.Type entityType) : base(entityType)
    {
    }
  }
}

// ==================================================================
// DocumentTypeRepositoryImplementer.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
    public class DocumentTypeRepositoryImplementer<T> : 
      global::Sungero.Domain.RepositoryImplementer<T>,
      global::Sungero.Docflow.IDocumentTypeRepositoryImplementer<T>
      where T : global::Sungero.Docflow.IDocumentType 
    {
       public new global::Sungero.Docflow.IDocumentTypeAccessRights AccessRights
       {
          get { return (global::Sungero.Docflow.IDocumentTypeAccessRights)base.AccessRights; }
       }

       public new global::Sungero.Docflow.IDocumentTypeInfo Info
       {
          get { return (global::Sungero.Docflow.IDocumentTypeInfo)base.Info; }
       }

       protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
       {
         return new global::Sungero.Docflow.Server.DocumentTypeTypeAccessRights(typeof(T));
       }
    }
}

// ==================================================================
// DocumentTypePanelNavigationFilters.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
}

// ==================================================================
// DocumentTypeServerFunctions.g.cs
// ==================================================================

namespace Sungero.Docflow.Server
{
  public partial class DocumentTypeFunctions : global::Sungero.CoreEntities.Server.DatabookEntryFunctions
  {
    private global::Sungero.Docflow.IDocumentType _obj
    {
      get { return (global::Sungero.Docflow.IDocumentType)this.Entity; }
    }

    public DocumentTypeFunctions(global::Sungero.Docflow.IDocumentType entity) : base(entity) { }
  }
}

// ==================================================================
// DocumentTypeFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Functions
{
  internal static class DocumentType
  {
  }
}

// ==================================================================
// DocumentTypeServerPublicFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
  public class DocumentTypeServerPublicFunctions : global::Sungero.Docflow.Server.IDocumentTypeServerPublicFunctions
  {
  }
}

// ==================================================================
// DocumentTypeQueries.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Queries
{
  public class DocumentType
  {
    private static global::Sungero.Domain.SqlQueryResolver resolver = new global::Sungero.Domain.SqlQueryResolver("Sungero.Docflow.Server.DocumentType.DocumentTypeQueries.xml", System.Reflection.Assembly.GetExecutingAssembly());
  }
}
