
// ==================================================================
// ConditionBase.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
    public class ConditionBaseFilter<T> :
      global::Sungero.Domain.EntityFilterBase<T>
      where T : class, global::Sungero.Docflow.IConditionBase
    {
      protected new global::Sungero.Docflow.IConditionBaseFilterState Filter { get; private set; }

      private global::Sungero.Docflow.IConditionBaseFilterState filter
      {
        get
        {
          return this.Filter;
        }
      }

      protected override global::System.Linq.IQueryable<T> ApplyAppliedFilter(global::System.Linq.IQueryable<T> query)
      {
        return base.ApplyAppliedFilter(query);
      }

      public ConditionBaseFilter(global::Sungero.Docflow.IConditionBaseFilterState filter)
      : base()
      {
        this.Filter = filter;
      }

      protected ConditionBaseFilter()
      {
      }
    }
      public class ConditionBaseUiFilter<T> :
        global::Sungero.Domain.EntityUiFilterBase<T>
        where T : class, global::Sungero.Docflow.IConditionBase
      {
        protected override global::System.Linq.IQueryable<T> ApplyAppliedFilter(global::System.Linq.IQueryable<T> query)
        {
          return base.ApplyAppliedFilter(query);
        }
      }

    public class ConditionBaseSearchDialogModel : global::Sungero.CoreEntities.Server.DatabookEntrySearchDialogModel
        {
                  public override global::System.Int32? Id { get; protected set; }



                  public virtual global::System.String Name { get; protected set; }
                  public virtual global::System.Double? Amount { get; protected set; }


                  public virtual global::System.Collections.Generic.IEnumerable<Sungero.Core.Enumeration> ConditionType { get; protected set; }
                  public virtual global::System.Collections.Generic.IEnumerable<Sungero.Core.Enumeration> AmountOperator { get; protected set; }
                  public virtual global::System.Collections.Generic.IEnumerable<Sungero.Docflow.IApprovalRoleBase> ApprovalRole { get; protected set; }
                  public virtual global::System.Collections.Generic.IEnumerable<Sungero.Docflow.IApprovalRoleBase> ApprovalRoleForComparison { get; protected set; }
                  public virtual global::System.Collections.Generic.IEnumerable<Sungero.CoreEntities.IRecipient> RecipientForComparison { get; protected set; }
                  public virtual global::System.Collections.Generic.IEnumerable<Sungero.Docflow.IDocumentKind> AddendaDocumentKind { get; protected set; }


                   [Sungero.Domain.Shared.HideInDevStudio()]
                   public ConditionBaseCurrenciesModel Currencies { get; protected set; }
                   [Sungero.Domain.Shared.HideInDevStudio()]
                   public ConditionBaseDocumentKindsModel DocumentKinds { get; protected set; }
                   [Sungero.Domain.Shared.HideInDevStudio()]
                   public ConditionBaseConditionDocumentKindsModel ConditionDocumentKinds { get; protected set; }
                   [Sungero.Domain.Shared.HideInDevStudio()]
                   public ConditionBaseDeliveryMethodsModel DeliveryMethods { get; protected set; }

        }


      public class ConditionBaseCurrenciesModel : global::Sungero.Domain.CollectionPropertySearchDialogModel
          {
            public override global::System.Int32? Id { get; protected set; }


         }
      public class ConditionBaseDocumentKindsModel : global::Sungero.Domain.CollectionPropertySearchDialogModel
          {
            public override global::System.Int32? Id { get; protected set; }


         }
      public class ConditionBaseConditionDocumentKindsModel : global::Sungero.Domain.CollectionPropertySearchDialogModel
          {
            public override global::System.Int32? Id { get; protected set; }


         }
      public class ConditionBaseDeliveryMethodsModel : global::Sungero.Domain.CollectionPropertySearchDialogModel
          {
            public override global::System.Int32? Id { get; protected set; }


         }



  public class ConditionBaseFilterForApprovalRole<TQueryEntity, TSourceEntity>
    : global::Sungero.Domain.EntityPropertyFilterBase<TQueryEntity, TSourceEntity>
    where TQueryEntity : class, global::Sungero.Docflow.IApprovalRoleBase
    where TSourceEntity : class, global::Sungero.Docflow.IConditionBase
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, TSourceEntity sourceEntity)
    {
      var args = new global::Sungero.Domain.PropertyFilteringEventArgs(sourceEntity);
      var result = new global::Sungero.Docflow.ConditionBaseApprovalRolePropertyFilteringServerHandler<TQueryEntity>(sourceEntity).ApprovalRoleFiltering(query, args);
      if (args.DisableUiFiltering)
        global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public ConditionBaseFilterForApprovalRole(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class ConditionBaseSearchFilterForApprovalRole<TQueryEntity>
    : global::Sungero.Domain.SearchDialogPropertyFilter<TQueryEntity>
    where TQueryEntity : class, global::Sungero.Docflow.IApprovalRoleBase
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, System.Guid entityType)
    {
      var args = new global::Sungero.Domain.PropertySearchDialogFilteringEventArgs(entityType);
      var result = new global::Sungero.Docflow.ConditionBaseApprovalRoleSearchPropertyFilteringServerHandler<TQueryEntity>().ApprovalRoleSearchDialogFiltering(query, args);
      if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public ConditionBaseSearchFilterForApprovalRole(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class ConditionBaseFilterForApprovalRoleForComparison<TQueryEntity, TSourceEntity>
    : global::Sungero.Domain.EntityPropertyFilterBase<TQueryEntity, TSourceEntity>
    where TQueryEntity : class, global::Sungero.Docflow.IApprovalRoleBase
    where TSourceEntity : class, global::Sungero.Docflow.IConditionBase
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, TSourceEntity sourceEntity)
    {
      var args = new global::Sungero.Domain.PropertyFilteringEventArgs(sourceEntity);
      var result = new global::Sungero.Docflow.ConditionBaseApprovalRoleForComparisonPropertyFilteringServerHandler<TQueryEntity>(sourceEntity).ApprovalRoleForComparisonFiltering(query, args);
      if (args.DisableUiFiltering)
        global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public ConditionBaseFilterForApprovalRoleForComparison(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class ConditionBaseSearchFilterForApprovalRoleForComparison<TQueryEntity>
    : global::Sungero.Domain.SearchDialogPropertyFilter<TQueryEntity>
    where TQueryEntity : class, global::Sungero.Docflow.IApprovalRoleBase
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, System.Guid entityType)
    {
      var args = new global::Sungero.Domain.PropertySearchDialogFilteringEventArgs(entityType);
      var result = new global::Sungero.Docflow.ConditionBaseApprovalRoleForComparisonSearchPropertyFilteringServerHandler<TQueryEntity>().ApprovalRoleForComparisonSearchDialogFiltering(query, args);
      if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public ConditionBaseSearchFilterForApprovalRoleForComparison(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class ConditionBaseFilterForRecipientForComparison<TQueryEntity, TSourceEntity>
    : global::Sungero.Domain.EntityPropertyFilterBase<TQueryEntity, TSourceEntity>
    where TQueryEntity : class, global::Sungero.CoreEntities.IRecipient
    where TSourceEntity : class, global::Sungero.Docflow.IConditionBase
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, TSourceEntity sourceEntity)
    {
      var args = new global::Sungero.Domain.PropertyFilteringEventArgs(sourceEntity);
      var result = new global::Sungero.Docflow.ConditionBaseRecipientForComparisonPropertyFilteringServerHandler<TQueryEntity>(sourceEntity).RecipientForComparisonFiltering(query, args);
      if (args.DisableUiFiltering)
        global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public ConditionBaseFilterForRecipientForComparison(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class ConditionBaseSearchFilterForRecipientForComparison<TQueryEntity>
    : global::Sungero.Domain.SearchDialogPropertyFilter<TQueryEntity>
    where TQueryEntity : class, global::Sungero.CoreEntities.IRecipient
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, System.Guid entityType)
    {
      var args = new global::Sungero.Domain.PropertySearchDialogFilteringEventArgs(entityType);
      var result = new global::Sungero.Docflow.ConditionBaseRecipientForComparisonSearchPropertyFilteringServerHandler<TQueryEntity>().RecipientForComparisonSearchDialogFiltering(query, args);
      if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public ConditionBaseSearchFilterForRecipientForComparison(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class ConditionBaseFilterForAddendaDocumentKind<TQueryEntity, TSourceEntity>
    : global::Sungero.Domain.EntityPropertyFilterBase<TQueryEntity, TSourceEntity>
    where TQueryEntity : class, global::Sungero.Docflow.IDocumentKind
    where TSourceEntity : class, global::Sungero.Docflow.IConditionBase
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, TSourceEntity sourceEntity)
    {
      var args = new global::Sungero.Domain.PropertyFilteringEventArgs(sourceEntity);
      var result = new global::Sungero.Docflow.ConditionBaseAddendaDocumentKindPropertyFilteringServerHandler<TQueryEntity>(sourceEntity).AddendaDocumentKindFiltering(query, args);
      if (args.DisableUiFiltering)
        global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public ConditionBaseFilterForAddendaDocumentKind(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class ConditionBaseSearchFilterForAddendaDocumentKind<TQueryEntity>
    : global::Sungero.Domain.SearchDialogPropertyFilter<TQueryEntity>
    where TQueryEntity : class, global::Sungero.Docflow.IDocumentKind
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, System.Guid entityType)
    {
      var args = new global::Sungero.Domain.PropertySearchDialogFilteringEventArgs(entityType);
      var result = new global::Sungero.Docflow.ConditionBaseAddendaDocumentKindSearchPropertyFilteringServerHandler<TQueryEntity>().AddendaDocumentKindSearchDialogFiltering(query, args);
      if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public ConditionBaseSearchFilterForAddendaDocumentKind(string propertyName)
      : base(propertyName)
    {
    }
  }



  [global::Sungero.Domain.Filter(typeof(global::Sungero.Docflow.Server.ConditionBaseFilter<global::Sungero.Docflow.IConditionBase>))]
  [global::Sungero.Domain.UiFilter(typeof(global::Sungero.Docflow.Server.ConditionBaseUiFilter<global::Sungero.Docflow.IConditionBase>))]
  [global::Sungero.Domain.PropertyFilter(typeof(global::Sungero.Docflow.Server.ConditionBaseFilterForApprovalRole<global::Sungero.Docflow.IApprovalRoleBase, global::Sungero.Docflow.IConditionBase>), "ApprovalRole")]
  [global::Sungero.Domain.SearchPropertyFilter(typeof(global::Sungero.Docflow.Server.ConditionBaseSearchFilterForApprovalRole<global::Sungero.Docflow.IApprovalRoleBase>), "ApprovalRole")]
  [global::Sungero.Domain.PropertyFilter(typeof(global::Sungero.Docflow.Server.ConditionBaseFilterForApprovalRoleForComparison<global::Sungero.Docflow.IApprovalRoleBase, global::Sungero.Docflow.IConditionBase>), "ApprovalRoleForComparison")]
  [global::Sungero.Domain.SearchPropertyFilter(typeof(global::Sungero.Docflow.Server.ConditionBaseSearchFilterForApprovalRoleForComparison<global::Sungero.Docflow.IApprovalRoleBase>), "ApprovalRoleForComparison")]
  [global::Sungero.Domain.PropertyFilter(typeof(global::Sungero.Docflow.Server.ConditionBaseFilterForRecipientForComparison<global::Sungero.CoreEntities.IRecipient, global::Sungero.Docflow.IConditionBase>), "RecipientForComparison")]
  [global::Sungero.Domain.SearchPropertyFilter(typeof(global::Sungero.Docflow.Server.ConditionBaseSearchFilterForRecipientForComparison<global::Sungero.CoreEntities.IRecipient>), "RecipientForComparison")]
  [global::Sungero.Domain.PropertyFilter(typeof(global::Sungero.Docflow.Server.ConditionBaseFilterForAddendaDocumentKind<global::Sungero.Docflow.IDocumentKind, global::Sungero.Docflow.IConditionBase>), "AddendaDocumentKind")]
  [global::Sungero.Domain.SearchPropertyFilter(typeof(global::Sungero.Docflow.Server.ConditionBaseSearchFilterForAddendaDocumentKind<global::Sungero.Docflow.IDocumentKind>), "AddendaDocumentKind")]


  public class ConditionBase :
    global::Sungero.CoreEntities.Server.DatabookEntry, global::Sungero.Docflow.IConditionBase
  {
    public static new readonly global::System.Guid ClassTypeGuid = global::System.Guid.Parse("325a0811-c109-483d-bf57-3246eade5644");

    public override global::System.Guid TypeGuid
    {
      get { return global::Sungero.Docflow.Server.ConditionBase.ClassTypeGuid; }
    }

    public override string TypeName
    {
      get { return "Sungero.Docflow.IConditionBase, Sungero.Domain.Interfaces"; }
    }

    public override string DisplayValue
    {
      get { return this.Name; }
      set { this.Name = value; }
    }

    public new virtual global::Sungero.Docflow.IConditionBaseState State
    {
      get { return (global::Sungero.Docflow.IConditionBaseState)base.State; }
    }

    protected override global::Sungero.Domain.Shared.IEntityState CreateState()
    {
      return new global::Sungero.Docflow.Shared.ConditionBaseState(this);
    }

    public new virtual global::Sungero.Docflow.IConditionBaseInfo Info
    {
      get { return (global::Sungero.Docflow.IConditionBaseInfo)base.Info; }
    }

    public new virtual global::Sungero.Docflow.IConditionBaseAccessRights AccessRights
    {
      get { return (global::Sungero.Docflow.IConditionBaseAccessRights)base.AccessRights; }
    }

    protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
    {
      return new global::Sungero.Docflow.Server.ConditionBaseAccessRights(this);
    }

    protected override global::Sungero.Domain.EntityFunctions CreateServerFunctions()
    {
      return new global::Sungero.Docflow.Server.ConditionBaseFunctions(this);
    }

    protected override global::Sungero.Domain.Shared.EntityFunctions CreateSharedFunctions()
    {
      return new global::Sungero.Docflow.Shared.ConditionBaseFunctions(this);
    }

    protected override object CreateHandlers() {
      return new global::Sungero.Docflow.ConditionBaseServerHandlers(this);
    }

    protected override object CreateSharedHandlers() {
      return new global::Sungero.Docflow.ConditionBaseSharedHandlers(this);
    }

    private global::System.String _Name;
    public virtual global::System.String Name
    {
      get
      {
        return this._Name;
      }

      set
      {
        this.SetPropertyValue("Name", this._Name, value, (propertyValue) => { this._Name = propertyValue; }, this.NameChangedHandler);
      }
    }
    private global::System.Double? _Amount;
    public virtual global::System.Double? Amount
    {
      get
      {
        return this._Amount;
      }

      set
      {
        this.SetPropertyValue("Amount", this._Amount, value, (propertyValue) => { this._Amount = propertyValue; }, this.AmountChangedHandler);
      }
    }



    private global::System.String _Note;
    [global::Sungero.Domain.Shared.DoNotSavePreviousValue]
    public virtual global::System.String Note
    {
      get
      {
        return this._Note;
      }

      set
      {
        this.SetPropertyValue("Note", this._Note, value, (propertyValue) => { this._Note = propertyValue; }, this.NoteChangedHandler);
      }
    }




    private static global::Sungero.Domain.Shared.EnumerationItems _ConditionTypeItems = new global::Sungero.Domain.Shared.EnumerationItems(
      null,
      typeof(global::Sungero.Docflow.ConditionBase.ConditionType),
      typeof(global::Sungero.Docflow.Server.ConditionBase),
      "ConditionType");

    public static global::Sungero.Domain.Shared.EnumerationItems ConditionTypeItems
    {
      get { return global::Sungero.Docflow.Server.ConditionBase._ConditionTypeItems; }
    }

    public virtual global::Sungero.Domain.Shared.EnumerationItems ConditionTypeAllowedItems
    {
      get { return global::Sungero.Docflow.Server.ConditionBase.ConditionTypeItems; }
    }

    private global::Sungero.Core.Enumeration? _ConditionType;

    public virtual global::Sungero.Core.Enumeration? ConditionType
    {
      get { return this._ConditionType; }
      set { this.SetEnumPropertyValue("ConditionType", this._ConditionType, value, (propertyValue) => { this._ConditionType = propertyValue; }, this.ConditionTypeChangedHandler, this.ConditionTypeAllowedItems); }
    }
    private static global::Sungero.Domain.Shared.EnumerationItems _AmountOperatorItems = new global::Sungero.Domain.Shared.EnumerationItems(
      null,
      typeof(global::Sungero.Docflow.ConditionBase.AmountOperator),
      typeof(global::Sungero.Docflow.Server.ConditionBase),
      "AmountOperator");

    public static global::Sungero.Domain.Shared.EnumerationItems AmountOperatorItems
    {
      get { return global::Sungero.Docflow.Server.ConditionBase._AmountOperatorItems; }
    }

    public virtual global::Sungero.Domain.Shared.EnumerationItems AmountOperatorAllowedItems
    {
      get { return global::Sungero.Docflow.Server.ConditionBase.AmountOperatorItems; }
    }

    private global::Sungero.Core.Enumeration? _AmountOperator;

    public virtual global::Sungero.Core.Enumeration? AmountOperator
    {
      get { return this._AmountOperator; }
      set { this.SetEnumPropertyValue("AmountOperator", this._AmountOperator, value, (propertyValue) => { this._AmountOperator = propertyValue; }, this.AmountOperatorChangedHandler, this.AmountOperatorAllowedItems); }
    }


    private global::Sungero.Docflow.IApprovalRoleBase _ApprovalRole;
    public virtual global::Sungero.Docflow.IApprovalRoleBase ApprovalRole
    {
      get
      {
        return this._ApprovalRole;
      }

      set
      {
        this.SetPropertyValue("ApprovalRole", this._ApprovalRole, value, (propertyValue) => { this._ApprovalRole = propertyValue; }, this.ApprovalRoleChangedHandler);
      }
    }
    private global::Sungero.Docflow.IApprovalRoleBase _ApprovalRoleForComparison;
    public virtual global::Sungero.Docflow.IApprovalRoleBase ApprovalRoleForComparison
    {
      get
      {
        return this._ApprovalRoleForComparison;
      }

      set
      {
        this.SetPropertyValue("ApprovalRoleForComparison", this._ApprovalRoleForComparison, value, (propertyValue) => { this._ApprovalRoleForComparison = propertyValue; }, this.ApprovalRoleForComparisonChangedHandler);
      }
    }
    private global::Sungero.CoreEntities.IRecipient _RecipientForComparison;
    public virtual global::Sungero.CoreEntities.IRecipient RecipientForComparison
    {
      get
      {
        return this._RecipientForComparison;
      }

      set
      {
        this.SetPropertyValue("RecipientForComparison", this._RecipientForComparison, value, (propertyValue) => { this._RecipientForComparison = propertyValue; }, this.RecipientForComparisonChangedHandler);
      }
    }
    private global::Sungero.Docflow.IDocumentKind _AddendaDocumentKind;
    public virtual global::Sungero.Docflow.IDocumentKind AddendaDocumentKind
    {
      get
      {
        return this._AddendaDocumentKind;
      }

      set
      {
        this.SetPropertyValue("AddendaDocumentKind", this._AddendaDocumentKind, value, (propertyValue) => { this._AddendaDocumentKind = propertyValue; }, this.AddendaDocumentKindChangedHandler);
      }
    }


    protected global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Docflow.IConditionBaseCurrencies> _Currencies;

    public virtual global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Docflow.IConditionBaseCurrencies> Currencies
    {
      get
      {
        if (this._Currencies == null)
        {
          this._Currencies = this.CreateCurrenciesCollection();
          this.SetCurrenciesEventHandlers();
        }
        return this._Currencies;
      }

      set
      {
        if (this._Currencies != null)
          this.UnsetChildCollectionEventHandlers(this._Currencies);

        this._Currencies = value;
        this.SetCurrenciesEventHandlers();
      }
    }

    protected virtual global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Docflow.IConditionBaseCurrencies> CreateCurrenciesCollection()
    {
      return new global::Sungero.Domain.ChildEntityCollection<global::Sungero.Docflow.IConditionBaseCurrencies>() { RootEntity = this };
    }

    private void SetCurrenciesEventHandlers()
    {
      this.SetChildCollectionEventHandlers(this._Currencies, "Currencies");

      var changeNotifier = (global::Sungero.Domain.Shared.INotifyChildEntityCollectionChanged)this._Currencies;
      changeNotifier.Added += this.CurrenciesAddedHandler;
      changeNotifier.Deleted += this.CurrenciesDeletedHandler;
      changeNotifier.Added += this.CurrenciesCollectionUpdateEventHandler;
      changeNotifier.Deleted += this.CurrenciesCollectionUpdateEventHandler;
      changeNotifier.Updated += this.CurrenciesCollectionUpdateEventHandler;
    }

    private void CurrenciesCollectionUpdateEventHandler(object sender, global::Sungero.Domain.Shared.BaseChildEntityEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      if (this.IsPropertyChangedHandlerEnabled)
        this.CurrenciesChangedHandler();
    }
    protected global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Docflow.IConditionBaseDocumentKinds> _DocumentKinds;

    public virtual global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Docflow.IConditionBaseDocumentKinds> DocumentKinds
    {
      get
      {
        if (this._DocumentKinds == null)
        {
          this._DocumentKinds = this.CreateDocumentKindsCollection();
          this.SetDocumentKindsEventHandlers();
        }
        return this._DocumentKinds;
      }

      set
      {
        if (this._DocumentKinds != null)
          this.UnsetChildCollectionEventHandlers(this._DocumentKinds);

        this._DocumentKinds = value;
        this.SetDocumentKindsEventHandlers();
      }
    }

    protected virtual global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Docflow.IConditionBaseDocumentKinds> CreateDocumentKindsCollection()
    {
      return new global::Sungero.Domain.ChildEntityCollection<global::Sungero.Docflow.IConditionBaseDocumentKinds>() { RootEntity = this };
    }

    private void SetDocumentKindsEventHandlers()
    {
      this.SetChildCollectionEventHandlers(this._DocumentKinds, "DocumentKinds");

      var changeNotifier = (global::Sungero.Domain.Shared.INotifyChildEntityCollectionChanged)this._DocumentKinds;
      changeNotifier.Added += this.DocumentKindsAddedHandler;
      changeNotifier.Deleted += this.DocumentKindsDeletedHandler;
      changeNotifier.Added += this.DocumentKindsCollectionUpdateEventHandler;
      changeNotifier.Deleted += this.DocumentKindsCollectionUpdateEventHandler;
      changeNotifier.Updated += this.DocumentKindsCollectionUpdateEventHandler;
    }

    private void DocumentKindsCollectionUpdateEventHandler(object sender, global::Sungero.Domain.Shared.BaseChildEntityEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      if (this.IsPropertyChangedHandlerEnabled)
        this.DocumentKindsChangedHandler();
    }
    protected global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Docflow.IConditionBaseConditionDocumentKinds> _ConditionDocumentKinds;

    public virtual global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Docflow.IConditionBaseConditionDocumentKinds> ConditionDocumentKinds
    {
      get
      {
        if (this._ConditionDocumentKinds == null)
        {
          this._ConditionDocumentKinds = this.CreateConditionDocumentKindsCollection();
          this.SetConditionDocumentKindsEventHandlers();
        }
        return this._ConditionDocumentKinds;
      }

      set
      {
        if (this._ConditionDocumentKinds != null)
          this.UnsetChildCollectionEventHandlers(this._ConditionDocumentKinds);

        this._ConditionDocumentKinds = value;
        this.SetConditionDocumentKindsEventHandlers();
      }
    }

    protected virtual global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Docflow.IConditionBaseConditionDocumentKinds> CreateConditionDocumentKindsCollection()
    {
      return new global::Sungero.Domain.ChildEntityCollection<global::Sungero.Docflow.IConditionBaseConditionDocumentKinds>() { RootEntity = this };
    }

    private void SetConditionDocumentKindsEventHandlers()
    {
      this.SetChildCollectionEventHandlers(this._ConditionDocumentKinds, "ConditionDocumentKinds");

      var changeNotifier = (global::Sungero.Domain.Shared.INotifyChildEntityCollectionChanged)this._ConditionDocumentKinds;
      changeNotifier.Added += this.ConditionDocumentKindsAddedHandler;
      changeNotifier.Deleted += this.ConditionDocumentKindsDeletedHandler;
      changeNotifier.Added += this.ConditionDocumentKindsCollectionUpdateEventHandler;
      changeNotifier.Deleted += this.ConditionDocumentKindsCollectionUpdateEventHandler;
      changeNotifier.Updated += this.ConditionDocumentKindsCollectionUpdateEventHandler;
    }

    private void ConditionDocumentKindsCollectionUpdateEventHandler(object sender, global::Sungero.Domain.Shared.BaseChildEntityEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      if (this.IsPropertyChangedHandlerEnabled)
        this.ConditionDocumentKindsChangedHandler();
    }
    protected global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Docflow.IConditionBaseDeliveryMethods> _DeliveryMethods;

    public virtual global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Docflow.IConditionBaseDeliveryMethods> DeliveryMethods
    {
      get
      {
        if (this._DeliveryMethods == null)
        {
          this._DeliveryMethods = this.CreateDeliveryMethodsCollection();
          this.SetDeliveryMethodsEventHandlers();
        }
        return this._DeliveryMethods;
      }

      set
      {
        if (this._DeliveryMethods != null)
          this.UnsetChildCollectionEventHandlers(this._DeliveryMethods);

        this._DeliveryMethods = value;
        this.SetDeliveryMethodsEventHandlers();
      }
    }

    protected virtual global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Docflow.IConditionBaseDeliveryMethods> CreateDeliveryMethodsCollection()
    {
      return new global::Sungero.Domain.ChildEntityCollection<global::Sungero.Docflow.IConditionBaseDeliveryMethods>() { RootEntity = this };
    }

    private void SetDeliveryMethodsEventHandlers()
    {
      this.SetChildCollectionEventHandlers(this._DeliveryMethods, "DeliveryMethods");

      var changeNotifier = (global::Sungero.Domain.Shared.INotifyChildEntityCollectionChanged)this._DeliveryMethods;
      changeNotifier.Added += this.DeliveryMethodsAddedHandler;
      changeNotifier.Deleted += this.DeliveryMethodsDeletedHandler;
      changeNotifier.Added += this.DeliveryMethodsCollectionUpdateEventHandler;
      changeNotifier.Deleted += this.DeliveryMethodsCollectionUpdateEventHandler;
      changeNotifier.Updated += this.DeliveryMethodsCollectionUpdateEventHandler;
    }

    private void DeliveryMethodsCollectionUpdateEventHandler(object sender, global::Sungero.Domain.Shared.BaseChildEntityEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      if (this.IsPropertyChangedHandlerEnabled)
        this.DeliveryMethodsChangedHandler();
    }



    protected override global::Sungero.Domain.Shared.EntityCreatingFromServerHandler CreateCreatingFromServerHandler(
      global::Sungero.Domain.Shared.IEntity entitySource)
    {
      return new global::Sungero.Docflow.ConditionBaseCreatingFromServerHandler((global::Sungero.Docflow.IConditionBase)entitySource, this.Info);
    }

    #region Framework events

    protected void NameChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.Name, this.Name, this);
     ((global::Sungero.Docflow.ConditionBaseSharedHandlers)this.SharedHandlers).NameChanged(args);
    }

    protected void ConditionTypeChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.EnumerationPropertyChangedEventArgs(this.State.Properties.ConditionType, this.ConditionType, this);
     ((global::Sungero.Docflow.ConditionBaseSharedHandlers)this.SharedHandlers).ConditionTypeChanged(args);
    }

    protected void AmountChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.DoublePropertyChangedEventArgs(this.State.Properties.Amount, this.Amount, this);
     ((global::Sungero.Docflow.ConditionBaseSharedHandlers)this.SharedHandlers).AmountChanged(args);
    }

    protected void CurrenciesChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.CollectionPropertyChangedEventArgs(this);
     ((global::Sungero.Docflow.ConditionBaseSharedHandlers)this.SharedHandlers).CurrenciesChanged(args);
    }

    protected void DocumentKindsChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.CollectionPropertyChangedEventArgs(this);
     ((global::Sungero.Docflow.ConditionBaseSharedHandlers)this.SharedHandlers).DocumentKindsChanged(args);
    }

    protected void AmountOperatorChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.EnumerationPropertyChangedEventArgs(this.State.Properties.AmountOperator, this.AmountOperator, this);
     ((global::Sungero.Docflow.ConditionBaseSharedHandlers)this.SharedHandlers).AmountOperatorChanged(args);
    }

    protected void NoteChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.TextPropertyChangedEventArgs(this.State.Properties.Note, this.Note, this);
     ((global::Sungero.Docflow.ConditionBaseSharedHandlers)this.SharedHandlers).NoteChanged(args);
    }

    protected void ConditionDocumentKindsChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.CollectionPropertyChangedEventArgs(this);
     ((global::Sungero.Docflow.ConditionBaseSharedHandlers)this.SharedHandlers).ConditionDocumentKindsChanged(args);
    }

    protected void ApprovalRoleChangedHandler()
    {
      var args = new global::Sungero.Docflow.Shared.ConditionBaseApprovalRoleChangedEventArgs(this.State.Properties.ApprovalRole, this.ApprovalRole, this);
     ((global::Sungero.Docflow.ConditionBaseSharedHandlers)this.SharedHandlers).ApprovalRoleChanged(args);
    }

    protected void ApprovalRoleForComparisonChangedHandler()
    {
      var args = new global::Sungero.Docflow.Shared.ConditionBaseApprovalRoleForComparisonChangedEventArgs(this.State.Properties.ApprovalRoleForComparison, this.ApprovalRoleForComparison, this);
     ((global::Sungero.Docflow.ConditionBaseSharedHandlers)this.SharedHandlers).ApprovalRoleForComparisonChanged(args);
    }

    protected void RecipientForComparisonChangedHandler()
    {
      var args = new global::Sungero.Docflow.Shared.ConditionBaseRecipientForComparisonChangedEventArgs(this.State.Properties.RecipientForComparison, this.RecipientForComparison, this);
     ((global::Sungero.Docflow.ConditionBaseSharedHandlers)this.SharedHandlers).RecipientForComparisonChanged(args);
    }

    protected void DeliveryMethodsChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.CollectionPropertyChangedEventArgs(this);
     ((global::Sungero.Docflow.ConditionBaseSharedHandlers)this.SharedHandlers).DeliveryMethodsChanged(args);
    }

    protected void AddendaDocumentKindChangedHandler()
    {
      var args = new global::Sungero.Docflow.Shared.ConditionBaseAddendaDocumentKindChangedEventArgs(this.State.Properties.AddendaDocumentKind, this.AddendaDocumentKind, this);
     ((global::Sungero.Docflow.ConditionBaseSharedHandlers)this.SharedHandlers).AddendaDocumentKindChanged(args);
    }



    protected virtual global::Sungero.Docflow.ConditionBaseCurrenciesSharedCollectionHandlers CreateCurrenciesAddedHandler(global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.Docflow.ConditionBaseCurrenciesSharedCollectionHandlers(this, e.Value, null, e.Source);
    }

    protected virtual global::Sungero.Docflow.ConditionBaseCurrenciesSharedCollectionHandlers CreateCurrenciesDeletedHandler(global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.Docflow.ConditionBaseCurrenciesSharedCollectionHandlers(this, null, e.Value, null);
    }

    protected virtual void CurrenciesAddedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {  
      var collectionHandlers = this.CreateCurrenciesAddedHandler(e);
      if (collectionHandlers != null)
      {
        var args = new global::Sungero.Domain.Shared.CollectionPropertyAddedEventArgs(this);
        collectionHandlers.CurrenciesAdded(args);
      }
    }

    protected virtual void CurrenciesDeletedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {  
      var collectionHandlers = this.CreateCurrenciesDeletedHandler(e);
      if (collectionHandlers != null)
      {
        var args = new global::Sungero.Domain.Shared.CollectionPropertyDeletedEventArgs(this);
        collectionHandlers.CurrenciesDeleted(args);
      }
    }


    protected virtual global::Sungero.Docflow.ConditionBaseDocumentKindsSharedCollectionHandlers CreateDocumentKindsAddedHandler(global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.Docflow.ConditionBaseDocumentKindsSharedCollectionHandlers(this, e.Value, null, e.Source);
    }

    protected virtual global::Sungero.Docflow.ConditionBaseDocumentKindsSharedCollectionHandlers CreateDocumentKindsDeletedHandler(global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.Docflow.ConditionBaseDocumentKindsSharedCollectionHandlers(this, null, e.Value, null);
    }

    protected virtual void DocumentKindsAddedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {  
      var collectionHandlers = this.CreateDocumentKindsAddedHandler(e);
      if (collectionHandlers != null)
      {
        var args = new global::Sungero.Domain.Shared.CollectionPropertyAddedEventArgs(this);
        collectionHandlers.DocumentKindsAdded(args);
      }
    }

    protected virtual void DocumentKindsDeletedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {  
      var collectionHandlers = this.CreateDocumentKindsDeletedHandler(e);
      if (collectionHandlers != null)
      {
        var args = new global::Sungero.Domain.Shared.CollectionPropertyDeletedEventArgs(this);
        collectionHandlers.DocumentKindsDeleted(args);
      }
    }


    protected virtual global::Sungero.Docflow.ConditionBaseConditionDocumentKindsSharedCollectionHandlers CreateConditionDocumentKindsAddedHandler(global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.Docflow.ConditionBaseConditionDocumentKindsSharedCollectionHandlers(this, e.Value, null, e.Source);
    }

    protected virtual global::Sungero.Docflow.ConditionBaseConditionDocumentKindsSharedCollectionHandlers CreateConditionDocumentKindsDeletedHandler(global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.Docflow.ConditionBaseConditionDocumentKindsSharedCollectionHandlers(this, null, e.Value, null);
    }

    protected virtual void ConditionDocumentKindsAddedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {  
      var collectionHandlers = this.CreateConditionDocumentKindsAddedHandler(e);
      if (collectionHandlers != null)
      {
        var args = new global::Sungero.Domain.Shared.CollectionPropertyAddedEventArgs(this);
        collectionHandlers.ConditionDocumentKindsAdded(args);
      }
    }

    protected virtual void ConditionDocumentKindsDeletedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {  
      var collectionHandlers = this.CreateConditionDocumentKindsDeletedHandler(e);
      if (collectionHandlers != null)
      {
        var args = new global::Sungero.Domain.Shared.CollectionPropertyDeletedEventArgs(this);
        collectionHandlers.ConditionDocumentKindsDeleted(args);
      }
    }


    protected virtual global::Sungero.Docflow.ConditionBaseDeliveryMethodsSharedCollectionHandlers CreateDeliveryMethodsAddedHandler(global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.Docflow.ConditionBaseDeliveryMethodsSharedCollectionHandlers(this, e.Value, null, e.Source);
    }

    protected virtual global::Sungero.Docflow.ConditionBaseDeliveryMethodsSharedCollectionHandlers CreateDeliveryMethodsDeletedHandler(global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.Docflow.ConditionBaseDeliveryMethodsSharedCollectionHandlers(this, null, e.Value, null);
    }

    protected virtual void DeliveryMethodsAddedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {  
      var collectionHandlers = this.CreateDeliveryMethodsAddedHandler(e);
      if (collectionHandlers != null)
      {
        var args = new global::Sungero.Domain.Shared.CollectionPropertyAddedEventArgs(this);
        collectionHandlers.DeliveryMethodsAdded(args);
      }
    }

    protected virtual void DeliveryMethodsDeletedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {  
      var collectionHandlers = this.CreateDeliveryMethodsDeletedHandler(e);
      if (collectionHandlers != null)
      {
        var args = new global::Sungero.Domain.Shared.CollectionPropertyDeletedEventArgs(this);
        collectionHandlers.DeliveryMethodsDeleted(args);
      }
    }


    #endregion


    public ConditionBase()
    {
    }

  }
}

// ==================================================================
// ConditionBaseHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow
{
  public partial class ConditionBaseApprovalRolePropertyFilteringServerHandler<T>
    : global::Sungero.Domain.EntityPropertyFilteringServerHandler
    where T : class, global::Sungero.Docflow.IApprovalRoleBase
  {
    private global::Sungero.Docflow.IConditionBase _obj
    {
      get { return (global::Sungero.Docflow.IConditionBase)this.Entity; }
    }

    public ConditionBaseApprovalRolePropertyFilteringServerHandler(global::Sungero.Docflow.IConditionBase entity)
      : base(entity)
    {
    }
  }

  public partial class ConditionBaseApprovalRoleSearchPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.SearchPropertyFilteringServerHandler
    where T : class, global::Sungero.Docflow.IApprovalRoleBase
  {

    public virtual global::System.Linq.IQueryable<T> ApprovalRoleSearchDialogFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertySearchDialogFilteringEventArgs e)
    {
      return query;
    }

    public ConditionBaseApprovalRoleSearchPropertyFilteringServerHandler()
      : base()
    {
    }
  }

  public partial class ConditionBaseApprovalRoleForComparisonPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.EntityPropertyFilteringServerHandler
    where T : class, global::Sungero.Docflow.IApprovalRoleBase
  {
    private global::Sungero.Docflow.IConditionBase _obj
    {
      get { return (global::Sungero.Docflow.IConditionBase)this.Entity; }
    }

    public ConditionBaseApprovalRoleForComparisonPropertyFilteringServerHandler(global::Sungero.Docflow.IConditionBase entity)
      : base(entity)
    {
    }
  }

  public partial class ConditionBaseApprovalRoleForComparisonSearchPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.SearchPropertyFilteringServerHandler
    where T : class, global::Sungero.Docflow.IApprovalRoleBase
  {

    public virtual global::System.Linq.IQueryable<T> ApprovalRoleForComparisonSearchDialogFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertySearchDialogFilteringEventArgs e)
    {
      return query;
    }

    public ConditionBaseApprovalRoleForComparisonSearchPropertyFilteringServerHandler()
      : base()
    {
    }
  }

  public partial class ConditionBaseRecipientForComparisonPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.EntityPropertyFilteringServerHandler
    where T : class, global::Sungero.CoreEntities.IRecipient
  {
    private global::Sungero.Docflow.IConditionBase _obj
    {
      get { return (global::Sungero.Docflow.IConditionBase)this.Entity; }
    }

    public ConditionBaseRecipientForComparisonPropertyFilteringServerHandler(global::Sungero.Docflow.IConditionBase entity)
      : base(entity)
    {
    }
  }

  public partial class ConditionBaseRecipientForComparisonSearchPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.SearchPropertyFilteringServerHandler
    where T : class, global::Sungero.CoreEntities.IRecipient
  {

    public virtual global::System.Linq.IQueryable<T> RecipientForComparisonSearchDialogFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertySearchDialogFilteringEventArgs e)
    {
      return query;
    }

    public ConditionBaseRecipientForComparisonSearchPropertyFilteringServerHandler()
      : base()
    {
    }
  }

  public partial class ConditionBaseAddendaDocumentKindPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.EntityPropertyFilteringServerHandler
    where T : class, global::Sungero.Docflow.IDocumentKind
  {
    private global::Sungero.Docflow.IConditionBase _obj
    {
      get { return (global::Sungero.Docflow.IConditionBase)this.Entity; }
    }

    public virtual global::System.Linq.IQueryable<T> AddendaDocumentKindFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertyFilteringEventArgs e)
    {
      return query;
    }

    public ConditionBaseAddendaDocumentKindPropertyFilteringServerHandler(global::Sungero.Docflow.IConditionBase entity)
      : base(entity)
    {
    }
  }

  public partial class ConditionBaseAddendaDocumentKindSearchPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.SearchPropertyFilteringServerHandler
    where T : class, global::Sungero.Docflow.IDocumentKind
  {

    public virtual global::System.Linq.IQueryable<T> AddendaDocumentKindSearchDialogFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertySearchDialogFilteringEventArgs e)
    {
      return query;
    }

    public ConditionBaseAddendaDocumentKindSearchPropertyFilteringServerHandler()
      : base()
    {
    }
  }



  public partial class ConditionBaseFilteringServerHandler<T>
    : global::Sungero.Domain.EntityFilteringServerHandler<T>  
    where T : class, global::Sungero.Docflow.IConditionBase
  {
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    protected new global::Sungero.Docflow.IConditionBaseFilterState Filter { get; private set; }

    private global::Sungero.Docflow.IConditionBaseFilterState _filter
    {
      get
      {
        return this.Filter;
      }
    }

    public ConditionBaseFilteringServerHandler(global::Sungero.Docflow.IConditionBaseFilterState filter)
    : base()
    {
      this.Filter = filter;
    }

    protected ConditionBaseFilteringServerHandler()
    {
    }

    public override global::System.Linq.IQueryable<T> Filtering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.FilteringEventArgs e)
    {
      return query;
    }


  }

  public partial class ConditionBaseUiFilteringServerHandler<T>
    : global::Sungero.Domain.EntityUiFilteringServerHandler<T>
    where T : class, global::Sungero.Docflow.IConditionBase
  {
    public override global::System.Linq.IQueryable<T> Filtering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.UiFilteringEventArgs e)
    {
      query = base.Filtering(query, e);
            return query;
    }
  }

  public partial class ConditionBaseSearchDialogServerHandler : global::Sungero.CoreEntities.DatabookEntrySearchDialogServerHandler
   {
     private global::Sungero.Docflow.Server.ConditionBaseSearchDialogModel _dialog
     {
       get
       {
         return (global::Sungero.Docflow.Server.ConditionBaseSearchDialogModel)this.Dialog;
       }
     }

     public ConditionBaseSearchDialogServerHandler(global::Sungero.Docflow.Server.ConditionBaseSearchDialogModel dialog)
       : base(dialog)
     {
     }
   }

  public partial class ConditionBaseServerHandlers : global::Sungero.CoreEntities.DatabookEntryServerHandlers
  {
    private global::Sungero.Docflow.IConditionBase _obj
    {
      get { return (global::Sungero.Docflow.IConditionBase)this.Entity; }
    }

    public ConditionBaseServerHandlers(global::Sungero.Docflow.IConditionBase entity)
      : base(entity)
    {
    }
  }

  public partial class ConditionBaseCreatingFromServerHandler : global::Sungero.CoreEntities.DatabookEntryCreatingFromServerHandler
  {
    private global::Sungero.Docflow.IConditionBase _source
    {
      get { return (global::Sungero.Docflow.IConditionBase)this.Source; }
    }

    private global::Sungero.Docflow.IConditionBaseInfo _info
    {
      get { return (global::Sungero.Docflow.IConditionBaseInfo)this._Info; }
    }

    public ConditionBaseCreatingFromServerHandler(global::Sungero.Docflow.IConditionBase source, global::Sungero.Docflow.IConditionBaseInfo info)
      : base(source, info)
    {
    }
  }

}

// ==================================================================
// ConditionBaseEventArgs.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
}

// ==================================================================
// ConditionBaseAccessRights.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
  public class ConditionBaseAccessRights : 
    Sungero.CoreEntities.Server.DatabookEntryAccessRights, Sungero.Docflow.IConditionBaseAccessRights
  {

    public ConditionBaseAccessRights(global::Sungero.Domain.Shared.IEntity entity) : base(entity)
    {
    }
  }

  public class ConditionBaseTypeAccessRights : 
    Sungero.CoreEntities.Server.DatabookEntryTypeAccessRights, Sungero.Docflow.IConditionBaseAccessRights
  {

    public ConditionBaseTypeAccessRights(global::System.Type entityType) : base(entityType)
    {
    }
  }
}

// ==================================================================
// ConditionBaseRepositoryImplementer.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
    public class ConditionBaseRepositoryImplementer<T> : 
      global::Sungero.Domain.RepositoryImplementer<T>,
      global::Sungero.Docflow.IConditionBaseRepositoryImplementer<T>
      where T : global::Sungero.Docflow.IConditionBase 
    {
       public new global::Sungero.Docflow.IConditionBaseAccessRights AccessRights
       {
          get { return (global::Sungero.Docflow.IConditionBaseAccessRights)base.AccessRights; }
       }

       public new global::Sungero.Docflow.IConditionBaseInfo Info
       {
          get { return (global::Sungero.Docflow.IConditionBaseInfo)base.Info; }
       }

       protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
       {
         return new global::Sungero.Docflow.Server.ConditionBaseTypeAccessRights(typeof(T));
       }
    }
}

// ==================================================================
// ConditionBasePanelNavigationFilters.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
}

// ==================================================================
// ConditionBaseServerFunctions.g.cs
// ==================================================================

namespace Sungero.Docflow.Server
{
  public partial class ConditionBaseFunctions : global::Sungero.CoreEntities.Server.DatabookEntryFunctions
  {
    private global::Sungero.Docflow.IConditionBase _obj
    {
      get { return (global::Sungero.Docflow.IConditionBase)this.Entity; }
    }

    public ConditionBaseFunctions(global::Sungero.Docflow.IConditionBase entity) : base(entity) { }
  }
}

// ==================================================================
// ConditionBaseFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Functions
{
  internal static class ConditionBase
  {
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ConditionBaseFunctions" />
    internal static  global::System.String ConditionMultiSelectNameBuilder(global::System.Collections.Generic.List<global::System.String> mainSet)
    {
      return global::Sungero.Docflow.Server.ConditionBaseFunctions.ConditionMultiSelectNameBuilder(mainSet);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ConditionBaseFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static  global::Sungero.Docflow.IConditionBase GetCondition(global::System.Int32 id)
    {
      return global::Sungero.Docflow.Server.ConditionBaseFunctions.GetCondition(id);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ConditionBaseFunctions" />
    internal static  global::System.String AmountFormat(global::System.Nullable<global::System.Double> amount)
    {
      return global::Sungero.Docflow.Server.ConditionBaseFunctions.AmountFormat(amount);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ConditionBaseFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static  void DeleteCondition(global::Sungero.Docflow.IConditionBase condition)
    {
    global::Sungero.Docflow.Server.ConditionBaseFunctions.DeleteCondition(condition);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ConditionBaseFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static  global::System.Boolean HasRules(global::Sungero.Docflow.IConditionBase condition)
    {
      return global::Sungero.Docflow.Server.ConditionBaseFunctions.HasRules(condition);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ConditionBaseFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static  global::Sungero.Docflow.Structures.ConditionBase.ConditionResult CompareRoles(global::Sungero.Docflow.IConditionBase conditionBase, global::Sungero.Docflow.IApprovalTask task)
    {
      var functions = (global::Sungero.Docflow.Server.ConditionBaseFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)conditionBase).FunctionsContainer.ServerFunctions;
      return functions.CompareRoles(task);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ConditionBaseFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static  global::Sungero.Docflow.Structures.ConditionBase.ConditionResult CompareRoleAndRecipient(global::Sungero.Docflow.IConditionBase conditionBase, global::Sungero.Docflow.IApprovalTask task)
    {
      var functions = (global::Sungero.Docflow.Server.ConditionBaseFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)conditionBase).FunctionsContainer.ServerFunctions;
      return functions.CompareRoleAndRecipient(task);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ConditionBaseFunctions" />
    internal static  global::System.String GetConditionName(global::Sungero.Docflow.IConditionBase conditionBase)
    {
      var functions = (global::Sungero.Docflow.Server.ConditionBaseFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)conditionBase).FunctionsContainer.ServerFunctions;
      return functions.GetConditionName();
    }

    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ConditionBaseFunctions" />
    internal static  System.Collections.Generic.Dictionary<global::System.String, global::System.Collections.Generic.List<global::System.Nullable<global::Sungero.Core.Enumeration>>> GetSupportedConditions(global::Sungero.Docflow.IConditionBase conditionBase)
    {
      var functions = (global::Sungero.Docflow.Shared.ConditionBaseFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)conditionBase).FunctionsContainer.SharedFunctions;
      return functions.GetSupportedConditions();
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ConditionBaseFunctions" />
    internal static  global::System.Boolean CheckConditionAbility(global::Sungero.Docflow.IConditionBase conditionBase, global::Sungero.Docflow.IDocumentKind documentKind, System.Collections.Generic.Dictionary<global::System.String, global::System.Collections.Generic.List<global::System.Nullable<global::Sungero.Core.Enumeration>>> supportedConditions)
    {
      var functions = (global::Sungero.Docflow.Shared.ConditionBaseFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)conditionBase).FunctionsContainer.SharedFunctions;
      return functions.CheckConditionAbility(documentKind, supportedConditions);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ConditionBaseFunctions" />
    internal static  global::System.Collections.Generic.List<global::System.Nullable<global::Sungero.Core.Enumeration>> GetPossibleConditionTypes(global::Sungero.Docflow.IConditionBase conditionBase, System.Collections.Generic.Dictionary<global::System.String, global::System.Collections.Generic.List<global::System.Nullable<global::Sungero.Core.Enumeration>>> supportedConditions)
    {
      var functions = (global::Sungero.Docflow.Shared.ConditionBaseFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)conditionBase).FunctionsContainer.SharedFunctions;
      return functions.GetPossibleConditionTypes(supportedConditions);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ConditionBaseFunctions" />
    internal static  void ChangePropertiesAccess(global::Sungero.Docflow.IConditionBase conditionBase)
    {
      var functions = (global::Sungero.Docflow.Shared.ConditionBaseFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)conditionBase).FunctionsContainer.SharedFunctions;
    functions.ChangePropertiesAccess();
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ConditionBaseFunctions" />
    internal static  void ClearHiddenProperties(global::Sungero.Docflow.IConditionBase conditionBase)
    {
      var functions = (global::Sungero.Docflow.Shared.ConditionBaseFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)conditionBase).FunctionsContainer.SharedFunctions;
    functions.ClearHiddenProperties();
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ConditionBaseFunctions" />
    internal static  global::Sungero.Docflow.Structures.ConditionBase.ConditionResult CheckCondition(global::Sungero.Docflow.IConditionBase conditionBase, global::Sungero.Docflow.IOfficialDocument document, global::Sungero.Docflow.IApprovalTask task)
    {
      var functions = (global::Sungero.Docflow.Shared.ConditionBaseFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)conditionBase).FunctionsContainer.SharedFunctions;
      return functions.CheckCondition(document, task);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ConditionBaseFunctions" />
    internal static  global::Sungero.Docflow.Structures.ConditionBase.ConditionResult CheckSignedByCounterparty(global::Sungero.Docflow.IConditionBase conditionBase, global::Sungero.Docflow.IOfficialDocument document, global::Sungero.Docflow.IApprovalTask task)
    {
      var functions = (global::Sungero.Docflow.Shared.ConditionBaseFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)conditionBase).FunctionsContainer.SharedFunctions;
      return functions.CheckSignedByCounterparty(document, task);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ConditionBaseFunctions" />
    internal static  global::Sungero.Docflow.Structures.ConditionBase.ConditionResult CheckHasAddenda(global::Sungero.Docflow.IConditionBase conditionBase, global::Sungero.Docflow.IOfficialDocument document, global::Sungero.Docflow.IApprovalTask task)
    {
      var functions = (global::Sungero.Docflow.Shared.ConditionBaseFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)conditionBase).FunctionsContainer.SharedFunctions;
      return functions.CheckHasAddenda(document, task);
    }

  }
}

// ==================================================================
// ConditionBaseServerPublicFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
  public class ConditionBaseServerPublicFunctions : global::Sungero.Docflow.Server.IConditionBaseServerPublicFunctions
  {
    public global::System.String AmountFormat(global::System.Nullable<global::System.Double> amount)
    {
      return global::Sungero.Docflow.Functions.ConditionBase.AmountFormat(amount);
    }
  }
}

// ==================================================================
// ConditionBaseQueries.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Queries
{
  public class ConditionBase
  {
    private static global::Sungero.Domain.SqlQueryResolver resolver = new global::Sungero.Domain.SqlQueryResolver("Sungero.Docflow.Server.ConditionBase.ConditionBaseQueries.xml", System.Reflection.Assembly.GetExecutingAssembly());
  }
}
