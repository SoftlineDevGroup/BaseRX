
// ==================================================================
// RetentionPolicy.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
    public class RetentionPolicyFilter<T> :
      global::Sungero.Docflow.Server.StoragePolicyBaseFilter<T>
      where T : class, global::Sungero.Docflow.IRetentionPolicy
    {
      private global::Sungero.Docflow.IRetentionPolicyFilterState filter
      {
        get
        {
          return (Sungero.Docflow.IRetentionPolicyFilterState)this.Filter;
        }
      }

      protected override global::System.Linq.IQueryable<T> ApplyAppliedFilter(global::System.Linq.IQueryable<T> query)
      {
        return base.ApplyAppliedFilter(query);
      }

      public RetentionPolicyFilter(global::Sungero.Docflow.IRetentionPolicyFilterState filter)
      : base(filter)
      {
      }

      protected RetentionPolicyFilter()
      {
      }
    }
      public class RetentionPolicyUiFilter<T> :
        global::Sungero.Docflow.Server.StoragePolicyBaseUiFilter<T>
        where T : class, global::Sungero.Docflow.IRetentionPolicy
      {
        protected override global::System.Linq.IQueryable<T> ApplyAppliedFilter(global::System.Linq.IQueryable<T> query)
        {
          return base.ApplyAppliedFilter(query);
        }
      }

    public class RetentionPolicySearchDialogModel : global::Sungero.Docflow.Server.StoragePolicyBaseSearchDialogModel
        {
                  public override global::System.Int32? Id { get; protected set; }
                  public override global::System.Int32? Priority { get; protected set; }
                  public override global::System.String Name { get; protected set; }
                  public override global::System.String Note { get; protected set; }


                  public override global::System.Collections.Generic.IEnumerable<Sungero.CoreEntities.IStorage> Storage { get; protected set; }


                  public virtual global::System.Int32? DaysToMove { get; protected set; }
                  public virtual global::System.Int32? Interval { get; protected set; }


                  public virtual global::System.Collections.Generic.IEnumerable<Sungero.Core.Enumeration> DocumentDateType { get; protected set; }
                  public virtual global::System.Collections.Generic.IEnumerable<CommonLibrary.DateRangeValue> NextRetention { get; protected set; }
                  public virtual global::System.Collections.Generic.IEnumerable<CommonLibrary.DateRangeValue> LastRetention { get; protected set; }


                   [Sungero.Domain.Shared.HideInDevStudio()]
                   public new RetentionPolicyDocumentKindsModel DocumentKinds { get { return (RetentionPolicyDocumentKindsModel)base.DocumentKinds; } protected set { base.DocumentKinds = value; } }

        }

      public class RetentionPolicyDocumentKindsModel : global::Sungero.Docflow.Server.StoragePolicyBaseDocumentKindsModel
          {
                      [Sungero.Domain.Shared.HideInDevStudio()]
                      public override global::System.Int32? Id { get; protected set; }




         }





  [global::Sungero.Domain.Filter(typeof(global::Sungero.Docflow.Server.RetentionPolicyFilter<global::Sungero.Docflow.IRetentionPolicy>))]
  [global::Sungero.Domain.UiFilter(typeof(global::Sungero.Docflow.Server.RetentionPolicyUiFilter<global::Sungero.Docflow.IRetentionPolicy>))]

  public class RetentionPolicy :
    global::Sungero.Docflow.Server.StoragePolicyBase, global::Sungero.Docflow.IRetentionPolicy
  {
    public static new readonly global::System.Guid ClassTypeGuid = global::System.Guid.Parse("3af27f75-55f4-41be-802a-9424a8ba9c41");

    public override global::System.Guid TypeGuid
    {
      get { return global::Sungero.Docflow.Server.RetentionPolicy.ClassTypeGuid; }
    }

    public override string TypeName
    {
      get { return "Sungero.Docflow.IRetentionPolicy, Sungero.Domain.Interfaces"; }
    }

    public override string DisplayValue
    {
      get { return this.Name; }
      set { this.Name = value; }
    }

    public new virtual global::Sungero.Docflow.IRetentionPolicyState State
    {
      get { return (global::Sungero.Docflow.IRetentionPolicyState)base.State; }
    }

    protected override global::Sungero.Domain.Shared.IEntityState CreateState()
    {
      return new global::Sungero.Docflow.Shared.RetentionPolicyState(this);
    }

    public new virtual global::Sungero.Docflow.IRetentionPolicyInfo Info
    {
      get { return (global::Sungero.Docflow.IRetentionPolicyInfo)base.Info; }
    }

    public new virtual global::Sungero.Docflow.IRetentionPolicyAccessRights AccessRights
    {
      get { return (global::Sungero.Docflow.IRetentionPolicyAccessRights)base.AccessRights; }
    }

    protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
    {
      return new global::Sungero.Docflow.Server.RetentionPolicyAccessRights(this);
    }

    protected override global::Sungero.Domain.EntityFunctions CreateServerFunctions()
    {
      return new global::Sungero.Docflow.Server.RetentionPolicyFunctions(this);
    }

    protected override global::Sungero.Domain.Shared.EntityFunctions CreateSharedFunctions()
    {
      return new global::Sungero.Docflow.Shared.RetentionPolicyFunctions(this);
    }

    protected override object CreateHandlers() {
      return new global::Sungero.Docflow.RetentionPolicyServerHandlers(this);
    }

    protected override object CreateSharedHandlers() {
      return new global::Sungero.Docflow.RetentionPolicySharedHandlers(this);
    }

    private global::System.Int32? _DaysToMove;
    public virtual global::System.Int32? DaysToMove
    {
      get
      {
        return this._DaysToMove;
      }

      set
      {
        this.SetPropertyValue("DaysToMove", this._DaysToMove, value, (propertyValue) => { this._DaysToMove = propertyValue; }, this.DaysToMoveChangedHandler);
      }
    }
    private global::System.DateTime? _NextRetention;
    public virtual global::System.DateTime? NextRetention
    {
      get
      {
        return this._NextRetention;
      }

      set
      {
        this.SetPropertyValue("NextRetention", this._NextRetention, value, (propertyValue) => { this._NextRetention = propertyValue; }, this.NextRetentionChangedHandler);
      }
    }
    private global::System.DateTime? _LastRetention;
    public virtual global::System.DateTime? LastRetention
    {
      get
      {
        return this._LastRetention;
      }

      set
      {
        this.SetPropertyValue("LastRetention", this._LastRetention, value, (propertyValue) => { this._LastRetention = propertyValue; }, this.LastRetentionChangedHandler);
      }
    }
    private global::System.Int32? _Interval;
    public virtual global::System.Int32? Interval
    {
      get
      {
        return this._Interval;
      }

      set
      {
        this.SetPropertyValue("Interval", this._Interval, value, (propertyValue) => { this._Interval = propertyValue; }, this.IntervalChangedHandler);
      }
    }






    private static global::Sungero.Domain.Shared.EnumerationItems _DocumentDateTypeItems = new global::Sungero.Domain.Shared.EnumerationItems(
      null,
      typeof(global::Sungero.Docflow.RetentionPolicy.DocumentDateType),
      typeof(global::Sungero.Docflow.Server.RetentionPolicy),
      "DocumentDateType");

    public static global::Sungero.Domain.Shared.EnumerationItems DocumentDateTypeItems
    {
      get { return global::Sungero.Docflow.Server.RetentionPolicy._DocumentDateTypeItems; }
    }

    public virtual global::Sungero.Domain.Shared.EnumerationItems DocumentDateTypeAllowedItems
    {
      get { return global::Sungero.Docflow.Server.RetentionPolicy.DocumentDateTypeItems; }
    }

    private global::Sungero.Core.Enumeration? _DocumentDateType;

    public virtual global::Sungero.Core.Enumeration? DocumentDateType
    {
      get { return this._DocumentDateType; }
      set { this.SetEnumPropertyValue("DocumentDateType", this._DocumentDateType, value, (propertyValue) => { this._DocumentDateType = propertyValue; }, this.DocumentDateTypeChangedHandler, this.DocumentDateTypeAllowedItems); }
    }
    private static global::Sungero.Domain.Shared.EnumerationItems _RepeatTypeItems = new global::Sungero.Domain.Shared.EnumerationItems(
      null,
      typeof(global::Sungero.Docflow.RetentionPolicy.RepeatType),
      typeof(global::Sungero.Docflow.Server.RetentionPolicy),
      "RepeatType");

    public static global::Sungero.Domain.Shared.EnumerationItems RepeatTypeItems
    {
      get { return global::Sungero.Docflow.Server.RetentionPolicy._RepeatTypeItems; }
    }

    public virtual global::Sungero.Domain.Shared.EnumerationItems RepeatTypeAllowedItems
    {
      get { return global::Sungero.Docflow.Server.RetentionPolicy.RepeatTypeItems; }
    }

    private global::Sungero.Core.Enumeration? _RepeatType;

    public virtual global::Sungero.Core.Enumeration? RepeatType
    {
      get { return this._RepeatType; }
      set { this.SetEnumPropertyValue("RepeatType", this._RepeatType, value, (propertyValue) => { this._RepeatType = propertyValue; }, this.RepeatTypeChangedHandler, this.RepeatTypeAllowedItems); }
    }
    private static global::Sungero.Domain.Shared.EnumerationItems _IntervalTypeItems = new global::Sungero.Domain.Shared.EnumerationItems(
      null,
      typeof(global::Sungero.Docflow.RetentionPolicy.IntervalType),
      typeof(global::Sungero.Docflow.Server.RetentionPolicy),
      "IntervalType");

    public static global::Sungero.Domain.Shared.EnumerationItems IntervalTypeItems
    {
      get { return global::Sungero.Docflow.Server.RetentionPolicy._IntervalTypeItems; }
    }

    public virtual global::Sungero.Domain.Shared.EnumerationItems IntervalTypeAllowedItems
    {
      get { return global::Sungero.Docflow.Server.RetentionPolicy.IntervalTypeItems; }
    }

    private global::Sungero.Core.Enumeration? _IntervalType;

    public virtual global::Sungero.Core.Enumeration? IntervalType
    {
      get { return this._IntervalType; }
      set { this.SetEnumPropertyValue("IntervalType", this._IntervalType, value, (propertyValue) => { this._IntervalType = propertyValue; }, this.IntervalTypeChangedHandler, this.IntervalTypeAllowedItems); }
    }




    protected override global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Docflow.IStoragePolicyBaseDocumentKinds> CreateDocumentKindsCollection()
    {
      return new global::Sungero.Domain.ChildEntityCollection<global::Sungero.Docflow.IRetentionPolicyDocumentKinds>() { RootEntity = this };
    }


    protected override global::Sungero.Domain.Shared.EntityCreatingFromServerHandler CreateCreatingFromServerHandler(
      global::Sungero.Domain.Shared.IEntity entitySource)
    {
      return new global::Sungero.Docflow.RetentionPolicyCreatingFromServerHandler((global::Sungero.Docflow.IRetentionPolicy)entitySource, this.Info);
    }

    #region Framework events

    protected void DocumentDateTypeChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.EnumerationPropertyChangedEventArgs(this.State.Properties.DocumentDateType, this.DocumentDateType, this);
     ((global::Sungero.Docflow.RetentionPolicySharedHandlers)this.SharedHandlers).DocumentDateTypeChanged(args);
    }

    protected void DaysToMoveChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.IntegerPropertyChangedEventArgs(this.State.Properties.DaysToMove, this.DaysToMove, this);
     ((global::Sungero.Docflow.RetentionPolicySharedHandlers)this.SharedHandlers).DaysToMoveChanged(args);
    }

    protected void NextRetentionChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.DateTimePropertyChangedEventArgs(this.State.Properties.NextRetention, this.NextRetention, this);
     ((global::Sungero.Docflow.RetentionPolicySharedHandlers)this.SharedHandlers).NextRetentionChanged(args);
    }

    protected void LastRetentionChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.DateTimePropertyChangedEventArgs(this.State.Properties.LastRetention, this.LastRetention, this);
     ((global::Sungero.Docflow.RetentionPolicySharedHandlers)this.SharedHandlers).LastRetentionChanged(args);
    }

    protected void IntervalChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.IntegerPropertyChangedEventArgs(this.State.Properties.Interval, this.Interval, this);
     ((global::Sungero.Docflow.RetentionPolicySharedHandlers)this.SharedHandlers).IntervalChanged(args);
    }

    protected void RepeatTypeChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.EnumerationPropertyChangedEventArgs(this.State.Properties.RepeatType, this.RepeatType, this);
     ((global::Sungero.Docflow.RetentionPolicySharedHandlers)this.SharedHandlers).RepeatTypeChanged(args);
    }

    protected void IntervalTypeChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.EnumerationPropertyChangedEventArgs(this.State.Properties.IntervalType, this.IntervalType, this);
     ((global::Sungero.Docflow.RetentionPolicySharedHandlers)this.SharedHandlers).IntervalTypeChanged(args);
    }




    #endregion


    public RetentionPolicy()
    {
    }

  }
}

// ==================================================================
// RetentionPolicyHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow
{

  public partial class RetentionPolicyFilteringServerHandler<T>
    : global::Sungero.Docflow.StoragePolicyBaseFilteringServerHandler<T>  
    where T : class, global::Sungero.Docflow.IRetentionPolicy
  {
    private global::Sungero.Docflow.IRetentionPolicyFilterState _filter
    {
      get
      {
        return (Sungero.Docflow.IRetentionPolicyFilterState)this.Filter;
      }
    }

    public RetentionPolicyFilteringServerHandler(global::Sungero.Docflow.IRetentionPolicyFilterState filter)
    : base(filter)
    {
    }

    protected RetentionPolicyFilteringServerHandler()
    {
    }

    public override global::System.Linq.IQueryable<T> Filtering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.FilteringEventArgs e)
    {
      query = base.Filtering(query, e);
            return query;
    }


  }

  public partial class RetentionPolicyUiFilteringServerHandler<T>
    : global::Sungero.Docflow.StoragePolicyBaseUiFilteringServerHandler<T>
    where T : class, global::Sungero.Docflow.IRetentionPolicy
  {
    public override global::System.Linq.IQueryable<T> Filtering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.UiFilteringEventArgs e)
    {
      query = base.Filtering(query, e);
            return query;
    }
  }

  public partial class RetentionPolicySearchDialogServerHandler : global::Sungero.Docflow.StoragePolicyBaseSearchDialogServerHandler
   {
     private global::Sungero.Docflow.Server.RetentionPolicySearchDialogModel _dialog
     {
       get
       {
         return (global::Sungero.Docflow.Server.RetentionPolicySearchDialogModel)this.Dialog;
       }
     }

     public RetentionPolicySearchDialogServerHandler(global::Sungero.Docflow.Server.RetentionPolicySearchDialogModel dialog)
       : base(dialog)
     {
     }
   }

  public partial class RetentionPolicyServerHandlers : global::Sungero.Docflow.StoragePolicyBaseServerHandlers
  {
    private global::Sungero.Docflow.IRetentionPolicy _obj
    {
      get { return (global::Sungero.Docflow.IRetentionPolicy)this.Entity; }
    }

    public RetentionPolicyServerHandlers(global::Sungero.Docflow.IRetentionPolicy entity)
      : base(entity)
    {
    }
  }

  public partial class RetentionPolicyCreatingFromServerHandler : global::Sungero.Docflow.StoragePolicyBaseCreatingFromServerHandler
  {
    private global::Sungero.Docflow.IRetentionPolicy _source
    {
      get { return (global::Sungero.Docflow.IRetentionPolicy)this.Source; }
    }

    private global::Sungero.Docflow.IRetentionPolicyInfo _info
    {
      get { return (global::Sungero.Docflow.IRetentionPolicyInfo)this._Info; }
    }

    public RetentionPolicyCreatingFromServerHandler(global::Sungero.Docflow.IRetentionPolicy source, global::Sungero.Docflow.IRetentionPolicyInfo info)
      : base(source, info)
    {
    }
  }

}

// ==================================================================
// RetentionPolicyEventArgs.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
}

// ==================================================================
// RetentionPolicyAccessRights.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
  public class RetentionPolicyAccessRights : 
    Sungero.Docflow.Server.StoragePolicyBaseAccessRights, Sungero.Docflow.IRetentionPolicyAccessRights
  {

    public RetentionPolicyAccessRights(global::Sungero.Domain.Shared.IEntity entity) : base(entity)
    {
    }
  }

  public class RetentionPolicyTypeAccessRights : 
    Sungero.Docflow.Server.StoragePolicyBaseTypeAccessRights, Sungero.Docflow.IRetentionPolicyAccessRights
  {

    public RetentionPolicyTypeAccessRights(global::System.Type entityType) : base(entityType)
    {
    }
  }
}

// ==================================================================
// RetentionPolicyRepositoryImplementer.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
    public class RetentionPolicyRepositoryImplementer<T> : 
      global::Sungero.Docflow.Server.StoragePolicyBaseRepositoryImplementer<T>,
      global::Sungero.Docflow.IRetentionPolicyRepositoryImplementer<T>
      where T : global::Sungero.Docflow.IRetentionPolicy 
    {
       public new global::Sungero.Docflow.IRetentionPolicyAccessRights AccessRights
       {
          get { return (global::Sungero.Docflow.IRetentionPolicyAccessRights)base.AccessRights; }
       }

       public new global::Sungero.Docflow.IRetentionPolicyInfo Info
       {
          get { return (global::Sungero.Docflow.IRetentionPolicyInfo)base.Info; }
       }

       protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
       {
         return new global::Sungero.Docflow.Server.RetentionPolicyTypeAccessRights(typeof(T));
       }
    }
}

// ==================================================================
// RetentionPolicyPanelNavigationFilters.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
}

// ==================================================================
// RetentionPolicyServerFunctions.g.cs
// ==================================================================

namespace Sungero.Docflow.Server
{
  public partial class RetentionPolicyFunctions : global::Sungero.Docflow.Server.StoragePolicyBaseFunctions
  {
    private global::Sungero.Docflow.IRetentionPolicy _obj
    {
      get { return (global::Sungero.Docflow.IRetentionPolicy)this.Entity; }
    }

    public RetentionPolicyFunctions(global::Sungero.Docflow.IRetentionPolicy entity) : base(entity) { }
  }
}

// ==================================================================
// RetentionPolicyFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Functions
{
  internal static class RetentionPolicy
  {
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.RetentionPolicyFunctions" />
    internal static  global::System.Boolean HasSamePriorityPolicies(global::Sungero.Docflow.IRetentionPolicy retentionPolicy)
    {
      var functions = (global::Sungero.Docflow.Server.RetentionPolicyFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)retentionPolicy).FunctionsContainer.ServerFunctions;
      return functions.HasSamePriorityPolicies();
    }

    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.RetentionPolicyFunctions" />
    internal static  void SetRequiredProperties(global::Sungero.Docflow.IRetentionPolicy retentionPolicy)
    {
      var functions = (global::Sungero.Docflow.Shared.RetentionPolicyFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)retentionPolicy).FunctionsContainer.SharedFunctions;
    functions.SetRequiredProperties();
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.RetentionPolicyFunctions" />
    internal static  global::System.Nullable<global::System.DateTime> GetNextRetentionDate(global::System.Nullable<global::Sungero.Core.Enumeration> repeatType, global::System.Nullable<global::Sungero.Core.Enumeration> intervalType, global::System.Nullable<global::System.Int32> interval, global::System.DateTime now)
    {
      return global::Sungero.Docflow.Shared.RetentionPolicyFunctions.GetNextRetentionDate(repeatType, intervalType, interval, now);
    }

  }
}

// ==================================================================
// RetentionPolicyServerPublicFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
  public class RetentionPolicyServerPublicFunctions : global::Sungero.Docflow.Server.IRetentionPolicyServerPublicFunctions
  {
  }
}

// ==================================================================
// RetentionPolicyQueries.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Queries
{
  public class RetentionPolicy
  {
    private static global::Sungero.Domain.SqlQueryResolver resolver = new global::Sungero.Domain.SqlQueryResolver("Sungero.Docflow.Server.RetentionPolicy.RetentionPolicyQueries.xml", System.Reflection.Assembly.GetExecutingAssembly());
  }
}
