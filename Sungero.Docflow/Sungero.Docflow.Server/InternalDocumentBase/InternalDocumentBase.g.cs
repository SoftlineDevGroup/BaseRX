
// ==================================================================
// InternalDocumentBase.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
    public class InternalDocumentBaseFilter<T> :
      global::Sungero.Docflow.Server.OfficialDocumentFilter<T>
      where T : class, global::Sungero.Docflow.IInternalDocumentBase
    {
      private global::Sungero.Docflow.IInternalDocumentBaseFilterState filter
      {
        get
        {
          return (Sungero.Docflow.IInternalDocumentBaseFilterState)this.Filter;
        }
      }

      protected override global::System.Linq.IQueryable<T> ApplyAppliedFilter(global::System.Linq.IQueryable<T> query)
      {
        var args = new global::Sungero.Domain.FilteringEventArgs();
        var result = new global::Sungero.Docflow.InternalDocumentBaseFilteringServerHandler<T>(this.filter).Filtering(query, args);
        if (args.DisableCheckRights)
    	  global::Sungero.Domain.Security.FilteringAccessRightsOptions.DisableCheckRights<T>();
        return result;
      }

      public InternalDocumentBaseFilter(global::Sungero.Docflow.IInternalDocumentBaseFilterState filter)
      : base(filter)
      {
      }

      protected InternalDocumentBaseFilter()
      {
      }
    }
    public class InternalDocumentBaseSearchDialogModel : global::Sungero.Docflow.Server.OfficialDocumentSearchDialogModel
        {
                  public override global::System.Int32? Id { get; protected set; }
                  public override global::System.String Name { get; protected set; }
                  public override global::System.String Subject { get; protected set; }


                  public override global::System.Collections.Generic.IEnumerable<Sungero.Content.IAssociatedApplication> AssociatedApplication { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<Sungero.Core.Enumeration> VerificationState { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<Sungero.CoreEntities.IRecipient> Author { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<CommonLibrary.DateRangeValue> Created { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<Sungero.Docflow.IDocumentKind> DocumentKind { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<Sungero.Company.IBusinessUnit> BusinessUnit { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<Sungero.CoreEntities.IRecipient> OurSignatory { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<Sungero.Company.IDepartment> Department { get; protected set; }



                  public virtual global::System.Collections.Generic.IEnumerable<Sungero.CoreEntities.IRecipient> PreparedBy { get; protected set; }


                   public new InternalDocumentBaseVersionsModel Versions { get { return (InternalDocumentBaseVersionsModel)base.Versions; } protected set { base.Versions = value; } }
                   [Sungero.Domain.Shared.HideInDevStudio()]
                   public new InternalDocumentBaseTrackingModel Tracking { get { return (InternalDocumentBaseTrackingModel)base.Tracking; } protected set { base.Tracking = value; } }

        }

      public class InternalDocumentBaseVersionsModel : global::Sungero.Docflow.Server.OfficialDocumentVersionsModel
          {
                      [Sungero.Domain.Shared.HideInDevStudio()]
                      public override global::System.Int32? Id { get; protected set; }
                      public override global::System.String Body { get; protected set; }




         }
      public class InternalDocumentBaseTrackingModel : global::Sungero.Docflow.Server.OfficialDocumentTrackingModel
          {
                      [Sungero.Domain.Shared.HideInDevStudio()]
                      public override global::System.Int32? Id { get; protected set; }




         }




  public class InternalDocumentBaseFilterForDocumentKind<TQueryEntity, TSourceEntity>
    : global::Sungero.Docflow.Server.OfficialDocumentFilterForDocumentKind<TQueryEntity, TSourceEntity>
    where TQueryEntity : class, global::Sungero.Docflow.IDocumentKind
    where TSourceEntity : class, global::Sungero.Docflow.IInternalDocumentBase
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, TSourceEntity sourceEntity)
    {
      var args = new global::Sungero.Domain.PropertyFilteringEventArgs(sourceEntity);
      var result = new global::Sungero.Docflow.InternalDocumentBaseDocumentKindPropertyFilteringServerHandler<TQueryEntity>(sourceEntity).DocumentKindFiltering(query, args);
      if (args.DisableUiFiltering)
        global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public InternalDocumentBaseFilterForDocumentKind(string propertyName)
      : base(propertyName)
    {
    }
  }



  [global::Sungero.Domain.Filter(typeof(global::Sungero.Docflow.Server.InternalDocumentBaseFilter<global::Sungero.Docflow.IInternalDocumentBase>))]
  [global::Sungero.Domain.PropertyFilter(typeof(global::Sungero.Docflow.Server.InternalDocumentBaseFilterForDocumentKind<global::Sungero.Docflow.IDocumentKind, global::Sungero.Docflow.IInternalDocumentBase>), "DocumentKind")]


  public class InternalDocumentBase :
    global::Sungero.Docflow.Server.OfficialDocument, global::Sungero.Docflow.IInternalDocumentBase, global::Sungero.Domain.Shared.ISecurableEntity, global::Sungero.Domain.IInternalSecurableEntity
  {
    public static new readonly global::System.Guid ClassTypeGuid = global::System.Guid.Parse("ce3e34ed-7be2-4426-a951-d5a70f966650");

    public override global::System.Guid TypeGuid
    {
      get { return global::Sungero.Docflow.Server.InternalDocumentBase.ClassTypeGuid; }
    }

    public override string TypeName
    {
      get { return "Sungero.Docflow.IInternalDocumentBase, Sungero.Domain.Interfaces"; }
    }

    public override string DisplayValue
    {
      get { return this.Name; }
      set { this.Name = value; }
    }

    public new virtual global::Sungero.Docflow.IInternalDocumentBaseState State
    {
      get { return (global::Sungero.Docflow.IInternalDocumentBaseState)base.State; }
    }

    protected override global::Sungero.Domain.Shared.IEntityState CreateState()
    {
      return new global::Sungero.Docflow.Shared.InternalDocumentBaseState(this);
    }

    public new virtual global::Sungero.Docflow.IInternalDocumentBaseInfo Info
    {
      get { return (global::Sungero.Docflow.IInternalDocumentBaseInfo)base.Info; }
    }

    public new virtual global::Sungero.Docflow.IInternalDocumentBaseAccessRights AccessRights
    {
      get { return (global::Sungero.Docflow.IInternalDocumentBaseAccessRights)base.AccessRights; }
    }

    protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
    {
      return new global::Sungero.Docflow.Server.InternalDocumentBaseAccessRights(this);
    }

    protected override global::Sungero.Domain.EntityFunctions CreateServerFunctions()
    {
      return new global::Sungero.Docflow.Server.InternalDocumentBaseFunctions(this);
    }

    protected override global::Sungero.Domain.Shared.EntityFunctions CreateSharedFunctions()
    {
      return new global::Sungero.Docflow.Shared.InternalDocumentBaseFunctions(this);
    }

    protected override object CreateHandlers() {
      return new global::Sungero.Docflow.InternalDocumentBaseServerHandlers(this);
    }

    protected override object CreateSharedHandlers() {
      return new global::Sungero.Docflow.InternalDocumentBaseSharedHandlers(this);
    }









    protected override global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Content.IElectronicDocumentVersions> CreateVersionsCollection()
    {
      return new global::Sungero.Domain.ChildEntityCollection<global::Sungero.Docflow.IInternalDocumentBaseVersions>() { RootEntity = this };
    }
    protected override global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Docflow.IOfficialDocumentTracking> CreateTrackingCollection()
    {
      return new global::Sungero.Domain.ChildEntityCollection<global::Sungero.Docflow.IInternalDocumentBaseTracking>() { RootEntity = this };
    }


    protected override global::Sungero.Domain.Shared.EntityCreatingFromServerHandler CreateCreatingFromServerHandler(
      global::Sungero.Domain.Shared.IEntity entitySource)
    {
      return new global::Sungero.Docflow.InternalDocumentBaseCreatingFromServerHandler((global::Sungero.Docflow.IInternalDocumentBase)entitySource, this.Info);
    }

    #region Framework events





    #endregion


    public InternalDocumentBase()
    {
    }

    protected override global::Sungero.Domain.Shared.EntityConvertingFromServerHandler CreateConvertingFromServerHandler(   
      global::Sungero.Domain.Shared.IEntity entitySource)
    {
      return new global::Sungero.Docflow.InternalDocumentBaseConvertingFromServerHandler((global::Sungero.Content.IElectronicDocument)entitySource, this.Info);
    }

  }
}

// ==================================================================
// InternalDocumentBaseHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow
{
  public partial class InternalDocumentBaseDocumentKindPropertyFilteringServerHandler<T>
    : global::Sungero.Docflow.OfficialDocumentDocumentKindPropertyFilteringServerHandler<T>
    where T : class, global::Sungero.Docflow.IDocumentKind
  {
    private global::Sungero.Docflow.IInternalDocumentBase _obj
    {
      get { return (global::Sungero.Docflow.IInternalDocumentBase)this.Entity; }
    }

    public InternalDocumentBaseDocumentKindPropertyFilteringServerHandler(global::Sungero.Docflow.IInternalDocumentBase entity)
      : base(entity)
    {
    }
  }



  public partial class InternalDocumentBaseFilteringServerHandler<T>
    : global::Sungero.Docflow.OfficialDocumentFilteringServerHandler<T>  
    where T : class, global::Sungero.Docflow.IInternalDocumentBase
  {
    private global::Sungero.Docflow.IInternalDocumentBaseFilterState _filter
    {
      get
      {
        return (Sungero.Docflow.IInternalDocumentBaseFilterState)this.Filter;
      }
    }

    public InternalDocumentBaseFilteringServerHandler(global::Sungero.Docflow.IInternalDocumentBaseFilterState filter)
    : base(filter)
    {
    }

    protected InternalDocumentBaseFilteringServerHandler()
    {
    }

      public virtual global::System.Linq.IQueryable<Sungero.Company.IBusinessUnit> BusinessUnitFiltering(global::System.Linq.IQueryable<Sungero.Company.IBusinessUnit> query, global::Sungero.Domain.FilteringEventArgs e)
      {
        return query;
      }



  }

  public partial class InternalDocumentBaseSearchDialogServerHandler : global::Sungero.Docflow.OfficialDocumentSearchDialogServerHandler
   {
     private global::Sungero.Docflow.Server.InternalDocumentBaseSearchDialogModel _dialog
     {
       get
       {
         return (global::Sungero.Docflow.Server.InternalDocumentBaseSearchDialogModel)this.Dialog;
       }
     }

     public InternalDocumentBaseSearchDialogServerHandler(global::Sungero.Docflow.Server.InternalDocumentBaseSearchDialogModel dialog)
       : base(dialog)
     {
     }
   }

  public partial class InternalDocumentBaseServerHandlers : global::Sungero.Docflow.OfficialDocumentServerHandlers
  {
    private global::Sungero.Docflow.IInternalDocumentBase _obj
    {
      get { return (global::Sungero.Docflow.IInternalDocumentBase)this.Entity; }
    }

    public InternalDocumentBaseServerHandlers(global::Sungero.Docflow.IInternalDocumentBase entity)
      : base(entity)
    {
    }
  }

  public partial class InternalDocumentBaseCreatingFromServerHandler : global::Sungero.Docflow.OfficialDocumentCreatingFromServerHandler
  {
    private global::Sungero.Docflow.IInternalDocumentBase _source
    {
      get { return (global::Sungero.Docflow.IInternalDocumentBase)this.Source; }
    }

    private global::Sungero.Docflow.IInternalDocumentBaseInfo _info
    {
      get { return (global::Sungero.Docflow.IInternalDocumentBaseInfo)this._Info; }
    }

    public InternalDocumentBaseCreatingFromServerHandler(global::Sungero.Docflow.IInternalDocumentBase source, global::Sungero.Docflow.IInternalDocumentBaseInfo info)
      : base(source, info)
    {
    }
  }

}

// ==================================================================
// InternalDocumentBaseEventArgs.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
}

// ==================================================================
// InternalDocumentBaseAccessRights.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
  public class InternalDocumentBaseAccessRights : 
    Sungero.Docflow.Server.OfficialDocumentAccessRights, Sungero.Docflow.IInternalDocumentBaseAccessRights
  {

    public InternalDocumentBaseAccessRights(global::Sungero.Domain.Shared.IEntity entity) : base(entity)
    {
    }
  }

  public class InternalDocumentBaseTypeAccessRights : 
    Sungero.Docflow.Server.OfficialDocumentTypeAccessRights, Sungero.Docflow.IInternalDocumentBaseAccessRights
  {

    public InternalDocumentBaseTypeAccessRights(global::System.Type entityType) : base(entityType)
    {
    }
  }
}

// ==================================================================
// InternalDocumentBaseRepositoryImplementer.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
    public class InternalDocumentBaseRepositoryImplementer<T> : 
      global::Sungero.Docflow.Server.OfficialDocumentRepositoryImplementer<T>,
      global::Sungero.Docflow.IInternalDocumentBaseRepositoryImplementer<T>
      where T : global::Sungero.Docflow.IInternalDocumentBase 
    {
       public new global::Sungero.Docflow.IInternalDocumentBaseAccessRights AccessRights
       {
          get { return (global::Sungero.Docflow.IInternalDocumentBaseAccessRights)base.AccessRights; }
       }

       public new global::Sungero.Docflow.IInternalDocumentBaseInfo Info
       {
          get { return (global::Sungero.Docflow.IInternalDocumentBaseInfo)base.Info; }
       }

       protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
       {
         return new global::Sungero.Docflow.Server.InternalDocumentBaseTypeAccessRights(typeof(T));
       }
    }
}

// ==================================================================
// InternalDocumentBasePanelNavigationFilters.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
    public class InternalDocumentBaseDocumentRegisterPanelNavigationFilter : global::Sungero.Domain.PanelNavigationFilterBase
    {
      private global::System.Linq.IQueryable Apply<T>(global::System.Linq.IQueryable query) where T: class, global::Sungero.Docflow.IInternalDocumentBase
      {
        var typedQuery = (global::System.Linq.IQueryable<global::Sungero.Docflow.IDocumentRegister>)query;
        var typedState = (global::Sungero.Docflow.IInternalDocumentBaseFilterState)this.State;
        var handlers = new global::Sungero.Docflow.InternalDocumentBaseFilteringServerHandler<T>(typedState);
        var args = new global::Sungero.Domain.FilteringEventArgs();
        var result = handlers.DocumentRegisterFiltering(typedQuery, args);
        if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<global::Sungero.Docflow.IDocumentRegister>();
        return result;
      }

      public override global::System.Linq.IQueryable Apply(global::System.Linq.IQueryable query)
      {
        return this.Apply<global::Sungero.Docflow.IInternalDocumentBase>(query);
      }
    }

    public class InternalDocumentBaseDocumentKindPanelNavigationFilter : global::Sungero.Domain.PanelNavigationFilterBase
    {
      private global::System.Linq.IQueryable Apply<T>(global::System.Linq.IQueryable query) where T: class, global::Sungero.Docflow.IInternalDocumentBase
      {
        var typedQuery = (global::System.Linq.IQueryable<global::Sungero.Docflow.IDocumentKind>)query;
        var typedState = (global::Sungero.Docflow.IInternalDocumentBaseFilterState)this.State;
        var handlers = new global::Sungero.Docflow.InternalDocumentBaseFilteringServerHandler<T>(typedState);
        var args = new global::Sungero.Domain.FilteringEventArgs();
        var result = handlers.DocumentKindFiltering(typedQuery, args);
        if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<global::Sungero.Docflow.IDocumentKind>();
        return result;
      }

      public override global::System.Linq.IQueryable Apply(global::System.Linq.IQueryable query)
      {
        return this.Apply<global::Sungero.Docflow.IInternalDocumentBase>(query);
      }
    }

    public class InternalDocumentBaseBusinessUnitPanelNavigationFilter : global::Sungero.Domain.PanelNavigationFilterBase
    {
      private global::System.Linq.IQueryable Apply<T>(global::System.Linq.IQueryable query) where T: class, global::Sungero.Docflow.IInternalDocumentBase
      {
        var typedQuery = (global::System.Linq.IQueryable<global::Sungero.Company.IBusinessUnit>)query;
        var typedState = (global::Sungero.Docflow.IInternalDocumentBaseFilterState)this.State;
        var handlers = new global::Sungero.Docflow.InternalDocumentBaseFilteringServerHandler<T>(typedState);
        var args = new global::Sungero.Domain.FilteringEventArgs();
        var result = handlers.BusinessUnitFiltering(typedQuery, args);
        if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<global::Sungero.Company.IBusinessUnit>();
        return result;
      }

      public override global::System.Linq.IQueryable Apply(global::System.Linq.IQueryable query)
      {
        return this.Apply<global::Sungero.Docflow.IInternalDocumentBase>(query);
      }
    }

    public class InternalDocumentBaseDepartmentPanelNavigationFilter : global::Sungero.Domain.PanelNavigationFilterBase
    {
      private global::System.Linq.IQueryable Apply<T>(global::System.Linq.IQueryable query) where T: class, global::Sungero.Docflow.IInternalDocumentBase
      {
        var typedQuery = (global::System.Linq.IQueryable<global::Sungero.Company.IDepartment>)query;
        var typedState = (global::Sungero.Docflow.IInternalDocumentBaseFilterState)this.State;
        var handlers = new global::Sungero.Docflow.InternalDocumentBaseFilteringServerHandler<T>(typedState);
        var args = new global::Sungero.Domain.FilteringEventArgs();
        var result = handlers.DepartmentFiltering(typedQuery, args);
        if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<global::Sungero.Company.IDepartment>();
        return result;
      }

      public override global::System.Linq.IQueryable Apply(global::System.Linq.IQueryable query)
      {
        return this.Apply<global::Sungero.Docflow.IInternalDocumentBase>(query);
      }
    }

}

// ==================================================================
// InternalDocumentBaseServerFunctions.g.cs
// ==================================================================

namespace Sungero.Docflow.Server
{
  public partial class InternalDocumentBaseFunctions : global::Sungero.Docflow.Server.OfficialDocumentFunctions
  {
    private global::Sungero.Docflow.IInternalDocumentBase _obj
    {
      get { return (global::Sungero.Docflow.IInternalDocumentBase)this.Entity; }
    }

    public InternalDocumentBaseFunctions(global::Sungero.Docflow.IInternalDocumentBase entity) : base(entity) { }
  }
}

// ==================================================================
// InternalDocumentBaseFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Functions
{
  internal static class InternalDocumentBase
  {
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.InternalDocumentBaseFunctions" />
    internal static  global::Sungero.Company.IEmployee GetDocumentResponsibleEmployee(global::Sungero.Docflow.IInternalDocumentBase internalDocumentBase)
    {
      var functions = (global::Sungero.Docflow.Shared.InternalDocumentBaseFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)internalDocumentBase).FunctionsContainer.SharedFunctions;
      return functions.GetDocumentResponsibleEmployee();
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.InternalDocumentBaseFunctions" />
    internal static  void EnableRegistrationNumberAndDate(global::Sungero.Docflow.IInternalDocumentBase internalDocumentBase)
    {
      var functions = (global::Sungero.Docflow.Shared.InternalDocumentBaseFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)internalDocumentBase).FunctionsContainer.SharedFunctions;
    functions.EnableRegistrationNumberAndDate();
    }

  }
}

// ==================================================================
// InternalDocumentBaseServerPublicFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
  public class InternalDocumentBaseServerPublicFunctions : global::Sungero.Docflow.Server.IInternalDocumentBaseServerPublicFunctions
  {
  }
}

// ==================================================================
// InternalDocumentBaseQueries.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Queries
{
  public class InternalDocumentBase
  {
    private static global::Sungero.Domain.SqlQueryResolver resolver = new global::Sungero.Domain.SqlQueryResolver("Sungero.Docflow.Server.InternalDocumentBase.InternalDocumentBaseQueries.xml", System.Reflection.Assembly.GetExecutingAssembly());
  }
}

// ==================================================================
// InternalDocumentBaseServerHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow
{
  public partial class InternalDocumentBaseConvertingFromServerHandler : global::Sungero.Docflow.OfficialDocumentConvertingFromServerHandler
  { 
    private global::Sungero.Docflow.IInternalDocumentBaseInfo _info
    {
      get { return (global::Sungero.Docflow.IInternalDocumentBaseInfo)this._Info; }
    }

    public InternalDocumentBaseConvertingFromServerHandler(global::Sungero.Content.IElectronicDocument source, global::Sungero.Docflow.IInternalDocumentBaseInfo info)
      : base(source, info)
    {
    }
  }
}
