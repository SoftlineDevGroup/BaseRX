
// ==================================================================
// Module.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
  public partial class DocflowModule : global::Sungero.Domain.Shared.ModuleBase
  {
    public override global::System.Guid Id
    {
      get { return global::System.Guid.Parse("df83a2ea-8d43-4ec4-a34a-2e61863014df"); }
    }

    public override string Name
    {
      get { return "Sungero.Docflow"; }
    }

    public override void RegisterTypes()
    {
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Server.IModuleServerInitializationFunctions, global::Sungero.Docflow.Server.ModuleServerInitializationFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("6b57117e-0253-4a46-a3dc-4ed0d5b512ec"), new Sungero.Docflow.Shared.AccessRightsRuleInfo(typeof(global::Sungero.Docflow.IAccessRightsRule)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Server.IAccessRightsRuleServerPublicFunctions, global::Sungero.Docflow.Server.AccessRightsRuleServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Shared.IAccessRightsRuleSharedPublicFunctions, global::Sungero.Docflow.Shared.AccessRightsRuleSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("4620e695-a132-44e6-8d01-d946f7b8775a"), new Sungero.Docflow.Shared.AccessRightsRuleBusinessUnitsInfo(typeof(global::Sungero.Docflow.IAccessRightsRuleBusinessUnits)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("69cd7eee-b6e6-4f00-9562-5a3281c166f6"), new Sungero.Docflow.Shared.AccessRightsRuleDepartmentsInfo(typeof(global::Sungero.Docflow.IAccessRightsRuleDepartments)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("c7de5a86-53fe-44b2-b6a9-7703aab6c48b"), new Sungero.Docflow.Shared.AccessRightsRuleDocumentGroupsInfo(typeof(global::Sungero.Docflow.IAccessRightsRuleDocumentGroups)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("81f24b4f-47ee-455e-bd98-80aa839c3f12"), new Sungero.Docflow.Shared.AccessRightsRuleDocumentKindsInfo(typeof(global::Sungero.Docflow.IAccessRightsRuleDocumentKinds)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("f6f931a8-3f7f-4532-aee6-47aa4ce7f0e4"), new Sungero.Docflow.Shared.AccessRightsRuleMembersInfo(typeof(global::Sungero.Docflow.IAccessRightsRuleMembers)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("96c4f4f3-dc74-497a-b347-e8faf4afe320"), new Sungero.Docflow.Shared.AccountingDocumentBaseInfo(typeof(global::Sungero.Docflow.IAccountingDocumentBase)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Server.IAccountingDocumentBaseServerPublicFunctions, global::Sungero.Docflow.Server.AccountingDocumentBaseServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Shared.IAccountingDocumentBaseSharedPublicFunctions, global::Sungero.Docflow.Shared.AccountingDocumentBaseSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("dd454376-144f-461f-a2a5-4b1684ff5c4a"), new Sungero.Docflow.Shared.AccountingDocumentBaseTrackingInfo(typeof(global::Sungero.Docflow.IAccountingDocumentBaseTracking)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("fd8ac5de-440e-451f-9d12-0213f4fd59ba"), new Sungero.Docflow.Shared.AccountingDocumentBaseVersionsInfo(typeof(global::Sungero.Docflow.IAccountingDocumentBaseVersions)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("58b9ed35-9c84-46cd-aa79-9b5ef5a82f5d"), new Sungero.Docflow.Shared.AddendumInfo(typeof(global::Sungero.Docflow.IAddendum)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Server.IAddendumServerPublicFunctions, global::Sungero.Docflow.Server.AddendumServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Shared.IAddendumSharedPublicFunctions, global::Sungero.Docflow.Shared.AddendumSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("70e550a3-63c2-4166-bd4b-256718e014ec"), new Sungero.Docflow.Shared.AddendumTrackingInfo(typeof(global::Sungero.Docflow.IAddendumTracking)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("c8333ee7-aa39-4ccf-9fac-0ef0429db167"), new Sungero.Docflow.Shared.AddendumVersionsInfo(typeof(global::Sungero.Docflow.IAddendumVersions)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("daf1900f-e66b-4368-b724-a073266145d7"), new Sungero.Docflow.Shared.ApprovalAssignmentInfo(typeof(global::Sungero.Docflow.IApprovalAssignment)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Server.IApprovalAssignmentServerPublicFunctions, global::Sungero.Docflow.Server.ApprovalAssignmentServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Shared.IApprovalAssignmentSharedPublicFunctions, global::Sungero.Docflow.Shared.ApprovalAssignmentSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("c09f0ae4-c959-4a57-9895-ae9aaf1f1855"), new Sungero.Docflow.Shared.ApprovalCheckingAssignmentInfo(typeof(global::Sungero.Docflow.IApprovalCheckingAssignment)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Server.IApprovalCheckingAssignmentServerPublicFunctions, global::Sungero.Docflow.Server.ApprovalCheckingAssignmentServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Shared.IApprovalCheckingAssignmentSharedPublicFunctions, global::Sungero.Docflow.Shared.ApprovalCheckingAssignmentSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("f40f1e48-b0f7-4c53-9658-ebefa07fe094"), new Sungero.Docflow.Shared.ApprovalCheckReturnAssignmentInfo(typeof(global::Sungero.Docflow.IApprovalCheckReturnAssignment)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Server.IApprovalCheckReturnAssignmentServerPublicFunctions, global::Sungero.Docflow.Server.ApprovalCheckReturnAssignmentServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Shared.IApprovalCheckReturnAssignmentSharedPublicFunctions, global::Sungero.Docflow.Shared.ApprovalCheckReturnAssignmentSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("495600a5-5f7a-49aa-ac49-9351c9af1109"), new Sungero.Docflow.Shared.ApprovalExecutionAssignmentInfo(typeof(global::Sungero.Docflow.IApprovalExecutionAssignment)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Server.IApprovalExecutionAssignmentServerPublicFunctions, global::Sungero.Docflow.Server.ApprovalExecutionAssignmentServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Shared.IApprovalExecutionAssignmentSharedPublicFunctions, global::Sungero.Docflow.Shared.ApprovalExecutionAssignmentSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("5043014a-672b-44c4-8982-b61292b4b570"), new Sungero.Docflow.Shared.ApprovalExecutionAssignmentCollapsedStagesTypesExeInfo(typeof(global::Sungero.Docflow.IApprovalExecutionAssignmentCollapsedStagesTypesExe)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("bbb08f45-60c1-4496-9ff6-b32caed44215"), new Sungero.Docflow.Shared.ApprovalManagerAssignmentInfo(typeof(global::Sungero.Docflow.IApprovalManagerAssignment)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Server.IApprovalManagerAssignmentServerPublicFunctions, global::Sungero.Docflow.Server.ApprovalManagerAssignmentServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Shared.IApprovalManagerAssignmentSharedPublicFunctions, global::Sungero.Docflow.Shared.ApprovalManagerAssignmentSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("20373d1e-fda4-4bec-869d-b9838b055f54"), new Sungero.Docflow.Shared.ApprovalManagerAssignmentAddApproversInfo(typeof(global::Sungero.Docflow.IApprovalManagerAssignmentAddApprovers)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("be83f002-c2c0-49da-aff5-b7f3bddaabf7"), new Sungero.Docflow.Shared.ApprovalNotificationInfo(typeof(global::Sungero.Docflow.IApprovalNotification)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Server.IApprovalNotificationServerPublicFunctions, global::Sungero.Docflow.Server.ApprovalNotificationServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Shared.IApprovalNotificationSharedPublicFunctions, global::Sungero.Docflow.Shared.ApprovalNotificationSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("8cd7f587-a910-4e2f-ac4f-afcc15fc3e2f"), new Sungero.Docflow.Shared.ApprovalPrintingAssignmentInfo(typeof(global::Sungero.Docflow.IApprovalPrintingAssignment)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Server.IApprovalPrintingAssignmentServerPublicFunctions, global::Sungero.Docflow.Server.ApprovalPrintingAssignmentServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Shared.IApprovalPrintingAssignmentSharedPublicFunctions, global::Sungero.Docflow.Shared.ApprovalPrintingAssignmentSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("14fff8b4-a912-45db-bea8-d05c92793d4e"), new Sungero.Docflow.Shared.ApprovalPrintingAssignmentCollapsedStagesTypesPrInfo(typeof(global::Sungero.Docflow.IApprovalPrintingAssignmentCollapsedStagesTypesPr)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("a3b19bde-a0a5-4c7b-9ad4-5a7e800156a9"), new Sungero.Docflow.Shared.ApprovalRegistrationAssignmentInfo(typeof(global::Sungero.Docflow.IApprovalRegistrationAssignment)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Server.IApprovalRegistrationAssignmentServerPublicFunctions, global::Sungero.Docflow.Server.ApprovalRegistrationAssignmentServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Shared.IApprovalRegistrationAssignmentSharedPublicFunctions, global::Sungero.Docflow.Shared.ApprovalRegistrationAssignmentSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("6f3a5243-37f1-43d1-8e76-f7e7dc1999fd"), new Sungero.Docflow.Shared.ApprovalRegistrationAssignmentCollapsedStagesTypesRegInfo(typeof(global::Sungero.Docflow.IApprovalRegistrationAssignmentCollapsedStagesTypesReg)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("079b6ce1-8a62-41a6-aa89-0de5e5266253"), new Sungero.Docflow.Shared.ApprovalReviewAssignmentInfo(typeof(global::Sungero.Docflow.IApprovalReviewAssignment)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Server.IApprovalReviewAssignmentServerPublicFunctions, global::Sungero.Docflow.Server.ApprovalReviewAssignmentServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Shared.IApprovalReviewAssignmentSharedPublicFunctions, global::Sungero.Docflow.Shared.ApprovalReviewAssignmentSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("b991fa6e-798e-42ee-b674-d957a04b843c"), new Sungero.Docflow.Shared.ApprovalReviewAssignmentCollapsedStagesTypesReInfo(typeof(global::Sungero.Docflow.IApprovalReviewAssignmentCollapsedStagesTypesRe)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("040862cd-a46f-4366-b068-e659c7acaea6"), new Sungero.Docflow.Shared.ApprovalReworkAssignmentInfo(typeof(global::Sungero.Docflow.IApprovalReworkAssignment)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Server.IApprovalReworkAssignmentServerPublicFunctions, global::Sungero.Docflow.Server.ApprovalReworkAssignmentServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Shared.IApprovalReworkAssignmentSharedPublicFunctions, global::Sungero.Docflow.Shared.ApprovalReworkAssignmentSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("c97a3040-e94f-48af-97dd-471d94525691"), new Sungero.Docflow.Shared.ApprovalReworkAssignmentAddApproversInfo(typeof(global::Sungero.Docflow.IApprovalReworkAssignmentAddApprovers)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("ad3d2bfd-0bcd-4d74-8a13-1368666d7963"), new Sungero.Docflow.Shared.ApprovalReworkAssignmentApproversInfo(typeof(global::Sungero.Docflow.IApprovalReworkAssignmentApprovers)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("d534f771-4e5b-4846-81cf-9b8fd4ad754d"), new Sungero.Docflow.Shared.ApprovalReworkAssignmentRegApproversInfo(typeof(global::Sungero.Docflow.IApprovalReworkAssignmentRegApprovers)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("9f5b8596-f73a-498f-b1b1-219ed77bb031"), new Sungero.Docflow.Shared.ApprovalRoleInfo(typeof(global::Sungero.Docflow.IApprovalRole)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Server.IApprovalRoleServerPublicFunctions, global::Sungero.Docflow.Server.ApprovalRoleServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Shared.IApprovalRoleSharedPublicFunctions, global::Sungero.Docflow.Shared.ApprovalRoleSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("3445f357-1435-4444-9f24-a56a752fc471"), new Sungero.Docflow.Shared.ApprovalRoleBaseInfo(typeof(global::Sungero.Docflow.IApprovalRoleBase)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Server.IApprovalRoleBaseServerPublicFunctions, global::Sungero.Docflow.Server.ApprovalRoleBaseServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Shared.IApprovalRoleBaseSharedPublicFunctions, global::Sungero.Docflow.Shared.ApprovalRoleBaseSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("a8dc61a5-862e-4c8a-a0e0-a5735ec3c3b3"), new Sungero.Docflow.Shared.ApprovalRuleInfo(typeof(global::Sungero.Docflow.IApprovalRule)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Server.IApprovalRuleServerPublicFunctions, global::Sungero.Docflow.Server.ApprovalRuleServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Shared.IApprovalRuleSharedPublicFunctions, global::Sungero.Docflow.Shared.ApprovalRuleSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("07e78391-6f52-4e18-b8b8-799c5cfd9977"), new Sungero.Docflow.Shared.ApprovalRuleBusinessUnitsInfo(typeof(global::Sungero.Docflow.IApprovalRuleBusinessUnits)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("a5711709-ae60-4738-a7b1-0878f756a6d1"), new Sungero.Docflow.Shared.ApprovalRuleConditionsInfo(typeof(global::Sungero.Docflow.IApprovalRuleConditions)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("dfe3129b-e1ad-42a1-b5f3-8505dd6392bf"), new Sungero.Docflow.Shared.ApprovalRuleDepartmentsInfo(typeof(global::Sungero.Docflow.IApprovalRuleDepartments)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("5812c54a-95f4-4579-84d4-9be9ae8a7e58"), new Sungero.Docflow.Shared.ApprovalRuleDocumentGroupsInfo(typeof(global::Sungero.Docflow.IApprovalRuleDocumentGroups)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("b4dd47f2-c49f-45bf-8a29-8a462c66050d"), new Sungero.Docflow.Shared.ApprovalRuleDocumentKindsInfo(typeof(global::Sungero.Docflow.IApprovalRuleDocumentKinds)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("a097b1e2-ee8d-41cc-ac0d-68524c2e374a"), new Sungero.Docflow.Shared.ApprovalRuleStagesInfo(typeof(global::Sungero.Docflow.IApprovalRuleStages)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("dc4449c7-5a08-4b4d-a95e-677db85e6d5d"), new Sungero.Docflow.Shared.ApprovalRuleTransitionsInfo(typeof(global::Sungero.Docflow.IApprovalRuleTransitions)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("42a6a084-6828-47d9-95bb-50b0538a6037"), new Sungero.Docflow.Shared.ApprovalRuleBaseInfo(typeof(global::Sungero.Docflow.IApprovalRuleBase)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Server.IApprovalRuleBaseServerPublicFunctions, global::Sungero.Docflow.Server.ApprovalRuleBaseServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Shared.IApprovalRuleBaseSharedPublicFunctions, global::Sungero.Docflow.Shared.ApprovalRuleBaseSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("c52d30d2-0379-4259-8cc4-b800f9a23bc7"), new Sungero.Docflow.Shared.ApprovalRuleBaseBusinessUnitsInfo(typeof(global::Sungero.Docflow.IApprovalRuleBaseBusinessUnits)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("924782de-a0ae-4b4c-aabe-2447acc39598"), new Sungero.Docflow.Shared.ApprovalRuleBaseConditionsInfo(typeof(global::Sungero.Docflow.IApprovalRuleBaseConditions)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("8fcbbaeb-8261-489e-9c66-69ca4ccdc101"), new Sungero.Docflow.Shared.ApprovalRuleBaseDepartmentsInfo(typeof(global::Sungero.Docflow.IApprovalRuleBaseDepartments)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("c09f7e32-8f67-4e7d-9a5b-b93c0d780892"), new Sungero.Docflow.Shared.ApprovalRuleBaseDocumentGroupsInfo(typeof(global::Sungero.Docflow.IApprovalRuleBaseDocumentGroups)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("7da25d95-e362-41c0-b37a-4eb4b415da24"), new Sungero.Docflow.Shared.ApprovalRuleBaseDocumentKindsInfo(typeof(global::Sungero.Docflow.IApprovalRuleBaseDocumentKinds)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("3314a57a-07b7-4131-bfc3-413b38507ed1"), new Sungero.Docflow.Shared.ApprovalRuleBaseStagesInfo(typeof(global::Sungero.Docflow.IApprovalRuleBaseStages)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("f61f8073-bd3f-4c4f-857d-da2c22cb94f3"), new Sungero.Docflow.Shared.ApprovalRuleBaseTransitionsInfo(typeof(global::Sungero.Docflow.IApprovalRuleBaseTransitions)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("5d86a6e4-ae51-497a-9122-8a812eba0fc7"), new Sungero.Docflow.Shared.ApprovalSendingAssignmentInfo(typeof(global::Sungero.Docflow.IApprovalSendingAssignment)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Server.IApprovalSendingAssignmentServerPublicFunctions, global::Sungero.Docflow.Server.ApprovalSendingAssignmentServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Shared.IApprovalSendingAssignmentSharedPublicFunctions, global::Sungero.Docflow.Shared.ApprovalSendingAssignmentSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("2af3d84a-5cdd-40ef-860e-a81574a8a5fb"), new Sungero.Docflow.Shared.ApprovalSendingAssignmentCollapsedStagesTypesSenInfo(typeof(global::Sungero.Docflow.IApprovalSendingAssignmentCollapsedStagesTypesSen)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("db516acc-0f02-4ea7-960a-08f3f734db4f"), new Sungero.Docflow.Shared.ApprovalSigningAssignmentInfo(typeof(global::Sungero.Docflow.IApprovalSigningAssignment)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Server.IApprovalSigningAssignmentServerPublicFunctions, global::Sungero.Docflow.Server.ApprovalSigningAssignmentServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Shared.IApprovalSigningAssignmentSharedPublicFunctions, global::Sungero.Docflow.Shared.ApprovalSigningAssignmentSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("970a3e40-2343-4cc7-98a6-7db27370ec13"), new Sungero.Docflow.Shared.ApprovalSigningAssignmentCollapsedStagesTypesSigInfo(typeof(global::Sungero.Docflow.IApprovalSigningAssignmentCollapsedStagesTypesSig)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("b0931934-7981-4139-a398-f0e39abbb981"), new Sungero.Docflow.Shared.ApprovalSimpleAssignmentInfo(typeof(global::Sungero.Docflow.IApprovalSimpleAssignment)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Server.IApprovalSimpleAssignmentServerPublicFunctions, global::Sungero.Docflow.Server.ApprovalSimpleAssignmentServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Shared.IApprovalSimpleAssignmentSharedPublicFunctions, global::Sungero.Docflow.Shared.ApprovalSimpleAssignmentSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("32ce5b61-1be2-4d61-b98a-37b99aff3560"), new Sungero.Docflow.Shared.ApprovalSimpleNotificationInfo(typeof(global::Sungero.Docflow.IApprovalSimpleNotification)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Server.IApprovalSimpleNotificationServerPublicFunctions, global::Sungero.Docflow.Server.ApprovalSimpleNotificationServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Shared.IApprovalSimpleNotificationSharedPublicFunctions, global::Sungero.Docflow.Shared.ApprovalSimpleNotificationSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("bbb34726-4316-4d87-a64d-9dcf74b654f4"), new Sungero.Docflow.Shared.ApprovalStageInfo(typeof(global::Sungero.Docflow.IApprovalStage)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Server.IApprovalStageServerPublicFunctions, global::Sungero.Docflow.Server.ApprovalStageServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Shared.IApprovalStageSharedPublicFunctions, global::Sungero.Docflow.Shared.ApprovalStageSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("b58b8d30-76b1-448c-b71e-b58e0716a840"), new Sungero.Docflow.Shared.ApprovalStageApprovalRolesInfo(typeof(global::Sungero.Docflow.IApprovalStageApprovalRoles)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("278a6b5f-97b8-4f82-a0e7-9b9031ed27d4"), new Sungero.Docflow.Shared.ApprovalStageRecipientsInfo(typeof(global::Sungero.Docflow.IApprovalStageRecipients)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("100950d0-03d2-44f0-9e31-f9c8dfdf3829"), new Sungero.Docflow.Shared.ApprovalTaskInfo(typeof(global::Sungero.Docflow.IApprovalTask)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Server.IApprovalTaskServerPublicFunctions, global::Sungero.Docflow.Server.ApprovalTaskServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Shared.IApprovalTaskSharedPublicFunctions, global::Sungero.Docflow.Shared.ApprovalTaskSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("1b265c59-bc04-4bc0-b3d1-fd7ee58db393"), new Sungero.Docflow.Shared.ApprovalTaskAddApproversInfo(typeof(global::Sungero.Docflow.IApprovalTaskAddApprovers)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("77b0b28f-e4b6-4e28-8295-62959ce8693c"), new Sungero.Docflow.Shared.ApprovalTaskAddApproversExpandedInfo(typeof(global::Sungero.Docflow.IApprovalTaskAddApproversExpanded)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("b38d3987-a68d-4937-a61f-cbe79d5ab5f1"), new Sungero.Docflow.Shared.ApprovalTaskObserversInfo(typeof(global::Sungero.Docflow.IApprovalTaskObservers)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("2cdb67a1-6004-4113-a47d-e6c580bd8909"), new Sungero.Docflow.Shared.ApprovalTaskReqApproversInfo(typeof(global::Sungero.Docflow.IApprovalTaskReqApprovers)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("493bb59e-ae48-4cb5-ab66-071de5f890b0"), new Sungero.Docflow.Shared.CaseFileInfo(typeof(global::Sungero.Docflow.ICaseFile)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Server.ICaseFileServerPublicFunctions, global::Sungero.Docflow.Server.CaseFileServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Shared.ICaseFileSharedPublicFunctions, global::Sungero.Docflow.Shared.CaseFileSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("c9cff422-0936-4dd4-906d-a2fd487e5c2f"), new Sungero.Docflow.Shared.CheckReturnAssignmentInfo(typeof(global::Sungero.Docflow.ICheckReturnAssignment)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Server.ICheckReturnAssignmentServerPublicFunctions, global::Sungero.Docflow.Server.CheckReturnAssignmentServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Shared.ICheckReturnAssignmentSharedPublicFunctions, global::Sungero.Docflow.Shared.CheckReturnAssignmentSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("0d7f53bd-74bd-42d5-93aa-188ac51e5852"), new Sungero.Docflow.Shared.CheckReturnCheckAssignmentInfo(typeof(global::Sungero.Docflow.ICheckReturnCheckAssignment)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Server.ICheckReturnCheckAssignmentServerPublicFunctions, global::Sungero.Docflow.Server.CheckReturnCheckAssignmentServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Shared.ICheckReturnCheckAssignmentSharedPublicFunctions, global::Sungero.Docflow.Shared.CheckReturnCheckAssignmentSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("af000bfc-7c6a-4308-883a-df6fe4ab7265"), new Sungero.Docflow.Shared.CheckReturnTaskInfo(typeof(global::Sungero.Docflow.ICheckReturnTask)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Server.ICheckReturnTaskServerPublicFunctions, global::Sungero.Docflow.Server.CheckReturnTaskServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Shared.ICheckReturnTaskSharedPublicFunctions, global::Sungero.Docflow.Shared.CheckReturnTaskSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("1716f04c-7b1c-4aca-a2ae-46c84f99888b"), new Sungero.Docflow.Shared.CheckReturnTaskObserversInfo(typeof(global::Sungero.Docflow.ICheckReturnTaskObservers)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("3f6f31c3-16e2-457e-9f88-48b254a500d2"), new Sungero.Docflow.Shared.ConditionInfo(typeof(global::Sungero.Docflow.ICondition)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Server.IConditionServerPublicFunctions, global::Sungero.Docflow.Server.ConditionServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Shared.IConditionSharedPublicFunctions, global::Sungero.Docflow.Shared.ConditionSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("25ba16a2-6fe9-4599-a335-9b299752c83f"), new Sungero.Docflow.Shared.ConditionAddresseesInfo(typeof(global::Sungero.Docflow.IConditionAddressees)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("1a4f42ad-c033-4c71-a3c0-9c41bc76d211"), new Sungero.Docflow.Shared.ConditionConditionDocumentKindsInfo(typeof(global::Sungero.Docflow.IConditionConditionDocumentKinds)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("ed2f9e00-ecbd-419a-9ac7-1bba610b5e4e"), new Sungero.Docflow.Shared.ConditionCurrenciesInfo(typeof(global::Sungero.Docflow.IConditionCurrencies)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("64123db7-d49f-4da6-ae43-3a3310ca335c"), new Sungero.Docflow.Shared.ConditionDeliveryMethodsInfo(typeof(global::Sungero.Docflow.IConditionDeliveryMethods)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("994b6df7-cbf2-4dd0-bb16-d980007a2236"), new Sungero.Docflow.Shared.ConditionDocumentKindsInfo(typeof(global::Sungero.Docflow.IConditionDocumentKinds)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("325a0811-c109-483d-bf57-3246eade5644"), new Sungero.Docflow.Shared.ConditionBaseInfo(typeof(global::Sungero.Docflow.IConditionBase)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Server.IConditionBaseServerPublicFunctions, global::Sungero.Docflow.Server.ConditionBaseServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Shared.IConditionBaseSharedPublicFunctions, global::Sungero.Docflow.Shared.ConditionBaseSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("28dd7514-8305-4f7f-8a5b-55a98b8fdecb"), new Sungero.Docflow.Shared.ConditionBaseConditionDocumentKindsInfo(typeof(global::Sungero.Docflow.IConditionBaseConditionDocumentKinds)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("02d2a095-58f6-4746-8a9d-35a55e2f9d64"), new Sungero.Docflow.Shared.ConditionBaseCurrenciesInfo(typeof(global::Sungero.Docflow.IConditionBaseCurrencies)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("7ec8485f-cc13-4da1-bfdb-a9a5f7473e26"), new Sungero.Docflow.Shared.ConditionBaseDeliveryMethodsInfo(typeof(global::Sungero.Docflow.IConditionBaseDeliveryMethods)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("5cfe7890-17a1-40b1-bb97-8c5d9a0c4717"), new Sungero.Docflow.Shared.ConditionBaseDocumentKindsInfo(typeof(global::Sungero.Docflow.IConditionBaseDocumentKinds)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("454df3c6-b850-47cf-897f-a10d767baa77"), new Sungero.Docflow.Shared.ContractualDocumentBaseInfo(typeof(global::Sungero.Docflow.IContractualDocumentBase)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Server.IContractualDocumentBaseServerPublicFunctions, global::Sungero.Docflow.Server.ContractualDocumentBaseServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Shared.IContractualDocumentBaseSharedPublicFunctions, global::Sungero.Docflow.Shared.ContractualDocumentBaseSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("ed823dc9-aa71-4b3e-9fd2-3be45aaef872"), new Sungero.Docflow.Shared.ContractualDocumentBaseTrackingInfo(typeof(global::Sungero.Docflow.IContractualDocumentBaseTracking)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("fb051c49-0b94-48b0-8100-af72495c69d5"), new Sungero.Docflow.Shared.ContractualDocumentBaseVersionsInfo(typeof(global::Sungero.Docflow.IContractualDocumentBaseVersions)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("49d0c5e7-7069-44d2-8eb6-6e3098fc8b10"), new Sungero.Docflow.Shared.CounterpartyDocumentInfo(typeof(global::Sungero.Docflow.ICounterpartyDocument)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Server.ICounterpartyDocumentServerPublicFunctions, global::Sungero.Docflow.Server.CounterpartyDocumentServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Shared.ICounterpartyDocumentSharedPublicFunctions, global::Sungero.Docflow.Shared.CounterpartyDocumentSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("e59c26b4-0386-461e-afc5-df4bf6146533"), new Sungero.Docflow.Shared.CounterpartyDocumentTrackingInfo(typeof(global::Sungero.Docflow.ICounterpartyDocumentTracking)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("aac43fbf-beb1-4891-b709-04118b7caecf"), new Sungero.Docflow.Shared.CounterpartyDocumentVersionsInfo(typeof(global::Sungero.Docflow.ICounterpartyDocumentVersions)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("47f07044-beda-4949-b348-d2afa52ab4ba"), new Sungero.Docflow.Shared.DeadlineExtensionAssignmentInfo(typeof(global::Sungero.Docflow.IDeadlineExtensionAssignment)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Server.IDeadlineExtensionAssignmentServerPublicFunctions, global::Sungero.Docflow.Server.DeadlineExtensionAssignmentServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Shared.IDeadlineExtensionAssignmentSharedPublicFunctions, global::Sungero.Docflow.Shared.DeadlineExtensionAssignmentSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("3dad0441-cd89-4928-b6ff-9b7dd7fc20cf"), new Sungero.Docflow.Shared.DeadlineExtensionNotificationInfo(typeof(global::Sungero.Docflow.IDeadlineExtensionNotification)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Server.IDeadlineExtensionNotificationServerPublicFunctions, global::Sungero.Docflow.Server.DeadlineExtensionNotificationServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Shared.IDeadlineExtensionNotificationSharedPublicFunctions, global::Sungero.Docflow.Shared.DeadlineExtensionNotificationSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("ef92411f-9fd6-4009-8e8f-92c8a2419a0c"), new Sungero.Docflow.Shared.DeadlineExtensionTaskInfo(typeof(global::Sungero.Docflow.IDeadlineExtensionTask)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Server.IDeadlineExtensionTaskServerPublicFunctions, global::Sungero.Docflow.Server.DeadlineExtensionTaskServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Shared.IDeadlineExtensionTaskSharedPublicFunctions, global::Sungero.Docflow.Shared.DeadlineExtensionTaskSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("6e169961-706f-42e3-91c7-7637ec35f38e"), new Sungero.Docflow.Shared.DeadlineExtensionTaskObserversInfo(typeof(global::Sungero.Docflow.IDeadlineExtensionTaskObservers)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("6d840402-fdbb-4e90-8f2b-1c7950ccccdc"), new Sungero.Docflow.Shared.DeadlineRejectionAssignmentInfo(typeof(global::Sungero.Docflow.IDeadlineRejectionAssignment)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Server.IDeadlineRejectionAssignmentServerPublicFunctions, global::Sungero.Docflow.Server.DeadlineRejectionAssignmentServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Shared.IDeadlineRejectionAssignmentSharedPublicFunctions, global::Sungero.Docflow.Shared.DeadlineRejectionAssignmentSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("45dafa52-eb1d-47fc-b363-896b1e7b5b21"), new Sungero.Docflow.Shared.DistributionListInfo(typeof(global::Sungero.Docflow.IDistributionList)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Server.IDistributionListServerPublicFunctions, global::Sungero.Docflow.Server.DistributionListServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Shared.IDistributionListSharedPublicFunctions, global::Sungero.Docflow.Shared.DistributionListSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("387f2c0e-0ef4-44da-ad33-8d261fe14a53"), new Sungero.Docflow.Shared.DistributionListAddresseesInfo(typeof(global::Sungero.Docflow.IDistributionListAddressees)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("de73a02c-c1bf-4edf-bee4-bf2705d282b8"), new Sungero.Docflow.Shared.DocumentGrantRightsQueueItemInfo(typeof(global::Sungero.Docflow.IDocumentGrantRightsQueueItem)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Server.IDocumentGrantRightsQueueItemServerPublicFunctions, global::Sungero.Docflow.Server.DocumentGrantRightsQueueItemServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Shared.IDocumentGrantRightsQueueItemSharedPublicFunctions, global::Sungero.Docflow.Shared.DocumentGrantRightsQueueItemSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("f5061291-4ac6-428f-b091-d53acdbe9ae5"), new Sungero.Docflow.Shared.DocumentGroupBaseInfo(typeof(global::Sungero.Docflow.IDocumentGroupBase)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Server.IDocumentGroupBaseServerPublicFunctions, global::Sungero.Docflow.Server.DocumentGroupBaseServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Shared.IDocumentGroupBaseSharedPublicFunctions, global::Sungero.Docflow.Shared.DocumentGroupBaseSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("b93e4c56-b907-4999-abf9-4fce555b3fe3"), new Sungero.Docflow.Shared.DocumentGroupBaseDocumentKindsInfo(typeof(global::Sungero.Docflow.IDocumentGroupBaseDocumentKinds)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("14a59623-89a2-4ea8-b6e9-2ad4365f358c"), new Sungero.Docflow.Shared.DocumentKindInfo(typeof(global::Sungero.Docflow.IDocumentKind)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Server.IDocumentKindServerPublicFunctions, global::Sungero.Docflow.Server.DocumentKindServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Shared.IDocumentKindSharedPublicFunctions, global::Sungero.Docflow.Shared.DocumentKindSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("79e911f6-531b-482f-8984-a89bb41f65f6"), new Sungero.Docflow.Shared.DocumentKindAvailableActionsInfo(typeof(global::Sungero.Docflow.IDocumentKindAvailableActions)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("d7800dd5-a9d2-41e9-bbc4-a39292ac1eeb"), new Sungero.Docflow.Shared.DocumentRegisterInfo(typeof(global::Sungero.Docflow.IDocumentRegister)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Server.IDocumentRegisterServerPublicFunctions, global::Sungero.Docflow.Server.DocumentRegisterServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Shared.IDocumentRegisterSharedPublicFunctions, global::Sungero.Docflow.Shared.DocumentRegisterSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("35d03412-687a-4413-9b6b-8390863be84c"), new Sungero.Docflow.Shared.DocumentRegisterNumberFormatItemsInfo(typeof(global::Sungero.Docflow.IDocumentRegisterNumberFormatItems)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("218ac7df-9b29-400a-b3fc-c2e22927f638"), new Sungero.Docflow.Shared.DocumentSendActionInfo(typeof(global::Sungero.Docflow.IDocumentSendAction)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Server.IDocumentSendActionServerPublicFunctions, global::Sungero.Docflow.Server.DocumentSendActionServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Shared.IDocumentSendActionSharedPublicFunctions, global::Sungero.Docflow.Shared.DocumentSendActionSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("5ab5b1d7-615f-4c32-a624-dd43baf6c8cd"), new Sungero.Docflow.Shared.DocumentTemplateInfo(typeof(global::Sungero.Docflow.IDocumentTemplate)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Server.IDocumentTemplateServerPublicFunctions, global::Sungero.Docflow.Server.DocumentTemplateServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Shared.IDocumentTemplateSharedPublicFunctions, global::Sungero.Docflow.Shared.DocumentTemplateSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("b1ce78f8-84c2-4a91-82a6-e82a0d318f04"), new Sungero.Docflow.Shared.DocumentTemplateBusinessUnitsInfo(typeof(global::Sungero.Docflow.IDocumentTemplateBusinessUnits)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("aa04723b-5dd6-49e5-9254-a36e245c045c"), new Sungero.Docflow.Shared.DocumentTemplateDepartmentsInfo(typeof(global::Sungero.Docflow.IDocumentTemplateDepartments)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("95086795-1b7c-4fc3-83a4-393f5d6520eb"), new Sungero.Docflow.Shared.DocumentTemplateDocumentKindsInfo(typeof(global::Sungero.Docflow.IDocumentTemplateDocumentKinds)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("de4029f1-bb10-43ed-836c-1b1badc2ecab"), new Sungero.Docflow.Shared.DocumentTemplateVersionsInfo(typeof(global::Sungero.Docflow.IDocumentTemplateVersions)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("0896aa80-e1da-4a1e-9485-d172f8e242bc"), new Sungero.Docflow.Shared.DocumentTypeInfo(typeof(global::Sungero.Docflow.IDocumentType)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Server.IDocumentTypeServerPublicFunctions, global::Sungero.Docflow.Server.DocumentTypeServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Shared.IDocumentTypeSharedPublicFunctions, global::Sungero.Docflow.Shared.DocumentTypeSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("cf8357c3-8266-490d-b75e-0bd3e46b1ae8"), new Sungero.Docflow.Shared.ExchangeDocumentInfo(typeof(global::Sungero.Docflow.IExchangeDocument)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Server.IExchangeDocumentServerPublicFunctions, global::Sungero.Docflow.Server.ExchangeDocumentServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Shared.IExchangeDocumentSharedPublicFunctions, global::Sungero.Docflow.Shared.ExchangeDocumentSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("0e2940ab-8568-4d47-a112-6d4a5cdb2d6d"), new Sungero.Docflow.Shared.ExchangeDocumentTrackingInfo(typeof(global::Sungero.Docflow.IExchangeDocumentTracking)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("f233f366-247d-4435-aa33-6746020e4f0d"), new Sungero.Docflow.Shared.ExchangeDocumentVersionsInfo(typeof(global::Sungero.Docflow.IExchangeDocumentVersions)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("b222993f-f582-43a8-b210-2a27f4285feb"), new Sungero.Docflow.Shared.FileRetentionPeriodInfo(typeof(global::Sungero.Docflow.IFileRetentionPeriod)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Server.IFileRetentionPeriodServerPublicFunctions, global::Sungero.Docflow.Server.FileRetentionPeriodServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Shared.IFileRetentionPeriodSharedPublicFunctions, global::Sungero.Docflow.Shared.FileRetentionPeriodSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("01be6c28-8785-4f74-9877-e3270704452e"), new Sungero.Docflow.Shared.FreeApprovalAssignmentInfo(typeof(global::Sungero.Docflow.IFreeApprovalAssignment)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Server.IFreeApprovalAssignmentServerPublicFunctions, global::Sungero.Docflow.Server.FreeApprovalAssignmentServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Shared.IFreeApprovalAssignmentSharedPublicFunctions, global::Sungero.Docflow.Shared.FreeApprovalAssignmentSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("d3277007-c49f-4aaa-a0f7-e397fa4fb9fc"), new Sungero.Docflow.Shared.FreeApprovalFinishAssignmentInfo(typeof(global::Sungero.Docflow.IFreeApprovalFinishAssignment)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Server.IFreeApprovalFinishAssignmentServerPublicFunctions, global::Sungero.Docflow.Server.FreeApprovalFinishAssignmentServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Shared.IFreeApprovalFinishAssignmentSharedPublicFunctions, global::Sungero.Docflow.Shared.FreeApprovalFinishAssignmentSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("7d9816f6-1dea-4718-84a5-1a413df81145"), new Sungero.Docflow.Shared.FreeApprovalNotificationInfo(typeof(global::Sungero.Docflow.IFreeApprovalNotification)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Server.IFreeApprovalNotificationServerPublicFunctions, global::Sungero.Docflow.Server.FreeApprovalNotificationServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Shared.IFreeApprovalNotificationSharedPublicFunctions, global::Sungero.Docflow.Shared.FreeApprovalNotificationSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("593ff79e-38b4-4903-b20e-9e08cfea6307"), new Sungero.Docflow.Shared.FreeApprovalReworkAssignmentInfo(typeof(global::Sungero.Docflow.IFreeApprovalReworkAssignment)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Server.IFreeApprovalReworkAssignmentServerPublicFunctions, global::Sungero.Docflow.Server.FreeApprovalReworkAssignmentServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Shared.IFreeApprovalReworkAssignmentSharedPublicFunctions, global::Sungero.Docflow.Shared.FreeApprovalReworkAssignmentSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("f4f000d4-c9ca-4209-aa95-b393914ac346"), new Sungero.Docflow.Shared.FreeApprovalReworkAssignmentApproversInfo(typeof(global::Sungero.Docflow.IFreeApprovalReworkAssignmentApprovers)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("77f43035-9f23-4a19-9882-5a6a2cd5c9c7"), new Sungero.Docflow.Shared.FreeApprovalTaskInfo(typeof(global::Sungero.Docflow.IFreeApprovalTask)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Server.IFreeApprovalTaskServerPublicFunctions, global::Sungero.Docflow.Server.FreeApprovalTaskServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Shared.IFreeApprovalTaskSharedPublicFunctions, global::Sungero.Docflow.Shared.FreeApprovalTaskSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("14eba997-b59e-4384-9ac7-a53468399b19"), new Sungero.Docflow.Shared.FreeApprovalTaskApproversInfo(typeof(global::Sungero.Docflow.IFreeApprovalTaskApprovers)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("b4e9ae1d-1ed1-402e-b379-46c5949d643f"), new Sungero.Docflow.Shared.FreeApprovalTaskObserversInfo(typeof(global::Sungero.Docflow.IFreeApprovalTaskObservers)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("4e7bf176-40b2-4e5d-b10b-af81ad7c62c3"), new Sungero.Docflow.Shared.IncomingDocumentBaseInfo(typeof(global::Sungero.Docflow.IIncomingDocumentBase)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Server.IIncomingDocumentBaseServerPublicFunctions, global::Sungero.Docflow.Server.IncomingDocumentBaseServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Shared.IIncomingDocumentBaseSharedPublicFunctions, global::Sungero.Docflow.Shared.IncomingDocumentBaseSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("7c62bf15-4856-4feb-85e7-4b139a6d4771"), new Sungero.Docflow.Shared.IncomingDocumentBaseTrackingInfo(typeof(global::Sungero.Docflow.IIncomingDocumentBaseTracking)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("c6517906-ec88-4944-9b82-2dd280728c54"), new Sungero.Docflow.Shared.IncomingDocumentBaseVersionsInfo(typeof(global::Sungero.Docflow.IIncomingDocumentBaseVersions)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("ce3e34ed-7be2-4426-a951-d5a70f966650"), new Sungero.Docflow.Shared.InternalDocumentBaseInfo(typeof(global::Sungero.Docflow.IInternalDocumentBase)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Server.IInternalDocumentBaseServerPublicFunctions, global::Sungero.Docflow.Server.InternalDocumentBaseServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Shared.IInternalDocumentBaseSharedPublicFunctions, global::Sungero.Docflow.Shared.InternalDocumentBaseSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("8686b382-12c4-4dad-bd3e-d9067fce92d3"), new Sungero.Docflow.Shared.InternalDocumentBaseTrackingInfo(typeof(global::Sungero.Docflow.IInternalDocumentBaseTracking)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("38660ede-96d3-4c57-87a5-8fe53a47615c"), new Sungero.Docflow.Shared.InternalDocumentBaseVersionsInfo(typeof(global::Sungero.Docflow.IInternalDocumentBaseVersions)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("276d7e4a-ea11-4740-af17-893abc6bc6e9"), new Sungero.Docflow.Shared.MailDeliveryMethodInfo(typeof(global::Sungero.Docflow.IMailDeliveryMethod)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Server.IMailDeliveryMethodServerPublicFunctions, global::Sungero.Docflow.Server.MailDeliveryMethodServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Shared.IMailDeliveryMethodSharedPublicFunctions, global::Sungero.Docflow.Shared.MailDeliveryMethodSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("95af409b-83fe-4697-a805-5a86ceec33f5"), new Sungero.Docflow.Shared.MemoInfo(typeof(global::Sungero.Docflow.IMemo)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Server.IMemoServerPublicFunctions, global::Sungero.Docflow.Server.MemoServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Shared.IMemoSharedPublicFunctions, global::Sungero.Docflow.Shared.MemoSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("82a14802-ad45-4d52-a590-2031154ba6c7"), new Sungero.Docflow.Shared.MemoTrackingInfo(typeof(global::Sungero.Docflow.IMemoTracking)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("c63dffea-085c-42ff-80f9-e479a7db997b"), new Sungero.Docflow.Shared.MemoVersionsInfo(typeof(global::Sungero.Docflow.IMemoVersions)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("f9a837b7-289e-4f03-a920-0284a778bcbf"), new Sungero.Docflow.Shared.MinutesBaseInfo(typeof(global::Sungero.Docflow.IMinutesBase)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Server.IMinutesBaseServerPublicFunctions, global::Sungero.Docflow.Server.MinutesBaseServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Shared.IMinutesBaseSharedPublicFunctions, global::Sungero.Docflow.Shared.MinutesBaseSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("36482dd6-708f-4d56-921b-ea1e01c74794"), new Sungero.Docflow.Shared.MinutesBaseTrackingInfo(typeof(global::Sungero.Docflow.IMinutesBaseTracking)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("2219ecca-7a8b-4678-bbe7-3dbc6e7ffa93"), new Sungero.Docflow.Shared.MinutesBaseVersionsInfo(typeof(global::Sungero.Docflow.IMinutesBaseVersions)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("58cca102-1e97-4f07-b6ac-fd866a8b7cb1"), new Sungero.Docflow.Shared.OfficialDocumentInfo(typeof(global::Sungero.Docflow.IOfficialDocument)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Server.IOfficialDocumentServerPublicFunctions, global::Sungero.Docflow.Server.OfficialDocumentServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Shared.IOfficialDocumentSharedPublicFunctions, global::Sungero.Docflow.Shared.OfficialDocumentSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("2d7f6507-6d0a-4bb7-b2a1-2f4248b962e7"), new Sungero.Docflow.Shared.OfficialDocumentTrackingInfo(typeof(global::Sungero.Docflow.IOfficialDocumentTracking)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("6180769e-de94-43ff-8894-e32cb5260789"), new Sungero.Docflow.Shared.OfficialDocumentVersionsInfo(typeof(global::Sungero.Docflow.IOfficialDocumentVersions)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("f5f104fb-52e4-422b-9de1-a36937d85a2d"), new Sungero.Docflow.Shared.OutgoingDocumentBaseInfo(typeof(global::Sungero.Docflow.IOutgoingDocumentBase)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Server.IOutgoingDocumentBaseServerPublicFunctions, global::Sungero.Docflow.Server.OutgoingDocumentBaseServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Shared.IOutgoingDocumentBaseSharedPublicFunctions, global::Sungero.Docflow.Shared.OutgoingDocumentBaseSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("0f69e0e7-71ef-4df0-8237-39acb1d5d679"), new Sungero.Docflow.Shared.OutgoingDocumentBaseAddresseesInfo(typeof(global::Sungero.Docflow.IOutgoingDocumentBaseAddressees)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("6c719f38-9de5-4e00-9ead-e963c03cae9b"), new Sungero.Docflow.Shared.OutgoingDocumentBaseTrackingInfo(typeof(global::Sungero.Docflow.IOutgoingDocumentBaseTracking)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("c3ce5ceb-6563-4d57-bab9-64800301243c"), new Sungero.Docflow.Shared.OutgoingDocumentBaseVersionsInfo(typeof(global::Sungero.Docflow.IOutgoingDocumentBaseVersions)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("edabdc0e-13d1-45e0-82a8-e60a5ea5bf68"), new Sungero.Docflow.Shared.PersonalSettingInfo(typeof(global::Sungero.Docflow.IPersonalSetting)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Server.IPersonalSettingServerPublicFunctions, global::Sungero.Docflow.Server.PersonalSettingServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Shared.IPersonalSettingSharedPublicFunctions, global::Sungero.Docflow.Shared.PersonalSettingSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("be859f9b-7a04-4f07-82bc-441352bce627"), new Sungero.Docflow.Shared.PowerOfAttorneyInfo(typeof(global::Sungero.Docflow.IPowerOfAttorney)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Server.IPowerOfAttorneyServerPublicFunctions, global::Sungero.Docflow.Server.PowerOfAttorneyServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Shared.IPowerOfAttorneySharedPublicFunctions, global::Sungero.Docflow.Shared.PowerOfAttorneySharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("936845e0-cd12-426c-b53e-a5cfc13a69a8"), new Sungero.Docflow.Shared.PowerOfAttorneyTrackingInfo(typeof(global::Sungero.Docflow.IPowerOfAttorneyTracking)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("c6798c1f-1d6d-4250-b2d3-88f5f04f745c"), new Sungero.Docflow.Shared.PowerOfAttorneyVersionsInfo(typeof(global::Sungero.Docflow.IPowerOfAttorneyVersions)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("da8d959b-cd0c-4fab-8ff2-053d7c2a826b"), new Sungero.Docflow.Shared.ProjectBaseInfo(typeof(global::Sungero.Docflow.IProjectBase)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Server.IProjectBaseServerPublicFunctions, global::Sungero.Docflow.Server.ProjectBaseServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Shared.IProjectBaseSharedPublicFunctions, global::Sungero.Docflow.Shared.ProjectBaseSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("6eddf9a4-bf7b-4cac-961b-a1f0f0bc7ab6"), new Sungero.Docflow.Shared.RegistrationGroupInfo(typeof(global::Sungero.Docflow.IRegistrationGroup)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Server.IRegistrationGroupServerPublicFunctions, global::Sungero.Docflow.Server.RegistrationGroupServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Shared.IRegistrationGroupSharedPublicFunctions, global::Sungero.Docflow.Shared.RegistrationGroupSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("fa2d7d49-b02a-4d89-a3bc-70a99999c61d"), new Sungero.Docflow.Shared.RegistrationGroupDepartmentsInfo(typeof(global::Sungero.Docflow.IRegistrationGroupDepartments)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("8371fa12-018a-43da-a8b9-786be12e040c"), new Sungero.Docflow.Shared.RegistrationGroupRecipientLinksInfo(typeof(global::Sungero.Docflow.IRegistrationGroupRecipientLinks)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("ff9c10ff-2c62-43cd-8bcf-d6184359b5b6"), new Sungero.Docflow.Shared.RegistrationSettingInfo(typeof(global::Sungero.Docflow.IRegistrationSetting)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Server.IRegistrationSettingServerPublicFunctions, global::Sungero.Docflow.Server.RegistrationSettingServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Shared.IRegistrationSettingSharedPublicFunctions, global::Sungero.Docflow.Shared.RegistrationSettingSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("76b0a804-95c9-424a-82c4-a50af0335e89"), new Sungero.Docflow.Shared.RegistrationSettingBusinessUnitsInfo(typeof(global::Sungero.Docflow.IRegistrationSettingBusinessUnits)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("12d9bfd1-5355-4b88-8084-3288d8e2b564"), new Sungero.Docflow.Shared.RegistrationSettingDepartmentsInfo(typeof(global::Sungero.Docflow.IRegistrationSettingDepartments)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("685d0720-fd98-4f00-8822-35bd8a5ef1ca"), new Sungero.Docflow.Shared.RegistrationSettingDocumentKindsInfo(typeof(global::Sungero.Docflow.IRegistrationSettingDocumentKinds)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("3af27f75-55f4-41be-802a-9424a8ba9c41"), new Sungero.Docflow.Shared.RetentionPolicyInfo(typeof(global::Sungero.Docflow.IRetentionPolicy)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Server.IRetentionPolicyServerPublicFunctions, global::Sungero.Docflow.Server.RetentionPolicyServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Shared.IRetentionPolicySharedPublicFunctions, global::Sungero.Docflow.Shared.RetentionPolicySharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("93dd73b5-427c-4cea-821e-6e265c8cfbb1"), new Sungero.Docflow.Shared.RetentionPolicyDocumentKindsInfo(typeof(global::Sungero.Docflow.IRetentionPolicyDocumentKinds)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("19f9b6d8-b072-4af0-b6e1-3f8a339506be"), new Sungero.Docflow.Shared.SignatureSettingInfo(typeof(global::Sungero.Docflow.ISignatureSetting)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Server.ISignatureSettingServerPublicFunctions, global::Sungero.Docflow.Server.SignatureSettingServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Shared.ISignatureSettingSharedPublicFunctions, global::Sungero.Docflow.Shared.SignatureSettingSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("8de9438e-0af4-47df-8155-4b7b90c8d3d1"), new Sungero.Docflow.Shared.SignatureSettingBusinessUnitsInfo(typeof(global::Sungero.Docflow.ISignatureSettingBusinessUnits)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("9dc422bc-7d00-4fab-884b-0dba748a4ea3"), new Sungero.Docflow.Shared.SignatureSettingCategoriesInfo(typeof(global::Sungero.Docflow.ISignatureSettingCategories)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("ba716656-bb74-4879-ada1-5f735e179840"), new Sungero.Docflow.Shared.SignatureSettingDepartmentsInfo(typeof(global::Sungero.Docflow.ISignatureSettingDepartments)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("7eeef0f4-ad1e-4dc8-84f7-470a29f7fd91"), new Sungero.Docflow.Shared.SignatureSettingDocumentKindsInfo(typeof(global::Sungero.Docflow.ISignatureSettingDocumentKinds)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("09584896-81e2-4c83-8f6c-70eb8321e1d0"), new Sungero.Docflow.Shared.SimpleDocumentInfo(typeof(global::Sungero.Docflow.ISimpleDocument)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Server.ISimpleDocumentServerPublicFunctions, global::Sungero.Docflow.Server.SimpleDocumentServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Shared.ISimpleDocumentSharedPublicFunctions, global::Sungero.Docflow.Shared.SimpleDocumentSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("2eb04f01-414a-46db-81f8-c6c730520c0e"), new Sungero.Docflow.Shared.SimpleDocumentTrackingInfo(typeof(global::Sungero.Docflow.ISimpleDocumentTracking)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("fd2c202d-eb66-400e-9cc8-9ade81d34c91"), new Sungero.Docflow.Shared.SimpleDocumentVersionsInfo(typeof(global::Sungero.Docflow.ISimpleDocumentVersions)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("22610ea3-dd6d-4aee-b7cc-0ba6cd179eb1"), new Sungero.Docflow.Shared.SmartProcessingSettingInfo(typeof(global::Sungero.Docflow.ISmartProcessingSetting)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Server.ISmartProcessingSettingServerPublicFunctions, global::Sungero.Docflow.Server.SmartProcessingSettingServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Shared.ISmartProcessingSettingSharedPublicFunctions, global::Sungero.Docflow.Shared.SmartProcessingSettingSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("9291a868-0317-4b38-880b-45688b98506c"), new Sungero.Docflow.Shared.SmartProcessingSettingAdditionalClassifiersInfo(typeof(global::Sungero.Docflow.ISmartProcessingSettingAdditionalClassifiers)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("1b054ae6-1507-423d-bc1c-347a231d7ba6"), new Sungero.Docflow.Shared.SmartProcessingSettingCaptureSourcesInfo(typeof(global::Sungero.Docflow.ISmartProcessingSettingCaptureSources)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("ccdb4976-9dbb-455d-80b7-61047f3c4e5c"), new Sungero.Docflow.Shared.SmartProcessingSettingProcessingRulesInfo(typeof(global::Sungero.Docflow.ISmartProcessingSettingProcessingRules)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("9fed5653-77e7-4543-b071-6586033907ef"), new Sungero.Docflow.Shared.StoragePolicyInfo(typeof(global::Sungero.Docflow.IStoragePolicy)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Server.IStoragePolicyServerPublicFunctions, global::Sungero.Docflow.Server.StoragePolicyServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Shared.IStoragePolicySharedPublicFunctions, global::Sungero.Docflow.Shared.StoragePolicySharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("88b065de-b495-48e4-afe9-d7523abcd755"), new Sungero.Docflow.Shared.StoragePolicyDocumentKindsInfo(typeof(global::Sungero.Docflow.IStoragePolicyDocumentKinds)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("a745bc15-ae3d-4fdc-a136-3715a923b3d9"), new Sungero.Docflow.Shared.StoragePolicyBaseInfo(typeof(global::Sungero.Docflow.IStoragePolicyBase)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Server.IStoragePolicyBaseServerPublicFunctions, global::Sungero.Docflow.Server.StoragePolicyBaseServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Shared.IStoragePolicyBaseSharedPublicFunctions, global::Sungero.Docflow.Shared.StoragePolicyBaseSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("112c0e12-b9ae-415d-9982-64a2df7cd193"), new Sungero.Docflow.Shared.StoragePolicyBaseDocumentKindsInfo(typeof(global::Sungero.Docflow.IStoragePolicyBaseDocumentKinds)));


      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.IAccessRightsRuleFilterState, global::Sungero.Docflow.Shared.AccessRightsRule.AccessRightsRuleFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.IAccountingDocumentBaseFilterState, global::Sungero.Docflow.Shared.AccountingDocumentBase.AccountingDocumentBaseFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.IAddendumFilterState, global::Sungero.Docflow.Shared.Addendum.AddendumFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.IApprovalAssignmentFilterState, global::Sungero.Docflow.Shared.ApprovalAssignment.ApprovalAssignmentFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.IApprovalCheckingAssignmentFilterState, global::Sungero.Docflow.Shared.ApprovalCheckingAssignment.ApprovalCheckingAssignmentFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.IApprovalCheckReturnAssignmentFilterState, global::Sungero.Docflow.Shared.ApprovalCheckReturnAssignment.ApprovalCheckReturnAssignmentFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.IApprovalExecutionAssignmentFilterState, global::Sungero.Docflow.Shared.ApprovalExecutionAssignment.ApprovalExecutionAssignmentFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.IApprovalManagerAssignmentFilterState, global::Sungero.Docflow.Shared.ApprovalManagerAssignment.ApprovalManagerAssignmentFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.IApprovalNotificationFilterState, global::Sungero.Docflow.Shared.ApprovalNotification.ApprovalNotificationFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.IApprovalPrintingAssignmentFilterState, global::Sungero.Docflow.Shared.ApprovalPrintingAssignment.ApprovalPrintingAssignmentFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.IApprovalRegistrationAssignmentFilterState, global::Sungero.Docflow.Shared.ApprovalRegistrationAssignment.ApprovalRegistrationAssignmentFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.IApprovalReviewAssignmentFilterState, global::Sungero.Docflow.Shared.ApprovalReviewAssignment.ApprovalReviewAssignmentFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.IApprovalReworkAssignmentFilterState, global::Sungero.Docflow.Shared.ApprovalReworkAssignment.ApprovalReworkAssignmentFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.IApprovalRoleFilterState, global::Sungero.Docflow.Shared.ApprovalRole.ApprovalRoleFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.IApprovalRoleBaseFilterState, global::Sungero.Docflow.Shared.ApprovalRoleBase.ApprovalRoleBaseFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.IApprovalRuleFilterState, global::Sungero.Docflow.Shared.ApprovalRule.ApprovalRuleFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.IApprovalRuleBaseFilterState, global::Sungero.Docflow.Shared.ApprovalRuleBase.ApprovalRuleBaseFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.IApprovalSendingAssignmentFilterState, global::Sungero.Docflow.Shared.ApprovalSendingAssignment.ApprovalSendingAssignmentFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.IApprovalSigningAssignmentFilterState, global::Sungero.Docflow.Shared.ApprovalSigningAssignment.ApprovalSigningAssignmentFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.IApprovalSimpleAssignmentFilterState, global::Sungero.Docflow.Shared.ApprovalSimpleAssignment.ApprovalSimpleAssignmentFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.IApprovalSimpleNotificationFilterState, global::Sungero.Docflow.Shared.ApprovalSimpleNotification.ApprovalSimpleNotificationFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.IApprovalStageFilterState, global::Sungero.Docflow.Shared.ApprovalStage.ApprovalStageFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.IApprovalTaskFilterState, global::Sungero.Docflow.Shared.ApprovalTask.ApprovalTaskFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.ICaseFileFilterState, global::Sungero.Docflow.Shared.CaseFile.CaseFileFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.ICheckReturnAssignmentFilterState, global::Sungero.Docflow.Shared.CheckReturnAssignment.CheckReturnAssignmentFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.ICheckReturnCheckAssignmentFilterState, global::Sungero.Docflow.Shared.CheckReturnCheckAssignment.CheckReturnCheckAssignmentFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.ICheckReturnTaskFilterState, global::Sungero.Docflow.Shared.CheckReturnTask.CheckReturnTaskFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.IConditionFilterState, global::Sungero.Docflow.Shared.Condition.ConditionFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.IConditionBaseFilterState, global::Sungero.Docflow.Shared.ConditionBase.ConditionBaseFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.IContractualDocumentBaseFilterState, global::Sungero.Docflow.Shared.ContractualDocumentBase.ContractualDocumentBaseFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.ICounterpartyDocumentFilterState, global::Sungero.Docflow.Shared.CounterpartyDocument.CounterpartyDocumentFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.IDeadlineExtensionAssignmentFilterState, global::Sungero.Docflow.Shared.DeadlineExtensionAssignment.DeadlineExtensionAssignmentFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.IDeadlineExtensionNotificationFilterState, global::Sungero.Docflow.Shared.DeadlineExtensionNotification.DeadlineExtensionNotificationFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.IDeadlineExtensionTaskFilterState, global::Sungero.Docflow.Shared.DeadlineExtensionTask.DeadlineExtensionTaskFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.IDeadlineRejectionAssignmentFilterState, global::Sungero.Docflow.Shared.DeadlineRejectionAssignment.DeadlineRejectionAssignmentFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.IDistributionListFilterState, global::Sungero.Docflow.Shared.DistributionList.DistributionListFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.IDocumentGrantRightsQueueItemFilterState, global::Sungero.Docflow.Shared.DocumentGrantRightsQueueItem.DocumentGrantRightsQueueItemFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.IDocumentGroupBaseFilterState, global::Sungero.Docflow.Shared.DocumentGroupBase.DocumentGroupBaseFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.IDocumentKindFilterState, global::Sungero.Docflow.Shared.DocumentKind.DocumentKindFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.IDocumentRegisterFilterState, global::Sungero.Docflow.Shared.DocumentRegister.DocumentRegisterFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.IDocumentSendActionFilterState, global::Sungero.Docflow.Shared.DocumentSendAction.DocumentSendActionFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.IDocumentTemplateFilterState, global::Sungero.Docflow.Shared.DocumentTemplate.DocumentTemplateFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.IDocumentTypeFilterState, global::Sungero.Docflow.Shared.DocumentType.DocumentTypeFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.IExchangeDocumentFilterState, global::Sungero.Docflow.Shared.ExchangeDocument.ExchangeDocumentFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.IFileRetentionPeriodFilterState, global::Sungero.Docflow.Shared.FileRetentionPeriod.FileRetentionPeriodFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.IFreeApprovalAssignmentFilterState, global::Sungero.Docflow.Shared.FreeApprovalAssignment.FreeApprovalAssignmentFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.IFreeApprovalFinishAssignmentFilterState, global::Sungero.Docflow.Shared.FreeApprovalFinishAssignment.FreeApprovalFinishAssignmentFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.IFreeApprovalNotificationFilterState, global::Sungero.Docflow.Shared.FreeApprovalNotification.FreeApprovalNotificationFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.IFreeApprovalReworkAssignmentFilterState, global::Sungero.Docflow.Shared.FreeApprovalReworkAssignment.FreeApprovalReworkAssignmentFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.IFreeApprovalTaskFilterState, global::Sungero.Docflow.Shared.FreeApprovalTask.FreeApprovalTaskFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.IIncomingDocumentBaseFilterState, global::Sungero.Docflow.Shared.IncomingDocumentBase.IncomingDocumentBaseFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.IInternalDocumentBaseFilterState, global::Sungero.Docflow.Shared.InternalDocumentBase.InternalDocumentBaseFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.IMailDeliveryMethodFilterState, global::Sungero.Docflow.Shared.MailDeliveryMethod.MailDeliveryMethodFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.IMemoFilterState, global::Sungero.Docflow.Shared.Memo.MemoFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.IMinutesBaseFilterState, global::Sungero.Docflow.Shared.MinutesBase.MinutesBaseFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.IOfficialDocumentFilterState, global::Sungero.Docflow.Shared.OfficialDocument.OfficialDocumentFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.IOutgoingDocumentBaseFilterState, global::Sungero.Docflow.Shared.OutgoingDocumentBase.OutgoingDocumentBaseFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.IPersonalSettingFilterState, global::Sungero.Docflow.Shared.PersonalSetting.PersonalSettingFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.IPowerOfAttorneyFilterState, global::Sungero.Docflow.Shared.PowerOfAttorney.PowerOfAttorneyFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.IProjectBaseFilterState, global::Sungero.Docflow.Shared.ProjectBase.ProjectBaseFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.IRegistrationGroupFilterState, global::Sungero.Docflow.Shared.RegistrationGroup.RegistrationGroupFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.IRegistrationSettingFilterState, global::Sungero.Docflow.Shared.RegistrationSetting.RegistrationSettingFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.IRetentionPolicyFilterState, global::Sungero.Docflow.Shared.RetentionPolicy.RetentionPolicyFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.ISignatureSettingFilterState, global::Sungero.Docflow.Shared.SignatureSetting.SignatureSettingFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.ISimpleDocumentFilterState, global::Sungero.Docflow.Shared.SimpleDocument.SimpleDocumentFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.ISmartProcessingSettingFilterState, global::Sungero.Docflow.Shared.SmartProcessingSetting.SmartProcessingSettingFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.IStoragePolicyFilterState, global::Sungero.Docflow.Shared.StoragePolicy.StoragePolicyFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.IStoragePolicyBaseFilterState, global::Sungero.Docflow.Shared.StoragePolicyBase.StoragePolicyBaseFilterState>();


      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.FolderFilterState.IApprovalRulesFilterState, global::Sungero.Docflow.Shared.ApprovalRulesFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.FolderFilterState.IStoragePolicyFilterState, global::Sungero.Docflow.Shared.StoragePolicyFilterState>();


      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Server.IModuleServerPublicFunctions, global::Sungero.Docflow.Server.ModuleServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Shared.IModuleSharedPublicFunctions, global::Sungero.Docflow.Shared.ModuleSharedPublicFunctions>();
    }
  }
}

// ==================================================================
// ModuleHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
  public partial class ApprovalRulesFolderHandlers
  {
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    protected global::Sungero.Docflow.FolderFilterState.IApprovalRulesFilterState Filter { get; private set; }

    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    public global::System.Boolean _disableUiFiltering { get; protected set; }

    private global::Sungero.Docflow.FolderFilterState.IApprovalRulesFilterState _filter
    {
      get
      {
        return this.Filter;
      }
    }

    public virtual global::System.Boolean IsApprovalRulesVisible()
    {
      return true;
    }

    public virtual global::System.Linq.IQueryable<global::Sungero.Company.IBusinessUnit> ApprovalRulesBusinessUnitFiltering(global::System.Linq.IQueryable<global::Sungero.Company.IBusinessUnit> query)
    {
      return query;
    }


    public virtual global::System.Linq.IQueryable<global::Sungero.Company.IDepartment> ApprovalRulesDepartmentFiltering(global::System.Linq.IQueryable<global::Sungero.Company.IDepartment> query)
    {
      return query;
    }


    public ApprovalRulesFolderHandlers(global::Sungero.Docflow.FolderFilterState.IApprovalRulesFilterState filter)
    {
      this.Filter = filter;
    }
  }

  public partial class StoragePolicyFolderHandlers
  {
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    protected global::Sungero.Docflow.FolderFilterState.IStoragePolicyFilterState Filter { get; private set; }

    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    public global::System.Boolean _disableUiFiltering { get; protected set; }

    private global::Sungero.Docflow.FolderFilterState.IStoragePolicyFilterState _filter
    {
      get
      {
        return this.Filter;
      }
    }

    public virtual global::System.Boolean IsStoragePolicyVisible()
    {
      return true;
    }

    public virtual global::System.Linq.IQueryable<global::Sungero.Docflow.IDocumentKind> StoragePolicyDocumentKindFiltering(global::System.Linq.IQueryable<global::Sungero.Docflow.IDocumentKind> query)
    {
      return query;
    }


    public StoragePolicyFolderHandlers(global::Sungero.Docflow.FolderFilterState.IStoragePolicyFilterState filter)
    {
      this.Filter = filter;
    }
  }

}

// ==================================================================
// ModuleFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Functions
{
  internal static partial class Module
  {
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static global::System.Boolean GeneratePublicBodyForNonformalizedDocument(global::Sungero.Docflow.IOfficialDocument document, global::System.Int32 versionId, global::System.Nullable<global::System.DateTime> startTime)
    {
        return global::Sungero.Docflow.Server.ModuleFunctions.GeneratePublicBodyForNonformalizedDocument(document, versionId, startTime);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static void GeneratePublicBodyForNonformalizedDocument(global::Sungero.Docflow.IOfficialDocument document, global::System.Int32 versionId)
    {
    global::Sungero.Docflow.Server.ModuleFunctions.GeneratePublicBodyForNonformalizedDocument(document, versionId);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static global::System.Boolean GeneratePublicBodyForFormalizedDocument(global::Sungero.Docflow.IAccountingDocumentBase document, global::System.Int32 versionId, global::System.Nullable<global::Sungero.Core.Enumeration> exchangeStatus, global::System.Nullable<global::System.DateTime> startTime)
    {
        return global::Sungero.Docflow.Server.ModuleFunctions.GeneratePublicBodyForFormalizedDocument(document, versionId, exchangeStatus, startTime);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static void GeneratePublicBodyForFormalizedDocument(global::Sungero.Docflow.IAccountingDocumentBase document, global::System.Int32 versionId, global::System.Nullable<global::Sungero.Core.Enumeration> exchangeStatus)
    {
    global::Sungero.Docflow.Server.ModuleFunctions.GeneratePublicBodyForFormalizedDocument(document, versionId, exchangeStatus);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.Boolean GeneratePublicBodyForExchangeDocument(global::Sungero.Docflow.IOfficialDocument document, global::System.Int32 versionId, global::System.Nullable<global::Sungero.Core.Enumeration> exchangeState, global::System.Nullable<global::System.DateTime> startTime)
    {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server)).GeneratePublicBodyForExchangeDocument(document, versionId, exchangeState, startTime);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static void GeneratePublicBodyForExchangeDocument(global::Sungero.Docflow.IOfficialDocument document, global::System.Int32 versionId, global::System.Nullable<global::Sungero.Core.Enumeration> exchangeState)
    {
    ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server)).GeneratePublicBodyForExchangeDocument(document, versionId, exchangeState);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static global::Sungero.Docflow.Structures.Module.IByteArray GeneratePublicBodyForFormalizedXml(global::Sungero.Docflow.Structures.Module.IByteArray xml)
    {
        return global::Sungero.Docflow.Server.ModuleFunctions.GeneratePublicBodyForFormalizedXml(xml);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static void GenerateTempPublicBodyForExchangeDocument(global::Sungero.Docflow.IOfficialDocument document, global::System.Int32 versionId)
    {
    global::Sungero.Docflow.Server.ModuleFunctions.GenerateTempPublicBodyForExchangeDocument(document, versionId);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::Sungero.Docflow.Structures.OfficialDocument.СonversionToPdfResult GeneratePublicBodyWithSignatureMark(global::Sungero.Docflow.IOfficialDocument document, global::System.Int32 versionId, global::System.String signatureMark)
    {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server)).GeneratePublicBodyWithSignatureMark(document, versionId, signatureMark);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.String GetSignatureMarkAsHtml(global::Sungero.Docflow.IOfficialDocument document, global::System.Int32 versionId)
    {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server)).GetSignatureMarkAsHtml(document, versionId);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.String GetSignatureMarkForSimpleSignatureAsHtml(Sungero.Domain.Shared.ISignature signature)
    {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server)).GetSignatureMarkForSimpleSignatureAsHtml(signature);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.String GetSignatureMarkForCertificateAsHtml(Sungero.Domain.Shared.ISignature signature)
    {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server)).GetSignatureMarkForCertificateAsHtml(signature);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::Sungero.Docflow.Structures.Module.ICertificateSubject GetCertificateSubject(Sungero.Domain.Shared.ISignature signature)
    {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server)).GetCertificateSubject(signature);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.Boolean CanConvertToPdfInteractively(global::Sungero.Docflow.IOfficialDocument document)
    {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server)).CanConvertToPdfInteractively(document);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.String GetCertificateOwnerShortName(global::Sungero.Docflow.Structures.Module.ICertificateSubject subject)
    {
        return global::Sungero.Docflow.Server.ModuleFunctions.GetCertificateOwnerShortName(subject);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static void AddFullRightsInSession(Sungero.Domain.Session session, global::Sungero.Domain.Shared.IEntity entity)
    {
    global::Sungero.Docflow.Server.ModuleFunctions.AddFullRightsInSession(session, entity);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::Sungero.Workflow.ITask GetCheckReturnTaskWithRights(Sungero.Domain.Session session, global::System.Int32 taskId)
    {
        return global::Sungero.Docflow.Server.ModuleFunctions.GetCheckReturnTaskWithRights(session, taskId);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::Sungero.Workflow.IAssignment GetCheckReturnAssignmentWithRights(Sungero.Domain.Session session, global::System.Int32 taskId)
    {
        return global::Sungero.Docflow.Server.ModuleFunctions.GetCheckReturnAssignmentWithRights(session, taskId);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.String ValidateCheckReturnTaskLocking(global::System.Int32 taskId, global::System.Boolean checkTaskLock)
    {
        return global::Sungero.Docflow.Server.ModuleFunctions.ValidateCheckReturnTaskLocking(taskId, checkTaskLock);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.String CompleteCheckReturnTask(global::System.Int32 taskId, global::System.Int32 operation)
    {
        return global::Sungero.Docflow.Server.ModuleFunctions.CompleteCheckReturnTask(taskId, operation);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.String CompleteCheckReturnTask(global::System.Int32 taskId, global::System.Int32 operation, global::System.String text)
    {
        return global::Sungero.Docflow.Server.ModuleFunctions.CompleteCheckReturnTask(taskId, operation, text);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.String CompleteCheckReturnTask(global::System.Int32 taskId, global::System.Int32 operation, global::System.String text, global::System.Nullable<global::System.DateTime> deadline)
    {
        return global::Sungero.Docflow.Server.ModuleFunctions.CompleteCheckReturnTask(taskId, operation, text, deadline);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static global::System.String CalculateParams(global::Sungero.Docflow.IRegistrationGroup registrationGroup, global::Sungero.Docflow.IDocumentRegister documentRegister)
    {
        return global::Sungero.Docflow.Server.ModuleFunctions.CalculateParams(registrationGroup, documentRegister);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.Module.TaskIterations> GetIterationDates(global::Sungero.Workflow.ITask task)
    {
        return global::Sungero.Docflow.Server.ModuleFunctions.GetIterationDates(task);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static void AddInfoToRightContent(Sungero.Core.StateBlock block, global::System.String info)
    {
    global::Sungero.Docflow.Server.ModuleFunctions.AddInfoToRightContent(block, info);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static void AddInfoToRightContent(Sungero.Core.StateBlock block, global::System.String info, Sungero.Core.StateBlockLabelStyle style)
    {
    global::Sungero.Docflow.Server.ModuleFunctions.AddInfoToRightContent(block, info, style);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.String GetAssignmentUserComment(global::Sungero.Workflow.IAssignment assignment)
    {
        return global::Sungero.Docflow.Server.ModuleFunctions.GetAssignmentUserComment(assignment);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.String GetTaskUserComment(global::Sungero.Workflow.ITask task, global::System.String autoGeneratedText)
    {
        return global::Sungero.Docflow.Server.ModuleFunctions.GetTaskUserComment(task, autoGeneratedText);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.String GetTaskUserComment(global::Sungero.Workflow.ITask task, global::System.DateTime date, global::System.String autoGeneratedText)
    {
        return global::Sungero.Docflow.Server.ModuleFunctions.GetTaskUserComment(task, date, autoGeneratedText);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.String GetFormatedUserText(global::System.String userText)
    {
        return global::Sungero.Docflow.Server.ModuleFunctions.GetFormatedUserText(userText);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::Sungero.Core.Color GetGrayColor()
    {
        return global::Sungero.Docflow.Server.ModuleFunctions.GetGrayColor();
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static void MarkBlock(Sungero.Core.StateBlock block)
    {
    global::Sungero.Docflow.Server.ModuleFunctions.MarkBlock(block);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static Sungero.Core.StateBlockLabelStyle CreateStyle(global::System.Nullable<global::System.Int32> fontSize)
    {
        return global::Sungero.Docflow.Server.ModuleFunctions.CreateStyle(fontSize);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static Sungero.Core.StateBlockLabelStyle CreateStyle(global::System.Boolean bolded, global::System.Boolean grayed)
    {
        return global::Sungero.Docflow.Server.ModuleFunctions.CreateStyle(bolded, grayed);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static Sungero.Core.StateBlockLabelStyle CreateStyle(global::System.Boolean bolded, global::System.Boolean italic, global::System.Boolean grayed)
    {
        return global::Sungero.Docflow.Server.ModuleFunctions.CreateStyle(bolded, italic, grayed);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static Sungero.Core.StateBlockLabelStyle CreateStyle(global::System.Nullable<global::System.Int32> fontSize, global::System.Boolean bolded, global::System.Boolean grayed)
    {
        return global::Sungero.Docflow.Server.ModuleFunctions.CreateStyle(fontSize, bolded, grayed);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static Sungero.Core.StateBlockLabelStyle CreateStyle(global::Sungero.Core.Color color)
    {
        return global::Sungero.Docflow.Server.ModuleFunctions.CreateStyle(color);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static Sungero.Core.StateBlockLabelStyle CreateStyle(global::System.Nullable<global::System.Int32> fontSize, global::System.Boolean bolded, global::System.Boolean italic, global::System.Boolean grayed, global::Sungero.Core.Color color)
    {
        return global::Sungero.Docflow.Server.ModuleFunctions.CreateStyle(fontSize, bolded, italic, grayed, color);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static Sungero.Core.StateBlockLabelStyle CreateHeaderStyle(global::System.Boolean italic)
    {
        return global::Sungero.Docflow.Server.ModuleFunctions.CreateHeaderStyle(italic);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static Sungero.Core.StateBlockLabelStyle CreateHeaderStyle()
    {
        return global::Sungero.Docflow.Server.ModuleFunctions.CreateHeaderStyle();
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static Sungero.Core.StateBlockLabelStyle CreatePerformerDeadlineStyle(global::System.Boolean italic)
    {
        return global::Sungero.Docflow.Server.ModuleFunctions.CreatePerformerDeadlineStyle(italic);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static Sungero.Core.StateBlockLabelStyle CreatePerformerDeadlineStyle()
    {
        return global::Sungero.Docflow.Server.ModuleFunctions.CreatePerformerDeadlineStyle();
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static Sungero.Core.StateBlockLabelStyle CreateNoteStyle(global::System.Boolean italic)
    {
        return global::Sungero.Docflow.Server.ModuleFunctions.CreateNoteStyle(italic);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static Sungero.Core.StateBlockLabelStyle CreateNoteStyle()
    {
        return global::Sungero.Docflow.Server.ModuleFunctions.CreateNoteStyle();
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static Sungero.Core.StateBlockLabelStyle CreateDelayStyle()
    {
        return global::Sungero.Docflow.Server.ModuleFunctions.CreateDelayStyle();
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static Sungero.Core.StateBlockLabelStyle CreateSeparatorStyle()
    {
        return global::Sungero.Docflow.Server.ModuleFunctions.CreateSeparatorStyle();
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.String GetSeparatorText()
    {
        return global::Sungero.Docflow.Server.ModuleFunctions.GetSeparatorText();
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.Int32 GetEmptyLineMargin()
    {
        return global::Sungero.Docflow.Server.ModuleFunctions.GetEmptyLineMargin();
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::Sungero.Core.StateView GetDocumentSummary(global::Sungero.Docflow.IOfficialDocument document)
    {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server)).GetDocumentSummary(document);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static global::Sungero.Company.IDepartment GetDepartment(global::Sungero.CoreEntities.IUser user)
    {
        return global::Sungero.Docflow.Server.ModuleFunctions.GetDepartment(user);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static global::Sungero.Company.IEmployee GetManager(global::Sungero.CoreEntities.IUser user)
    {
        return global::Sungero.Docflow.Server.ModuleFunctions.GetManager(user);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::Sungero.Docflow.IRegistrationGroup GetRegistrationGroupByDocument(global::Sungero.Docflow.IOfficialDocument document, global::System.Nullable<global::Sungero.Core.Enumeration> documentFlow)
    {
        return global::Sungero.Docflow.Server.ModuleFunctions.GetRegistrationGroupByDocument(document, documentFlow);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static global::Sungero.Company.IEmployee GetClerk(global::Sungero.Docflow.IOfficialDocument document)
    {
        return global::Sungero.Docflow.Server.ModuleFunctions.GetClerk(document);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static global::Sungero.Company.IEmployee GetClerk(global::Sungero.Docflow.IOfficialDocument document, global::System.Nullable<global::Sungero.Core.Enumeration> documentFlow)
    {
        return global::Sungero.Docflow.Server.ModuleFunctions.GetClerk(document, documentFlow);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static void CreateIndexOnTable(global::System.String tableName, global::System.String indexName, global::System.String indexQuery)
    {
    global::Sungero.Docflow.Server.ModuleFunctions.CreateIndexOnTable(tableName, indexName, indexQuery);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static void AddStringParameterToCommand(System.Data.IDbCommand command, global::System.String parameterName, global::System.String parameterValue)
    {
    global::Sungero.Docflow.Server.ModuleFunctions.AddStringParameterToCommand(command, parameterName, parameterValue);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static void AddIntegerParameterToCommand(System.Data.IDbCommand command, global::System.String parameterName, global::System.Int32 parameterValue)
    {
    global::Sungero.Docflow.Server.ModuleFunctions.AddIntegerParameterToCommand(command, parameterName, parameterValue);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static void AddDateTimeParameterToCommand(System.Data.IDbCommand command, global::System.String parameterName, global::System.DateTime parameterValue)
    {
    global::Sungero.Docflow.Server.ModuleFunctions.AddDateTimeParameterToCommand(command, parameterName, parameterValue);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static System.Data.IDbDataParameter AddIntegerOutputParameterToCommand(System.Data.IDbCommand command, global::System.String parameterName)
    {
        return global::Sungero.Docflow.Server.ModuleFunctions.AddIntegerOutputParameterToCommand(command, parameterName);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static void ExecuteSQLCommandFormat(global::System.String format, System.Object[] args)
    {
    global::Sungero.Docflow.Server.ModuleFunctions.ExecuteSQLCommandFormat(format, args);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static void ExecuteSQLCommand(global::System.String commandText)
    {
    global::Sungero.Docflow.Server.ModuleFunctions.ExecuteSQLCommand(commandText);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static System.Object ExecuteScalarSQLCommand(global::System.String commandText)
    {
        return global::Sungero.Docflow.Server.ModuleFunctions.ExecuteScalarSQLCommand(commandText);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static void DropReportTempTable(global::System.String tableName)
    {
    global::Sungero.Docflow.Server.ModuleFunctions.DropReportTempTable(tableName);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static void DropReportTempTables(global::System.String[] tablesNames)
    {
    global::Sungero.Docflow.Server.ModuleFunctions.DropReportTempTables(tablesNames);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static void DeleteReportData(global::System.String tableName, global::System.String reportSessionId)
    {
    global::Sungero.Docflow.Server.ModuleFunctions.DeleteReportData(tableName, reportSessionId);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static void CreateTempTableForRights(global::System.String tableName, global::System.Linq.IQueryable<global::System.Int32> availableIds)
    {
    global::Sungero.Docflow.Server.ModuleFunctions.CreateTempTableForRights(tableName, availableIds);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static void WriteStructuresToTable(global::System.String table, System.Collections.Generic.IEnumerable<Domain.Shared.ISimpleAppliedStructure> structures)
    {
    global::Sungero.Docflow.Server.ModuleFunctions.WriteStructuresToTable(table, structures);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true, PackResultEntityEagerly = true)]
    internal static global::System.Collections.Generic.List<global::Sungero.CoreEntities.IRecipient> GetTaskAssignees(global::Sungero.Workflow.ITask task)
    {
        return global::Sungero.Docflow.Server.ModuleFunctions.GetTaskAssignees(task);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true, PackResultEntityEagerly = true)]
    internal static global::System.Collections.Generic.List<global::Sungero.Domain.Shared.IEntity> GetAttachmentsWithoutAccessRights(global::System.Collections.Generic.List<global::Sungero.CoreEntities.IRecipient> performers, global::System.Collections.Generic.List<global::Sungero.Domain.Shared.IEntity> attachments)
    {
        return global::Sungero.Docflow.Server.ModuleFunctions.GetAttachmentsWithoutAccessRights(performers, attachments);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.Boolean IncludedInClerksRole()
    {
        return global::Sungero.Docflow.Server.ModuleFunctions.IncludedInClerksRole();
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.Boolean IncludedInDepartmentManagersRole()
    {
        return global::Sungero.Docflow.Server.ModuleFunctions.IncludedInDepartmentManagersRole();
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.Boolean IncludedInBusinessUnitHeadsRole()
    {
        return global::Sungero.Docflow.Server.ModuleFunctions.IncludedInBusinessUnitHeadsRole();
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static global::System.Boolean IncludedInRole(global::System.Guid roleSid)
    {
        return global::Sungero.Docflow.Server.ModuleFunctions.IncludedInRole(roleSid);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static global::System.Boolean IsAdministratorOrAdvisor()
    {
        return global::Sungero.Docflow.Server.ModuleFunctions.IsAdministratorOrAdvisor();
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::Sungero.Docflow.Structures.Module.ZipCodeAndAddress ParseZipCode(global::System.String address)
    {
        return global::Sungero.Docflow.Server.ModuleFunctions.ParseZipCode(address);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static void FillEnvelopeTable(global::System.String reportSessionId, global::System.Collections.Generic.List<global::Sungero.Docflow.IOutgoingDocumentBase> outgoingDocuments, global::System.Collections.Generic.List<global::Sungero.Docflow.IContractualDocumentBase> contractualDocuments, global::System.Collections.Generic.List<global::Sungero.Docflow.IAccountingDocumentBase> accountingDocuments)
    {
    global::Sungero.Docflow.Server.ModuleFunctions.FillEnvelopeTable(reportSessionId, outgoingDocuments, contractualDocuments, accountingDocuments);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static void CreateGrantAccessRightsToDocumentAsyncHandler(global::System.Int32 documentId, global::System.Nullable<global::System.Int32> ruleId, global::System.Boolean grantRightChildDocument)
    {
    ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server)).CreateGrantAccessRightsToDocumentAsyncHandler(documentId, ruleId, grantRightChildDocument);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static void CreateGrantAccessRightsToDocumentsByRuleAsyncHandler(global::System.Int32 id)
    {
    ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server)).CreateGrantAccessRightsToDocumentsByRuleAsyncHandler(id);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.Boolean GrantRightsToDocument(global::System.Int32 documentId, global::System.Int32 ruleId, global::System.Boolean grantRightChildDocument)
    {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server)).GrantRightsToDocument(documentId, ruleId, grantRightChildDocument);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.Boolean TryGrantRightsToDocument(global::Sungero.Docflow.IOfficialDocument document, global::Sungero.Docflow.IAccessRightsRule rule)
    {
        return global::Sungero.Docflow.Server.ModuleFunctions.TryGrantRightsToDocument(document, rule);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<global::Sungero.Docflow.IAccessRightsRule> GetAvailableRules(global::Sungero.Docflow.IOfficialDocument document, global::System.Collections.Generic.List<global::Sungero.Docflow.IAccessRightsRule> rules)
    {
        return global::Sungero.Docflow.Server.ModuleFunctions.GetAvailableRules(document, rules);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.String GetGrantRightMode()
    {
        return global::Sungero.Docflow.Server.ModuleFunctions.GetGrantRightMode();
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static global::System.Double GetDocflowParamsNumbericValue(global::System.String paramName)
    {
        return global::Sungero.Docflow.Server.ModuleFunctions.GetDocflowParamsNumbericValue(paramName);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static global::System.String GetDocflowParamsStringValue(global::System.String paramName)
    {
        return global::Sungero.Docflow.Server.ModuleFunctions.GetDocflowParamsStringValue(paramName);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static global::System.Nullable<global::System.DateTime> GetDocflowParamsDateTimeValue(global::System.String paramName)
    {
        return global::Sungero.Docflow.Server.ModuleFunctions.GetDocflowParamsDateTimeValue(paramName);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static System.Object GetDocflowParamsValue(global::System.String paramName)
    {
        return global::Sungero.Docflow.Server.ModuleFunctions.GetDocflowParamsValue(paramName);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static void SendMailNotification()
    {
    ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server)).SendMailNotification();
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.DateTime GetLastNotificationDate()
    {
        return global::Sungero.Docflow.Server.ModuleFunctions.GetLastNotificationDate();
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.Nullable<global::System.Boolean> TrySendNewAssignmentsMailing(System.Net.Mail.SmtpClient mailClient, global::System.DateTime previousRun, global::System.DateTime notificationDate, global::System.Collections.Generic.List<global::Sungero.Workflow.IAssignmentBase> assignments)
    {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server)).TrySendNewAssignmentsMailing(mailClient, previousRun, notificationDate, assignments);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<global::Sungero.Workflow.IAssignmentBase> GetNewAssignments(global::System.DateTime previousRun, global::System.DateTime notificationDate)
    {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server)).GetNewAssignments(previousRun, notificationDate);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.String GetNewAssignmentSubject(global::Sungero.Workflow.IAssignmentBase assignment)
    {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server)).GetNewAssignmentSubject(assignment);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.Nullable<global::System.Boolean> TrySendExpiredAssignmentsMailing(System.Net.Mail.SmtpClient mailClient, global::System.DateTime previousRun, global::System.DateTime notificationDate, global::System.Collections.Generic.List<global::Sungero.Workflow.IAssignment> assignments)
    {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server)).TrySendExpiredAssignmentsMailing(mailClient, previousRun, notificationDate, assignments);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<global::Sungero.Workflow.IAssignment> GetExpiredAssignments(global::System.DateTime previousRun, global::System.DateTime notificationDate)
    {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server)).GetExpiredAssignments(previousRun, notificationDate);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.String GetExpiredAssignmentSubject(global::Sungero.Workflow.IAssignmentBase assignment)
    {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server)).GetExpiredAssignmentSubject(assignment);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static void UpdateLastNotificationDate(global::System.DateTime notificationDate)
    {
    global::Sungero.Docflow.Server.ModuleFunctions.UpdateLastNotificationDate(notificationDate);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.String GetAssignmentTypeName(global::Sungero.Workflow.IAssignmentBase assignment)
    {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server)).GetAssignmentTypeName(assignment);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.String GetAuthorSubjectPart(global::Sungero.Workflow.IAssignmentBase assignment)
    {
        return global::Sungero.Docflow.Server.ModuleFunctions.GetAuthorSubjectPart(assignment);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::Sungero.Docflow.Structures.Module.MailSendingResult TrySendMailByAssignment(global::Sungero.Workflow.IAssignmentBase assignment, global::System.String subject, global::System.Boolean isExpired, System.Net.Mail.SmtpClient mailClient, global::Sungero.Company.IEmployee addressee, System.Collections.Generic.IEnumerable<global::Sungero.Company.IEmployee> copies)
    {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server)).TrySendMailByAssignment(assignment, subject, isExpired, mailClient, addressee, copies);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.String GetFormattedUserNameInGenitive(global::System.String userName)
    {
        return global::Sungero.Docflow.Server.ModuleFunctions.GetFormattedUserNameInGenitive(userName);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static void InternalSendMailByAssignment(global::Sungero.Workflow.IAssignmentBase assignment, global::System.String subject, global::System.Boolean isExpired, System.Net.Mail.SmtpClient mailClient, global::System.String to, System.Collections.Generic.IEnumerable<global::System.String> cc)
    {
    ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server)).InternalSendMailByAssignment(assignment, subject, isExpired, mailClient, to, cc);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static System.Collections.Generic.IEnumerable<System.Net.Mail.Attachment> GetMailAttachments(global::Sungero.Workflow.IAssignmentBase assignment)
    {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server)).GetMailAttachments(assignment);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.String GenerateBody(global::Sungero.Workflow.IAssignmentBase assignment, global::System.Boolean isExpired, global::System.Boolean hasSubstitutions)
    {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server)).GenerateBody(assignment, isExpired, hasSubstitutions);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static System.Collections.Hashtable GenerateBodyModel(global::Sungero.Workflow.IAssignmentBase assignment, global::System.Boolean isExpired, global::System.Boolean hasSubstitutions)
    {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server)).GenerateBodyModel(assignment, isExpired, hasSubstitutions);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static System.Byte[] GetLogo()
    {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server)).GetLogo();
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static void ProcessText(Nustache.Core.RenderContext context, System.Collections.Generic.IList<System.Object> args, System.Collections.Generic.IDictionary<global::System.String, System.Object> options, Nustache.Core.RenderBlock function, Nustache.Core.RenderBlock inverse)
    {
    global::Sungero.Docflow.Server.ModuleFunctions.ProcessText(context, args, options, function, inverse);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::Sungero.Docflow.Structures.Module.IExpiringDocsNotificationParams GetDefaultExpiringDocsNotificationParams(global::System.String lastNotificationParamName, global::System.String noticesTableName)
    {
        return global::Sungero.Docflow.Server.ModuleFunctions.GetDefaultExpiringDocsNotificationParams(lastNotificationParamName, noticesTableName);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.DateTime GetLastNotificationDate(global::System.String lastNotificationParameterName, global::System.Nullable<global::System.DateTime> defaultDate)
    {
        return global::Sungero.Docflow.Server.ModuleFunctions.GetLastNotificationDate(lastNotificationParameterName, defaultDate);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<global::System.Int32> GetDocumentsWithSendedTask(global::System.String expiringDocumentTableName)
    {
        return global::Sungero.Docflow.Server.ModuleFunctions.GetDocumentsWithSendedTask(expiringDocumentTableName);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static void ClearIdsFromExpiringDocsTable(global::System.String expiringDocsTableName, global::System.Collections.Generic.List<global::System.Int32> ids)
    {
    global::Sungero.Docflow.Server.ModuleFunctions.ClearIdsFromExpiringDocsTable(expiringDocsTableName, ids);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static void ClearExpiringTable(global::System.String expiringDocsTableName, global::System.Boolean taskIsNull)
    {
    global::Sungero.Docflow.Server.ModuleFunctions.ClearExpiringTable(expiringDocsTableName, taskIsNull);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static void AddExpiringDocumentsToTable(global::System.String expiringDocsTableName, global::System.Collections.Generic.List<global::System.Int32> ids)
    {
    global::Sungero.Docflow.Server.ModuleFunctions.AddExpiringDocumentsToTable(expiringDocsTableName, ids);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<global::Sungero.CoreEntities.IUser> GetNotificationPerformers(global::Sungero.Docflow.IPowerOfAttorney powerOfAttorney)
    {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server)).GetNotificationPerformers(powerOfAttorney);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static void AddTaskToExpiringTable(global::System.String expiringDocsTableName, global::System.Int32 document, global::System.Int32 task)
    {
    global::Sungero.Docflow.Server.ModuleFunctions.AddTaskToExpiringTable(expiringDocsTableName, document, task);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.Boolean IsAllNotificationsStarted(global::System.String expiringDocsTableName)
    {
        return global::Sungero.Docflow.Server.ModuleFunctions.IsAllNotificationsStarted(expiringDocsTableName);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static void UpdateLastNotificationDate(global::Sungero.Docflow.Structures.Module.IExpiringDocsNotificationParams notificationParams)
    {
    global::Sungero.Docflow.Server.ModuleFunctions.UpdateLastNotificationDate(notificationParams);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static void TrySendExpiringDocNotifications(global::Sungero.Docflow.Structures.Module.IExpiringDocsNotificationParams notificationParams)
    {
    global::Sungero.Docflow.Server.ModuleFunctions.TrySendExpiringDocNotifications(notificationParams);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static global::Sungero.Docflow.Structures.ExchangeOrderReport.ExchangeOrderFullData GetExchangeOrderInfo(global::System.String reportSessionId, global::Sungero.Docflow.IOfficialDocument sentDocument)
    {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server)).GetExchangeOrderInfo(reportSessionId, sentDocument);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::Sungero.Docflow.Structures.ExchangeOrderReport.ExchangeOrderInfo GetBuyerTitle(global::Sungero.Exchange.IExchangeDocumentInfo info)
    {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server)).GetBuyerTitle(info);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::Sungero.Content.IAssociatedApplication GetAssociatedApplicationByFileName(global::System.String fileName)
    {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server)).GetAssociatedApplicationByFileName(fileName);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<Company.Structures.ResponsibilitiesReport.ResponsibilitiesReportTableLine> GetResponsibilitiesReportData(global::Sungero.Company.IEmployee employee)
    {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server)).GetResponsibilitiesReportData(employee);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.String CreateSignatureSettingsPresentation(global::Sungero.Docflow.ISignatureSetting setting)
    {
        return global::Sungero.Docflow.Server.ModuleFunctions.CreateSignatureSettingsPresentation(setting);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static Sungero.Domain.Shared.IExternalLink GetExternalLink(global::System.Guid entityType, global::System.Guid entityId)
    {
        return global::Sungero.Docflow.Server.ModuleFunctions.GetExternalLink(entityType, entityId);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static void CreateExternalLink(global::Sungero.Domain.Shared.IEntity entity, global::System.Guid entityId)
    {
    global::Sungero.Docflow.Server.ModuleFunctions.CreateExternalLink(entity, entityId);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static void EvictEntityFromSession(global::Sungero.Domain.Shared.IEntity entity)
    {
    global::Sungero.Docflow.Server.ModuleFunctions.EvictEntityFromSession(entity);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static void RequeueGrantAccessRightsToDocuments()
    {
    global::Sungero.Docflow.Server.ModuleFunctions.RequeueGrantAccessRightsToDocuments();
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute(PackResultEntityEagerly = true)]
    internal static global::Sungero.Docflow.IFreeApprovalTask CreateFreeApprovalTask(global::Sungero.Content.IElectronicDocument document)
    {
        return global::Sungero.Docflow.Server.ModuleFunctions.CreateFreeApprovalTask(document);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static global::System.Linq.IQueryable<global::Sungero.Docflow.IApprovalTask> GetApprovalTasks(global::Sungero.Docflow.IOfficialDocument document)
    {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server)).GetApprovalTasks(document);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static global::System.Linq.IQueryable<global::Sungero.RecordManagement.IDocumentReviewTask> GetReviewTasks(global::Sungero.Docflow.IOfficialDocument document)
    {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server)).GetReviewTasks(document);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute(PackResultEntityEagerly = true)]
    internal static global::Sungero.Docflow.IApprovalTask CreateApprovalTask(global::Sungero.Docflow.IOfficialDocument document)
    {
        return global::Sungero.Docflow.Server.ModuleFunctions.CreateApprovalTask(document);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static global::System.Linq.IQueryable<global::Sungero.Docflow.IOfficialDocument> GetAvaliableLeadingDocuments()
    {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server)).GetAvaliableLeadingDocuments();
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static void SendNoticesAsSubtask(global::System.String subject, global::System.Collections.Generic.List<global::Sungero.CoreEntities.IUser> performers, global::Sungero.Workflow.ITask parentTask, global::System.String activeText, global::Sungero.CoreEntities.IUser author, global::System.String threadSubject)
    {
    global::Sungero.Docflow.Server.ModuleFunctions.SendNoticesAsSubtask(subject, performers, parentTask, activeText, author, threadSubject);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static void GrantReadRightsForAttachments(System.Collections.Generic.IEnumerable<global::Sungero.Domain.Shared.IEntity> attachments, System.Collections.Generic.IEnumerable<global::Sungero.CoreEntities.IRecipient> users)
    {
    global::Sungero.Docflow.Server.ModuleFunctions.GrantReadRightsForAttachments(attachments, users);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static global::System.Boolean IsModuleAvailableByLicense(global::System.Guid moduleGuid)
    {
        return global::Sungero.Docflow.Server.ModuleFunctions.IsModuleAvailableByLicense(moduleGuid);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static global::System.Boolean IsModuleAvailableForCurrentUserByLicense(global::System.Guid moduleGuid)
    {
        return global::Sungero.Docflow.Server.ModuleFunctions.IsModuleAvailableForCurrentUserByLicense(moduleGuid);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static System.Object GetServerEntityFunctionResult(global::Sungero.Domain.Shared.IEntity entity, global::System.String name, global::System.Collections.Generic.List<System.Object> parameters)
    {
        return global::Sungero.Docflow.Server.ModuleFunctions.GetServerEntityFunctionResult(entity, name, parameters);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static void GrantManualReadRightForAttachments(global::Sungero.Workflow.ITask task, global::System.Collections.Generic.List<global::Sungero.Domain.Shared.IEntity> attachments)
    {
    global::Sungero.Docflow.Server.ModuleFunctions.GrantManualReadRightForAttachments(task, attachments);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static global::System.Collections.Generic.List<global::Sungero.Company.IEmployee> UsersCanBeResolutionAuthor(global::Sungero.Docflow.IOfficialDocument document)
    {
        return global::Sungero.Docflow.Server.ModuleFunctions.UsersCanBeResolutionAuthor(document);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static global::System.Boolean IsUsersCanBeResolutionAuthor(global::Sungero.Docflow.IOfficialDocument document, global::Sungero.Company.IEmployee employee)
    {
        return global::Sungero.Docflow.Server.ModuleFunctions.IsUsersCanBeResolutionAuthor(document, employee);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.Linq.IQueryable<global::Sungero.Workflow.IAssignment> FilterAssignments(global::System.Linq.IQueryable<global::Sungero.Workflow.IAssignment> assignments, global::System.DateTime periodBegin, global::System.DateTime periodEnd, global::System.String mode)
    {
        return global::Sungero.Docflow.Server.ModuleFunctions.FilterAssignments(assignments, periodBegin, periodEnd, mode);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static global::System.Collections.Generic.List<global::System.String> GetChartModel(global::Sungero.Company.IBusinessUnit businessUnit, global::Sungero.Company.IDepartment department, global::System.DateTime periodBegin, global::System.DateTime periodEnd)
    {
        return global::Sungero.Docflow.Server.ModuleFunctions.GetChartModel(businessUnit, department, periodBegin, periodEnd);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.String ToShortDateShortTime(global::System.DateTime date)
    {
        return global::Sungero.Docflow.Server.ModuleFunctions.ToShortDateShortTime(date);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static global::System.DateTime GetTenantDateTimeFromUserDay(global::System.DateTime date)
    {
        return global::Sungero.Docflow.Server.ModuleFunctions.GetTenantDateTimeFromUserDay(date);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static global::System.Linq.IQueryable<global::Sungero.Docflow.IDistributionList> GetDistributionLists()
    {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server)).GetDistributionLists();
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static global::Sungero.Docflow.IDistributionList CreateDistributionList()
    {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server)).CreateDistributionList();
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static global::System.String GetTaskAbortingError(global::Sungero.Workflow.ITask task, global::System.String groupId)
    {
        return global::Sungero.Docflow.Server.ModuleFunctions.GetTaskAbortingError(task, groupId);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static global::System.Collections.Generic.List<global::Sungero.Company.IEmployee> GetEmployeesFromRecipientsRemote(global::System.Collections.Generic.List<global::Sungero.CoreEntities.IRecipient> recipients)
    {
        return global::Sungero.Docflow.Server.ModuleFunctions.GetEmployeesFromRecipientsRemote(recipients);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<global::Sungero.Company.IEmployee> GetEmployeesFromRecipients(global::System.Collections.Generic.List<global::Sungero.CoreEntities.IRecipient> recipients)
    {
        return global::Sungero.Docflow.Server.ModuleFunctions.GetEmployeesFromRecipients(recipients);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static System.Collections.Generic.Dictionary<global::System.Int32, System.Byte[]> ReadLicense()
    {
        return global::Sungero.Docflow.Server.ModuleFunctions.ReadLicense();
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static void DeleteLicense()
    {
    global::Sungero.Docflow.Server.ModuleFunctions.DeleteLicense();
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static void RestoreLicense(System.Collections.Generic.Dictionary<global::System.Int32, System.Byte[]> licenses)
    {
    global::Sungero.Docflow.Server.ModuleFunctions.RestoreLicense(licenses);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static void InsertOrUpdateDocflowParam(global::System.String key, global::System.String value)
    {
    global::Sungero.Docflow.Server.ModuleFunctions.InsertOrUpdateDocflowParam(key, value);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static global::System.Linq.IQueryable<global::Sungero.Docflow.ICounterpartyDocument> GetCounterpartyDocuments(global::Sungero.Parties.ICounterparty counterparty)
    {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server)).GetCounterpartyDocuments(counterparty);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.String GetSignatureValidationErrorsAsString(Sungero.Domain.Shared.ISignature signature, global::System.String separator)
    {
        return global::Sungero.Docflow.Server.ModuleFunctions.GetSignatureValidationErrorsAsString(signature, separator);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static global::Sungero.Company.IEmployee GetResolutionAuthor(global::Sungero.Workflow.ITask task)
    {
        return global::Sungero.Docflow.Server.ModuleFunctions.GetResolutionAuthor(task);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static void AddApprover(global::Sungero.Workflow.IAssignment assignment, global::Sungero.Company.IEmployee newApprover)
    {
    ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server)).AddApprover(assignment, newApprover);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static void AddApprover(global::Sungero.Workflow.IAssignment assignment, global::Sungero.Company.IEmployee newApprover, global::System.Nullable<global::System.DateTime> deadline)
    {
    ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server)).AddApprover(assignment, newApprover, deadline);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static global::System.Collections.Generic.List<global::Sungero.RecordManagement.IActionItemExecutionTask> GetActionItemsByDocument(global::Sungero.Docflow.IOfficialDocument document)
    {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server)).GetActionItemsByDocument(document);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static global::System.Linq.IQueryable<global::Sungero.Domain.Shared.IEntity> GetDocumentKindSettings(global::Sungero.Docflow.IDocumentKind documentKind)
    {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server)).GetDocumentKindSettings(documentKind);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static global::System.String GetCurrentTenantId()
    {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server)).GetCurrentTenantId();
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.DateTime GetLastAgentRunDate(global::System.String agentKey)
    {
        return global::Sungero.Docflow.Server.ModuleFunctions.GetLastAgentRunDate(agentKey);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static void UpdateLastAgentRunDate(global::System.String agentKey, global::System.DateTime notificationDate)
    {
    global::Sungero.Docflow.Server.ModuleFunctions.UpdateLastAgentRunDate(agentKey, notificationDate);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static void FastDeleteQueueItems(global::System.Collections.Generic.List<global::System.Int32> itemsIds)
    {
    global::Sungero.Docflow.Server.ModuleFunctions.FastDeleteQueueItems(itemsIds);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.Guid GetRightTypeGuid(global::System.Nullable<global::Sungero.Core.Enumeration> rightType)
    {
        return global::Sungero.Docflow.Server.ModuleFunctions.GetRightTypeGuid(rightType);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.AssignmentCompletionReport.TableLine> GetAssignmentCompletionReportData(global::System.String reportSessionId, global::Sungero.Company.IDepartment department, global::Sungero.CoreEntities.IUser reportPerformer, global::System.Nullable<global::System.DateTime> reportPeriodBegin, global::System.Nullable<global::System.DateTime> reportPeriodEnd, global::System.Nullable<global::System.Boolean> loadOldAssignments)
    {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server)).GetAssignmentCompletionReportData(reportSessionId, department, reportPerformer, reportPeriodBegin, reportPeriodEnd, loadOldAssignments);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static global::System.Collections.Generic.List<global::Sungero.CoreEntities.ICertificate> GetCertificates(global::Sungero.Docflow.IOfficialDocument document)
    {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server)).GetCertificates(document);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static void RequeueSendNotificationForExpiringPowersOfAttorney()
    {
    global::Sungero.Docflow.Server.ModuleFunctions.RequeueSendNotificationForExpiringPowersOfAttorney();
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static void RequeueTransferDocuments()
    {
    global::Sungero.Docflow.Server.ModuleFunctions.RequeueTransferDocuments();
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static void CreateStoragePolicySettings(global::System.DateTime now)
    {
    ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server)).CreateStoragePolicySettings(now);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.String GetStoragePolicySettingsQuery(global::System.DateTime now)
    {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server)).GetStoragePolicySettingsQuery(now);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.Module.DocumentToSetStorage> GetDocumentsToTransfer()
    {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server)).GetDocumentsToTransfer();
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.String GetDocumentsToTransferQuery()
    {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server)).GetDocumentsToTransferQuery();
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static void ExecuteSetDocumentStorage(global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.Module.DocumentToSetStorage> documentsToSetStorageList)
    {
    ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server)).ExecuteSetDocumentStorage(documentsToSetStorageList);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static System.Security.Cryptography.X509Certificates.X509Certificate2 GetSignatureCertificate(System.Byte[] signatureContent)
    {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server)).GetSignatureCertificate(signatureContent);
    }

    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.String BoxToString(System.Collections.Generic.Dictionary<global::System.String, global::System.Boolean> result)
    {
        return global::Sungero.Docflow.Shared.ModuleFunctions.BoxToString(result);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static System.Collections.Generic.Dictionary<global::System.String, global::System.Boolean> UnboxDictionary(global::System.String result)
    {
        return global::Sungero.Docflow.Shared.ModuleFunctions.UnboxDictionary(result);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.Boolean HasSubActionItems(global::Sungero.Workflow.ITask task)
    {
        return global::Sungero.Docflow.Shared.ModuleFunctions.HasSubActionItems(task);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.Boolean HasSubActionItems(global::Sungero.Workflow.ITask task, global::Sungero.Core.Enumeration status)
    {
        return global::Sungero.Docflow.Shared.ModuleFunctions.HasSubActionItems(task, status);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.Boolean HasSubActionItems(global::Sungero.Workflow.ITask task, global::Sungero.Core.Enumeration status, global::Sungero.Company.IEmployee addressee)
    {
        return global::Sungero.Docflow.Shared.ModuleFunctions.HasSubActionItems(task, status, addressee);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<global::Sungero.Workflow.ITask> GetActionItemsForResolution(global::Sungero.Workflow.ITask task, global::Sungero.Core.Enumeration status, global::Sungero.Company.IEmployee addressee)
    {
        return global::Sungero.Docflow.Shared.ModuleFunctions.GetActionItemsForResolution(task, status, addressee);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<global::System.String> ActionItemInfoProvider(global::Sungero.Workflow.ITask task)
    {
        return global::Sungero.Docflow.Shared.ModuleFunctions.ActionItemInfoProvider(task);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static void TryToShowNotifyMessage(global::System.String message)
    {
    global::Sungero.Docflow.Shared.ModuleFunctions.TryToShowNotifyMessage(message);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::Sungero.Company.IEmployee GetDocumentLastApprover(global::Sungero.Content.IElectronicDocument document)
    {
        return global::Sungero.Docflow.Shared.ModuleFunctions.GetDocumentLastApprover(document);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::Sungero.CoreEntities.IStorage GetStorageByPolicies(global::Sungero.Docflow.IOfficialDocument document)
    {
        return ((global::Sungero.Docflow.Shared.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Shared)).GetStorageByPolicies(document);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.DateTime ToTenantTime(global::System.DateTime datetime)
    {
        return global::Sungero.Docflow.Shared.ModuleFunctions.ToTenantTime(datetime);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.String ReplaceFirstSymbolToUpperCase(global::System.String label)
    {
        return global::Sungero.Docflow.Shared.ModuleFunctions.ReplaceFirstSymbolToUpperCase(label);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.Boolean IsASCII(global::System.String value)
    {
        return global::Sungero.Docflow.Shared.ModuleFunctions.IsASCII(value);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.String ReplaceFirstSymbolToLowerCase(global::System.String label)
    {
        return global::Sungero.Docflow.Shared.ModuleFunctions.ReplaceFirstSymbolToLowerCase(label);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.String GetNumberDeclination(global::System.Int32 number, CommonLibrary.LocalizedString singleName, CommonLibrary.LocalizedString genetiveName, CommonLibrary.LocalizedString pluralName)
    {
        return global::Sungero.Docflow.Shared.ModuleFunctions.GetNumberDeclination(number, singleName, genetiveName, pluralName);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::Sungero.Company.IEmployee GetSecretary(global::Sungero.Company.IEmployee manager)
    {
        return global::Sungero.Docflow.Shared.ModuleFunctions.GetSecretary(manager);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<global::Sungero.Company.IManagersAssistant> GetSecretaries(global::Sungero.Company.IEmployee manager)
    {
        return global::Sungero.Docflow.Shared.ModuleFunctions.GetSecretaries(manager);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::Sungero.Company.IEmployee GetSecretaryManager(global::Sungero.Company.IEmployee secretary)
    {
        return global::Sungero.Docflow.Shared.ModuleFunctions.GetSecretaryManager(secretary);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.String GetReportTableName(global::System.String reportName, global::System.Int32 userId)
    {
        return global::Sungero.Docflow.Shared.ModuleFunctions.GetReportTableName(reportName, userId);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.String GetReportTableName(Reporting.IReport report, global::System.Int32 userId)
    {
        return global::Sungero.Docflow.Shared.ModuleFunctions.GetReportTableName(report, userId);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.String GetReportTableName(Reporting.IReport report, global::System.Int32 userId, global::System.String postfix)
    {
        return global::Sungero.Docflow.Shared.ModuleFunctions.GetReportTableName(report, userId, postfix);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.String GetReportTableName(global::System.String reportName, global::System.Int32 userId, global::System.String postfix)
    {
        return global::Sungero.Docflow.Shared.ModuleFunctions.GetReportTableName(reportName, userId, postfix);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::Sungero.Company.IBusinessUnit GetDefaultBusinessUnit(global::Sungero.Company.IEmployee employee)
    {
        return global::Sungero.Docflow.Shared.ModuleFunctions.GetDefaultBusinessUnit(employee);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static void SynchronizeAddendaAndAttachmentsGroup(Sungero.Workflow.Interfaces.IWorkflowEntityAttachmentGroup group, global::Sungero.Content.IElectronicDocument document)
    {
    global::Sungero.Docflow.Shared.ModuleFunctions.SynchronizeAddendaAndAttachmentsGroup(group, document);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.String TrimSpecialSymbols(global::System.String subject)
    {
        return global::Sungero.Docflow.Shared.ModuleFunctions.TrimSpecialSymbols(subject);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.String TrimSpecialSymbols(global::System.String subject, System.Object arg0)
    {
        return global::Sungero.Docflow.Shared.ModuleFunctions.TrimSpecialSymbols(subject, arg0);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.String TrimSpecialSymbols(global::System.String subject, System.Object arg0, System.Object arg1)
    {
        return global::Sungero.Docflow.Shared.ModuleFunctions.TrimSpecialSymbols(subject, arg0, arg1);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.String TrimSpecialSymbols(global::System.String subject, System.Object[] args)
    {
        return global::Sungero.Docflow.Shared.ModuleFunctions.TrimSpecialSymbols(subject, args);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.String TrimQuotes(global::System.String row)
    {
        return global::Sungero.Docflow.Shared.ModuleFunctions.TrimQuotes(row);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.String TrimEndNewLines(global::System.String row)
    {
        return global::Sungero.Docflow.Shared.ModuleFunctions.TrimEndNewLines(row);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.String GetActionGuid(Domain.Shared.IActionInfo action)
    {
        return global::Sungero.Docflow.Shared.ModuleFunctions.GetActionGuid(action);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::Sungero.Docflow.IDocumentSendAction GetSendAction(Domain.Shared.IActionInfo action)
    {
        return global::Sungero.Docflow.Shared.ModuleFunctions.GetSendAction(action);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.Int32 CalculateDelay(global::System.Nullable<global::System.DateTime> deadline, global::System.DateTime completed, global::Sungero.CoreEntities.IUser user)
    {
        return global::Sungero.Docflow.Shared.ModuleFunctions.CalculateDelay(deadline, completed, user);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.Boolean CheckDeadline(global::Sungero.CoreEntities.IUser user, global::System.Nullable<global::System.DateTime> deadline, global::System.Nullable<global::System.DateTime> minDeadline)
    {
        return global::Sungero.Docflow.Shared.ModuleFunctions.CheckDeadline(user, deadline, minDeadline);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.Boolean CheckDeadline(global::System.Nullable<global::System.DateTime> deadline, global::System.Nullable<global::System.DateTime> minDeadline)
    {
        return global::Sungero.Docflow.Shared.ModuleFunctions.CheckDeadline(deadline, minDeadline);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.String ValidateTaskAuthor(global::Sungero.Workflow.ITask task)
    {
        return global::Sungero.Docflow.Shared.ModuleFunctions.ValidateTaskAuthor(task);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.Boolean ValidateTaskAuthor(global::Sungero.Workflow.ITask task, Sungero.Core.IValidationArgs e)
    {
        return global::Sungero.Docflow.Shared.ModuleFunctions.ValidateTaskAuthor(task, e);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.String FormatDocumentNameForReport(global::Sungero.Content.IElectronicDocument document, global::System.Boolean withHyperlink)
    {
        return global::Sungero.Docflow.Shared.ModuleFunctions.FormatDocumentNameForReport(document, withHyperlink);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.String FormatDocumentNameForReport(global::Sungero.Content.IElectronicDocument document, global::System.Int32 version, global::System.Boolean withHyperlink)
    {
        return global::Sungero.Docflow.Shared.ModuleFunctions.FormatDocumentNameForReport(document, version, withHyperlink);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.DateTime GetDateWithTime(global::System.DateTime date, global::Sungero.CoreEntities.IUser user)
    {
        return global::Sungero.Docflow.Shared.ModuleFunctions.GetDateWithTime(date, user);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.DateTime GetDateWithTime(global::System.DateTime date)
    {
        return global::Sungero.Docflow.Shared.ModuleFunctions.GetDateWithTime(date);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.String GetDateWithUTCLabel(global::System.DateTime date)
    {
        return global::Sungero.Docflow.Shared.ModuleFunctions.GetDateWithUTCLabel(date);
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.String FormatTenantIdForBarcode(global::System.String tenant)
    {
        return global::Sungero.Docflow.Shared.ModuleFunctions.FormatTenantIdForBarcode(tenant);
    }

    private static object GetFunctionsContainer()
    {
      return new global::Sungero.Docflow.Server.ModuleFunctions();
    }

    private static object GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType projectType)
    {
      var moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(moduleId));
      var assemblyName = finalModuleMetadatda.GetAssemblyName(projectType);
      var moduleFunctionsType = global::System.Type.GetType(global::System.String.Format("{0}.{1}, {2}", finalModuleMetadatda.FunctionNamespace, "Module", assemblyName));
      return moduleFunctionsType.GetMethod("GetFunctionsContainer", global::System.Reflection.BindingFlags.NonPublic | global::System.Reflection.BindingFlags.Static).Invoke(null, null);
    }
  }
}

// ==================================================================
// ModuleInitializationInstantiation.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.ModuleInitialization
{
  internal static partial class Module
  {
     /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
     internal static void Initializing(Sungero.Domain.ModuleInitializingEventArgs e)
     {
     ((global::Sungero.Docflow.Server.ModuleInitializer)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server)).Initializing(e);
     }
     /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
     internal static void GrantRightsOnFolders(global::Sungero.CoreEntities.IRole allUsers)
     {
     global::Sungero.Docflow.Server.ModuleInitializer.GrantRightsOnFolders(allUsers);
     }
     /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
     internal static void GrantRightsOnDatabooks(global::Sungero.CoreEntities.IRole allUsers)
     {
     global::Sungero.Docflow.Server.ModuleInitializer.GrantRightsOnDatabooks(allUsers);
     }
     /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
     internal static void GrantRightsOnDocuments(global::Sungero.CoreEntities.IRole allUsers)
     {
     global::Sungero.Docflow.Server.ModuleInitializer.GrantRightsOnDocuments(allUsers);
     }
     /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
     internal static void GrantRightsOnTasks(global::Sungero.CoreEntities.IRole allUsers)
     {
     global::Sungero.Docflow.Server.ModuleInitializer.GrantRightsOnTasks(allUsers);
     }
     /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
     internal static void InitializeExchangeServiceUsersRole()
     {
     global::Sungero.Docflow.Server.ModuleInitializer.InitializeExchangeServiceUsersRole();
     }
     /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
     internal static void UpdateSystemAccessRights()
     {
     global::Sungero.Docflow.Server.ModuleInitializer.UpdateSystemAccessRights();
     }
     /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
     internal static void CreateFolderChangeAccessRights()
     {
     global::Sungero.Docflow.Server.ModuleInitializer.CreateFolderChangeAccessRights();
     }
     /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
     internal static void CreateAccessRightsForFolder(global::System.String entityTypeGuid)
     {
     global::Sungero.Docflow.Server.ModuleInitializer.CreateAccessRightsForFolder(entityTypeGuid);
     }
     /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
     internal static void CreateDocumentAccessRights()
     {
     global::Sungero.Docflow.Server.ModuleInitializer.CreateDocumentAccessRights();
     }
     /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
     internal static void CreateAccessRightsForDocumentType(global::System.Guid entityTypeGuid)
     {
     global::Sungero.Docflow.Server.ModuleInitializer.CreateAccessRightsForDocumentType(entityTypeGuid);
     }
     /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
     internal static void CreateAccessRightsType(global::System.String entityTypeGuid, global::System.String operationName, global::System.Int32 operationSet, global::System.Int32 grantedMask, global::Sungero.Core.Enumeration area, global::System.Guid sid, global::System.Boolean isOverride, global::System.String description)
     {
     global::Sungero.Docflow.Server.ModuleInitializer.CreateAccessRightsType(entityTypeGuid, operationName, operationSet, grantedMask, area, sid, isOverride, description);
     }
     /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
     internal static void CreateRoles()
     {
     global::Sungero.Docflow.Server.ModuleInitializer.CreateRoles();
     }
     /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
     internal static global::Sungero.CoreEntities.IRole CreateRole(global::System.String roleName, global::System.String roleDescription, global::System.Guid roleGuid)
     {
         return global::Sungero.Docflow.Server.ModuleInitializer.CreateRole(roleName, roleDescription, roleGuid);
     }
     /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
     internal static void GrantRightsOnProjects()
     {
     global::Sungero.Docflow.Server.ModuleInitializer.GrantRightsOnProjects();
     }
     /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
     internal static global::Sungero.CoreEntities.IRole GetProjectManagersRole()
     {
         return global::Sungero.Docflow.Server.ModuleInitializer.GetProjectManagersRole();
     }
     /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
     internal static global::Sungero.CoreEntities.IRole GetCounterpartyResponsibleRole()
     {
         return global::Sungero.Docflow.Server.ModuleInitializer.GetCounterpartyResponsibleRole();
     }
     /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
     internal static void GrantRightsToDocumentDeleteRole()
     {
     global::Sungero.Docflow.Server.ModuleInitializer.GrantRightsToDocumentDeleteRole();
     }
     /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
     internal static void GrantRightsToClerksRole()
     {
     global::Sungero.Docflow.Server.ModuleInitializer.GrantRightsToClerksRole();
     }
     /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
     internal static void GrantRightsToCounterpartiesResponsibleRole()
     {
     global::Sungero.Docflow.Server.ModuleInitializer.GrantRightsToCounterpartiesResponsibleRole();
     }
     /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
     internal static void GrantRightToRegistrationManagersRole()
     {
     global::Sungero.Docflow.Server.ModuleInitializer.GrantRightToRegistrationManagersRole();
     }
     /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
     internal static void GrantRightsToSigningRole()
     {
     global::Sungero.Docflow.Server.ModuleInitializer.GrantRightsToSigningRole();
     }
     /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
     internal static void CreateFileTypesAndAssociatedApps()
     {
     global::Sungero.Docflow.Server.ModuleInitializer.CreateFileTypesAndAssociatedApps();
     }
     /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
     internal static global::Sungero.Content.IFilesType CreateFileType(global::System.String name)
     {
         return global::Sungero.Docflow.Server.ModuleInitializer.CreateFileType(name);
     }
     /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
     internal static void CreateAssociatedApp(global::System.String extension, global::System.String name, global::Sungero.Core.Enumeration monitoringType, global::Sungero.Content.IFilesType fileType)
     {
     global::Sungero.Docflow.Server.ModuleInitializer.CreateAssociatedApp(extension, name, monitoringType, fileType);
     }
     /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
     internal static void CreateMailDeliveryMethods()
     {
     global::Sungero.Docflow.Server.ModuleInitializer.CreateMailDeliveryMethods();
     }
     /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
     internal static void CreateMailDeliveryMethod(global::System.String name, global::System.String sid)
     {
     global::Sungero.Docflow.Server.ModuleInitializer.CreateMailDeliveryMethod(name, sid);
     }
     /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
     internal static void CreateDocumentTypes()
     {
     global::Sungero.Docflow.Server.ModuleInitializer.CreateDocumentTypes();
     }
     /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
     internal static void CreateDocumentKinds()
     {
     global::Sungero.Docflow.Server.ModuleInitializer.CreateDocumentKinds();
     }
     /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
     internal static void CreateDocumentKind(global::System.String name, global::System.String shortName, global::Sungero.Core.Enumeration numerationType, global::Sungero.Core.Enumeration direction, global::System.Boolean autoFormattedName, global::System.Boolean autoNumerable, global::System.Guid typeGuid, Domain.Shared.IActionInfo[] actions, global::System.Guid entityId)
     {
     global::Sungero.Docflow.Server.ModuleInitializer.CreateDocumentKind(name, shortName, numerationType, direction, autoFormattedName, autoNumerable, typeGuid, actions, entityId);
     }
     /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
     internal static void CreateDocumentKind(global::System.String name, global::System.String shortName, global::Sungero.Core.Enumeration numerationType, global::Sungero.Core.Enumeration direction, global::System.Boolean autoFormattedName, global::System.Boolean autoNumerable, global::System.Guid typeGuid, Domain.Shared.IActionInfo[] actions, global::System.Guid entityId, global::System.Boolean isDefault)
     {
     global::Sungero.Docflow.Server.ModuleInitializer.CreateDocumentKind(name, shortName, numerationType, direction, autoFormattedName, autoNumerable, typeGuid, actions, entityId, isDefault);
     }
     /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
     internal static void CreateDocumentKind(global::System.String name, global::System.String shortName, global::Sungero.Core.Enumeration numerationType, global::Sungero.Core.Enumeration direction, global::System.Boolean autoFormattedName, global::System.Boolean autoNumerable, global::System.Guid typeGuid, Domain.Shared.IActionInfo[] actions, global::System.Boolean projectAccounting, global::System.Boolean grantRightsToProject, global::System.Guid entityId, global::System.Boolean isDefault)
     {
     global::Sungero.Docflow.Server.ModuleInitializer.CreateDocumentKind(name, shortName, numerationType, direction, autoFormattedName, autoNumerable, typeGuid, actions, projectAccounting, grantRightsToProject, entityId, isDefault);
     }
     /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
     internal static void CreateDocumentType(global::System.String name, global::System.Guid documentTypeGuid, global::Sungero.Core.Enumeration direction, global::System.Boolean isRegistrationAllowed)
     {
     global::Sungero.Docflow.Server.ModuleInitializer.CreateDocumentType(name, documentTypeGuid, direction, isRegistrationAllowed);
     }
     /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
     internal static void CreateDocumentSendActions()
     {
     global::Sungero.Docflow.Server.ModuleInitializer.CreateDocumentSendActions();
     }
     /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
     internal static void CreateDocumentSendAction(Domain.Shared.IActionInfo action, global::System.String name)
     {
     global::Sungero.Docflow.Server.ModuleInitializer.CreateDocumentSendAction(action, name);
     }
     /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
     internal static void CreateDefaultRules()
     {
     global::Sungero.Docflow.Server.ModuleInitializer.CreateDefaultRules();
     }
     /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
     internal static global::Sungero.Docflow.IApprovalRule CreateMemoDefaultRule(global::System.String ruleName, global::System.Collections.Generic.List<global::Sungero.Core.Enumeration> stages)
     {
         return global::Sungero.Docflow.Server.ModuleInitializer.CreateMemoDefaultRule(ruleName, stages);
     }
     /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
     internal static global::Sungero.Docflow.IApprovalRule CreateDefaultRule(global::System.String ruleName, global::Sungero.Core.Enumeration documentFlow, global::System.Collections.Generic.List<global::Sungero.Core.Enumeration> stages)
     {
         return global::Sungero.Docflow.Server.ModuleInitializer.CreateDefaultRule(ruleName, documentFlow, stages);
     }
     /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
     internal static void AddConditionToRule(global::Sungero.Docflow.IApprovalRuleBase rule, global::Sungero.Docflow.IConditionBase condition, global::System.Int32 stageNumber)
     {
     global::Sungero.Docflow.Server.ModuleInitializer.AddConditionToRule(rule, condition, stageNumber);
     }
     /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
     internal static global::Sungero.Docflow.IConditionBase CreateRoleCompareSignatoryAndInitManagerCondition(global::Sungero.Docflow.IConditionBase condition)
     {
         return global::Sungero.Docflow.Server.ModuleInitializer.CreateRoleCompareSignatoryAndInitManagerCondition(condition);
     }
     /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
     internal static void SetRuleStages(global::Sungero.Docflow.IApprovalRuleBase rule, global::System.Collections.Generic.List<global::Sungero.Core.Enumeration> stages)
     {
     global::Sungero.Docflow.Server.ModuleInitializer.SetRuleStages(rule, stages);
     }
     /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
     internal static global::Sungero.Docflow.IApprovalStage CreateApprovalStage(global::Sungero.Core.Enumeration stageType)
     {
         return global::Sungero.Docflow.Server.ModuleInitializer.CreateApprovalStage(stageType);
     }
     /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
     internal static void CreateDocumentRegistersAndSettings()
     {
     global::Sungero.Docflow.Server.ModuleInitializer.CreateDocumentRegistersAndSettings();
     }
     /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
     internal static global::Sungero.Docflow.IDocumentRegister CreateYearSectionDocumentRegister(global::System.String name, global::System.String index, global::System.Guid entityId)
     {
         return global::Sungero.Docflow.Server.ModuleInitializer.CreateYearSectionDocumentRegister(name, index, entityId);
     }
     /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
     internal static global::Sungero.Docflow.IDocumentRegister CreateNumerationDocumentRegister(global::System.String name, global::System.String index, global::Sungero.Core.Enumeration documentFlow, global::System.Guid entityId)
     {
         return global::Sungero.Docflow.Server.ModuleInitializer.CreateNumerationDocumentRegister(name, index, documentFlow, entityId);
     }
     /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
     internal static void CreateNumerationSetting(global::System.Guid documentGuid, global::Sungero.Core.Enumeration documentFlow, global::Sungero.Docflow.IDocumentRegister documentRegister)
     {
     global::Sungero.Docflow.Server.ModuleInitializer.CreateNumerationSetting(documentGuid, documentFlow, documentRegister);
     }
     /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
     internal static void CreateDefaultCurrencies()
     {
     global::Sungero.Docflow.Server.ModuleInitializer.CreateDefaultCurrencies();
     }
     /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
     internal static void CreateCurrency(global::System.String name, global::System.String alphaCode, global::System.String numericCode, global::System.String shortName, global::System.String fractionName, global::System.Boolean isDefault)
     {
     global::Sungero.Docflow.Server.ModuleInitializer.CreateCurrency(name, alphaCode, numericCode, shortName, fractionName, isDefault);
     }
     /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
     internal static void CreateDefaultApprovalRoles()
     {
     global::Sungero.Docflow.Server.ModuleInitializer.CreateDefaultApprovalRoles();
     }
     /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
     internal static void CreateApprovalRole(global::Sungero.Core.Enumeration roleType, global::System.String description)
     {
     global::Sungero.Docflow.Server.ModuleInitializer.CreateApprovalRole(roleType, description);
     }
     /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
     internal static void CreateDefaultRelationTypes()
     {
     global::Sungero.Docflow.Server.ModuleInitializer.CreateDefaultRelationTypes();
     }
     /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
     internal static void UpdateSystemRelationTypes()
     {
     global::Sungero.Docflow.Server.ModuleInitializer.UpdateSystemRelationTypes();
     }
     /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
     internal static global::Sungero.CoreEntities.IRelationType UpdateSystemRelationType(global::System.String name, global::System.String sourceTitle, global::System.String targetTitle, global::System.String sourceDescription, global::System.String targetDescription)
     {
         return global::Sungero.Docflow.Server.ModuleInitializer.UpdateSystemRelationType(name, sourceTitle, targetTitle, sourceDescription, targetDescription);
     }
     /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
     internal static global::Sungero.CoreEntities.IRelationType CreateRelationType(global::System.String name, global::System.String sourceTitle, global::System.String targetTitle, global::System.String sourceDescription, global::System.String targetDescription, global::System.Boolean hasDirection, global::System.Boolean needRight, global::System.Boolean useSource, global::System.Boolean useTarget)
     {
         return global::Sungero.Docflow.Server.ModuleInitializer.CreateRelationType(name, sourceTitle, targetTitle, sourceDescription, targetDescription, hasDirection, needRight, useSource, useTarget);
     }
     /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
     internal static void CreateDocumentRegisterNumberTable()
     {
     global::Sungero.Docflow.Server.ModuleInitializer.CreateDocumentRegisterNumberTable();
     }
     /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
     internal static void CreateParametersTable()
     {
     global::Sungero.Docflow.Server.ModuleInitializer.CreateParametersTable();
     }
     /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
     internal static void AddCompanyDataServiceParam()
     {
     global::Sungero.Docflow.Server.ModuleInitializer.AddCompanyDataServiceParam();
     }
     /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
     internal static void CreateTaskIndices()
     {
     global::Sungero.Docflow.Server.ModuleInitializer.CreateTaskIndices();
     }
     /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
     internal static void CreateAssignmentIndices()
     {
     global::Sungero.Docflow.Server.ModuleInitializer.CreateAssignmentIndices();
     }
     /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
     internal static void CreateEDocIndices()
     {
     global::Sungero.Docflow.Server.ModuleInitializer.CreateEDocIndices();
     }
     /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
     internal static void CreateReportsTables()
     {
     global::Sungero.Docflow.Server.ModuleInitializer.CreateReportsTables();
     }
     /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
     internal static void CheckRightsToInitialize()
     {
     global::Sungero.Docflow.Server.ModuleInitializer.CheckRightsToInitialize();
     }
     /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
     internal static void ConvertAccessGrantRightsToDocuments()
     {
     global::Sungero.Docflow.Server.ModuleInitializer.ConvertAccessGrantRightsToDocuments();
     }
     /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
     internal static void ConvertDocumentTemplates()
     {
     global::Sungero.Docflow.Server.ModuleInitializer.ConvertDocumentTemplates();
     }
     /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
     internal static void CreateSmartProcessingSettings()
     {
     global::Sungero.Docflow.Server.ModuleInitializer.CreateSmartProcessingSettings();
     }
     /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
     internal static void FillSmartProcessingRules()
     {
     ((global::Sungero.Docflow.Server.ModuleInitializer)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server)).FillSmartProcessingRules();
     }
     /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
     internal static void AddProcessRule(global::Sungero.Docflow.ISmartProcessingSetting smartProcessingSettings, global::System.String className, global::System.String grammarName, global::System.String moduleName, global::System.String functionName)
     {
     ((global::Sungero.Docflow.Server.ModuleInitializer)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server)).AddProcessRule(smartProcessingSettings, className, grammarName, moduleName, functionName);
     }


    private static object GetFunctionsContainer()
    {
      return new global::Sungero.Docflow.Server.ModuleInitializer();
    }

    private static object GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType projectType)
    {
      var moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(moduleId));
      var assemblyName = finalModuleMetadatda.GetAssemblyName(projectType);
      var moduleFunctionsType = global::System.Type.GetType(global::System.String.Format("{0}.{1}, {2}", finalModuleMetadatda.ModuleInitializationNamespace, "Module", assemblyName));
      return moduleFunctionsType.GetMethod("GetFunctionsContainer", global::System.Reflection.BindingFlags.NonPublic | global::System.Reflection.BindingFlags.Static).Invoke(null, null);
    }

  }
}


// ==================================================================
// ModuleEventArgs.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
  public class ApprovalRulesBusinessUnitPanelNavigationFilter : global::Sungero.Domain.PanelNavigationFilterBase
  {
    public override global::System.Linq.IQueryable Apply(global::System.Linq.IQueryable query)
    {
      var typedQuery = (global::System.Linq.IQueryable<global::Sungero.Company.IBusinessUnit>)query;
      var typedState = (global::Sungero.Docflow.FolderFilterState.IApprovalRulesFilterState)this.State;
      var handlers = new global::Sungero.Docflow.Server.ApprovalRulesFolderHandlers(typedState);
      var result = handlers.ApprovalRulesBusinessUnitFiltering(typedQuery);
      if (handlers._disableUiFiltering)
         global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<global::Sungero.Company.IBusinessUnit>();
      return result;
    }
  }

  public class ApprovalRulesDocumentKindPanelNavigationFilter : global::Sungero.Domain.PanelNavigationFilterBase
  {
    public override global::System.Linq.IQueryable Apply(global::System.Linq.IQueryable query)
    {
      var typedQuery = (global::System.Linq.IQueryable<global::Sungero.Docflow.IDocumentKind>)query;
      var typedState = (global::Sungero.Docflow.FolderFilterState.IApprovalRulesFilterState)this.State;
      var handlers = new global::Sungero.Docflow.Server.ApprovalRulesFolderHandlers(typedState);
      var result = handlers.ApprovalRulesDocumentKindFiltering(typedQuery);
      if (handlers._disableUiFiltering)
         global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<global::Sungero.Docflow.IDocumentKind>();
      return result;
    }
  }

  public class ApprovalRulesDepartmentPanelNavigationFilter : global::Sungero.Domain.PanelNavigationFilterBase
  {
    public override global::System.Linq.IQueryable Apply(global::System.Linq.IQueryable query)
    {
      var typedQuery = (global::System.Linq.IQueryable<global::Sungero.Company.IDepartment>)query;
      var typedState = (global::Sungero.Docflow.FolderFilterState.IApprovalRulesFilterState)this.State;
      var handlers = new global::Sungero.Docflow.Server.ApprovalRulesFolderHandlers(typedState);
      var result = handlers.ApprovalRulesDepartmentFiltering(typedQuery);
      if (handlers._disableUiFiltering)
         global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<global::Sungero.Company.IDepartment>();
      return result;
    }
  }


  public class StoragePolicyDocumentKindPanelNavigationFilter : global::Sungero.Domain.PanelNavigationFilterBase
  {
    public override global::System.Linq.IQueryable Apply(global::System.Linq.IQueryable query)
    {
      var typedQuery = (global::System.Linq.IQueryable<global::Sungero.Docflow.IDocumentKind>)query;
      var typedState = (global::Sungero.Docflow.FolderFilterState.IStoragePolicyFilterState)this.State;
      var handlers = new global::Sungero.Docflow.Server.StoragePolicyFolderHandlers(typedState);
      var result = handlers.StoragePolicyDocumentKindFiltering(typedQuery);
      if (handlers._disableUiFiltering)
         global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<global::Sungero.Docflow.IDocumentKind>();
      return result;
    }
  }


}

// ==================================================================
// ModuleServerPublicFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
  public partial class ModuleServerPublicFunctions : global::Sungero.Docflow.Server.IModuleServerPublicFunctions
  {
    public void AddDateTimeParameterToCommand(System.Data.IDbCommand command, global::System.String parameterName, global::System.DateTime parameterValue)
    {
global::Sungero.Docflow.Functions.Module.AddDateTimeParameterToCommand(command, parameterName, parameterValue);
    }
    public void AddExpiringDocumentsToTable(global::System.String expiringDocsTableName, global::System.Collections.Generic.List<global::System.Int32> ids)
    {
global::Sungero.Docflow.Functions.Module.AddExpiringDocumentsToTable(expiringDocsTableName, ids);
    }
    public void AddInfoToRightContent(Sungero.Core.StateBlock block, global::System.String info)
    {
global::Sungero.Docflow.Functions.Module.AddInfoToRightContent(block, info);
    }
    public void AddInfoToRightContent(Sungero.Core.StateBlock block, global::System.String info, Sungero.Core.StateBlockLabelStyle style)
    {
global::Sungero.Docflow.Functions.Module.AddInfoToRightContent(block, info, style);
    }
    public System.Data.IDbDataParameter AddIntegerOutputParameterToCommand(System.Data.IDbCommand command, global::System.String parameterName)
    {
      return global::Sungero.Docflow.Functions.Module.AddIntegerOutputParameterToCommand(command, parameterName);
    }
    public void AddIntegerParameterToCommand(System.Data.IDbCommand command, global::System.String parameterName, global::System.Int32 parameterValue)
    {
global::Sungero.Docflow.Functions.Module.AddIntegerParameterToCommand(command, parameterName, parameterValue);
    }
    public void AddStringParameterToCommand(System.Data.IDbCommand command, global::System.String parameterName, global::System.String parameterValue)
    {
global::Sungero.Docflow.Functions.Module.AddStringParameterToCommand(command, parameterName, parameterValue);
    }
    public void AddTaskToExpiringTable(global::System.String expiringDocsTableName, global::System.Int32 document, global::System.Int32 task)
    {
global::Sungero.Docflow.Functions.Module.AddTaskToExpiringTable(expiringDocsTableName, document, task);
    }
    public void ClearExpiringTable(global::System.String expiringDocsTableName, global::System.Boolean taskIsNull)
    {
global::Sungero.Docflow.Functions.Module.ClearExpiringTable(expiringDocsTableName, taskIsNull);
    }
    public void ClearIdsFromExpiringDocsTable(global::System.String expiringDocsTableName, global::System.Collections.Generic.List<global::System.Int32> ids)
    {
global::Sungero.Docflow.Functions.Module.ClearIdsFromExpiringDocsTable(expiringDocsTableName, ids);
    }
    public Sungero.Core.StateBlockLabelStyle CreateDelayStyle()
    {
      return global::Sungero.Docflow.Functions.Module.CreateDelayStyle();
    }
    public void CreateExternalLink(global::Sungero.Domain.Shared.IEntity entity, global::System.Guid entityId)
    {
global::Sungero.Docflow.Functions.Module.CreateExternalLink(entity, entityId);
    }
    public void CreateGrantAccessRightsToDocumentAsyncHandler(global::System.Int32 documentId, global::System.Nullable<global::System.Int32> ruleId, global::System.Boolean grantRightChildDocument)
    {
global::Sungero.Docflow.Functions.Module.CreateGrantAccessRightsToDocumentAsyncHandler(documentId, ruleId, grantRightChildDocument);
    }
    public void CreateGrantAccessRightsToDocumentsByRuleAsyncHandler(global::System.Int32 id)
    {
global::Sungero.Docflow.Functions.Module.CreateGrantAccessRightsToDocumentsByRuleAsyncHandler(id);
    }
    public Sungero.Core.StateBlockLabelStyle CreateHeaderStyle(global::System.Boolean italic)
    {
      return global::Sungero.Docflow.Functions.Module.CreateHeaderStyle(italic);
    }
    public Sungero.Core.StateBlockLabelStyle CreateHeaderStyle()
    {
      return global::Sungero.Docflow.Functions.Module.CreateHeaderStyle();
    }
    public void CreateIndexOnTable(global::System.String tableName, global::System.String indexName, global::System.String indexQuery)
    {
global::Sungero.Docflow.Functions.Module.CreateIndexOnTable(tableName, indexName, indexQuery);
    }
    public Sungero.Core.StateBlockLabelStyle CreateNoteStyle(global::System.Boolean italic)
    {
      return global::Sungero.Docflow.Functions.Module.CreateNoteStyle(italic);
    }
    public Sungero.Core.StateBlockLabelStyle CreateNoteStyle()
    {
      return global::Sungero.Docflow.Functions.Module.CreateNoteStyle();
    }
    public Sungero.Core.StateBlockLabelStyle CreatePerformerDeadlineStyle(global::System.Boolean italic)
    {
      return global::Sungero.Docflow.Functions.Module.CreatePerformerDeadlineStyle(italic);
    }
    public Sungero.Core.StateBlockLabelStyle CreatePerformerDeadlineStyle()
    {
      return global::Sungero.Docflow.Functions.Module.CreatePerformerDeadlineStyle();
    }
    public Sungero.Core.StateBlockLabelStyle CreateSeparatorStyle()
    {
      return global::Sungero.Docflow.Functions.Module.CreateSeparatorStyle();
    }
    public Sungero.Core.StateBlockLabelStyle CreateStyle(global::System.Nullable<global::System.Int32> fontSize)
    {
      return global::Sungero.Docflow.Functions.Module.CreateStyle(fontSize);
    }
    public Sungero.Core.StateBlockLabelStyle CreateStyle(global::System.Boolean bolded, global::System.Boolean grayed)
    {
      return global::Sungero.Docflow.Functions.Module.CreateStyle(bolded, grayed);
    }
    public Sungero.Core.StateBlockLabelStyle CreateStyle(global::System.Boolean bolded, global::System.Boolean italic, global::System.Boolean grayed)
    {
      return global::Sungero.Docflow.Functions.Module.CreateStyle(bolded, italic, grayed);
    }
    public Sungero.Core.StateBlockLabelStyle CreateStyle(global::System.Nullable<global::System.Int32> fontSize, global::System.Boolean bolded, global::System.Boolean grayed)
    {
      return global::Sungero.Docflow.Functions.Module.CreateStyle(fontSize, bolded, grayed);
    }
    public Sungero.Core.StateBlockLabelStyle CreateStyle(global::Sungero.Core.Color color)
    {
      return global::Sungero.Docflow.Functions.Module.CreateStyle(color);
    }
    public Sungero.Core.StateBlockLabelStyle CreateStyle(global::System.Nullable<global::System.Int32> fontSize, global::System.Boolean bolded, global::System.Boolean italic, global::System.Boolean grayed, global::Sungero.Core.Color color)
    {
      return global::Sungero.Docflow.Functions.Module.CreateStyle(fontSize, bolded, italic, grayed, color);
    }
    public void CreateTempTableForRights(global::System.String tableName, global::System.Linq.IQueryable<global::System.Int32> availableIds)
    {
global::Sungero.Docflow.Functions.Module.CreateTempTableForRights(tableName, availableIds);
    }
    public void DeleteLicense()
    {
global::Sungero.Docflow.Functions.Module.DeleteLicense();
    }
    public void DeleteReportData(global::System.String tableName, global::System.String reportSessionId)
    {
global::Sungero.Docflow.Functions.Module.DeleteReportData(tableName, reportSessionId);
    }
    public void DropReportTempTable(global::System.String tableName)
    {
global::Sungero.Docflow.Functions.Module.DropReportTempTable(tableName);
    }
    public void DropReportTempTables(global::System.String[] tablesNames)
    {
global::Sungero.Docflow.Functions.Module.DropReportTempTables(tablesNames);
    }
    public System.Object ExecuteScalarSQLCommand(global::System.String commandText)
    {
      return global::Sungero.Docflow.Functions.Module.ExecuteScalarSQLCommand(commandText);
    }
    public void ExecuteSQLCommand(global::System.String commandText)
    {
global::Sungero.Docflow.Functions.Module.ExecuteSQLCommand(commandText);
    }
    public void ExecuteSQLCommandFormat(global::System.String format, System.Object[] args)
    {
global::Sungero.Docflow.Functions.Module.ExecuteSQLCommandFormat(format, args);
    }
    public void FastDeleteQueueItems(global::System.Collections.Generic.List<global::System.Int32> itemsIds)
    {
global::Sungero.Docflow.Functions.Module.FastDeleteQueueItems(itemsIds);
    }
    public global::System.Linq.IQueryable<global::Sungero.Workflow.IAssignment> FilterAssignments(global::System.Linq.IQueryable<global::Sungero.Workflow.IAssignment> assignments, global::System.DateTime periodBegin, global::System.DateTime periodEnd, global::System.String mode)
    {
      return global::Sungero.Docflow.Functions.Module.FilterAssignments(assignments, periodBegin, periodEnd, mode);
    }
    public global::System.Boolean GeneratePublicBodyForExchangeDocument(global::Sungero.Docflow.IOfficialDocument document, global::System.Int32 versionId, global::System.Nullable<global::Sungero.Core.Enumeration> exchangeState, global::System.Nullable<global::System.DateTime> startTime)
    {
      return global::Sungero.Docflow.Functions.Module.GeneratePublicBodyForExchangeDocument(document, versionId, exchangeState, startTime);
    }
    public void GeneratePublicBodyForExchangeDocument(global::Sungero.Docflow.IOfficialDocument document, global::System.Int32 versionId, global::System.Nullable<global::Sungero.Core.Enumeration> exchangeState)
    {
global::Sungero.Docflow.Functions.Module.GeneratePublicBodyForExchangeDocument(document, versionId, exchangeState);
    }
    public void GenerateTempPublicBodyForExchangeDocument(global::Sungero.Docflow.IOfficialDocument document, global::System.Int32 versionId)
    {
global::Sungero.Docflow.Functions.Module.GenerateTempPublicBodyForExchangeDocument(document, versionId);
    }
    public global::System.String GetAssignmentTypeName(global::Sungero.Workflow.IAssignmentBase assignment)
    {
      return global::Sungero.Docflow.Functions.Module.GetAssignmentTypeName(assignment);
    }
    public global::System.String GetAssignmentUserComment(global::Sungero.Workflow.IAssignment assignment)
    {
      return global::Sungero.Docflow.Functions.Module.GetAssignmentUserComment(assignment);
    }
    public global::Sungero.Content.IAssociatedApplication GetAssociatedApplicationByFileName(global::System.String fileName)
    {
      return global::Sungero.Docflow.Functions.Module.GetAssociatedApplicationByFileName(fileName);
    }
    public global::Sungero.Docflow.Structures.Module.ICertificateSubject GetCertificateSubject(Sungero.Domain.Shared.ISignature signature)
    {
      return global::Sungero.Docflow.Functions.Module.GetCertificateSubject(signature);
    }
    public global::Sungero.Docflow.Structures.Module.IExpiringDocsNotificationParams GetDefaultExpiringDocsNotificationParams(global::System.String lastNotificationParamName, global::System.String noticesTableName)
    {
      return global::Sungero.Docflow.Functions.Module.GetDefaultExpiringDocsNotificationParams(lastNotificationParamName, noticesTableName);
    }
    public System.Object GetDocflowParamsValue(global::System.String paramName)
    {
      return global::Sungero.Docflow.Functions.Module.GetDocflowParamsValue(paramName);
    }
    public global::Sungero.Core.StateView GetDocumentSummary(global::Sungero.Docflow.IOfficialDocument document)
    {
      return global::Sungero.Docflow.Functions.Module.GetDocumentSummary(document);
    }
    public global::System.Collections.Generic.List<global::System.Int32> GetDocumentsWithSendedTask(global::System.String expiringDocumentTableName)
    {
      return global::Sungero.Docflow.Functions.Module.GetDocumentsWithSendedTask(expiringDocumentTableName);
    }
    public global::System.Collections.Generic.List<global::Sungero.Company.IEmployee> GetEmployeesFromRecipients(global::System.Collections.Generic.List<global::Sungero.CoreEntities.IRecipient> recipients)
    {
      return global::Sungero.Docflow.Functions.Module.GetEmployeesFromRecipients(recipients);
    }
    public global::System.Int32 GetEmptyLineMargin()
    {
      return global::Sungero.Docflow.Functions.Module.GetEmptyLineMargin();
    }
    public Sungero.Domain.Shared.IExternalLink GetExternalLink(global::System.Guid entityType, global::System.Guid entityId)
    {
      return global::Sungero.Docflow.Functions.Module.GetExternalLink(entityType, entityId);
    }
    public global::System.String GetFormatedUserText(global::System.String userText)
    {
      return global::Sungero.Docflow.Functions.Module.GetFormatedUserText(userText);
    }
    public global::System.String GetGrantRightMode()
    {
      return global::Sungero.Docflow.Functions.Module.GetGrantRightMode();
    }
    public global::Sungero.Core.Color GetGrayColor()
    {
      return global::Sungero.Docflow.Functions.Module.GetGrayColor();
    }
    public global::System.DateTime GetLastAgentRunDate(global::System.String agentKey)
    {
      return global::Sungero.Docflow.Functions.Module.GetLastAgentRunDate(agentKey);
    }
    public global::System.DateTime GetLastNotificationDate(global::System.String lastNotificationParameterName, global::System.Nullable<global::System.DateTime> defaultDate)
    {
      return global::Sungero.Docflow.Functions.Module.GetLastNotificationDate(lastNotificationParameterName, defaultDate);
    }
    public global::System.Collections.Generic.List<Company.Structures.ResponsibilitiesReport.ResponsibilitiesReportTableLine> GetResponsibilitiesReportData(global::Sungero.Company.IEmployee employee)
    {
      return global::Sungero.Docflow.Functions.Module.GetResponsibilitiesReportData(employee);
    }
    public global::System.Guid GetRightTypeGuid(global::System.Nullable<global::Sungero.Core.Enumeration> rightType)
    {
      return global::Sungero.Docflow.Functions.Module.GetRightTypeGuid(rightType);
    }
    public global::System.String GetSeparatorText()
    {
      return global::Sungero.Docflow.Functions.Module.GetSeparatorText();
    }
    public System.Object GetServerEntityFunctionResult(global::Sungero.Domain.Shared.IEntity entity, global::System.String name, global::System.Collections.Generic.List<System.Object> parameters)
    {
      return global::Sungero.Docflow.Functions.Module.GetServerEntityFunctionResult(entity, name, parameters);
    }
    public System.Security.Cryptography.X509Certificates.X509Certificate2 GetSignatureCertificate(System.Byte[] signatureContent)
    {
      return global::Sungero.Docflow.Functions.Module.GetSignatureCertificate(signatureContent);
    }
    public global::System.String GetSignatureMarkAsHtml(global::Sungero.Docflow.IOfficialDocument document, global::System.Int32 versionId)
    {
      return global::Sungero.Docflow.Functions.Module.GetSignatureMarkAsHtml(document, versionId);
    }
    public global::System.String GetSignatureMarkForCertificateAsHtml(Sungero.Domain.Shared.ISignature signature)
    {
      return global::Sungero.Docflow.Functions.Module.GetSignatureMarkForCertificateAsHtml(signature);
    }
    public global::System.String GetSignatureMarkForSimpleSignatureAsHtml(Sungero.Domain.Shared.ISignature signature)
    {
      return global::Sungero.Docflow.Functions.Module.GetSignatureMarkForSimpleSignatureAsHtml(signature);
    }
    public global::System.String GetSignatureValidationErrorsAsString(Sungero.Domain.Shared.ISignature signature, global::System.String separator)
    {
      return global::Sungero.Docflow.Functions.Module.GetSignatureValidationErrorsAsString(signature, separator);
    }
    public global::System.String GetTaskUserComment(global::Sungero.Workflow.ITask task, global::System.String autoGeneratedText)
    {
      return global::Sungero.Docflow.Functions.Module.GetTaskUserComment(task, autoGeneratedText);
    }
    public global::System.String GetTaskUserComment(global::Sungero.Workflow.ITask task, global::System.DateTime date, global::System.String autoGeneratedText)
    {
      return global::Sungero.Docflow.Functions.Module.GetTaskUserComment(task, date, autoGeneratedText);
    }
    public void GrantManualReadRightForAttachments(global::Sungero.Workflow.ITask task, global::System.Collections.Generic.List<global::Sungero.Domain.Shared.IEntity> attachments)
    {
global::Sungero.Docflow.Functions.Module.GrantManualReadRightForAttachments(task, attachments);
    }
    public void GrantReadRightsForAttachments(System.Collections.Generic.IEnumerable<global::Sungero.Domain.Shared.IEntity> attachments, System.Collections.Generic.IEnumerable<global::Sungero.CoreEntities.IRecipient> users)
    {
global::Sungero.Docflow.Functions.Module.GrantReadRightsForAttachments(attachments, users);
    }
    public global::System.Boolean IncludedInBusinessUnitHeadsRole()
    {
      return global::Sungero.Docflow.Functions.Module.IncludedInBusinessUnitHeadsRole();
    }
    public global::System.Boolean IncludedInClerksRole()
    {
      return global::Sungero.Docflow.Functions.Module.IncludedInClerksRole();
    }
    public global::System.Boolean IncludedInDepartmentManagersRole()
    {
      return global::Sungero.Docflow.Functions.Module.IncludedInDepartmentManagersRole();
    }
    public void InsertOrUpdateDocflowParam(global::System.String key, global::System.String value)
    {
global::Sungero.Docflow.Functions.Module.InsertOrUpdateDocflowParam(key, value);
    }
    public global::System.Boolean IsAllNotificationsStarted(global::System.String expiringDocsTableName)
    {
      return global::Sungero.Docflow.Functions.Module.IsAllNotificationsStarted(expiringDocsTableName);
    }
    public void MarkBlock(Sungero.Core.StateBlock block)
    {
global::Sungero.Docflow.Functions.Module.MarkBlock(block);
    }
    public System.Collections.Generic.Dictionary<global::System.Int32, System.Byte[]> ReadLicense()
    {
      return global::Sungero.Docflow.Functions.Module.ReadLicense();
    }
    public void RestoreLicense(System.Collections.Generic.Dictionary<global::System.Int32, System.Byte[]> licenses)
    {
global::Sungero.Docflow.Functions.Module.RestoreLicense(licenses);
    }
    public global::System.String ToShortDateShortTime(global::System.DateTime date)
    {
      return global::Sungero.Docflow.Functions.Module.ToShortDateShortTime(date);
    }
    public void TrySendExpiringDocNotifications(global::Sungero.Docflow.Structures.Module.IExpiringDocsNotificationParams notificationParams)
    {
global::Sungero.Docflow.Functions.Module.TrySendExpiringDocNotifications(notificationParams);
    }
    public void UpdateLastAgentRunDate(global::System.String agentKey, global::System.DateTime notificationDate)
    {
global::Sungero.Docflow.Functions.Module.UpdateLastAgentRunDate(agentKey, notificationDate);
    }
    public void UpdateLastNotificationDate(global::Sungero.Docflow.Structures.Module.IExpiringDocsNotificationParams notificationParams)
    {
global::Sungero.Docflow.Functions.Module.UpdateLastNotificationDate(notificationParams);
    }
    public void WriteStructuresToTable(global::System.String table, System.Collections.Generic.IEnumerable<Domain.Shared.ISimpleAppliedStructure> structures)
    {
global::Sungero.Docflow.Functions.Module.WriteStructuresToTable(table, structures);
    }
  }
}

namespace Sungero.Docflow.Server
{
  public partial class ModuleServerPublicFunctions : global::Sungero.Docflow.Server.IModuleServerPublicFunctions
  {
      private static readonly global::System.Guid JobSendMailNotificationId = global::System.Guid.Parse("d7044e44-89bc-4fb3-9e44-5491514d9b05");

      public void Enqueue_SendMailNotification()
      {      
         global::Sungero.Agent.JobsManager.Enqueue(JobSendMailNotificationId, null);
      }
 
      private static readonly global::System.Guid JobGrantAccessRightsToDocumentsId = global::System.Guid.Parse("1e83711c-fc18-4a48-83aa-124d8ef9b690");

      public void Enqueue_GrantAccessRightsToDocuments()
      {      
         global::Sungero.Agent.JobsManager.Enqueue(JobGrantAccessRightsToDocumentsId, null);
      }
 
      private static readonly global::System.Guid JobSendNotificationForExpiringPowerOfAttorneyId = global::System.Guid.Parse("2ff6172c-7964-4df7-a294-88c77bc97ef2");

      public void Enqueue_SendNotificationForExpiringPowerOfAttorney()
      {      
         global::Sungero.Agent.JobsManager.Enqueue(JobSendNotificationForExpiringPowerOfAttorneyId, null);
      }
 
      private static readonly global::System.Guid JobTransferDocumentsByStoragePolicyId = global::System.Guid.Parse("0df1dbd4-8cd1-407d-90ba-537a251d4f7c");

      public void Enqueue_TransferDocumentsByStoragePolicy()
      {      
         global::Sungero.Agent.JobsManager.Enqueue(JobTransferDocumentsByStoragePolicyId, null);
      }
 


      private static readonly global::System.Guid AsyncHandlerGrantAccessRightsToDocumentId = global::System.Guid.Parse("767ae28b-d043-48b3-9e31-e54c288bde75");

      public void Enqueue_GrantAccessRightsToDocument(global::Sungero.Domain.AsyncHandlerInvokeArgs args)
      {
         global:: Sungero.Metadata.AsyncHandlerDelayStrategy delayStrategy = global::Sungero.Metadata.AsyncHandlerDelayStrategy.ExponentialDelayStrategy;
           int delayInterval = 15;
 
         global::Sungero.Agent.Api.DelayStrategyInfo delayStrategyInfo = new global::Sungero.Agent.Api.DelayStrategyInfo(delayStrategy, delayInterval);
         global::Sungero.Agent.AsyncHandlersManager.Enqueue(AsyncHandlerGrantAccessRightsToDocumentId, null, args, delayStrategyInfo);
      }
 
      private static readonly global::System.Guid AsyncHandlerGrantAccessRightsToDocumentsByRuleId = global::System.Guid.Parse("c4352760-6439-484b-9e00-6c878427d64e");

      public void Enqueue_GrantAccessRightsToDocumentsByRule(global::Sungero.Domain.AsyncHandlerInvokeArgs args)
      {
         global:: Sungero.Metadata.AsyncHandlerDelayStrategy delayStrategy = global::Sungero.Metadata.AsyncHandlerDelayStrategy.ExponentialDelayStrategy;
           int delayInterval = 15;
 
         global::Sungero.Agent.Api.DelayStrategyInfo delayStrategyInfo = new global::Sungero.Agent.Api.DelayStrategyInfo(delayStrategy, delayInterval);
         global::Sungero.Agent.AsyncHandlersManager.Enqueue(AsyncHandlerGrantAccessRightsToDocumentsByRuleId, null, args, delayStrategyInfo);
      }
 
      private static readonly global::System.Guid AsyncHandlerSetDocumentStorageId = global::System.Guid.Parse("4f03b0d0-f0f5-45ed-b1c5-98d32b864503");

      public void Enqueue_SetDocumentStorage(global::Sungero.Domain.AsyncHandlerInvokeArgs args)
      {
         global:: Sungero.Metadata.AsyncHandlerDelayStrategy delayStrategy = global::Sungero.Metadata.AsyncHandlerDelayStrategy.ExponentialDelayStrategy;
           int delayInterval = 15;
 
         global::Sungero.Agent.Api.DelayStrategyInfo delayStrategyInfo = new global::Sungero.Agent.Api.DelayStrategyInfo(delayStrategy, delayInterval);
         global::Sungero.Agent.AsyncHandlersManager.Enqueue(AsyncHandlerSetDocumentStorageId, null, args, delayStrategyInfo);
      }
 
      private static readonly global::System.Guid AsyncHandlerConvertDocumentToPdfId = global::System.Guid.Parse("a416fcc6-b361-48de-a665-d19de3c5379d");

      public void Enqueue_ConvertDocumentToPdf(global::Sungero.Domain.AsyncHandlerInvokeArgs args)
      {
         global:: Sungero.Metadata.AsyncHandlerDelayStrategy delayStrategy = global::Sungero.Metadata.AsyncHandlerDelayStrategy.ExponentialDelayStrategy;
           int delayInterval = 15;
 
         global::Sungero.Agent.Api.DelayStrategyInfo delayStrategyInfo = new global::Sungero.Agent.Api.DelayStrategyInfo(delayStrategy, delayInterval);
         global::Sungero.Agent.AsyncHandlersManager.Enqueue(AsyncHandlerConvertDocumentToPdfId, null, args, delayStrategyInfo);
      }
 

  }
}

// ==================================================================
// ModuleServerInitializationFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
  public partial class ModuleServerInitializationFunctions : global::Sungero.Docflow.Server.IModuleServerInitializationFunctions
  {
         public void AddConditionToRule(global::Sungero.Docflow.IApprovalRuleBase rule, global::Sungero.Docflow.IConditionBase condition, global::System.Int32 stageNumber)
         {
     global:: Sungero.Docflow.ModuleInitialization.Module.AddConditionToRule(rule, condition, stageNumber);
         }
         public void AddProcessRule(global::Sungero.Docflow.ISmartProcessingSetting smartProcessingSettings, global::System.String className, global::System.String grammarName, global::System.String moduleName, global::System.String functionName)
         {
     global:: Sungero.Docflow.ModuleInitialization.Module.AddProcessRule(smartProcessingSettings, className, grammarName, moduleName, functionName);
         }
         public void CheckRightsToInitialize()
         {
     global:: Sungero.Docflow.ModuleInitialization.Module.CheckRightsToInitialize();
         }
         public void CreateAccessRightsType(global::System.String entityTypeGuid, global::System.String operationName, global::System.Int32 operationSet, global::System.Int32 grantedMask, global::Sungero.Core.Enumeration area, global::System.Guid sid, global::System.Boolean isOverride, global::System.String description)
         {
     global:: Sungero.Docflow.ModuleInitialization.Module.CreateAccessRightsType(entityTypeGuid, operationName, operationSet, grantedMask, area, sid, isOverride, description);
         }
         public global::Sungero.Docflow.IApprovalRule CreateDefaultRule(global::System.String ruleName, global::Sungero.Core.Enumeration documentFlow, global::System.Collections.Generic.List<global::Sungero.Core.Enumeration> stages)
         {
           return global:: Sungero.Docflow.ModuleInitialization.Module.CreateDefaultRule(ruleName, documentFlow, stages);
         }
         public void CreateDocumentKind(global::System.String name, global::System.String shortName, global::Sungero.Core.Enumeration numerationType, global::Sungero.Core.Enumeration direction, global::System.Boolean autoFormattedName, global::System.Boolean autoNumerable, global::System.Guid typeGuid, Domain.Shared.IActionInfo[] actions, global::System.Guid entityId)
         {
     global:: Sungero.Docflow.ModuleInitialization.Module.CreateDocumentKind(name, shortName, numerationType, direction, autoFormattedName, autoNumerable, typeGuid, actions, entityId);
         }
         public void CreateDocumentKind(global::System.String name, global::System.String shortName, global::Sungero.Core.Enumeration numerationType, global::Sungero.Core.Enumeration direction, global::System.Boolean autoFormattedName, global::System.Boolean autoNumerable, global::System.Guid typeGuid, Domain.Shared.IActionInfo[] actions, global::System.Guid entityId, global::System.Boolean isDefault)
         {
     global:: Sungero.Docflow.ModuleInitialization.Module.CreateDocumentKind(name, shortName, numerationType, direction, autoFormattedName, autoNumerable, typeGuid, actions, entityId, isDefault);
         }
         public void CreateDocumentKind(global::System.String name, global::System.String shortName, global::Sungero.Core.Enumeration numerationType, global::Sungero.Core.Enumeration direction, global::System.Boolean autoFormattedName, global::System.Boolean autoNumerable, global::System.Guid typeGuid, Domain.Shared.IActionInfo[] actions, global::System.Boolean projectAccounting, global::System.Boolean grantRightsToProject, global::System.Guid entityId, global::System.Boolean isDefault)
         {
     global:: Sungero.Docflow.ModuleInitialization.Module.CreateDocumentKind(name, shortName, numerationType, direction, autoFormattedName, autoNumerable, typeGuid, actions, projectAccounting, grantRightsToProject, entityId, isDefault);
         }
         public void CreateDocumentRegisterNumberTable()
         {
     global:: Sungero.Docflow.ModuleInitialization.Module.CreateDocumentRegisterNumberTable();
         }
         public void CreateDocumentSendAction(Domain.Shared.IActionInfo action, global::System.String name)
         {
     global:: Sungero.Docflow.ModuleInitialization.Module.CreateDocumentSendAction(action, name);
         }
         public void CreateDocumentType(global::System.String name, global::System.Guid documentTypeGuid, global::Sungero.Core.Enumeration direction, global::System.Boolean isRegistrationAllowed)
         {
     global:: Sungero.Docflow.ModuleInitialization.Module.CreateDocumentType(name, documentTypeGuid, direction, isRegistrationAllowed);
         }
         public void CreateFolderChangeAccessRights()
         {
     global:: Sungero.Docflow.ModuleInitialization.Module.CreateFolderChangeAccessRights();
         }
         public void CreateMailDeliveryMethod(global::System.String name, global::System.String sid)
         {
     global:: Sungero.Docflow.ModuleInitialization.Module.CreateMailDeliveryMethod(name, sid);
         }
         public global::Sungero.Docflow.IApprovalRule CreateMemoDefaultRule(global::System.String ruleName, global::System.Collections.Generic.List<global::Sungero.Core.Enumeration> stages)
         {
           return global:: Sungero.Docflow.ModuleInitialization.Module.CreateMemoDefaultRule(ruleName, stages);
         }
         public global::Sungero.Docflow.IDocumentRegister CreateNumerationDocumentRegister(global::System.String name, global::System.String index, global::Sungero.Core.Enumeration documentFlow, global::System.Guid entityId)
         {
           return global:: Sungero.Docflow.ModuleInitialization.Module.CreateNumerationDocumentRegister(name, index, documentFlow, entityId);
         }
         public void CreateNumerationSetting(global::System.Guid documentGuid, global::Sungero.Core.Enumeration documentFlow, global::Sungero.Docflow.IDocumentRegister documentRegister)
         {
     global:: Sungero.Docflow.ModuleInitialization.Module.CreateNumerationSetting(documentGuid, documentFlow, documentRegister);
         }
         public global::Sungero.CoreEntities.IRelationType CreateRelationType(global::System.String name, global::System.String sourceTitle, global::System.String targetTitle, global::System.String sourceDescription, global::System.String targetDescription, global::System.Boolean hasDirection, global::System.Boolean needRight, global::System.Boolean useSource, global::System.Boolean useTarget)
         {
           return global:: Sungero.Docflow.ModuleInitialization.Module.CreateRelationType(name, sourceTitle, targetTitle, sourceDescription, targetDescription, hasDirection, needRight, useSource, useTarget);
         }
         public global::Sungero.CoreEntities.IRole CreateRole(global::System.String roleName, global::System.String roleDescription, global::System.Guid roleGuid)
         {
           return global:: Sungero.Docflow.ModuleInitialization.Module.CreateRole(roleName, roleDescription, roleGuid);
         }
         public global::Sungero.Docflow.IConditionBase CreateRoleCompareSignatoryAndInitManagerCondition(global::Sungero.Docflow.IConditionBase condition)
         {
           return global:: Sungero.Docflow.ModuleInitialization.Module.CreateRoleCompareSignatoryAndInitManagerCondition(condition);
         }
         public global::Sungero.Docflow.IDocumentRegister CreateYearSectionDocumentRegister(global::System.String name, global::System.String index, global::System.Guid entityId)
         {
           return global:: Sungero.Docflow.ModuleInitialization.Module.CreateYearSectionDocumentRegister(name, index, entityId);
         }
         public void FillSmartProcessingRules()
         {
     global:: Sungero.Docflow.ModuleInitialization.Module.FillSmartProcessingRules();
         }
         public global::Sungero.CoreEntities.IRole GetCounterpartyResponsibleRole()
         {
           return global:: Sungero.Docflow.ModuleInitialization.Module.GetCounterpartyResponsibleRole();
         }
         public global::Sungero.CoreEntities.IRole GetProjectManagersRole()
         {
           return global:: Sungero.Docflow.ModuleInitialization.Module.GetProjectManagersRole();
         }
         public void SetRuleStages(global::Sungero.Docflow.IApprovalRuleBase rule, global::System.Collections.Generic.List<global::Sungero.Core.Enumeration> stages)
         {
     global:: Sungero.Docflow.ModuleInitialization.Module.SetRuleStages(rule, stages);
         }
  }
}


// ==================================================================
// ModuleWidgetHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
}

// ==================================================================
// ModuleQueries.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Queries
{
  public class Module
  {
    private static global::Sungero.Domain.SqlQueryResolver resolver = new global::Sungero.Domain.SqlQueryResolver("Sungero.Docflow.Server.ModuleQueries.xml", System.Reflection.Assembly.GetExecutingAssembly());
    public static string CreateAccessRightsType
    {
       get { return resolver.GetQuery("CreateAccessRightsType"); }
    }
    public static string CreateParametersTable
    {
       get { return resolver.GetQuery("CreateParametersTable"); }
    }
    public static string CreateSungeroDocregisterCurrentNumbersTable
    {
       get { return resolver.GetQuery("CreateSungeroDocregisterCurrentNumbersTable"); }
    }
    public static string DropProcedureSungeroDocRegisterGetNextNumber
    {
       get { return resolver.GetQuery("DropProcedureSungeroDocRegisterGetNextNumber"); }
    }
    public static string CreateProcedureSungeroDocRegisterGetNextNumber
    {
       get { return resolver.GetQuery("CreateProcedureSungeroDocRegisterGetNextNumber"); }
    }
    public static string CreateIndicesSungeroDocRegisterCurrentNumber
    {
       get { return resolver.GetQuery("CreateIndicesSungeroDocRegisterCurrentNumber"); }
    }
    public static string CreateIndexOnTable
    {
       get { return resolver.GetQuery("CreateIndexOnTable"); }
    }
    public static string SungeroWFAssignmentIndex0Query
    {
       get { return resolver.GetQuery("SungeroWFAssignmentIndex0Query"); }
    }
    public static string SungeroContentEDocIndex0Query
    {
       get { return resolver.GetQuery("SungeroContentEDocIndex0Query"); }
    }
    public static string SungeroContentEDocIndex1Query
    {
       get { return resolver.GetQuery("SungeroContentEDocIndex1Query"); }
    }
    public static string SungeroContentEDocIndex2Query
    {
       get { return resolver.GetQuery("SungeroContentEDocIndex2Query"); }
    }
    public static string DropTable
    {
       get { return resolver.GetQuery("DropTable"); }
    }
    public static string CreateTempTableForRights
    {
       get { return resolver.GetQuery("CreateTempTableForRights"); }
    }
    public static string InsertIntoTempTableForRights
    {
       get { return resolver.GetQuery("InsertIntoTempTableForRights"); }
    }
    public static string ReadLicense
    {
       get { return resolver.GetQuery("ReadLicense"); }
    }
    public static string DeleteLicense
    {
       get { return resolver.GetQuery("DeleteLicense"); }
    }
    public static string RestoreLicense
    {
       get { return resolver.GetQuery("RestoreLicense"); }
    }
    public static string DropProcedureSungeroDocRegisterSetCurrentNumber
    {
       get { return resolver.GetQuery("DropProcedureSungeroDocRegisterSetCurrentNumber"); }
    }
    public static string CreateProcedureSungeroDocRegisterSetCurrentNumber
    {
       get { return resolver.GetQuery("CreateProcedureSungeroDocRegisterSetCurrentNumber"); }
    }
    public static string InsertOrUpdateDocflowParamsValue
    {
       get { return resolver.GetQuery("InsertOrUpdateDocflowParamsValue"); }
    }
    public static string SelectDocflowParamsValue
    {
       get { return resolver.GetQuery("SelectDocflowParamsValue"); }
    }
    public static string DeleteReportData
    {
       get { return resolver.GetQuery("DeleteReportData"); }
    }
    public static string GetAllRecipientMembers
    {
       get { return resolver.GetQuery("GetAllRecipientMembers"); }
    }
    public static string SungeroContentEDocIndex3Query
    {
       get { return resolver.GetQuery("SungeroContentEDocIndex3Query"); }
    }
    public static string OneFieldIndexQuery
    {
       get { return resolver.GetQuery("OneFieldIndexQuery"); }
    }
    public static string SungeroContentEDocIndex4Query
    {
       get { return resolver.GetQuery("SungeroContentEDocIndex4Query"); }
    }
    public static string SungeroContentEDocIndex5Query
    {
       get { return resolver.GetQuery("SungeroContentEDocIndex5Query"); }
    }
    public static string SungeroWFTaskIndex1Query
    {
       get { return resolver.GetQuery("SungeroWFTaskIndex1Query"); }
    }
    public static string SungeroWFTaskIndex2Query
    {
       get { return resolver.GetQuery("SungeroWFTaskIndex2Query"); }
    }
    public static string SungeroContentEDocIndex6Query
    {
       get { return resolver.GetQuery("SungeroContentEDocIndex6Query"); }
    }
    public static string AddGrantRightsTypeToDocflowParams
    {
       get { return resolver.GetQuery("AddGrantRightsTypeToDocflowParams"); }
    }
    public static string SelectDocflowParamsValueByKey
    {
       get { return resolver.GetQuery("SelectDocflowParamsValueByKey"); }
    }
    public static string CreateTableForExpiringPowerOfAttorney
    {
       get { return resolver.GetQuery("CreateTableForExpiringPowerOfAttorney"); }
    }
    public static string SelectDocumentWithSendedTask
    {
       get { return resolver.GetQuery("SelectDocumentWithSendedTask"); }
    }
    public static string DeleteDocumentIdsWithoutTask
    {
       get { return resolver.GetQuery("DeleteDocumentIdsWithoutTask"); }
    }
    public static string AddExpiringDocumentsToTable
    {
       get { return resolver.GetQuery("AddExpiringDocumentsToTable"); }
    }
    public static string AddTaskExpiringDocumentTable
    {
       get { return resolver.GetQuery("AddTaskExpiringDocumentTable"); }
    }
    public static string CountNullExpiringTasks
    {
       get { return resolver.GetQuery("CountNullExpiringTasks"); }
    }
    public static string UpdateLastExpiringNotificationDate
    {
       get { return resolver.GetQuery("UpdateLastExpiringNotificationDate"); }
    }
    public static string ClearExpiringTableWithoutTasks
    {
       get { return resolver.GetQuery("ClearExpiringTableWithoutTasks"); }
    }
    public static string ClearExpiringTableWithTasks
    {
       get { return resolver.GetQuery("ClearExpiringTableWithTasks"); }
    }
    public static string CreateStoragePolicySettings
    {
       get { return resolver.GetQuery("CreateStoragePolicySettings"); }
    }
    public static string SelectDocumentsToTransfer
    {
       get { return resolver.GetQuery("SelectDocumentsToTransfer"); }
    }
    public static string SungeroContentEDocIndex7Query
    {
       get { return resolver.GetQuery("SungeroContentEDocIndex7Query"); }
    }
  }
}

// ==================================================================
// ModuleInitializer.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
  public partial class ModuleInitializer : global::Sungero.Domain.AppliedModuleInitializer
  {
  }
}

