
// ==================================================================
// FreeApprovalTask.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
    public class FreeApprovalTaskFilter<T> :
      global::Sungero.Workflow.Server.TaskFilter<T>
      where T : class, global::Sungero.Docflow.IFreeApprovalTask
    {
      protected new global::Sungero.Docflow.IFreeApprovalTaskFilterState Filter { get; private set; }

      private global::Sungero.Docflow.IFreeApprovalTaskFilterState filter
      {
        get
        {
          return this.Filter;
        }
      }

      protected override global::System.Linq.IQueryable<T> ApplyAppliedFilter(global::System.Linq.IQueryable<T> query)
      {
        return base.ApplyAppliedFilter(query);
      }

      public FreeApprovalTaskFilter(global::Sungero.Docflow.IFreeApprovalTaskFilterState filter)
      : base()
      {
        this.Filter = filter;
      }

      protected FreeApprovalTaskFilter()
      {
      }
    }
    public class FreeApprovalTaskSearchDialogModel : global::Sungero.Workflow.Server.TaskSearchDialogModel
        {
                  public override global::System.Int32? Id { get; protected set; }
                  public override global::System.String Subject { get; protected set; }


                  public override global::System.Collections.Generic.IEnumerable<Sungero.Core.Enumeration> Status { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<Sungero.Core.Enumeration> Importance { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<CommonLibrary.DateRangeValue> Started { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<CommonLibrary.DateRangeValue> MaxDeadline { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<Sungero.CoreEntities.IRecipient> Author { get; protected set; }




                   [Sungero.Domain.Shared.HideInDevStudio()]
                   public new FreeApprovalTaskObserversModel Observers { get { return (FreeApprovalTaskObserversModel)base.Observers; } protected set { base.Observers = value; } }
                   public FreeApprovalTaskApproversModel Approvers { get; protected set; }

        }

      public class FreeApprovalTaskObserversModel : global::Sungero.Workflow.Server.TaskObserversModel
          {
                      [Sungero.Domain.Shared.HideInDevStudio()]
                      public override global::System.Int32? Id { get; protected set; }




         }


      public class FreeApprovalTaskApproversModel : global::Sungero.Domain.CollectionPropertySearchDialogModel
          {
            public override global::System.Int32? Id { get; protected set; }


                      public virtual global::System.Collections.Generic.IEnumerable<global::Sungero.CoreEntities.IRecipient> Approver { get; protected set; }

         }




  [global::Sungero.Domain.Filter(typeof(global::Sungero.Docflow.Server.FreeApprovalTaskFilter<global::Sungero.Docflow.IFreeApprovalTask>))]

  public class FreeApprovalTask :
    global::Sungero.Workflow.Server.Task, global::Sungero.Docflow.IFreeApprovalTask, global::Sungero.Domain.Shared.ISecurableEntity, global::Sungero.Domain.IInternalSecurableEntity
  {
    public static new readonly global::System.Guid ClassTypeGuid = global::System.Guid.Parse("77f43035-9f23-4a19-9882-5a6a2cd5c9c7");

    public override global::System.Guid TypeGuid
    {
      get { return global::Sungero.Docflow.Server.FreeApprovalTask.ClassTypeGuid; }
    }

    public override string TypeName
    {
      get { return "Sungero.Docflow.IFreeApprovalTask, Sungero.Domain.Interfaces"; }
    }

    public override string DisplayValue
    {
      get { return this.Subject; }
      set { this.Subject = value; }
    }

    public new virtual global::Sungero.Docflow.IFreeApprovalTaskState State
    {
      get { return (global::Sungero.Docflow.IFreeApprovalTaskState)base.State; }
    }

    protected override global::Sungero.Domain.Shared.IEntityState CreateState()
    {
      return new global::Sungero.Docflow.Shared.FreeApprovalTaskState(this);
    }

    public new virtual global::Sungero.Docflow.IFreeApprovalTaskInfo Info
    {
      get { return (global::Sungero.Docflow.IFreeApprovalTaskInfo)base.Info; }
    }

    public new virtual global::Sungero.Docflow.IFreeApprovalTaskAccessRights AccessRights
    {
      get { return (global::Sungero.Docflow.IFreeApprovalTaskAccessRights)base.AccessRights; }
    }

    protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
    {
      return new global::Sungero.Docflow.Server.FreeApprovalTaskAccessRights(this);
    }

    protected override global::Sungero.Domain.EntityFunctions CreateServerFunctions()
    {
      return new global::Sungero.Docflow.Server.FreeApprovalTaskFunctions(this);
    }

    protected override global::Sungero.Domain.Shared.EntityFunctions CreateSharedFunctions()
    {
      return new global::Sungero.Docflow.Shared.FreeApprovalTaskFunctions(this);
    }

    protected override object CreateHandlers() {
      return new global::Sungero.Docflow.FreeApprovalTaskServerHandlers(this);
    }

    protected override object CreateSharedHandlers() {
      return new global::Sungero.Docflow.FreeApprovalTaskSharedHandlers(this);
    }

    private global::System.Boolean? _ReceiveNotice;
    public virtual global::System.Boolean? ReceiveNotice
    {
      get
      {
        return this._ReceiveNotice;
      }

      set
      {
        this.SetPropertyValue("ReceiveNotice", this._ReceiveNotice, value, (propertyValue) => { this._ReceiveNotice = propertyValue; }, this.ReceiveNoticeChangedHandler);
      }
    }






    private static global::Sungero.Domain.Shared.EnumerationItems _ReceiveOnCompletionItems = new global::Sungero.Domain.Shared.EnumerationItems(
      null,
      typeof(global::Sungero.Docflow.FreeApprovalTask.ReceiveOnCompletion),
      typeof(global::Sungero.Docflow.Server.FreeApprovalTask),
      "ReceiveOnCompletion");

    public static global::Sungero.Domain.Shared.EnumerationItems ReceiveOnCompletionItems
    {
      get { return global::Sungero.Docflow.Server.FreeApprovalTask._ReceiveOnCompletionItems; }
    }

    public virtual global::Sungero.Domain.Shared.EnumerationItems ReceiveOnCompletionAllowedItems
    {
      get { return global::Sungero.Docflow.Server.FreeApprovalTask.ReceiveOnCompletionItems; }
    }

    private global::Sungero.Core.Enumeration? _ReceiveOnCompletion;

    public virtual global::Sungero.Core.Enumeration? ReceiveOnCompletion
    {
      get { return this._ReceiveOnCompletion; }
      set { this.SetEnumPropertyValue("ReceiveOnCompletion", this._ReceiveOnCompletion, value, (propertyValue) => { this._ReceiveOnCompletion = propertyValue; }, this.ReceiveOnCompletionChangedHandler, this.ReceiveOnCompletionAllowedItems); }
    }



    protected global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Docflow.IFreeApprovalTaskApprovers> _Approvers;

    public virtual global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Docflow.IFreeApprovalTaskApprovers> Approvers
    {
      get
      {
        if (this._Approvers == null)
        {
          this._Approvers = this.CreateApproversCollection();
          this.SetApproversEventHandlers();
        }
        return this._Approvers;
      }

      set
      {
        if (this._Approvers != null)
          this.UnsetChildCollectionEventHandlers(this._Approvers);

        this._Approvers = value;
        this.SetApproversEventHandlers();
      }
    }

    protected virtual global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Docflow.IFreeApprovalTaskApprovers> CreateApproversCollection()
    {
      return new global::Sungero.Domain.ChildEntityCollection<global::Sungero.Docflow.IFreeApprovalTaskApprovers>() { RootEntity = this };
    }

    private void SetApproversEventHandlers()
    {
      this.SetChildCollectionEventHandlers(this._Approvers, "Approvers");

      var changeNotifier = (global::Sungero.Domain.Shared.INotifyChildEntityCollectionChanged)this._Approvers;
      changeNotifier.Added += this.ApproversAddedHandler;
      changeNotifier.Deleted += this.ApproversDeletedHandler;
      changeNotifier.Added += this.ApproversCollectionUpdateEventHandler;
      changeNotifier.Deleted += this.ApproversCollectionUpdateEventHandler;
      changeNotifier.Updated += this.ApproversCollectionUpdateEventHandler;
    }

    private void ApproversCollectionUpdateEventHandler(object sender, global::Sungero.Domain.Shared.BaseChildEntityEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      if (this.IsPropertyChangedHandlerEnabled)
        this.ApproversChangedHandler();
    }


    protected override global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Workflow.ITaskObservers> CreateObserversCollection()
    {
      return new global::Sungero.Domain.ChildEntityCollection<global::Sungero.Docflow.IFreeApprovalTaskObservers>() { RootEntity = this };
    }


    protected override global::Sungero.Domain.Shared.EntityCreatingFromServerHandler CreateCreatingFromServerHandler(
      global::Sungero.Domain.Shared.IEntity entitySource)
    {
      return new global::Sungero.Docflow.FreeApprovalTaskCreatingFromServerHandler((global::Sungero.Docflow.IFreeApprovalTask)entitySource, this.Info);
    }

    #region Framework events

    protected void ReceiveNoticeChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.BooleanPropertyChangedEventArgs(this.State.Properties.ReceiveNotice, this.ReceiveNotice, this);
     ((global::Sungero.Docflow.FreeApprovalTaskSharedHandlers)this.SharedHandlers).ReceiveNoticeChanged(args);
    }

    protected void ReceiveOnCompletionChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.EnumerationPropertyChangedEventArgs(this.State.Properties.ReceiveOnCompletion, this.ReceiveOnCompletion, this);
     ((global::Sungero.Docflow.FreeApprovalTaskSharedHandlers)this.SharedHandlers).ReceiveOnCompletionChanged(args);
    }

    protected void ApproversChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.CollectionPropertyChangedEventArgs(this);
     ((global::Sungero.Docflow.FreeApprovalTaskSharedHandlers)this.SharedHandlers).ApproversChanged(args);
    }




    protected virtual global::Sungero.Docflow.FreeApprovalTaskApproversSharedCollectionHandlers CreateApproversAddedHandler(global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.Docflow.FreeApprovalTaskApproversSharedCollectionHandlers(this, e.Value, null, e.Source);
    }

    protected virtual global::Sungero.Docflow.FreeApprovalTaskApproversSharedCollectionHandlers CreateApproversDeletedHandler(global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.Docflow.FreeApprovalTaskApproversSharedCollectionHandlers(this, null, e.Value, null);
    }

    protected virtual void ApproversAddedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {  
      var collectionHandlers = this.CreateApproversAddedHandler(e);
      if (collectionHandlers != null)
      {
        var args = new global::Sungero.Domain.Shared.CollectionPropertyAddedEventArgs(this);
        collectionHandlers.ApproversAdded(args);
      }
    }

    protected virtual void ApproversDeletedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {  
      var collectionHandlers = this.CreateApproversDeletedHandler(e);
      if (collectionHandlers != null)
      {
        var args = new global::Sungero.Domain.Shared.CollectionPropertyDeletedEventArgs(this);
        collectionHandlers.ApproversDeleted(args);
      }
    }


    #endregion


    public FreeApprovalTask()
    {
      ((global::Sungero.Workflow.Interfaces.IWorkflowEntity)this).AttachmentCreated += this.AttachmentCreatedHandler;
      ((global::Sungero.Workflow.Interfaces.IWorkflowEntity)this).AttachmentAdded += this.AttachmentAddedHandler;
      ((global::Sungero.Workflow.Interfaces.IWorkflowEntity)this).AttachmentDeleted += this.AttachmentDeletedHandler;


    }

    #region Workflow attachments
    public virtual global::Sungero.Docflow.IFreeApprovalTaskForApprovalGroupAttachments ForApprovalGroup
    {
      get
      {
        return new global::Sungero.Docflow.Shared.FreeApprovalTaskForApprovalGroupAttachments(this);
      }
    }
    public virtual global::Sungero.Docflow.IFreeApprovalTaskAddendaGroupAttachments AddendaGroup
    {
      get
      {
        return new global::Sungero.Docflow.Shared.FreeApprovalTaskAddendaGroupAttachments(this);
      }
    }
    public virtual global::Sungero.Docflow.IFreeApprovalTaskOtherGroupAttachments OtherGroup
    {
      get
      {
        return new global::Sungero.Docflow.Shared.FreeApprovalTaskOtherGroupAttachments(this);
      }
    }


    private void AttachmentCreatedHandler(object sender, global::Sungero.Workflow.Interfaces.AttachmentCreatedEventArgs e)
    {
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "ForApprovalGroup")
      {
        ((global::Sungero.Docflow.FreeApprovalTaskSharedHandlers)this.SharedHandlers).ForApprovalGroupCreated(e);
        return;
      }
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "AddendaGroup")
      {
        ((global::Sungero.Docflow.FreeApprovalTaskSharedHandlers)this.SharedHandlers).AddendaGroupCreated(e);
        return;
      }
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "OtherGroup")
      {
        ((global::Sungero.Docflow.FreeApprovalTaskSharedHandlers)this.SharedHandlers).OtherGroupCreated(e);
        return;
      }

    }

    private void AttachmentAddedHandler(object sender, global::Sungero.Workflow.Interfaces.AttachmentAddedEventArgs e)
    {
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "ForApprovalGroup")
      {
        ((global::Sungero.Docflow.FreeApprovalTaskSharedHandlers)this.SharedHandlers).ForApprovalGroupAdded(e);
        return;
      }
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "AddendaGroup")
      {
        ((global::Sungero.Docflow.FreeApprovalTaskSharedHandlers)this.SharedHandlers).AddendaGroupAdded(e);
        return;
      }
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "OtherGroup")
      {
        ((global::Sungero.Docflow.FreeApprovalTaskSharedHandlers)this.SharedHandlers).OtherGroupAdded(e);
        return;
      }

    }

    private void AttachmentDeletedHandler(object sender, global::Sungero.Workflow.Interfaces.AttachmentDeletedEventArgs e)
    {
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "ForApprovalGroup")
      {
        ((global::Sungero.Docflow.FreeApprovalTaskSharedHandlers)this.SharedHandlers).ForApprovalGroupDeleted(e);
        return;
      }
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "AddendaGroup")
      {
        ((global::Sungero.Docflow.FreeApprovalTaskSharedHandlers)this.SharedHandlers).AddendaGroupDeleted(e);
        return;
      }
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "OtherGroup")
      {
        ((global::Sungero.Docflow.FreeApprovalTaskSharedHandlers)this.SharedHandlers).OtherGroupDeleted(e);
        return;
      }

    }
    #endregion

  }
}

// ==================================================================
// FreeApprovalTaskHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow
{

  public partial class FreeApprovalTaskFilteringServerHandler<T>
    : global::Sungero.Domain.EntityFilteringServerHandler<T>  
    where T : class, global::Sungero.Docflow.IFreeApprovalTask
  {
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    protected new global::Sungero.Docflow.IFreeApprovalTaskFilterState Filter { get; private set; }

    private global::Sungero.Docflow.IFreeApprovalTaskFilterState _filter
    {
      get
      {
        return this.Filter;
      }
    }

    public FreeApprovalTaskFilteringServerHandler(global::Sungero.Docflow.IFreeApprovalTaskFilterState filter)
    : base()
    {
      this.Filter = filter;
    }

    protected FreeApprovalTaskFilteringServerHandler()
    {
    }

    public override global::System.Linq.IQueryable<T> Filtering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.FilteringEventArgs e)
    {
      return query;
    }


  }

  public partial class FreeApprovalTaskSearchDialogServerHandler : global::Sungero.Workflow.TaskSearchDialogServerHandler
   {
     private global::Sungero.Docflow.Server.FreeApprovalTaskSearchDialogModel _dialog
     {
       get
       {
         return (global::Sungero.Docflow.Server.FreeApprovalTaskSearchDialogModel)this.Dialog;
       }
     }

     public FreeApprovalTaskSearchDialogServerHandler(global::Sungero.Docflow.Server.FreeApprovalTaskSearchDialogModel dialog)
       : base(dialog)
     {
     }
   }

  public partial class FreeApprovalTaskServerHandlers : global::Sungero.Workflow.TaskServerHandlers
  {
    private global::Sungero.Docflow.IFreeApprovalTask _obj
    {
      get { return (global::Sungero.Docflow.IFreeApprovalTask)this.Entity; }
    }

    public FreeApprovalTaskServerHandlers(global::Sungero.Docflow.IFreeApprovalTask entity)
      : base(entity)
    {
    }
  }

  public partial class FreeApprovalTaskCreatingFromServerHandler : global::Sungero.Workflow.TaskCreatingFromServerHandler
  {
    private global::Sungero.Docflow.IFreeApprovalTask _source
    {
      get { return (global::Sungero.Docflow.IFreeApprovalTask)this.Source; }
    }

    private global::Sungero.Docflow.IFreeApprovalTaskInfo _info
    {
      get { return (global::Sungero.Docflow.IFreeApprovalTaskInfo)this._Info; }
    }

    public FreeApprovalTaskCreatingFromServerHandler(global::Sungero.Docflow.IFreeApprovalTask source, global::Sungero.Docflow.IFreeApprovalTaskInfo info)
      : base(source, info)
    {
    }
  }

}

// ==================================================================
// FreeApprovalTaskEventArgs.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
}

// ==================================================================
// FreeApprovalTaskAccessRights.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
  public class FreeApprovalTaskAccessRights : 
    Sungero.Workflow.Server.TaskAccessRights, Sungero.Docflow.IFreeApprovalTaskAccessRights
  {

    public FreeApprovalTaskAccessRights(global::Sungero.Domain.Shared.IEntity entity) : base(entity)
    {
    }
  }

  public class FreeApprovalTaskTypeAccessRights : 
    Sungero.Workflow.Server.TaskTypeAccessRights, Sungero.Docflow.IFreeApprovalTaskAccessRights
  {

    public FreeApprovalTaskTypeAccessRights(global::System.Type entityType) : base(entityType)
    {
    }
  }
}

// ==================================================================
// FreeApprovalTaskRepositoryImplementer.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
    public class FreeApprovalTaskRepositoryImplementer<T> : 
      global::Sungero.Workflow.Server.TaskRepositoryImplementer<T>,
      global::Sungero.Docflow.IFreeApprovalTaskRepositoryImplementer<T>
      where T : global::Sungero.Docflow.IFreeApprovalTask 
    {
       public new global::Sungero.Docflow.IFreeApprovalTaskAccessRights AccessRights
       {
          get { return (global::Sungero.Docflow.IFreeApprovalTaskAccessRights)base.AccessRights; }
       }

       public new global::Sungero.Docflow.IFreeApprovalTaskInfo Info
       {
          get { return (global::Sungero.Docflow.IFreeApprovalTaskInfo)base.Info; }
       }

       protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
       {
         return new global::Sungero.Docflow.Server.FreeApprovalTaskTypeAccessRights(typeof(T));
       }
    }
}

// ==================================================================
// FreeApprovalTaskPanelNavigationFilters.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
}

// ==================================================================
// FreeApprovalTaskServerFunctions.g.cs
// ==================================================================

namespace Sungero.Docflow.Server
{
  public partial class FreeApprovalTaskFunctions : global::Sungero.Workflow.Server.TaskFunctions
  {
    private global::Sungero.Docflow.IFreeApprovalTask _obj
    {
      get { return (global::Sungero.Docflow.IFreeApprovalTask)this.Entity; }
    }

    public FreeApprovalTaskFunctions(global::Sungero.Docflow.IFreeApprovalTask entity) : base(entity) { }
  }
}

// ==================================================================
// FreeApprovalTaskFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Functions
{
  internal static class FreeApprovalTask
  {
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.FreeApprovalTaskFunctions" />
    internal static  global::Sungero.Core.StateView GetStateView(global::Sungero.Docflow.IFreeApprovalTask freeApprovalTask, global::Sungero.Content.IElectronicDocument document)
    {
      var functions = (global::Sungero.Docflow.Server.FreeApprovalTaskFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)freeApprovalTask).FunctionsContainer.ServerFunctions;
      return functions.GetStateView(document);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.FreeApprovalTaskFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static  global::Sungero.Core.StateView GetStateView(global::Sungero.Docflow.IFreeApprovalTask freeApprovalTask)
    {
      var functions = (global::Sungero.Docflow.Server.FreeApprovalTaskFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)freeApprovalTask).FunctionsContainer.ServerFunctions;
      return functions.GetStateView();
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.FreeApprovalTaskFunctions" />
    internal static  Sungero.Core.StateBlock AddTaskBlock(global::Sungero.Docflow.IFreeApprovalTask freeApprovalTask, global::Sungero.Core.StateView stateView)
    {
      var functions = (global::Sungero.Docflow.Server.FreeApprovalTaskFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)freeApprovalTask).FunctionsContainer.ServerFunctions;
      return functions.AddTaskBlock(stateView);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.FreeApprovalTaskFunctions" />
    internal static  void AddSendForApprovalBlock(global::Sungero.Docflow.IFreeApprovalTask freeApprovalTask, Sungero.Core.StateBlock parentBlock, global::Sungero.Workflow.IAssignment assignment, global::System.Boolean hasReworkBefore, global::System.Boolean hasRestartBefore)
    {
      var functions = (global::Sungero.Docflow.Server.FreeApprovalTaskFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)freeApprovalTask).FunctionsContainer.ServerFunctions;
    functions.AddSendForApprovalBlock(parentBlock, assignment, hasReworkBefore, hasRestartBefore);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.FreeApprovalTaskFunctions" />
    internal static  void AddAssignmentsBlocks(global::Sungero.Docflow.IFreeApprovalTask freeApprovalTask, Sungero.Core.StateBlock parentBlock, Sungero.Core.StateBlock taskBlock, global::System.Collections.Generic.List<global::Sungero.Workflow.IAssignment> assignments)
    {
      var functions = (global::Sungero.Docflow.Server.FreeApprovalTaskFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)freeApprovalTask).FunctionsContainer.ServerFunctions;
    functions.AddAssignmentsBlocks(parentBlock, taskBlock, assignments);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.FreeApprovalTaskFunctions" />
    internal static  void SetIcon(global::Sungero.Docflow.IFreeApprovalTask freeApprovalTask, Sungero.Core.StateBlock block, global::Sungero.Workflow.IAssignment assignment)
    {
      var functions = (global::Sungero.Docflow.Server.FreeApprovalTaskFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)freeApprovalTask).FunctionsContainer.ServerFunctions;
    functions.SetIcon(block, assignment);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.FreeApprovalTaskFunctions" />
    internal static  void AddStatusInfoToRight(global::Sungero.Docflow.IFreeApprovalTask freeApprovalTask, Sungero.Core.StateBlock block, Sungero.Core.StateBlockLabelStyle style)
    {
      var functions = (global::Sungero.Docflow.Server.FreeApprovalTaskFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)freeApprovalTask).FunctionsContainer.ServerFunctions;
    functions.AddStatusInfoToRight(block, style);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.FreeApprovalTaskFunctions" />
    internal static  global::Sungero.Docflow.Structures.FreeApprovalTask.AssignmentInfo GetPerformerAndDeadlineAndStatus(global::Sungero.Docflow.IFreeApprovalTask freeApprovalTask, global::Sungero.Workflow.IAssignment assignment)
    {
      var functions = (global::Sungero.Docflow.Server.FreeApprovalTaskFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)freeApprovalTask).FunctionsContainer.ServerFunctions;
      return functions.GetPerformerAndDeadlineAndStatus(assignment);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.FreeApprovalTaskFunctions" />
    internal static  global::System.Collections.Generic.List<global::Sungero.CoreEntities.IRecipient> GetUsersFromGroups(global::Sungero.CoreEntities.IRecipient recipient)
    {
      return global::Sungero.Docflow.Server.FreeApprovalTaskFunctions.GetUsersFromGroups(recipient);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.FreeApprovalTaskFunctions" />
    internal static  global::System.Nullable<global::System.Int32> GetApprovalAssignmentLastIterationId(global::Sungero.Docflow.IFreeApprovalTask task)
    {
      return global::Sungero.Docflow.Server.FreeApprovalTaskFunctions.GetApprovalAssignmentLastIterationId(task);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.FreeApprovalTaskFunctions" />
    internal static  global::System.Collections.Generic.List<global::Sungero.Docflow.IFreeApprovalAssignment> GetLastAssignmentWithoutNotice(global::Sungero.Docflow.IFreeApprovalTask task, global::System.Nullable<global::System.Int32> lastIterationId)
    {
      return global::Sungero.Docflow.Server.FreeApprovalTaskFunctions.GetLastAssignmentWithoutNotice(task, lastIterationId);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.FreeApprovalTaskFunctions" />
    internal static  void GrantRightForAttachmentsToPerformers(global::Sungero.Docflow.IFreeApprovalTask task, global::System.Collections.Generic.List<global::Sungero.CoreEntities.IRecipient> performers)
    {
    global::Sungero.Docflow.Server.FreeApprovalTaskFunctions.GrantRightForAttachmentsToPerformers(task, performers);
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.FreeApprovalTaskFunctions" />
    internal static  global::System.Collections.Generic.List<global::Sungero.CoreEntities.IRecipient> GetTaskAdditionalAssignees(global::Sungero.Docflow.IFreeApprovalTask freeApprovalTask)
    {
      var functions = (global::Sungero.Docflow.Server.FreeApprovalTaskFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)freeApprovalTask).FunctionsContainer.ServerFunctions;
      return functions.GetTaskAdditionalAssignees();
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.FreeApprovalTaskFunctions" />
    internal static  void SynchronizeAddendaAndAttachmentsGroup(global::Sungero.Docflow.IFreeApprovalTask freeApprovalTask)
    {
      var functions = (global::Sungero.Docflow.Server.FreeApprovalTaskFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)freeApprovalTask).FunctionsContainer.ServerFunctions;
    functions.SynchronizeAddendaAndAttachmentsGroup();
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.FreeApprovalTaskFunctions" />
    internal static  void AddToReworkAssigneeNewApprover(Sungero.Docflow.Server.FreeApprovalReworkAssignmentArguments e, global::Sungero.Docflow.IFreeApprovalAssignment assignment)
    {
    global::Sungero.Docflow.Server.FreeApprovalTaskFunctions.AddToReworkAssigneeNewApprover(e, assignment);
    }

    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.FreeApprovalTaskFunctions" />
    internal static  global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.FreeApprovalTask.StartValidationMessage> GetStartValidationMessages(global::Sungero.Docflow.IFreeApprovalTask freeApprovalTask)
    {
      var functions = (global::Sungero.Docflow.Shared.FreeApprovalTaskFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)freeApprovalTask).FunctionsContainer.SharedFunctions;
      return functions.GetStartValidationMessages();
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.FreeApprovalTaskFunctions" />
    internal static  global::System.Boolean ValidateFreeApprovalTaskStart(global::Sungero.Docflow.IFreeApprovalTask freeApprovalTask, Sungero.Core.IValidationArgs e)
    {
      var functions = (global::Sungero.Docflow.Shared.FreeApprovalTaskFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)freeApprovalTask).FunctionsContainer.SharedFunctions;
      return functions.ValidateFreeApprovalTaskStart(e);
    }

  }
}

// ==================================================================
// FreeApprovalTaskServerPublicFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
  public class FreeApprovalTaskServerPublicFunctions : global::Sungero.Docflow.Server.IFreeApprovalTaskServerPublicFunctions
  {
  }
}

// ==================================================================
// FreeApprovalTaskQueries.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Queries
{
  public class FreeApprovalTask
  {
    private static global::Sungero.Domain.SqlQueryResolver resolver = new global::Sungero.Domain.SqlQueryResolver("Sungero.Docflow.Server.FreeApprovalTask.FreeApprovalTaskQueries.xml", System.Reflection.Assembly.GetExecutingAssembly());
  }
}

// ==================================================================
// FreeApprovalTaskBlock.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
  public class FreeApprovalTaskArguments: global::Sungero.Workflow.Server.Route.TaskStartEventArguments<FreeApprovalTaskBlock, global::Sungero.Workflow.TaskBlock>
  {
    public FreeApprovalTaskArguments(FreeApprovalTaskBlock block) : base(block) { }
  }

  public class FreeApprovalTaskEndBlockEventArguments: global::Sungero.Workflow.Server.Route.TaskEndBlockEventArguments<FreeApprovalTaskBlock, global::Sungero.Workflow.TaskBlock, Sungero.Docflow.IFreeApprovalTask> 
  {
    public FreeApprovalTaskEndBlockEventArguments(FreeApprovalTaskBlock block) : base(block) { }
  }

  public partial class FreeApprovalTaskBlock : global::Sungero.Workflow.Blocks.TaskBlockWrapper<global::Sungero.Workflow.TaskBlock>    
  {
    public virtual global::System.Boolean? ReceiveNotice
    {
      get { return this.GetCustomProperty<global::System.Boolean?>("ReceiveNotice"); }
      set { this.SetCustomProperty("ReceiveNotice", value); }
    }
    public virtual global::Sungero.Core.Enumeration? ReceiveOnCompletion
    {
      get { return this.GetCustomEnumProperty("ReceiveOnCompletion"); }
      set { this.SetCustomEnumProperty("ReceiveOnCompletion", value); }
    }


    private global::Sungero.Workflow.Blocks.IChildCollectionWrapper<global::Sungero.Docflow.Server.FreeApprovalTaskApproversWrapper> _Approvers;

	protected virtual global::Sungero.Workflow.Blocks.IChildCollectionWrapper<global::Sungero.Docflow.Server.FreeApprovalTaskApproversWrapper> GetFreeApprovalTaskApproversCollectionWrapper(global::System.Collections.ObjectModel.Collection<global::System.Collections.ObjectModel.Collection<global::Sungero.Workflow.CustomTypeProperty>> items)
	{
	  return new global::Sungero.Docflow.Server.FreeApprovalTaskApproversCollectionWrapper(items);
	}

    public virtual global::Sungero.Workflow.Blocks.IChildCollectionWrapper<global::Sungero.Docflow.Server.FreeApprovalTaskApproversWrapper> Approvers
    {
      get 
      {
        if(this._Approvers == null)
        {
          var items = this.GetCustomCollectionPropertyInternalValue("Approvers"); 
          this._Approvers = this.GetFreeApprovalTaskApproversCollectionWrapper(items);
        }

        return this._Approvers;
      }
    }



    public FreeApprovalTaskBlock(global::Sungero.Workflow.TaskBlock block) : base(block) { }
  }
}

// ==================================================================
// FreeApprovalTaskChildWrappers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
  public class FreeApprovalTaskApproversCollectionWrapper :
       global::Sungero.Workflow.Blocks.ChildCollectionWrapper<FreeApprovalTaskApproversWrapper>
  {
    protected override FreeApprovalTaskApproversWrapper CreateWrapper(global::System.Collections.ObjectModel.Collection<global::Sungero.Workflow.CustomTypeProperty> value)
    {
      return new FreeApprovalTaskApproversWrapper(value);
    }

    public FreeApprovalTaskApproversCollectionWrapper(global::System.Collections.ObjectModel.Collection<global::System.Collections.ObjectModel.Collection<global::Sungero.Workflow.CustomTypeProperty>> items) : base(items) { }
  }

  public class FreeApprovalTaskApproversWrapper: 
        global::Sungero.Workflow.Blocks.ChildEntityWrapper
  {

    public virtual global::Sungero.CoreEntities.IRecipient Approver
    {
      get { return this.GetCustomNavigationProperty<global::Sungero.CoreEntities.IRecipient>("Approver"); }
      set { this.SetCustomNavigationProperty("Approver", value); }
    }

    public FreeApprovalTaskApproversWrapper(global::System.Collections.ObjectModel.Collection<global::Sungero.Workflow.CustomTypeProperty> properties): base(properties) { }
  }

}

// ==================================================================
// FreeApprovalTaskRouteHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
  public partial class FreeApprovalTaskRouteHandlers{
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    protected global::Sungero.Workflow.ITask Task { get; private set; }

    private global::Sungero.Docflow.IFreeApprovalTask _obj
    {
      get { return (global::Sungero.Docflow.IFreeApprovalTask)this.Task; }
    }


    protected readonly int _schemeVersion;

    public FreeApprovalTaskRouteHandlers(global::Sungero.Docflow.IFreeApprovalTask task, int schemeVersion) 
    {
      this.Task = task;
      this._schemeVersion = schemeVersion;
    }


    [global::System.ObsoleteAttribute("Используйте ExtendedSchemeVersions")]
    private static class SchemeVersions
    {
      public static readonly int V1 = 1;
      public static readonly int V2 = 2;
      public static readonly int V3 = 3;
}

    }
}
