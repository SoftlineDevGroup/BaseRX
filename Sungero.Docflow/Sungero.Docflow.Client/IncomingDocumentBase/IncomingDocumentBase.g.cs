
// ==================================================================
// IncomingDocumentBase.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Client
{
  public class IncomingDocumentBase :
    global::Sungero.Docflow.Client.OfficialDocument, global::Sungero.Docflow.IIncomingDocumentBase
  {
    #region Fields and properties

    public static new readonly global::System.Guid ClassTypeGuid = global::System.Guid.Parse("4e7bf176-40b2-4e5d-b10b-af81ad7c62c3");

    public override global::System.Guid TypeGuid
    {
      get { return global::Sungero.Docflow.Client.IncomingDocumentBase.ClassTypeGuid; }
    }

    public override string TypeName
    {
      get { return "Sungero.Docflow.IIncomingDocumentBase, Sungero.Domain.Interfaces"; }
    }

      public override string DisplayValue
      {
        get { return this.Name; }
        set { this.Name = value; }
      }

      public override string DisplayPropertyName
      {
        get { return "Name"; }
      }


    public new global::Sungero.Docflow.IIncomingDocumentBaseState State
    {
      get
      {
        return (global::Sungero.Docflow.IIncomingDocumentBaseState)base.State;
      }
    }

    protected override global::Sungero.Domain.Shared.IEntityState CreateState()
    {
      return new global::Sungero.Docflow.Shared.IncomingDocumentBaseState(this);
    }

    public new global::Sungero.Docflow.IIncomingDocumentBaseInfo Info
    {
      get
      {
        return (global::Sungero.Docflow.IIncomingDocumentBaseInfo)base.Info;
      }
    }

    public new global::Sungero.Docflow.IIncomingDocumentBaseAccessRights AccessRights
    {
      get
      {
        return (global::Sungero.Docflow.IIncomingDocumentBaseAccessRights)base.AccessRights;
      }
    }

    protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
    {
      return new global::Sungero.Docflow.Client.IncomingDocumentBaseAccessRights(this);
    }

        protected global::Sungero.Domain.Client.SimpleProperty<global::System.DateTime?> _Dated;

        public virtual global::System.DateTime? Dated
        {
          get { return this._Dated.Value; }
          set { this._Dated.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.String> _InNumber;

        public virtual global::System.String InNumber
        {
          get { return this._InNumber.Value; }
          set { this._InNumber.Value = value; }
        }




              protected global::Sungero.Domain.Client.INavigationProperty<global::Sungero.Parties.ICounterparty> _Correspondent;

              public virtual global::Sungero.Parties.ICounterparty Correspondent
              {
              get
              {
                return this._Correspondent.Value as global::Sungero.Parties.ICounterparty;
              }

              set
              {
                (this._Correspondent as global::Sungero.Domain.Client.IProperty).Value = value;
              }
            }



              protected global::Sungero.Domain.Client.INavigationProperty<global::Sungero.Docflow.IOutgoingDocumentBase> _InResponseTo;

              public virtual global::Sungero.Docflow.IOutgoingDocumentBase InResponseTo
              {
              get
              {
                return this._InResponseTo.Value as global::Sungero.Docflow.IOutgoingDocumentBase;
              }

              set
              {
                (this._InResponseTo as global::Sungero.Domain.Client.IProperty).Value = value;
              }
            }



              protected global::Sungero.Domain.Client.INavigationProperty<global::Sungero.Company.IEmployee> _Addressee;

              public virtual global::Sungero.Company.IEmployee Addressee
              {
              get
              {
                return this._Addressee.Value as global::Sungero.Company.IEmployee;
              }

              set
              {
                (this._Addressee as global::Sungero.Domain.Client.IProperty).Value = value;
              }
            }










    #endregion

    #region Methods


    protected override global::Sungero.Domain.Client.EntityFunctions CreateClientFunctions()
    {
      return new global::Sungero.Docflow.Client.IncomingDocumentBaseFunctions(this);
    }

    protected override global::Sungero.Domain.Shared.EntityFunctions CreateSharedFunctions()
    {
      return new global::Sungero.Docflow.Shared.IncomingDocumentBaseFunctions(this);
    }
    protected override object CreateHandlers() {
      return new global::Sungero.Docflow.IncomingDocumentBaseClientHandlers(this);
    }
    protected override object CreateSharedHandlers() {
      return new global::Sungero.Docflow.IncomingDocumentBaseSharedHandlers(this);
    }

    #endregion

    #region Framework events

    protected void CorrespondentChangedHandler()
    {
      var args = new global::Sungero.Docflow.Shared.IncomingDocumentBaseCorrespondentChangedEventArgs(this.State.Properties.Correspondent, this.Correspondent, this);
     ((global::Sungero.Docflow.IncomingDocumentBaseSharedHandlers)this.SharedHandlers).CorrespondentChanged(args);
    }

    protected void InResponseToChangedHandler()
    {
      var args = new global::Sungero.Docflow.Shared.IncomingDocumentBaseInResponseToChangedEventArgs(this.State.Properties.InResponseTo, this.InResponseTo, this);
     ((global::Sungero.Docflow.IncomingDocumentBaseSharedHandlers)this.SharedHandlers).InResponseToChanged(args);
    }

    protected void DatedChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.DateTimePropertyChangedEventArgs(this.State.Properties.Dated, this.Dated, this);
     ((global::Sungero.Docflow.IncomingDocumentBaseSharedHandlers)this.SharedHandlers).DatedChanged(args);
    }

    protected void AddresseeChangedHandler()
    {
      var args = new global::Sungero.Docflow.Shared.IncomingDocumentBaseAddresseeChangedEventArgs(this.State.Properties.Addressee, this.Addressee, this);
     ((global::Sungero.Docflow.IncomingDocumentBaseSharedHandlers)this.SharedHandlers).AddresseeChanged(args);
    }

    protected void InNumberChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.InNumber, this.InNumber, this);
     ((global::Sungero.Docflow.IncomingDocumentBaseSharedHandlers)this.SharedHandlers).InNumberChanged(args);
    }







  protected global::Sungero.Parties.ICounterparty CorrespondentValueInputHandler(global::Sungero.Parties.ICounterparty value)
  {
    var args = new global::Sungero.Docflow.Client.IncomingDocumentBaseCorrespondentValueInputEventArgs(this.Correspondent, value, this, this.Info.Properties.Correspondent);
    ((global::Sungero.Docflow.IncomingDocumentBaseClientHandlers)this.Handlers).CorrespondentValueInput(args);
    return args.NewValue;
  }

  protected global::Sungero.Docflow.IOutgoingDocumentBase InResponseToValueInputHandler(global::Sungero.Docflow.IOutgoingDocumentBase value)
  {
    var args = new global::Sungero.Docflow.Client.IncomingDocumentBaseInResponseToValueInputEventArgs(this.InResponseTo, value, this, this.Info.Properties.InResponseTo);
    ((global::Sungero.Docflow.IncomingDocumentBaseClientHandlers)this.Handlers).InResponseToValueInput(args);
    return args.NewValue;
  }

  protected global::System.DateTime? DatedValueInputHandler(global::System.DateTime? value)
  {
    var args = new global::Sungero.Presentation.DateTimeValueInputEventArgs(this.Dated, value, this, this.Info.Properties.Dated);
    ((global::Sungero.Docflow.IncomingDocumentBaseClientHandlers)this.Handlers).DatedValueInput(args);
    return args.NewValue;
  }

  protected global::Sungero.Company.IEmployee AddresseeValueInputHandler(global::Sungero.Company.IEmployee value)
  {
    var args = new global::Sungero.Docflow.Client.IncomingDocumentBaseAddresseeValueInputEventArgs(this.Addressee, value, this, this.Info.Properties.Addressee);
    ((global::Sungero.Docflow.IncomingDocumentBaseClientHandlers)this.Handlers).AddresseeValueInput(args);
    return args.NewValue;
  }

  protected global::System.String InNumberValueInputHandler(global::System.String value)
  {
    var args = new global::Sungero.Presentation.StringValueInputEventArgs(this.InNumber, value, this, this.Info.Properties.InNumber);
    ((global::Sungero.Docflow.IncomingDocumentBaseClientHandlers)this.Handlers).InNumberValueInput(args);
    return args.NewValue;
  }





    #endregion

    #region Constructors




















              protected virtual void InitCorrespondentNavigationProperty()
              {
                this._Correspondent = new global::Sungero.Domain.Client.NavigationProperty<global::Sungero.Parties.ICounterparty>("Correspondent", this);
                this._Correspondent.ValueChanged += (sender, e) => { this.CorrespondentChangedHandler(); };
                this.AddProperty(this._Correspondent as global::Sungero.Domain.Client.IProperty);
              }




              protected virtual void InitInResponseToNavigationProperty()
              {
                this._InResponseTo = new global::Sungero.Domain.Client.NavigationProperty<global::Sungero.Docflow.IOutgoingDocumentBase>("InResponseTo", this);
                this._InResponseTo.ValueChanged += (sender, e) => { this.InResponseToChangedHandler(); };
                this.AddProperty(this._InResponseTo as global::Sungero.Domain.Client.IProperty);
              }




              protected virtual void InitAddresseeNavigationProperty()
              {
                this._Addressee = new global::Sungero.Domain.Client.NavigationProperty<global::Sungero.Company.IEmployee>("Addressee", this);
                this._Addressee.ValueChanged += (sender, e) => { this.AddresseeChangedHandler(); };
                this.AddProperty(this._Addressee as global::Sungero.Domain.Client.IProperty);
              }



            protected override void InitVersionsCollectionProperty()
            {
              this._Versions = new global::Sungero.Domain.Client.ListProperty<global::Sungero.Docflow.IIncomingDocumentBaseVersions>("Versions", this);
              this._Versions.ValueChanged += (sender, e) => { this.VersionsChangedHandler(); };
              this.AddProperty((global::Sungero.Domain.Client.IProperty)this._Versions);
              this.SetVersionsEventHandlers();
            }

            protected override void InitTrackingCollectionProperty()
            {
              this._Tracking = new global::Sungero.Domain.Client.ListProperty<global::Sungero.Docflow.IIncomingDocumentBaseTracking>("Tracking", this);
              this._Tracking.ValueChanged += (sender, e) => { this.TrackingChangedHandler(); };
              this.AddProperty((global::Sungero.Domain.Client.IProperty)this._Tracking);
              this.SetTrackingEventHandlers();
            }


    public IncomingDocumentBase()
    {
            this._Dated = new global::Sungero.Domain.Client.SimpleProperty<global::System.DateTime?>("Dated", this);
            this._Dated.ValueChanged += (sender, e) => { this.DatedChangedHandler(); };
            this.AddProperty(this._Dated);

            this._InNumber = new global::Sungero.Domain.Client.SimpleProperty<global::System.String>("InNumber", this);
            this._InNumber.ValueChanged += (sender, e) => { this.InNumberChangedHandler(); };
            this.AddProperty(this._InNumber);

            this.InitCorrespondentNavigationProperty();

            this.InitInResponseToNavigationProperty();

            this.InitAddresseeNavigationProperty();








    }

    #endregion

  }
}

// ==================================================================
// IncomingDocumentBasePresenter.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Client
{
  public class IncomingDocumentBasePresenter<T> :
    global::Sungero.Docflow.Client.OfficialDocumentPresenter<T>
    where T : class, global::Sungero.Docflow.IIncomingDocumentBase
  {
    #region Fields and properties

          private global::System.Windows.Input.ICommand _CreateOutgoingLetterCommand;

          public global::System.Windows.Input.ICommand CreateOutgoingLetterCommand
          {
            get
            {
              if (this._CreateOutgoingLetterCommand == null)
                  this._CreateOutgoingLetterCommand = new global::Sungero.Domain.Client.SingleEntityCommand<T>("CreateOutgoingLetter", this, this.CreateOutgoingLetter, this.CanCreateOutgoingLetter) { IsEmptyParameterAllowed = true };
              return this._CreateOutgoingLetterCommand;
            }
          }
          private global::System.Windows.Input.ICommand _OpenActionItemExecutionReportCommand;

          public global::System.Windows.Input.ICommand OpenActionItemExecutionReportCommand
          {
            get
            {
              if (this._OpenActionItemExecutionReportCommand == null)
                  this._OpenActionItemExecutionReportCommand = new global::Sungero.Domain.Client.SingleEntityCommand<T>("OpenActionItemExecutionReport", this, this.OpenActionItemExecutionReport, this.CanOpenActionItemExecutionReport) { IsEmptyParameterAllowed = true };
              return this._OpenActionItemExecutionReportCommand;
            }
          }
          private global::System.Windows.Input.ICommand _OpenActionItemsCommand;

          public global::System.Windows.Input.ICommand OpenActionItemsCommand
          {
            get
            {
              if (this._OpenActionItemsCommand == null)
                  this._OpenActionItemsCommand = new global::Sungero.Domain.Client.SingleEntityCommand<T>("OpenActionItems", this, this.OpenActionItems, this.CanOpenActionItems) { IsEmptyParameterAllowed = true };
              return this._OpenActionItemsCommand;
            }
          }




    #endregion

    #region Methods

              private bool CanCreateOutgoingLetter(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfCanExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this);
                return ((Sungero.Docflow.Client.IncomingDocumentBaseActions)(entity as Sungero.Docflow.Client.IncomingDocumentBase).ActionsHandlers).CanCreateOutgoingLetter(args);
              }

              private void CreateOutgoingLetter(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this, entity.Info.Actions.CreateOutgoingLetter);
                ((Sungero.Docflow.Client.IncomingDocumentBaseActions)(entity as Sungero.Docflow.Client.IncomingDocumentBase).ActionsHandlers).CreateOutgoingLetter(args);
              }

              private bool CanOpenActionItemExecutionReport(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfCanExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this);
                return ((Sungero.Docflow.Client.IncomingDocumentBaseActions)(entity as Sungero.Docflow.Client.IncomingDocumentBase).ActionsHandlers).CanOpenActionItemExecutionReport(args);
              }

              private void OpenActionItemExecutionReport(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this, entity.Info.Actions.OpenActionItemExecutionReport);
                ((Sungero.Docflow.Client.IncomingDocumentBaseActions)(entity as Sungero.Docflow.Client.IncomingDocumentBase).ActionsHandlers).OpenActionItemExecutionReport(args);
              }

              private bool CanOpenActionItems(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfCanExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this);
                return ((Sungero.Docflow.Client.IncomingDocumentBaseActions)(entity as Sungero.Docflow.Client.IncomingDocumentBase).ActionsHandlers).CanOpenActionItems(args);
              }

              private void OpenActionItems(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this, entity.Info.Actions.OpenActionItems);
                ((Sungero.Docflow.Client.IncomingDocumentBaseActions)(entity as Sungero.Docflow.Client.IncomingDocumentBase).ActionsHandlers).OpenActionItems(args);
              }


    #endregion

    #region Framework events

    protected override void EntityPropertyChangedEventHandler(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
    {
      base.EntityPropertyChangedEventHandler(sender, e);
    }

    #endregion

              protected global::Sungero.Domain.Client.IEntityCollectionPresenter _CorrespondentCollectionPresenter;
              public global::Sungero.Domain.Client.IEntityCollectionPresenter CorrespondentCollectionPresenter
              {
          get { return this._CorrespondentCollectionPresenter; }
        }
              protected global::Sungero.Domain.Client.IEntityCollectionPresenter _InResponseToCollectionPresenter;
              public global::Sungero.Domain.Client.IEntityCollectionPresenter InResponseToCollectionPresenter
              {
          get { return this._InResponseToCollectionPresenter; }
        }
              protected global::Sungero.Domain.Client.IEntityCollectionPresenter _AddresseeCollectionPresenter;
              public global::Sungero.Domain.Client.IEntityCollectionPresenter AddresseeCollectionPresenter
              {
          get { return this._AddresseeCollectionPresenter; }
        }



    #region Constructors

    private void Init()
    {
              this._AssociatedApplicationCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Content.IAssociatedApplication>(() => this.Entity.Id, typeof(T), "AssociatedApplication");

              this._DeliveryMethodCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Docflow.IMailDeliveryMethod>(() => this.Entity.Id, typeof(T), "DeliveryMethod");

              this._CaseFileCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Docflow.ICaseFile>(() => this.Entity.Id, typeof(T), "CaseFile");

              this._DeliveredToCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Company.IEmployee>(() => this.Entity.Id, typeof(T), "DeliveredTo");

              this._ResponsibleForReturnEmployeeCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Company.IEmployee>(() => this.Entity.Id, typeof(T), "ResponsibleForReturnEmployee");

              this._PreparedByCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Company.IEmployee>(() => this.Entity.Id, typeof(T), "PreparedBy");

              this._ProjectCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Docflow.IProjectBase>(() => this.Entity.Id, typeof(T), "Project");

              this._LeadingDocumentCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Docflow.IOfficialDocument>(() => this.Entity.Id, typeof(T), "LeadingDocument");

              this._StorageCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.CoreEntities.IStorage>(() => this.Entity.Id, typeof(T), "Storage");

              this._AuthorCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.CoreEntities.IUser>(() => this.Entity.Id, typeof(T), "Author");

              this._DocumentRegisterCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationProperty<global::Sungero.Docflow.IDocumentRegister>(() => this.Entity, typeof(T), "DocumentRegister");

              this._DocumentKindCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationProperty<global::Sungero.Docflow.IDocumentKind>(() => this.Entity, typeof(T), "DocumentKind");

              this._BusinessUnitCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Company.IBusinessUnit>(() => this.Entity.Id, typeof(T), "BusinessUnit");

              this._OurSignatoryCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationProperty<global::Sungero.Company.IEmployee>(() => this.Entity, typeof(T), "OurSignatory");

              this._DocumentGroupCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationProperty<global::Sungero.Docflow.IDocumentGroupBase>(() => this.Entity, typeof(T), "DocumentGroup");

              this._AssigneeCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Company.IEmployee>(() => this.Entity.Id, typeof(T), "Assignee");

              this._DepartmentCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Company.IDepartment>(() => this.Entity.Id, typeof(T), "Department");

                  this._CorrespondentCollectionPresenter = this.CreateCollectionPresenterForNavigationProperty<global::Sungero.Parties.ICounterparty>(global::System.Guid.Parse("b05e3324-6ade-4c8f-897a-e4c7088ffba3"));
              this._CorrespondentCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Parties.ICounterparty>(() => this.Entity.Id, typeof(T), "Correspondent");

                  this._InResponseToCollectionPresenter = this.CreateCollectionPresenterForNavigationProperty<global::Sungero.Docflow.IOutgoingDocumentBase>(global::System.Guid.Parse("67eba76e-eeb3-4c27-be5b-ad7088591938"));
              this._InResponseToCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationProperty<global::Sungero.Docflow.IOutgoingDocumentBase>(() => this.Entity, typeof(T), "InResponseTo");

                  this._AddresseeCollectionPresenter = this.CreateCollectionPresenterForNavigationProperty<global::Sungero.Company.IEmployee>(global::System.Guid.Parse("a893aea4-fb39-4572-831f-2da03fec597e"));
              this._AddresseeCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Company.IEmployee>(() => this.Entity.Id, typeof(T), "Addressee");


                        this._VersionsAuthorCollectionPresenter
                        .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.CoreEntities.IUser>(() => this.Entity.Id, typeof(Sungero.Docflow.IIncomingDocumentBaseVersions), "Author");

                        this._VersionsModifiedByCollectionPresenter
                        .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.CoreEntities.IUser>(() => this.Entity.Id, typeof(Sungero.Docflow.IIncomingDocumentBaseVersions), "ModifiedBy");

                        this._VersionsAssociatedApplicationCollectionPresenter
                        .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Content.IAssociatedApplication>(() => this.Entity.Id, typeof(Sungero.Docflow.IIncomingDocumentBaseVersions), "AssociatedApplication");

                        this._VersionsBodyAssociatedApplicationCollectionPresenter
                        .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Content.IAssociatedApplication>(() => this.Entity.Id, typeof(Sungero.Docflow.IIncomingDocumentBaseVersions), "BodyAssociatedApplication");


                        this._TrackingDeliveredToCollectionPresenter
                        .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Company.IEmployee>(() => this.Entity.Id, typeof(Sungero.Docflow.IIncomingDocumentBaseTracking), "DeliveredTo");

                        this._TrackingReturnTaskCollectionPresenter
                        .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Workflow.ITask>(() => this.Entity.Id, typeof(Sungero.Docflow.IIncomingDocumentBaseTracking), "ReturnTask");



    }

    public IncomingDocumentBasePresenter()
    {
      this.Init();
    }

    #endregion
  }
}

// ==================================================================
// IncomingDocumentBaseCollectionPresenter.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Client
{
  public class IncomingDocumentBaseCollectionPresenter<T> : 
    global::Sungero.Docflow.Client.OfficialDocumentCollectionPresenter<T>
    where T: class, global::Sungero.Docflow.IIncomingDocumentBase
  {
    #region Actions

          private global::System.Windows.Input.ICommand _DocumentRegisterCommand;  

          public global::System.Windows.Input.ICommand DocumentRegisterCommand 
          { 
            get
            { 
              if (this._DocumentRegisterCommand == null)
                this._DocumentRegisterCommand = new global::Sungero.Domain.Client.PresenterCommand("DocumentRegister", this, this.DocumentRegister, this.CanDocumentRegister);
              return this._DocumentRegisterCommand; 
            }
          }
          private global::System.Windows.Input.ICommand _DocumentProcessingReportCommand;  

          public global::System.Windows.Input.ICommand DocumentProcessingReportCommand 
          { 
            get
            { 
              if (this._DocumentProcessingReportCommand == null)
                this._DocumentProcessingReportCommand = new global::Sungero.Domain.Client.PresenterCommand("DocumentProcessingReport", this, this.DocumentProcessingReport, this.CanDocumentProcessingReport);
              return this._DocumentProcessingReportCommand; 
            }
          }
          private global::System.Windows.Input.ICommand _CreateOutgoingLetterCommand;  

          public global::System.Windows.Input.ICommand CreateOutgoingLetterCommand 
          { 
            get
            { 
              if (this._CreateOutgoingLetterCommand == null)
                this._CreateOutgoingLetterCommand = new global::Sungero.Domain.Client.SingleEntityCommand<T>("CreateOutgoingLetter", this, this.CreateOutgoingLetter, this.CanCreateOutgoingLetter) { IsEmptyParameterAllowed = true };
              return this._CreateOutgoingLetterCommand; 
            }
          }
          private global::System.Windows.Input.ICommand _OpenActionItemExecutionReportCommand;  

          public global::System.Windows.Input.ICommand OpenActionItemExecutionReportCommand 
          { 
            get
            { 
              if (this._OpenActionItemExecutionReportCommand == null)
                this._OpenActionItemExecutionReportCommand = new global::Sungero.Domain.Client.SingleEntityCommand<T>("OpenActionItemExecutionReport", this, this.OpenActionItemExecutionReport, this.CanOpenActionItemExecutionReport) { IsEmptyParameterAllowed = true };
              return this._OpenActionItemExecutionReportCommand; 
            }
          }
          private global::System.Windows.Input.ICommand _OpenActionItemsCommand;  

          public global::System.Windows.Input.ICommand OpenActionItemsCommand 
          { 
            get
            { 
              if (this._OpenActionItemsCommand == null)
                this._OpenActionItemsCommand = new global::Sungero.Domain.Client.SingleEntityCommand<T>("OpenActionItems", this, this.OpenActionItems, this.CanOpenActionItems) { IsEmptyParameterAllowed = true };
              return this._OpenActionItemsCommand; 
            }
          }



    #endregion

    #region Methods

        protected virtual bool CanDocumentRegister()
        {
          var args = new global::Sungero.Domain.Client.WpfCanExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Collection, null, this);
          return Sungero.Docflow.Client.IncomingDocumentBaseStaticActions.CanDocumentRegister(args);
        }

        protected virtual void DocumentRegister()
        {
          var args = new global::Sungero.Domain.Client.WpfExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Collection, null, this);
          Sungero.Docflow.Client.IncomingDocumentBaseStaticActions.DocumentRegister(args);
        }

        protected virtual bool CanDocumentProcessingReport()
        {
          var args = new global::Sungero.Domain.Client.WpfCanExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Collection, null, this);
          return Sungero.Docflow.Client.IncomingDocumentBaseStaticActions.CanDocumentProcessingReport(args);
        }

        protected virtual void DocumentProcessingReport()
        {
          var args = new global::Sungero.Domain.Client.WpfExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Collection, null, this);
          Sungero.Docflow.Client.IncomingDocumentBaseStaticActions.DocumentProcessingReport(args);
        }

        private bool CanCreateOutgoingLetter(T entity)
        {
          var args = new global::Sungero.Domain.Client.WpfCanExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Collection, entity, this);
          return ((Sungero.Docflow.Client.IncomingDocumentBaseActions)(entity as Sungero.Docflow.Client.IncomingDocumentBase).ActionsHandlers).CanCreateOutgoingLetter(args);
        }

        private void CreateOutgoingLetter(T entity)
        {
          var args = new global::Sungero.Domain.Client.WpfExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Collection, entity, this, entity.Info.Actions.CreateOutgoingLetter);
          ((Sungero.Docflow.Client.IncomingDocumentBaseActions)(entity as Sungero.Docflow.Client.IncomingDocumentBase).ActionsHandlers).CreateOutgoingLetter(args);
        }

        private bool CanOpenActionItemExecutionReport(T entity)
        {
          var args = new global::Sungero.Domain.Client.WpfCanExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Collection, entity, this);
          return ((Sungero.Docflow.Client.IncomingDocumentBaseActions)(entity as Sungero.Docflow.Client.IncomingDocumentBase).ActionsHandlers).CanOpenActionItemExecutionReport(args);
        }

        private void OpenActionItemExecutionReport(T entity)
        {
          var args = new global::Sungero.Domain.Client.WpfExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Collection, entity, this, entity.Info.Actions.OpenActionItemExecutionReport);
          ((Sungero.Docflow.Client.IncomingDocumentBaseActions)(entity as Sungero.Docflow.Client.IncomingDocumentBase).ActionsHandlers).OpenActionItemExecutionReport(args);
        }

        private bool CanOpenActionItems(T entity)
        {
          var args = new global::Sungero.Domain.Client.WpfCanExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Collection, entity, this);
          return ((Sungero.Docflow.Client.IncomingDocumentBaseActions)(entity as Sungero.Docflow.Client.IncomingDocumentBase).ActionsHandlers).CanOpenActionItems(args);
        }

        private void OpenActionItems(T entity)
        {
          var args = new global::Sungero.Domain.Client.WpfExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Collection, entity, this, entity.Info.Actions.OpenActionItems);
          ((Sungero.Docflow.Client.IncomingDocumentBaseActions)(entity as Sungero.Docflow.Client.IncomingDocumentBase).ActionsHandlers).OpenActionItems(args);
        }



    #endregion

    public IncomingDocumentBaseCollectionPresenter(global::System.Linq.IQueryable<T> query, OnLookup onLookup)
      : base(query, onLookup)
    {
    }

    public IncomingDocumentBaseCollectionPresenter(global::System.Linq.IQueryable<T> query)
      : this(query, null) { }

    public IncomingDocumentBaseCollectionPresenter(OnLookup onLookup)
      : this(null, onLookup) { }

    public IncomingDocumentBaseCollectionPresenter()
      : this(null, null) { }
  }
}

// ==================================================================
// IncomingDocumentBaseRepositoryImplementer.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Client
{ 
  public class IncomingDocumentBaseRepositoryImplementer<T> : 
      global::Sungero.Docflow.Client.OfficialDocumentRepositoryImplementer<T>,
      global::Sungero.Docflow.IIncomingDocumentBaseRepositoryImplementer<T>
      where T : global::Sungero.Docflow.IIncomingDocumentBase
    {
       public new global::Sungero.Docflow.IIncomingDocumentBaseAccessRights AccessRights
       {
          get { return (global::Sungero.Docflow.IIncomingDocumentBaseAccessRights)base.AccessRights; }
       }

       public new global::Sungero.Docflow.IIncomingDocumentBaseInfo Info
       {
          get { return (global::Sungero.Docflow.IIncomingDocumentBaseInfo)base.Info; }
       }

       protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
       {
         return new global::Sungero.Docflow.Client.IncomingDocumentBaseTypeAccessRights(typeof(T));
       }
    }
}

// ==================================================================
// IncomingDocumentBaseAccessRights.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Client
{
  public class IncomingDocumentBaseAccessRights : 
    Sungero.Docflow.Client.OfficialDocumentAccessRights, Sungero.Docflow.IIncomingDocumentBaseAccessRights
  {

    public IncomingDocumentBaseAccessRights(global::Sungero.Domain.Shared.IEntity entity) : base(entity)
    {
    }
  }

  public class IncomingDocumentBaseTypeAccessRights : 
    Sungero.Docflow.Client.OfficialDocumentTypeAccessRights, Sungero.Docflow.IIncomingDocumentBaseAccessRights
  {

    public IncomingDocumentBaseTypeAccessRights(global::System.Type entityType) : base(entityType)
    {
    }
  }
}
