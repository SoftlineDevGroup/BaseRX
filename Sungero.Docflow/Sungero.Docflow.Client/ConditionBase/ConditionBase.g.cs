
// ==================================================================
// ConditionBase.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Client
{
  public class ConditionBase :
    global::Sungero.CoreEntities.Client.DatabookEntry, global::Sungero.Docflow.IConditionBase
  {
    #region Fields and properties

    public static new readonly global::System.Guid ClassTypeGuid = global::System.Guid.Parse("325a0811-c109-483d-bf57-3246eade5644");

    public override global::System.Guid TypeGuid
    {
      get { return global::Sungero.Docflow.Client.ConditionBase.ClassTypeGuid; }
    }

    public override string TypeName
    {
      get { return "Sungero.Docflow.IConditionBase, Sungero.Domain.Interfaces"; }
    }

      public override string DisplayValue
      {
        get { return this.Name; }
        set { this.Name = value; }
      }

      public override string DisplayPropertyName
      {
        get { return "Name"; }
      }


    public new global::Sungero.Docflow.IConditionBaseState State
    {
      get
      {
        return (global::Sungero.Docflow.IConditionBaseState)base.State;
      }
    }

    protected override global::Sungero.Domain.Shared.IEntityState CreateState()
    {
      return new global::Sungero.Docflow.Shared.ConditionBaseState(this);
    }

    public new global::Sungero.Docflow.IConditionBaseInfo Info
    {
      get
      {
        return (global::Sungero.Docflow.IConditionBaseInfo)base.Info;
      }
    }

    public new global::Sungero.Docflow.IConditionBaseAccessRights AccessRights
    {
      get
      {
        return (global::Sungero.Docflow.IConditionBaseAccessRights)base.AccessRights;
      }
    }

    protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
    {
      return new global::Sungero.Docflow.Client.ConditionBaseAccessRights(this);
    }

        protected global::Sungero.Domain.Client.SimpleProperty<global::System.String> _Name;

        public virtual global::System.String Name
        {
          get { return this._Name.Value; }
          set { this._Name.Value = value; }
        }
        protected global::Sungero.Domain.Client.EnumSimpleProperty<global::Sungero.Core.Enumeration?> _ConditionType;

        public virtual global::Sungero.Core.Enumeration? ConditionType
        {
          get { return this._ConditionType.Value; }
          set { this._ConditionType.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.Double?> _Amount;

        public virtual global::System.Double? Amount
        {
          get { return this._Amount.Value; }
          set { this._Amount.Value = value; }
        }
        protected global::Sungero.Domain.Client.EnumSimpleProperty<global::Sungero.Core.Enumeration?> _AmountOperator;

        public virtual global::Sungero.Core.Enumeration? AmountOperator
        {
          get { return this._AmountOperator.Value; }
          set { this._AmountOperator.Value = value; }
        }


        private static global::Sungero.Domain.Shared.EnumerationItems _ConditionTypeItems = new global::Sungero.Domain.Shared.EnumerationItems(
          null,
          typeof(global::Sungero.Docflow.ConditionBase.ConditionType),
          typeof(global::Sungero.Docflow.Client.ConditionBase),
          "ConditionType");

        public static global::Sungero.Domain.Shared.EnumerationItems ConditionTypeItems
        {
          get { return global::Sungero.Docflow.Client.ConditionBase._ConditionTypeItems; }
        }

        public virtual global::Sungero.Domain.Shared.EnumerationItems ConditionTypeAllowedItems
        {
          get { return global::Sungero.Docflow.Client.ConditionBase.ConditionTypeItems; }
        }

        private static global::Sungero.Domain.Shared.EnumerationItems _AmountOperatorItems = new global::Sungero.Domain.Shared.EnumerationItems(
          null,
          typeof(global::Sungero.Docflow.ConditionBase.AmountOperator),
          typeof(global::Sungero.Docflow.Client.ConditionBase),
          "AmountOperator");

        public static global::Sungero.Domain.Shared.EnumerationItems AmountOperatorItems
        {
          get { return global::Sungero.Docflow.Client.ConditionBase._AmountOperatorItems; }
        }

        public virtual global::Sungero.Domain.Shared.EnumerationItems AmountOperatorAllowedItems
        {
          get { return global::Sungero.Docflow.Client.ConditionBase.AmountOperatorItems; }
        }




              protected global::Sungero.Domain.Client.INavigationProperty<global::Sungero.Docflow.IApprovalRoleBase> _ApprovalRole;

              public virtual global::Sungero.Docflow.IApprovalRoleBase ApprovalRole
              {
              get
              {
                return this._ApprovalRole.Value as global::Sungero.Docflow.IApprovalRoleBase;
              }

              set
              {
                (this._ApprovalRole as global::Sungero.Domain.Client.IProperty).Value = value;
              }
            }



              protected global::Sungero.Domain.Client.INavigationProperty<global::Sungero.Docflow.IApprovalRoleBase> _ApprovalRoleForComparison;

              public virtual global::Sungero.Docflow.IApprovalRoleBase ApprovalRoleForComparison
              {
              get
              {
                return this._ApprovalRoleForComparison.Value as global::Sungero.Docflow.IApprovalRoleBase;
              }

              set
              {
                (this._ApprovalRoleForComparison as global::Sungero.Domain.Client.IProperty).Value = value;
              }
            }



              protected global::Sungero.Domain.Client.INavigationProperty<global::Sungero.CoreEntities.IRecipient> _RecipientForComparison;

              public virtual global::Sungero.CoreEntities.IRecipient RecipientForComparison
              {
              get
              {
                return this._RecipientForComparison.Value as global::Sungero.CoreEntities.IRecipient;
              }

              set
              {
                (this._RecipientForComparison as global::Sungero.Domain.Client.IProperty).Value = value;
              }
            }



              protected global::Sungero.Domain.Client.INavigationProperty<global::Sungero.Docflow.IDocumentKind> _AddendaDocumentKind;

              public virtual global::Sungero.Docflow.IDocumentKind AddendaDocumentKind
              {
              get
              {
                return this._AddendaDocumentKind.Value as global::Sungero.Docflow.IDocumentKind;
              }

              set
              {
                (this._AddendaDocumentKind as global::Sungero.Domain.Client.IProperty).Value = value;
              }
            }







          protected global::Sungero.Domain.Client.IListProperty<global::Sungero.Docflow.IConditionBaseCurrencies> _Currencies;

          virtual public global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Docflow.IConditionBaseCurrencies> Currencies
          {
            get { return this._Currencies.Value; }
          }


          protected global::Sungero.Domain.Client.IListProperty<global::Sungero.Docflow.IConditionBaseDocumentKinds> _DocumentKinds;

          virtual public global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Docflow.IConditionBaseDocumentKinds> DocumentKinds
          {
            get { return this._DocumentKinds.Value; }
          }


          protected global::Sungero.Domain.Client.IListProperty<global::Sungero.Docflow.IConditionBaseConditionDocumentKinds> _ConditionDocumentKinds;

          virtual public global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Docflow.IConditionBaseConditionDocumentKinds> ConditionDocumentKinds
          {
            get { return this._ConditionDocumentKinds.Value; }
          }


          protected global::Sungero.Domain.Client.IListProperty<global::Sungero.Docflow.IConditionBaseDeliveryMethods> _DeliveryMethods;

          virtual public global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Docflow.IConditionBaseDeliveryMethods> DeliveryMethods
          {
            get { return this._DeliveryMethods.Value; }
          }




      protected global::Sungero.Domain.Client.TextProperty _Note;

      [global::Sungero.Domain.Shared.DoNotSavePreviousValue]
      public virtual System.String Note
      {
        get { return this._Note.Value; }
        set { this._Note.Value = value; }
      }



    private object _CurrenciesActionsHandlers;

    public object CurrenciesActionsHandlers
    {
      get
      {
        if (this._CurrenciesActionsHandlers == null)
          this._CurrenciesActionsHandlers = this.CreateCurrenciesActionsHandlers();
        return this._CurrenciesActionsHandlers;
      }
    }

    private object _CurrenciesCollectionActionsHandlers;

    public object CurrenciesCollectionActionsHandlers
    {
      get
      {
        if (this._CurrenciesCollectionActionsHandlers == null)
          this._CurrenciesCollectionActionsHandlers = this.CreateCurrenciesCollectionActionsHandlers();
        return this._CurrenciesCollectionActionsHandlers;
      }
    }
    private object _DocumentKindsActionsHandlers;

    public object DocumentKindsActionsHandlers
    {
      get
      {
        if (this._DocumentKindsActionsHandlers == null)
          this._DocumentKindsActionsHandlers = this.CreateDocumentKindsActionsHandlers();
        return this._DocumentKindsActionsHandlers;
      }
    }

    private object _DocumentKindsCollectionActionsHandlers;

    public object DocumentKindsCollectionActionsHandlers
    {
      get
      {
        if (this._DocumentKindsCollectionActionsHandlers == null)
          this._DocumentKindsCollectionActionsHandlers = this.CreateDocumentKindsCollectionActionsHandlers();
        return this._DocumentKindsCollectionActionsHandlers;
      }
    }
    private object _ConditionDocumentKindsActionsHandlers;

    public object ConditionDocumentKindsActionsHandlers
    {
      get
      {
        if (this._ConditionDocumentKindsActionsHandlers == null)
          this._ConditionDocumentKindsActionsHandlers = this.CreateConditionDocumentKindsActionsHandlers();
        return this._ConditionDocumentKindsActionsHandlers;
      }
    }

    private object _ConditionDocumentKindsCollectionActionsHandlers;

    public object ConditionDocumentKindsCollectionActionsHandlers
    {
      get
      {
        if (this._ConditionDocumentKindsCollectionActionsHandlers == null)
          this._ConditionDocumentKindsCollectionActionsHandlers = this.CreateConditionDocumentKindsCollectionActionsHandlers();
        return this._ConditionDocumentKindsCollectionActionsHandlers;
      }
    }
    private object _DeliveryMethodsActionsHandlers;

    public object DeliveryMethodsActionsHandlers
    {
      get
      {
        if (this._DeliveryMethodsActionsHandlers == null)
          this._DeliveryMethodsActionsHandlers = this.CreateDeliveryMethodsActionsHandlers();
        return this._DeliveryMethodsActionsHandlers;
      }
    }

    private object _DeliveryMethodsCollectionActionsHandlers;

    public object DeliveryMethodsCollectionActionsHandlers
    {
      get
      {
        if (this._DeliveryMethodsCollectionActionsHandlers == null)
          this._DeliveryMethodsCollectionActionsHandlers = this.CreateDeliveryMethodsCollectionActionsHandlers();
        return this._DeliveryMethodsCollectionActionsHandlers;
      }
    }

    #endregion

    #region Methods

    protected virtual object CreateCurrenciesActionsHandlers()
    {
      return null;
    }

    protected virtual object CreateCurrenciesCollectionActionsHandlers()
    {
      return null;
    }
    protected virtual object CreateDocumentKindsActionsHandlers()
    {
      return null;
    }

    protected virtual object CreateDocumentKindsCollectionActionsHandlers()
    {
      return null;
    }
    protected virtual object CreateConditionDocumentKindsActionsHandlers()
    {
      return null;
    }

    protected virtual object CreateConditionDocumentKindsCollectionActionsHandlers()
    {
      return null;
    }
    protected virtual object CreateDeliveryMethodsActionsHandlers()
    {
      return null;
    }

    protected virtual object CreateDeliveryMethodsCollectionActionsHandlers()
    {
      return null;
    }


    protected override global::Sungero.Domain.Client.EntityFunctions CreateClientFunctions()
    {
      return new global::Sungero.Docflow.Client.ConditionBaseFunctions(this);
    }

    protected override global::Sungero.Domain.Shared.EntityFunctions CreateSharedFunctions()
    {
      return new global::Sungero.Docflow.Shared.ConditionBaseFunctions(this);
    }
    protected override object CreateHandlers() {
      return new global::Sungero.Docflow.ConditionBaseClientHandlers(this);
    }
    protected override object CreateSharedHandlers() {
      return new global::Sungero.Docflow.ConditionBaseSharedHandlers(this);
    }

    #endregion

    #region Framework events

    protected void NameChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.Name, this.Name, this);
     ((global::Sungero.Docflow.ConditionBaseSharedHandlers)this.SharedHandlers).NameChanged(args);
    }

    protected void ConditionTypeChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.EnumerationPropertyChangedEventArgs(this.State.Properties.ConditionType, this.ConditionType, this);
     ((global::Sungero.Docflow.ConditionBaseSharedHandlers)this.SharedHandlers).ConditionTypeChanged(args);
    }

    protected void AmountChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.DoublePropertyChangedEventArgs(this.State.Properties.Amount, this.Amount, this);
     ((global::Sungero.Docflow.ConditionBaseSharedHandlers)this.SharedHandlers).AmountChanged(args);
    }

    protected void CurrenciesChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.CollectionPropertyChangedEventArgs(this);
     ((global::Sungero.Docflow.ConditionBaseSharedHandlers)this.SharedHandlers).CurrenciesChanged(args);
    }

    protected void DocumentKindsChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.CollectionPropertyChangedEventArgs(this);
     ((global::Sungero.Docflow.ConditionBaseSharedHandlers)this.SharedHandlers).DocumentKindsChanged(args);
    }

    protected void AmountOperatorChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.EnumerationPropertyChangedEventArgs(this.State.Properties.AmountOperator, this.AmountOperator, this);
     ((global::Sungero.Docflow.ConditionBaseSharedHandlers)this.SharedHandlers).AmountOperatorChanged(args);
    }

    protected void NoteChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.TextPropertyChangedEventArgs(this.State.Properties.Note, this.Note, this);
     ((global::Sungero.Docflow.ConditionBaseSharedHandlers)this.SharedHandlers).NoteChanged(args);
    }

    protected void ConditionDocumentKindsChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.CollectionPropertyChangedEventArgs(this);
     ((global::Sungero.Docflow.ConditionBaseSharedHandlers)this.SharedHandlers).ConditionDocumentKindsChanged(args);
    }

    protected void ApprovalRoleChangedHandler()
    {
      var args = new global::Sungero.Docflow.Shared.ConditionBaseApprovalRoleChangedEventArgs(this.State.Properties.ApprovalRole, this.ApprovalRole, this);
     ((global::Sungero.Docflow.ConditionBaseSharedHandlers)this.SharedHandlers).ApprovalRoleChanged(args);
    }

    protected void ApprovalRoleForComparisonChangedHandler()
    {
      var args = new global::Sungero.Docflow.Shared.ConditionBaseApprovalRoleForComparisonChangedEventArgs(this.State.Properties.ApprovalRoleForComparison, this.ApprovalRoleForComparison, this);
     ((global::Sungero.Docflow.ConditionBaseSharedHandlers)this.SharedHandlers).ApprovalRoleForComparisonChanged(args);
    }

    protected void RecipientForComparisonChangedHandler()
    {
      var args = new global::Sungero.Docflow.Shared.ConditionBaseRecipientForComparisonChangedEventArgs(this.State.Properties.RecipientForComparison, this.RecipientForComparison, this);
     ((global::Sungero.Docflow.ConditionBaseSharedHandlers)this.SharedHandlers).RecipientForComparisonChanged(args);
    }

    protected void DeliveryMethodsChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.CollectionPropertyChangedEventArgs(this);
     ((global::Sungero.Docflow.ConditionBaseSharedHandlers)this.SharedHandlers).DeliveryMethodsChanged(args);
    }

    protected void AddendaDocumentKindChangedHandler()
    {
      var args = new global::Sungero.Docflow.Shared.ConditionBaseAddendaDocumentKindChangedEventArgs(this.State.Properties.AddendaDocumentKind, this.AddendaDocumentKind, this);
     ((global::Sungero.Docflow.ConditionBaseSharedHandlers)this.SharedHandlers).AddendaDocumentKindChanged(args);
    }



    protected virtual global::Sungero.Docflow.ConditionBaseCurrenciesSharedCollectionHandlers CreateCurrenciesAddedHandler(global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.Docflow.ConditionBaseCurrenciesSharedCollectionHandlers(this, e.Value, null, e.Source);
    }

    protected virtual global::Sungero.Docflow.ConditionBaseCurrenciesSharedCollectionHandlers CreateCurrenciesDeletedHandler(global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.Docflow.ConditionBaseCurrenciesSharedCollectionHandlers(this, null, e.Value, null);
    }

    protected virtual void CurrenciesAddedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {  
      var collectionHandlers = this.CreateCurrenciesAddedHandler(e);
      if (collectionHandlers != null)
      {
        var args = new global::Sungero.Domain.Shared.CollectionPropertyAddedEventArgs(this);
        collectionHandlers.CurrenciesAdded(args);
      }
    }

    protected virtual void CurrenciesDeletedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {  
      var collectionHandlers = this.CreateCurrenciesDeletedHandler(e);
      if (collectionHandlers != null)
      {
        var args = new global::Sungero.Domain.Shared.CollectionPropertyDeletedEventArgs(this);
        collectionHandlers.CurrenciesDeleted(args);
      }
    }


    protected virtual global::Sungero.Docflow.ConditionBaseDocumentKindsSharedCollectionHandlers CreateDocumentKindsAddedHandler(global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.Docflow.ConditionBaseDocumentKindsSharedCollectionHandlers(this, e.Value, null, e.Source);
    }

    protected virtual global::Sungero.Docflow.ConditionBaseDocumentKindsSharedCollectionHandlers CreateDocumentKindsDeletedHandler(global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.Docflow.ConditionBaseDocumentKindsSharedCollectionHandlers(this, null, e.Value, null);
    }

    protected virtual void DocumentKindsAddedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {  
      var collectionHandlers = this.CreateDocumentKindsAddedHandler(e);
      if (collectionHandlers != null)
      {
        var args = new global::Sungero.Domain.Shared.CollectionPropertyAddedEventArgs(this);
        collectionHandlers.DocumentKindsAdded(args);
      }
    }

    protected virtual void DocumentKindsDeletedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {  
      var collectionHandlers = this.CreateDocumentKindsDeletedHandler(e);
      if (collectionHandlers != null)
      {
        var args = new global::Sungero.Domain.Shared.CollectionPropertyDeletedEventArgs(this);
        collectionHandlers.DocumentKindsDeleted(args);
      }
    }


    protected virtual global::Sungero.Docflow.ConditionBaseConditionDocumentKindsSharedCollectionHandlers CreateConditionDocumentKindsAddedHandler(global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.Docflow.ConditionBaseConditionDocumentKindsSharedCollectionHandlers(this, e.Value, null, e.Source);
    }

    protected virtual global::Sungero.Docflow.ConditionBaseConditionDocumentKindsSharedCollectionHandlers CreateConditionDocumentKindsDeletedHandler(global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.Docflow.ConditionBaseConditionDocumentKindsSharedCollectionHandlers(this, null, e.Value, null);
    }

    protected virtual void ConditionDocumentKindsAddedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {  
      var collectionHandlers = this.CreateConditionDocumentKindsAddedHandler(e);
      if (collectionHandlers != null)
      {
        var args = new global::Sungero.Domain.Shared.CollectionPropertyAddedEventArgs(this);
        collectionHandlers.ConditionDocumentKindsAdded(args);
      }
    }

    protected virtual void ConditionDocumentKindsDeletedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {  
      var collectionHandlers = this.CreateConditionDocumentKindsDeletedHandler(e);
      if (collectionHandlers != null)
      {
        var args = new global::Sungero.Domain.Shared.CollectionPropertyDeletedEventArgs(this);
        collectionHandlers.ConditionDocumentKindsDeleted(args);
      }
    }


    protected virtual global::Sungero.Docflow.ConditionBaseDeliveryMethodsSharedCollectionHandlers CreateDeliveryMethodsAddedHandler(global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.Docflow.ConditionBaseDeliveryMethodsSharedCollectionHandlers(this, e.Value, null, e.Source);
    }

    protected virtual global::Sungero.Docflow.ConditionBaseDeliveryMethodsSharedCollectionHandlers CreateDeliveryMethodsDeletedHandler(global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.Docflow.ConditionBaseDeliveryMethodsSharedCollectionHandlers(this, null, e.Value, null);
    }

    protected virtual void DeliveryMethodsAddedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {  
      var collectionHandlers = this.CreateDeliveryMethodsAddedHandler(e);
      if (collectionHandlers != null)
      {
        var args = new global::Sungero.Domain.Shared.CollectionPropertyAddedEventArgs(this);
        collectionHandlers.DeliveryMethodsAdded(args);
      }
    }

    protected virtual void DeliveryMethodsDeletedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {  
      var collectionHandlers = this.CreateDeliveryMethodsDeletedHandler(e);
      if (collectionHandlers != null)
      {
        var args = new global::Sungero.Domain.Shared.CollectionPropertyDeletedEventArgs(this);
        collectionHandlers.DeliveryMethodsDeleted(args);
      }
    }


  protected global::System.String NameValueInputHandler(global::System.String value)
  {
    var args = new global::Sungero.Presentation.StringValueInputEventArgs(this.Name, value, this, this.Info.Properties.Name);
    ((global::Sungero.Docflow.ConditionBaseClientHandlers)this.Handlers).NameValueInput(args);
    return args.NewValue;
  }

  protected global::Sungero.Core.Enumeration? ConditionTypeValueInputHandler(global::Sungero.Core.Enumeration? value)
  {
    var args = new global::Sungero.Presentation.EnumerationValueInputEventArgs(this.ConditionType, value, this, this.Info.Properties.ConditionType);
    ((global::Sungero.Docflow.ConditionBaseClientHandlers)this.Handlers).ConditionTypeValueInput(args);
    return args.NewValue;
  }

  protected global::System.Double? AmountValueInputHandler(global::System.Double? value)
  {
    var args = new global::Sungero.Presentation.DoubleValueInputEventArgs(this.Amount, value, this, this.Info.Properties.Amount);
    ((global::Sungero.Docflow.ConditionBaseClientHandlers)this.Handlers).AmountValueInput(args);
    return args.NewValue;
  }



  protected global::Sungero.Core.Enumeration? AmountOperatorValueInputHandler(global::Sungero.Core.Enumeration? value)
  {
    var args = new global::Sungero.Presentation.EnumerationValueInputEventArgs(this.AmountOperator, value, this, this.Info.Properties.AmountOperator);
    ((global::Sungero.Docflow.ConditionBaseClientHandlers)this.Handlers).AmountOperatorValueInput(args);
    return args.NewValue;
  }

  protected global::System.String NoteValueInputHandler(global::System.String value)
  {
    var args = new global::Sungero.Presentation.TextValueInputEventArgs(this.Note, value, this, this.Info.Properties.Note);
    ((global::Sungero.Docflow.ConditionBaseClientHandlers)this.Handlers).NoteValueInput(args);
    return args.NewValue;
  }


  protected global::Sungero.Docflow.IApprovalRoleBase ApprovalRoleValueInputHandler(global::Sungero.Docflow.IApprovalRoleBase value)
  {
    var args = new global::Sungero.Docflow.Client.ConditionBaseApprovalRoleValueInputEventArgs(this.ApprovalRole, value, this, this.Info.Properties.ApprovalRole);
    ((global::Sungero.Docflow.ConditionBaseClientHandlers)this.Handlers).ApprovalRoleValueInput(args);
    return args.NewValue;
  }

  protected global::Sungero.Docflow.IApprovalRoleBase ApprovalRoleForComparisonValueInputHandler(global::Sungero.Docflow.IApprovalRoleBase value)
  {
    var args = new global::Sungero.Docflow.Client.ConditionBaseApprovalRoleForComparisonValueInputEventArgs(this.ApprovalRoleForComparison, value, this, this.Info.Properties.ApprovalRoleForComparison);
    ((global::Sungero.Docflow.ConditionBaseClientHandlers)this.Handlers).ApprovalRoleForComparisonValueInput(args);
    return args.NewValue;
  }

  protected global::Sungero.CoreEntities.IRecipient RecipientForComparisonValueInputHandler(global::Sungero.CoreEntities.IRecipient value)
  {
    var args = new global::Sungero.Docflow.Client.ConditionBaseRecipientForComparisonValueInputEventArgs(this.RecipientForComparison, value, this, this.Info.Properties.RecipientForComparison);
    ((global::Sungero.Docflow.ConditionBaseClientHandlers)this.Handlers).RecipientForComparisonValueInput(args);
    return args.NewValue;
  }


  protected global::Sungero.Docflow.IDocumentKind AddendaDocumentKindValueInputHandler(global::Sungero.Docflow.IDocumentKind value)
  {
    var args = new global::Sungero.Docflow.Client.ConditionBaseAddendaDocumentKindValueInputEventArgs(this.AddendaDocumentKind, value, this, this.Info.Properties.AddendaDocumentKind);
    ((global::Sungero.Docflow.ConditionBaseClientHandlers)this.Handlers).AddendaDocumentKindValueInput(args);
    return args.NewValue;
  }


  protected global::System.Collections.Generic.IEnumerable<global::Sungero.Core.Enumeration> ConditionTypeFilteringHandler()
  {
    return ((global::Sungero.Docflow.ConditionBaseClientHandlers)this.Handlers).ConditionTypeFiltering(this.ConditionTypeAllowedItems);
  }




  protected global::System.Collections.Generic.IEnumerable<global::Sungero.Core.Enumeration> AmountOperatorFilteringHandler()
  {
    return ((global::Sungero.Docflow.ConditionBaseClientHandlers)this.Handlers).AmountOperatorFiltering(this.AmountOperatorAllowedItems);
  }









    #endregion

    #region Constructors



              protected virtual void InitApprovalRoleNavigationProperty()
              {
                this._ApprovalRole = new global::Sungero.Domain.Client.NavigationProperty<global::Sungero.Docflow.IApprovalRoleBase>("ApprovalRole", this);
                this._ApprovalRole.ValueChanged += (sender, e) => { this.ApprovalRoleChangedHandler(); };
                this.AddProperty(this._ApprovalRole as global::Sungero.Domain.Client.IProperty);
              }




              protected virtual void InitApprovalRoleForComparisonNavigationProperty()
              {
                this._ApprovalRoleForComparison = new global::Sungero.Domain.Client.NavigationProperty<global::Sungero.Docflow.IApprovalRoleBase>("ApprovalRoleForComparison", this);
                this._ApprovalRoleForComparison.ValueChanged += (sender, e) => { this.ApprovalRoleForComparisonChangedHandler(); };
                this.AddProperty(this._ApprovalRoleForComparison as global::Sungero.Domain.Client.IProperty);
              }




              protected virtual void InitRecipientForComparisonNavigationProperty()
              {
                this._RecipientForComparison = new global::Sungero.Domain.Client.NavigationProperty<global::Sungero.CoreEntities.IRecipient>("RecipientForComparison", this);
                this._RecipientForComparison.ValueChanged += (sender, e) => { this.RecipientForComparisonChangedHandler(); };
                this.AddProperty(this._RecipientForComparison as global::Sungero.Domain.Client.IProperty);
              }




              protected virtual void InitAddendaDocumentKindNavigationProperty()
              {
                this._AddendaDocumentKind = new global::Sungero.Domain.Client.NavigationProperty<global::Sungero.Docflow.IDocumentKind>("AddendaDocumentKind", this);
                this._AddendaDocumentKind.ValueChanged += (sender, e) => { this.AddendaDocumentKindChangedHandler(); };
                this.AddProperty(this._AddendaDocumentKind as global::Sungero.Domain.Client.IProperty);
              }



            protected virtual void InitCurrenciesCollectionProperty()
            {
              this._Currencies = new global::Sungero.Domain.Client.ListProperty<global::Sungero.Docflow.IConditionBaseCurrencies>("Currencies", this);
              this._Currencies.ValueChanged += (sender, e) => { this.CurrenciesChangedHandler(); };
              this.AddProperty((global::Sungero.Domain.Client.IProperty)this._Currencies);
              this.SetCurrenciesEventHandlers();
            }

            protected void SetCurrenciesEventHandlers()
            {
              this._Currencies.ChildEntityAdded += this.CurrenciesAddedHandler;
              this._Currencies.ChildEntityDeleted += this.CurrenciesDeletedHandler;
            }

            protected virtual void InitDocumentKindsCollectionProperty()
            {
              this._DocumentKinds = new global::Sungero.Domain.Client.ListProperty<global::Sungero.Docflow.IConditionBaseDocumentKinds>("DocumentKinds", this);
              this._DocumentKinds.ValueChanged += (sender, e) => { this.DocumentKindsChangedHandler(); };
              this.AddProperty((global::Sungero.Domain.Client.IProperty)this._DocumentKinds);
              this.SetDocumentKindsEventHandlers();
            }

            protected void SetDocumentKindsEventHandlers()
            {
              this._DocumentKinds.ChildEntityAdded += this.DocumentKindsAddedHandler;
              this._DocumentKinds.ChildEntityDeleted += this.DocumentKindsDeletedHandler;
            }

            protected virtual void InitConditionDocumentKindsCollectionProperty()
            {
              this._ConditionDocumentKinds = new global::Sungero.Domain.Client.ListProperty<global::Sungero.Docflow.IConditionBaseConditionDocumentKinds>("ConditionDocumentKinds", this);
              this._ConditionDocumentKinds.ValueChanged += (sender, e) => { this.ConditionDocumentKindsChangedHandler(); };
              this.AddProperty((global::Sungero.Domain.Client.IProperty)this._ConditionDocumentKinds);
              this.SetConditionDocumentKindsEventHandlers();
            }

            protected void SetConditionDocumentKindsEventHandlers()
            {
              this._ConditionDocumentKinds.ChildEntityAdded += this.ConditionDocumentKindsAddedHandler;
              this._ConditionDocumentKinds.ChildEntityDeleted += this.ConditionDocumentKindsDeletedHandler;
            }

            protected virtual void InitDeliveryMethodsCollectionProperty()
            {
              this._DeliveryMethods = new global::Sungero.Domain.Client.ListProperty<global::Sungero.Docflow.IConditionBaseDeliveryMethods>("DeliveryMethods", this);
              this._DeliveryMethods.ValueChanged += (sender, e) => { this.DeliveryMethodsChangedHandler(); };
              this.AddProperty((global::Sungero.Domain.Client.IProperty)this._DeliveryMethods);
              this.SetDeliveryMethodsEventHandlers();
            }

            protected void SetDeliveryMethodsEventHandlers()
            {
              this._DeliveryMethods.ChildEntityAdded += this.DeliveryMethodsAddedHandler;
              this._DeliveryMethods.ChildEntityDeleted += this.DeliveryMethodsDeletedHandler;
            }


    public ConditionBase()
    {
            this._Name = new global::Sungero.Domain.Client.SimpleProperty<global::System.String>("Name", this);
            this._Name.ValueChanged += (sender, e) => { this.NameChangedHandler(); };
            this.AddProperty(this._Name);

            this._ConditionType = new global::Sungero.Domain.Client.EnumSimpleProperty<global::Sungero.Core.Enumeration?>("ConditionType", this);
            this._ConditionType.ValueChanged += (sender, e) => { this.ConditionTypeChangedHandler(); };
            this.AddProperty(this._ConditionType);

            this._Amount = new global::Sungero.Domain.Client.SimpleProperty<global::System.Double?>("Amount", this);
            this._Amount.ValueChanged += (sender, e) => { this.AmountChangedHandler(); };
            this.AddProperty(this._Amount);

            this._AmountOperator = new global::Sungero.Domain.Client.EnumSimpleProperty<global::Sungero.Core.Enumeration?>("AmountOperator", this);
            this._AmountOperator.ValueChanged += (sender, e) => { this.AmountOperatorChangedHandler(); };
            this.AddProperty(this._AmountOperator);

            this.InitApprovalRoleNavigationProperty();

            this.InitApprovalRoleForComparisonNavigationProperty();

            this.InitRecipientForComparisonNavigationProperty();

            this.InitAddendaDocumentKindNavigationProperty();


            this.InitCurrenciesCollectionProperty();

            this.InitDocumentKindsCollectionProperty();

            this.InitConditionDocumentKindsCollectionProperty();

            this.InitDeliveryMethodsCollectionProperty();


            this._Note = new global::Sungero.Domain.Client.TextProperty("Note", this);
            this._Note.ValueChanged += (sender, e) => { this.NoteChangedHandler(); };
            this.AddProperty(this._Note);






    }

    #endregion

  }
}

// ==================================================================
// ConditionBasePresenter.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Client
{
  public class ConditionBasePresenter<T> :
    global::Sungero.Domain.Client.EntityPresenter<T>
    where T : class, global::Sungero.Docflow.IConditionBase
  {
    #region Fields and properties




    #endregion

    #region Methods

    #endregion

    #region Framework events

    protected override void EntityPropertyChangedEventHandler(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
    {
      base.EntityPropertyChangedEventHandler(sender, e);
    }

    #endregion

              protected global::Sungero.Domain.Client.IEntityCollectionPresenter _ApprovalRoleCollectionPresenter;
              public global::Sungero.Domain.Client.IEntityCollectionPresenter ApprovalRoleCollectionPresenter
              {
          get { return this._ApprovalRoleCollectionPresenter; }
        }
              protected global::Sungero.Domain.Client.IEntityCollectionPresenter _ApprovalRoleForComparisonCollectionPresenter;
              public global::Sungero.Domain.Client.IEntityCollectionPresenter ApprovalRoleForComparisonCollectionPresenter
              {
          get { return this._ApprovalRoleForComparisonCollectionPresenter; }
        }
              protected global::Sungero.Domain.Client.IEntityCollectionPresenter _RecipientForComparisonCollectionPresenter;
              public global::Sungero.Domain.Client.IEntityCollectionPresenter RecipientForComparisonCollectionPresenter
              {
          get { return this._RecipientForComparisonCollectionPresenter; }
        }
              protected global::Sungero.Domain.Client.IEntityCollectionPresenter _AddendaDocumentKindCollectionPresenter;
              public global::Sungero.Domain.Client.IEntityCollectionPresenter AddendaDocumentKindCollectionPresenter
              {
          get { return this._AddendaDocumentKindCollectionPresenter; }
        }


                          protected global::Sungero.Domain.Client.IEntityCollectionPresenter _CurrenciesCurrencyCollectionPresenter;
                          public global::Sungero.Domain.Client.IEntityCollectionPresenter CurrenciesCurrencyCollectionPresenter
                          {
                  get { return this._CurrenciesCurrencyCollectionPresenter; }
                }

                          protected global::Sungero.Domain.Client.IEntityCollectionPresenter _DocumentKindsDocumentKindCollectionPresenter;
                          public global::Sungero.Domain.Client.IEntityCollectionPresenter DocumentKindsDocumentKindCollectionPresenter
                          {
                  get { return this._DocumentKindsDocumentKindCollectionPresenter; }
                }

                          protected global::Sungero.Domain.Client.IEntityCollectionPresenter _ConditionDocumentKindsDocumentKindCollectionPresenter;
                          public global::Sungero.Domain.Client.IEntityCollectionPresenter ConditionDocumentKindsDocumentKindCollectionPresenter
                          {
                  get { return this._ConditionDocumentKindsDocumentKindCollectionPresenter; }
                }

                          protected global::Sungero.Domain.Client.IEntityCollectionPresenter _DeliveryMethodsDeliveryMethodCollectionPresenter;
                          public global::Sungero.Domain.Client.IEntityCollectionPresenter DeliveryMethodsDeliveryMethodCollectionPresenter
                          {
                  get { return this._DeliveryMethodsDeliveryMethodCollectionPresenter; }
                }



    #region Constructors

    private void Init()
    {
                  this._ApprovalRoleCollectionPresenter = this.CreateCollectionPresenterForNavigationProperty<global::Sungero.Docflow.IApprovalRoleBase>(global::System.Guid.Parse("561d2396-b846-435f-9d55-0f09ad2f8b5d"));
              this._ApprovalRoleCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationProperty<global::Sungero.Docflow.IApprovalRoleBase>(() => this.Entity, typeof(T), "ApprovalRole");

                  this._ApprovalRoleForComparisonCollectionPresenter = this.CreateCollectionPresenterForNavigationProperty<global::Sungero.Docflow.IApprovalRoleBase>(global::System.Guid.Parse("e3ce660c-901d-44e1-a991-72b87edfec27"));
              this._ApprovalRoleForComparisonCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationProperty<global::Sungero.Docflow.IApprovalRoleBase>(() => this.Entity, typeof(T), "ApprovalRoleForComparison");

                  this._RecipientForComparisonCollectionPresenter = this.CreateCollectionPresenterForNavigationProperty<global::Sungero.CoreEntities.IRecipient>(global::System.Guid.Parse("f2cacde6-36d1-40b2-8c5e-21f1828abb38"));
              this._RecipientForComparisonCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.CoreEntities.IRecipient>(() => this.Entity.Id, typeof(T), "RecipientForComparison");

                  this._AddendaDocumentKindCollectionPresenter = this.CreateCollectionPresenterForNavigationProperty<global::Sungero.Docflow.IDocumentKind>(global::System.Guid.Parse("608b0ff7-f187-48fe-80f7-232c4f0605f7"));
              this._AddendaDocumentKindCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Docflow.IDocumentKind>(() => this.Entity.Id, typeof(T), "AddendaDocumentKind");


                          this._CurrenciesCurrencyCollectionPresenter = this.CreateCollectionPresenterForNavigationProperty<global::Sungero.Commons.ICurrency>(global::System.Guid.Parse("6f7d6595-651b-44c8-bc49-8bfbc8ebbc4f"));
                        this._CurrenciesCurrencyCollectionPresenter
                        .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Commons.ICurrency>(() => this.Entity.Id, typeof(Sungero.Docflow.IConditionBaseCurrencies), "Currency");

                          this._DocumentKindsDocumentKindCollectionPresenter = this.CreateCollectionPresenterForNavigationProperty<global::Sungero.Docflow.IDocumentKind>(global::System.Guid.Parse("81d164dd-e8c2-4b89-8de5-f09df50888cb"));
                        this._DocumentKindsDocumentKindCollectionPresenter
                        .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Docflow.IDocumentKind>(() => this.Entity.Id, typeof(Sungero.Docflow.IConditionBaseDocumentKinds), "DocumentKind");

                          this._ConditionDocumentKindsDocumentKindCollectionPresenter = this.CreateCollectionPresenterForNavigationProperty<global::Sungero.Docflow.IDocumentKind>(global::System.Guid.Parse("9b09d27c-3d3c-47c7-9024-40414fd63dd3"));
                        this._ConditionDocumentKindsDocumentKindCollectionPresenter
                        .Query = global::Sungero.Domain.Client.Session.GetValuesForChildNavigationProperty<global::Sungero.Docflow.IDocumentKind>(
                          () => this.ChildEntityCollectionPresenters.GetPresenter<global::Sungero.Docflow.IConditionBaseConditionDocumentKinds>().FocusedEntity,
                          typeof(Sungero.Docflow.IConditionBaseConditionDocumentKinds),
                          () => this.Entity,
                          "DocumentKind");

                          this._DeliveryMethodsDeliveryMethodCollectionPresenter = this.CreateCollectionPresenterForNavigationProperty<global::Sungero.Docflow.IMailDeliveryMethod>(global::System.Guid.Parse("45f0dd7d-0cb6-4b0a-93e2-95e0749c70de"));
                        this._DeliveryMethodsDeliveryMethodCollectionPresenter
                        .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Docflow.IMailDeliveryMethod>(() => this.Entity.Id, typeof(Sungero.Docflow.IConditionBaseDeliveryMethods), "DeliveryMethod");


    }

    public ConditionBasePresenter()
    {
      this.Init();
    }

    #endregion
  }
}

// ==================================================================
// ConditionBaseCollectionPresenter.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Client
{
  public class ConditionBaseCollectionPresenter<T> : 
    global::Sungero.Domain.Client.EntityCollectionPresenter<T>
    where T: class, global::Sungero.Docflow.IConditionBase
  {
    #region Actions



    #endregion

    #region Methods


    #endregion

    public ConditionBaseCollectionPresenter(global::System.Linq.IQueryable<T> query, OnLookup onLookup)
      : base(query, onLookup)
    {
    }

    public ConditionBaseCollectionPresenter(global::System.Linq.IQueryable<T> query)
      : this(query, null) { }

    public ConditionBaseCollectionPresenter(OnLookup onLookup)
      : this(null, onLookup) { }

    public ConditionBaseCollectionPresenter()
      : this(null, null) { }
  }
}

// ==================================================================
// ConditionBaseRepositoryImplementer.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Client
{ 
  public class ConditionBaseRepositoryImplementer<T> : 
      global::Sungero.Domain.Client.RepositoryImplementer<T>,
      global::Sungero.Docflow.IConditionBaseRepositoryImplementer<T>
      where T : global::Sungero.Docflow.IConditionBase
    {
       public new global::Sungero.Docflow.IConditionBaseAccessRights AccessRights
       {
          get { return (global::Sungero.Docflow.IConditionBaseAccessRights)base.AccessRights; }
       }

       public new global::Sungero.Docflow.IConditionBaseInfo Info
       {
          get { return (global::Sungero.Docflow.IConditionBaseInfo)base.Info; }
       }

       protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
       {
         return new global::Sungero.Docflow.Client.ConditionBaseTypeAccessRights(typeof(T));
       }
    }
}

// ==================================================================
// ConditionBaseAccessRights.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Client
{
  public class ConditionBaseAccessRights : 
    Sungero.CoreEntities.Client.DatabookEntryAccessRights, Sungero.Docflow.IConditionBaseAccessRights
  {

    public ConditionBaseAccessRights(global::Sungero.Domain.Shared.IEntity entity) : base(entity)
    {
    }
  }

  public class ConditionBaseTypeAccessRights : 
    Sungero.CoreEntities.Client.DatabookEntryTypeAccessRights, Sungero.Docflow.IConditionBaseAccessRights
  {

    public ConditionBaseTypeAccessRights(global::System.Type entityType) : base(entityType)
    {
    }
  }
}
