
// ==================================================================
// DocumentRegister.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Client
{
  public class DocumentRegister :
    global::Sungero.CoreEntities.Client.DatabookEntry, global::Sungero.Docflow.IDocumentRegister
  {
    #region Fields and properties

    public static new readonly global::System.Guid ClassTypeGuid = global::System.Guid.Parse("d7800dd5-a9d2-41e9-bbc4-a39292ac1eeb");

    public override global::System.Guid TypeGuid
    {
      get { return global::Sungero.Docflow.Client.DocumentRegister.ClassTypeGuid; }
    }

    public override string TypeName
    {
      get { return "Sungero.Docflow.IDocumentRegister, Sungero.Domain.Interfaces"; }
    }

      public override string DisplayValue
      {
        get { return this.DisplayName; }
        set { this.DisplayName = value; }
      }

      public override string DisplayPropertyName
      {
        get { return "DisplayName"; }
      }


    public new global::Sungero.Docflow.IDocumentRegisterState State
    {
      get
      {
        return (global::Sungero.Docflow.IDocumentRegisterState)base.State;
      }
    }

    protected override global::Sungero.Domain.Shared.IEntityState CreateState()
    {
      return new global::Sungero.Docflow.Shared.DocumentRegisterState(this);
    }

    public new global::Sungero.Docflow.IDocumentRegisterInfo Info
    {
      get
      {
        return (global::Sungero.Docflow.IDocumentRegisterInfo)base.Info;
      }
    }

    public new global::Sungero.Docflow.IDocumentRegisterAccessRights AccessRights
    {
      get
      {
        return (global::Sungero.Docflow.IDocumentRegisterAccessRights)base.AccessRights;
      }
    }

    protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
    {
      return new global::Sungero.Docflow.Client.DocumentRegisterAccessRights(this);
    }

        protected global::Sungero.Domain.Client.SimpleProperty<global::System.String> _Name;

        public virtual global::System.String Name
        {
          get { return this._Name.Value; }
          set { this._Name.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.String> _Index;

        public virtual global::System.String Index
        {
          get { return this._Index.Value; }
          set { this._Index.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.Int32?> _NumberOfDigitsInNumber;

        public virtual global::System.Int32? NumberOfDigitsInNumber
        {
          get { return this._NumberOfDigitsInNumber.Value; }
          set { this._NumberOfDigitsInNumber.Value = value; }
        }
        protected global::Sungero.Domain.Client.EnumSimpleProperty<global::Sungero.Core.Enumeration?> _DocumentFlow;

        public virtual global::Sungero.Core.Enumeration? DocumentFlow
        {
          get { return this._DocumentFlow.Value; }
          set { this._DocumentFlow.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.String> _ValueExample;

        public virtual global::System.String ValueExample
        {
          get { return this._ValueExample.Value; }
          set { this._ValueExample.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.String> _DisplayName;

        public virtual global::System.String DisplayName
        {
          get { return this._DisplayName.Value; }
          set { this._DisplayName.Value = value; }
        }
        protected global::Sungero.Domain.Client.EnumSimpleProperty<global::Sungero.Core.Enumeration?> _RegisterType;

        public virtual global::Sungero.Core.Enumeration? RegisterType
        {
          get { return this._RegisterType.Value; }
          set { this._RegisterType.Value = value; }
        }
        protected global::Sungero.Domain.Client.EnumSimpleProperty<global::Sungero.Core.Enumeration?> _NumberingPeriod;

        public virtual global::Sungero.Core.Enumeration? NumberingPeriod
        {
          get { return this._NumberingPeriod.Value; }
          set { this._NumberingPeriod.Value = value; }
        }
        protected global::Sungero.Domain.Client.EnumSimpleProperty<global::Sungero.Core.Enumeration?> _NumberingSection;

        public virtual global::Sungero.Core.Enumeration? NumberingSection
        {
          get { return this._NumberingSection.Value; }
          set { this._NumberingSection.Value = value; }
        }


        private static global::Sungero.Domain.Shared.EnumerationItems _DocumentFlowItems = new global::Sungero.Domain.Shared.EnumerationItems(
          null,
          typeof(global::Sungero.Docflow.DocumentRegister.DocumentFlow),
          typeof(global::Sungero.Docflow.Client.DocumentRegister),
          "DocumentFlow");

        public static global::Sungero.Domain.Shared.EnumerationItems DocumentFlowItems
        {
          get { return global::Sungero.Docflow.Client.DocumentRegister._DocumentFlowItems; }
        }

        public virtual global::Sungero.Domain.Shared.EnumerationItems DocumentFlowAllowedItems
        {
          get { return global::Sungero.Docflow.Client.DocumentRegister.DocumentFlowItems; }
        }

        private static global::Sungero.Domain.Shared.EnumerationItems _RegisterTypeItems = new global::Sungero.Domain.Shared.EnumerationItems(
          null,
          typeof(global::Sungero.Docflow.DocumentRegister.RegisterType),
          typeof(global::Sungero.Docflow.Client.DocumentRegister),
          "RegisterType");

        public static global::Sungero.Domain.Shared.EnumerationItems RegisterTypeItems
        {
          get { return global::Sungero.Docflow.Client.DocumentRegister._RegisterTypeItems; }
        }

        public virtual global::Sungero.Domain.Shared.EnumerationItems RegisterTypeAllowedItems
        {
          get { return global::Sungero.Docflow.Client.DocumentRegister.RegisterTypeItems; }
        }

        private static global::Sungero.Domain.Shared.EnumerationItems _NumberingPeriodItems = new global::Sungero.Domain.Shared.EnumerationItems(
          null,
          typeof(global::Sungero.Docflow.DocumentRegister.NumberingPeriod),
          typeof(global::Sungero.Docflow.Client.DocumentRegister),
          "NumberingPeriod");

        public static global::Sungero.Domain.Shared.EnumerationItems NumberingPeriodItems
        {
          get { return global::Sungero.Docflow.Client.DocumentRegister._NumberingPeriodItems; }
        }

        public virtual global::Sungero.Domain.Shared.EnumerationItems NumberingPeriodAllowedItems
        {
          get { return global::Sungero.Docflow.Client.DocumentRegister.NumberingPeriodItems; }
        }

        private static global::Sungero.Domain.Shared.EnumerationItems _NumberingSectionItems = new global::Sungero.Domain.Shared.EnumerationItems(
          null,
          typeof(global::Sungero.Docflow.DocumentRegister.NumberingSection),
          typeof(global::Sungero.Docflow.Client.DocumentRegister),
          "NumberingSection");

        public static global::Sungero.Domain.Shared.EnumerationItems NumberingSectionItems
        {
          get { return global::Sungero.Docflow.Client.DocumentRegister._NumberingSectionItems; }
        }

        public virtual global::Sungero.Domain.Shared.EnumerationItems NumberingSectionAllowedItems
        {
          get { return global::Sungero.Docflow.Client.DocumentRegister.NumberingSectionItems; }
        }




              protected global::Sungero.Domain.Client.INavigationProperty<global::Sungero.Docflow.IRegistrationGroup> _RegistrationGroup;

              public virtual global::Sungero.Docflow.IRegistrationGroup RegistrationGroup
              {
              get
              {
                return this._RegistrationGroup.Value as global::Sungero.Docflow.IRegistrationGroup;
              }

              set
              {
                (this._RegistrationGroup as global::Sungero.Domain.Client.IProperty).Value = value;
              }
            }







          protected global::Sungero.Domain.Client.IListProperty<global::Sungero.Docflow.IDocumentRegisterNumberFormatItems> _NumberFormatItems;

          virtual public global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Docflow.IDocumentRegisterNumberFormatItems> NumberFormatItems
          {
            get { return this._NumberFormatItems.Value; }
          }






    private object _NumberFormatItemsActionsHandlers;

    public object NumberFormatItemsActionsHandlers
    {
      get
      {
        if (this._NumberFormatItemsActionsHandlers == null)
          this._NumberFormatItemsActionsHandlers = this.CreateNumberFormatItemsActionsHandlers();
        return this._NumberFormatItemsActionsHandlers;
      }
    }

    private object _NumberFormatItemsCollectionActionsHandlers;

    public object NumberFormatItemsCollectionActionsHandlers
    {
      get
      {
        if (this._NumberFormatItemsCollectionActionsHandlers == null)
          this._NumberFormatItemsCollectionActionsHandlers = this.CreateNumberFormatItemsCollectionActionsHandlers();
        return this._NumberFormatItemsCollectionActionsHandlers;
      }
    }

    #endregion

    #region Methods

    protected override object CreateActionsHandlers()
    {
      return new global::Sungero.Docflow.Client.DocumentRegisterActions(this);
    }

    protected override object CreateCollectionActionsHandlers()
    {
      return new global::Sungero.Docflow.Client.DocumentRegisterCollectionActions();
    }

    protected override object CreateAnyChildEntityActionsHandlers()
    {
      return new global::Sungero.Docflow.Client.DocumentRegisterAnyChildEntityActions();
    }

    protected override object CreateAnyChildEntityCollectionActionsHandlers()
    {
      return new global::Sungero.Docflow.Client.DocumentRegisterAnyChildEntityCollectionActions();
    }

    protected object CreateNumberFormatItemsActionsHandlers()
    {
      return null;
    }

    protected object CreateNumberFormatItemsCollectionActionsHandlers()
    {
      return null;
    }


    protected override global::Sungero.Domain.Client.EntityFunctions CreateClientFunctions()
    {
      return new global::Sungero.Docflow.Client.DocumentRegisterFunctions(this);
    }

    protected override global::Sungero.Domain.Shared.EntityFunctions CreateSharedFunctions()
    {
      return new global::Sungero.Docflow.Shared.DocumentRegisterFunctions(this);
    }
    protected override object CreateHandlers() {
      return new global::Sungero.Docflow.DocumentRegisterClientHandlers(this);
    }
    protected override object CreateSharedHandlers() {
      return new global::Sungero.Docflow.DocumentRegisterSharedHandlers(this);
    }

    #endregion

    #region Framework events

    protected void NameChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.Name, this.Name, this);
     ((global::Sungero.Docflow.DocumentRegisterSharedHandlers)this.SharedHandlers).NameChanged(args);
    }

    protected void IndexChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.Index, this.Index, this);
     ((global::Sungero.Docflow.DocumentRegisterSharedHandlers)this.SharedHandlers).IndexChanged(args);
    }

    protected void NumberOfDigitsInNumberChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.IntegerPropertyChangedEventArgs(this.State.Properties.NumberOfDigitsInNumber, this.NumberOfDigitsInNumber, this);
     ((global::Sungero.Docflow.DocumentRegisterSharedHandlers)this.SharedHandlers).NumberOfDigitsInNumberChanged(args);
    }

    protected void DocumentFlowChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.EnumerationPropertyChangedEventArgs(this.State.Properties.DocumentFlow, this.DocumentFlow, this);
     ((global::Sungero.Docflow.DocumentRegisterSharedHandlers)this.SharedHandlers).DocumentFlowChanged(args);
    }

    protected void NumberFormatItemsChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.CollectionPropertyChangedEventArgs(this);
     ((global::Sungero.Docflow.DocumentRegisterSharedHandlers)this.SharedHandlers).NumberFormatItemsChanged(args);
    }

    protected void ValueExampleChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.ValueExample, this.ValueExample, this);
     ((global::Sungero.Docflow.DocumentRegisterSharedHandlers)this.SharedHandlers).ValueExampleChanged(args);
    }

    protected void RegistrationGroupChangedHandler()
    {
      var args = new global::Sungero.Docflow.Shared.DocumentRegisterRegistrationGroupChangedEventArgs(this.State.Properties.RegistrationGroup, this.RegistrationGroup, this);
     ((global::Sungero.Docflow.DocumentRegisterSharedHandlers)this.SharedHandlers).RegistrationGroupChanged(args);
    }

    protected void DisplayNameChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.DisplayName, this.DisplayName, this);
     ((global::Sungero.Docflow.DocumentRegisterSharedHandlers)this.SharedHandlers).DisplayNameChanged(args);
    }

    protected void RegisterTypeChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.EnumerationPropertyChangedEventArgs(this.State.Properties.RegisterType, this.RegisterType, this);
     ((global::Sungero.Docflow.DocumentRegisterSharedHandlers)this.SharedHandlers).RegisterTypeChanged(args);
    }

    protected void NumberingPeriodChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.EnumerationPropertyChangedEventArgs(this.State.Properties.NumberingPeriod, this.NumberingPeriod, this);
     ((global::Sungero.Docflow.DocumentRegisterSharedHandlers)this.SharedHandlers).NumberingPeriodChanged(args);
    }

    protected void NumberingSectionChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.EnumerationPropertyChangedEventArgs(this.State.Properties.NumberingSection, this.NumberingSection, this);
     ((global::Sungero.Docflow.DocumentRegisterSharedHandlers)this.SharedHandlers).NumberingSectionChanged(args);
    }



    protected virtual global::Sungero.Docflow.DocumentRegisterNumberFormatItemsSharedCollectionHandlers CreateNumberFormatItemsAddedHandler(global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.Docflow.DocumentRegisterNumberFormatItemsSharedCollectionHandlers(this, e.Value, null, e.Source);
    }

    protected virtual global::Sungero.Docflow.DocumentRegisterNumberFormatItemsSharedCollectionHandlers CreateNumberFormatItemsDeletedHandler(global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.Docflow.DocumentRegisterNumberFormatItemsSharedCollectionHandlers(this, null, e.Value, null);
    }

    protected virtual void NumberFormatItemsAddedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {  
      var collectionHandlers = this.CreateNumberFormatItemsAddedHandler(e);
      if (collectionHandlers != null)
      {
        var args = new global::Sungero.Domain.Shared.CollectionPropertyAddedEventArgs(this);
        collectionHandlers.NumberFormatItemsAdded(args);
      }
    }

    protected virtual void NumberFormatItemsDeletedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {  
      var collectionHandlers = this.CreateNumberFormatItemsDeletedHandler(e);
      if (collectionHandlers != null)
      {
        var args = new global::Sungero.Domain.Shared.CollectionPropertyDeletedEventArgs(this);
        collectionHandlers.NumberFormatItemsDeleted(args);
      }
    }


  protected global::System.String NameValueInputHandler(global::System.String value)
  {
    var args = new global::Sungero.Presentation.StringValueInputEventArgs(this.Name, value, this, this.Info.Properties.Name);
    ((global::Sungero.Docflow.DocumentRegisterClientHandlers)this.Handlers).NameValueInput(args);
    return args.NewValue;
  }

  protected global::System.String IndexValueInputHandler(global::System.String value)
  {
    var args = new global::Sungero.Presentation.StringValueInputEventArgs(this.Index, value, this, this.Info.Properties.Index);
    ((global::Sungero.Docflow.DocumentRegisterClientHandlers)this.Handlers).IndexValueInput(args);
    return args.NewValue;
  }

  protected global::System.Int32? NumberOfDigitsInNumberValueInputHandler(global::System.Int32? value)
  {
    var args = new global::Sungero.Presentation.IntegerValueInputEventArgs(this.NumberOfDigitsInNumber, value, this, this.Info.Properties.NumberOfDigitsInNumber);
    ((global::Sungero.Docflow.DocumentRegisterClientHandlers)this.Handlers).NumberOfDigitsInNumberValueInput(args);
    return args.NewValue;
  }

  protected global::Sungero.Core.Enumeration? DocumentFlowValueInputHandler(global::Sungero.Core.Enumeration? value)
  {
    var args = new global::Sungero.Presentation.EnumerationValueInputEventArgs(this.DocumentFlow, value, this, this.Info.Properties.DocumentFlow);
    ((global::Sungero.Docflow.DocumentRegisterClientHandlers)this.Handlers).DocumentFlowValueInput(args);
    return args.NewValue;
  }


  protected global::System.String ValueExampleValueInputHandler(global::System.String value)
  {
    var args = new global::Sungero.Presentation.StringValueInputEventArgs(this.ValueExample, value, this, this.Info.Properties.ValueExample);
    ((global::Sungero.Docflow.DocumentRegisterClientHandlers)this.Handlers).ValueExampleValueInput(args);
    return args.NewValue;
  }

  protected global::Sungero.Docflow.IRegistrationGroup RegistrationGroupValueInputHandler(global::Sungero.Docflow.IRegistrationGroup value)
  {
    var args = new global::Sungero.Docflow.Client.DocumentRegisterRegistrationGroupValueInputEventArgs(this.RegistrationGroup, value, this, this.Info.Properties.RegistrationGroup);
    ((global::Sungero.Docflow.DocumentRegisterClientHandlers)this.Handlers).RegistrationGroupValueInput(args);
    return args.NewValue;
  }

  protected global::System.String DisplayNameValueInputHandler(global::System.String value)
  {
    var args = new global::Sungero.Presentation.StringValueInputEventArgs(this.DisplayName, value, this, this.Info.Properties.DisplayName);
    ((global::Sungero.Docflow.DocumentRegisterClientHandlers)this.Handlers).DisplayNameValueInput(args);
    return args.NewValue;
  }

  protected global::Sungero.Core.Enumeration? RegisterTypeValueInputHandler(global::Sungero.Core.Enumeration? value)
  {
    var args = new global::Sungero.Presentation.EnumerationValueInputEventArgs(this.RegisterType, value, this, this.Info.Properties.RegisterType);
    ((global::Sungero.Docflow.DocumentRegisterClientHandlers)this.Handlers).RegisterTypeValueInput(args);
    return args.NewValue;
  }

  protected global::Sungero.Core.Enumeration? NumberingPeriodValueInputHandler(global::Sungero.Core.Enumeration? value)
  {
    var args = new global::Sungero.Presentation.EnumerationValueInputEventArgs(this.NumberingPeriod, value, this, this.Info.Properties.NumberingPeriod);
    ((global::Sungero.Docflow.DocumentRegisterClientHandlers)this.Handlers).NumberingPeriodValueInput(args);
    return args.NewValue;
  }

  protected global::Sungero.Core.Enumeration? NumberingSectionValueInputHandler(global::Sungero.Core.Enumeration? value)
  {
    var args = new global::Sungero.Presentation.EnumerationValueInputEventArgs(this.NumberingSection, value, this, this.Info.Properties.NumberingSection);
    ((global::Sungero.Docflow.DocumentRegisterClientHandlers)this.Handlers).NumberingSectionValueInput(args);
    return args.NewValue;
  }


  protected global::System.Collections.Generic.IEnumerable<global::Sungero.Core.Enumeration> DocumentFlowFilteringHandler()
  {
    return ((global::Sungero.Docflow.DocumentRegisterClientHandlers)this.Handlers).DocumentFlowFiltering(this.DocumentFlowAllowedItems);
  }





  protected global::System.Collections.Generic.IEnumerable<global::Sungero.Core.Enumeration> RegisterTypeFilteringHandler()
  {
    return ((global::Sungero.Docflow.DocumentRegisterClientHandlers)this.Handlers).RegisterTypeFiltering(this.RegisterTypeAllowedItems);
  }

  protected global::System.Collections.Generic.IEnumerable<global::Sungero.Core.Enumeration> NumberingPeriodFilteringHandler()
  {
    return ((global::Sungero.Docflow.DocumentRegisterClientHandlers)this.Handlers).NumberingPeriodFiltering(this.NumberingPeriodAllowedItems);
  }

  protected global::System.Collections.Generic.IEnumerable<global::Sungero.Core.Enumeration> NumberingSectionFilteringHandler()
  {
    return ((global::Sungero.Docflow.DocumentRegisterClientHandlers)this.Handlers).NumberingSectionFiltering(this.NumberingSectionAllowedItems);
  }


    #endregion

    #region Constructors



              protected virtual void InitRegistrationGroupNavigationProperty()
              {
                this._RegistrationGroup = new global::Sungero.Domain.Client.NavigationProperty<global::Sungero.Docflow.IRegistrationGroup>("RegistrationGroup", this);
                this._RegistrationGroup.ValueChanged += (sender, e) => { this.RegistrationGroupChangedHandler(); };
                this.AddProperty(this._RegistrationGroup as global::Sungero.Domain.Client.IProperty);
              }



            protected virtual void InitNumberFormatItemsCollectionProperty()
            {
              this._NumberFormatItems = new global::Sungero.Domain.Client.ListProperty<global::Sungero.Docflow.IDocumentRegisterNumberFormatItems>("NumberFormatItems", this);
              this._NumberFormatItems.ValueChanged += (sender, e) => { this.NumberFormatItemsChangedHandler(); };
              this.AddProperty((global::Sungero.Domain.Client.IProperty)this._NumberFormatItems);
              this.SetNumberFormatItemsEventHandlers();
            }

            protected void SetNumberFormatItemsEventHandlers()
            {
              this._NumberFormatItems.ChildEntityAdded += this.NumberFormatItemsAddedHandler;
              this._NumberFormatItems.ChildEntityDeleted += this.NumberFormatItemsDeletedHandler;
            }


    public DocumentRegister()
    {
            this._Name = new global::Sungero.Domain.Client.SimpleProperty<global::System.String>("Name", this);
            this._Name.ValueChanged += (sender, e) => { this.NameChangedHandler(); };
            this.AddProperty(this._Name);

            this._Index = new global::Sungero.Domain.Client.SimpleProperty<global::System.String>("Index", this);
            this._Index.ValueChanged += (sender, e) => { this.IndexChangedHandler(); };
            this.AddProperty(this._Index);

            this._NumberOfDigitsInNumber = new global::Sungero.Domain.Client.SimpleProperty<global::System.Int32?>("NumberOfDigitsInNumber", this);
            this._NumberOfDigitsInNumber.ValueChanged += (sender, e) => { this.NumberOfDigitsInNumberChangedHandler(); };
            this.AddProperty(this._NumberOfDigitsInNumber);

            this._DocumentFlow = new global::Sungero.Domain.Client.EnumSimpleProperty<global::Sungero.Core.Enumeration?>("DocumentFlow", this);
            this._DocumentFlow.ValueChanged += (sender, e) => { this.DocumentFlowChangedHandler(); };
            this.AddProperty(this._DocumentFlow);

            this._ValueExample = new global::Sungero.Domain.Client.SimpleProperty<global::System.String>("ValueExample", this);
            this._ValueExample.ValueChanged += (sender, e) => { this.ValueExampleChangedHandler(); };
            this.AddProperty(this._ValueExample);

            this._DisplayName = new global::Sungero.Domain.Client.SimpleProperty<global::System.String>("DisplayName", this);
            this._DisplayName.ValueChanged += (sender, e) => { this.DisplayNameChangedHandler(); };
            this.AddProperty(this._DisplayName);

            this._RegisterType = new global::Sungero.Domain.Client.EnumSimpleProperty<global::Sungero.Core.Enumeration?>("RegisterType", this);
            this._RegisterType.ValueChanged += (sender, e) => { this.RegisterTypeChangedHandler(); };
            this.AddProperty(this._RegisterType);

            this._NumberingPeriod = new global::Sungero.Domain.Client.EnumSimpleProperty<global::Sungero.Core.Enumeration?>("NumberingPeriod", this);
            this._NumberingPeriod.ValueChanged += (sender, e) => { this.NumberingPeriodChangedHandler(); };
            this.AddProperty(this._NumberingPeriod);

            this._NumberingSection = new global::Sungero.Domain.Client.EnumSimpleProperty<global::Sungero.Core.Enumeration?>("NumberingSection", this);
            this._NumberingSection.ValueChanged += (sender, e) => { this.NumberingSectionChangedHandler(); };
            this.AddProperty(this._NumberingSection);

            this.InitRegistrationGroupNavigationProperty();


            this.InitNumberFormatItemsCollectionProperty();







    }

    #endregion

  }
}

// ==================================================================
// DocumentRegisterPresenter.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Client
{
  public class DocumentRegisterPresenter<T> :
    global::Sungero.Domain.Client.EntityPresenter<T>
    where T : class, global::Sungero.Docflow.IDocumentRegister
  {
    #region Fields and properties

          private global::System.Windows.Input.ICommand _SetNextNumberCommand;

          public global::System.Windows.Input.ICommand SetNextNumberCommand
          {
            get
            {
              if (this._SetNextNumberCommand == null)
                  this._SetNextNumberCommand = new global::Sungero.Domain.Client.SingleEntityCommand<T>("SetNextNumber", this, this.SetNextNumber, this.CanSetNextNumber) { IsEmptyParameterAllowed = true };
              return this._SetNextNumberCommand;
            }
          }
          private global::System.Windows.Input.ICommand _ShowDocumentRegisterCommand;

          public global::System.Windows.Input.ICommand ShowDocumentRegisterCommand
          {
            get
            {
              if (this._ShowDocumentRegisterCommand == null)
                  this._ShowDocumentRegisterCommand = new global::Sungero.Domain.Client.SingleEntityCommand<T>("ShowDocumentRegister", this, this.ShowDocumentRegister, this.CanShowDocumentRegister) { IsEmptyParameterAllowed = true };
              return this._ShowDocumentRegisterCommand;
            }
          }
          private global::System.Windows.Input.ICommand _ShowSkippedNumbersCommand;

          public global::System.Windows.Input.ICommand ShowSkippedNumbersCommand
          {
            get
            {
              if (this._ShowSkippedNumbersCommand == null)
                  this._ShowSkippedNumbersCommand = new global::Sungero.Domain.Client.SingleEntityCommand<T>("ShowSkippedNumbers", this, this.ShowSkippedNumbers, this.CanShowSkippedNumbers) { IsEmptyParameterAllowed = true };
              return this._ShowSkippedNumbersCommand;
            }
          }
          private global::System.Windows.Input.ICommand _ShowRegisteredDocumentsCommand;

          public global::System.Windows.Input.ICommand ShowRegisteredDocumentsCommand
          {
            get
            {
              if (this._ShowRegisteredDocumentsCommand == null)
                  this._ShowRegisteredDocumentsCommand = new global::Sungero.Domain.Client.SingleEntityCommand<T>("ShowRegisteredDocuments", this, this.ShowRegisteredDocuments, this.CanShowRegisteredDocuments) { IsEmptyParameterAllowed = true };
              return this._ShowRegisteredDocumentsCommand;
            }
          }
          private global::System.Windows.Input.ICommand _ShowDepartmentsCommand;

          public global::System.Windows.Input.ICommand ShowDepartmentsCommand
          {
            get
            {
              if (this._ShowDepartmentsCommand == null)
                  this._ShowDepartmentsCommand = new global::Sungero.Domain.Client.SingleEntityCommand<T>("ShowDepartments", this, this.ShowDepartments, this.CanShowDepartments) { IsEmptyParameterAllowed = true };
              return this._ShowDepartmentsCommand;
            }
          }
          private global::System.Windows.Input.ICommand _ShowBusinessUnitsCommand;

          public global::System.Windows.Input.ICommand ShowBusinessUnitsCommand
          {
            get
            {
              if (this._ShowBusinessUnitsCommand == null)
                  this._ShowBusinessUnitsCommand = new global::Sungero.Domain.Client.SingleEntityCommand<T>("ShowBusinessUnits", this, this.ShowBusinessUnits, this.CanShowBusinessUnits) { IsEmptyParameterAllowed = true };
              return this._ShowBusinessUnitsCommand;
            }
          }
          private global::System.Windows.Input.ICommand _ShowDocumentKindsCommand;

          public global::System.Windows.Input.ICommand ShowDocumentKindsCommand
          {
            get
            {
              if (this._ShowDocumentKindsCommand == null)
                  this._ShowDocumentKindsCommand = new global::Sungero.Domain.Client.SingleEntityCommand<T>("ShowDocumentKinds", this, this.ShowDocumentKinds, this.CanShowDocumentKinds) { IsEmptyParameterAllowed = true };
              return this._ShowDocumentKindsCommand;
            }
          }




    #endregion

    #region Methods

              private bool CanSetNextNumber(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfCanExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this);
                return ((Sungero.Docflow.Client.DocumentRegisterActions)(entity as Sungero.Docflow.Client.DocumentRegister).ActionsHandlers).CanSetNextNumber(args);
              }

              private void SetNextNumber(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this, entity.Info.Actions.SetNextNumber);
                ((Sungero.Docflow.Client.DocumentRegisterActions)(entity as Sungero.Docflow.Client.DocumentRegister).ActionsHandlers).SetNextNumber(args);
              }

              private bool CanShowDocumentRegister(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfCanExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this);
                return ((Sungero.Docflow.Client.DocumentRegisterActions)(entity as Sungero.Docflow.Client.DocumentRegister).ActionsHandlers).CanShowDocumentRegister(args);
              }

              private void ShowDocumentRegister(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this, entity.Info.Actions.ShowDocumentRegister);
                ((Sungero.Docflow.Client.DocumentRegisterActions)(entity as Sungero.Docflow.Client.DocumentRegister).ActionsHandlers).ShowDocumentRegister(args);
              }

              private bool CanShowSkippedNumbers(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfCanExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this);
                return ((Sungero.Docflow.Client.DocumentRegisterActions)(entity as Sungero.Docflow.Client.DocumentRegister).ActionsHandlers).CanShowSkippedNumbers(args);
              }

              private void ShowSkippedNumbers(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this, entity.Info.Actions.ShowSkippedNumbers);
                ((Sungero.Docflow.Client.DocumentRegisterActions)(entity as Sungero.Docflow.Client.DocumentRegister).ActionsHandlers).ShowSkippedNumbers(args);
              }

              private bool CanShowRegisteredDocuments(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfCanExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this);
                return ((Sungero.Docflow.Client.DocumentRegisterActions)(entity as Sungero.Docflow.Client.DocumentRegister).ActionsHandlers).CanShowRegisteredDocuments(args);
              }

              private void ShowRegisteredDocuments(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this, entity.Info.Actions.ShowRegisteredDocuments);
                ((Sungero.Docflow.Client.DocumentRegisterActions)(entity as Sungero.Docflow.Client.DocumentRegister).ActionsHandlers).ShowRegisteredDocuments(args);
              }

              private bool CanShowDepartments(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfCanExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this);
                return ((Sungero.Docflow.Client.DocumentRegisterActions)(entity as Sungero.Docflow.Client.DocumentRegister).ActionsHandlers).CanShowDepartments(args);
              }

              private void ShowDepartments(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this, entity.Info.Actions.ShowDepartments);
                ((Sungero.Docflow.Client.DocumentRegisterActions)(entity as Sungero.Docflow.Client.DocumentRegister).ActionsHandlers).ShowDepartments(args);
              }

              private bool CanShowBusinessUnits(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfCanExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this);
                return ((Sungero.Docflow.Client.DocumentRegisterActions)(entity as Sungero.Docflow.Client.DocumentRegister).ActionsHandlers).CanShowBusinessUnits(args);
              }

              private void ShowBusinessUnits(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this, entity.Info.Actions.ShowBusinessUnits);
                ((Sungero.Docflow.Client.DocumentRegisterActions)(entity as Sungero.Docflow.Client.DocumentRegister).ActionsHandlers).ShowBusinessUnits(args);
              }

              private bool CanShowDocumentKinds(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfCanExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this);
                return ((Sungero.Docflow.Client.DocumentRegisterActions)(entity as Sungero.Docflow.Client.DocumentRegister).ActionsHandlers).CanShowDocumentKinds(args);
              }

              private void ShowDocumentKinds(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this, entity.Info.Actions.ShowDocumentKinds);
                ((Sungero.Docflow.Client.DocumentRegisterActions)(entity as Sungero.Docflow.Client.DocumentRegister).ActionsHandlers).ShowDocumentKinds(args);
              }


    #endregion

    #region Framework events

    protected override void EntityPropertyChangedEventHandler(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
    {
      base.EntityPropertyChangedEventHandler(sender, e);
    }

    #endregion

              protected global::Sungero.Domain.Client.IEntityCollectionPresenter _RegistrationGroupCollectionPresenter;
              public global::Sungero.Domain.Client.IEntityCollectionPresenter RegistrationGroupCollectionPresenter
              {
          get { return this._RegistrationGroupCollectionPresenter; }
        }



    #region Constructors

    private void Init()
    {
                  this._RegistrationGroupCollectionPresenter = this.CreateCollectionPresenterForNavigationProperty<global::Sungero.Docflow.IRegistrationGroup>(global::System.Guid.Parse("c4c64e0a-012f-4475-8c30-b6232b08d966"));
              this._RegistrationGroupCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationProperty<global::Sungero.Docflow.IRegistrationGroup>(() => this.Entity, typeof(T), "RegistrationGroup");


    }

    public DocumentRegisterPresenter()
    {
      this.Init();
    }

    #endregion
  }
}

// ==================================================================
// DocumentRegisterCollectionPresenter.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Client
{
  public class DocumentRegisterCollectionPresenter<T> : 
    global::Sungero.Domain.Client.EntityCollectionPresenter<T>
    where T: class, global::Sungero.Docflow.IDocumentRegister
  {
    #region Actions

          private global::System.Windows.Input.ICommand _ShowDocumentRegisterCommand;  

          public global::System.Windows.Input.ICommand ShowDocumentRegisterCommand 
          { 
            get
            { 
              if (this._ShowDocumentRegisterCommand == null)
                this._ShowDocumentRegisterCommand = new global::Sungero.Domain.Client.SingleEntityCommand<T>("ShowDocumentRegister", this, this.ShowDocumentRegister, this.CanShowDocumentRegister) { IsEmptyParameterAllowed = true };
              return this._ShowDocumentRegisterCommand; 
            }
          }
          private global::System.Windows.Input.ICommand _ShowSkippedNumbersCommand;  

          public global::System.Windows.Input.ICommand ShowSkippedNumbersCommand 
          { 
            get
            { 
              if (this._ShowSkippedNumbersCommand == null)
                this._ShowSkippedNumbersCommand = new global::Sungero.Domain.Client.SingleEntityCommand<T>("ShowSkippedNumbers", this, this.ShowSkippedNumbers, this.CanShowSkippedNumbers) { IsEmptyParameterAllowed = true };
              return this._ShowSkippedNumbersCommand; 
            }
          }



    #endregion

    #region Methods

        private bool CanShowDocumentRegister(T entity)
        {
          var args = new global::Sungero.Domain.Client.WpfCanExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Collection, entity, this);
          return ((Sungero.Docflow.Client.DocumentRegisterActions)(entity as Sungero.Docflow.Client.DocumentRegister).ActionsHandlers).CanShowDocumentRegister(args);
        }

        private void ShowDocumentRegister(T entity)
        {
          var args = new global::Sungero.Domain.Client.WpfExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Collection, entity, this, entity.Info.Actions.ShowDocumentRegister);
          ((Sungero.Docflow.Client.DocumentRegisterActions)(entity as Sungero.Docflow.Client.DocumentRegister).ActionsHandlers).ShowDocumentRegister(args);
        }

        private bool CanShowSkippedNumbers(T entity)
        {
          var args = new global::Sungero.Domain.Client.WpfCanExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Collection, entity, this);
          return ((Sungero.Docflow.Client.DocumentRegisterActions)(entity as Sungero.Docflow.Client.DocumentRegister).ActionsHandlers).CanShowSkippedNumbers(args);
        }

        private void ShowSkippedNumbers(T entity)
        {
          var args = new global::Sungero.Domain.Client.WpfExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Collection, entity, this, entity.Info.Actions.ShowSkippedNumbers);
          ((Sungero.Docflow.Client.DocumentRegisterActions)(entity as Sungero.Docflow.Client.DocumentRegister).ActionsHandlers).ShowSkippedNumbers(args);
        }



    #endregion

    public DocumentRegisterCollectionPresenter(global::System.Linq.IQueryable<T> query, OnLookup onLookup)
      : base(query, onLookup)
    {
    }

    public DocumentRegisterCollectionPresenter(global::System.Linq.IQueryable<T> query)
      : this(query, null) { }

    public DocumentRegisterCollectionPresenter(OnLookup onLookup)
      : this(null, onLookup) { }

    public DocumentRegisterCollectionPresenter()
      : this(null, null) { }
  }
}

// ==================================================================
// DocumentRegisterRepositoryImplementer.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Client
{ 
  public class DocumentRegisterRepositoryImplementer<T> : 
      global::Sungero.Domain.Client.RepositoryImplementer<T>,
      global::Sungero.Docflow.IDocumentRegisterRepositoryImplementer<T>
      where T : global::Sungero.Docflow.IDocumentRegister
    {
       public new global::Sungero.Docflow.IDocumentRegisterAccessRights AccessRights
       {
          get { return (global::Sungero.Docflow.IDocumentRegisterAccessRights)base.AccessRights; }
       }

       public new global::Sungero.Docflow.IDocumentRegisterInfo Info
       {
          get { return (global::Sungero.Docflow.IDocumentRegisterInfo)base.Info; }
       }

       protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
       {
         return new global::Sungero.Docflow.Client.DocumentRegisterTypeAccessRights(typeof(T));
       }
    }
}

// ==================================================================
// DocumentRegisterAccessRights.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Client
{
  public class DocumentRegisterAccessRights : 
    Sungero.CoreEntities.Client.DatabookEntryAccessRights, Sungero.Docflow.IDocumentRegisterAccessRights
  {

    public DocumentRegisterAccessRights(global::Sungero.Domain.Shared.IEntity entity) : base(entity)
    {
    }
  }

  public class DocumentRegisterTypeAccessRights : 
    Sungero.CoreEntities.Client.DatabookEntryTypeAccessRights, Sungero.Docflow.IDocumentRegisterAccessRights
  {

    public DocumentRegisterTypeAccessRights(global::System.Type entityType) : base(entityType)
    {
    }
  }
}
