
// ==================================================================
// OfficialDocument.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Client
{
  public class OfficialDocument :
    global::Sungero.Content.Client.ElectronicDocument, global::Sungero.Docflow.IOfficialDocument
  {
    #region Fields and properties

    public static new readonly global::System.Guid ClassTypeGuid = global::System.Guid.Parse("58cca102-1e97-4f07-b6ac-fd866a8b7cb1");

    public override global::System.Guid TypeGuid
    {
      get { return global::Sungero.Docflow.Client.OfficialDocument.ClassTypeGuid; }
    }

    public override string TypeName
    {
      get { return "Sungero.Docflow.IOfficialDocument, Sungero.Domain.Interfaces"; }
    }

      public override string DisplayValue
      {
        get { return this.Name; }
        set { this.Name = value; }
      }

      public override string DisplayPropertyName
      {
        get { return "Name"; }
      }


    public new global::Sungero.Docflow.IOfficialDocumentState State
    {
      get
      {
        return (global::Sungero.Docflow.IOfficialDocumentState)base.State;
      }
    }

    protected override global::Sungero.Domain.Shared.IEntityState CreateState()
    {
      return new global::Sungero.Docflow.Shared.OfficialDocumentState(this);
    }

    public new global::Sungero.Docflow.IOfficialDocumentInfo Info
    {
      get
      {
        return (global::Sungero.Docflow.IOfficialDocumentInfo)base.Info;
      }
    }

    public new global::Sungero.Docflow.IOfficialDocumentAccessRights AccessRights
    {
      get
      {
        return (global::Sungero.Docflow.IOfficialDocumentAccessRights)base.AccessRights;
      }
    }

    protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
    {
      return new global::Sungero.Docflow.Client.OfficialDocumentAccessRights(this);
    }

        protected global::Sungero.Domain.Client.SimpleProperty<global::System.String> _RegistrationNumber;

        public virtual global::System.String RegistrationNumber
        {
          get { return this._RegistrationNumber.Value; }
          set { this._RegistrationNumber.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.Int32?> _Index;

        public virtual global::System.Int32? Index
        {
          get { return this._Index.Value; }
          set { this._Index.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.DateTime?> _RegistrationDate;

        public virtual global::System.DateTime? RegistrationDate
        {
          get { return this._RegistrationDate.Value; }
          set { this._RegistrationDate.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.DateTime?> _PlacedToCaseFileDate;

        public virtual global::System.DateTime? PlacedToCaseFileDate
        {
          get { return this._PlacedToCaseFileDate.Value; }
          set { this._PlacedToCaseFileDate.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.Boolean?> _IsReturnRequired;

        public virtual global::System.Boolean? IsReturnRequired
        {
          get { return this._IsReturnRequired.Value; }
          set { this._IsReturnRequired.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.Boolean?> _IsHeldByCounterParty;

        public virtual global::System.Boolean? IsHeldByCounterParty
        {
          get { return this._IsHeldByCounterParty.Value; }
          set { this._IsHeldByCounterParty.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.DateTime?> _ReturnDeadline;

        public virtual global::System.DateTime? ReturnDeadline
        {
          get { return this._ReturnDeadline.Value; }
          set { this._ReturnDeadline.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.DateTime?> _ReturnDate;

        public virtual global::System.DateTime? ReturnDate
        {
          get { return this._ReturnDate.Value; }
          set { this._ReturnDate.Value = value; }
        }
        protected global::Sungero.Domain.Client.EnumSimpleProperty<global::Sungero.Core.Enumeration?> _LifeCycleState;

        public virtual global::Sungero.Core.Enumeration? LifeCycleState
        {
          get { return this._LifeCycleState.Value; }
          set { this._LifeCycleState.Value = value; }
        }
        protected global::Sungero.Domain.Client.EnumSimpleProperty<global::Sungero.Core.Enumeration?> _RegistrationState;

        public virtual global::Sungero.Core.Enumeration? RegistrationState
        {
          get { return this._RegistrationState.Value; }
          set { this._RegistrationState.Value = value; }
        }
        protected global::Sungero.Domain.Client.EnumSimpleProperty<global::Sungero.Core.Enumeration?> _InternalApprovalState;

        public virtual global::Sungero.Core.Enumeration? InternalApprovalState
        {
          get { return this._InternalApprovalState.Value; }
          set { this._InternalApprovalState.Value = value; }
        }
        protected global::Sungero.Domain.Client.EnumSimpleProperty<global::Sungero.Core.Enumeration?> _ExternalApprovalState;

        public virtual global::Sungero.Core.Enumeration? ExternalApprovalState
        {
          get { return this._ExternalApprovalState.Value; }
          set { this._ExternalApprovalState.Value = value; }
        }
        protected global::Sungero.Domain.Client.EnumSimpleProperty<global::Sungero.Core.Enumeration?> _ExecutionState;

        public virtual global::Sungero.Core.Enumeration? ExecutionState
        {
          get { return this._ExecutionState.Value; }
          set { this._ExecutionState.Value = value; }
        }
        protected global::Sungero.Domain.Client.EnumSimpleProperty<global::Sungero.Core.Enumeration?> _ControlExecutionState;

        public virtual global::Sungero.Core.Enumeration? ControlExecutionState
        {
          get { return this._ControlExecutionState.Value; }
          set { this._ControlExecutionState.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.DateTime?> _ScheduledReturnDateFromCounterparty;

        public virtual global::System.DateTime? ScheduledReturnDateFromCounterparty
        {
          get { return this._ScheduledReturnDateFromCounterparty.Value; }
          set { this._ScheduledReturnDateFromCounterparty.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.String> _Subject;

        public virtual global::System.String Subject
        {
          get { return this._Subject.Value; }
          set { this._Subject.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.String> _Note;

        public virtual global::System.String Note
        {
          get { return this._Note.Value; }
          set { this._Note.Value = value; }
        }
        protected global::Sungero.Domain.Client.EnumSimpleProperty<global::Sungero.Core.Enumeration?> _ExchangeState;

        public virtual global::Sungero.Core.Enumeration? ExchangeState
        {
          get { return this._ExchangeState.Value; }
          set { this._ExchangeState.Value = value; }
        }
        protected global::Sungero.Domain.Client.EnumSimpleProperty<global::Sungero.Core.Enumeration?> _VerificationState;

        public virtual global::Sungero.Core.Enumeration? VerificationState
        {
          get { return this._VerificationState.Value; }
          set { this._VerificationState.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.DateTime?> _DocumentDate;

        public virtual global::System.DateTime? DocumentDate
        {
          get { return this._DocumentDate.Value; }
          set { this._DocumentDate.Value = value; }
        }


        private static global::Sungero.Domain.Shared.EnumerationItems _LifeCycleStateItems = new global::Sungero.Domain.Shared.EnumerationItems(
          null,
          typeof(global::Sungero.Docflow.OfficialDocument.LifeCycleState),
          typeof(global::Sungero.Docflow.Client.OfficialDocument),
          "LifeCycleState");

        public static global::Sungero.Domain.Shared.EnumerationItems LifeCycleStateItems
        {
          get { return global::Sungero.Docflow.Client.OfficialDocument._LifeCycleStateItems; }
        }

        public virtual global::Sungero.Domain.Shared.EnumerationItems LifeCycleStateAllowedItems
        {
          get { return global::Sungero.Docflow.Client.OfficialDocument.LifeCycleStateItems; }
        }

        private static global::Sungero.Domain.Shared.EnumerationItems _RegistrationStateItems = new global::Sungero.Domain.Shared.EnumerationItems(
          null,
          typeof(global::Sungero.Docflow.OfficialDocument.RegistrationState),
          typeof(global::Sungero.Docflow.Client.OfficialDocument),
          "RegistrationState");

        public static global::Sungero.Domain.Shared.EnumerationItems RegistrationStateItems
        {
          get { return global::Sungero.Docflow.Client.OfficialDocument._RegistrationStateItems; }
        }

        public virtual global::Sungero.Domain.Shared.EnumerationItems RegistrationStateAllowedItems
        {
          get { return global::Sungero.Docflow.Client.OfficialDocument.RegistrationStateItems; }
        }

        private static global::Sungero.Domain.Shared.EnumerationItems _InternalApprovalStateItems = new global::Sungero.Domain.Shared.EnumerationItems(
          null,
          typeof(global::Sungero.Docflow.OfficialDocument.InternalApprovalState),
          typeof(global::Sungero.Docflow.Client.OfficialDocument),
          "InternalApprovalState");

        public static global::Sungero.Domain.Shared.EnumerationItems InternalApprovalStateItems
        {
          get { return global::Sungero.Docflow.Client.OfficialDocument._InternalApprovalStateItems; }
        }

        public virtual global::Sungero.Domain.Shared.EnumerationItems InternalApprovalStateAllowedItems
        {
          get { return global::Sungero.Docflow.Client.OfficialDocument.InternalApprovalStateItems; }
        }

        private static global::Sungero.Domain.Shared.EnumerationItems _ExternalApprovalStateItems = new global::Sungero.Domain.Shared.EnumerationItems(
          null,
          typeof(global::Sungero.Docflow.OfficialDocument.ExternalApprovalState),
          typeof(global::Sungero.Docflow.Client.OfficialDocument),
          "ExternalApprovalState");

        public static global::Sungero.Domain.Shared.EnumerationItems ExternalApprovalStateItems
        {
          get { return global::Sungero.Docflow.Client.OfficialDocument._ExternalApprovalStateItems; }
        }

        public virtual global::Sungero.Domain.Shared.EnumerationItems ExternalApprovalStateAllowedItems
        {
          get { return global::Sungero.Docflow.Client.OfficialDocument.ExternalApprovalStateItems; }
        }

        private static global::Sungero.Domain.Shared.EnumerationItems _ExecutionStateItems = new global::Sungero.Domain.Shared.EnumerationItems(
          null,
          typeof(global::Sungero.Docflow.OfficialDocument.ExecutionState),
          typeof(global::Sungero.Docflow.Client.OfficialDocument),
          "ExecutionState");

        public static global::Sungero.Domain.Shared.EnumerationItems ExecutionStateItems
        {
          get { return global::Sungero.Docflow.Client.OfficialDocument._ExecutionStateItems; }
        }

        public virtual global::Sungero.Domain.Shared.EnumerationItems ExecutionStateAllowedItems
        {
          get { return global::Sungero.Docflow.Client.OfficialDocument.ExecutionStateItems; }
        }

        private static global::Sungero.Domain.Shared.EnumerationItems _ControlExecutionStateItems = new global::Sungero.Domain.Shared.EnumerationItems(
          null,
          typeof(global::Sungero.Docflow.OfficialDocument.ControlExecutionState),
          typeof(global::Sungero.Docflow.Client.OfficialDocument),
          "ControlExecutionState");

        public static global::Sungero.Domain.Shared.EnumerationItems ControlExecutionStateItems
        {
          get { return global::Sungero.Docflow.Client.OfficialDocument._ControlExecutionStateItems; }
        }

        public virtual global::Sungero.Domain.Shared.EnumerationItems ControlExecutionStateAllowedItems
        {
          get { return global::Sungero.Docflow.Client.OfficialDocument.ControlExecutionStateItems; }
        }

        private static global::Sungero.Domain.Shared.EnumerationItems _ExchangeStateItems = new global::Sungero.Domain.Shared.EnumerationItems(
          null,
          typeof(global::Sungero.Docflow.OfficialDocument.ExchangeState),
          typeof(global::Sungero.Docflow.Client.OfficialDocument),
          "ExchangeState");

        public static global::Sungero.Domain.Shared.EnumerationItems ExchangeStateItems
        {
          get { return global::Sungero.Docflow.Client.OfficialDocument._ExchangeStateItems; }
        }

        public virtual global::Sungero.Domain.Shared.EnumerationItems ExchangeStateAllowedItems
        {
          get { return global::Sungero.Docflow.Client.OfficialDocument.ExchangeStateItems; }
        }

        private static global::Sungero.Domain.Shared.EnumerationItems _VerificationStateItems = new global::Sungero.Domain.Shared.EnumerationItems(
          null,
          typeof(global::Sungero.Docflow.OfficialDocument.VerificationState),
          typeof(global::Sungero.Docflow.Client.OfficialDocument),
          "VerificationState");

        public static global::Sungero.Domain.Shared.EnumerationItems VerificationStateItems
        {
          get { return global::Sungero.Docflow.Client.OfficialDocument._VerificationStateItems; }
        }

        public virtual global::Sungero.Domain.Shared.EnumerationItems VerificationStateAllowedItems
        {
          get { return global::Sungero.Docflow.Client.OfficialDocument.VerificationStateItems; }
        }




              protected global::Sungero.Domain.Client.INavigationProperty<global::Sungero.Docflow.IDocumentRegister> _DocumentRegister;

              public virtual global::Sungero.Docflow.IDocumentRegister DocumentRegister
              {
              get
              {
                return this._DocumentRegister.Value as global::Sungero.Docflow.IDocumentRegister;
              }

              set
              {
                (this._DocumentRegister as global::Sungero.Domain.Client.IProperty).Value = value;
              }
            }



              protected global::Sungero.Domain.Client.INavigationProperty<global::Sungero.Docflow.IMailDeliveryMethod> _DeliveryMethod;

              public virtual global::Sungero.Docflow.IMailDeliveryMethod DeliveryMethod
              {
              get
              {
                return this._DeliveryMethod.Value as global::Sungero.Docflow.IMailDeliveryMethod;
              }

              set
              {
                (this._DeliveryMethod as global::Sungero.Domain.Client.IProperty).Value = value;
              }
            }



              protected global::Sungero.Domain.Client.INavigationProperty<global::Sungero.Docflow.ICaseFile> _CaseFile;

              public virtual global::Sungero.Docflow.ICaseFile CaseFile
              {
              get
              {
                return this._CaseFile.Value as global::Sungero.Docflow.ICaseFile;
              }

              set
              {
                (this._CaseFile as global::Sungero.Domain.Client.IProperty).Value = value;
              }
            }



              protected global::Sungero.Domain.Client.INavigationProperty<global::Sungero.Company.IEmployee> _DeliveredTo;

              public virtual global::Sungero.Company.IEmployee DeliveredTo
              {
              get
              {
                return this._DeliveredTo.Value as global::Sungero.Company.IEmployee;
              }

              set
              {
                (this._DeliveredTo as global::Sungero.Domain.Client.IProperty).Value = value;
              }
            }



              protected global::Sungero.Domain.Client.INavigationProperty<global::Sungero.Company.IEmployee> _ResponsibleForReturnEmployee;

              public virtual global::Sungero.Company.IEmployee ResponsibleForReturnEmployee
              {
              get
              {
                return this._ResponsibleForReturnEmployee.Value as global::Sungero.Company.IEmployee;
              }

              set
              {
                (this._ResponsibleForReturnEmployee as global::Sungero.Domain.Client.IProperty).Value = value;
              }
            }



              protected global::Sungero.Domain.Client.INavigationProperty<global::Sungero.Docflow.IDocumentKind> _DocumentKind;

              public virtual global::Sungero.Docflow.IDocumentKind DocumentKind
              {
              get
              {
                return this._DocumentKind.Value as global::Sungero.Docflow.IDocumentKind;
              }

              set
              {
                (this._DocumentKind as global::Sungero.Domain.Client.IProperty).Value = value;
              }
            }



              protected global::Sungero.Domain.Client.INavigationProperty<global::Sungero.Company.IBusinessUnit> _BusinessUnit;

              public virtual global::Sungero.Company.IBusinessUnit BusinessUnit
              {
              get
              {
                return this._BusinessUnit.Value as global::Sungero.Company.IBusinessUnit;
              }

              set
              {
                (this._BusinessUnit as global::Sungero.Domain.Client.IProperty).Value = value;
              }
            }



              protected global::Sungero.Domain.Client.INavigationProperty<global::Sungero.Company.IEmployee> _OurSignatory;

              public virtual global::Sungero.Company.IEmployee OurSignatory
              {
              get
              {
                return this._OurSignatory.Value as global::Sungero.Company.IEmployee;
              }

              set
              {
                (this._OurSignatory as global::Sungero.Domain.Client.IProperty).Value = value;
              }
            }



              protected global::Sungero.Domain.Client.INavigationProperty<global::Sungero.Docflow.IDocumentGroupBase> _DocumentGroup;

              public virtual global::Sungero.Docflow.IDocumentGroupBase DocumentGroup
              {
              get
              {
                return this._DocumentGroup.Value as global::Sungero.Docflow.IDocumentGroupBase;
              }

              set
              {
                (this._DocumentGroup as global::Sungero.Domain.Client.IProperty).Value = value;
              }
            }



              protected global::Sungero.Domain.Client.INavigationProperty<global::Sungero.Company.IEmployee> _Assignee;

              public virtual global::Sungero.Company.IEmployee Assignee
              {
              get
              {
                return this._Assignee.Value as global::Sungero.Company.IEmployee;
              }

              set
              {
                (this._Assignee as global::Sungero.Domain.Client.IProperty).Value = value;
              }
            }



              protected global::Sungero.Domain.Client.INavigationProperty<global::Sungero.Company.IDepartment> _Department;

              public virtual global::Sungero.Company.IDepartment Department
              {
              get
              {
                return this._Department.Value as global::Sungero.Company.IDepartment;
              }

              set
              {
                (this._Department as global::Sungero.Domain.Client.IProperty).Value = value;
              }
            }



              protected global::Sungero.Domain.Client.INavigationProperty<global::Sungero.Company.IEmployee> _PreparedBy;

              public virtual global::Sungero.Company.IEmployee PreparedBy
              {
              get
              {
                return this._PreparedBy.Value as global::Sungero.Company.IEmployee;
              }

              set
              {
                (this._PreparedBy as global::Sungero.Domain.Client.IProperty).Value = value;
              }
            }



              protected global::Sungero.Domain.Client.INavigationProperty<global::Sungero.Docflow.IProjectBase> _Project;

              public virtual global::Sungero.Docflow.IProjectBase Project
              {
              get
              {
                return this._Project.Value as global::Sungero.Docflow.IProjectBase;
              }

              set
              {
                (this._Project as global::Sungero.Domain.Client.IProperty).Value = value;
              }
            }



              protected global::Sungero.Domain.Client.INavigationProperty<global::Sungero.Docflow.IOfficialDocument> _LeadingDocument;

              public virtual global::Sungero.Docflow.IOfficialDocument LeadingDocument
              {
              get
              {
                return this._LeadingDocument.Value as global::Sungero.Docflow.IOfficialDocument;
              }

              set
              {
                (this._LeadingDocument as global::Sungero.Domain.Client.IProperty).Value = value;
              }
            }



              protected global::Sungero.Domain.Client.INavigationProperty<global::Sungero.CoreEntities.IStorage> _Storage;

              public virtual global::Sungero.CoreEntities.IStorage Storage
              {
              get
              {
                return this._Storage.Value as global::Sungero.CoreEntities.IStorage;
              }

              set
              {
                (this._Storage as global::Sungero.Domain.Client.IProperty).Value = value;
              }
            }







          protected global::Sungero.Domain.Client.IListProperty<global::Sungero.Docflow.IOfficialDocumentTracking> _Tracking;

          virtual public global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Docflow.IOfficialDocumentTracking> Tracking
          {
            get { return this._Tracking.Value; }
          }




      protected global::Sungero.Domain.Client.TextProperty _LocationState;

      [global::Sungero.Domain.Shared.DoNotSavePreviousValue]
      public virtual System.String LocationState
      {
        get { return this._LocationState.Value; }
        set { this._LocationState.Value = value; }
      }



    private object _TrackingActionsHandlers;

    public object TrackingActionsHandlers
    {
      get
      {
        if (this._TrackingActionsHandlers == null)
          this._TrackingActionsHandlers = this.CreateTrackingActionsHandlers();
        return this._TrackingActionsHandlers;
      }
    }

    private object _TrackingCollectionActionsHandlers;

    public object TrackingCollectionActionsHandlers
    {
      get
      {
        if (this._TrackingCollectionActionsHandlers == null)
          this._TrackingCollectionActionsHandlers = this.CreateTrackingCollectionActionsHandlers();
        return this._TrackingCollectionActionsHandlers;
      }
    }

    #endregion

    #region Methods

    protected override object CreateVersionsActionsHandlers()
    {
      return new global::Sungero.Docflow.Client.OfficialDocumentVersionsActions();
    }

    protected override object CreateVersionsCollectionActionsHandlers()
    {
      return new global::Sungero.Docflow.Client.OfficialDocumentVersionsCollectionActions();
    }
    protected virtual object CreateTrackingActionsHandlers()
    {
      return new global::Sungero.Docflow.Client.OfficialDocumentTrackingActions();
    }

    protected virtual object CreateTrackingCollectionActionsHandlers()
    {
      return new global::Sungero.Docflow.Client.OfficialDocumentTrackingCollectionActions();
    }


    protected override global::Sungero.Domain.Client.EntityFunctions CreateClientFunctions()
    {
      return new global::Sungero.Docflow.Client.OfficialDocumentFunctions(this);
    }

    protected override global::Sungero.Domain.Shared.EntityFunctions CreateSharedFunctions()
    {
      return new global::Sungero.Docflow.Shared.OfficialDocumentFunctions(this);
    }
    protected override object CreateHandlers() {
      return new global::Sungero.Docflow.OfficialDocumentClientHandlers(this);
    }
    protected override object CreateSharedHandlers() {
      return new global::Sungero.Docflow.OfficialDocumentSharedHandlers(this);
    }

    #endregion

    #region Framework events

    protected void RegistrationNumberChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.RegistrationNumber, this.RegistrationNumber, this);
     ((global::Sungero.Docflow.OfficialDocumentSharedHandlers)this.SharedHandlers).RegistrationNumberChanged(args);
    }

    protected void IndexChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.IntegerPropertyChangedEventArgs(this.State.Properties.Index, this.Index, this);
     ((global::Sungero.Docflow.OfficialDocumentSharedHandlers)this.SharedHandlers).IndexChanged(args);
    }

    protected void RegistrationDateChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.DateTimePropertyChangedEventArgs(this.State.Properties.RegistrationDate, this.RegistrationDate, this);
     ((global::Sungero.Docflow.OfficialDocumentSharedHandlers)this.SharedHandlers).RegistrationDateChanged(args);
    }

    protected void DocumentRegisterChangedHandler()
    {
      var args = new global::Sungero.Docflow.Shared.OfficialDocumentDocumentRegisterChangedEventArgs(this.State.Properties.DocumentRegister, this.DocumentRegister, this);
     ((global::Sungero.Docflow.OfficialDocumentSharedHandlers)this.SharedHandlers).DocumentRegisterChanged(args);
    }

    protected void DeliveryMethodChangedHandler()
    {
      var args = new global::Sungero.Docflow.Shared.OfficialDocumentDeliveryMethodChangedEventArgs(this.State.Properties.DeliveryMethod, this.DeliveryMethod, this);
     ((global::Sungero.Docflow.OfficialDocumentSharedHandlers)this.SharedHandlers).DeliveryMethodChanged(args);
    }

    protected void CaseFileChangedHandler()
    {
      var args = new global::Sungero.Docflow.Shared.OfficialDocumentCaseFileChangedEventArgs(this.State.Properties.CaseFile, this.CaseFile, this);
     ((global::Sungero.Docflow.OfficialDocumentSharedHandlers)this.SharedHandlers).CaseFileChanged(args);
    }

    protected void PlacedToCaseFileDateChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.DateTimePropertyChangedEventArgs(this.State.Properties.PlacedToCaseFileDate, this.PlacedToCaseFileDate, this);
     ((global::Sungero.Docflow.OfficialDocumentSharedHandlers)this.SharedHandlers).PlacedToCaseFileDateChanged(args);
    }

    protected void TrackingChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.CollectionPropertyChangedEventArgs(this);
     ((global::Sungero.Docflow.OfficialDocumentSharedHandlers)this.SharedHandlers).TrackingChanged(args);
    }

    protected void IsReturnRequiredChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.BooleanPropertyChangedEventArgs(this.State.Properties.IsReturnRequired, this.IsReturnRequired, this);
     ((global::Sungero.Docflow.OfficialDocumentSharedHandlers)this.SharedHandlers).IsReturnRequiredChanged(args);
    }

    protected void IsHeldByCounterPartyChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.BooleanPropertyChangedEventArgs(this.State.Properties.IsHeldByCounterParty, this.IsHeldByCounterParty, this);
     ((global::Sungero.Docflow.OfficialDocumentSharedHandlers)this.SharedHandlers).IsHeldByCounterPartyChanged(args);
    }

    protected void DeliveredToChangedHandler()
    {
      var args = new global::Sungero.Docflow.Shared.OfficialDocumentDeliveredToChangedEventArgs(this.State.Properties.DeliveredTo, this.DeliveredTo, this);
     ((global::Sungero.Docflow.OfficialDocumentSharedHandlers)this.SharedHandlers).DeliveredToChanged(args);
    }

    protected void ReturnDeadlineChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.DateTimePropertyChangedEventArgs(this.State.Properties.ReturnDeadline, this.ReturnDeadline, this);
     ((global::Sungero.Docflow.OfficialDocumentSharedHandlers)this.SharedHandlers).ReturnDeadlineChanged(args);
    }

    protected void ReturnDateChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.DateTimePropertyChangedEventArgs(this.State.Properties.ReturnDate, this.ReturnDate, this);
     ((global::Sungero.Docflow.OfficialDocumentSharedHandlers)this.SharedHandlers).ReturnDateChanged(args);
    }

    protected void LifeCycleStateChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.EnumerationPropertyChangedEventArgs(this.State.Properties.LifeCycleState, this.LifeCycleState, this);
     ((global::Sungero.Docflow.OfficialDocumentSharedHandlers)this.SharedHandlers).LifeCycleStateChanged(args);
    }

    protected void RegistrationStateChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.EnumerationPropertyChangedEventArgs(this.State.Properties.RegistrationState, this.RegistrationState, this);
     ((global::Sungero.Docflow.OfficialDocumentSharedHandlers)this.SharedHandlers).RegistrationStateChanged(args);
    }

    protected void InternalApprovalStateChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.EnumerationPropertyChangedEventArgs(this.State.Properties.InternalApprovalState, this.InternalApprovalState, this);
     ((global::Sungero.Docflow.OfficialDocumentSharedHandlers)this.SharedHandlers).InternalApprovalStateChanged(args);
    }

    protected void ExternalApprovalStateChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.EnumerationPropertyChangedEventArgs(this.State.Properties.ExternalApprovalState, this.ExternalApprovalState, this);
     ((global::Sungero.Docflow.OfficialDocumentSharedHandlers)this.SharedHandlers).ExternalApprovalStateChanged(args);
    }

    protected void ExecutionStateChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.EnumerationPropertyChangedEventArgs(this.State.Properties.ExecutionState, this.ExecutionState, this);
     ((global::Sungero.Docflow.OfficialDocumentSharedHandlers)this.SharedHandlers).ExecutionStateChanged(args);
    }

    protected void ControlExecutionStateChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.EnumerationPropertyChangedEventArgs(this.State.Properties.ControlExecutionState, this.ControlExecutionState, this);
     ((global::Sungero.Docflow.OfficialDocumentSharedHandlers)this.SharedHandlers).ControlExecutionStateChanged(args);
    }

    protected void LocationStateChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.TextPropertyChangedEventArgs(this.State.Properties.LocationState, this.LocationState, this);
     ((global::Sungero.Docflow.OfficialDocumentSharedHandlers)this.SharedHandlers).LocationStateChanged(args);
    }

    protected void ResponsibleForReturnEmployeeChangedHandler()
    {
      var args = new global::Sungero.Docflow.Shared.OfficialDocumentResponsibleForReturnEmployeeChangedEventArgs(this.State.Properties.ResponsibleForReturnEmployee, this.ResponsibleForReturnEmployee, this);
     ((global::Sungero.Docflow.OfficialDocumentSharedHandlers)this.SharedHandlers).ResponsibleForReturnEmployeeChanged(args);
    }

    protected void ScheduledReturnDateFromCounterpartyChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.DateTimePropertyChangedEventArgs(this.State.Properties.ScheduledReturnDateFromCounterparty, this.ScheduledReturnDateFromCounterparty, this);
     ((global::Sungero.Docflow.OfficialDocumentSharedHandlers)this.SharedHandlers).ScheduledReturnDateFromCounterpartyChanged(args);
    }

    protected void DocumentKindChangedHandler()
    {
      var args = new global::Sungero.Docflow.Shared.OfficialDocumentDocumentKindChangedEventArgs(this.State.Properties.DocumentKind, this.DocumentKind, this);
     ((global::Sungero.Docflow.OfficialDocumentSharedHandlers)this.SharedHandlers).DocumentKindChanged(args);
    }

    protected void BusinessUnitChangedHandler()
    {
      var args = new global::Sungero.Docflow.Shared.OfficialDocumentBusinessUnitChangedEventArgs(this.State.Properties.BusinessUnit, this.BusinessUnit, this);
     ((global::Sungero.Docflow.OfficialDocumentSharedHandlers)this.SharedHandlers).BusinessUnitChanged(args);
    }

    protected void SubjectChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.Subject, this.Subject, this);
     ((global::Sungero.Docflow.OfficialDocumentSharedHandlers)this.SharedHandlers).SubjectChanged(args);
    }

    protected void NoteChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.Note, this.Note, this);
     ((global::Sungero.Docflow.OfficialDocumentSharedHandlers)this.SharedHandlers).NoteChanged(args);
    }

    protected void OurSignatoryChangedHandler()
    {
      var args = new global::Sungero.Docflow.Shared.OfficialDocumentOurSignatoryChangedEventArgs(this.State.Properties.OurSignatory, this.OurSignatory, this);
     ((global::Sungero.Docflow.OfficialDocumentSharedHandlers)this.SharedHandlers).OurSignatoryChanged(args);
    }

    protected void DocumentGroupChangedHandler()
    {
      var args = new global::Sungero.Docflow.Shared.OfficialDocumentDocumentGroupChangedEventArgs(this.State.Properties.DocumentGroup, this.DocumentGroup, this);
     ((global::Sungero.Docflow.OfficialDocumentSharedHandlers)this.SharedHandlers).DocumentGroupChanged(args);
    }

    protected void AssigneeChangedHandler()
    {
      var args = new global::Sungero.Docflow.Shared.OfficialDocumentAssigneeChangedEventArgs(this.State.Properties.Assignee, this.Assignee, this);
     ((global::Sungero.Docflow.OfficialDocumentSharedHandlers)this.SharedHandlers).AssigneeChanged(args);
    }

    protected void DepartmentChangedHandler()
    {
      var args = new global::Sungero.Docflow.Shared.OfficialDocumentDepartmentChangedEventArgs(this.State.Properties.Department, this.Department, this);
     ((global::Sungero.Docflow.OfficialDocumentSharedHandlers)this.SharedHandlers).DepartmentChanged(args);
    }

    protected void PreparedByChangedHandler()
    {
      var args = new global::Sungero.Docflow.Shared.OfficialDocumentPreparedByChangedEventArgs(this.State.Properties.PreparedBy, this.PreparedBy, this);
     ((global::Sungero.Docflow.OfficialDocumentSharedHandlers)this.SharedHandlers).PreparedByChanged(args);
    }

    protected void ProjectChangedHandler()
    {
      var args = new global::Sungero.Docflow.Shared.OfficialDocumentProjectChangedEventArgs(this.State.Properties.Project, this.Project, this);
     ((global::Sungero.Docflow.OfficialDocumentSharedHandlers)this.SharedHandlers).ProjectChanged(args);
    }

    protected void ExchangeStateChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.EnumerationPropertyChangedEventArgs(this.State.Properties.ExchangeState, this.ExchangeState, this);
     ((global::Sungero.Docflow.OfficialDocumentSharedHandlers)this.SharedHandlers).ExchangeStateChanged(args);
    }

    protected void LeadingDocumentChangedHandler()
    {
      var args = new global::Sungero.Docflow.Shared.OfficialDocumentLeadingDocumentChangedEventArgs(this.State.Properties.LeadingDocument, this.LeadingDocument, this);
     ((global::Sungero.Docflow.OfficialDocumentSharedHandlers)this.SharedHandlers).LeadingDocumentChanged(args);
    }

    protected void VerificationStateChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.EnumerationPropertyChangedEventArgs(this.State.Properties.VerificationState, this.VerificationState, this);
     ((global::Sungero.Docflow.OfficialDocumentSharedHandlers)this.SharedHandlers).VerificationStateChanged(args);
    }

    protected void DocumentDateChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.DateTimePropertyChangedEventArgs(this.State.Properties.DocumentDate, this.DocumentDate, this);
     ((global::Sungero.Docflow.OfficialDocumentSharedHandlers)this.SharedHandlers).DocumentDateChanged(args);
    }

    protected void StorageChangedHandler()
    {
      var args = new global::Sungero.Docflow.Shared.OfficialDocumentStorageChangedEventArgs(this.State.Properties.Storage, this.Storage, this);
     ((global::Sungero.Docflow.OfficialDocumentSharedHandlers)this.SharedHandlers).StorageChanged(args);
    }



    protected override global::Sungero.Content.ElectronicDocumentVersionsSharedCollectionHandlers CreateVersionsAddedHandler(global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.Docflow.OfficialDocumentVersionsSharedCollectionHandlers(this, e.Value, null, e.Source);
    }

    protected override global::Sungero.Content.ElectronicDocumentVersionsSharedCollectionHandlers CreateVersionsDeletedHandler(global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.Docflow.OfficialDocumentVersionsSharedCollectionHandlers(this, null, e.Value, null);
    }



    protected virtual global::Sungero.Docflow.OfficialDocumentTrackingSharedCollectionHandlers CreateTrackingAddedHandler(global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.Docflow.OfficialDocumentTrackingSharedCollectionHandlers(this, e.Value, null, e.Source);
    }

    protected virtual global::Sungero.Docflow.OfficialDocumentTrackingSharedCollectionHandlers CreateTrackingDeletedHandler(global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.Docflow.OfficialDocumentTrackingSharedCollectionHandlers(this, null, e.Value, null);
    }

    protected virtual void TrackingAddedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {  
      var collectionHandlers = this.CreateTrackingAddedHandler(e);
      if (collectionHandlers != null)
      {
        var args = new global::Sungero.Domain.Shared.CollectionPropertyAddedEventArgs(this);
        collectionHandlers.TrackingAdded(args);
      }
    }

    protected virtual void TrackingDeletedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {  
      var collectionHandlers = this.CreateTrackingDeletedHandler(e);
      if (collectionHandlers != null)
      {
        var args = new global::Sungero.Domain.Shared.CollectionPropertyDeletedEventArgs(this);
        collectionHandlers.TrackingDeleted(args);
      }
    }


  protected global::System.String RegistrationNumberValueInputHandler(global::System.String value)
  {
    var args = new global::Sungero.Presentation.StringValueInputEventArgs(this.RegistrationNumber, value, this, this.Info.Properties.RegistrationNumber);
    ((global::Sungero.Docflow.OfficialDocumentClientHandlers)this.Handlers).RegistrationNumberValueInput(args);
    return args.NewValue;
  }

  protected global::System.Int32? IndexValueInputHandler(global::System.Int32? value)
  {
    var args = new global::Sungero.Presentation.IntegerValueInputEventArgs(this.Index, value, this, this.Info.Properties.Index);
    ((global::Sungero.Docflow.OfficialDocumentClientHandlers)this.Handlers).IndexValueInput(args);
    return args.NewValue;
  }

  protected global::System.DateTime? RegistrationDateValueInputHandler(global::System.DateTime? value)
  {
    var args = new global::Sungero.Presentation.DateTimeValueInputEventArgs(this.RegistrationDate, value, this, this.Info.Properties.RegistrationDate);
    ((global::Sungero.Docflow.OfficialDocumentClientHandlers)this.Handlers).RegistrationDateValueInput(args);
    return args.NewValue;
  }

  protected global::Sungero.Docflow.IDocumentRegister DocumentRegisterValueInputHandler(global::Sungero.Docflow.IDocumentRegister value)
  {
    var args = new global::Sungero.Docflow.Client.OfficialDocumentDocumentRegisterValueInputEventArgs(this.DocumentRegister, value, this, this.Info.Properties.DocumentRegister);
    ((global::Sungero.Docflow.OfficialDocumentClientHandlers)this.Handlers).DocumentRegisterValueInput(args);
    return args.NewValue;
  }

  protected global::Sungero.Docflow.IMailDeliveryMethod DeliveryMethodValueInputHandler(global::Sungero.Docflow.IMailDeliveryMethod value)
  {
    var args = new global::Sungero.Docflow.Client.OfficialDocumentDeliveryMethodValueInputEventArgs(this.DeliveryMethod, value, this, this.Info.Properties.DeliveryMethod);
    ((global::Sungero.Docflow.OfficialDocumentClientHandlers)this.Handlers).DeliveryMethodValueInput(args);
    return args.NewValue;
  }

  protected global::Sungero.Docflow.ICaseFile CaseFileValueInputHandler(global::Sungero.Docflow.ICaseFile value)
  {
    var args = new global::Sungero.Docflow.Client.OfficialDocumentCaseFileValueInputEventArgs(this.CaseFile, value, this, this.Info.Properties.CaseFile);
    ((global::Sungero.Docflow.OfficialDocumentClientHandlers)this.Handlers).CaseFileValueInput(args);
    return args.NewValue;
  }

  protected global::System.DateTime? PlacedToCaseFileDateValueInputHandler(global::System.DateTime? value)
  {
    var args = new global::Sungero.Presentation.DateTimeValueInputEventArgs(this.PlacedToCaseFileDate, value, this, this.Info.Properties.PlacedToCaseFileDate);
    ((global::Sungero.Docflow.OfficialDocumentClientHandlers)this.Handlers).PlacedToCaseFileDateValueInput(args);
    return args.NewValue;
  }


  protected global::System.Boolean? IsReturnRequiredValueInputHandler(global::System.Boolean? value)
  {
    var args = new global::Sungero.Presentation.BooleanValueInputEventArgs(this.IsReturnRequired, value, this, this.Info.Properties.IsReturnRequired);
    ((global::Sungero.Docflow.OfficialDocumentClientHandlers)this.Handlers).IsReturnRequiredValueInput(args);
    return args.NewValue;
  }

  protected global::System.Boolean? IsHeldByCounterPartyValueInputHandler(global::System.Boolean? value)
  {
    var args = new global::Sungero.Presentation.BooleanValueInputEventArgs(this.IsHeldByCounterParty, value, this, this.Info.Properties.IsHeldByCounterParty);
    ((global::Sungero.Docflow.OfficialDocumentClientHandlers)this.Handlers).IsHeldByCounterPartyValueInput(args);
    return args.NewValue;
  }

  protected global::Sungero.Company.IEmployee DeliveredToValueInputHandler(global::Sungero.Company.IEmployee value)
  {
    var args = new global::Sungero.Docflow.Client.OfficialDocumentDeliveredToValueInputEventArgs(this.DeliveredTo, value, this, this.Info.Properties.DeliveredTo);
    ((global::Sungero.Docflow.OfficialDocumentClientHandlers)this.Handlers).DeliveredToValueInput(args);
    return args.NewValue;
  }

  protected global::System.DateTime? ReturnDeadlineValueInputHandler(global::System.DateTime? value)
  {
    var args = new global::Sungero.Presentation.DateTimeValueInputEventArgs(this.ReturnDeadline, value, this, this.Info.Properties.ReturnDeadline);
    ((global::Sungero.Docflow.OfficialDocumentClientHandlers)this.Handlers).ReturnDeadlineValueInput(args);
    return args.NewValue;
  }

  protected global::System.DateTime? ReturnDateValueInputHandler(global::System.DateTime? value)
  {
    var args = new global::Sungero.Presentation.DateTimeValueInputEventArgs(this.ReturnDate, value, this, this.Info.Properties.ReturnDate);
    ((global::Sungero.Docflow.OfficialDocumentClientHandlers)this.Handlers).ReturnDateValueInput(args);
    return args.NewValue;
  }

  protected global::Sungero.Core.Enumeration? LifeCycleStateValueInputHandler(global::Sungero.Core.Enumeration? value)
  {
    var args = new global::Sungero.Presentation.EnumerationValueInputEventArgs(this.LifeCycleState, value, this, this.Info.Properties.LifeCycleState);
    ((global::Sungero.Docflow.OfficialDocumentClientHandlers)this.Handlers).LifeCycleStateValueInput(args);
    return args.NewValue;
  }

  protected global::Sungero.Core.Enumeration? RegistrationStateValueInputHandler(global::Sungero.Core.Enumeration? value)
  {
    var args = new global::Sungero.Presentation.EnumerationValueInputEventArgs(this.RegistrationState, value, this, this.Info.Properties.RegistrationState);
    ((global::Sungero.Docflow.OfficialDocumentClientHandlers)this.Handlers).RegistrationStateValueInput(args);
    return args.NewValue;
  }

  protected global::Sungero.Core.Enumeration? InternalApprovalStateValueInputHandler(global::Sungero.Core.Enumeration? value)
  {
    var args = new global::Sungero.Presentation.EnumerationValueInputEventArgs(this.InternalApprovalState, value, this, this.Info.Properties.InternalApprovalState);
    ((global::Sungero.Docflow.OfficialDocumentClientHandlers)this.Handlers).InternalApprovalStateValueInput(args);
    return args.NewValue;
  }

  protected global::Sungero.Core.Enumeration? ExternalApprovalStateValueInputHandler(global::Sungero.Core.Enumeration? value)
  {
    var args = new global::Sungero.Presentation.EnumerationValueInputEventArgs(this.ExternalApprovalState, value, this, this.Info.Properties.ExternalApprovalState);
    ((global::Sungero.Docflow.OfficialDocumentClientHandlers)this.Handlers).ExternalApprovalStateValueInput(args);
    return args.NewValue;
  }

  protected global::Sungero.Core.Enumeration? ExecutionStateValueInputHandler(global::Sungero.Core.Enumeration? value)
  {
    var args = new global::Sungero.Presentation.EnumerationValueInputEventArgs(this.ExecutionState, value, this, this.Info.Properties.ExecutionState);
    ((global::Sungero.Docflow.OfficialDocumentClientHandlers)this.Handlers).ExecutionStateValueInput(args);
    return args.NewValue;
  }

  protected global::Sungero.Core.Enumeration? ControlExecutionStateValueInputHandler(global::Sungero.Core.Enumeration? value)
  {
    var args = new global::Sungero.Presentation.EnumerationValueInputEventArgs(this.ControlExecutionState, value, this, this.Info.Properties.ControlExecutionState);
    ((global::Sungero.Docflow.OfficialDocumentClientHandlers)this.Handlers).ControlExecutionStateValueInput(args);
    return args.NewValue;
  }

  protected global::System.String LocationStateValueInputHandler(global::System.String value)
  {
    var args = new global::Sungero.Presentation.TextValueInputEventArgs(this.LocationState, value, this, this.Info.Properties.LocationState);
    ((global::Sungero.Docflow.OfficialDocumentClientHandlers)this.Handlers).LocationStateValueInput(args);
    return args.NewValue;
  }

  protected global::Sungero.Company.IEmployee ResponsibleForReturnEmployeeValueInputHandler(global::Sungero.Company.IEmployee value)
  {
    var args = new global::Sungero.Docflow.Client.OfficialDocumentResponsibleForReturnEmployeeValueInputEventArgs(this.ResponsibleForReturnEmployee, value, this, this.Info.Properties.ResponsibleForReturnEmployee);
    ((global::Sungero.Docflow.OfficialDocumentClientHandlers)this.Handlers).ResponsibleForReturnEmployeeValueInput(args);
    return args.NewValue;
  }

  protected global::System.DateTime? ScheduledReturnDateFromCounterpartyValueInputHandler(global::System.DateTime? value)
  {
    var args = new global::Sungero.Presentation.DateTimeValueInputEventArgs(this.ScheduledReturnDateFromCounterparty, value, this, this.Info.Properties.ScheduledReturnDateFromCounterparty);
    ((global::Sungero.Docflow.OfficialDocumentClientHandlers)this.Handlers).ScheduledReturnDateFromCounterpartyValueInput(args);
    return args.NewValue;
  }

  protected global::Sungero.Docflow.IDocumentKind DocumentKindValueInputHandler(global::Sungero.Docflow.IDocumentKind value)
  {
    var args = new global::Sungero.Docflow.Client.OfficialDocumentDocumentKindValueInputEventArgs(this.DocumentKind, value, this, this.Info.Properties.DocumentKind);
    ((global::Sungero.Docflow.OfficialDocumentClientHandlers)this.Handlers).DocumentKindValueInput(args);
    return args.NewValue;
  }

  protected global::Sungero.Company.IBusinessUnit BusinessUnitValueInputHandler(global::Sungero.Company.IBusinessUnit value)
  {
    var args = new global::Sungero.Docflow.Client.OfficialDocumentBusinessUnitValueInputEventArgs(this.BusinessUnit, value, this, this.Info.Properties.BusinessUnit);
    ((global::Sungero.Docflow.OfficialDocumentClientHandlers)this.Handlers).BusinessUnitValueInput(args);
    return args.NewValue;
  }

  protected global::System.String SubjectValueInputHandler(global::System.String value)
  {
    var args = new global::Sungero.Presentation.StringValueInputEventArgs(this.Subject, value, this, this.Info.Properties.Subject);
    ((global::Sungero.Docflow.OfficialDocumentClientHandlers)this.Handlers).SubjectValueInput(args);
    return args.NewValue;
  }

  protected global::System.String NoteValueInputHandler(global::System.String value)
  {
    var args = new global::Sungero.Presentation.StringValueInputEventArgs(this.Note, value, this, this.Info.Properties.Note);
    ((global::Sungero.Docflow.OfficialDocumentClientHandlers)this.Handlers).NoteValueInput(args);
    return args.NewValue;
  }

  protected global::Sungero.Company.IEmployee OurSignatoryValueInputHandler(global::Sungero.Company.IEmployee value)
  {
    var args = new global::Sungero.Docflow.Client.OfficialDocumentOurSignatoryValueInputEventArgs(this.OurSignatory, value, this, this.Info.Properties.OurSignatory);
    ((global::Sungero.Docflow.OfficialDocumentClientHandlers)this.Handlers).OurSignatoryValueInput(args);
    return args.NewValue;
  }

  protected global::Sungero.Docflow.IDocumentGroupBase DocumentGroupValueInputHandler(global::Sungero.Docflow.IDocumentGroupBase value)
  {
    var args = new global::Sungero.Docflow.Client.OfficialDocumentDocumentGroupValueInputEventArgs(this.DocumentGroup, value, this, this.Info.Properties.DocumentGroup);
    ((global::Sungero.Docflow.OfficialDocumentClientHandlers)this.Handlers).DocumentGroupValueInput(args);
    return args.NewValue;
  }

  protected global::Sungero.Company.IEmployee AssigneeValueInputHandler(global::Sungero.Company.IEmployee value)
  {
    var args = new global::Sungero.Docflow.Client.OfficialDocumentAssigneeValueInputEventArgs(this.Assignee, value, this, this.Info.Properties.Assignee);
    ((global::Sungero.Docflow.OfficialDocumentClientHandlers)this.Handlers).AssigneeValueInput(args);
    return args.NewValue;
  }

  protected global::Sungero.Company.IDepartment DepartmentValueInputHandler(global::Sungero.Company.IDepartment value)
  {
    var args = new global::Sungero.Docflow.Client.OfficialDocumentDepartmentValueInputEventArgs(this.Department, value, this, this.Info.Properties.Department);
    ((global::Sungero.Docflow.OfficialDocumentClientHandlers)this.Handlers).DepartmentValueInput(args);
    return args.NewValue;
  }

  protected global::Sungero.Company.IEmployee PreparedByValueInputHandler(global::Sungero.Company.IEmployee value)
  {
    var args = new global::Sungero.Docflow.Client.OfficialDocumentPreparedByValueInputEventArgs(this.PreparedBy, value, this, this.Info.Properties.PreparedBy);
    ((global::Sungero.Docflow.OfficialDocumentClientHandlers)this.Handlers).PreparedByValueInput(args);
    return args.NewValue;
  }

  protected global::Sungero.Docflow.IProjectBase ProjectValueInputHandler(global::Sungero.Docflow.IProjectBase value)
  {
    var args = new global::Sungero.Docflow.Client.OfficialDocumentProjectValueInputEventArgs(this.Project, value, this, this.Info.Properties.Project);
    ((global::Sungero.Docflow.OfficialDocumentClientHandlers)this.Handlers).ProjectValueInput(args);
    return args.NewValue;
  }

  protected global::Sungero.Core.Enumeration? ExchangeStateValueInputHandler(global::Sungero.Core.Enumeration? value)
  {
    var args = new global::Sungero.Presentation.EnumerationValueInputEventArgs(this.ExchangeState, value, this, this.Info.Properties.ExchangeState);
    ((global::Sungero.Docflow.OfficialDocumentClientHandlers)this.Handlers).ExchangeStateValueInput(args);
    return args.NewValue;
  }

  protected global::Sungero.Docflow.IOfficialDocument LeadingDocumentValueInputHandler(global::Sungero.Docflow.IOfficialDocument value)
  {
    var args = new global::Sungero.Docflow.Client.OfficialDocumentLeadingDocumentValueInputEventArgs(this.LeadingDocument, value, this, this.Info.Properties.LeadingDocument);
    ((global::Sungero.Docflow.OfficialDocumentClientHandlers)this.Handlers).LeadingDocumentValueInput(args);
    return args.NewValue;
  }

  protected global::Sungero.Core.Enumeration? VerificationStateValueInputHandler(global::Sungero.Core.Enumeration? value)
  {
    var args = new global::Sungero.Presentation.EnumerationValueInputEventArgs(this.VerificationState, value, this, this.Info.Properties.VerificationState);
    ((global::Sungero.Docflow.OfficialDocumentClientHandlers)this.Handlers).VerificationStateValueInput(args);
    return args.NewValue;
  }

  protected global::System.DateTime? DocumentDateValueInputHandler(global::System.DateTime? value)
  {
    var args = new global::Sungero.Presentation.DateTimeValueInputEventArgs(this.DocumentDate, value, this, this.Info.Properties.DocumentDate);
    ((global::Sungero.Docflow.OfficialDocumentClientHandlers)this.Handlers).DocumentDateValueInput(args);
    return args.NewValue;
  }

  protected global::Sungero.CoreEntities.IStorage StorageValueInputHandler(global::Sungero.CoreEntities.IStorage value)
  {
    var args = new global::Sungero.Docflow.Client.OfficialDocumentStorageValueInputEventArgs(this.Storage, value, this, this.Info.Properties.Storage);
    ((global::Sungero.Docflow.OfficialDocumentClientHandlers)this.Handlers).StorageValueInput(args);
    return args.NewValue;
  }


  protected global::System.Collections.Generic.IEnumerable<global::Sungero.Core.Enumeration> LifeCycleStateFilteringHandler()
  {
    return ((global::Sungero.Docflow.OfficialDocumentClientHandlers)this.Handlers).LifeCycleStateFiltering(this.LifeCycleStateAllowedItems);
  }

  protected global::System.Collections.Generic.IEnumerable<global::Sungero.Core.Enumeration> RegistrationStateFilteringHandler()
  {
    return ((global::Sungero.Docflow.OfficialDocumentClientHandlers)this.Handlers).RegistrationStateFiltering(this.RegistrationStateAllowedItems);
  }

  protected global::System.Collections.Generic.IEnumerable<global::Sungero.Core.Enumeration> InternalApprovalStateFilteringHandler()
  {
    return ((global::Sungero.Docflow.OfficialDocumentClientHandlers)this.Handlers).InternalApprovalStateFiltering(this.InternalApprovalStateAllowedItems);
  }

  protected global::System.Collections.Generic.IEnumerable<global::Sungero.Core.Enumeration> ExternalApprovalStateFilteringHandler()
  {
    return ((global::Sungero.Docflow.OfficialDocumentClientHandlers)this.Handlers).ExternalApprovalStateFiltering(this.ExternalApprovalStateAllowedItems);
  }

  protected global::System.Collections.Generic.IEnumerable<global::Sungero.Core.Enumeration> ExecutionStateFilteringHandler()
  {
    return ((global::Sungero.Docflow.OfficialDocumentClientHandlers)this.Handlers).ExecutionStateFiltering(this.ExecutionStateAllowedItems);
  }

  protected global::System.Collections.Generic.IEnumerable<global::Sungero.Core.Enumeration> ControlExecutionStateFilteringHandler()
  {
    return ((global::Sungero.Docflow.OfficialDocumentClientHandlers)this.Handlers).ControlExecutionStateFiltering(this.ControlExecutionStateAllowedItems);
  }














  protected global::System.Collections.Generic.IEnumerable<global::Sungero.Core.Enumeration> ExchangeStateFilteringHandler()
  {
    return ((global::Sungero.Docflow.OfficialDocumentClientHandlers)this.Handlers).ExchangeStateFiltering(this.ExchangeStateAllowedItems);
  }


  protected global::System.Collections.Generic.IEnumerable<global::Sungero.Core.Enumeration> VerificationStateFilteringHandler()
  {
    return ((global::Sungero.Docflow.OfficialDocumentClientHandlers)this.Handlers).VerificationStateFiltering(this.VerificationStateAllowedItems);
  }




    #endregion

    #region Constructors





              protected virtual void InitDocumentRegisterNavigationProperty()
              {
                this._DocumentRegister = new global::Sungero.Domain.Client.NavigationProperty<global::Sungero.Docflow.IDocumentRegister>("DocumentRegister", this);
                this._DocumentRegister.ValueChanged += (sender, e) => { this.DocumentRegisterChangedHandler(); };
                this.AddProperty(this._DocumentRegister as global::Sungero.Domain.Client.IProperty);
              }




              protected virtual void InitDeliveryMethodNavigationProperty()
              {
                this._DeliveryMethod = new global::Sungero.Domain.Client.NavigationProperty<global::Sungero.Docflow.IMailDeliveryMethod>("DeliveryMethod", this);
                this._DeliveryMethod.ValueChanged += (sender, e) => { this.DeliveryMethodChangedHandler(); };
                this.AddProperty(this._DeliveryMethod as global::Sungero.Domain.Client.IProperty);
              }




              protected virtual void InitCaseFileNavigationProperty()
              {
                this._CaseFile = new global::Sungero.Domain.Client.NavigationProperty<global::Sungero.Docflow.ICaseFile>("CaseFile", this);
                this._CaseFile.ValueChanged += (sender, e) => { this.CaseFileChangedHandler(); };
                this.AddProperty(this._CaseFile as global::Sungero.Domain.Client.IProperty);
              }




              protected virtual void InitDeliveredToNavigationProperty()
              {
                this._DeliveredTo = new global::Sungero.Domain.Client.NavigationProperty<global::Sungero.Company.IEmployee>("DeliveredTo", this);
                this._DeliveredTo.ValueChanged += (sender, e) => { this.DeliveredToChangedHandler(); };
                this.AddProperty(this._DeliveredTo as global::Sungero.Domain.Client.IProperty);
              }




              protected virtual void InitResponsibleForReturnEmployeeNavigationProperty()
              {
                this._ResponsibleForReturnEmployee = new global::Sungero.Domain.Client.NavigationProperty<global::Sungero.Company.IEmployee>("ResponsibleForReturnEmployee", this);
                this._ResponsibleForReturnEmployee.ValueChanged += (sender, e) => { this.ResponsibleForReturnEmployeeChangedHandler(); };
                this.AddProperty(this._ResponsibleForReturnEmployee as global::Sungero.Domain.Client.IProperty);
              }




              protected virtual void InitDocumentKindNavigationProperty()
              {
                this._DocumentKind = new global::Sungero.Domain.Client.NavigationProperty<global::Sungero.Docflow.IDocumentKind>("DocumentKind", this);
                this._DocumentKind.ValueChanged += (sender, e) => { this.DocumentKindChangedHandler(); };
                this.AddProperty(this._DocumentKind as global::Sungero.Domain.Client.IProperty);
              }




              protected virtual void InitBusinessUnitNavigationProperty()
              {
                this._BusinessUnit = new global::Sungero.Domain.Client.NavigationProperty<global::Sungero.Company.IBusinessUnit>("BusinessUnit", this);
                this._BusinessUnit.ValueChanged += (sender, e) => { this.BusinessUnitChangedHandler(); };
                this.AddProperty(this._BusinessUnit as global::Sungero.Domain.Client.IProperty);
              }




              protected virtual void InitOurSignatoryNavigationProperty()
              {
                this._OurSignatory = new global::Sungero.Domain.Client.NavigationProperty<global::Sungero.Company.IEmployee>("OurSignatory", this);
                this._OurSignatory.ValueChanged += (sender, e) => { this.OurSignatoryChangedHandler(); };
                this.AddProperty(this._OurSignatory as global::Sungero.Domain.Client.IProperty);
              }




              protected virtual void InitDocumentGroupNavigationProperty()
              {
                this._DocumentGroup = new global::Sungero.Domain.Client.NavigationProperty<global::Sungero.Docflow.IDocumentGroupBase>("DocumentGroup", this);
                this._DocumentGroup.ValueChanged += (sender, e) => { this.DocumentGroupChangedHandler(); };
                this.AddProperty(this._DocumentGroup as global::Sungero.Domain.Client.IProperty);
              }




              protected virtual void InitAssigneeNavigationProperty()
              {
                this._Assignee = new global::Sungero.Domain.Client.NavigationProperty<global::Sungero.Company.IEmployee>("Assignee", this);
                this._Assignee.ValueChanged += (sender, e) => { this.AssigneeChangedHandler(); };
                this.AddProperty(this._Assignee as global::Sungero.Domain.Client.IProperty);
              }




              protected virtual void InitDepartmentNavigationProperty()
              {
                this._Department = new global::Sungero.Domain.Client.NavigationProperty<global::Sungero.Company.IDepartment>("Department", this);
                this._Department.ValueChanged += (sender, e) => { this.DepartmentChangedHandler(); };
                this.AddProperty(this._Department as global::Sungero.Domain.Client.IProperty);
              }




              protected virtual void InitPreparedByNavigationProperty()
              {
                this._PreparedBy = new global::Sungero.Domain.Client.NavigationProperty<global::Sungero.Company.IEmployee>("PreparedBy", this);
                this._PreparedBy.ValueChanged += (sender, e) => { this.PreparedByChangedHandler(); };
                this.AddProperty(this._PreparedBy as global::Sungero.Domain.Client.IProperty);
              }




              protected virtual void InitProjectNavigationProperty()
              {
                this._Project = new global::Sungero.Domain.Client.NavigationProperty<global::Sungero.Docflow.IProjectBase>("Project", this);
                this._Project.ValueChanged += (sender, e) => { this.ProjectChangedHandler(); };
                this.AddProperty(this._Project as global::Sungero.Domain.Client.IProperty);
              }




              protected virtual void InitLeadingDocumentNavigationProperty()
              {
                this._LeadingDocument = new global::Sungero.Domain.Client.NavigationProperty<global::Sungero.Docflow.IOfficialDocument>("LeadingDocument", this);
                this._LeadingDocument.ValueChanged += (sender, e) => { this.LeadingDocumentChangedHandler(); };
                this.AddProperty(this._LeadingDocument as global::Sungero.Domain.Client.IProperty);
              }




              protected virtual void InitStorageNavigationProperty()
              {
                this._Storage = new global::Sungero.Domain.Client.NavigationProperty<global::Sungero.CoreEntities.IStorage>("Storage", this);
                this._Storage.ValueChanged += (sender, e) => { this.StorageChangedHandler(); };
                this.AddProperty(this._Storage as global::Sungero.Domain.Client.IProperty);
              }



            protected override void InitVersionsCollectionProperty()
            {
              this._Versions = new global::Sungero.Domain.Client.ListProperty<global::Sungero.Docflow.IOfficialDocumentVersions>("Versions", this);
              this._Versions.ValueChanged += (sender, e) => { this.VersionsChangedHandler(); };
              this.AddProperty((global::Sungero.Domain.Client.IProperty)this._Versions);
              this.SetVersionsEventHandlers();
            }

            protected virtual void InitTrackingCollectionProperty()
            {
              this._Tracking = new global::Sungero.Domain.Client.ListProperty<global::Sungero.Docflow.IOfficialDocumentTracking>("Tracking", this);
              this._Tracking.ValueChanged += (sender, e) => { this.TrackingChangedHandler(); };
              this.AddProperty((global::Sungero.Domain.Client.IProperty)this._Tracking);
              this.SetTrackingEventHandlers();
            }

            protected void SetTrackingEventHandlers()
            {
              this._Tracking.ChildEntityAdded += this.TrackingAddedHandler;
              this._Tracking.ChildEntityDeleted += this.TrackingDeletedHandler;
            }


    public OfficialDocument()
    {
            this._RegistrationNumber = new global::Sungero.Domain.Client.SimpleProperty<global::System.String>("RegistrationNumber", this);
            this._RegistrationNumber.ValueChanged += (sender, e) => { this.RegistrationNumberChangedHandler(); };
            this.AddProperty(this._RegistrationNumber);

            this._Index = new global::Sungero.Domain.Client.SimpleProperty<global::System.Int32?>("Index", this);
            this._Index.ValueChanged += (sender, e) => { this.IndexChangedHandler(); };
            this.AddProperty(this._Index);

            this._RegistrationDate = new global::Sungero.Domain.Client.SimpleProperty<global::System.DateTime?>("RegistrationDate", this);
            this._RegistrationDate.ValueChanged += (sender, e) => { this.RegistrationDateChangedHandler(); };
            this.AddProperty(this._RegistrationDate);

            this._PlacedToCaseFileDate = new global::Sungero.Domain.Client.SimpleProperty<global::System.DateTime?>("PlacedToCaseFileDate", this);
            this._PlacedToCaseFileDate.ValueChanged += (sender, e) => { this.PlacedToCaseFileDateChangedHandler(); };
            this.AddProperty(this._PlacedToCaseFileDate);

            this._IsReturnRequired = new global::Sungero.Domain.Client.SimpleProperty<global::System.Boolean?>("IsReturnRequired", this);
            this._IsReturnRequired.ValueChanged += (sender, e) => { this.IsReturnRequiredChangedHandler(); };
            this.AddProperty(this._IsReturnRequired);

            this._IsHeldByCounterParty = new global::Sungero.Domain.Client.SimpleProperty<global::System.Boolean?>("IsHeldByCounterParty", this);
            this._IsHeldByCounterParty.ValueChanged += (sender, e) => { this.IsHeldByCounterPartyChangedHandler(); };
            this.AddProperty(this._IsHeldByCounterParty);

            this._ReturnDeadline = new global::Sungero.Domain.Client.SimpleProperty<global::System.DateTime?>("ReturnDeadline", this);
            this._ReturnDeadline.ValueChanged += (sender, e) => { this.ReturnDeadlineChangedHandler(); };
            this.AddProperty(this._ReturnDeadline);

            this._ReturnDate = new global::Sungero.Domain.Client.SimpleProperty<global::System.DateTime?>("ReturnDate", this);
            this._ReturnDate.ValueChanged += (sender, e) => { this.ReturnDateChangedHandler(); };
            this.AddProperty(this._ReturnDate);

            this._LifeCycleState = new global::Sungero.Domain.Client.EnumSimpleProperty<global::Sungero.Core.Enumeration?>("LifeCycleState", this);
            this._LifeCycleState.ValueChanged += (sender, e) => { this.LifeCycleStateChangedHandler(); };
            this.AddProperty(this._LifeCycleState);

            this._RegistrationState = new global::Sungero.Domain.Client.EnumSimpleProperty<global::Sungero.Core.Enumeration?>("RegistrationState", this);
            this._RegistrationState.ValueChanged += (sender, e) => { this.RegistrationStateChangedHandler(); };
            this.AddProperty(this._RegistrationState);

            this._InternalApprovalState = new global::Sungero.Domain.Client.EnumSimpleProperty<global::Sungero.Core.Enumeration?>("InternalApprovalState", this);
            this._InternalApprovalState.ValueChanged += (sender, e) => { this.InternalApprovalStateChangedHandler(); };
            this.AddProperty(this._InternalApprovalState);

            this._ExternalApprovalState = new global::Sungero.Domain.Client.EnumSimpleProperty<global::Sungero.Core.Enumeration?>("ExternalApprovalState", this);
            this._ExternalApprovalState.ValueChanged += (sender, e) => { this.ExternalApprovalStateChangedHandler(); };
            this.AddProperty(this._ExternalApprovalState);

            this._ExecutionState = new global::Sungero.Domain.Client.EnumSimpleProperty<global::Sungero.Core.Enumeration?>("ExecutionState", this);
            this._ExecutionState.ValueChanged += (sender, e) => { this.ExecutionStateChangedHandler(); };
            this.AddProperty(this._ExecutionState);

            this._ControlExecutionState = new global::Sungero.Domain.Client.EnumSimpleProperty<global::Sungero.Core.Enumeration?>("ControlExecutionState", this);
            this._ControlExecutionState.ValueChanged += (sender, e) => { this.ControlExecutionStateChangedHandler(); };
            this.AddProperty(this._ControlExecutionState);

            this._ScheduledReturnDateFromCounterparty = new global::Sungero.Domain.Client.SimpleProperty<global::System.DateTime?>("ScheduledReturnDateFromCounterparty", this);
            this._ScheduledReturnDateFromCounterparty.ValueChanged += (sender, e) => { this.ScheduledReturnDateFromCounterpartyChangedHandler(); };
            this.AddProperty(this._ScheduledReturnDateFromCounterparty);

            this._Subject = new global::Sungero.Domain.Client.SimpleProperty<global::System.String>("Subject", this);
            this._Subject.ValueChanged += (sender, e) => { this.SubjectChangedHandler(); };
            this.AddProperty(this._Subject);

            this._Note = new global::Sungero.Domain.Client.SimpleProperty<global::System.String>("Note", this);
            this._Note.ValueChanged += (sender, e) => { this.NoteChangedHandler(); };
            this.AddProperty(this._Note);

            this._ExchangeState = new global::Sungero.Domain.Client.EnumSimpleProperty<global::Sungero.Core.Enumeration?>("ExchangeState", this);
            this._ExchangeState.ValueChanged += (sender, e) => { this.ExchangeStateChangedHandler(); };
            this.AddProperty(this._ExchangeState);

            this._VerificationState = new global::Sungero.Domain.Client.EnumSimpleProperty<global::Sungero.Core.Enumeration?>("VerificationState", this);
            this._VerificationState.ValueChanged += (sender, e) => { this.VerificationStateChangedHandler(); };
            this.AddProperty(this._VerificationState);

            this._DocumentDate = new global::Sungero.Domain.Client.SimpleProperty<global::System.DateTime?>("DocumentDate", this);
            this._DocumentDate.ValueChanged += (sender, e) => { this.DocumentDateChangedHandler(); };
            this.AddProperty(this._DocumentDate);

            this.InitDocumentRegisterNavigationProperty();

            this.InitDeliveryMethodNavigationProperty();

            this.InitCaseFileNavigationProperty();

            this.InitDeliveredToNavigationProperty();

            this.InitResponsibleForReturnEmployeeNavigationProperty();

            this.InitDocumentKindNavigationProperty();

            this.InitBusinessUnitNavigationProperty();

            this.InitOurSignatoryNavigationProperty();

            this.InitDocumentGroupNavigationProperty();

            this.InitAssigneeNavigationProperty();

            this.InitDepartmentNavigationProperty();

            this.InitPreparedByNavigationProperty();

            this.InitProjectNavigationProperty();

            this.InitLeadingDocumentNavigationProperty();

            this.InitStorageNavigationProperty();


            this.InitTrackingCollectionProperty();


            this._LocationState = new global::Sungero.Domain.Client.TextProperty("LocationState", this);
            this._LocationState.ValueChanged += (sender, e) => { this.LocationStateChangedHandler(); };
            this.AddProperty(this._LocationState);






    }

    #endregion

  }
}

// ==================================================================
// OfficialDocumentPresenter.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Client
{
  public class OfficialDocumentPresenter<T> :
    global::Sungero.Content.Client.ElectronicDocumentPresenter<T>
    where T : class, global::Sungero.Docflow.IOfficialDocument
  {
    #region Fields and properties

          private global::System.Windows.Input.ICommand _SendForApprovalCommand;

          public global::System.Windows.Input.ICommand SendForApprovalCommand
          {
            get
            {
              if (this._SendForApprovalCommand == null)
                  this._SendForApprovalCommand = new global::Sungero.Domain.Client.SingleEntityCommand<T>("SendForApproval", this, this.SendForApproval, this.CanSendForApproval) { IsEmptyParameterAllowed = true };
              return this._SendForApprovalCommand;
            }
          }
          private global::System.Windows.Input.ICommand _SendActionItemCommand;

          public global::System.Windows.Input.ICommand SendActionItemCommand
          {
            get
            {
              if (this._SendActionItemCommand == null)
                  this._SendActionItemCommand = new global::Sungero.Domain.Client.SingleEntityCommand<T>("SendActionItem", this, this.SendActionItem, this.CanSendActionItem) { IsEmptyParameterAllowed = true };
              return this._SendActionItemCommand;
            }
          }
          private global::System.Windows.Input.ICommand _RegisterCommand;

          public global::System.Windows.Input.ICommand RegisterCommand
          {
            get
            {
              if (this._RegisterCommand == null)
                  this._RegisterCommand = new global::Sungero.Domain.Client.SingleEntityCommand<T>("Register", this, this.Register, this.CanRegister) { IsEmptyParameterAllowed = true };
              return this._RegisterCommand;
            }
          }
          private global::System.Windows.Input.ICommand _ChangeRequisitesCommand;

          public global::System.Windows.Input.ICommand ChangeRequisitesCommand
          {
            get
            {
              if (this._ChangeRequisitesCommand == null)
                  this._ChangeRequisitesCommand = new global::Sungero.Domain.Client.SingleEntityCommand<T>("ChangeRequisites", this, this.ChangeRequisites, this.CanChangeRequisites) { IsEmptyParameterAllowed = true };
              return this._ChangeRequisitesCommand;
            }
          }
          private global::System.Windows.Input.ICommand _AssignNumberCommand;

          public global::System.Windows.Input.ICommand AssignNumberCommand
          {
            get
            {
              if (this._AssignNumberCommand == null)
                  this._AssignNumberCommand = new global::Sungero.Domain.Client.SingleEntityCommand<T>("AssignNumber", this, this.AssignNumber, this.CanAssignNumber) { IsEmptyParameterAllowed = true };
              return this._AssignNumberCommand;
            }
          }
          private global::System.Windows.Input.ICommand _CancelRegistrationCommand;

          public global::System.Windows.Input.ICommand CancelRegistrationCommand
          {
            get
            {
              if (this._CancelRegistrationCommand == null)
                  this._CancelRegistrationCommand = new global::Sungero.Domain.Client.SingleEntityCommand<T>("CancelRegistration", this, this.CancelRegistration, this.CanCancelRegistration) { IsEmptyParameterAllowed = true };
              return this._CancelRegistrationCommand;
            }
          }
          private global::System.Windows.Input.ICommand _ShowRegistrationPaneCommand;

          public global::System.Windows.Input.ICommand ShowRegistrationPaneCommand
          {
            get
            {
              if (this._ShowRegistrationPaneCommand == null)
                  this._ShowRegistrationPaneCommand = new global::Sungero.Domain.Client.SingleEntityCommand<T>("ShowRegistrationPane", this, this.ShowRegistrationPane, this.CanShowRegistrationPane) { IsEmptyParameterAllowed = true };
              return this._ShowRegistrationPaneCommand;
            }
          }
          private global::System.Windows.Input.ICommand _ShowReturnAssignmentsCommand;

          public global::System.Windows.Input.ICommand ShowReturnAssignmentsCommand
          {
            get
            {
              if (this._ShowReturnAssignmentsCommand == null)
                  this._ShowReturnAssignmentsCommand = new global::Sungero.Domain.Client.SingleChildEntityCommand<global::Sungero.Docflow.IOfficialDocumentTracking>("ShowReturnAssignments", this, this.ShowReturnAssignments, this.CanShowReturnAssignments);
              return this._ShowReturnAssignmentsCommand;
            }
          }
          private global::System.Windows.Input.ICommand _ApprovalFormCommand;

          public global::System.Windows.Input.ICommand ApprovalFormCommand
          {
            get
            {
              if (this._ApprovalFormCommand == null)
                  this._ApprovalFormCommand = new global::Sungero.Domain.Client.SingleEntityCommand<T>("ApprovalForm", this, this.ApprovalForm, this.CanApprovalForm) { IsEmptyParameterAllowed = true };
              return this._ApprovalFormCommand;
            }
          }
          private global::System.Windows.Input.ICommand _SendForFreeApprovalCommand;

          public global::System.Windows.Input.ICommand SendForFreeApprovalCommand
          {
            get
            {
              if (this._SendForFreeApprovalCommand == null)
                  this._SendForFreeApprovalCommand = new global::Sungero.Domain.Client.SingleEntityCommand<T>("SendForFreeApproval", this, this.SendForFreeApproval, this.CanSendForFreeApproval) { IsEmptyParameterAllowed = true };
              return this._SendForFreeApprovalCommand;
            }
          }
          private global::System.Windows.Input.ICommand _SendForReviewCommand;

          public global::System.Windows.Input.ICommand SendForReviewCommand
          {
            get
            {
              if (this._SendForReviewCommand == null)
                  this._SendForReviewCommand = new global::Sungero.Domain.Client.SingleEntityCommand<T>("SendForReview", this, this.SendForReview, this.CanSendForReview) { IsEmptyParameterAllowed = true };
              return this._SendForReviewCommand;
            }
          }
          private global::System.Windows.Input.ICommand _CreateAddendumCommand;

          public global::System.Windows.Input.ICommand CreateAddendumCommand
          {
            get
            {
              if (this._CreateAddendumCommand == null)
                  this._CreateAddendumCommand = new global::Sungero.Domain.Client.SingleEntityCommand<T>("CreateAddendum", this, this.CreateAddendum, this.CanCreateAddendum) { IsEmptyParameterAllowed = true };
              return this._CreateAddendumCommand;
            }
          }
          private global::System.Windows.Input.ICommand _SendToCounterpartyCommand;

          public global::System.Windows.Input.ICommand SendToCounterpartyCommand
          {
            get
            {
              if (this._SendToCounterpartyCommand == null)
                  this._SendToCounterpartyCommand = new global::Sungero.Domain.Client.SingleEntityCommand<T>("SendToCounterparty", this, this.SendToCounterparty, this.CanSendToCounterparty) { IsEmptyParameterAllowed = true };
              return this._SendToCounterpartyCommand;
            }
          }
          private global::System.Windows.Input.ICommand _OpenInExchangeServiceCommand;

          public global::System.Windows.Input.ICommand OpenInExchangeServiceCommand
          {
            get
            {
              if (this._OpenInExchangeServiceCommand == null)
                  this._OpenInExchangeServiceCommand = new global::Sungero.Domain.Client.SingleEntityCommand<T>("OpenInExchangeService", this, this.OpenInExchangeService, this.CanOpenInExchangeService) { IsEmptyParameterAllowed = true };
              return this._OpenInExchangeServiceCommand;
            }
          }
          private global::System.Windows.Input.ICommand _OpenExchangeOrderReportCommand;

          public global::System.Windows.Input.ICommand OpenExchangeOrderReportCommand
          {
            get
            {
              if (this._OpenExchangeOrderReportCommand == null)
                  this._OpenExchangeOrderReportCommand = new global::Sungero.Domain.Client.SingleEntityCommand<T>("OpenExchangeOrderReport", this, this.OpenExchangeOrderReport, this.CanOpenExchangeOrderReport) { IsEmptyParameterAllowed = true };
              return this._OpenExchangeOrderReportCommand;
            }
          }
          private global::System.Windows.Input.ICommand _OpenOriginalCommand;

          public global::System.Windows.Input.ICommand OpenOriginalCommand
          {
            get
            {
              if (this._OpenOriginalCommand == null)
                  this._OpenOriginalCommand = new global::Sungero.Domain.Client.SingleChildEntityCommand<global::Sungero.Docflow.IOfficialDocumentVersions>("OpenOriginal", this, this.OpenOriginal, this.CanOpenOriginal);
              return this._OpenOriginalCommand;
            }
          }
          private global::System.Windows.Input.ICommand _SendForAcquaintanceCommand;

          public global::System.Windows.Input.ICommand SendForAcquaintanceCommand
          {
            get
            {
              if (this._SendForAcquaintanceCommand == null)
                  this._SendForAcquaintanceCommand = new global::Sungero.Domain.Client.SingleEntityCommand<T>("SendForAcquaintance", this, this.SendForAcquaintance, this.CanSendForAcquaintance) { IsEmptyParameterAllowed = true };
              return this._SendForAcquaintanceCommand;
            }
          }
          private global::System.Windows.Input.ICommand _ShowAcquaintanceReportCommand;

          public global::System.Windows.Input.ICommand ShowAcquaintanceReportCommand
          {
            get
            {
              if (this._ShowAcquaintanceReportCommand == null)
                  this._ShowAcquaintanceReportCommand = new global::Sungero.Domain.Client.SingleEntityCommand<T>("ShowAcquaintanceReport", this, this.ShowAcquaintanceReport, this.CanShowAcquaintanceReport) { IsEmptyParameterAllowed = true };
              return this._ShowAcquaintanceReportCommand;
            }
          }
          private global::System.Windows.Input.ICommand _BarcodeReportCommand;

          public global::System.Windows.Input.ICommand BarcodeReportCommand
          {
            get
            {
              if (this._BarcodeReportCommand == null)
                  this._BarcodeReportCommand = new global::Sungero.Domain.Client.SingleEntityCommand<T>("BarcodeReport", this, this.BarcodeReport, this.CanBarcodeReport) { IsEmptyParameterAllowed = true };
              return this._BarcodeReportCommand;
            }
          }
          private global::System.Windows.Input.ICommand _ShowRelatedDocumentsCommand;

          public global::System.Windows.Input.ICommand ShowRelatedDocumentsCommand
          {
            get
            {
              if (this._ShowRelatedDocumentsCommand == null)
                  this._ShowRelatedDocumentsCommand = new global::Sungero.Domain.Client.SingleEntityCommand<T>("ShowRelatedDocuments", this, this.ShowRelatedDocuments, this.CanShowRelatedDocuments) { IsEmptyParameterAllowed = true };
              return this._ShowRelatedDocumentsCommand;
            }
          }
          private global::System.Windows.Input.ICommand _ConvertToPdfCommand;

          public global::System.Windows.Input.ICommand ConvertToPdfCommand
          {
            get
            {
              if (this._ConvertToPdfCommand == null)
                  this._ConvertToPdfCommand = new global::Sungero.Domain.Client.SingleEntityCommand<T>("ConvertToPdf", this, this.ConvertToPdf, this.CanConvertToPdf) { IsEmptyParameterAllowed = true };
              return this._ConvertToPdfCommand;
            }
          }
          private global::System.Windows.Input.ICommand _CreateManyAddendumCommand;

          public global::System.Windows.Input.ICommand CreateManyAddendumCommand
          {
            get
            {
              if (this._CreateManyAddendumCommand == null)
                  this._CreateManyAddendumCommand = new global::Sungero.Domain.Client.SingleEntityCommand<T>("CreateManyAddendum", this, this.CreateManyAddendum, this.CanCreateManyAddendum) { IsEmptyParameterAllowed = true };
              return this._CreateManyAddendumCommand;
            }
          }
          private global::System.Windows.Input.ICommand _ChangeDocumentTypeCommand;

          public global::System.Windows.Input.ICommand ChangeDocumentTypeCommand
          {
            get
            {
              if (this._ChangeDocumentTypeCommand == null)
                  this._ChangeDocumentTypeCommand = new global::Sungero.Domain.Client.SingleEntityCommand<T>("ChangeDocumentType", this, this.ChangeDocumentType, this.CanChangeDocumentType) { IsEmptyParameterAllowed = true };
              return this._ChangeDocumentTypeCommand;
            }
          }




    #endregion

    #region Methods

              private bool CanSendForApproval(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfCanExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this);
                return ((Sungero.Docflow.Client.OfficialDocumentActions)(entity as Sungero.Docflow.Client.OfficialDocument).ActionsHandlers).CanSendForApproval(args);
              }

              private void SendForApproval(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this, entity.Info.Actions.SendForApproval);
                ((Sungero.Docflow.Client.OfficialDocumentActions)(entity as Sungero.Docflow.Client.OfficialDocument).ActionsHandlers).SendForApproval(args);
              }

              private bool CanSendActionItem(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfCanExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this);
                return ((Sungero.Docflow.Client.OfficialDocumentActions)(entity as Sungero.Docflow.Client.OfficialDocument).ActionsHandlers).CanSendActionItem(args);
              }

              private void SendActionItem(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this, entity.Info.Actions.SendActionItem);
                ((Sungero.Docflow.Client.OfficialDocumentActions)(entity as Sungero.Docflow.Client.OfficialDocument).ActionsHandlers).SendActionItem(args);
              }

              private bool CanRegister(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfCanExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this);
                return ((Sungero.Docflow.Client.OfficialDocumentActions)(entity as Sungero.Docflow.Client.OfficialDocument).ActionsHandlers).CanRegister(args);
              }

              private void Register(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this, entity.Info.Actions.Register);
                ((Sungero.Docflow.Client.OfficialDocumentActions)(entity as Sungero.Docflow.Client.OfficialDocument).ActionsHandlers).Register(args);
              }

              private bool CanChangeRequisites(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfCanExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this);
                return ((Sungero.Docflow.Client.OfficialDocumentActions)(entity as Sungero.Docflow.Client.OfficialDocument).ActionsHandlers).CanChangeRequisites(args);
              }

              private void ChangeRequisites(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this, entity.Info.Actions.ChangeRequisites);
                ((Sungero.Docflow.Client.OfficialDocumentActions)(entity as Sungero.Docflow.Client.OfficialDocument).ActionsHandlers).ChangeRequisites(args);
              }

              private bool CanAssignNumber(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfCanExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this);
                return ((Sungero.Docflow.Client.OfficialDocumentActions)(entity as Sungero.Docflow.Client.OfficialDocument).ActionsHandlers).CanAssignNumber(args);
              }

              private void AssignNumber(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this, entity.Info.Actions.AssignNumber);
                ((Sungero.Docflow.Client.OfficialDocumentActions)(entity as Sungero.Docflow.Client.OfficialDocument).ActionsHandlers).AssignNumber(args);
              }

              private bool CanCancelRegistration(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfCanExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this);
                return ((Sungero.Docflow.Client.OfficialDocumentActions)(entity as Sungero.Docflow.Client.OfficialDocument).ActionsHandlers).CanCancelRegistration(args);
              }

              private void CancelRegistration(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this, entity.Info.Actions.CancelRegistration);
                ((Sungero.Docflow.Client.OfficialDocumentActions)(entity as Sungero.Docflow.Client.OfficialDocument).ActionsHandlers).CancelRegistration(args);
              }

              private bool CanShowRegistrationPane(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfCanExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this);
                return ((Sungero.Docflow.Client.OfficialDocumentActions)(entity as Sungero.Docflow.Client.OfficialDocument).ActionsHandlers).CanShowRegistrationPane(args);
              }

              private void ShowRegistrationPane(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this, entity.Info.Actions.ShowRegistrationPane);
                ((Sungero.Docflow.Client.OfficialDocumentActions)(entity as Sungero.Docflow.Client.OfficialDocument).ActionsHandlers).ShowRegistrationPane(args);
              }

            private bool CanShowReturnAssignments(global::Sungero.Domain.Shared.IChildEntity selectedEntity,
              global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Domain.Shared.IChildEntity> entityCollection)
            {
              var args = new global::Sungero.Domain.Client.WpfCanExecuteChildCollectionActionArgs(this.Entity, this);
              return global::Sungero.Domain.Client.ActionExecutor.CanExecuteChildEntityAction<global::Sungero.Domain.Client.WpfCanExecuteChildCollectionActionArgs>(selectedEntity, entityCollection, args,
                ((Sungero.Docflow.Client.OfficialDocumentTrackingActions)(this.Entity as global::Sungero.Docflow.Client.OfficialDocument).TrackingActionsHandlers).CanShowReturnAssignments);
            }

            private void ShowReturnAssignments(global::Sungero.Domain.Shared.IChildEntity selectedEntity,
              global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Domain.Shared.IChildEntity> entityCollection)
            {
              var args = new global::Sungero.Domain.Client.WpfExecuteChildCollectionActionArgs(this.Entity, this);
              global::Sungero.Domain.Client.ActionExecutor.ExecuteChildEntityAction<global::Sungero.Domain.Client.WpfExecuteChildCollectionActionArgs>(selectedEntity, entityCollection, args,
                ((Sungero.Docflow.Client.OfficialDocumentTrackingActions)(this.Entity as global::Sungero.Docflow.Client.OfficialDocument).TrackingActionsHandlers).ShowReturnAssignments);
            }
              private bool CanApprovalForm(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfCanExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this);
                return ((Sungero.Docflow.Client.OfficialDocumentActions)(entity as Sungero.Docflow.Client.OfficialDocument).ActionsHandlers).CanApprovalForm(args);
              }

              private void ApprovalForm(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this, entity.Info.Actions.ApprovalForm);
                ((Sungero.Docflow.Client.OfficialDocumentActions)(entity as Sungero.Docflow.Client.OfficialDocument).ActionsHandlers).ApprovalForm(args);
              }

              private bool CanSendForFreeApproval(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfCanExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this);
                return ((Sungero.Docflow.Client.OfficialDocumentActions)(entity as Sungero.Docflow.Client.OfficialDocument).ActionsHandlers).CanSendForFreeApproval(args);
              }

              private void SendForFreeApproval(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this, entity.Info.Actions.SendForFreeApproval);
                ((Sungero.Docflow.Client.OfficialDocumentActions)(entity as Sungero.Docflow.Client.OfficialDocument).ActionsHandlers).SendForFreeApproval(args);
              }

              private bool CanSendForReview(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfCanExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this);
                return ((Sungero.Docflow.Client.OfficialDocumentActions)(entity as Sungero.Docflow.Client.OfficialDocument).ActionsHandlers).CanSendForReview(args);
              }

              private void SendForReview(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this, entity.Info.Actions.SendForReview);
                ((Sungero.Docflow.Client.OfficialDocumentActions)(entity as Sungero.Docflow.Client.OfficialDocument).ActionsHandlers).SendForReview(args);
              }

              private bool CanCreateAddendum(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfCanExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this);
                return ((Sungero.Docflow.Client.OfficialDocumentActions)(entity as Sungero.Docflow.Client.OfficialDocument).ActionsHandlers).CanCreateAddendum(args);
              }

              private void CreateAddendum(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this, entity.Info.Actions.CreateAddendum);
                ((Sungero.Docflow.Client.OfficialDocumentActions)(entity as Sungero.Docflow.Client.OfficialDocument).ActionsHandlers).CreateAddendum(args);
              }

              private bool CanSendToCounterparty(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfCanExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this);
                return ((Sungero.Docflow.Client.OfficialDocumentActions)(entity as Sungero.Docflow.Client.OfficialDocument).ActionsHandlers).CanSendToCounterparty(args);
              }

              private void SendToCounterparty(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this, entity.Info.Actions.SendToCounterparty);
                ((Sungero.Docflow.Client.OfficialDocumentActions)(entity as Sungero.Docflow.Client.OfficialDocument).ActionsHandlers).SendToCounterparty(args);
              }

              private bool CanOpenInExchangeService(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfCanExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this);
                return ((Sungero.Docflow.Client.OfficialDocumentActions)(entity as Sungero.Docflow.Client.OfficialDocument).ActionsHandlers).CanOpenInExchangeService(args);
              }

              private void OpenInExchangeService(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this, entity.Info.Actions.OpenInExchangeService);
                ((Sungero.Docflow.Client.OfficialDocumentActions)(entity as Sungero.Docflow.Client.OfficialDocument).ActionsHandlers).OpenInExchangeService(args);
              }

              private bool CanOpenExchangeOrderReport(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfCanExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this);
                return ((Sungero.Docflow.Client.OfficialDocumentActions)(entity as Sungero.Docflow.Client.OfficialDocument).ActionsHandlers).CanOpenExchangeOrderReport(args);
              }

              private void OpenExchangeOrderReport(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this, entity.Info.Actions.OpenExchangeOrderReport);
                ((Sungero.Docflow.Client.OfficialDocumentActions)(entity as Sungero.Docflow.Client.OfficialDocument).ActionsHandlers).OpenExchangeOrderReport(args);
              }

            private bool CanOpenOriginal(global::Sungero.Domain.Shared.IChildEntity selectedEntity,
              global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Domain.Shared.IChildEntity> entityCollection)
            {
              var args = new global::Sungero.Domain.Client.WpfCanExecuteChildCollectionActionArgs(this.Entity, this);
              return global::Sungero.Domain.Client.ActionExecutor.CanExecuteChildEntityAction<global::Sungero.Domain.Client.WpfCanExecuteChildCollectionActionArgs>(selectedEntity, entityCollection, args,
                ((Sungero.Docflow.Client.OfficialDocumentVersionsActions)(this.Entity as global::Sungero.Docflow.Client.OfficialDocument).VersionsActionsHandlers).CanOpenOriginal);
            }

            private void OpenOriginal(global::Sungero.Domain.Shared.IChildEntity selectedEntity,
              global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Domain.Shared.IChildEntity> entityCollection)
            {
              var args = new global::Sungero.Domain.Client.WpfExecuteChildCollectionActionArgs(this.Entity, this);
              global::Sungero.Domain.Client.ActionExecutor.ExecuteChildEntityAction<global::Sungero.Domain.Client.WpfExecuteChildCollectionActionArgs>(selectedEntity, entityCollection, args,
                ((Sungero.Docflow.Client.OfficialDocumentVersionsActions)(this.Entity as global::Sungero.Docflow.Client.OfficialDocument).VersionsActionsHandlers).OpenOriginal);
            }
              private bool CanSendForAcquaintance(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfCanExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this);
                return ((Sungero.Docflow.Client.OfficialDocumentActions)(entity as Sungero.Docflow.Client.OfficialDocument).ActionsHandlers).CanSendForAcquaintance(args);
              }

              private void SendForAcquaintance(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this, entity.Info.Actions.SendForAcquaintance);
                ((Sungero.Docflow.Client.OfficialDocumentActions)(entity as Sungero.Docflow.Client.OfficialDocument).ActionsHandlers).SendForAcquaintance(args);
              }

              private bool CanShowAcquaintanceReport(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfCanExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this);
                return ((Sungero.Docflow.Client.OfficialDocumentActions)(entity as Sungero.Docflow.Client.OfficialDocument).ActionsHandlers).CanShowAcquaintanceReport(args);
              }

              private void ShowAcquaintanceReport(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this, entity.Info.Actions.ShowAcquaintanceReport);
                ((Sungero.Docflow.Client.OfficialDocumentActions)(entity as Sungero.Docflow.Client.OfficialDocument).ActionsHandlers).ShowAcquaintanceReport(args);
              }

              private bool CanBarcodeReport(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfCanExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this);
                return ((Sungero.Docflow.Client.OfficialDocumentActions)(entity as Sungero.Docflow.Client.OfficialDocument).ActionsHandlers).CanBarcodeReport(args);
              }

              private void BarcodeReport(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this, entity.Info.Actions.BarcodeReport);
                ((Sungero.Docflow.Client.OfficialDocumentActions)(entity as Sungero.Docflow.Client.OfficialDocument).ActionsHandlers).BarcodeReport(args);
              }

              private bool CanShowRelatedDocuments(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfCanExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this);
                return ((Sungero.Docflow.Client.OfficialDocumentActions)(entity as Sungero.Docflow.Client.OfficialDocument).ActionsHandlers).CanShowRelatedDocuments(args);
              }

              private void ShowRelatedDocuments(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this, entity.Info.Actions.ShowRelatedDocuments);
                ((Sungero.Docflow.Client.OfficialDocumentActions)(entity as Sungero.Docflow.Client.OfficialDocument).ActionsHandlers).ShowRelatedDocuments(args);
              }

              private bool CanConvertToPdf(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfCanExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this);
                return ((Sungero.Docflow.Client.OfficialDocumentActions)(entity as Sungero.Docflow.Client.OfficialDocument).ActionsHandlers).CanConvertToPdf(args);
              }

              private void ConvertToPdf(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this, entity.Info.Actions.ConvertToPdf);
                ((Sungero.Docflow.Client.OfficialDocumentActions)(entity as Sungero.Docflow.Client.OfficialDocument).ActionsHandlers).ConvertToPdf(args);
              }

              private bool CanCreateManyAddendum(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfCanExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this);
                return ((Sungero.Docflow.Client.OfficialDocumentActions)(entity as Sungero.Docflow.Client.OfficialDocument).ActionsHandlers).CanCreateManyAddendum(args);
              }

              private void CreateManyAddendum(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this, entity.Info.Actions.CreateManyAddendum);
                ((Sungero.Docflow.Client.OfficialDocumentActions)(entity as Sungero.Docflow.Client.OfficialDocument).ActionsHandlers).CreateManyAddendum(args);
              }

              private bool CanChangeDocumentType(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfCanExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this);
                return ((Sungero.Docflow.Client.OfficialDocumentActions)(entity as Sungero.Docflow.Client.OfficialDocument).ActionsHandlers).CanChangeDocumentType(args);
              }

              private void ChangeDocumentType(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this, entity.Info.Actions.ChangeDocumentType);
                ((Sungero.Docflow.Client.OfficialDocumentActions)(entity as Sungero.Docflow.Client.OfficialDocument).ActionsHandlers).ChangeDocumentType(args);
              }


    #endregion

    #region Framework events

    protected override void EntityPropertyChangedEventHandler(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
    {
      base.EntityPropertyChangedEventHandler(sender, e);
    }

    #endregion

              protected global::Sungero.Domain.Client.IEntityCollectionPresenter _DocumentRegisterCollectionPresenter;
              public global::Sungero.Domain.Client.IEntityCollectionPresenter DocumentRegisterCollectionPresenter
              {
          get { return this._DocumentRegisterCollectionPresenter; }
        }
              protected global::Sungero.Domain.Client.IEntityCollectionPresenter _DeliveryMethodCollectionPresenter;
              public global::Sungero.Domain.Client.IEntityCollectionPresenter DeliveryMethodCollectionPresenter
              {
          get { return this._DeliveryMethodCollectionPresenter; }
        }
              protected global::Sungero.Domain.Client.IEntityCollectionPresenter _CaseFileCollectionPresenter;
              public global::Sungero.Domain.Client.IEntityCollectionPresenter CaseFileCollectionPresenter
              {
          get { return this._CaseFileCollectionPresenter; }
        }
              protected global::Sungero.Domain.Client.IEntityCollectionPresenter _DeliveredToCollectionPresenter;
              public global::Sungero.Domain.Client.IEntityCollectionPresenter DeliveredToCollectionPresenter
              {
          get { return this._DeliveredToCollectionPresenter; }
        }
              protected global::Sungero.Domain.Client.IEntityCollectionPresenter _ResponsibleForReturnEmployeeCollectionPresenter;
              public global::Sungero.Domain.Client.IEntityCollectionPresenter ResponsibleForReturnEmployeeCollectionPresenter
              {
          get { return this._ResponsibleForReturnEmployeeCollectionPresenter; }
        }
              protected global::Sungero.Domain.Client.IEntityCollectionPresenter _DocumentKindCollectionPresenter;
              public global::Sungero.Domain.Client.IEntityCollectionPresenter DocumentKindCollectionPresenter
              {
          get { return this._DocumentKindCollectionPresenter; }
        }
              protected global::Sungero.Domain.Client.IEntityCollectionPresenter _BusinessUnitCollectionPresenter;
              public global::Sungero.Domain.Client.IEntityCollectionPresenter BusinessUnitCollectionPresenter
              {
          get { return this._BusinessUnitCollectionPresenter; }
        }
              protected global::Sungero.Domain.Client.IEntityCollectionPresenter _OurSignatoryCollectionPresenter;
              public global::Sungero.Domain.Client.IEntityCollectionPresenter OurSignatoryCollectionPresenter
              {
          get { return this._OurSignatoryCollectionPresenter; }
        }
              protected global::Sungero.Domain.Client.IEntityCollectionPresenter _DocumentGroupCollectionPresenter;
              public global::Sungero.Domain.Client.IEntityCollectionPresenter DocumentGroupCollectionPresenter
              {
          get { return this._DocumentGroupCollectionPresenter; }
        }
              protected global::Sungero.Domain.Client.IEntityCollectionPresenter _AssigneeCollectionPresenter;
              public global::Sungero.Domain.Client.IEntityCollectionPresenter AssigneeCollectionPresenter
              {
          get { return this._AssigneeCollectionPresenter; }
        }
              protected global::Sungero.Domain.Client.IEntityCollectionPresenter _DepartmentCollectionPresenter;
              public global::Sungero.Domain.Client.IEntityCollectionPresenter DepartmentCollectionPresenter
              {
          get { return this._DepartmentCollectionPresenter; }
        }
              protected global::Sungero.Domain.Client.IEntityCollectionPresenter _PreparedByCollectionPresenter;
              public global::Sungero.Domain.Client.IEntityCollectionPresenter PreparedByCollectionPresenter
              {
          get { return this._PreparedByCollectionPresenter; }
        }
              protected global::Sungero.Domain.Client.IEntityCollectionPresenter _ProjectCollectionPresenter;
              public global::Sungero.Domain.Client.IEntityCollectionPresenter ProjectCollectionPresenter
              {
          get { return this._ProjectCollectionPresenter; }
        }
              protected global::Sungero.Domain.Client.IEntityCollectionPresenter _LeadingDocumentCollectionPresenter;
              public global::Sungero.Domain.Client.IEntityCollectionPresenter LeadingDocumentCollectionPresenter
              {
          get { return this._LeadingDocumentCollectionPresenter; }
        }
              protected global::Sungero.Domain.Client.IEntityCollectionPresenter _StorageCollectionPresenter;
              public global::Sungero.Domain.Client.IEntityCollectionPresenter StorageCollectionPresenter
              {
          get { return this._StorageCollectionPresenter; }
        }


                          protected global::Sungero.Domain.Client.IEntityCollectionPresenter _TrackingDeliveredToCollectionPresenter;
                          public global::Sungero.Domain.Client.IEntityCollectionPresenter TrackingDeliveredToCollectionPresenter
                          {
                  get { return this._TrackingDeliveredToCollectionPresenter; }
                }
                          protected global::Sungero.Domain.Client.IEntityCollectionPresenter _TrackingReturnTaskCollectionPresenter;
                          public global::Sungero.Domain.Client.IEntityCollectionPresenter TrackingReturnTaskCollectionPresenter
                          {
                  get { return this._TrackingReturnTaskCollectionPresenter; }
                }



    #region Constructors

    private void Init()
    {
              this._AssociatedApplicationCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Content.IAssociatedApplication>(() => this.Entity.Id, typeof(T), "AssociatedApplication");

              this._AuthorCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.CoreEntities.IUser>(() => this.Entity.Id, typeof(T), "Author");

                  this._DocumentRegisterCollectionPresenter = this.CreateCollectionPresenterForNavigationProperty<global::Sungero.Docflow.IDocumentRegister>(global::System.Guid.Parse("4c5fb509-bffb-40dc-9042-71271b13b452"));
              this._DocumentRegisterCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationProperty<global::Sungero.Docflow.IDocumentRegister>(() => this.Entity, typeof(T), "DocumentRegister");

                  this._DeliveryMethodCollectionPresenter = this.CreateCollectionPresenterForNavigationProperty<global::Sungero.Docflow.IMailDeliveryMethod>(global::System.Guid.Parse("bbbc063d-7367-4ea8-a777-5dd1bbe8e216"));
              this._DeliveryMethodCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Docflow.IMailDeliveryMethod>(() => this.Entity.Id, typeof(T), "DeliveryMethod");

                  this._CaseFileCollectionPresenter = this.CreateCollectionPresenterForNavigationProperty<global::Sungero.Docflow.ICaseFile>(global::System.Guid.Parse("d9f96caf-6431-49ee-baf3-deeaed16301b"));
              this._CaseFileCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Docflow.ICaseFile>(() => this.Entity.Id, typeof(T), "CaseFile");

                  this._DeliveredToCollectionPresenter = this.CreateCollectionPresenterForNavigationProperty<global::Sungero.Company.IEmployee>(global::System.Guid.Parse("75fe215c-e303-4d9c-8504-a46832073eaa"));
              this._DeliveredToCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Company.IEmployee>(() => this.Entity.Id, typeof(T), "DeliveredTo");

                  this._ResponsibleForReturnEmployeeCollectionPresenter = this.CreateCollectionPresenterForNavigationProperty<global::Sungero.Company.IEmployee>(global::System.Guid.Parse("8d6fa098-aadf-458d-93bd-05249f4c437b"));
              this._ResponsibleForReturnEmployeeCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Company.IEmployee>(() => this.Entity.Id, typeof(T), "ResponsibleForReturnEmployee");

                  this._DocumentKindCollectionPresenter = this.CreateCollectionPresenterForNavigationProperty<global::Sungero.Docflow.IDocumentKind>(global::System.Guid.Parse("91ac0e49-10fc-45a2-848a-0541e7fdd7cd"));
              this._DocumentKindCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationProperty<global::Sungero.Docflow.IDocumentKind>(() => this.Entity, typeof(T), "DocumentKind");

                  this._BusinessUnitCollectionPresenter = this.CreateCollectionPresenterForNavigationProperty<global::Sungero.Company.IBusinessUnit>(global::System.Guid.Parse("ed9f1bb0-d1cf-467e-8067-aca85212e44d"));
              this._BusinessUnitCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Company.IBusinessUnit>(() => this.Entity.Id, typeof(T), "BusinessUnit");

                  this._OurSignatoryCollectionPresenter = this.CreateCollectionPresenterForNavigationProperty<global::Sungero.Company.IEmployee>(global::System.Guid.Parse("a8cc5c2a-cf89-4611-a4f4-524975ad6abb"));
              this._OurSignatoryCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationProperty<global::Sungero.Company.IEmployee>(() => this.Entity, typeof(T), "OurSignatory");

                  this._DocumentGroupCollectionPresenter = this.CreateCollectionPresenterForNavigationProperty<global::Sungero.Docflow.IDocumentGroupBase>(global::System.Guid.Parse("50e10772-7165-4916-b8c5-b9ed30c3c151"));
              this._DocumentGroupCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationProperty<global::Sungero.Docflow.IDocumentGroupBase>(() => this.Entity, typeof(T), "DocumentGroup");

                  this._AssigneeCollectionPresenter = this.CreateCollectionPresenterForNavigationProperty<global::Sungero.Company.IEmployee>(global::System.Guid.Parse("736105fc-ec2e-482b-b7a8-23a45ea4e288"));
              this._AssigneeCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Company.IEmployee>(() => this.Entity.Id, typeof(T), "Assignee");

                  this._DepartmentCollectionPresenter = this.CreateCollectionPresenterForNavigationProperty<global::Sungero.Company.IDepartment>(global::System.Guid.Parse("fba56283-50dd-4ef9-8d22-e339feff7440"));
              this._DepartmentCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Company.IDepartment>(() => this.Entity.Id, typeof(T), "Department");

                  this._PreparedByCollectionPresenter = this.CreateCollectionPresenterForNavigationProperty<global::Sungero.Company.IEmployee>(global::System.Guid.Parse("4bc98f75-10a0-4d54-9f5a-2b88388376b2"));
              this._PreparedByCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Company.IEmployee>(() => this.Entity.Id, typeof(T), "PreparedBy");

                  this._ProjectCollectionPresenter = this.CreateCollectionPresenterForNavigationProperty<global::Sungero.Docflow.IProjectBase>(global::System.Guid.Parse("0658df80-f11a-482b-92e1-18fa78fc7778"));
              this._ProjectCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Docflow.IProjectBase>(() => this.Entity.Id, typeof(T), "Project");

                  this._LeadingDocumentCollectionPresenter = this.CreateCollectionPresenterForNavigationProperty<global::Sungero.Docflow.IOfficialDocument>(global::System.Guid.Parse("aae1f6ae-d090-4c5a-963e-44c8b79dc92b"));
              this._LeadingDocumentCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Docflow.IOfficialDocument>(() => this.Entity.Id, typeof(T), "LeadingDocument");

                  this._StorageCollectionPresenter = this.CreateCollectionPresenterForNavigationProperty<global::Sungero.CoreEntities.IStorage>(global::System.Guid.Parse("b1d0bcf5-1d6c-49a2-8680-2bd52ab58115"));
              this._StorageCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.CoreEntities.IStorage>(() => this.Entity.Id, typeof(T), "Storage");


                        this._VersionsAuthorCollectionPresenter
                        .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.CoreEntities.IUser>(() => this.Entity.Id, typeof(Sungero.Docflow.IOfficialDocumentVersions), "Author");

                        this._VersionsModifiedByCollectionPresenter
                        .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.CoreEntities.IUser>(() => this.Entity.Id, typeof(Sungero.Docflow.IOfficialDocumentVersions), "ModifiedBy");

                        this._VersionsAssociatedApplicationCollectionPresenter
                        .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Content.IAssociatedApplication>(() => this.Entity.Id, typeof(Sungero.Docflow.IOfficialDocumentVersions), "AssociatedApplication");

                        this._VersionsBodyAssociatedApplicationCollectionPresenter
                        .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Content.IAssociatedApplication>(() => this.Entity.Id, typeof(Sungero.Docflow.IOfficialDocumentVersions), "BodyAssociatedApplication");


                          this._TrackingDeliveredToCollectionPresenter = this.CreateCollectionPresenterForNavigationProperty<global::Sungero.Company.IEmployee>(global::System.Guid.Parse("697615e9-aa33-446c-b0c9-8d9caaf6a492"));
                        this._TrackingDeliveredToCollectionPresenter
                        .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Company.IEmployee>(() => this.Entity.Id, typeof(Sungero.Docflow.IOfficialDocumentTracking), "DeliveredTo");

                          this._TrackingReturnTaskCollectionPresenter = this.CreateCollectionPresenterForNavigationProperty<global::Sungero.Workflow.ITask>(global::System.Guid.Parse("142cd900-e1dd-4410-b991-55f7a09b34bc"));
                        this._TrackingReturnTaskCollectionPresenter
                        .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Workflow.ITask>(() => this.Entity.Id, typeof(Sungero.Docflow.IOfficialDocumentTracking), "ReturnTask");


    }

    public OfficialDocumentPresenter()
    {
      this.Init();
    }

    #endregion
  }
}

// ==================================================================
// OfficialDocumentCollectionPresenter.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Client
{
  public class OfficialDocumentCollectionPresenter<T> : 
    global::Sungero.Content.Client.ElectronicDocumentCollectionPresenter<T>
    where T: class, global::Sungero.Docflow.IOfficialDocument
  {
    #region Actions

          private global::System.Windows.Input.ICommand _SendForApprovalCommand;  

          public global::System.Windows.Input.ICommand SendForApprovalCommand 
          { 
            get
            { 
              if (this._SendForApprovalCommand == null)
                this._SendForApprovalCommand = new global::Sungero.Domain.Client.SingleEntityCommand<T>("SendForApproval", this, this.SendForApproval, this.CanSendForApproval) { IsEmptyParameterAllowed = true };
              return this._SendForApprovalCommand; 
            }
          }
          private global::System.Windows.Input.ICommand _SendActionItemCommand;  

          public global::System.Windows.Input.ICommand SendActionItemCommand 
          { 
            get
            { 
              if (this._SendActionItemCommand == null)
                this._SendActionItemCommand = new global::Sungero.Domain.Client.SingleEntityCommand<T>("SendActionItem", this, this.SendActionItem, this.CanSendActionItem) { IsEmptyParameterAllowed = true };
              return this._SendActionItemCommand; 
            }
          }
          private global::System.Windows.Input.ICommand _DeliverDocumentCommand;  

          public global::System.Windows.Input.ICommand DeliverDocumentCommand 
          { 
            get
            { 
              if (this._DeliverDocumentCommand == null)
                this._DeliverDocumentCommand = new global::Sungero.Domain.Client.SingleEntityCommand<T>("DeliverDocument", this, this.DeliverDocument, this.CanDeliverDocument) { IsEmptyParameterAllowed = true };
              return this._DeliverDocumentCommand; 
            }
          }
          private global::System.Windows.Input.ICommand _ReturnDocumentCommand;  

          public global::System.Windows.Input.ICommand ReturnDocumentCommand 
          { 
            get
            { 
              if (this._ReturnDocumentCommand == null)
                this._ReturnDocumentCommand = new global::Sungero.Domain.Client.SingleEntityCommand<T>("ReturnDocument", this, this.ReturnDocument, this.CanReturnDocument) { IsEmptyParameterAllowed = true };
              return this._ReturnDocumentCommand; 
            }
          }
          private global::System.Windows.Input.ICommand _ReturnFromCounterpartyCommand;  

          public global::System.Windows.Input.ICommand ReturnFromCounterpartyCommand 
          { 
            get
            { 
              if (this._ReturnFromCounterpartyCommand == null)
                this._ReturnFromCounterpartyCommand = new global::Sungero.Domain.Client.SingleEntityCommand<T>("ReturnFromCounterparty", this, this.ReturnFromCounterparty, this.CanReturnFromCounterparty) { IsEmptyParameterAllowed = true };
              return this._ReturnFromCounterpartyCommand; 
            }
          }
          private global::System.Windows.Input.ICommand _ShowDocumentReturnCommand;  

          public global::System.Windows.Input.ICommand ShowDocumentReturnCommand 
          { 
            get
            { 
              if (this._ShowDocumentReturnCommand == null)
                this._ShowDocumentReturnCommand = new global::Sungero.Domain.Client.PresenterCommand("ShowDocumentReturn", this, this.ShowDocumentReturn, this.CanShowDocumentReturn);
              return this._ShowDocumentReturnCommand; 
            }
          }
          private global::System.Windows.Input.ICommand _ApprovalFormCommand;  

          public global::System.Windows.Input.ICommand ApprovalFormCommand 
          { 
            get
            { 
              if (this._ApprovalFormCommand == null)
                this._ApprovalFormCommand = new global::Sungero.Domain.Client.SingleEntityCommand<T>("ApprovalForm", this, this.ApprovalForm, this.CanApprovalForm) { IsEmptyParameterAllowed = true };
              return this._ApprovalFormCommand; 
            }
          }
          private global::System.Windows.Input.ICommand _SendForFreeApprovalCommand;  

          public global::System.Windows.Input.ICommand SendForFreeApprovalCommand 
          { 
            get
            { 
              if (this._SendForFreeApprovalCommand == null)
                this._SendForFreeApprovalCommand = new global::Sungero.Domain.Client.SingleEntityCommand<T>("SendForFreeApproval", this, this.SendForFreeApproval, this.CanSendForFreeApproval) { IsEmptyParameterAllowed = true };
              return this._SendForFreeApprovalCommand; 
            }
          }
          private global::System.Windows.Input.ICommand _SendForReviewCommand;  

          public global::System.Windows.Input.ICommand SendForReviewCommand 
          { 
            get
            { 
              if (this._SendForReviewCommand == null)
                this._SendForReviewCommand = new global::Sungero.Domain.Client.SingleEntityCommand<T>("SendForReview", this, this.SendForReview, this.CanSendForReview) { IsEmptyParameterAllowed = true };
              return this._SendForReviewCommand; 
            }
          }
          private global::System.Windows.Input.ICommand _CreateAddendumCommand;  

          public global::System.Windows.Input.ICommand CreateAddendumCommand 
          { 
            get
            { 
              if (this._CreateAddendumCommand == null)
                this._CreateAddendumCommand = new global::Sungero.Domain.Client.SingleEntityCommand<T>("CreateAddendum", this, this.CreateAddendum, this.CanCreateAddendum) { IsEmptyParameterAllowed = true };
              return this._CreateAddendumCommand; 
            }
          }
          private global::System.Windows.Input.ICommand _SendToCounterpartyCommand;  

          public global::System.Windows.Input.ICommand SendToCounterpartyCommand 
          { 
            get
            { 
              if (this._SendToCounterpartyCommand == null)
                this._SendToCounterpartyCommand = new global::Sungero.Domain.Client.SingleEntityCommand<T>("SendToCounterparty", this, this.SendToCounterparty, this.CanSendToCounterparty) { IsEmptyParameterAllowed = true };
              return this._SendToCounterpartyCommand; 
            }
          }
          private global::System.Windows.Input.ICommand _OpenExchangeOrderReportCommand;  

          public global::System.Windows.Input.ICommand OpenExchangeOrderReportCommand 
          { 
            get
            { 
              if (this._OpenExchangeOrderReportCommand == null)
                this._OpenExchangeOrderReportCommand = new global::Sungero.Domain.Client.SingleEntityCommand<T>("OpenExchangeOrderReport", this, this.OpenExchangeOrderReport, this.CanOpenExchangeOrderReport) { IsEmptyParameterAllowed = true };
              return this._OpenExchangeOrderReportCommand; 
            }
          }
          private global::System.Windows.Input.ICommand _SendForAcquaintanceCommand;  

          public global::System.Windows.Input.ICommand SendForAcquaintanceCommand 
          { 
            get
            { 
              if (this._SendForAcquaintanceCommand == null)
                this._SendForAcquaintanceCommand = new global::Sungero.Domain.Client.SingleEntityCommand<T>("SendForAcquaintance", this, this.SendForAcquaintance, this.CanSendForAcquaintance) { IsEmptyParameterAllowed = true };
              return this._SendForAcquaintanceCommand; 
            }
          }
          private global::System.Windows.Input.ICommand _ShowAcquaintanceReportCommand;  

          public global::System.Windows.Input.ICommand ShowAcquaintanceReportCommand 
          { 
            get
            { 
              if (this._ShowAcquaintanceReportCommand == null)
                this._ShowAcquaintanceReportCommand = new global::Sungero.Domain.Client.SingleEntityCommand<T>("ShowAcquaintanceReport", this, this.ShowAcquaintanceReport, this.CanShowAcquaintanceReport) { IsEmptyParameterAllowed = true };
              return this._ShowAcquaintanceReportCommand; 
            }
          }
          private global::System.Windows.Input.ICommand _CreateManyAddendumCommand;  

          public global::System.Windows.Input.ICommand CreateManyAddendumCommand 
          { 
            get
            { 
              if (this._CreateManyAddendumCommand == null)
                this._CreateManyAddendumCommand = new global::Sungero.Domain.Client.SingleEntityCommand<T>("CreateManyAddendum", this, this.CreateManyAddendum, this.CanCreateManyAddendum) { IsEmptyParameterAllowed = true };
              return this._CreateManyAddendumCommand; 
            }
          }
          private global::System.Windows.Input.ICommand _ChangeDocumentTypeCommand;  

          public global::System.Windows.Input.ICommand ChangeDocumentTypeCommand 
          { 
            get
            { 
              if (this._ChangeDocumentTypeCommand == null)
                this._ChangeDocumentTypeCommand = new global::Sungero.Domain.Client.SingleEntityCommand<T>("ChangeDocumentType", this, this.ChangeDocumentType, this.CanChangeDocumentType) { IsEmptyParameterAllowed = true };
              return this._ChangeDocumentTypeCommand; 
            }
          }



    #endregion

    #region Methods

        private bool CanSendForApproval(T entity)
        {
          var args = new global::Sungero.Domain.Client.WpfCanExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Collection, entity, this);
          return ((Sungero.Docflow.Client.OfficialDocumentActions)(entity as Sungero.Docflow.Client.OfficialDocument).ActionsHandlers).CanSendForApproval(args);
        }

        private void SendForApproval(T entity)
        {
          var args = new global::Sungero.Domain.Client.WpfExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Collection, entity, this, entity.Info.Actions.SendForApproval);
          ((Sungero.Docflow.Client.OfficialDocumentActions)(entity as Sungero.Docflow.Client.OfficialDocument).ActionsHandlers).SendForApproval(args);
        }

        private bool CanSendActionItem(T entity)
        {
          var args = new global::Sungero.Domain.Client.WpfCanExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Collection, entity, this);
          return ((Sungero.Docflow.Client.OfficialDocumentActions)(entity as Sungero.Docflow.Client.OfficialDocument).ActionsHandlers).CanSendActionItem(args);
        }

        private void SendActionItem(T entity)
        {
          var args = new global::Sungero.Domain.Client.WpfExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Collection, entity, this, entity.Info.Actions.SendActionItem);
          ((Sungero.Docflow.Client.OfficialDocumentActions)(entity as Sungero.Docflow.Client.OfficialDocument).ActionsHandlers).SendActionItem(args);
        }

        private bool CanDeliverDocument(T entity)
        {
          var args = new global::Sungero.Domain.Client.WpfCanExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Collection, entity, this);
          return ((Sungero.Docflow.Client.OfficialDocumentActions)(entity as Sungero.Docflow.Client.OfficialDocument).ActionsHandlers).CanDeliverDocument(args);
        }

        private void DeliverDocument(T entity)
        {
          var args = new global::Sungero.Domain.Client.WpfExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Collection, entity, this, entity.Info.Actions.DeliverDocument);
          ((Sungero.Docflow.Client.OfficialDocumentActions)(entity as Sungero.Docflow.Client.OfficialDocument).ActionsHandlers).DeliverDocument(args);
        }

        private bool CanReturnDocument(T entity)
        {
          var args = new global::Sungero.Domain.Client.WpfCanExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Collection, entity, this);
          return ((Sungero.Docflow.Client.OfficialDocumentActions)(entity as Sungero.Docflow.Client.OfficialDocument).ActionsHandlers).CanReturnDocument(args);
        }

        private void ReturnDocument(T entity)
        {
          var args = new global::Sungero.Domain.Client.WpfExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Collection, entity, this, entity.Info.Actions.ReturnDocument);
          ((Sungero.Docflow.Client.OfficialDocumentActions)(entity as Sungero.Docflow.Client.OfficialDocument).ActionsHandlers).ReturnDocument(args);
        }

        private bool CanReturnFromCounterparty(T entity)
        {
          var args = new global::Sungero.Domain.Client.WpfCanExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Collection, entity, this);
          return ((Sungero.Docflow.Client.OfficialDocumentActions)(entity as Sungero.Docflow.Client.OfficialDocument).ActionsHandlers).CanReturnFromCounterparty(args);
        }

        private void ReturnFromCounterparty(T entity)
        {
          var args = new global::Sungero.Domain.Client.WpfExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Collection, entity, this, entity.Info.Actions.ReturnFromCounterparty);
          ((Sungero.Docflow.Client.OfficialDocumentActions)(entity as Sungero.Docflow.Client.OfficialDocument).ActionsHandlers).ReturnFromCounterparty(args);
        }

        protected virtual bool CanShowDocumentReturn()
        {
          var args = new global::Sungero.Domain.Client.WpfCanExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Collection, null, this);
          return Sungero.Docflow.Client.OfficialDocumentStaticActions.CanShowDocumentReturn(args);
        }

        protected virtual void ShowDocumentReturn()
        {
          var args = new global::Sungero.Domain.Client.WpfExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Collection, null, this);
          Sungero.Docflow.Client.OfficialDocumentStaticActions.ShowDocumentReturn(args);
        }

        private bool CanApprovalForm(T entity)
        {
          var args = new global::Sungero.Domain.Client.WpfCanExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Collection, entity, this);
          return ((Sungero.Docflow.Client.OfficialDocumentActions)(entity as Sungero.Docflow.Client.OfficialDocument).ActionsHandlers).CanApprovalForm(args);
        }

        private void ApprovalForm(T entity)
        {
          var args = new global::Sungero.Domain.Client.WpfExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Collection, entity, this, entity.Info.Actions.ApprovalForm);
          ((Sungero.Docflow.Client.OfficialDocumentActions)(entity as Sungero.Docflow.Client.OfficialDocument).ActionsHandlers).ApprovalForm(args);
        }

        private bool CanSendForFreeApproval(T entity)
        {
          var args = new global::Sungero.Domain.Client.WpfCanExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Collection, entity, this);
          return ((Sungero.Docflow.Client.OfficialDocumentActions)(entity as Sungero.Docflow.Client.OfficialDocument).ActionsHandlers).CanSendForFreeApproval(args);
        }

        private void SendForFreeApproval(T entity)
        {
          var args = new global::Sungero.Domain.Client.WpfExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Collection, entity, this, entity.Info.Actions.SendForFreeApproval);
          ((Sungero.Docflow.Client.OfficialDocumentActions)(entity as Sungero.Docflow.Client.OfficialDocument).ActionsHandlers).SendForFreeApproval(args);
        }

        private bool CanSendForReview(T entity)
        {
          var args = new global::Sungero.Domain.Client.WpfCanExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Collection, entity, this);
          return ((Sungero.Docflow.Client.OfficialDocumentActions)(entity as Sungero.Docflow.Client.OfficialDocument).ActionsHandlers).CanSendForReview(args);
        }

        private void SendForReview(T entity)
        {
          var args = new global::Sungero.Domain.Client.WpfExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Collection, entity, this, entity.Info.Actions.SendForReview);
          ((Sungero.Docflow.Client.OfficialDocumentActions)(entity as Sungero.Docflow.Client.OfficialDocument).ActionsHandlers).SendForReview(args);
        }

        private bool CanCreateAddendum(T entity)
        {
          var args = new global::Sungero.Domain.Client.WpfCanExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Collection, entity, this);
          return ((Sungero.Docflow.Client.OfficialDocumentActions)(entity as Sungero.Docflow.Client.OfficialDocument).ActionsHandlers).CanCreateAddendum(args);
        }

        private void CreateAddendum(T entity)
        {
          var args = new global::Sungero.Domain.Client.WpfExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Collection, entity, this, entity.Info.Actions.CreateAddendum);
          ((Sungero.Docflow.Client.OfficialDocumentActions)(entity as Sungero.Docflow.Client.OfficialDocument).ActionsHandlers).CreateAddendum(args);
        }

        private bool CanSendToCounterparty(T entity)
        {
          var args = new global::Sungero.Domain.Client.WpfCanExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Collection, entity, this);
          return ((Sungero.Docflow.Client.OfficialDocumentActions)(entity as Sungero.Docflow.Client.OfficialDocument).ActionsHandlers).CanSendToCounterparty(args);
        }

        private void SendToCounterparty(T entity)
        {
          var args = new global::Sungero.Domain.Client.WpfExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Collection, entity, this, entity.Info.Actions.SendToCounterparty);
          ((Sungero.Docflow.Client.OfficialDocumentActions)(entity as Sungero.Docflow.Client.OfficialDocument).ActionsHandlers).SendToCounterparty(args);
        }

        private bool CanOpenExchangeOrderReport(T entity)
        {
          var args = new global::Sungero.Domain.Client.WpfCanExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Collection, entity, this);
          return ((Sungero.Docflow.Client.OfficialDocumentActions)(entity as Sungero.Docflow.Client.OfficialDocument).ActionsHandlers).CanOpenExchangeOrderReport(args);
        }

        private void OpenExchangeOrderReport(T entity)
        {
          var args = new global::Sungero.Domain.Client.WpfExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Collection, entity, this, entity.Info.Actions.OpenExchangeOrderReport);
          ((Sungero.Docflow.Client.OfficialDocumentActions)(entity as Sungero.Docflow.Client.OfficialDocument).ActionsHandlers).OpenExchangeOrderReport(args);
        }

        private bool CanSendForAcquaintance(T entity)
        {
          var args = new global::Sungero.Domain.Client.WpfCanExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Collection, entity, this);
          return ((Sungero.Docflow.Client.OfficialDocumentActions)(entity as Sungero.Docflow.Client.OfficialDocument).ActionsHandlers).CanSendForAcquaintance(args);
        }

        private void SendForAcquaintance(T entity)
        {
          var args = new global::Sungero.Domain.Client.WpfExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Collection, entity, this, entity.Info.Actions.SendForAcquaintance);
          ((Sungero.Docflow.Client.OfficialDocumentActions)(entity as Sungero.Docflow.Client.OfficialDocument).ActionsHandlers).SendForAcquaintance(args);
        }

        private bool CanShowAcquaintanceReport(T entity)
        {
          var args = new global::Sungero.Domain.Client.WpfCanExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Collection, entity, this);
          return ((Sungero.Docflow.Client.OfficialDocumentActions)(entity as Sungero.Docflow.Client.OfficialDocument).ActionsHandlers).CanShowAcquaintanceReport(args);
        }

        private void ShowAcquaintanceReport(T entity)
        {
          var args = new global::Sungero.Domain.Client.WpfExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Collection, entity, this, entity.Info.Actions.ShowAcquaintanceReport);
          ((Sungero.Docflow.Client.OfficialDocumentActions)(entity as Sungero.Docflow.Client.OfficialDocument).ActionsHandlers).ShowAcquaintanceReport(args);
        }

        private bool CanCreateManyAddendum(T entity)
        {
          var args = new global::Sungero.Domain.Client.WpfCanExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Collection, entity, this);
          return ((Sungero.Docflow.Client.OfficialDocumentActions)(entity as Sungero.Docflow.Client.OfficialDocument).ActionsHandlers).CanCreateManyAddendum(args);
        }

        private void CreateManyAddendum(T entity)
        {
          var args = new global::Sungero.Domain.Client.WpfExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Collection, entity, this, entity.Info.Actions.CreateManyAddendum);
          ((Sungero.Docflow.Client.OfficialDocumentActions)(entity as Sungero.Docflow.Client.OfficialDocument).ActionsHandlers).CreateManyAddendum(args);
        }

        private bool CanChangeDocumentType(T entity)
        {
          var args = new global::Sungero.Domain.Client.WpfCanExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Collection, entity, this);
          return ((Sungero.Docflow.Client.OfficialDocumentActions)(entity as Sungero.Docflow.Client.OfficialDocument).ActionsHandlers).CanChangeDocumentType(args);
        }

        private void ChangeDocumentType(T entity)
        {
          var args = new global::Sungero.Domain.Client.WpfExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Collection, entity, this, entity.Info.Actions.ChangeDocumentType);
          ((Sungero.Docflow.Client.OfficialDocumentActions)(entity as Sungero.Docflow.Client.OfficialDocument).ActionsHandlers).ChangeDocumentType(args);
        }



    #endregion

    public OfficialDocumentCollectionPresenter(global::System.Linq.IQueryable<T> query, OnLookup onLookup)
      : base(query, onLookup)
    {
    }

    public OfficialDocumentCollectionPresenter(global::System.Linq.IQueryable<T> query)
      : this(query, null) { }

    public OfficialDocumentCollectionPresenter(OnLookup onLookup)
      : this(null, onLookup) { }

    public OfficialDocumentCollectionPresenter()
      : this(null, null) { }
  }
}

// ==================================================================
// OfficialDocumentRepositoryImplementer.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Client
{ 
  public class OfficialDocumentRepositoryImplementer<T> : 
      global::Sungero.Content.Client.ElectronicDocumentRepositoryImplementer<T>,
      global::Sungero.Docflow.IOfficialDocumentRepositoryImplementer<T>
      where T : global::Sungero.Docflow.IOfficialDocument
    {
       public new global::Sungero.Docflow.IOfficialDocumentAccessRights AccessRights
       {
          get { return (global::Sungero.Docflow.IOfficialDocumentAccessRights)base.AccessRights; }
       }

       public new global::Sungero.Docflow.IOfficialDocumentInfo Info
       {
          get { return (global::Sungero.Docflow.IOfficialDocumentInfo)base.Info; }
       }

       protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
       {
         return new global::Sungero.Docflow.Client.OfficialDocumentTypeAccessRights(typeof(T));
       }
    }
}

// ==================================================================
// OfficialDocumentAccessRights.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Client
{
  public class OfficialDocumentAccessRights : 
    Sungero.Content.Client.ElectronicDocumentAccessRights, Sungero.Docflow.IOfficialDocumentAccessRights
  {
           public bool CanRegister(global::Sungero.CoreEntities.IRecipient recipient)
           {
              return this.IsGranted(global::Sungero.Docflow.OfficialDocumentOperations.Register, recipient);
           }
           public bool CanRegister()
           {
              return this.IsGranted(global::Sungero.Docflow.OfficialDocumentOperations.Register, null);
           }
           public global::System.Collections.Generic.IEnumerable<global::Sungero.CoreEntities.IRecipient> GetSubstitutedWhoCanRegister()
           {
              return this.GetSubstitutedWhoIsGranted(global::Sungero.Docflow.OfficialDocumentOperations.Register);
           }
           public bool CanSendByExchange(global::Sungero.CoreEntities.IRecipient recipient)
           {
              return this.IsGranted(global::Sungero.Docflow.OfficialDocumentOperations.SendByExchange, recipient);
           }
           public bool CanSendByExchange()
           {
              return this.IsGranted(global::Sungero.Docflow.OfficialDocumentOperations.SendByExchange, null);
           }
           public global::System.Collections.Generic.IEnumerable<global::Sungero.CoreEntities.IRecipient> GetSubstitutedWhoCanSendByExchange()
           {
              return this.GetSubstitutedWhoIsGranted(global::Sungero.Docflow.OfficialDocumentOperations.SendByExchange);
           }


    public OfficialDocumentAccessRights(global::Sungero.Domain.Shared.IEntity entity) : base(entity)
    {
    }
  }

  public class OfficialDocumentTypeAccessRights : 
    Sungero.Content.Client.ElectronicDocumentTypeAccessRights, Sungero.Docflow.IOfficialDocumentAccessRights
  {
           public bool CanRegister(global::Sungero.CoreEntities.IRecipient recipient)
           {
              return this.IsGranted(global::Sungero.Docflow.OfficialDocumentOperations.Register, recipient);
           }
           public bool CanRegister()
           {
              return this.IsGranted(global::Sungero.Docflow.OfficialDocumentOperations.Register, null);
           }
           public global::System.Collections.Generic.IEnumerable<global::Sungero.CoreEntities.IRecipient> GetSubstitutedWhoCanRegister()
           {
              return this.GetSubstitutedWhoIsGranted(global::Sungero.Docflow.OfficialDocumentOperations.Register);
           }
           public bool CanSendByExchange(global::Sungero.CoreEntities.IRecipient recipient)
           {
              return this.IsGranted(global::Sungero.Docflow.OfficialDocumentOperations.SendByExchange, recipient);
           }
           public bool CanSendByExchange()
           {
              return this.IsGranted(global::Sungero.Docflow.OfficialDocumentOperations.SendByExchange, null);
           }
           public global::System.Collections.Generic.IEnumerable<global::Sungero.CoreEntities.IRecipient> GetSubstitutedWhoCanSendByExchange()
           {
              return this.GetSubstitutedWhoIsGranted(global::Sungero.Docflow.OfficialDocumentOperations.SendByExchange);
           }


    public OfficialDocumentTypeAccessRights(global::System.Type entityType) : base(entityType)
    {
    }
  }
}
