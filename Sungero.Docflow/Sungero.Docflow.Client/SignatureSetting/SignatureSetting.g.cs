
// ==================================================================
// SignatureSetting.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Client
{
  public class SignatureSetting :
    global::Sungero.CoreEntities.Client.DatabookEntry, global::Sungero.Docflow.ISignatureSetting
  {
    #region Fields and properties

    public static new readonly global::System.Guid ClassTypeGuid = global::System.Guid.Parse("19f9b6d8-b072-4af0-b6e1-3f8a339506be");

    public override global::System.Guid TypeGuid
    {
      get { return global::Sungero.Docflow.Client.SignatureSetting.ClassTypeGuid; }
    }

    public override string TypeName
    {
      get { return "Sungero.Docflow.ISignatureSetting, Sungero.Domain.Interfaces"; }
    }

      public override string DisplayValue
      {
        get { return this.Recipient == null ? string.Empty : this.Recipient.ToString(); }
        set { throw new global::System.NotSupportedException(global::CommonLibrary.Properties.Resources.SpecifiedPropertyIsNotSupportedFormat("DisplayValue")); }
      }

      public override string DisplayPropertyName
      {
        get { return "Recipient"; }
      }


    public new global::Sungero.Docflow.ISignatureSettingState State
    {
      get
      {
        return (global::Sungero.Docflow.ISignatureSettingState)base.State;
      }
    }

    protected override global::Sungero.Domain.Shared.IEntityState CreateState()
    {
      return new global::Sungero.Docflow.Shared.SignatureSettingState(this);
    }

    public new global::Sungero.Docflow.ISignatureSettingInfo Info
    {
      get
      {
        return (global::Sungero.Docflow.ISignatureSettingInfo)base.Info;
      }
    }

    public new global::Sungero.Docflow.ISignatureSettingAccessRights AccessRights
    {
      get
      {
        return (global::Sungero.Docflow.ISignatureSettingAccessRights)base.AccessRights;
      }
    }

    protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
    {
      return new global::Sungero.Docflow.Client.SignatureSettingAccessRights(this);
    }

        protected global::Sungero.Domain.Client.SimpleProperty<global::System.String> _Name;

        public virtual global::System.String Name
        {
          get { return this._Name.Value; }
          set { this._Name.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.DateTime?> _ValidTill;

        public virtual global::System.DateTime? ValidTill
        {
          get { return this._ValidTill.Value; }
          set { this._ValidTill.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.DateTime?> _ValidFrom;

        public virtual global::System.DateTime? ValidFrom
        {
          get { return this._ValidFrom.Value; }
          set { this._ValidFrom.Value = value; }
        }
        protected global::Sungero.Domain.Client.EnumSimpleProperty<global::Sungero.Core.Enumeration?> _Reason;

        public virtual global::Sungero.Core.Enumeration? Reason
        {
          get { return this._Reason.Value; }
          set { this._Reason.Value = value; }
        }
        protected global::Sungero.Domain.Client.EnumSimpleProperty<global::Sungero.Core.Enumeration?> _Limit;

        public virtual global::Sungero.Core.Enumeration? Limit
        {
          get { return this._Limit.Value; }
          set { this._Limit.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.Double?> _Amount;

        public virtual global::System.Double? Amount
        {
          get { return this._Amount.Value; }
          set { this._Amount.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.String> _Note;

        public virtual global::System.String Note
        {
          get { return this._Note.Value; }
          set { this._Note.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.Boolean?> _IsSystem;

        public virtual global::System.Boolean? IsSystem
        {
          get { return this._IsSystem.Value; }
          set { this._IsSystem.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.String> _DocumentInfo;

        public virtual global::System.String DocumentInfo
        {
          get { return this._DocumentInfo.Value; }
          set { this._DocumentInfo.Value = value; }
        }
        protected global::Sungero.Domain.Client.EnumSimpleProperty<global::Sungero.Core.Enumeration?> _DocumentFlow;

        public virtual global::Sungero.Core.Enumeration? DocumentFlow
        {
          get { return this._DocumentFlow.Value; }
          set { this._DocumentFlow.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.Int32?> _Priority;

        public virtual global::System.Int32? Priority
        {
          get { return this._Priority.Value; }
          set { this._Priority.Value = value; }
        }


        private static global::Sungero.Domain.Shared.EnumerationItems _ReasonItems = new global::Sungero.Domain.Shared.EnumerationItems(
          null,
          typeof(global::Sungero.Docflow.SignatureSetting.Reason),
          typeof(global::Sungero.Docflow.Client.SignatureSetting),
          "Reason");

        public static global::Sungero.Domain.Shared.EnumerationItems ReasonItems
        {
          get { return global::Sungero.Docflow.Client.SignatureSetting._ReasonItems; }
        }

        public virtual global::Sungero.Domain.Shared.EnumerationItems ReasonAllowedItems
        {
          get { return global::Sungero.Docflow.Client.SignatureSetting.ReasonItems; }
        }

        private static global::Sungero.Domain.Shared.EnumerationItems _LimitItems = new global::Sungero.Domain.Shared.EnumerationItems(
          null,
          typeof(global::Sungero.Docflow.SignatureSetting.Limit),
          typeof(global::Sungero.Docflow.Client.SignatureSetting),
          "Limit");

        public static global::Sungero.Domain.Shared.EnumerationItems LimitItems
        {
          get { return global::Sungero.Docflow.Client.SignatureSetting._LimitItems; }
        }

        public virtual global::Sungero.Domain.Shared.EnumerationItems LimitAllowedItems
        {
          get { return global::Sungero.Docflow.Client.SignatureSetting.LimitItems; }
        }

        private static global::Sungero.Domain.Shared.EnumerationItems _DocumentFlowItems = new global::Sungero.Domain.Shared.EnumerationItems(
          null,
          typeof(global::Sungero.Docflow.SignatureSetting.DocumentFlow),
          typeof(global::Sungero.Docflow.Client.SignatureSetting),
          "DocumentFlow");

        public static global::Sungero.Domain.Shared.EnumerationItems DocumentFlowItems
        {
          get { return global::Sungero.Docflow.Client.SignatureSetting._DocumentFlowItems; }
        }

        public virtual global::Sungero.Domain.Shared.EnumerationItems DocumentFlowAllowedItems
        {
          get { return global::Sungero.Docflow.Client.SignatureSetting.DocumentFlowItems; }
        }




              protected global::Sungero.Domain.Client.INavigationProperty<global::Sungero.CoreEntities.IRecipient> _Recipient;

              public virtual global::Sungero.CoreEntities.IRecipient Recipient
              {
              get
              {
                return this._Recipient.Value as global::Sungero.CoreEntities.IRecipient;
              }

              set
              {
                (this._Recipient as global::Sungero.Domain.Client.IProperty).Value = value;
              }
            }



              protected global::Sungero.Domain.Client.INavigationProperty<global::Sungero.Docflow.IOfficialDocument> _Document;

              public virtual global::Sungero.Docflow.IOfficialDocument Document
              {
              get
              {
                return this._Document.Value as global::Sungero.Docflow.IOfficialDocument;
              }

              set
              {
                (this._Document as global::Sungero.Domain.Client.IProperty).Value = value;
              }
            }



              protected global::Sungero.Domain.Client.INavigationProperty<global::Sungero.Commons.ICurrency> _Currency;

              public virtual global::Sungero.Commons.ICurrency Currency
              {
              get
              {
                return this._Currency.Value as global::Sungero.Commons.ICurrency;
              }

              set
              {
                (this._Currency as global::Sungero.Domain.Client.IProperty).Value = value;
              }
            }



              protected global::Sungero.Domain.Client.INavigationProperty<global::Sungero.CoreEntities.ICertificate> _Certificate;

              public virtual global::Sungero.CoreEntities.ICertificate Certificate
              {
              get
              {
                return this._Certificate.Value as global::Sungero.CoreEntities.ICertificate;
              }

              set
              {
                (this._Certificate as global::Sungero.Domain.Client.IProperty).Value = value;
              }
            }







          protected global::Sungero.Domain.Client.IListProperty<global::Sungero.Docflow.ISignatureSettingBusinessUnits> _BusinessUnits;

          virtual public global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Docflow.ISignatureSettingBusinessUnits> BusinessUnits
          {
            get { return this._BusinessUnits.Value; }
          }


          protected global::Sungero.Domain.Client.IListProperty<global::Sungero.Docflow.ISignatureSettingDocumentKinds> _DocumentKinds;

          virtual public global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Docflow.ISignatureSettingDocumentKinds> DocumentKinds
          {
            get { return this._DocumentKinds.Value; }
          }


          protected global::Sungero.Domain.Client.IListProperty<global::Sungero.Docflow.ISignatureSettingDepartments> _Departments;

          virtual public global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Docflow.ISignatureSettingDepartments> Departments
          {
            get { return this._Departments.Value; }
          }


          protected global::Sungero.Domain.Client.IListProperty<global::Sungero.Docflow.ISignatureSettingCategories> _Categories;

          virtual public global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Docflow.ISignatureSettingCategories> Categories
          {
            get { return this._Categories.Value; }
          }






    private object _BusinessUnitsActionsHandlers;

    public object BusinessUnitsActionsHandlers
    {
      get
      {
        if (this._BusinessUnitsActionsHandlers == null)
          this._BusinessUnitsActionsHandlers = this.CreateBusinessUnitsActionsHandlers();
        return this._BusinessUnitsActionsHandlers;
      }
    }

    private object _BusinessUnitsCollectionActionsHandlers;

    public object BusinessUnitsCollectionActionsHandlers
    {
      get
      {
        if (this._BusinessUnitsCollectionActionsHandlers == null)
          this._BusinessUnitsCollectionActionsHandlers = this.CreateBusinessUnitsCollectionActionsHandlers();
        return this._BusinessUnitsCollectionActionsHandlers;
      }
    }
    private object _DocumentKindsActionsHandlers;

    public object DocumentKindsActionsHandlers
    {
      get
      {
        if (this._DocumentKindsActionsHandlers == null)
          this._DocumentKindsActionsHandlers = this.CreateDocumentKindsActionsHandlers();
        return this._DocumentKindsActionsHandlers;
      }
    }

    private object _DocumentKindsCollectionActionsHandlers;

    public object DocumentKindsCollectionActionsHandlers
    {
      get
      {
        if (this._DocumentKindsCollectionActionsHandlers == null)
          this._DocumentKindsCollectionActionsHandlers = this.CreateDocumentKindsCollectionActionsHandlers();
        return this._DocumentKindsCollectionActionsHandlers;
      }
    }
    private object _DepartmentsActionsHandlers;

    public object DepartmentsActionsHandlers
    {
      get
      {
        if (this._DepartmentsActionsHandlers == null)
          this._DepartmentsActionsHandlers = this.CreateDepartmentsActionsHandlers();
        return this._DepartmentsActionsHandlers;
      }
    }

    private object _DepartmentsCollectionActionsHandlers;

    public object DepartmentsCollectionActionsHandlers
    {
      get
      {
        if (this._DepartmentsCollectionActionsHandlers == null)
          this._DepartmentsCollectionActionsHandlers = this.CreateDepartmentsCollectionActionsHandlers();
        return this._DepartmentsCollectionActionsHandlers;
      }
    }
    private object _CategoriesActionsHandlers;

    public object CategoriesActionsHandlers
    {
      get
      {
        if (this._CategoriesActionsHandlers == null)
          this._CategoriesActionsHandlers = this.CreateCategoriesActionsHandlers();
        return this._CategoriesActionsHandlers;
      }
    }

    private object _CategoriesCollectionActionsHandlers;

    public object CategoriesCollectionActionsHandlers
    {
      get
      {
        if (this._CategoriesCollectionActionsHandlers == null)
          this._CategoriesCollectionActionsHandlers = this.CreateCategoriesCollectionActionsHandlers();
        return this._CategoriesCollectionActionsHandlers;
      }
    }

    #endregion

    #region Methods

    protected override object CreateActionsHandlers()
    {
      return new global::Sungero.Docflow.Client.SignatureSettingActions(this);
    }

    protected override object CreateCollectionActionsHandlers()
    {
      return new global::Sungero.Docflow.Client.SignatureSettingCollectionActions();
    }

    protected override object CreateAnyChildEntityActionsHandlers()
    {
      return new global::Sungero.Docflow.Client.SignatureSettingAnyChildEntityActions();
    }

    protected override object CreateAnyChildEntityCollectionActionsHandlers()
    {
      return new global::Sungero.Docflow.Client.SignatureSettingAnyChildEntityCollectionActions();
    }

    protected object CreateBusinessUnitsActionsHandlers()
    {
      return null;
    }

    protected object CreateBusinessUnitsCollectionActionsHandlers()
    {
      return null;
    }
    protected object CreateDocumentKindsActionsHandlers()
    {
      return null;
    }

    protected object CreateDocumentKindsCollectionActionsHandlers()
    {
      return null;
    }
    protected object CreateDepartmentsActionsHandlers()
    {
      return null;
    }

    protected object CreateDepartmentsCollectionActionsHandlers()
    {
      return null;
    }
    protected object CreateCategoriesActionsHandlers()
    {
      return null;
    }

    protected object CreateCategoriesCollectionActionsHandlers()
    {
      return null;
    }


    protected override global::Sungero.Domain.Client.EntityFunctions CreateClientFunctions()
    {
      return new global::Sungero.Docflow.Client.SignatureSettingFunctions(this);
    }

    protected override global::Sungero.Domain.Shared.EntityFunctions CreateSharedFunctions()
    {
      return new global::Sungero.Docflow.Shared.SignatureSettingFunctions(this);
    }
    protected override object CreateHandlers() {
      return new global::Sungero.Docflow.SignatureSettingClientHandlers(this);
    }
    protected override object CreateSharedHandlers() {
      return new global::Sungero.Docflow.SignatureSettingSharedHandlers(this);
    }

    #endregion

    #region Framework events

    protected void NameChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.Name, this.Name, this);
     ((global::Sungero.Docflow.SignatureSettingSharedHandlers)this.SharedHandlers).NameChanged(args);
    }

    protected void RecipientChangedHandler()
    {
      var args = new global::Sungero.Docflow.Shared.SignatureSettingRecipientChangedEventArgs(this.State.Properties.Recipient, this.Recipient, this);
     ((global::Sungero.Docflow.SignatureSettingSharedHandlers)this.SharedHandlers).RecipientChanged(args);
    }

    protected void DocumentChangedHandler()
    {
      var args = new global::Sungero.Docflow.Shared.SignatureSettingDocumentChangedEventArgs(this.State.Properties.Document, this.Document, this);
     ((global::Sungero.Docflow.SignatureSettingSharedHandlers)this.SharedHandlers).DocumentChanged(args);
    }

    protected void ValidTillChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.DateTimePropertyChangedEventArgs(this.State.Properties.ValidTill, this.ValidTill, this);
     ((global::Sungero.Docflow.SignatureSettingSharedHandlers)this.SharedHandlers).ValidTillChanged(args);
    }

    protected void ValidFromChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.DateTimePropertyChangedEventArgs(this.State.Properties.ValidFrom, this.ValidFrom, this);
     ((global::Sungero.Docflow.SignatureSettingSharedHandlers)this.SharedHandlers).ValidFromChanged(args);
    }

    protected void ReasonChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.EnumerationPropertyChangedEventArgs(this.State.Properties.Reason, this.Reason, this);
     ((global::Sungero.Docflow.SignatureSettingSharedHandlers)this.SharedHandlers).ReasonChanged(args);
    }

    protected void BusinessUnitsChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.CollectionPropertyChangedEventArgs(this);
     ((global::Sungero.Docflow.SignatureSettingSharedHandlers)this.SharedHandlers).BusinessUnitsChanged(args);
    }

    protected void DocumentKindsChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.CollectionPropertyChangedEventArgs(this);
     ((global::Sungero.Docflow.SignatureSettingSharedHandlers)this.SharedHandlers).DocumentKindsChanged(args);
    }

    protected void LimitChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.EnumerationPropertyChangedEventArgs(this.State.Properties.Limit, this.Limit, this);
     ((global::Sungero.Docflow.SignatureSettingSharedHandlers)this.SharedHandlers).LimitChanged(args);
    }

    protected void AmountChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.DoublePropertyChangedEventArgs(this.State.Properties.Amount, this.Amount, this);
     ((global::Sungero.Docflow.SignatureSettingSharedHandlers)this.SharedHandlers).AmountChanged(args);
    }

    protected void CurrencyChangedHandler()
    {
      var args = new global::Sungero.Docflow.Shared.SignatureSettingCurrencyChangedEventArgs(this.State.Properties.Currency, this.Currency, this);
     ((global::Sungero.Docflow.SignatureSettingSharedHandlers)this.SharedHandlers).CurrencyChanged(args);
    }

    protected void NoteChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.Note, this.Note, this);
     ((global::Sungero.Docflow.SignatureSettingSharedHandlers)this.SharedHandlers).NoteChanged(args);
    }

    protected void IsSystemChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.BooleanPropertyChangedEventArgs(this.State.Properties.IsSystem, this.IsSystem, this);
     ((global::Sungero.Docflow.SignatureSettingSharedHandlers)this.SharedHandlers).IsSystemChanged(args);
    }

    protected void DocumentInfoChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.DocumentInfo, this.DocumentInfo, this);
     ((global::Sungero.Docflow.SignatureSettingSharedHandlers)this.SharedHandlers).DocumentInfoChanged(args);
    }

    protected void DocumentFlowChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.EnumerationPropertyChangedEventArgs(this.State.Properties.DocumentFlow, this.DocumentFlow, this);
     ((global::Sungero.Docflow.SignatureSettingSharedHandlers)this.SharedHandlers).DocumentFlowChanged(args);
    }

    protected void DepartmentsChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.CollectionPropertyChangedEventArgs(this);
     ((global::Sungero.Docflow.SignatureSettingSharedHandlers)this.SharedHandlers).DepartmentsChanged(args);
    }

    protected void CategoriesChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.CollectionPropertyChangedEventArgs(this);
     ((global::Sungero.Docflow.SignatureSettingSharedHandlers)this.SharedHandlers).CategoriesChanged(args);
    }

    protected void PriorityChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.IntegerPropertyChangedEventArgs(this.State.Properties.Priority, this.Priority, this);
     ((global::Sungero.Docflow.SignatureSettingSharedHandlers)this.SharedHandlers).PriorityChanged(args);
    }

    protected void CertificateChangedHandler()
    {
      var args = new global::Sungero.Docflow.Shared.SignatureSettingCertificateChangedEventArgs(this.State.Properties.Certificate, this.Certificate, this);
     ((global::Sungero.Docflow.SignatureSettingSharedHandlers)this.SharedHandlers).CertificateChanged(args);
    }



    protected virtual global::Sungero.Docflow.SignatureSettingBusinessUnitsSharedCollectionHandlers CreateBusinessUnitsAddedHandler(global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.Docflow.SignatureSettingBusinessUnitsSharedCollectionHandlers(this, e.Value, null, e.Source);
    }

    protected virtual global::Sungero.Docflow.SignatureSettingBusinessUnitsSharedCollectionHandlers CreateBusinessUnitsDeletedHandler(global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.Docflow.SignatureSettingBusinessUnitsSharedCollectionHandlers(this, null, e.Value, null);
    }

    protected virtual void BusinessUnitsAddedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {  
      var collectionHandlers = this.CreateBusinessUnitsAddedHandler(e);
      if (collectionHandlers != null)
      {
        var args = new global::Sungero.Domain.Shared.CollectionPropertyAddedEventArgs(this);
        collectionHandlers.BusinessUnitsAdded(args);
      }
    }

    protected virtual void BusinessUnitsDeletedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {  
      var collectionHandlers = this.CreateBusinessUnitsDeletedHandler(e);
      if (collectionHandlers != null)
      {
        var args = new global::Sungero.Domain.Shared.CollectionPropertyDeletedEventArgs(this);
        collectionHandlers.BusinessUnitsDeleted(args);
      }
    }


    protected virtual global::Sungero.Docflow.SignatureSettingDocumentKindsSharedCollectionHandlers CreateDocumentKindsAddedHandler(global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.Docflow.SignatureSettingDocumentKindsSharedCollectionHandlers(this, e.Value, null, e.Source);
    }

    protected virtual global::Sungero.Docflow.SignatureSettingDocumentKindsSharedCollectionHandlers CreateDocumentKindsDeletedHandler(global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.Docflow.SignatureSettingDocumentKindsSharedCollectionHandlers(this, null, e.Value, null);
    }

    protected virtual void DocumentKindsAddedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {  
      var collectionHandlers = this.CreateDocumentKindsAddedHandler(e);
      if (collectionHandlers != null)
      {
        var args = new global::Sungero.Domain.Shared.CollectionPropertyAddedEventArgs(this);
        collectionHandlers.DocumentKindsAdded(args);
      }
    }

    protected virtual void DocumentKindsDeletedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {  
      var collectionHandlers = this.CreateDocumentKindsDeletedHandler(e);
      if (collectionHandlers != null)
      {
        var args = new global::Sungero.Domain.Shared.CollectionPropertyDeletedEventArgs(this);
        collectionHandlers.DocumentKindsDeleted(args);
      }
    }


    protected virtual global::Sungero.Docflow.SignatureSettingDepartmentsSharedCollectionHandlers CreateDepartmentsAddedHandler(global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.Docflow.SignatureSettingDepartmentsSharedCollectionHandlers(this, e.Value, null, e.Source);
    }

    protected virtual global::Sungero.Docflow.SignatureSettingDepartmentsSharedCollectionHandlers CreateDepartmentsDeletedHandler(global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.Docflow.SignatureSettingDepartmentsSharedCollectionHandlers(this, null, e.Value, null);
    }

    protected virtual void DepartmentsAddedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {  
      var collectionHandlers = this.CreateDepartmentsAddedHandler(e);
      if (collectionHandlers != null)
      {
        var args = new global::Sungero.Domain.Shared.CollectionPropertyAddedEventArgs(this);
        collectionHandlers.DepartmentsAdded(args);
      }
    }

    protected virtual void DepartmentsDeletedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {  
      var collectionHandlers = this.CreateDepartmentsDeletedHandler(e);
      if (collectionHandlers != null)
      {
        var args = new global::Sungero.Domain.Shared.CollectionPropertyDeletedEventArgs(this);
        collectionHandlers.DepartmentsDeleted(args);
      }
    }


    protected virtual global::Sungero.Docflow.SignatureSettingCategoriesSharedCollectionHandlers CreateCategoriesAddedHandler(global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.Docflow.SignatureSettingCategoriesSharedCollectionHandlers(this, e.Value, null, e.Source);
    }

    protected virtual global::Sungero.Docflow.SignatureSettingCategoriesSharedCollectionHandlers CreateCategoriesDeletedHandler(global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.Docflow.SignatureSettingCategoriesSharedCollectionHandlers(this, null, e.Value, null);
    }

    protected virtual void CategoriesAddedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {  
      var collectionHandlers = this.CreateCategoriesAddedHandler(e);
      if (collectionHandlers != null)
      {
        var args = new global::Sungero.Domain.Shared.CollectionPropertyAddedEventArgs(this);
        collectionHandlers.CategoriesAdded(args);
      }
    }

    protected virtual void CategoriesDeletedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {  
      var collectionHandlers = this.CreateCategoriesDeletedHandler(e);
      if (collectionHandlers != null)
      {
        var args = new global::Sungero.Domain.Shared.CollectionPropertyDeletedEventArgs(this);
        collectionHandlers.CategoriesDeleted(args);
      }
    }


  protected global::System.String NameValueInputHandler(global::System.String value)
  {
    var args = new global::Sungero.Presentation.StringValueInputEventArgs(this.Name, value, this, this.Info.Properties.Name);
    ((global::Sungero.Docflow.SignatureSettingClientHandlers)this.Handlers).NameValueInput(args);
    return args.NewValue;
  }

  protected global::Sungero.CoreEntities.IRecipient RecipientValueInputHandler(global::Sungero.CoreEntities.IRecipient value)
  {
    var args = new global::Sungero.Docflow.Client.SignatureSettingRecipientValueInputEventArgs(this.Recipient, value, this, this.Info.Properties.Recipient);
    ((global::Sungero.Docflow.SignatureSettingClientHandlers)this.Handlers).RecipientValueInput(args);
    return args.NewValue;
  }

  protected global::Sungero.Docflow.IOfficialDocument DocumentValueInputHandler(global::Sungero.Docflow.IOfficialDocument value)
  {
    var args = new global::Sungero.Docflow.Client.SignatureSettingDocumentValueInputEventArgs(this.Document, value, this, this.Info.Properties.Document);
    ((global::Sungero.Docflow.SignatureSettingClientHandlers)this.Handlers).DocumentValueInput(args);
    return args.NewValue;
  }

  protected global::System.DateTime? ValidTillValueInputHandler(global::System.DateTime? value)
  {
    var args = new global::Sungero.Presentation.DateTimeValueInputEventArgs(this.ValidTill, value, this, this.Info.Properties.ValidTill);
    ((global::Sungero.Docflow.SignatureSettingClientHandlers)this.Handlers).ValidTillValueInput(args);
    return args.NewValue;
  }

  protected global::System.DateTime? ValidFromValueInputHandler(global::System.DateTime? value)
  {
    var args = new global::Sungero.Presentation.DateTimeValueInputEventArgs(this.ValidFrom, value, this, this.Info.Properties.ValidFrom);
    ((global::Sungero.Docflow.SignatureSettingClientHandlers)this.Handlers).ValidFromValueInput(args);
    return args.NewValue;
  }

  protected global::Sungero.Core.Enumeration? ReasonValueInputHandler(global::Sungero.Core.Enumeration? value)
  {
    var args = new global::Sungero.Presentation.EnumerationValueInputEventArgs(this.Reason, value, this, this.Info.Properties.Reason);
    ((global::Sungero.Docflow.SignatureSettingClientHandlers)this.Handlers).ReasonValueInput(args);
    return args.NewValue;
  }



  protected global::Sungero.Core.Enumeration? LimitValueInputHandler(global::Sungero.Core.Enumeration? value)
  {
    var args = new global::Sungero.Presentation.EnumerationValueInputEventArgs(this.Limit, value, this, this.Info.Properties.Limit);
    ((global::Sungero.Docflow.SignatureSettingClientHandlers)this.Handlers).LimitValueInput(args);
    return args.NewValue;
  }

  protected global::System.Double? AmountValueInputHandler(global::System.Double? value)
  {
    var args = new global::Sungero.Presentation.DoubleValueInputEventArgs(this.Amount, value, this, this.Info.Properties.Amount);
    ((global::Sungero.Docflow.SignatureSettingClientHandlers)this.Handlers).AmountValueInput(args);
    return args.NewValue;
  }

  protected global::Sungero.Commons.ICurrency CurrencyValueInputHandler(global::Sungero.Commons.ICurrency value)
  {
    var args = new global::Sungero.Docflow.Client.SignatureSettingCurrencyValueInputEventArgs(this.Currency, value, this, this.Info.Properties.Currency);
    ((global::Sungero.Docflow.SignatureSettingClientHandlers)this.Handlers).CurrencyValueInput(args);
    return args.NewValue;
  }

  protected global::System.String NoteValueInputHandler(global::System.String value)
  {
    var args = new global::Sungero.Presentation.StringValueInputEventArgs(this.Note, value, this, this.Info.Properties.Note);
    ((global::Sungero.Docflow.SignatureSettingClientHandlers)this.Handlers).NoteValueInput(args);
    return args.NewValue;
  }

  protected global::System.Boolean? IsSystemValueInputHandler(global::System.Boolean? value)
  {
    var args = new global::Sungero.Presentation.BooleanValueInputEventArgs(this.IsSystem, value, this, this.Info.Properties.IsSystem);
    ((global::Sungero.Docflow.SignatureSettingClientHandlers)this.Handlers).IsSystemValueInput(args);
    return args.NewValue;
  }

  protected global::System.String DocumentInfoValueInputHandler(global::System.String value)
  {
    var args = new global::Sungero.Presentation.StringValueInputEventArgs(this.DocumentInfo, value, this, this.Info.Properties.DocumentInfo);
    ((global::Sungero.Docflow.SignatureSettingClientHandlers)this.Handlers).DocumentInfoValueInput(args);
    return args.NewValue;
  }

  protected global::Sungero.Core.Enumeration? DocumentFlowValueInputHandler(global::Sungero.Core.Enumeration? value)
  {
    var args = new global::Sungero.Presentation.EnumerationValueInputEventArgs(this.DocumentFlow, value, this, this.Info.Properties.DocumentFlow);
    ((global::Sungero.Docflow.SignatureSettingClientHandlers)this.Handlers).DocumentFlowValueInput(args);
    return args.NewValue;
  }



  protected global::System.Int32? PriorityValueInputHandler(global::System.Int32? value)
  {
    var args = new global::Sungero.Presentation.IntegerValueInputEventArgs(this.Priority, value, this, this.Info.Properties.Priority);
    ((global::Sungero.Docflow.SignatureSettingClientHandlers)this.Handlers).PriorityValueInput(args);
    return args.NewValue;
  }

  protected global::Sungero.CoreEntities.ICertificate CertificateValueInputHandler(global::Sungero.CoreEntities.ICertificate value)
  {
    var args = new global::Sungero.Docflow.Client.SignatureSettingCertificateValueInputEventArgs(this.Certificate, value, this, this.Info.Properties.Certificate);
    ((global::Sungero.Docflow.SignatureSettingClientHandlers)this.Handlers).CertificateValueInput(args);
    return args.NewValue;
  }


  protected global::System.Collections.Generic.IEnumerable<global::Sungero.Core.Enumeration> ReasonFilteringHandler()
  {
    return ((global::Sungero.Docflow.SignatureSettingClientHandlers)this.Handlers).ReasonFiltering(this.ReasonAllowedItems);
  }



  protected global::System.Collections.Generic.IEnumerable<global::Sungero.Core.Enumeration> LimitFilteringHandler()
  {
    return ((global::Sungero.Docflow.SignatureSettingClientHandlers)this.Handlers).LimitFiltering(this.LimitAllowedItems);
  }






  protected global::System.Collections.Generic.IEnumerable<global::Sungero.Core.Enumeration> DocumentFlowFilteringHandler()
  {
    return ((global::Sungero.Docflow.SignatureSettingClientHandlers)this.Handlers).DocumentFlowFiltering(this.DocumentFlowAllowedItems);
  }






    #endregion

    #region Constructors



              protected virtual void InitRecipientNavigationProperty()
              {
                this._Recipient = new global::Sungero.Domain.Client.NavigationProperty<global::Sungero.CoreEntities.IRecipient>("Recipient", this);
                this._Recipient.ValueChanged += (sender, e) => { this.RecipientChangedHandler(); };
                this.AddProperty(this._Recipient as global::Sungero.Domain.Client.IProperty);
              }




              protected virtual void InitDocumentNavigationProperty()
              {
                this._Document = new global::Sungero.Domain.Client.NavigationProperty<global::Sungero.Docflow.IOfficialDocument>("Document", this);
                this._Document.ValueChanged += (sender, e) => { this.DocumentChangedHandler(); };
                this.AddProperty(this._Document as global::Sungero.Domain.Client.IProperty);
              }




              protected virtual void InitCurrencyNavigationProperty()
              {
                this._Currency = new global::Sungero.Domain.Client.NavigationProperty<global::Sungero.Commons.ICurrency>("Currency", this);
                this._Currency.ValueChanged += (sender, e) => { this.CurrencyChangedHandler(); };
                this.AddProperty(this._Currency as global::Sungero.Domain.Client.IProperty);
              }




              protected virtual void InitCertificateNavigationProperty()
              {
                this._Certificate = new global::Sungero.Domain.Client.NavigationProperty<global::Sungero.CoreEntities.ICertificate>("Certificate", this);
                this._Certificate.ValueChanged += (sender, e) => { this.CertificateChangedHandler(); };
                this.AddProperty(this._Certificate as global::Sungero.Domain.Client.IProperty);
              }



            protected virtual void InitBusinessUnitsCollectionProperty()
            {
              this._BusinessUnits = new global::Sungero.Domain.Client.ListProperty<global::Sungero.Docflow.ISignatureSettingBusinessUnits>("BusinessUnits", this);
              this._BusinessUnits.ValueChanged += (sender, e) => { this.BusinessUnitsChangedHandler(); };
              this.AddProperty((global::Sungero.Domain.Client.IProperty)this._BusinessUnits);
              this.SetBusinessUnitsEventHandlers();
            }

            protected void SetBusinessUnitsEventHandlers()
            {
              this._BusinessUnits.ChildEntityAdded += this.BusinessUnitsAddedHandler;
              this._BusinessUnits.ChildEntityDeleted += this.BusinessUnitsDeletedHandler;
            }

            protected virtual void InitDocumentKindsCollectionProperty()
            {
              this._DocumentKinds = new global::Sungero.Domain.Client.ListProperty<global::Sungero.Docflow.ISignatureSettingDocumentKinds>("DocumentKinds", this);
              this._DocumentKinds.ValueChanged += (sender, e) => { this.DocumentKindsChangedHandler(); };
              this.AddProperty((global::Sungero.Domain.Client.IProperty)this._DocumentKinds);
              this.SetDocumentKindsEventHandlers();
            }

            protected void SetDocumentKindsEventHandlers()
            {
              this._DocumentKinds.ChildEntityAdded += this.DocumentKindsAddedHandler;
              this._DocumentKinds.ChildEntityDeleted += this.DocumentKindsDeletedHandler;
            }

            protected virtual void InitDepartmentsCollectionProperty()
            {
              this._Departments = new global::Sungero.Domain.Client.ListProperty<global::Sungero.Docflow.ISignatureSettingDepartments>("Departments", this);
              this._Departments.ValueChanged += (sender, e) => { this.DepartmentsChangedHandler(); };
              this.AddProperty((global::Sungero.Domain.Client.IProperty)this._Departments);
              this.SetDepartmentsEventHandlers();
            }

            protected void SetDepartmentsEventHandlers()
            {
              this._Departments.ChildEntityAdded += this.DepartmentsAddedHandler;
              this._Departments.ChildEntityDeleted += this.DepartmentsDeletedHandler;
            }

            protected virtual void InitCategoriesCollectionProperty()
            {
              this._Categories = new global::Sungero.Domain.Client.ListProperty<global::Sungero.Docflow.ISignatureSettingCategories>("Categories", this);
              this._Categories.ValueChanged += (sender, e) => { this.CategoriesChangedHandler(); };
              this.AddProperty((global::Sungero.Domain.Client.IProperty)this._Categories);
              this.SetCategoriesEventHandlers();
            }

            protected void SetCategoriesEventHandlers()
            {
              this._Categories.ChildEntityAdded += this.CategoriesAddedHandler;
              this._Categories.ChildEntityDeleted += this.CategoriesDeletedHandler;
            }


    public SignatureSetting()
    {
            this._Name = new global::Sungero.Domain.Client.SimpleProperty<global::System.String>("Name", this);
            this._Name.ValueChanged += (sender, e) => { this.NameChangedHandler(); };
            this.AddProperty(this._Name);

            this._ValidTill = new global::Sungero.Domain.Client.SimpleProperty<global::System.DateTime?>("ValidTill", this);
            this._ValidTill.ValueChanged += (sender, e) => { this.ValidTillChangedHandler(); };
            this.AddProperty(this._ValidTill);

            this._ValidFrom = new global::Sungero.Domain.Client.SimpleProperty<global::System.DateTime?>("ValidFrom", this);
            this._ValidFrom.ValueChanged += (sender, e) => { this.ValidFromChangedHandler(); };
            this.AddProperty(this._ValidFrom);

            this._Reason = new global::Sungero.Domain.Client.EnumSimpleProperty<global::Sungero.Core.Enumeration?>("Reason", this);
            this._Reason.ValueChanged += (sender, e) => { this.ReasonChangedHandler(); };
            this.AddProperty(this._Reason);

            this._Limit = new global::Sungero.Domain.Client.EnumSimpleProperty<global::Sungero.Core.Enumeration?>("Limit", this);
            this._Limit.ValueChanged += (sender, e) => { this.LimitChangedHandler(); };
            this.AddProperty(this._Limit);

            this._Amount = new global::Sungero.Domain.Client.SimpleProperty<global::System.Double?>("Amount", this);
            this._Amount.ValueChanged += (sender, e) => { this.AmountChangedHandler(); };
            this.AddProperty(this._Amount);

            this._Note = new global::Sungero.Domain.Client.SimpleProperty<global::System.String>("Note", this);
            this._Note.ValueChanged += (sender, e) => { this.NoteChangedHandler(); };
            this.AddProperty(this._Note);

            this._IsSystem = new global::Sungero.Domain.Client.SimpleProperty<global::System.Boolean?>("IsSystem", this);
            this._IsSystem.ValueChanged += (sender, e) => { this.IsSystemChangedHandler(); };
            this.AddProperty(this._IsSystem);

            this._DocumentInfo = new global::Sungero.Domain.Client.SimpleProperty<global::System.String>("DocumentInfo", this);
            this._DocumentInfo.ValueChanged += (sender, e) => { this.DocumentInfoChangedHandler(); };
            this.AddProperty(this._DocumentInfo);

            this._DocumentFlow = new global::Sungero.Domain.Client.EnumSimpleProperty<global::Sungero.Core.Enumeration?>("DocumentFlow", this);
            this._DocumentFlow.ValueChanged += (sender, e) => { this.DocumentFlowChangedHandler(); };
            this.AddProperty(this._DocumentFlow);

            this._Priority = new global::Sungero.Domain.Client.SimpleProperty<global::System.Int32?>("Priority", this);
            this._Priority.ValueChanged += (sender, e) => { this.PriorityChangedHandler(); };
            this.AddProperty(this._Priority);

            this.InitRecipientNavigationProperty();

            this.InitDocumentNavigationProperty();

            this.InitCurrencyNavigationProperty();

            this.InitCertificateNavigationProperty();


            this.InitBusinessUnitsCollectionProperty();

            this.InitDocumentKindsCollectionProperty();

            this.InitDepartmentsCollectionProperty();

            this.InitCategoriesCollectionProperty();







    }

    #endregion

  }
}

// ==================================================================
// SignatureSettingPresenter.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Client
{
  public class SignatureSettingPresenter<T> :
    global::Sungero.Domain.Client.EntityPresenter<T>
    where T : class, global::Sungero.Docflow.ISignatureSetting
  {
    #region Fields and properties




    #endregion

    #region Methods

    #endregion

    #region Framework events

    protected override void EntityPropertyChangedEventHandler(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
    {
      base.EntityPropertyChangedEventHandler(sender, e);
    }

    #endregion

              protected global::Sungero.Domain.Client.IEntityCollectionPresenter _RecipientCollectionPresenter;
              public global::Sungero.Domain.Client.IEntityCollectionPresenter RecipientCollectionPresenter
              {
          get { return this._RecipientCollectionPresenter; }
        }
              protected global::Sungero.Domain.Client.IEntityCollectionPresenter _DocumentCollectionPresenter;
              public global::Sungero.Domain.Client.IEntityCollectionPresenter DocumentCollectionPresenter
              {
          get { return this._DocumentCollectionPresenter; }
        }
              protected global::Sungero.Domain.Client.IEntityCollectionPresenter _CurrencyCollectionPresenter;
              public global::Sungero.Domain.Client.IEntityCollectionPresenter CurrencyCollectionPresenter
              {
          get { return this._CurrencyCollectionPresenter; }
        }
              protected global::Sungero.Domain.Client.IEntityCollectionPresenter _CertificateCollectionPresenter;
              public global::Sungero.Domain.Client.IEntityCollectionPresenter CertificateCollectionPresenter
              {
          get { return this._CertificateCollectionPresenter; }
        }


                          protected global::Sungero.Domain.Client.IEntityCollectionPresenter _BusinessUnitsBusinessUnitCollectionPresenter;
                          public global::Sungero.Domain.Client.IEntityCollectionPresenter BusinessUnitsBusinessUnitCollectionPresenter
                          {
                  get { return this._BusinessUnitsBusinessUnitCollectionPresenter; }
                }

                          protected global::Sungero.Domain.Client.IEntityCollectionPresenter _DocumentKindsDocumentKindCollectionPresenter;
                          public global::Sungero.Domain.Client.IEntityCollectionPresenter DocumentKindsDocumentKindCollectionPresenter
                          {
                  get { return this._DocumentKindsDocumentKindCollectionPresenter; }
                }

                          protected global::Sungero.Domain.Client.IEntityCollectionPresenter _DepartmentsDepartmentCollectionPresenter;
                          public global::Sungero.Domain.Client.IEntityCollectionPresenter DepartmentsDepartmentCollectionPresenter
                          {
                  get { return this._DepartmentsDepartmentCollectionPresenter; }
                }

                          protected global::Sungero.Domain.Client.IEntityCollectionPresenter _CategoriesCategoryCollectionPresenter;
                          public global::Sungero.Domain.Client.IEntityCollectionPresenter CategoriesCategoryCollectionPresenter
                          {
                  get { return this._CategoriesCategoryCollectionPresenter; }
                }



    #region Constructors

    private void Init()
    {
                  this._RecipientCollectionPresenter = this.CreateCollectionPresenterForNavigationProperty<global::Sungero.CoreEntities.IRecipient>(global::System.Guid.Parse("365f0095-d91b-44b4-9024-17ae572ec47a"));
              this._RecipientCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationProperty<global::Sungero.CoreEntities.IRecipient>(() => this.Entity, typeof(T), "Recipient");

                  this._DocumentCollectionPresenter = this.CreateCollectionPresenterForNavigationProperty<global::Sungero.Docflow.IOfficialDocument>(global::System.Guid.Parse("c65e1fd8-34bf-4f8c-97f8-8729077bac85"));
              this._DocumentCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationProperty<global::Sungero.Docflow.IOfficialDocument>(() => this.Entity, typeof(T), "Document");

                  this._CurrencyCollectionPresenter = this.CreateCollectionPresenterForNavigationProperty<global::Sungero.Commons.ICurrency>(global::System.Guid.Parse("732466cc-6b38-4427-be86-be55dbfae5bf"));
              this._CurrencyCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Commons.ICurrency>(() => this.Entity.Id, typeof(T), "Currency");

                  this._CertificateCollectionPresenter = this.CreateCollectionPresenterForNavigationProperty<global::Sungero.CoreEntities.ICertificate>(global::System.Guid.Parse("fe63ee55-8b7f-4a92-898e-183063f89e0e"));
              this._CertificateCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationProperty<global::Sungero.CoreEntities.ICertificate>(() => this.Entity, typeof(T), "Certificate");


                          this._BusinessUnitsBusinessUnitCollectionPresenter = this.CreateCollectionPresenterForNavigationProperty<global::Sungero.Company.IBusinessUnit>(global::System.Guid.Parse("2ab29706-e23e-49a0-953c-5e913e112964"));
                        this._BusinessUnitsBusinessUnitCollectionPresenter
                        .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Company.IBusinessUnit>(() => this.Entity.Id, typeof(Sungero.Docflow.ISignatureSettingBusinessUnits), "BusinessUnit");

                          this._DocumentKindsDocumentKindCollectionPresenter = this.CreateCollectionPresenterForNavigationProperty<global::Sungero.Docflow.IDocumentKind>(global::System.Guid.Parse("1aa91826-3f29-4fe8-9ee7-80e8e49520aa"));
                        this._DocumentKindsDocumentKindCollectionPresenter
                        .Query = global::Sungero.Domain.Client.Session.GetValuesForChildNavigationProperty<global::Sungero.Docflow.IDocumentKind>(
                          () => this.ChildEntityCollectionPresenters.GetPresenter<global::Sungero.Docflow.ISignatureSettingDocumentKinds>().FocusedEntity,
                          typeof(Sungero.Docflow.ISignatureSettingDocumentKinds),
                          () => this.Entity,
                          "DocumentKind");

                          this._DepartmentsDepartmentCollectionPresenter = this.CreateCollectionPresenterForNavigationProperty<global::Sungero.Company.IDepartment>(global::System.Guid.Parse("58718074-8c22-406f-bd20-f686d33fc6ec"));
                        this._DepartmentsDepartmentCollectionPresenter
                        .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Company.IDepartment>(() => this.Entity.Id, typeof(Sungero.Docflow.ISignatureSettingDepartments), "Department");

                          this._CategoriesCategoryCollectionPresenter = this.CreateCollectionPresenterForNavigationProperty<global::Sungero.Docflow.IDocumentGroupBase>(global::System.Guid.Parse("ae223e26-f097-4ea6-a2ba-69fb3d027ee0"));
                        this._CategoriesCategoryCollectionPresenter
                        .Query = global::Sungero.Domain.Client.Session.GetValuesForChildNavigationProperty<global::Sungero.Docflow.IDocumentGroupBase>(
                          () => this.ChildEntityCollectionPresenters.GetPresenter<global::Sungero.Docflow.ISignatureSettingCategories>().FocusedEntity,
                          typeof(Sungero.Docflow.ISignatureSettingCategories),
                          () => this.Entity,
                          "Category");


    }

    public SignatureSettingPresenter()
    {
      this.Init();
    }

    #endregion
  }
}

// ==================================================================
// SignatureSettingCollectionPresenter.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Client
{
  public class SignatureSettingCollectionPresenter<T> : 
    global::Sungero.Domain.Client.EntityCollectionPresenter<T>
    where T: class, global::Sungero.Docflow.ISignatureSetting
  {
    #region Actions



    #endregion

    #region Methods


    #endregion

    public SignatureSettingCollectionPresenter(global::System.Linq.IQueryable<T> query, OnLookup onLookup)
      : base(query, onLookup)
    {
    }

    public SignatureSettingCollectionPresenter(global::System.Linq.IQueryable<T> query)
      : this(query, null) { }

    public SignatureSettingCollectionPresenter(OnLookup onLookup)
      : this(null, onLookup) { }

    public SignatureSettingCollectionPresenter()
      : this(null, null) { }
  }
}

// ==================================================================
// SignatureSettingRepositoryImplementer.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Client
{ 
  public class SignatureSettingRepositoryImplementer<T> : 
      global::Sungero.Domain.Client.RepositoryImplementer<T>,
      global::Sungero.Docflow.ISignatureSettingRepositoryImplementer<T>
      where T : global::Sungero.Docflow.ISignatureSetting
    {
       public new global::Sungero.Docflow.ISignatureSettingAccessRights AccessRights
       {
          get { return (global::Sungero.Docflow.ISignatureSettingAccessRights)base.AccessRights; }
       }

       public new global::Sungero.Docflow.ISignatureSettingInfo Info
       {
          get { return (global::Sungero.Docflow.ISignatureSettingInfo)base.Info; }
       }

       protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
       {
         return new global::Sungero.Docflow.Client.SignatureSettingTypeAccessRights(typeof(T));
       }
    }
}

// ==================================================================
// SignatureSettingAccessRights.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Client
{
  public class SignatureSettingAccessRights : 
    Sungero.CoreEntities.Client.DatabookEntryAccessRights, Sungero.Docflow.ISignatureSettingAccessRights
  {

    public SignatureSettingAccessRights(global::Sungero.Domain.Shared.IEntity entity) : base(entity)
    {
    }
  }

  public class SignatureSettingTypeAccessRights : 
    Sungero.CoreEntities.Client.DatabookEntryTypeAccessRights, Sungero.Docflow.ISignatureSettingAccessRights
  {

    public SignatureSettingTypeAccessRights(global::System.Type entityType) : base(entityType)
    {
    }
  }
}
