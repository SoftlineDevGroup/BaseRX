
// ==================================================================
// CheckReturnCheckAssignment.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Client
{
  public class CheckReturnCheckAssignment :
    global::Sungero.Workflow.Client.Assignment, global::Sungero.Docflow.ICheckReturnCheckAssignment
  {
    #region Fields and properties

    public static new readonly global::System.Guid ClassTypeGuid = global::System.Guid.Parse("0d7f53bd-74bd-42d5-93aa-188ac51e5852");

    public override global::System.Guid TypeGuid
    {
      get { return global::Sungero.Docflow.Client.CheckReturnCheckAssignment.ClassTypeGuid; }
    }

    public override string TypeName
    {
      get { return "Sungero.Docflow.ICheckReturnCheckAssignment, Sungero.Domain.Interfaces"; }
    }

      public override string DisplayValue
      {
        get { return this.Subject; }
        set { this.Subject = value; }
      }

      public override string DisplayPropertyName
      {
        get { return "Subject"; }
      }


    public new global::Sungero.Docflow.ICheckReturnCheckAssignmentState State
    {
      get
      {
        return (global::Sungero.Docflow.ICheckReturnCheckAssignmentState)base.State;
      }
    }

    protected override global::Sungero.Domain.Shared.IEntityState CreateState()
    {
      return new global::Sungero.Docflow.Shared.CheckReturnCheckAssignmentState(this);
    }

    public new global::Sungero.Docflow.ICheckReturnCheckAssignmentInfo Info
    {
      get
      {
        return (global::Sungero.Docflow.ICheckReturnCheckAssignmentInfo)base.Info;
      }
    }

    public new global::Sungero.Docflow.ICheckReturnCheckAssignmentAccessRights AccessRights
    {
      get
      {
        return (global::Sungero.Docflow.ICheckReturnCheckAssignmentAccessRights)base.AccessRights;
      }
    }

    protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
    {
      return new global::Sungero.Docflow.Client.CheckReturnCheckAssignmentAccessRights(this);
    }


        private static global::Sungero.Domain.Shared.EnumerationItems _ResultItems = new global::Sungero.Domain.Shared.EnumerationItems(
          global::Sungero.Workflow.Client.Assignment.ResultItems,
          typeof(global::Sungero.Docflow.CheckReturnCheckAssignment.Result),
          typeof(global::Sungero.Docflow.Client.CheckReturnCheckAssignment),
          "Result");

        public static new global::Sungero.Domain.Shared.EnumerationItems ResultItems
        {
          get { return global::Sungero.Docflow.Client.CheckReturnCheckAssignment._ResultItems; }
        }

        public override global::Sungero.Domain.Shared.EnumerationItems ResultAllowedItems
        {
          get { return global::Sungero.Docflow.Client.CheckReturnCheckAssignment.ResultItems; }
        }










    #endregion

    #region Methods

    protected override object CreateActionsHandlers()
    {
      return new global::Sungero.Docflow.Client.CheckReturnCheckAssignmentActions(this);
    }

    protected override object CreateCollectionActionsHandlers()
    {
      return new global::Sungero.Docflow.Client.CheckReturnCheckAssignmentCollectionActions();
    }

    protected override object CreateAnyChildEntityActionsHandlers()
    {
      return new global::Sungero.Docflow.Client.CheckReturnCheckAssignmentAnyChildEntityActions();
    }

    protected override object CreateAnyChildEntityCollectionActionsHandlers()
    {
      return new global::Sungero.Docflow.Client.CheckReturnCheckAssignmentAnyChildEntityCollectionActions();
    }


    protected override global::Sungero.Domain.Client.EntityFunctions CreateClientFunctions()
    {
      return new global::Sungero.Docflow.Client.CheckReturnCheckAssignmentFunctions(this);
    }

    protected override global::Sungero.Domain.Shared.EntityFunctions CreateSharedFunctions()
    {
      return new global::Sungero.Docflow.Shared.CheckReturnCheckAssignmentFunctions(this);
    }
    protected override object CreateHandlers() {
      return new global::Sungero.Docflow.CheckReturnCheckAssignmentClientHandlers(this);
    }
    protected override object CreateSharedHandlers() {
      return new global::Sungero.Docflow.CheckReturnCheckAssignmentSharedHandlers(this);
    }

    #endregion

    #region Framework events





    #endregion

    #region Constructors








    public CheckReturnCheckAssignment()
    {








      ((global::Sungero.Workflow.Interfaces.IWorkflowEntity)this).AttachmentCreated += this.AttachmentCreatedHandler;
      ((global::Sungero.Workflow.Interfaces.IWorkflowEntity)this).AttachmentAdded += this.AttachmentAddedHandler;
      ((global::Sungero.Workflow.Interfaces.IWorkflowEntity)this).AttachmentDeleted += this.AttachmentDeletedHandler;


    }

    #endregion

    #region Workflow attachments
    public virtual global::Sungero.Docflow.ICheckReturnCheckAssignmentDocumentGroupAttachments DocumentGroup
    {
      get
      {
        return new global::Sungero.Docflow.Shared.CheckReturnCheckAssignmentDocumentGroupAttachments(this);
      }
    }


    private void AttachmentCreatedHandler(object sender, global::Sungero.Workflow.Interfaces.AttachmentCreatedEventArgs e)
    {
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "DocumentGroup")
      {
        ((global::Sungero.Docflow.CheckReturnCheckAssignmentSharedHandlers)this.SharedHandlers).DocumentGroupCreated(e);
        return;
      }

    }

    private void AttachmentAddedHandler(object sender, global::Sungero.Workflow.Interfaces.AttachmentAddedEventArgs e)
    {
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "DocumentGroup")
      {
        ((global::Sungero.Docflow.CheckReturnCheckAssignmentSharedHandlers)this.SharedHandlers).DocumentGroupAdded(e);
        return;
      }

    }

    private void AttachmentDeletedHandler(object sender, global::Sungero.Workflow.Interfaces.AttachmentDeletedEventArgs e)
    {
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "DocumentGroup")
      {
        ((global::Sungero.Docflow.CheckReturnCheckAssignmentSharedHandlers)this.SharedHandlers).DocumentGroupDeleted(e);
        return;
      }

    }
    #endregion

  }
}

// ==================================================================
// CheckReturnCheckAssignmentPresenter.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Client
{
  public class CheckReturnCheckAssignmentPresenter<T> :
    global::Sungero.Workflow.Client.AssignmentPresenter<T>
    where T : class, global::Sungero.Docflow.ICheckReturnCheckAssignment
  {
    #region Fields and properties

          private global::System.Windows.Input.ICommand _ReturnedCommand;

          public global::System.Windows.Input.ICommand ReturnedCommand
          {
            get
            {
              if (this._ReturnedCommand == null)
                  this._ReturnedCommand = new global::Sungero.Workflow.Client.SingleAssignmentCommand<T>("Returned", this, this.Returned, this.CanReturned) { IsEmptyParameterAllowed = true };
              return this._ReturnedCommand;
            }
          }
          private global::System.Windows.Input.ICommand _NotReturnedCommand;

          public global::System.Windows.Input.ICommand NotReturnedCommand
          {
            get
            {
              if (this._NotReturnedCommand == null)
                  this._NotReturnedCommand = new global::Sungero.Workflow.Client.SingleAssignmentCommand<T>("NotReturned", this, this.NotReturned, this.CanNotReturned) { IsEmptyParameterAllowed = true };
              return this._NotReturnedCommand;
            }
          }




    #endregion

    #region Methods

              private bool CanReturned(T entity)
              {
                var args = new global::Sungero.Workflow.Client.CanExecuteResultActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity);
                return ((Sungero.Docflow.Client.CheckReturnCheckAssignmentActions)(entity as Sungero.Docflow.Client.CheckReturnCheckAssignment).ActionsHandlers).CanReturned(args);
              }

              private void Returned(T entity)
              {
                var args = new global::Sungero.Workflow.Client.ExecuteResultActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, entity.Info.Actions.Returned);
                ((Sungero.Docflow.Client.CheckReturnCheckAssignmentActions)(entity as Sungero.Docflow.Client.CheckReturnCheckAssignment).ActionsHandlers).Returned(args);
              }

              private bool CanNotReturned(T entity)
              {
                var args = new global::Sungero.Workflow.Client.CanExecuteResultActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity);
                return ((Sungero.Docflow.Client.CheckReturnCheckAssignmentActions)(entity as Sungero.Docflow.Client.CheckReturnCheckAssignment).ActionsHandlers).CanNotReturned(args);
              }

              private void NotReturned(T entity)
              {
                var args = new global::Sungero.Workflow.Client.ExecuteResultActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, entity.Info.Actions.NotReturned);
                ((Sungero.Docflow.Client.CheckReturnCheckAssignmentActions)(entity as Sungero.Docflow.Client.CheckReturnCheckAssignment).ActionsHandlers).NotReturned(args);
              }


    #endregion

    #region Framework events

    protected override void EntityPropertyChangedEventHandler(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
    {
      base.EntityPropertyChangedEventHandler(sender, e);
    }

    #endregion



    #region Constructors

    private void Init()
    {
              this._AuthorCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.CoreEntities.IUser>(() => this.Entity.Id, typeof(T), "Author");

              this._PerformerCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.CoreEntities.IUser>(() => this.Entity.Id, typeof(T), "Performer");

              this._TaskCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Workflow.ITask>(() => this.Entity.Id, typeof(T), "Task");

              this._MainTaskCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Workflow.ITask>(() => this.Entity.Id, typeof(T), "MainTask");

              this._CompletedByCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.CoreEntities.IUser>(() => this.Entity.Id, typeof(T), "CompletedBy");


    }

    public CheckReturnCheckAssignmentPresenter()
    {
      this.Init();
    }

    #endregion
  }
}

// ==================================================================
// CheckReturnCheckAssignmentCollectionPresenter.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Client
{
  public class CheckReturnCheckAssignmentCollectionPresenter<T> : 
    global::Sungero.Workflow.Client.AssignmentCollectionPresenter<T>
    where T: class, global::Sungero.Docflow.ICheckReturnCheckAssignment
  {
    #region Actions



    #endregion

    #region Methods


    #endregion

    public CheckReturnCheckAssignmentCollectionPresenter(global::System.Linq.IQueryable<T> query, OnLookup onLookup)
      : base(query, onLookup)
    {
    }

    public CheckReturnCheckAssignmentCollectionPresenter(global::System.Linq.IQueryable<T> query)
      : this(query, null) { }

    public CheckReturnCheckAssignmentCollectionPresenter(OnLookup onLookup)
      : this(null, onLookup) { }

    public CheckReturnCheckAssignmentCollectionPresenter()
      : this(null, null) { }
  }
}

// ==================================================================
// CheckReturnCheckAssignmentRepositoryImplementer.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Client
{ 
  public class CheckReturnCheckAssignmentRepositoryImplementer<T> : 
      global::Sungero.Workflow.Client.AssignmentRepositoryImplementer<T>,
      global::Sungero.Docflow.ICheckReturnCheckAssignmentRepositoryImplementer<T>
      where T : global::Sungero.Docflow.ICheckReturnCheckAssignment
    {
       public new global::Sungero.Docflow.ICheckReturnCheckAssignmentAccessRights AccessRights
       {
          get { return (global::Sungero.Docflow.ICheckReturnCheckAssignmentAccessRights)base.AccessRights; }
       }

       public new global::Sungero.Docflow.ICheckReturnCheckAssignmentInfo Info
       {
          get { return (global::Sungero.Docflow.ICheckReturnCheckAssignmentInfo)base.Info; }
       }

       protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
       {
         return new global::Sungero.Docflow.Client.CheckReturnCheckAssignmentTypeAccessRights(typeof(T));
       }
    }
}

// ==================================================================
// CheckReturnCheckAssignmentAccessRights.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Client
{
  public class CheckReturnCheckAssignmentAccessRights : 
    Sungero.Workflow.Client.AssignmentAccessRights, Sungero.Docflow.ICheckReturnCheckAssignmentAccessRights
  {

    public CheckReturnCheckAssignmentAccessRights(global::Sungero.Domain.Shared.IEntity entity) : base(entity)
    {
    }
  }

  public class CheckReturnCheckAssignmentTypeAccessRights : 
    Sungero.Workflow.Client.AssignmentTypeAccessRights, Sungero.Docflow.ICheckReturnCheckAssignmentAccessRights
  {

    public CheckReturnCheckAssignmentTypeAccessRights(global::System.Type entityType) : base(entityType)
    {
    }
  }
}
