
// ==================================================================
// RegistrationGroup.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Client
{
  public class RegistrationGroup :
    global::Sungero.CoreEntities.Client.Group, global::Sungero.Docflow.IRegistrationGroup
  {
    #region Fields and properties

    public static new readonly global::System.Guid ClassTypeGuid = global::System.Guid.Parse("6eddf9a4-bf7b-4cac-961b-a1f0f0bc7ab6");

    public override global::System.Guid TypeGuid
    {
      get { return global::Sungero.Docflow.Client.RegistrationGroup.ClassTypeGuid; }
    }

    public override string TypeName
    {
      get { return "Sungero.Docflow.IRegistrationGroup, Sungero.Domain.Interfaces"; }
    }

      public override string DisplayValue
      {
        get { return this.Name; }
        set { this.Name = value; }
      }

      public override string DisplayPropertyName
      {
        get { return "Name"; }
      }


    public new global::Sungero.Docflow.IRegistrationGroupState State
    {
      get
      {
        return (global::Sungero.Docflow.IRegistrationGroupState)base.State;
      }
    }

    protected override global::Sungero.Domain.Shared.IEntityState CreateState()
    {
      return new global::Sungero.Docflow.Shared.RegistrationGroupState(this);
    }

    public new global::Sungero.Docflow.IRegistrationGroupInfo Info
    {
      get
      {
        return (global::Sungero.Docflow.IRegistrationGroupInfo)base.Info;
      }
    }

    public new global::Sungero.Docflow.IRegistrationGroupAccessRights AccessRights
    {
      get
      {
        return (global::Sungero.Docflow.IRegistrationGroupAccessRights)base.AccessRights;
      }
    }

    protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
    {
      return new global::Sungero.Docflow.Client.RegistrationGroupAccessRights(this);
    }

        protected global::Sungero.Domain.Client.SimpleProperty<global::System.String> _Index;

        public virtual global::System.String Index
        {
          get { return this._Index.Value; }
          set { this._Index.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.Boolean?> _CanRegisterIncoming;

        public virtual global::System.Boolean? CanRegisterIncoming
        {
          get { return this._CanRegisterIncoming.Value; }
          set { this._CanRegisterIncoming.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.Boolean?> _CanRegisterOutgoing;

        public virtual global::System.Boolean? CanRegisterOutgoing
        {
          get { return this._CanRegisterOutgoing.Value; }
          set { this._CanRegisterOutgoing.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.Boolean?> _CanRegisterInternal;

        public virtual global::System.Boolean? CanRegisterInternal
        {
          get { return this._CanRegisterInternal.Value; }
          set { this._CanRegisterInternal.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.Boolean?> _CanRegisterContractual;

        public virtual global::System.Boolean? CanRegisterContractual
        {
          get { return this._CanRegisterContractual.Value; }
          set { this._CanRegisterContractual.Value = value; }
        }




              protected global::Sungero.Domain.Client.INavigationProperty<global::Sungero.Company.IEmployee> _ResponsibleEmployee;

              public virtual global::Sungero.Company.IEmployee ResponsibleEmployee
              {
              get
              {
                return this._ResponsibleEmployee.Value as global::Sungero.Company.IEmployee;
              }

              set
              {
                (this._ResponsibleEmployee as global::Sungero.Domain.Client.IProperty).Value = value;
              }
            }







          protected global::Sungero.Domain.Client.IListProperty<global::Sungero.Docflow.IRegistrationGroupDepartments> _Departments;

          virtual public global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Docflow.IRegistrationGroupDepartments> Departments
          {
            get { return this._Departments.Value; }
          }






    private object _DepartmentsActionsHandlers;

    public object DepartmentsActionsHandlers
    {
      get
      {
        if (this._DepartmentsActionsHandlers == null)
          this._DepartmentsActionsHandlers = this.CreateDepartmentsActionsHandlers();
        return this._DepartmentsActionsHandlers;
      }
    }

    private object _DepartmentsCollectionActionsHandlers;

    public object DepartmentsCollectionActionsHandlers
    {
      get
      {
        if (this._DepartmentsCollectionActionsHandlers == null)
          this._DepartmentsCollectionActionsHandlers = this.CreateDepartmentsCollectionActionsHandlers();
        return this._DepartmentsCollectionActionsHandlers;
      }
    }

    #endregion

    #region Methods

    protected override object CreateActionsHandlers()
    {
      return new global::Sungero.Docflow.Client.RegistrationGroupActions(this);
    }

    protected override object CreateCollectionActionsHandlers()
    {
      return new global::Sungero.Docflow.Client.RegistrationGroupCollectionActions();
    }

    protected override object CreateAnyChildEntityActionsHandlers()
    {
      return new global::Sungero.Docflow.Client.RegistrationGroupAnyChildEntityActions();
    }

    protected override object CreateAnyChildEntityCollectionActionsHandlers()
    {
      return new global::Sungero.Docflow.Client.RegistrationGroupAnyChildEntityCollectionActions();
    }

    protected object CreateDepartmentsActionsHandlers()
    {
      return null;
    }

    protected object CreateDepartmentsCollectionActionsHandlers()
    {
      return null;
    }


    protected override global::Sungero.Domain.Client.EntityFunctions CreateClientFunctions()
    {
      return new global::Sungero.Docflow.Client.RegistrationGroupFunctions(this);
    }

    protected override global::Sungero.Domain.Shared.EntityFunctions CreateSharedFunctions()
    {
      return new global::Sungero.Docflow.Shared.RegistrationGroupFunctions(this);
    }
    protected override object CreateHandlers() {
      return new global::Sungero.Docflow.RegistrationGroupClientHandlers(this);
    }
    protected override object CreateSharedHandlers() {
      return new global::Sungero.Docflow.RegistrationGroupSharedHandlers(this);
    }

    #endregion

    #region Framework events

    protected void IndexChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.Index, this.Index, this);
     ((global::Sungero.Docflow.RegistrationGroupSharedHandlers)this.SharedHandlers).IndexChanged(args);
    }

    protected void ResponsibleEmployeeChangedHandler()
    {
      var args = new global::Sungero.Docflow.Shared.RegistrationGroupResponsibleEmployeeChangedEventArgs(this.State.Properties.ResponsibleEmployee, this.ResponsibleEmployee, this);
     ((global::Sungero.Docflow.RegistrationGroupSharedHandlers)this.SharedHandlers).ResponsibleEmployeeChanged(args);
    }

    protected void DepartmentsChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.CollectionPropertyChangedEventArgs(this);
     ((global::Sungero.Docflow.RegistrationGroupSharedHandlers)this.SharedHandlers).DepartmentsChanged(args);
    }

    protected void CanRegisterIncomingChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.BooleanPropertyChangedEventArgs(this.State.Properties.CanRegisterIncoming, this.CanRegisterIncoming, this);
     ((global::Sungero.Docflow.RegistrationGroupSharedHandlers)this.SharedHandlers).CanRegisterIncomingChanged(args);
    }

    protected void CanRegisterOutgoingChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.BooleanPropertyChangedEventArgs(this.State.Properties.CanRegisterOutgoing, this.CanRegisterOutgoing, this);
     ((global::Sungero.Docflow.RegistrationGroupSharedHandlers)this.SharedHandlers).CanRegisterOutgoingChanged(args);
    }

    protected void CanRegisterInternalChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.BooleanPropertyChangedEventArgs(this.State.Properties.CanRegisterInternal, this.CanRegisterInternal, this);
     ((global::Sungero.Docflow.RegistrationGroupSharedHandlers)this.SharedHandlers).CanRegisterInternalChanged(args);
    }

    protected void CanRegisterContractualChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.BooleanPropertyChangedEventArgs(this.State.Properties.CanRegisterContractual, this.CanRegisterContractual, this);
     ((global::Sungero.Docflow.RegistrationGroupSharedHandlers)this.SharedHandlers).CanRegisterContractualChanged(args);
    }



    protected override global::Sungero.CoreEntities.GroupRecipientLinksSharedCollectionHandlers CreateRecipientLinksAddedHandler(global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.Docflow.RegistrationGroupRecipientLinksSharedCollectionHandlers(this, e.Value, null, e.Source);
    }

    protected override global::Sungero.CoreEntities.GroupRecipientLinksSharedCollectionHandlers CreateRecipientLinksDeletedHandler(global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.Docflow.RegistrationGroupRecipientLinksSharedCollectionHandlers(this, null, e.Value, null);
    }



    protected virtual global::Sungero.Docflow.RegistrationGroupDepartmentsSharedCollectionHandlers CreateDepartmentsAddedHandler(global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.Docflow.RegistrationGroupDepartmentsSharedCollectionHandlers(this, e.Value, null, e.Source);
    }

    protected virtual global::Sungero.Docflow.RegistrationGroupDepartmentsSharedCollectionHandlers CreateDepartmentsDeletedHandler(global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.Docflow.RegistrationGroupDepartmentsSharedCollectionHandlers(this, null, e.Value, null);
    }

    protected virtual void DepartmentsAddedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {  
      var collectionHandlers = this.CreateDepartmentsAddedHandler(e);
      if (collectionHandlers != null)
      {
        var args = new global::Sungero.Domain.Shared.CollectionPropertyAddedEventArgs(this);
        collectionHandlers.DepartmentsAdded(args);
      }
    }

    protected virtual void DepartmentsDeletedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {  
      var collectionHandlers = this.CreateDepartmentsDeletedHandler(e);
      if (collectionHandlers != null)
      {
        var args = new global::Sungero.Domain.Shared.CollectionPropertyDeletedEventArgs(this);
        collectionHandlers.DepartmentsDeleted(args);
      }
    }


  protected global::System.String IndexValueInputHandler(global::System.String value)
  {
    var args = new global::Sungero.Presentation.StringValueInputEventArgs(this.Index, value, this, this.Info.Properties.Index);
    ((global::Sungero.Docflow.RegistrationGroupClientHandlers)this.Handlers).IndexValueInput(args);
    return args.NewValue;
  }

  protected global::Sungero.Company.IEmployee ResponsibleEmployeeValueInputHandler(global::Sungero.Company.IEmployee value)
  {
    var args = new global::Sungero.Docflow.Client.RegistrationGroupResponsibleEmployeeValueInputEventArgs(this.ResponsibleEmployee, value, this, this.Info.Properties.ResponsibleEmployee);
    ((global::Sungero.Docflow.RegistrationGroupClientHandlers)this.Handlers).ResponsibleEmployeeValueInput(args);
    return args.NewValue;
  }


  protected global::System.Boolean? CanRegisterIncomingValueInputHandler(global::System.Boolean? value)
  {
    var args = new global::Sungero.Presentation.BooleanValueInputEventArgs(this.CanRegisterIncoming, value, this, this.Info.Properties.CanRegisterIncoming);
    ((global::Sungero.Docflow.RegistrationGroupClientHandlers)this.Handlers).CanRegisterIncomingValueInput(args);
    return args.NewValue;
  }

  protected global::System.Boolean? CanRegisterOutgoingValueInputHandler(global::System.Boolean? value)
  {
    var args = new global::Sungero.Presentation.BooleanValueInputEventArgs(this.CanRegisterOutgoing, value, this, this.Info.Properties.CanRegisterOutgoing);
    ((global::Sungero.Docflow.RegistrationGroupClientHandlers)this.Handlers).CanRegisterOutgoingValueInput(args);
    return args.NewValue;
  }

  protected global::System.Boolean? CanRegisterInternalValueInputHandler(global::System.Boolean? value)
  {
    var args = new global::Sungero.Presentation.BooleanValueInputEventArgs(this.CanRegisterInternal, value, this, this.Info.Properties.CanRegisterInternal);
    ((global::Sungero.Docflow.RegistrationGroupClientHandlers)this.Handlers).CanRegisterInternalValueInput(args);
    return args.NewValue;
  }

  protected global::System.Boolean? CanRegisterContractualValueInputHandler(global::System.Boolean? value)
  {
    var args = new global::Sungero.Presentation.BooleanValueInputEventArgs(this.CanRegisterContractual, value, this, this.Info.Properties.CanRegisterContractual);
    ((global::Sungero.Docflow.RegistrationGroupClientHandlers)this.Handlers).CanRegisterContractualValueInput(args);
    return args.NewValue;
  }



    #endregion

    #region Constructors




              protected virtual void InitResponsibleEmployeeNavigationProperty()
              {
                this._ResponsibleEmployee = new global::Sungero.Domain.Client.NavigationProperty<global::Sungero.Company.IEmployee>("ResponsibleEmployee", this);
                this._ResponsibleEmployee.ValueChanged += (sender, e) => { this.ResponsibleEmployeeChangedHandler(); };
                this.AddProperty(this._ResponsibleEmployee as global::Sungero.Domain.Client.IProperty);
              }



            protected override void InitRecipientLinksCollectionProperty()
            {
              this._RecipientLinks = new global::Sungero.Domain.Client.ListProperty<global::Sungero.Docflow.IRegistrationGroupRecipientLinks>("RecipientLinks", this);
              this._RecipientLinks.ValueChanged += (sender, e) => { this.RecipientLinksChangedHandler(); };
              this.AddProperty((global::Sungero.Domain.Client.IProperty)this._RecipientLinks);
              this.SetRecipientLinksEventHandlers();
            }

            protected virtual void InitDepartmentsCollectionProperty()
            {
              this._Departments = new global::Sungero.Domain.Client.ListProperty<global::Sungero.Docflow.IRegistrationGroupDepartments>("Departments", this);
              this._Departments.ValueChanged += (sender, e) => { this.DepartmentsChangedHandler(); };
              this.AddProperty((global::Sungero.Domain.Client.IProperty)this._Departments);
              this.SetDepartmentsEventHandlers();
            }

            protected void SetDepartmentsEventHandlers()
            {
              this._Departments.ChildEntityAdded += this.DepartmentsAddedHandler;
              this._Departments.ChildEntityDeleted += this.DepartmentsDeletedHandler;
            }


    public RegistrationGroup()
    {
            this._Index = new global::Sungero.Domain.Client.SimpleProperty<global::System.String>("Index", this);
            this._Index.ValueChanged += (sender, e) => { this.IndexChangedHandler(); };
            this.AddProperty(this._Index);

            this._CanRegisterIncoming = new global::Sungero.Domain.Client.SimpleProperty<global::System.Boolean?>("CanRegisterIncoming", this);
            this._CanRegisterIncoming.ValueChanged += (sender, e) => { this.CanRegisterIncomingChangedHandler(); };
            this.AddProperty(this._CanRegisterIncoming);

            this._CanRegisterOutgoing = new global::Sungero.Domain.Client.SimpleProperty<global::System.Boolean?>("CanRegisterOutgoing", this);
            this._CanRegisterOutgoing.ValueChanged += (sender, e) => { this.CanRegisterOutgoingChangedHandler(); };
            this.AddProperty(this._CanRegisterOutgoing);

            this._CanRegisterInternal = new global::Sungero.Domain.Client.SimpleProperty<global::System.Boolean?>("CanRegisterInternal", this);
            this._CanRegisterInternal.ValueChanged += (sender, e) => { this.CanRegisterInternalChangedHandler(); };
            this.AddProperty(this._CanRegisterInternal);

            this._CanRegisterContractual = new global::Sungero.Domain.Client.SimpleProperty<global::System.Boolean?>("CanRegisterContractual", this);
            this._CanRegisterContractual.ValueChanged += (sender, e) => { this.CanRegisterContractualChangedHandler(); };
            this.AddProperty(this._CanRegisterContractual);

            this.InitResponsibleEmployeeNavigationProperty();


            this.InitDepartmentsCollectionProperty();







    }

    #endregion

  }
}

// ==================================================================
// RegistrationGroupPresenter.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Client
{
  public class RegistrationGroupPresenter<T> :
    global::Sungero.CoreEntities.Client.GroupPresenter<T>
    where T : class, global::Sungero.Docflow.IRegistrationGroup
  {
    #region Fields and properties

          private global::System.Windows.Input.ICommand _ShowGroupDocumentRegistersCommand;

          public global::System.Windows.Input.ICommand ShowGroupDocumentRegistersCommand
          {
            get
            {
              if (this._ShowGroupDocumentRegistersCommand == null)
                  this._ShowGroupDocumentRegistersCommand = new global::Sungero.Domain.Client.SingleEntityCommand<T>("ShowGroupDocumentRegisters", this, this.ShowGroupDocumentRegisters, this.CanShowGroupDocumentRegisters) { IsEmptyParameterAllowed = true };
              return this._ShowGroupDocumentRegistersCommand;
            }
          }




    #endregion

    #region Methods

              private bool CanShowGroupDocumentRegisters(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfCanExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this);
                return ((Sungero.Docflow.Client.RegistrationGroupActions)(entity as Sungero.Docflow.Client.RegistrationGroup).ActionsHandlers).CanShowGroupDocumentRegisters(args);
              }

              private void ShowGroupDocumentRegisters(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this, entity.Info.Actions.ShowGroupDocumentRegisters);
                ((Sungero.Docflow.Client.RegistrationGroupActions)(entity as Sungero.Docflow.Client.RegistrationGroup).ActionsHandlers).ShowGroupDocumentRegisters(args);
              }


    #endregion

    #region Framework events

    protected override void EntityPropertyChangedEventHandler(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
    {
      base.EntityPropertyChangedEventHandler(sender, e);
    }

    #endregion

              protected global::Sungero.Domain.Client.IEntityCollectionPresenter _ResponsibleEmployeeCollectionPresenter;
              public global::Sungero.Domain.Client.IEntityCollectionPresenter ResponsibleEmployeeCollectionPresenter
              {
          get { return this._ResponsibleEmployeeCollectionPresenter; }
        }


                          protected global::Sungero.Domain.Client.IEntityCollectionPresenter _DepartmentsDepartmentCollectionPresenter;
                          public global::Sungero.Domain.Client.IEntityCollectionPresenter DepartmentsDepartmentCollectionPresenter
                          {
                  get { return this._DepartmentsDepartmentCollectionPresenter; }
                }



    #region Constructors

    private void Init()
    {
              this._ParentCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationProperty<global::Sungero.CoreEntities.IGroup>(() => this.Entity, typeof(T), "Parent");

                  this._ResponsibleEmployeeCollectionPresenter = this.CreateCollectionPresenterForNavigationProperty<global::Sungero.Company.IEmployee>(global::System.Guid.Parse("49857417-12a5-45c4-85dd-5a83f167d9e3"));
              this._ResponsibleEmployeeCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Company.IEmployee>(() => this.Entity.Id, typeof(T), "ResponsibleEmployee");


                        this._RecipientLinksMemberCollectionPresenter
                        .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.CoreEntities.IRecipient>(() => this.Entity.Id, typeof(Sungero.Docflow.IRegistrationGroupRecipientLinks), "Member");


                          this._DepartmentsDepartmentCollectionPresenter = this.CreateCollectionPresenterForNavigationProperty<global::Sungero.Company.IDepartment>(global::System.Guid.Parse("9caab381-024e-47d0-a022-e5e6146393d7"));
                        this._DepartmentsDepartmentCollectionPresenter
                        .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Company.IDepartment>(() => this.Entity.Id, typeof(Sungero.Docflow.IRegistrationGroupDepartments), "Department");


    }

    public RegistrationGroupPresenter()
    {
      this.Init();
    }

    #endregion
  }
}

// ==================================================================
// RegistrationGroupCollectionPresenter.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Client
{
  public class RegistrationGroupCollectionPresenter<T> : 
    global::Sungero.CoreEntities.Client.GroupCollectionPresenter<T>
    where T: class, global::Sungero.Docflow.IRegistrationGroup
  {
    #region Actions

          private global::System.Windows.Input.ICommand _ShowGroupDocumentRegistersCommand;  

          public global::System.Windows.Input.ICommand ShowGroupDocumentRegistersCommand 
          { 
            get
            { 
              if (this._ShowGroupDocumentRegistersCommand == null)
                this._ShowGroupDocumentRegistersCommand = new global::Sungero.Domain.Client.SingleEntityCommand<T>("ShowGroupDocumentRegisters", this, this.ShowGroupDocumentRegisters, this.CanShowGroupDocumentRegisters) { IsEmptyParameterAllowed = true };
              return this._ShowGroupDocumentRegistersCommand; 
            }
          }



    #endregion

    #region Methods

        private bool CanShowGroupDocumentRegisters(T entity)
        {
          var args = new global::Sungero.Domain.Client.WpfCanExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Collection, entity, this);
          return ((Sungero.Docflow.Client.RegistrationGroupActions)(entity as Sungero.Docflow.Client.RegistrationGroup).ActionsHandlers).CanShowGroupDocumentRegisters(args);
        }

        private void ShowGroupDocumentRegisters(T entity)
        {
          var args = new global::Sungero.Domain.Client.WpfExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Collection, entity, this, entity.Info.Actions.ShowGroupDocumentRegisters);
          ((Sungero.Docflow.Client.RegistrationGroupActions)(entity as Sungero.Docflow.Client.RegistrationGroup).ActionsHandlers).ShowGroupDocumentRegisters(args);
        }



    #endregion

    public RegistrationGroupCollectionPresenter(global::System.Linq.IQueryable<T> query, OnLookup onLookup)
      : base(query, onLookup)
    {
    }

    public RegistrationGroupCollectionPresenter(global::System.Linq.IQueryable<T> query)
      : this(query, null) { }

    public RegistrationGroupCollectionPresenter(OnLookup onLookup)
      : this(null, onLookup) { }

    public RegistrationGroupCollectionPresenter()
      : this(null, null) { }
  }
}

// ==================================================================
// RegistrationGroupRepositoryImplementer.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Client
{ 
  public class RegistrationGroupRepositoryImplementer<T> : 
      global::Sungero.CoreEntities.Client.GroupRepositoryImplementer<T>,
      global::Sungero.Docflow.IRegistrationGroupRepositoryImplementer<T>
      where T : global::Sungero.Docflow.IRegistrationGroup
    {
       public new global::Sungero.Docflow.IRegistrationGroupAccessRights AccessRights
       {
          get { return (global::Sungero.Docflow.IRegistrationGroupAccessRights)base.AccessRights; }
       }

       public new global::Sungero.Docflow.IRegistrationGroupInfo Info
       {
          get { return (global::Sungero.Docflow.IRegistrationGroupInfo)base.Info; }
       }

       protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
       {
         return new global::Sungero.Docflow.Client.RegistrationGroupTypeAccessRights(typeof(T));
       }
    }
}

// ==================================================================
// RegistrationGroupAccessRights.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Client
{
  public class RegistrationGroupAccessRights : 
    Sungero.CoreEntities.Client.GroupAccessRights, Sungero.Docflow.IRegistrationGroupAccessRights
  {

    public RegistrationGroupAccessRights(global::Sungero.Domain.Shared.IEntity entity) : base(entity)
    {
    }
  }

  public class RegistrationGroupTypeAccessRights : 
    Sungero.CoreEntities.Client.GroupTypeAccessRights, Sungero.Docflow.IRegistrationGroupAccessRights
  {

    public RegistrationGroupTypeAccessRights(global::System.Type entityType) : base(entityType)
    {
    }
  }
}
