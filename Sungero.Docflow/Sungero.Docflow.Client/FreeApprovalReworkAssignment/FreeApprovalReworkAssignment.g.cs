
// ==================================================================
// FreeApprovalReworkAssignment.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Client
{
  public class FreeApprovalReworkAssignment :
    global::Sungero.Workflow.Client.Assignment, global::Sungero.Docflow.IFreeApprovalReworkAssignment
  {
    #region Fields and properties

    public static new readonly global::System.Guid ClassTypeGuid = global::System.Guid.Parse("593ff79e-38b4-4903-b20e-9e08cfea6307");

    public override global::System.Guid TypeGuid
    {
      get { return global::Sungero.Docflow.Client.FreeApprovalReworkAssignment.ClassTypeGuid; }
    }

    public override string TypeName
    {
      get { return "Sungero.Docflow.IFreeApprovalReworkAssignment, Sungero.Domain.Interfaces"; }
    }

      public override string DisplayValue
      {
        get { return this.Subject; }
        set { this.Subject = value; }
      }

      public override string DisplayPropertyName
      {
        get { return "Subject"; }
      }


    public new global::Sungero.Docflow.IFreeApprovalReworkAssignmentState State
    {
      get
      {
        return (global::Sungero.Docflow.IFreeApprovalReworkAssignmentState)base.State;
      }
    }

    protected override global::Sungero.Domain.Shared.IEntityState CreateState()
    {
      return new global::Sungero.Docflow.Shared.FreeApprovalReworkAssignmentState(this);
    }

    public new global::Sungero.Docflow.IFreeApprovalReworkAssignmentInfo Info
    {
      get
      {
        return (global::Sungero.Docflow.IFreeApprovalReworkAssignmentInfo)base.Info;
      }
    }

    public new global::Sungero.Docflow.IFreeApprovalReworkAssignmentAccessRights AccessRights
    {
      get
      {
        return (global::Sungero.Docflow.IFreeApprovalReworkAssignmentAccessRights)base.AccessRights;
      }
    }

    protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
    {
      return new global::Sungero.Docflow.Client.FreeApprovalReworkAssignmentAccessRights(this);
    }

        protected global::Sungero.Domain.Client.SimpleProperty<global::System.DateTime?> _NewDeadline;

        public virtual global::System.DateTime? NewDeadline
        {
          get { return this._NewDeadline.Value; }
          set { this._NewDeadline.Value = value; }
        }


        private static global::Sungero.Domain.Shared.EnumerationItems _ResultItems = new global::Sungero.Domain.Shared.EnumerationItems(
          global::Sungero.Workflow.Client.Assignment.ResultItems,
          typeof(global::Sungero.Docflow.FreeApprovalReworkAssignment.Result),
          typeof(global::Sungero.Docflow.Client.FreeApprovalReworkAssignment),
          "Result");

        public static new global::Sungero.Domain.Shared.EnumerationItems ResultItems
        {
          get { return global::Sungero.Docflow.Client.FreeApprovalReworkAssignment._ResultItems; }
        }

        public override global::Sungero.Domain.Shared.EnumerationItems ResultAllowedItems
        {
          get { return global::Sungero.Docflow.Client.FreeApprovalReworkAssignment.ResultItems; }
        }







          protected global::Sungero.Domain.Client.IListProperty<global::Sungero.Docflow.IFreeApprovalReworkAssignmentApprovers> _Approvers;

          virtual public global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Docflow.IFreeApprovalReworkAssignmentApprovers> Approvers
          {
            get { return this._Approvers.Value; }
          }






    private object _ApproversActionsHandlers;

    public object ApproversActionsHandlers
    {
      get
      {
        if (this._ApproversActionsHandlers == null)
          this._ApproversActionsHandlers = this.CreateApproversActionsHandlers();
        return this._ApproversActionsHandlers;
      }
    }

    private object _ApproversCollectionActionsHandlers;

    public object ApproversCollectionActionsHandlers
    {
      get
      {
        if (this._ApproversCollectionActionsHandlers == null)
          this._ApproversCollectionActionsHandlers = this.CreateApproversCollectionActionsHandlers();
        return this._ApproversCollectionActionsHandlers;
      }
    }

    #endregion

    #region Methods

    protected override object CreateActionsHandlers()
    {
      return new global::Sungero.Docflow.Client.FreeApprovalReworkAssignmentActions(this);
    }

    protected override object CreateCollectionActionsHandlers()
    {
      return new global::Sungero.Docflow.Client.FreeApprovalReworkAssignmentCollectionActions();
    }

    protected override object CreateAnyChildEntityActionsHandlers()
    {
      return new global::Sungero.Docflow.Client.FreeApprovalReworkAssignmentAnyChildEntityActions();
    }

    protected override object CreateAnyChildEntityCollectionActionsHandlers()
    {
      return new global::Sungero.Docflow.Client.FreeApprovalReworkAssignmentAnyChildEntityCollectionActions();
    }

    protected object CreateApproversActionsHandlers()
    {
      return null;
    }

    protected object CreateApproversCollectionActionsHandlers()
    {
      return null;
    }


    protected override global::Sungero.Domain.Client.EntityFunctions CreateClientFunctions()
    {
      return new global::Sungero.Docflow.Client.FreeApprovalReworkAssignmentFunctions(this);
    }

    protected override global::Sungero.Domain.Shared.EntityFunctions CreateSharedFunctions()
    {
      return new global::Sungero.Docflow.Shared.FreeApprovalReworkAssignmentFunctions(this);
    }
    protected override object CreateHandlers() {
      return new global::Sungero.Docflow.FreeApprovalReworkAssignmentClientHandlers(this);
    }
    protected override object CreateSharedHandlers() {
      return new global::Sungero.Docflow.FreeApprovalReworkAssignmentSharedHandlers(this);
    }

    #endregion

    #region Framework events

    protected void NewDeadlineChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.DateTimePropertyChangedEventArgs(this.State.Properties.NewDeadline, this.NewDeadline, this);
     ((global::Sungero.Docflow.FreeApprovalReworkAssignmentSharedHandlers)this.SharedHandlers).NewDeadlineChanged(args);
    }

    protected void ApproversChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.CollectionPropertyChangedEventArgs(this);
     ((global::Sungero.Docflow.FreeApprovalReworkAssignmentSharedHandlers)this.SharedHandlers).ApproversChanged(args);
    }



    protected virtual global::Sungero.Docflow.FreeApprovalReworkAssignmentApproversSharedCollectionHandlers CreateApproversAddedHandler(global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.Docflow.FreeApprovalReworkAssignmentApproversSharedCollectionHandlers(this, e.Value, null, e.Source);
    }

    protected virtual global::Sungero.Docflow.FreeApprovalReworkAssignmentApproversSharedCollectionHandlers CreateApproversDeletedHandler(global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.Docflow.FreeApprovalReworkAssignmentApproversSharedCollectionHandlers(this, null, e.Value, null);
    }

    protected virtual void ApproversAddedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {  
      var collectionHandlers = this.CreateApproversAddedHandler(e);
      if (collectionHandlers != null)
      {
        var args = new global::Sungero.Domain.Shared.CollectionPropertyAddedEventArgs(this);
        collectionHandlers.ApproversAdded(args);
      }
    }

    protected virtual void ApproversDeletedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {  
      var collectionHandlers = this.CreateApproversDeletedHandler(e);
      if (collectionHandlers != null)
      {
        var args = new global::Sungero.Domain.Shared.CollectionPropertyDeletedEventArgs(this);
        collectionHandlers.ApproversDeleted(args);
      }
    }


  protected global::System.DateTime? NewDeadlineValueInputHandler(global::System.DateTime? value)
  {
    var args = new global::Sungero.Presentation.DateTimeValueInputEventArgs(this.NewDeadline, value, this, this.Info.Properties.NewDeadline);
    ((global::Sungero.Docflow.FreeApprovalReworkAssignmentClientHandlers)this.Handlers).NewDeadlineValueInput(args);
    return args.NewValue;
  }




    #endregion

    #region Constructors







            protected virtual void InitApproversCollectionProperty()
            {
              this._Approvers = new global::Sungero.Domain.Client.ListProperty<global::Sungero.Docflow.IFreeApprovalReworkAssignmentApprovers>("Approvers", this);
              this._Approvers.ValueChanged += (sender, e) => { this.ApproversChangedHandler(); };
              this.AddProperty((global::Sungero.Domain.Client.IProperty)this._Approvers);
              this.SetApproversEventHandlers();
            }

            protected void SetApproversEventHandlers()
            {
              this._Approvers.ChildEntityAdded += this.ApproversAddedHandler;
              this._Approvers.ChildEntityDeleted += this.ApproversDeletedHandler;
            }


    public FreeApprovalReworkAssignment()
    {
            this._NewDeadline = new global::Sungero.Domain.Client.SimpleProperty<global::System.DateTime?>("NewDeadline", this);
            this._NewDeadline.ValueChanged += (sender, e) => { this.NewDeadlineChangedHandler(); };
            this.AddProperty(this._NewDeadline);


            this.InitApproversCollectionProperty();







      ((global::Sungero.Workflow.Interfaces.IWorkflowEntity)this).AttachmentCreated += this.AttachmentCreatedHandler;
      ((global::Sungero.Workflow.Interfaces.IWorkflowEntity)this).AttachmentAdded += this.AttachmentAddedHandler;
      ((global::Sungero.Workflow.Interfaces.IWorkflowEntity)this).AttachmentDeleted += this.AttachmentDeletedHandler;


    }

    #endregion

    #region Workflow attachments
    public virtual global::Sungero.Docflow.IFreeApprovalReworkAssignmentAddendaGroupAttachments AddendaGroup
    {
      get
      {
        return new global::Sungero.Docflow.Shared.FreeApprovalReworkAssignmentAddendaGroupAttachments(this);
      }
    }
    public virtual global::Sungero.Docflow.IFreeApprovalReworkAssignmentOtherGroupAttachments OtherGroup
    {
      get
      {
        return new global::Sungero.Docflow.Shared.FreeApprovalReworkAssignmentOtherGroupAttachments(this);
      }
    }
    public virtual global::Sungero.Docflow.IFreeApprovalReworkAssignmentForApprovalGroupAttachments ForApprovalGroup
    {
      get
      {
        return new global::Sungero.Docflow.Shared.FreeApprovalReworkAssignmentForApprovalGroupAttachments(this);
      }
    }


    private void AttachmentCreatedHandler(object sender, global::Sungero.Workflow.Interfaces.AttachmentCreatedEventArgs e)
    {
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "AddendaGroup")
      {
        ((global::Sungero.Docflow.FreeApprovalReworkAssignmentSharedHandlers)this.SharedHandlers).AddendaGroupCreated(e);
        return;
      }
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "OtherGroup")
      {
        ((global::Sungero.Docflow.FreeApprovalReworkAssignmentSharedHandlers)this.SharedHandlers).OtherGroupCreated(e);
        return;
      }
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "ForApprovalGroup")
      {
        ((global::Sungero.Docflow.FreeApprovalReworkAssignmentSharedHandlers)this.SharedHandlers).ForApprovalGroupCreated(e);
        return;
      }

    }

    private void AttachmentAddedHandler(object sender, global::Sungero.Workflow.Interfaces.AttachmentAddedEventArgs e)
    {
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "AddendaGroup")
      {
        ((global::Sungero.Docflow.FreeApprovalReworkAssignmentSharedHandlers)this.SharedHandlers).AddendaGroupAdded(e);
        return;
      }
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "OtherGroup")
      {
        ((global::Sungero.Docflow.FreeApprovalReworkAssignmentSharedHandlers)this.SharedHandlers).OtherGroupAdded(e);
        return;
      }
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "ForApprovalGroup")
      {
        ((global::Sungero.Docflow.FreeApprovalReworkAssignmentSharedHandlers)this.SharedHandlers).ForApprovalGroupAdded(e);
        return;
      }

    }

    private void AttachmentDeletedHandler(object sender, global::Sungero.Workflow.Interfaces.AttachmentDeletedEventArgs e)
    {
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "AddendaGroup")
      {
        ((global::Sungero.Docflow.FreeApprovalReworkAssignmentSharedHandlers)this.SharedHandlers).AddendaGroupDeleted(e);
        return;
      }
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "OtherGroup")
      {
        ((global::Sungero.Docflow.FreeApprovalReworkAssignmentSharedHandlers)this.SharedHandlers).OtherGroupDeleted(e);
        return;
      }
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "ForApprovalGroup")
      {
        ((global::Sungero.Docflow.FreeApprovalReworkAssignmentSharedHandlers)this.SharedHandlers).ForApprovalGroupDeleted(e);
        return;
      }

    }
    #endregion

  }
}

// ==================================================================
// FreeApprovalReworkAssignmentPresenter.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Client
{
  public class FreeApprovalReworkAssignmentPresenter<T> :
    global::Sungero.Workflow.Client.AssignmentPresenter<T>
    where T : class, global::Sungero.Docflow.IFreeApprovalReworkAssignment
  {
    #region Fields and properties

          private global::System.Windows.Input.ICommand _ReworkedCommand;

          public global::System.Windows.Input.ICommand ReworkedCommand
          {
            get
            {
              if (this._ReworkedCommand == null)
                  this._ReworkedCommand = new global::Sungero.Workflow.Client.SingleAssignmentCommand<T>("Reworked", this, this.Reworked, this.CanReworked) { IsEmptyParameterAllowed = true };
              return this._ReworkedCommand;
            }
          }
          private global::System.Windows.Input.ICommand _AbortActionCommand;

          public global::System.Windows.Input.ICommand AbortActionCommand
          {
            get
            {
              if (this._AbortActionCommand == null)
                  this._AbortActionCommand = new global::Sungero.Domain.Client.SingleEntityCommand<T>("AbortAction", this, this.AbortAction, this.CanAbortAction) { IsEmptyParameterAllowed = true };
              return this._AbortActionCommand;
            }
          }
          private global::System.Windows.Input.ICommand _ExtendDeadlineCommand;

          public global::System.Windows.Input.ICommand ExtendDeadlineCommand
          {
            get
            {
              if (this._ExtendDeadlineCommand == null)
                  this._ExtendDeadlineCommand = new global::Sungero.Domain.Client.SingleEntityCommand<T>("ExtendDeadline", this, this.ExtendDeadline, this.CanExtendDeadline) { IsEmptyParameterAllowed = true };
              return this._ExtendDeadlineCommand;
            }
          }




    #endregion

    #region Methods

              private bool CanReworked(T entity)
              {
                var args = new global::Sungero.Workflow.Client.CanExecuteResultActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity);
                return ((Sungero.Docflow.Client.FreeApprovalReworkAssignmentActions)(entity as Sungero.Docflow.Client.FreeApprovalReworkAssignment).ActionsHandlers).CanReworked(args);
              }

              private void Reworked(T entity)
              {
                var args = new global::Sungero.Workflow.Client.ExecuteResultActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, entity.Info.Actions.Reworked);
                ((Sungero.Docflow.Client.FreeApprovalReworkAssignmentActions)(entity as Sungero.Docflow.Client.FreeApprovalReworkAssignment).ActionsHandlers).Reworked(args);
              }

              private bool CanAbortAction(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfCanExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this);
                return ((Sungero.Docflow.Client.FreeApprovalReworkAssignmentActions)(entity as Sungero.Docflow.Client.FreeApprovalReworkAssignment).ActionsHandlers).CanAbortAction(args);
              }

              private void AbortAction(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this, entity.Info.Actions.AbortAction);
                ((Sungero.Docflow.Client.FreeApprovalReworkAssignmentActions)(entity as Sungero.Docflow.Client.FreeApprovalReworkAssignment).ActionsHandlers).AbortAction(args);
              }

              private bool CanExtendDeadline(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfCanExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this);
                return ((Sungero.Docflow.Client.FreeApprovalReworkAssignmentActions)(entity as Sungero.Docflow.Client.FreeApprovalReworkAssignment).ActionsHandlers).CanExtendDeadline(args);
              }

              private void ExtendDeadline(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this, entity.Info.Actions.ExtendDeadline);
                ((Sungero.Docflow.Client.FreeApprovalReworkAssignmentActions)(entity as Sungero.Docflow.Client.FreeApprovalReworkAssignment).ActionsHandlers).ExtendDeadline(args);
              }


    #endregion

    #region Framework events

    protected override void EntityPropertyChangedEventHandler(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
    {
      base.EntityPropertyChangedEventHandler(sender, e);
    }

    #endregion


                          protected global::Sungero.Domain.Client.IEntityCollectionPresenter _ApproversApproverCollectionPresenter;
                          public global::Sungero.Domain.Client.IEntityCollectionPresenter ApproversApproverCollectionPresenter
                          {
                  get { return this._ApproversApproverCollectionPresenter; }
                }



    #region Constructors

    private void Init()
    {
              this._AuthorCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.CoreEntities.IUser>(() => this.Entity.Id, typeof(T), "Author");

              this._PerformerCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.CoreEntities.IUser>(() => this.Entity.Id, typeof(T), "Performer");

              this._TaskCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Workflow.ITask>(() => this.Entity.Id, typeof(T), "Task");

              this._MainTaskCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Workflow.ITask>(() => this.Entity.Id, typeof(T), "MainTask");

              this._CompletedByCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.CoreEntities.IUser>(() => this.Entity.Id, typeof(T), "CompletedBy");


                          this._ApproversApproverCollectionPresenter = this.CreateCollectionPresenterForNavigationProperty<global::Sungero.Company.IEmployee>(global::System.Guid.Parse("97bd0144-28c5-4996-a23d-33d5aa6493e5"));
                        this._ApproversApproverCollectionPresenter
                        .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Company.IEmployee>(() => this.Entity.Id, typeof(Sungero.Docflow.IFreeApprovalReworkAssignmentApprovers), "Approver");


    }

    public FreeApprovalReworkAssignmentPresenter()
    {
      this.Init();
    }

    #endregion
  }
}

// ==================================================================
// FreeApprovalReworkAssignmentCollectionPresenter.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Client
{
  public class FreeApprovalReworkAssignmentCollectionPresenter<T> : 
    global::Sungero.Workflow.Client.AssignmentCollectionPresenter<T>
    where T: class, global::Sungero.Docflow.IFreeApprovalReworkAssignment
  {
    #region Actions



    #endregion

    #region Methods


    #endregion

    public FreeApprovalReworkAssignmentCollectionPresenter(global::System.Linq.IQueryable<T> query, OnLookup onLookup)
      : base(query, onLookup)
    {
    }

    public FreeApprovalReworkAssignmentCollectionPresenter(global::System.Linq.IQueryable<T> query)
      : this(query, null) { }

    public FreeApprovalReworkAssignmentCollectionPresenter(OnLookup onLookup)
      : this(null, onLookup) { }

    public FreeApprovalReworkAssignmentCollectionPresenter()
      : this(null, null) { }
  }
}

// ==================================================================
// FreeApprovalReworkAssignmentRepositoryImplementer.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Client
{ 
  public class FreeApprovalReworkAssignmentRepositoryImplementer<T> : 
      global::Sungero.Workflow.Client.AssignmentRepositoryImplementer<T>,
      global::Sungero.Docflow.IFreeApprovalReworkAssignmentRepositoryImplementer<T>
      where T : global::Sungero.Docflow.IFreeApprovalReworkAssignment
    {
       public new global::Sungero.Docflow.IFreeApprovalReworkAssignmentAccessRights AccessRights
       {
          get { return (global::Sungero.Docflow.IFreeApprovalReworkAssignmentAccessRights)base.AccessRights; }
       }

       public new global::Sungero.Docflow.IFreeApprovalReworkAssignmentInfo Info
       {
          get { return (global::Sungero.Docflow.IFreeApprovalReworkAssignmentInfo)base.Info; }
       }

       protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
       {
         return new global::Sungero.Docflow.Client.FreeApprovalReworkAssignmentTypeAccessRights(typeof(T));
       }
    }
}

// ==================================================================
// FreeApprovalReworkAssignmentAccessRights.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Client
{
  public class FreeApprovalReworkAssignmentAccessRights : 
    Sungero.Workflow.Client.AssignmentAccessRights, Sungero.Docflow.IFreeApprovalReworkAssignmentAccessRights
  {

    public FreeApprovalReworkAssignmentAccessRights(global::Sungero.Domain.Shared.IEntity entity) : base(entity)
    {
    }
  }

  public class FreeApprovalReworkAssignmentTypeAccessRights : 
    Sungero.Workflow.Client.AssignmentTypeAccessRights, Sungero.Docflow.IFreeApprovalReworkAssignmentAccessRights
  {

    public FreeApprovalReworkAssignmentTypeAccessRights(global::System.Type entityType) : base(entityType)
    {
    }
  }
}
