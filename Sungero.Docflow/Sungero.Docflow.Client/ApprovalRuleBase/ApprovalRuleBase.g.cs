
// ==================================================================
// ApprovalRuleBase.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Client
{
  public class ApprovalRuleBase :
    global::Sungero.CoreEntities.Client.DatabookEntry, global::Sungero.Docflow.IApprovalRuleBase
  {
    #region Fields and properties

    public static new readonly global::System.Guid ClassTypeGuid = global::System.Guid.Parse("42a6a084-6828-47d9-95bb-50b0538a6037");

    public override global::System.Guid TypeGuid
    {
      get { return global::Sungero.Docflow.Client.ApprovalRuleBase.ClassTypeGuid; }
    }

    public override string TypeName
    {
      get { return "Sungero.Docflow.IApprovalRuleBase, Sungero.Domain.Interfaces"; }
    }

      public override string DisplayValue
      {
        get { return this.Name; }
        set { this.Name = value; }
      }

      public override string DisplayPropertyName
      {
        get { return "Name"; }
      }


    public new global::Sungero.Docflow.IApprovalRuleBaseState State
    {
      get
      {
        return (global::Sungero.Docflow.IApprovalRuleBaseState)base.State;
      }
    }

    protected override global::Sungero.Domain.Shared.IEntityState CreateState()
    {
      return new global::Sungero.Docflow.Shared.ApprovalRuleBaseState(this);
    }

    public new global::Sungero.Docflow.IApprovalRuleBaseInfo Info
    {
      get
      {
        return (global::Sungero.Docflow.IApprovalRuleBaseInfo)base.Info;
      }
    }

    public new global::Sungero.Docflow.IApprovalRuleBaseAccessRights AccessRights
    {
      get
      {
        return (global::Sungero.Docflow.IApprovalRuleBaseAccessRights)base.AccessRights;
      }
    }

    protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
    {
      return new global::Sungero.Docflow.Client.ApprovalRuleBaseAccessRights(this);
    }

        protected global::Sungero.Domain.Client.SimpleProperty<global::System.String> _Name;

        public virtual global::System.String Name
        {
          get { return this._Name.Value; }
          set { this._Name.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.Int32?> _Priority;

        public virtual global::System.Int32? Priority
        {
          get { return this._Priority.Value; }
          set { this._Priority.Value = value; }
        }
        protected global::Sungero.Domain.Client.EnumSimpleProperty<global::Sungero.Core.Enumeration?> _DocumentFlow;

        public virtual global::Sungero.Core.Enumeration? DocumentFlow
        {
          get { return this._DocumentFlow.Value; }
          set { this._DocumentFlow.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.Boolean?> _IsDefaultRule;

        public virtual global::System.Boolean? IsDefaultRule
        {
          get { return this._IsDefaultRule.Value; }
          set { this._IsDefaultRule.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.String> _Note;

        public virtual global::System.String Note
        {
          get { return this._Note.Value; }
          set { this._Note.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.Int32?> _VersionNumber;

        public virtual global::System.Int32? VersionNumber
        {
          get { return this._VersionNumber.Value; }
          set { this._VersionNumber.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.Boolean?> _IsSmallApprovalAllowed;

        public virtual global::System.Boolean? IsSmallApprovalAllowed
        {
          get { return this._IsSmallApprovalAllowed.Value; }
          set { this._IsSmallApprovalAllowed.Value = value; }
        }
        protected global::Sungero.Domain.Client.EnumSimpleProperty<global::Sungero.Core.Enumeration?> _ReworkPerformerType;

        public virtual global::Sungero.Core.Enumeration? ReworkPerformerType
        {
          get { return this._ReworkPerformerType.Value; }
          set { this._ReworkPerformerType.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.Int32?> _ReworkDeadline;

        public virtual global::System.Int32? ReworkDeadline
        {
          get { return this._ReworkDeadline.Value; }
          set { this._ReworkDeadline.Value = value; }
        }


        private static global::Sungero.Domain.Shared.EnumerationItems _StatusItems = new global::Sungero.Domain.Shared.EnumerationItems(
          global::Sungero.CoreEntities.Client.DatabookEntry.StatusItems,
          typeof(global::Sungero.Docflow.ApprovalRuleBase.Status),
          typeof(global::Sungero.Docflow.Client.ApprovalRuleBase),
          "Status");

        public static new global::Sungero.Domain.Shared.EnumerationItems StatusItems
        {
          get { return global::Sungero.Docflow.Client.ApprovalRuleBase._StatusItems; }
        }

        public override global::Sungero.Domain.Shared.EnumerationItems StatusAllowedItems
        {
          get { return global::Sungero.Docflow.Client.ApprovalRuleBase.StatusItems; }
        }

        private static global::Sungero.Domain.Shared.EnumerationItems _DocumentFlowItems = new global::Sungero.Domain.Shared.EnumerationItems(
          null,
          typeof(global::Sungero.Docflow.ApprovalRuleBase.DocumentFlow),
          typeof(global::Sungero.Docflow.Client.ApprovalRuleBase),
          "DocumentFlow");

        public static global::Sungero.Domain.Shared.EnumerationItems DocumentFlowItems
        {
          get { return global::Sungero.Docflow.Client.ApprovalRuleBase._DocumentFlowItems; }
        }

        public virtual global::Sungero.Domain.Shared.EnumerationItems DocumentFlowAllowedItems
        {
          get { return global::Sungero.Docflow.Client.ApprovalRuleBase.DocumentFlowItems; }
        }

        private static global::Sungero.Domain.Shared.EnumerationItems _ReworkPerformerTypeItems = new global::Sungero.Domain.Shared.EnumerationItems(
          null,
          typeof(global::Sungero.Docflow.ApprovalRuleBase.ReworkPerformerType),
          typeof(global::Sungero.Docflow.Client.ApprovalRuleBase),
          "ReworkPerformerType");

        public static global::Sungero.Domain.Shared.EnumerationItems ReworkPerformerTypeItems
        {
          get { return global::Sungero.Docflow.Client.ApprovalRuleBase._ReworkPerformerTypeItems; }
        }

        public virtual global::Sungero.Domain.Shared.EnumerationItems ReworkPerformerTypeAllowedItems
        {
          get { return global::Sungero.Docflow.Client.ApprovalRuleBase.ReworkPerformerTypeItems; }
        }




              protected global::Sungero.Domain.Client.INavigationProperty<global::Sungero.Docflow.IApprovalRuleBase> _ParentRule;

              public virtual global::Sungero.Docflow.IApprovalRuleBase ParentRule
              {
              get
              {
                return this._ParentRule.Value as global::Sungero.Docflow.IApprovalRuleBase;
              }

              set
              {
                (this._ParentRule as global::Sungero.Domain.Client.IProperty).Value = value;
              }
            }



              protected global::Sungero.Domain.Client.INavigationProperty<global::Sungero.CoreEntities.IRecipient> _ReworkPerformer;

              public virtual global::Sungero.CoreEntities.IRecipient ReworkPerformer
              {
              get
              {
                return this._ReworkPerformer.Value as global::Sungero.CoreEntities.IRecipient;
              }

              set
              {
                (this._ReworkPerformer as global::Sungero.Domain.Client.IProperty).Value = value;
              }
            }



              protected global::Sungero.Domain.Client.INavigationProperty<global::Sungero.Docflow.IApprovalRoleBase> _ReworkApprovalRole;

              public virtual global::Sungero.Docflow.IApprovalRoleBase ReworkApprovalRole
              {
              get
              {
                return this._ReworkApprovalRole.Value as global::Sungero.Docflow.IApprovalRoleBase;
              }

              set
              {
                (this._ReworkApprovalRole as global::Sungero.Domain.Client.IProperty).Value = value;
              }
            }







          protected global::Sungero.Domain.Client.IListProperty<global::Sungero.Docflow.IApprovalRuleBaseDocumentKinds> _DocumentKinds;

          virtual public global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Docflow.IApprovalRuleBaseDocumentKinds> DocumentKinds
          {
            get { return this._DocumentKinds.Value; }
          }


          protected global::Sungero.Domain.Client.IListProperty<global::Sungero.Docflow.IApprovalRuleBaseDepartments> _Departments;

          virtual public global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Docflow.IApprovalRuleBaseDepartments> Departments
          {
            get { return this._Departments.Value; }
          }


          protected global::Sungero.Domain.Client.IListProperty<global::Sungero.Docflow.IApprovalRuleBaseStages> _Stages;

          virtual public global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Docflow.IApprovalRuleBaseStages> Stages
          {
            get { return this._Stages.Value; }
          }


          protected global::Sungero.Domain.Client.IListProperty<global::Sungero.Docflow.IApprovalRuleBaseBusinessUnits> _BusinessUnits;

          virtual public global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Docflow.IApprovalRuleBaseBusinessUnits> BusinessUnits
          {
            get { return this._BusinessUnits.Value; }
          }


          protected global::Sungero.Domain.Client.IListProperty<global::Sungero.Docflow.IApprovalRuleBaseDocumentGroups> _DocumentGroups;

          virtual public global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Docflow.IApprovalRuleBaseDocumentGroups> DocumentGroups
          {
            get { return this._DocumentGroups.Value; }
          }


          protected global::Sungero.Domain.Client.IListProperty<global::Sungero.Docflow.IApprovalRuleBaseTransitions> _Transitions;

          virtual public global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Docflow.IApprovalRuleBaseTransitions> Transitions
          {
            get { return this._Transitions.Value; }
          }


          protected global::Sungero.Domain.Client.IListProperty<global::Sungero.Docflow.IApprovalRuleBaseConditions> _Conditions;

          virtual public global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Docflow.IApprovalRuleBaseConditions> Conditions
          {
            get { return this._Conditions.Value; }
          }






    private object _DocumentKindsActionsHandlers;

    public object DocumentKindsActionsHandlers
    {
      get
      {
        if (this._DocumentKindsActionsHandlers == null)
          this._DocumentKindsActionsHandlers = this.CreateDocumentKindsActionsHandlers();
        return this._DocumentKindsActionsHandlers;
      }
    }

    private object _DocumentKindsCollectionActionsHandlers;

    public object DocumentKindsCollectionActionsHandlers
    {
      get
      {
        if (this._DocumentKindsCollectionActionsHandlers == null)
          this._DocumentKindsCollectionActionsHandlers = this.CreateDocumentKindsCollectionActionsHandlers();
        return this._DocumentKindsCollectionActionsHandlers;
      }
    }
    private object _DepartmentsActionsHandlers;

    public object DepartmentsActionsHandlers
    {
      get
      {
        if (this._DepartmentsActionsHandlers == null)
          this._DepartmentsActionsHandlers = this.CreateDepartmentsActionsHandlers();
        return this._DepartmentsActionsHandlers;
      }
    }

    private object _DepartmentsCollectionActionsHandlers;

    public object DepartmentsCollectionActionsHandlers
    {
      get
      {
        if (this._DepartmentsCollectionActionsHandlers == null)
          this._DepartmentsCollectionActionsHandlers = this.CreateDepartmentsCollectionActionsHandlers();
        return this._DepartmentsCollectionActionsHandlers;
      }
    }
    private object _StagesActionsHandlers;

    public object StagesActionsHandlers
    {
      get
      {
        if (this._StagesActionsHandlers == null)
          this._StagesActionsHandlers = this.CreateStagesActionsHandlers();
        return this._StagesActionsHandlers;
      }
    }

    private object _StagesCollectionActionsHandlers;

    public object StagesCollectionActionsHandlers
    {
      get
      {
        if (this._StagesCollectionActionsHandlers == null)
          this._StagesCollectionActionsHandlers = this.CreateStagesCollectionActionsHandlers();
        return this._StagesCollectionActionsHandlers;
      }
    }
    private object _BusinessUnitsActionsHandlers;

    public object BusinessUnitsActionsHandlers
    {
      get
      {
        if (this._BusinessUnitsActionsHandlers == null)
          this._BusinessUnitsActionsHandlers = this.CreateBusinessUnitsActionsHandlers();
        return this._BusinessUnitsActionsHandlers;
      }
    }

    private object _BusinessUnitsCollectionActionsHandlers;

    public object BusinessUnitsCollectionActionsHandlers
    {
      get
      {
        if (this._BusinessUnitsCollectionActionsHandlers == null)
          this._BusinessUnitsCollectionActionsHandlers = this.CreateBusinessUnitsCollectionActionsHandlers();
        return this._BusinessUnitsCollectionActionsHandlers;
      }
    }
    private object _DocumentGroupsActionsHandlers;

    public object DocumentGroupsActionsHandlers
    {
      get
      {
        if (this._DocumentGroupsActionsHandlers == null)
          this._DocumentGroupsActionsHandlers = this.CreateDocumentGroupsActionsHandlers();
        return this._DocumentGroupsActionsHandlers;
      }
    }

    private object _DocumentGroupsCollectionActionsHandlers;

    public object DocumentGroupsCollectionActionsHandlers
    {
      get
      {
        if (this._DocumentGroupsCollectionActionsHandlers == null)
          this._DocumentGroupsCollectionActionsHandlers = this.CreateDocumentGroupsCollectionActionsHandlers();
        return this._DocumentGroupsCollectionActionsHandlers;
      }
    }
    private object _TransitionsActionsHandlers;

    public object TransitionsActionsHandlers
    {
      get
      {
        if (this._TransitionsActionsHandlers == null)
          this._TransitionsActionsHandlers = this.CreateTransitionsActionsHandlers();
        return this._TransitionsActionsHandlers;
      }
    }

    private object _TransitionsCollectionActionsHandlers;

    public object TransitionsCollectionActionsHandlers
    {
      get
      {
        if (this._TransitionsCollectionActionsHandlers == null)
          this._TransitionsCollectionActionsHandlers = this.CreateTransitionsCollectionActionsHandlers();
        return this._TransitionsCollectionActionsHandlers;
      }
    }
    private object _ConditionsActionsHandlers;

    public object ConditionsActionsHandlers
    {
      get
      {
        if (this._ConditionsActionsHandlers == null)
          this._ConditionsActionsHandlers = this.CreateConditionsActionsHandlers();
        return this._ConditionsActionsHandlers;
      }
    }

    private object _ConditionsCollectionActionsHandlers;

    public object ConditionsCollectionActionsHandlers
    {
      get
      {
        if (this._ConditionsCollectionActionsHandlers == null)
          this._ConditionsCollectionActionsHandlers = this.CreateConditionsCollectionActionsHandlers();
        return this._ConditionsCollectionActionsHandlers;
      }
    }

    #endregion

    #region Methods

    protected virtual object CreateDocumentKindsActionsHandlers()
    {
      return null;
    }

    protected virtual object CreateDocumentKindsCollectionActionsHandlers()
    {
      return null;
    }
    protected virtual object CreateDepartmentsActionsHandlers()
    {
      return null;
    }

    protected virtual object CreateDepartmentsCollectionActionsHandlers()
    {
      return null;
    }
    protected virtual object CreateStagesActionsHandlers()
    {
      return new global::Sungero.Docflow.Client.ApprovalRuleBaseStagesActions();
    }

    protected virtual object CreateStagesCollectionActionsHandlers()
    {
      return new global::Sungero.Docflow.Client.ApprovalRuleBaseStagesCollectionActions();
    }
    protected virtual object CreateBusinessUnitsActionsHandlers()
    {
      return null;
    }

    protected virtual object CreateBusinessUnitsCollectionActionsHandlers()
    {
      return null;
    }
    protected virtual object CreateDocumentGroupsActionsHandlers()
    {
      return null;
    }

    protected virtual object CreateDocumentGroupsCollectionActionsHandlers()
    {
      return null;
    }
    protected virtual object CreateTransitionsActionsHandlers()
    {
      return null;
    }

    protected virtual object CreateTransitionsCollectionActionsHandlers()
    {
      return null;
    }
    protected virtual object CreateConditionsActionsHandlers()
    {
      return new global::Sungero.Docflow.Client.ApprovalRuleBaseConditionsActions();
    }

    protected virtual object CreateConditionsCollectionActionsHandlers()
    {
      return new global::Sungero.Docflow.Client.ApprovalRuleBaseConditionsCollectionActions();
    }


    protected override global::Sungero.Domain.Client.EntityFunctions CreateClientFunctions()
    {
      return new global::Sungero.Docflow.Client.ApprovalRuleBaseFunctions(this);
    }

    protected override global::Sungero.Domain.Shared.EntityFunctions CreateSharedFunctions()
    {
      return new global::Sungero.Docflow.Shared.ApprovalRuleBaseFunctions(this);
    }
    protected override object CreateHandlers() {
      return new global::Sungero.Docflow.ApprovalRuleBaseClientHandlers(this);
    }
    protected override object CreateSharedHandlers() {
      return new global::Sungero.Docflow.ApprovalRuleBaseSharedHandlers(this);
    }

    #endregion

    #region Framework events

    protected void NameChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.Name, this.Name, this);
     ((global::Sungero.Docflow.ApprovalRuleBaseSharedHandlers)this.SharedHandlers).NameChanged(args);
    }

    protected void DocumentKindsChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.CollectionPropertyChangedEventArgs(this);
     ((global::Sungero.Docflow.ApprovalRuleBaseSharedHandlers)this.SharedHandlers).DocumentKindsChanged(args);
    }

    protected void DepartmentsChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.CollectionPropertyChangedEventArgs(this);
     ((global::Sungero.Docflow.ApprovalRuleBaseSharedHandlers)this.SharedHandlers).DepartmentsChanged(args);
    }

    protected void StagesChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.CollectionPropertyChangedEventArgs(this);
     ((global::Sungero.Docflow.ApprovalRuleBaseSharedHandlers)this.SharedHandlers).StagesChanged(args);
    }

    protected void PriorityChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.IntegerPropertyChangedEventArgs(this.State.Properties.Priority, this.Priority, this);
     ((global::Sungero.Docflow.ApprovalRuleBaseSharedHandlers)this.SharedHandlers).PriorityChanged(args);
    }

    protected void BusinessUnitsChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.CollectionPropertyChangedEventArgs(this);
     ((global::Sungero.Docflow.ApprovalRuleBaseSharedHandlers)this.SharedHandlers).BusinessUnitsChanged(args);
    }

    protected void DocumentGroupsChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.CollectionPropertyChangedEventArgs(this);
     ((global::Sungero.Docflow.ApprovalRuleBaseSharedHandlers)this.SharedHandlers).DocumentGroupsChanged(args);
    }

    protected void DocumentFlowChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.EnumerationPropertyChangedEventArgs(this.State.Properties.DocumentFlow, this.DocumentFlow, this);
     ((global::Sungero.Docflow.ApprovalRuleBaseSharedHandlers)this.SharedHandlers).DocumentFlowChanged(args);
    }

    protected void IsDefaultRuleChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.BooleanPropertyChangedEventArgs(this.State.Properties.IsDefaultRule, this.IsDefaultRule, this);
     ((global::Sungero.Docflow.ApprovalRuleBaseSharedHandlers)this.SharedHandlers).IsDefaultRuleChanged(args);
    }

    protected void TransitionsChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.CollectionPropertyChangedEventArgs(this);
     ((global::Sungero.Docflow.ApprovalRuleBaseSharedHandlers)this.SharedHandlers).TransitionsChanged(args);
    }

    protected void ConditionsChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.CollectionPropertyChangedEventArgs(this);
     ((global::Sungero.Docflow.ApprovalRuleBaseSharedHandlers)this.SharedHandlers).ConditionsChanged(args);
    }

    protected void NoteChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.Note, this.Note, this);
     ((global::Sungero.Docflow.ApprovalRuleBaseSharedHandlers)this.SharedHandlers).NoteChanged(args);
    }

    protected void ParentRuleChangedHandler()
    {
      var args = new global::Sungero.Docflow.Shared.ApprovalRuleBaseParentRuleChangedEventArgs(this.State.Properties.ParentRule, this.ParentRule, this);
     ((global::Sungero.Docflow.ApprovalRuleBaseSharedHandlers)this.SharedHandlers).ParentRuleChanged(args);
    }

    protected void VersionNumberChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.IntegerPropertyChangedEventArgs(this.State.Properties.VersionNumber, this.VersionNumber, this);
     ((global::Sungero.Docflow.ApprovalRuleBaseSharedHandlers)this.SharedHandlers).VersionNumberChanged(args);
    }

    protected void IsSmallApprovalAllowedChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.BooleanPropertyChangedEventArgs(this.State.Properties.IsSmallApprovalAllowed, this.IsSmallApprovalAllowed, this);
     ((global::Sungero.Docflow.ApprovalRuleBaseSharedHandlers)this.SharedHandlers).IsSmallApprovalAllowedChanged(args);
    }

    protected void ReworkPerformerTypeChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.EnumerationPropertyChangedEventArgs(this.State.Properties.ReworkPerformerType, this.ReworkPerformerType, this);
     ((global::Sungero.Docflow.ApprovalRuleBaseSharedHandlers)this.SharedHandlers).ReworkPerformerTypeChanged(args);
    }

    protected void ReworkPerformerChangedHandler()
    {
      var args = new global::Sungero.Docflow.Shared.ApprovalRuleBaseReworkPerformerChangedEventArgs(this.State.Properties.ReworkPerformer, this.ReworkPerformer, this);
     ((global::Sungero.Docflow.ApprovalRuleBaseSharedHandlers)this.SharedHandlers).ReworkPerformerChanged(args);
    }

    protected void ReworkDeadlineChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.IntegerPropertyChangedEventArgs(this.State.Properties.ReworkDeadline, this.ReworkDeadline, this);
     ((global::Sungero.Docflow.ApprovalRuleBaseSharedHandlers)this.SharedHandlers).ReworkDeadlineChanged(args);
    }

    protected void ReworkApprovalRoleChangedHandler()
    {
      var args = new global::Sungero.Docflow.Shared.ApprovalRuleBaseReworkApprovalRoleChangedEventArgs(this.State.Properties.ReworkApprovalRole, this.ReworkApprovalRole, this);
     ((global::Sungero.Docflow.ApprovalRuleBaseSharedHandlers)this.SharedHandlers).ReworkApprovalRoleChanged(args);
    }



    protected virtual global::Sungero.Docflow.ApprovalRuleBaseDocumentKindsSharedCollectionHandlers CreateDocumentKindsAddedHandler(global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.Docflow.ApprovalRuleBaseDocumentKindsSharedCollectionHandlers(this, e.Value, null, e.Source);
    }

    protected virtual global::Sungero.Docflow.ApprovalRuleBaseDocumentKindsSharedCollectionHandlers CreateDocumentKindsDeletedHandler(global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.Docflow.ApprovalRuleBaseDocumentKindsSharedCollectionHandlers(this, null, e.Value, null);
    }

    protected virtual void DocumentKindsAddedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {  
      var collectionHandlers = this.CreateDocumentKindsAddedHandler(e);
      if (collectionHandlers != null)
      {
        var args = new global::Sungero.Domain.Shared.CollectionPropertyAddedEventArgs(this);
        collectionHandlers.DocumentKindsAdded(args);
      }
    }

    protected virtual void DocumentKindsDeletedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {  
      var collectionHandlers = this.CreateDocumentKindsDeletedHandler(e);
      if (collectionHandlers != null)
      {
        var args = new global::Sungero.Domain.Shared.CollectionPropertyDeletedEventArgs(this);
        collectionHandlers.DocumentKindsDeleted(args);
      }
    }


    protected virtual global::Sungero.Docflow.ApprovalRuleBaseDepartmentsSharedCollectionHandlers CreateDepartmentsAddedHandler(global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.Docflow.ApprovalRuleBaseDepartmentsSharedCollectionHandlers(this, e.Value, null, e.Source);
    }

    protected virtual global::Sungero.Docflow.ApprovalRuleBaseDepartmentsSharedCollectionHandlers CreateDepartmentsDeletedHandler(global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.Docflow.ApprovalRuleBaseDepartmentsSharedCollectionHandlers(this, null, e.Value, null);
    }

    protected virtual void DepartmentsAddedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {  
      var collectionHandlers = this.CreateDepartmentsAddedHandler(e);
      if (collectionHandlers != null)
      {
        var args = new global::Sungero.Domain.Shared.CollectionPropertyAddedEventArgs(this);
        collectionHandlers.DepartmentsAdded(args);
      }
    }

    protected virtual void DepartmentsDeletedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {  
      var collectionHandlers = this.CreateDepartmentsDeletedHandler(e);
      if (collectionHandlers != null)
      {
        var args = new global::Sungero.Domain.Shared.CollectionPropertyDeletedEventArgs(this);
        collectionHandlers.DepartmentsDeleted(args);
      }
    }


    protected virtual global::Sungero.Docflow.ApprovalRuleBaseStagesSharedCollectionHandlers CreateStagesAddedHandler(global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.Docflow.ApprovalRuleBaseStagesSharedCollectionHandlers(this, e.Value, null, e.Source);
    }

    protected virtual global::Sungero.Docflow.ApprovalRuleBaseStagesSharedCollectionHandlers CreateStagesDeletedHandler(global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.Docflow.ApprovalRuleBaseStagesSharedCollectionHandlers(this, null, e.Value, null);
    }

    protected virtual void StagesAddedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {  
      var collectionHandlers = this.CreateStagesAddedHandler(e);
      if (collectionHandlers != null)
      {
        var args = new global::Sungero.Domain.Shared.CollectionPropertyAddedEventArgs(this);
        collectionHandlers.StagesAdded(args);
      }
    }

    protected virtual void StagesDeletedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {  
      var collectionHandlers = this.CreateStagesDeletedHandler(e);
      if (collectionHandlers != null)
      {
        var args = new global::Sungero.Domain.Shared.CollectionPropertyDeletedEventArgs(this);
        collectionHandlers.StagesDeleted(args);
      }
    }


    protected virtual global::Sungero.Docflow.ApprovalRuleBaseBusinessUnitsSharedCollectionHandlers CreateBusinessUnitsAddedHandler(global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.Docflow.ApprovalRuleBaseBusinessUnitsSharedCollectionHandlers(this, e.Value, null, e.Source);
    }

    protected virtual global::Sungero.Docflow.ApprovalRuleBaseBusinessUnitsSharedCollectionHandlers CreateBusinessUnitsDeletedHandler(global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.Docflow.ApprovalRuleBaseBusinessUnitsSharedCollectionHandlers(this, null, e.Value, null);
    }

    protected virtual void BusinessUnitsAddedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {  
      var collectionHandlers = this.CreateBusinessUnitsAddedHandler(e);
      if (collectionHandlers != null)
      {
        var args = new global::Sungero.Domain.Shared.CollectionPropertyAddedEventArgs(this);
        collectionHandlers.BusinessUnitsAdded(args);
      }
    }

    protected virtual void BusinessUnitsDeletedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {  
      var collectionHandlers = this.CreateBusinessUnitsDeletedHandler(e);
      if (collectionHandlers != null)
      {
        var args = new global::Sungero.Domain.Shared.CollectionPropertyDeletedEventArgs(this);
        collectionHandlers.BusinessUnitsDeleted(args);
      }
    }


    protected virtual global::Sungero.Docflow.ApprovalRuleBaseDocumentGroupsSharedCollectionHandlers CreateDocumentGroupsAddedHandler(global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.Docflow.ApprovalRuleBaseDocumentGroupsSharedCollectionHandlers(this, e.Value, null, e.Source);
    }

    protected virtual global::Sungero.Docflow.ApprovalRuleBaseDocumentGroupsSharedCollectionHandlers CreateDocumentGroupsDeletedHandler(global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.Docflow.ApprovalRuleBaseDocumentGroupsSharedCollectionHandlers(this, null, e.Value, null);
    }

    protected virtual void DocumentGroupsAddedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {  
      var collectionHandlers = this.CreateDocumentGroupsAddedHandler(e);
      if (collectionHandlers != null)
      {
        var args = new global::Sungero.Domain.Shared.CollectionPropertyAddedEventArgs(this);
        collectionHandlers.DocumentGroupsAdded(args);
      }
    }

    protected virtual void DocumentGroupsDeletedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {  
      var collectionHandlers = this.CreateDocumentGroupsDeletedHandler(e);
      if (collectionHandlers != null)
      {
        var args = new global::Sungero.Domain.Shared.CollectionPropertyDeletedEventArgs(this);
        collectionHandlers.DocumentGroupsDeleted(args);
      }
    }


    protected virtual global::Sungero.Docflow.ApprovalRuleBaseTransitionsSharedCollectionHandlers CreateTransitionsAddedHandler(global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.Docflow.ApprovalRuleBaseTransitionsSharedCollectionHandlers(this, e.Value, null, e.Source);
    }

    protected virtual global::Sungero.Docflow.ApprovalRuleBaseTransitionsSharedCollectionHandlers CreateTransitionsDeletedHandler(global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.Docflow.ApprovalRuleBaseTransitionsSharedCollectionHandlers(this, null, e.Value, null);
    }

    protected virtual void TransitionsAddedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {  
      var collectionHandlers = this.CreateTransitionsAddedHandler(e);
      if (collectionHandlers != null)
      {
        var args = new global::Sungero.Domain.Shared.CollectionPropertyAddedEventArgs(this);
        collectionHandlers.TransitionsAdded(args);
      }
    }

    protected virtual void TransitionsDeletedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {  
      var collectionHandlers = this.CreateTransitionsDeletedHandler(e);
      if (collectionHandlers != null)
      {
        var args = new global::Sungero.Domain.Shared.CollectionPropertyDeletedEventArgs(this);
        collectionHandlers.TransitionsDeleted(args);
      }
    }


    protected virtual global::Sungero.Docflow.ApprovalRuleBaseConditionsSharedCollectionHandlers CreateConditionsAddedHandler(global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.Docflow.ApprovalRuleBaseConditionsSharedCollectionHandlers(this, e.Value, null, e.Source);
    }

    protected virtual global::Sungero.Docflow.ApprovalRuleBaseConditionsSharedCollectionHandlers CreateConditionsDeletedHandler(global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.Docflow.ApprovalRuleBaseConditionsSharedCollectionHandlers(this, null, e.Value, null);
    }

    protected virtual void ConditionsAddedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {  
      var collectionHandlers = this.CreateConditionsAddedHandler(e);
      if (collectionHandlers != null)
      {
        var args = new global::Sungero.Domain.Shared.CollectionPropertyAddedEventArgs(this);
        collectionHandlers.ConditionsAdded(args);
      }
    }

    protected virtual void ConditionsDeletedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {  
      var collectionHandlers = this.CreateConditionsDeletedHandler(e);
      if (collectionHandlers != null)
      {
        var args = new global::Sungero.Domain.Shared.CollectionPropertyDeletedEventArgs(this);
        collectionHandlers.ConditionsDeleted(args);
      }
    }


  protected global::System.String NameValueInputHandler(global::System.String value)
  {
    var args = new global::Sungero.Presentation.StringValueInputEventArgs(this.Name, value, this, this.Info.Properties.Name);
    ((global::Sungero.Docflow.ApprovalRuleBaseClientHandlers)this.Handlers).NameValueInput(args);
    return args.NewValue;
  }




  protected global::System.Int32? PriorityValueInputHandler(global::System.Int32? value)
  {
    var args = new global::Sungero.Presentation.IntegerValueInputEventArgs(this.Priority, value, this, this.Info.Properties.Priority);
    ((global::Sungero.Docflow.ApprovalRuleBaseClientHandlers)this.Handlers).PriorityValueInput(args);
    return args.NewValue;
  }



  protected global::Sungero.Core.Enumeration? DocumentFlowValueInputHandler(global::Sungero.Core.Enumeration? value)
  {
    var args = new global::Sungero.Presentation.EnumerationValueInputEventArgs(this.DocumentFlow, value, this, this.Info.Properties.DocumentFlow);
    ((global::Sungero.Docflow.ApprovalRuleBaseClientHandlers)this.Handlers).DocumentFlowValueInput(args);
    return args.NewValue;
  }

  protected global::System.Boolean? IsDefaultRuleValueInputHandler(global::System.Boolean? value)
  {
    var args = new global::Sungero.Presentation.BooleanValueInputEventArgs(this.IsDefaultRule, value, this, this.Info.Properties.IsDefaultRule);
    ((global::Sungero.Docflow.ApprovalRuleBaseClientHandlers)this.Handlers).IsDefaultRuleValueInput(args);
    return args.NewValue;
  }



  protected global::System.String NoteValueInputHandler(global::System.String value)
  {
    var args = new global::Sungero.Presentation.StringValueInputEventArgs(this.Note, value, this, this.Info.Properties.Note);
    ((global::Sungero.Docflow.ApprovalRuleBaseClientHandlers)this.Handlers).NoteValueInput(args);
    return args.NewValue;
  }

  protected global::Sungero.Docflow.IApprovalRuleBase ParentRuleValueInputHandler(global::Sungero.Docflow.IApprovalRuleBase value)
  {
    var args = new global::Sungero.Docflow.Client.ApprovalRuleBaseParentRuleValueInputEventArgs(this.ParentRule, value, this, this.Info.Properties.ParentRule);
    ((global::Sungero.Docflow.ApprovalRuleBaseClientHandlers)this.Handlers).ParentRuleValueInput(args);
    return args.NewValue;
  }

  protected global::System.Int32? VersionNumberValueInputHandler(global::System.Int32? value)
  {
    var args = new global::Sungero.Presentation.IntegerValueInputEventArgs(this.VersionNumber, value, this, this.Info.Properties.VersionNumber);
    ((global::Sungero.Docflow.ApprovalRuleBaseClientHandlers)this.Handlers).VersionNumberValueInput(args);
    return args.NewValue;
  }

  protected global::System.Boolean? IsSmallApprovalAllowedValueInputHandler(global::System.Boolean? value)
  {
    var args = new global::Sungero.Presentation.BooleanValueInputEventArgs(this.IsSmallApprovalAllowed, value, this, this.Info.Properties.IsSmallApprovalAllowed);
    ((global::Sungero.Docflow.ApprovalRuleBaseClientHandlers)this.Handlers).IsSmallApprovalAllowedValueInput(args);
    return args.NewValue;
  }

  protected global::Sungero.Core.Enumeration? ReworkPerformerTypeValueInputHandler(global::Sungero.Core.Enumeration? value)
  {
    var args = new global::Sungero.Presentation.EnumerationValueInputEventArgs(this.ReworkPerformerType, value, this, this.Info.Properties.ReworkPerformerType);
    ((global::Sungero.Docflow.ApprovalRuleBaseClientHandlers)this.Handlers).ReworkPerformerTypeValueInput(args);
    return args.NewValue;
  }

  protected global::Sungero.CoreEntities.IRecipient ReworkPerformerValueInputHandler(global::Sungero.CoreEntities.IRecipient value)
  {
    var args = new global::Sungero.Docflow.Client.ApprovalRuleBaseReworkPerformerValueInputEventArgs(this.ReworkPerformer, value, this, this.Info.Properties.ReworkPerformer);
    ((global::Sungero.Docflow.ApprovalRuleBaseClientHandlers)this.Handlers).ReworkPerformerValueInput(args);
    return args.NewValue;
  }

  protected global::System.Int32? ReworkDeadlineValueInputHandler(global::System.Int32? value)
  {
    var args = new global::Sungero.Presentation.IntegerValueInputEventArgs(this.ReworkDeadline, value, this, this.Info.Properties.ReworkDeadline);
    ((global::Sungero.Docflow.ApprovalRuleBaseClientHandlers)this.Handlers).ReworkDeadlineValueInput(args);
    return args.NewValue;
  }

  protected global::Sungero.Docflow.IApprovalRoleBase ReworkApprovalRoleValueInputHandler(global::Sungero.Docflow.IApprovalRoleBase value)
  {
    var args = new global::Sungero.Docflow.Client.ApprovalRuleBaseReworkApprovalRoleValueInputEventArgs(this.ReworkApprovalRole, value, this, this.Info.Properties.ReworkApprovalRole);
    ((global::Sungero.Docflow.ApprovalRuleBaseClientHandlers)this.Handlers).ReworkApprovalRoleValueInput(args);
    return args.NewValue;
  }


  protected global::System.Collections.Generic.IEnumerable<global::Sungero.Core.Enumeration> DocumentFlowFilteringHandler()
  {
    return ((global::Sungero.Docflow.ApprovalRuleBaseClientHandlers)this.Handlers).DocumentFlowFiltering(this.DocumentFlowAllowedItems);
  }








  protected global::System.Collections.Generic.IEnumerable<global::Sungero.Core.Enumeration> ReworkPerformerTypeFilteringHandler()
  {
    return ((global::Sungero.Docflow.ApprovalRuleBaseClientHandlers)this.Handlers).ReworkPerformerTypeFiltering(this.ReworkPerformerTypeAllowedItems);
  }





    #endregion

    #region Constructors



              protected virtual void InitParentRuleNavigationProperty()
              {
                this._ParentRule = new global::Sungero.Domain.Client.NavigationProperty<global::Sungero.Docflow.IApprovalRuleBase>("ParentRule", this);
                this._ParentRule.ValueChanged += (sender, e) => { this.ParentRuleChangedHandler(); };
                this.AddProperty(this._ParentRule as global::Sungero.Domain.Client.IProperty);
              }




              protected virtual void InitReworkPerformerNavigationProperty()
              {
                this._ReworkPerformer = new global::Sungero.Domain.Client.NavigationProperty<global::Sungero.CoreEntities.IRecipient>("ReworkPerformer", this);
                this._ReworkPerformer.ValueChanged += (sender, e) => { this.ReworkPerformerChangedHandler(); };
                this.AddProperty(this._ReworkPerformer as global::Sungero.Domain.Client.IProperty);
              }




              protected virtual void InitReworkApprovalRoleNavigationProperty()
              {
                this._ReworkApprovalRole = new global::Sungero.Domain.Client.NavigationProperty<global::Sungero.Docflow.IApprovalRoleBase>("ReworkApprovalRole", this);
                this._ReworkApprovalRole.ValueChanged += (sender, e) => { this.ReworkApprovalRoleChangedHandler(); };
                this.AddProperty(this._ReworkApprovalRole as global::Sungero.Domain.Client.IProperty);
              }



            protected virtual void InitDocumentKindsCollectionProperty()
            {
              this._DocumentKinds = new global::Sungero.Domain.Client.ListProperty<global::Sungero.Docflow.IApprovalRuleBaseDocumentKinds>("DocumentKinds", this);
              this._DocumentKinds.ValueChanged += (sender, e) => { this.DocumentKindsChangedHandler(); };
              this.AddProperty((global::Sungero.Domain.Client.IProperty)this._DocumentKinds);
              this.SetDocumentKindsEventHandlers();
            }

            protected void SetDocumentKindsEventHandlers()
            {
              this._DocumentKinds.ChildEntityAdded += this.DocumentKindsAddedHandler;
              this._DocumentKinds.ChildEntityDeleted += this.DocumentKindsDeletedHandler;
            }

            protected virtual void InitDepartmentsCollectionProperty()
            {
              this._Departments = new global::Sungero.Domain.Client.ListProperty<global::Sungero.Docflow.IApprovalRuleBaseDepartments>("Departments", this);
              this._Departments.ValueChanged += (sender, e) => { this.DepartmentsChangedHandler(); };
              this.AddProperty((global::Sungero.Domain.Client.IProperty)this._Departments);
              this.SetDepartmentsEventHandlers();
            }

            protected void SetDepartmentsEventHandlers()
            {
              this._Departments.ChildEntityAdded += this.DepartmentsAddedHandler;
              this._Departments.ChildEntityDeleted += this.DepartmentsDeletedHandler;
            }

            protected virtual void InitStagesCollectionProperty()
            {
              this._Stages = new global::Sungero.Domain.Client.ListProperty<global::Sungero.Docflow.IApprovalRuleBaseStages>("Stages", this);
              this._Stages.ValueChanged += (sender, e) => { this.StagesChangedHandler(); };
              this.AddProperty((global::Sungero.Domain.Client.IProperty)this._Stages);
              this.SetStagesEventHandlers();
            }

            protected void SetStagesEventHandlers()
            {
              this._Stages.ChildEntityAdded += this.StagesAddedHandler;
              this._Stages.ChildEntityDeleted += this.StagesDeletedHandler;
            }

            protected virtual void InitBusinessUnitsCollectionProperty()
            {
              this._BusinessUnits = new global::Sungero.Domain.Client.ListProperty<global::Sungero.Docflow.IApprovalRuleBaseBusinessUnits>("BusinessUnits", this);
              this._BusinessUnits.ValueChanged += (sender, e) => { this.BusinessUnitsChangedHandler(); };
              this.AddProperty((global::Sungero.Domain.Client.IProperty)this._BusinessUnits);
              this.SetBusinessUnitsEventHandlers();
            }

            protected void SetBusinessUnitsEventHandlers()
            {
              this._BusinessUnits.ChildEntityAdded += this.BusinessUnitsAddedHandler;
              this._BusinessUnits.ChildEntityDeleted += this.BusinessUnitsDeletedHandler;
            }

            protected virtual void InitDocumentGroupsCollectionProperty()
            {
              this._DocumentGroups = new global::Sungero.Domain.Client.ListProperty<global::Sungero.Docflow.IApprovalRuleBaseDocumentGroups>("DocumentGroups", this);
              this._DocumentGroups.ValueChanged += (sender, e) => { this.DocumentGroupsChangedHandler(); };
              this.AddProperty((global::Sungero.Domain.Client.IProperty)this._DocumentGroups);
              this.SetDocumentGroupsEventHandlers();
            }

            protected void SetDocumentGroupsEventHandlers()
            {
              this._DocumentGroups.ChildEntityAdded += this.DocumentGroupsAddedHandler;
              this._DocumentGroups.ChildEntityDeleted += this.DocumentGroupsDeletedHandler;
            }

            protected virtual void InitTransitionsCollectionProperty()
            {
              this._Transitions = new global::Sungero.Domain.Client.ListProperty<global::Sungero.Docflow.IApprovalRuleBaseTransitions>("Transitions", this);
              this._Transitions.ValueChanged += (sender, e) => { this.TransitionsChangedHandler(); };
              this.AddProperty((global::Sungero.Domain.Client.IProperty)this._Transitions);
              this.SetTransitionsEventHandlers();
            }

            protected void SetTransitionsEventHandlers()
            {
              this._Transitions.ChildEntityAdded += this.TransitionsAddedHandler;
              this._Transitions.ChildEntityDeleted += this.TransitionsDeletedHandler;
            }

            protected virtual void InitConditionsCollectionProperty()
            {
              this._Conditions = new global::Sungero.Domain.Client.ListProperty<global::Sungero.Docflow.IApprovalRuleBaseConditions>("Conditions", this);
              this._Conditions.ValueChanged += (sender, e) => { this.ConditionsChangedHandler(); };
              this.AddProperty((global::Sungero.Domain.Client.IProperty)this._Conditions);
              this.SetConditionsEventHandlers();
            }

            protected void SetConditionsEventHandlers()
            {
              this._Conditions.ChildEntityAdded += this.ConditionsAddedHandler;
              this._Conditions.ChildEntityDeleted += this.ConditionsDeletedHandler;
            }


    public ApprovalRuleBase()
    {
            this._Name = new global::Sungero.Domain.Client.SimpleProperty<global::System.String>("Name", this);
            this._Name.ValueChanged += (sender, e) => { this.NameChangedHandler(); };
            this.AddProperty(this._Name);

            this._Priority = new global::Sungero.Domain.Client.SimpleProperty<global::System.Int32?>("Priority", this);
            this._Priority.ValueChanged += (sender, e) => { this.PriorityChangedHandler(); };
            this.AddProperty(this._Priority);

            this._DocumentFlow = new global::Sungero.Domain.Client.EnumSimpleProperty<global::Sungero.Core.Enumeration?>("DocumentFlow", this);
            this._DocumentFlow.ValueChanged += (sender, e) => { this.DocumentFlowChangedHandler(); };
            this.AddProperty(this._DocumentFlow);

            this._IsDefaultRule = new global::Sungero.Domain.Client.SimpleProperty<global::System.Boolean?>("IsDefaultRule", this);
            this._IsDefaultRule.ValueChanged += (sender, e) => { this.IsDefaultRuleChangedHandler(); };
            this.AddProperty(this._IsDefaultRule);

            this._Note = new global::Sungero.Domain.Client.SimpleProperty<global::System.String>("Note", this);
            this._Note.ValueChanged += (sender, e) => { this.NoteChangedHandler(); };
            this.AddProperty(this._Note);

            this._VersionNumber = new global::Sungero.Domain.Client.SimpleProperty<global::System.Int32?>("VersionNumber", this);
            this._VersionNumber.ValueChanged += (sender, e) => { this.VersionNumberChangedHandler(); };
            this.AddProperty(this._VersionNumber);

            this._IsSmallApprovalAllowed = new global::Sungero.Domain.Client.SimpleProperty<global::System.Boolean?>("IsSmallApprovalAllowed", this);
            this._IsSmallApprovalAllowed.ValueChanged += (sender, e) => { this.IsSmallApprovalAllowedChangedHandler(); };
            this.AddProperty(this._IsSmallApprovalAllowed);

            this._ReworkPerformerType = new global::Sungero.Domain.Client.EnumSimpleProperty<global::Sungero.Core.Enumeration?>("ReworkPerformerType", this);
            this._ReworkPerformerType.ValueChanged += (sender, e) => { this.ReworkPerformerTypeChangedHandler(); };
            this.AddProperty(this._ReworkPerformerType);

            this._ReworkDeadline = new global::Sungero.Domain.Client.SimpleProperty<global::System.Int32?>("ReworkDeadline", this);
            this._ReworkDeadline.ValueChanged += (sender, e) => { this.ReworkDeadlineChangedHandler(); };
            this.AddProperty(this._ReworkDeadline);

            this.InitParentRuleNavigationProperty();

            this.InitReworkPerformerNavigationProperty();

            this.InitReworkApprovalRoleNavigationProperty();


            this.InitDocumentKindsCollectionProperty();

            this.InitDepartmentsCollectionProperty();

            this.InitStagesCollectionProperty();

            this.InitBusinessUnitsCollectionProperty();

            this.InitDocumentGroupsCollectionProperty();

            this.InitTransitionsCollectionProperty();

            this.InitConditionsCollectionProperty();







    }

    #endregion

  }
}

// ==================================================================
// ApprovalRuleBasePresenter.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Client
{
  public class ApprovalRuleBasePresenter<T> :
    global::Sungero.Domain.Client.EntityPresenter<T>
    where T : class, global::Sungero.Docflow.IApprovalRuleBase
  {
    #region Fields and properties

          private global::System.Windows.Input.ICommand _ShowActiveTasksCommand;

          public global::System.Windows.Input.ICommand ShowActiveTasksCommand
          {
            get
            {
              if (this._ShowActiveTasksCommand == null)
                  this._ShowActiveTasksCommand = new global::Sungero.Domain.Client.SingleEntityCommand<T>("ShowActiveTasks", this, this.ShowActiveTasks, this.CanShowActiveTasks) { IsEmptyParameterAllowed = true };
              return this._ShowActiveTasksCommand;
            }
          }
          private global::System.Windows.Input.ICommand _ShowDuplicateCommand;

          public global::System.Windows.Input.ICommand ShowDuplicateCommand
          {
            get
            {
              if (this._ShowDuplicateCommand == null)
                  this._ShowDuplicateCommand = new global::Sungero.Domain.Client.SingleEntityCommand<T>("ShowDuplicate", this, this.ShowDuplicate, this.CanShowDuplicate) { IsEmptyParameterAllowed = true };
              return this._ShowDuplicateCommand;
            }
          }
          private global::System.Windows.Input.ICommand _ChartAddSignStageCommand;

          public global::System.Windows.Input.ICommand ChartAddSignStageCommand
          {
            get
            {
              if (this._ChartAddSignStageCommand == null)
                  this._ChartAddSignStageCommand = new global::Sungero.Domain.Client.SingleEntityCommand<T>("ChartAddSignStage", this, this.ChartAddSignStage, this.CanChartAddSignStage) { IsEmptyParameterAllowed = true };
              return this._ChartAddSignStageCommand;
            }
          }
          private global::System.Windows.Input.ICommand _ChartAddManagerStageCommand;

          public global::System.Windows.Input.ICommand ChartAddManagerStageCommand
          {
            get
            {
              if (this._ChartAddManagerStageCommand == null)
                  this._ChartAddManagerStageCommand = new global::Sungero.Domain.Client.SingleEntityCommand<T>("ChartAddManagerStage", this, this.ChartAddManagerStage, this.CanChartAddManagerStage) { IsEmptyParameterAllowed = true };
              return this._ChartAddManagerStageCommand;
            }
          }
          private global::System.Windows.Input.ICommand _ChartAddApproversStageCommand;

          public global::System.Windows.Input.ICommand ChartAddApproversStageCommand
          {
            get
            {
              if (this._ChartAddApproversStageCommand == null)
                  this._ChartAddApproversStageCommand = new global::Sungero.Domain.Client.SingleEntityCommand<T>("ChartAddApproversStage", this, this.ChartAddApproversStage, this.CanChartAddApproversStage) { IsEmptyParameterAllowed = true };
              return this._ChartAddApproversStageCommand;
            }
          }
          private global::System.Windows.Input.ICommand _ChartAddRegisterStageCommand;

          public global::System.Windows.Input.ICommand ChartAddRegisterStageCommand
          {
            get
            {
              if (this._ChartAddRegisterStageCommand == null)
                  this._ChartAddRegisterStageCommand = new global::Sungero.Domain.Client.SingleEntityCommand<T>("ChartAddRegisterStage", this, this.ChartAddRegisterStage, this.CanChartAddRegisterStage) { IsEmptyParameterAllowed = true };
              return this._ChartAddRegisterStageCommand;
            }
          }
          private global::System.Windows.Input.ICommand _ChartAddSendingStageCommand;

          public global::System.Windows.Input.ICommand ChartAddSendingStageCommand
          {
            get
            {
              if (this._ChartAddSendingStageCommand == null)
                  this._ChartAddSendingStageCommand = new global::Sungero.Domain.Client.SingleEntityCommand<T>("ChartAddSendingStage", this, this.ChartAddSendingStage, this.CanChartAddSendingStage) { IsEmptyParameterAllowed = true };
              return this._ChartAddSendingStageCommand;
            }
          }
          private global::System.Windows.Input.ICommand _ChartAddSimpleAgrStageCommand;

          public global::System.Windows.Input.ICommand ChartAddSimpleAgrStageCommand
          {
            get
            {
              if (this._ChartAddSimpleAgrStageCommand == null)
                  this._ChartAddSimpleAgrStageCommand = new global::Sungero.Domain.Client.SingleEntityCommand<T>("ChartAddSimpleAgrStage", this, this.ChartAddSimpleAgrStage, this.CanChartAddSimpleAgrStage) { IsEmptyParameterAllowed = true };
              return this._ChartAddSimpleAgrStageCommand;
            }
          }
          private global::System.Windows.Input.ICommand _ChartAddPrintStageCommand;

          public global::System.Windows.Input.ICommand ChartAddPrintStageCommand
          {
            get
            {
              if (this._ChartAddPrintStageCommand == null)
                  this._ChartAddPrintStageCommand = new global::Sungero.Domain.Client.SingleEntityCommand<T>("ChartAddPrintStage", this, this.ChartAddPrintStage, this.CanChartAddPrintStage) { IsEmptyParameterAllowed = true };
              return this._ChartAddPrintStageCommand;
            }
          }
          private global::System.Windows.Input.ICommand _ChartAddControlReturnStageCommand;

          public global::System.Windows.Input.ICommand ChartAddControlReturnStageCommand
          {
            get
            {
              if (this._ChartAddControlReturnStageCommand == null)
                  this._ChartAddControlReturnStageCommand = new global::Sungero.Domain.Client.SingleEntityCommand<T>("ChartAddControlReturnStage", this, this.ChartAddControlReturnStage, this.CanChartAddControlReturnStage) { IsEmptyParameterAllowed = true };
              return this._ChartAddControlReturnStageCommand;
            }
          }
          private global::System.Windows.Input.ICommand _ChartAddNoticeStageCommand;

          public global::System.Windows.Input.ICommand ChartAddNoticeStageCommand
          {
            get
            {
              if (this._ChartAddNoticeStageCommand == null)
                  this._ChartAddNoticeStageCommand = new global::Sungero.Domain.Client.SingleEntityCommand<T>("ChartAddNoticeStage", this, this.ChartAddNoticeStage, this.CanChartAddNoticeStage) { IsEmptyParameterAllowed = true };
              return this._ChartAddNoticeStageCommand;
            }
          }
          private global::System.Windows.Input.ICommand _ChartAddReviewStageCommand;

          public global::System.Windows.Input.ICommand ChartAddReviewStageCommand
          {
            get
            {
              if (this._ChartAddReviewStageCommand == null)
                  this._ChartAddReviewStageCommand = new global::Sungero.Domain.Client.SingleEntityCommand<T>("ChartAddReviewStage", this, this.ChartAddReviewStage, this.CanChartAddReviewStage) { IsEmptyParameterAllowed = true };
              return this._ChartAddReviewStageCommand;
            }
          }
          private global::System.Windows.Input.ICommand _ChartAddExecutionStageCommand;

          public global::System.Windows.Input.ICommand ChartAddExecutionStageCommand
          {
            get
            {
              if (this._ChartAddExecutionStageCommand == null)
                  this._ChartAddExecutionStageCommand = new global::Sungero.Domain.Client.SingleEntityCommand<T>("ChartAddExecutionStage", this, this.ChartAddExecutionStage, this.CanChartAddExecutionStage) { IsEmptyParameterAllowed = true };
              return this._ChartAddExecutionStageCommand;
            }
          }
          private global::System.Windows.Input.ICommand _ChartAddConditionCommand;

          public global::System.Windows.Input.ICommand ChartAddConditionCommand
          {
            get
            {
              if (this._ChartAddConditionCommand == null)
                  this._ChartAddConditionCommand = new global::Sungero.Domain.Client.SingleEntityCommand<T>("ChartAddCondition", this, this.ChartAddCondition, this.CanChartAddCondition) { IsEmptyParameterAllowed = true };
              return this._ChartAddConditionCommand;
            }
          }
          private global::System.Windows.Input.ICommand _ChartDeleteStageCommand;

          public global::System.Windows.Input.ICommand ChartDeleteStageCommand
          {
            get
            {
              if (this._ChartDeleteStageCommand == null)
                  this._ChartDeleteStageCommand = new global::Sungero.Domain.Client.SingleChildEntityCommand<global::Sungero.Docflow.IApprovalRuleBaseStages>("ChartDeleteStage", this, this.ChartDeleteStage, this.CanChartDeleteStage);
              return this._ChartDeleteStageCommand;
            }
          }
          private global::System.Windows.Input.ICommand _ChartSelectStageCommand;

          public global::System.Windows.Input.ICommand ChartSelectStageCommand
          {
            get
            {
              if (this._ChartSelectStageCommand == null)
                  this._ChartSelectStageCommand = new global::Sungero.Domain.Client.SingleChildEntityCommand<global::Sungero.Docflow.IApprovalRuleBaseStages>("ChartSelectStage", this, this.ChartSelectStage, this.CanChartSelectStage);
              return this._ChartSelectStageCommand;
            }
          }
          private global::System.Windows.Input.ICommand _ChartConfigStageCommand;

          public global::System.Windows.Input.ICommand ChartConfigStageCommand
          {
            get
            {
              if (this._ChartConfigStageCommand == null)
                  this._ChartConfigStageCommand = new global::Sungero.Domain.Client.SingleChildEntityCommand<global::Sungero.Docflow.IApprovalRuleBaseStages>("ChartConfigStage", this, this.ChartConfigStage, this.CanChartConfigStage);
              return this._ChartConfigStageCommand;
            }
          }
          private global::System.Windows.Input.ICommand _ChartConfigConditionCommand;

          public global::System.Windows.Input.ICommand ChartConfigConditionCommand
          {
            get
            {
              if (this._ChartConfigConditionCommand == null)
                  this._ChartConfigConditionCommand = new global::Sungero.Domain.Client.SingleChildEntityCommand<global::Sungero.Docflow.IApprovalRuleBaseConditions>("ChartConfigCondition", this, this.ChartConfigCondition, this.CanChartConfigCondition);
              return this._ChartConfigConditionCommand;
            }
          }
          private global::System.Windows.Input.ICommand _ChartDeleteConditionCommand;

          public global::System.Windows.Input.ICommand ChartDeleteConditionCommand
          {
            get
            {
              if (this._ChartDeleteConditionCommand == null)
                  this._ChartDeleteConditionCommand = new global::Sungero.Domain.Client.SingleChildEntityCommand<global::Sungero.Docflow.IApprovalRuleBaseConditions>("ChartDeleteCondition", this, this.ChartDeleteCondition, this.CanChartDeleteCondition);
              return this._ChartDeleteConditionCommand;
            }
          }
          private global::System.Windows.Input.ICommand _TakeScreenshotCommand;

          public global::System.Windows.Input.ICommand TakeScreenshotCommand
          {
            get
            {
              if (this._TakeScreenshotCommand == null)
                  this._TakeScreenshotCommand = new global::Sungero.Domain.Client.SingleEntityCommand<T>("TakeScreenshot", this, this.TakeScreenshot, this.CanTakeScreenshot) { IsEmptyParameterAllowed = true };
              return this._TakeScreenshotCommand;
            }
          }
          private global::System.Windows.Input.ICommand _CreateVersionCommand;

          public global::System.Windows.Input.ICommand CreateVersionCommand
          {
            get
            {
              if (this._CreateVersionCommand == null)
                  this._CreateVersionCommand = new global::Sungero.Domain.Client.SingleEntityCommand<T>("CreateVersion", this, this.CreateVersion, this.CanCreateVersion) { IsEmptyParameterAllowed = true };
              return this._CreateVersionCommand;
            }
          }
          private global::System.Windows.Input.ICommand _DoActiveCommand;

          public global::System.Windows.Input.ICommand DoActiveCommand
          {
            get
            {
              if (this._DoActiveCommand == null)
                  this._DoActiveCommand = new global::Sungero.Domain.Client.SingleEntityCommand<T>("DoActive", this, this.DoActive, this.CanDoActive) { IsEmptyParameterAllowed = true };
              return this._DoActiveCommand;
            }
          }
          private global::System.Windows.Input.ICommand _DoCloseCommand;

          public global::System.Windows.Input.ICommand DoCloseCommand
          {
            get
            {
              if (this._DoCloseCommand == null)
                  this._DoCloseCommand = new global::Sungero.Domain.Client.SingleEntityCommand<T>("DoClose", this, this.DoClose, this.CanDoClose) { IsEmptyParameterAllowed = true };
              return this._DoCloseCommand;
            }
          }
          private global::System.Windows.Input.ICommand _ShowAllVersionsCommand;

          public global::System.Windows.Input.ICommand ShowAllVersionsCommand
          {
            get
            {
              if (this._ShowAllVersionsCommand == null)
                  this._ShowAllVersionsCommand = new global::Sungero.Domain.Client.SingleEntityCommand<T>("ShowAllVersions", this, this.ShowAllVersions, this.CanShowAllVersions) { IsEmptyParameterAllowed = true };
              return this._ShowAllVersionsCommand;
            }
          }
          private global::System.Windows.Input.ICommand _PrintApprovalRuleCommand;

          public global::System.Windows.Input.ICommand PrintApprovalRuleCommand
          {
            get
            {
              if (this._PrintApprovalRuleCommand == null)
                  this._PrintApprovalRuleCommand = new global::Sungero.Domain.Client.SingleEntityCommand<T>("PrintApprovalRule", this, this.PrintApprovalRule, this.CanPrintApprovalRule) { IsEmptyParameterAllowed = true };
              return this._PrintApprovalRuleCommand;
            }
          }




    #endregion

    #region Methods

              private bool CanShowActiveTasks(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfCanExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this);
                return ((Sungero.Docflow.Client.ApprovalRuleBaseActions)(entity as Sungero.Docflow.Client.ApprovalRuleBase).ActionsHandlers).CanShowActiveTasks(args);
              }

              private void ShowActiveTasks(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this, entity.Info.Actions.ShowActiveTasks);
                ((Sungero.Docflow.Client.ApprovalRuleBaseActions)(entity as Sungero.Docflow.Client.ApprovalRuleBase).ActionsHandlers).ShowActiveTasks(args);
              }

              private bool CanShowDuplicate(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfCanExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this);
                return ((Sungero.Docflow.Client.ApprovalRuleBaseActions)(entity as Sungero.Docflow.Client.ApprovalRuleBase).ActionsHandlers).CanShowDuplicate(args);
              }

              private void ShowDuplicate(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this, entity.Info.Actions.ShowDuplicate);
                ((Sungero.Docflow.Client.ApprovalRuleBaseActions)(entity as Sungero.Docflow.Client.ApprovalRuleBase).ActionsHandlers).ShowDuplicate(args);
              }

              private bool CanChartAddSignStage(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfCanExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this);
                return ((Sungero.Docflow.Client.ApprovalRuleBaseActions)(entity as Sungero.Docflow.Client.ApprovalRuleBase).ActionsHandlers).CanChartAddSignStage(args);
              }

              private void ChartAddSignStage(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this, entity.Info.Actions.ChartAddSignStage);
                ((Sungero.Docflow.Client.ApprovalRuleBaseActions)(entity as Sungero.Docflow.Client.ApprovalRuleBase).ActionsHandlers).ChartAddSignStage(args);
              }

              private bool CanChartAddManagerStage(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfCanExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this);
                return ((Sungero.Docflow.Client.ApprovalRuleBaseActions)(entity as Sungero.Docflow.Client.ApprovalRuleBase).ActionsHandlers).CanChartAddManagerStage(args);
              }

              private void ChartAddManagerStage(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this, entity.Info.Actions.ChartAddManagerStage);
                ((Sungero.Docflow.Client.ApprovalRuleBaseActions)(entity as Sungero.Docflow.Client.ApprovalRuleBase).ActionsHandlers).ChartAddManagerStage(args);
              }

              private bool CanChartAddApproversStage(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfCanExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this);
                return ((Sungero.Docflow.Client.ApprovalRuleBaseActions)(entity as Sungero.Docflow.Client.ApprovalRuleBase).ActionsHandlers).CanChartAddApproversStage(args);
              }

              private void ChartAddApproversStage(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this, entity.Info.Actions.ChartAddApproversStage);
                ((Sungero.Docflow.Client.ApprovalRuleBaseActions)(entity as Sungero.Docflow.Client.ApprovalRuleBase).ActionsHandlers).ChartAddApproversStage(args);
              }

              private bool CanChartAddRegisterStage(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfCanExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this);
                return ((Sungero.Docflow.Client.ApprovalRuleBaseActions)(entity as Sungero.Docflow.Client.ApprovalRuleBase).ActionsHandlers).CanChartAddRegisterStage(args);
              }

              private void ChartAddRegisterStage(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this, entity.Info.Actions.ChartAddRegisterStage);
                ((Sungero.Docflow.Client.ApprovalRuleBaseActions)(entity as Sungero.Docflow.Client.ApprovalRuleBase).ActionsHandlers).ChartAddRegisterStage(args);
              }

              private bool CanChartAddSendingStage(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfCanExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this);
                return ((Sungero.Docflow.Client.ApprovalRuleBaseActions)(entity as Sungero.Docflow.Client.ApprovalRuleBase).ActionsHandlers).CanChartAddSendingStage(args);
              }

              private void ChartAddSendingStage(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this, entity.Info.Actions.ChartAddSendingStage);
                ((Sungero.Docflow.Client.ApprovalRuleBaseActions)(entity as Sungero.Docflow.Client.ApprovalRuleBase).ActionsHandlers).ChartAddSendingStage(args);
              }

              private bool CanChartAddSimpleAgrStage(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfCanExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this);
                return ((Sungero.Docflow.Client.ApprovalRuleBaseActions)(entity as Sungero.Docflow.Client.ApprovalRuleBase).ActionsHandlers).CanChartAddSimpleAgrStage(args);
              }

              private void ChartAddSimpleAgrStage(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this, entity.Info.Actions.ChartAddSimpleAgrStage);
                ((Sungero.Docflow.Client.ApprovalRuleBaseActions)(entity as Sungero.Docflow.Client.ApprovalRuleBase).ActionsHandlers).ChartAddSimpleAgrStage(args);
              }

              private bool CanChartAddPrintStage(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfCanExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this);
                return ((Sungero.Docflow.Client.ApprovalRuleBaseActions)(entity as Sungero.Docflow.Client.ApprovalRuleBase).ActionsHandlers).CanChartAddPrintStage(args);
              }

              private void ChartAddPrintStage(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this, entity.Info.Actions.ChartAddPrintStage);
                ((Sungero.Docflow.Client.ApprovalRuleBaseActions)(entity as Sungero.Docflow.Client.ApprovalRuleBase).ActionsHandlers).ChartAddPrintStage(args);
              }

              private bool CanChartAddControlReturnStage(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfCanExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this);
                return ((Sungero.Docflow.Client.ApprovalRuleBaseActions)(entity as Sungero.Docflow.Client.ApprovalRuleBase).ActionsHandlers).CanChartAddControlReturnStage(args);
              }

              private void ChartAddControlReturnStage(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this, entity.Info.Actions.ChartAddControlReturnStage);
                ((Sungero.Docflow.Client.ApprovalRuleBaseActions)(entity as Sungero.Docflow.Client.ApprovalRuleBase).ActionsHandlers).ChartAddControlReturnStage(args);
              }

              private bool CanChartAddNoticeStage(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfCanExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this);
                return ((Sungero.Docflow.Client.ApprovalRuleBaseActions)(entity as Sungero.Docflow.Client.ApprovalRuleBase).ActionsHandlers).CanChartAddNoticeStage(args);
              }

              private void ChartAddNoticeStage(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this, entity.Info.Actions.ChartAddNoticeStage);
                ((Sungero.Docflow.Client.ApprovalRuleBaseActions)(entity as Sungero.Docflow.Client.ApprovalRuleBase).ActionsHandlers).ChartAddNoticeStage(args);
              }

              private bool CanChartAddReviewStage(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfCanExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this);
                return ((Sungero.Docflow.Client.ApprovalRuleBaseActions)(entity as Sungero.Docflow.Client.ApprovalRuleBase).ActionsHandlers).CanChartAddReviewStage(args);
              }

              private void ChartAddReviewStage(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this, entity.Info.Actions.ChartAddReviewStage);
                ((Sungero.Docflow.Client.ApprovalRuleBaseActions)(entity as Sungero.Docflow.Client.ApprovalRuleBase).ActionsHandlers).ChartAddReviewStage(args);
              }

              private bool CanChartAddExecutionStage(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfCanExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this);
                return ((Sungero.Docflow.Client.ApprovalRuleBaseActions)(entity as Sungero.Docflow.Client.ApprovalRuleBase).ActionsHandlers).CanChartAddExecutionStage(args);
              }

              private void ChartAddExecutionStage(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this, entity.Info.Actions.ChartAddExecutionStage);
                ((Sungero.Docflow.Client.ApprovalRuleBaseActions)(entity as Sungero.Docflow.Client.ApprovalRuleBase).ActionsHandlers).ChartAddExecutionStage(args);
              }

              private bool CanChartAddCondition(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfCanExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this);
                return ((Sungero.Docflow.Client.ApprovalRuleBaseActions)(entity as Sungero.Docflow.Client.ApprovalRuleBase).ActionsHandlers).CanChartAddCondition(args);
              }

              private void ChartAddCondition(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this, entity.Info.Actions.ChartAddCondition);
                ((Sungero.Docflow.Client.ApprovalRuleBaseActions)(entity as Sungero.Docflow.Client.ApprovalRuleBase).ActionsHandlers).ChartAddCondition(args);
              }

            private bool CanChartDeleteStage(global::Sungero.Domain.Shared.IChildEntity selectedEntity,
              global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Domain.Shared.IChildEntity> entityCollection)
            {
              var args = new global::Sungero.Domain.Client.WpfCanExecuteChildCollectionActionArgs(this.Entity, this);
              return global::Sungero.Domain.Client.ActionExecutor.CanExecuteChildEntityAction<global::Sungero.Domain.Client.WpfCanExecuteChildCollectionActionArgs>(selectedEntity, entityCollection, args,
                ((Sungero.Docflow.Client.ApprovalRuleBaseStagesActions)(this.Entity as global::Sungero.Docflow.Client.ApprovalRuleBase).StagesActionsHandlers).CanChartDeleteStage);
            }

            private void ChartDeleteStage(global::Sungero.Domain.Shared.IChildEntity selectedEntity,
              global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Domain.Shared.IChildEntity> entityCollection)
            {
              var args = new global::Sungero.Domain.Client.WpfExecuteChildCollectionActionArgs(this.Entity, this);
              global::Sungero.Domain.Client.ActionExecutor.ExecuteChildEntityAction<global::Sungero.Domain.Client.WpfExecuteChildCollectionActionArgs>(selectedEntity, entityCollection, args,
                ((Sungero.Docflow.Client.ApprovalRuleBaseStagesActions)(this.Entity as global::Sungero.Docflow.Client.ApprovalRuleBase).StagesActionsHandlers).ChartDeleteStage);
            }
            private bool CanChartSelectStage(global::Sungero.Domain.Shared.IChildEntity selectedEntity,
              global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Domain.Shared.IChildEntity> entityCollection)
            {
              var args = new global::Sungero.Domain.Client.WpfCanExecuteChildCollectionActionArgs(this.Entity, this);
              return global::Sungero.Domain.Client.ActionExecutor.CanExecuteChildEntityAction<global::Sungero.Domain.Client.WpfCanExecuteChildCollectionActionArgs>(selectedEntity, entityCollection, args,
                ((Sungero.Docflow.Client.ApprovalRuleBaseStagesActions)(this.Entity as global::Sungero.Docflow.Client.ApprovalRuleBase).StagesActionsHandlers).CanChartSelectStage);
            }

            private void ChartSelectStage(global::Sungero.Domain.Shared.IChildEntity selectedEntity,
              global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Domain.Shared.IChildEntity> entityCollection)
            {
              var args = new global::Sungero.Domain.Client.WpfExecuteChildCollectionActionArgs(this.Entity, this);
              global::Sungero.Domain.Client.ActionExecutor.ExecuteChildEntityAction<global::Sungero.Domain.Client.WpfExecuteChildCollectionActionArgs>(selectedEntity, entityCollection, args,
                ((Sungero.Docflow.Client.ApprovalRuleBaseStagesActions)(this.Entity as global::Sungero.Docflow.Client.ApprovalRuleBase).StagesActionsHandlers).ChartSelectStage);
            }
            private bool CanChartConfigStage(global::Sungero.Domain.Shared.IChildEntity selectedEntity,
              global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Domain.Shared.IChildEntity> entityCollection)
            {
              var args = new global::Sungero.Domain.Client.WpfCanExecuteChildCollectionActionArgs(this.Entity, this);
              return global::Sungero.Domain.Client.ActionExecutor.CanExecuteChildEntityAction<global::Sungero.Domain.Client.WpfCanExecuteChildCollectionActionArgs>(selectedEntity, entityCollection, args,
                ((Sungero.Docflow.Client.ApprovalRuleBaseStagesActions)(this.Entity as global::Sungero.Docflow.Client.ApprovalRuleBase).StagesActionsHandlers).CanChartConfigStage);
            }

            private void ChartConfigStage(global::Sungero.Domain.Shared.IChildEntity selectedEntity,
              global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Domain.Shared.IChildEntity> entityCollection)
            {
              var args = new global::Sungero.Domain.Client.WpfExecuteChildCollectionActionArgs(this.Entity, this);
              global::Sungero.Domain.Client.ActionExecutor.ExecuteChildEntityAction<global::Sungero.Domain.Client.WpfExecuteChildCollectionActionArgs>(selectedEntity, entityCollection, args,
                ((Sungero.Docflow.Client.ApprovalRuleBaseStagesActions)(this.Entity as global::Sungero.Docflow.Client.ApprovalRuleBase).StagesActionsHandlers).ChartConfigStage);
            }
            private bool CanChartConfigCondition(global::Sungero.Domain.Shared.IChildEntity selectedEntity,
              global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Domain.Shared.IChildEntity> entityCollection)
            {
              var args = new global::Sungero.Domain.Client.WpfCanExecuteChildCollectionActionArgs(this.Entity, this);
              return global::Sungero.Domain.Client.ActionExecutor.CanExecuteChildEntityAction<global::Sungero.Domain.Client.WpfCanExecuteChildCollectionActionArgs>(selectedEntity, entityCollection, args,
                ((Sungero.Docflow.Client.ApprovalRuleBaseConditionsActions)(this.Entity as global::Sungero.Docflow.Client.ApprovalRuleBase).ConditionsActionsHandlers).CanChartConfigCondition);
            }

            private void ChartConfigCondition(global::Sungero.Domain.Shared.IChildEntity selectedEntity,
              global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Domain.Shared.IChildEntity> entityCollection)
            {
              var args = new global::Sungero.Domain.Client.WpfExecuteChildCollectionActionArgs(this.Entity, this);
              global::Sungero.Domain.Client.ActionExecutor.ExecuteChildEntityAction<global::Sungero.Domain.Client.WpfExecuteChildCollectionActionArgs>(selectedEntity, entityCollection, args,
                ((Sungero.Docflow.Client.ApprovalRuleBaseConditionsActions)(this.Entity as global::Sungero.Docflow.Client.ApprovalRuleBase).ConditionsActionsHandlers).ChartConfigCondition);
            }
            private bool CanChartDeleteCondition(global::Sungero.Domain.Shared.IChildEntity selectedEntity,
              global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Domain.Shared.IChildEntity> entityCollection)
            {
              var args = new global::Sungero.Domain.Client.WpfCanExecuteChildCollectionActionArgs(this.Entity, this);
              return global::Sungero.Domain.Client.ActionExecutor.CanExecuteChildEntityAction<global::Sungero.Domain.Client.WpfCanExecuteChildCollectionActionArgs>(selectedEntity, entityCollection, args,
                ((Sungero.Docflow.Client.ApprovalRuleBaseConditionsActions)(this.Entity as global::Sungero.Docflow.Client.ApprovalRuleBase).ConditionsActionsHandlers).CanChartDeleteCondition);
            }

            private void ChartDeleteCondition(global::Sungero.Domain.Shared.IChildEntity selectedEntity,
              global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Domain.Shared.IChildEntity> entityCollection)
            {
              var args = new global::Sungero.Domain.Client.WpfExecuteChildCollectionActionArgs(this.Entity, this);
              global::Sungero.Domain.Client.ActionExecutor.ExecuteChildEntityAction<global::Sungero.Domain.Client.WpfExecuteChildCollectionActionArgs>(selectedEntity, entityCollection, args,
                ((Sungero.Docflow.Client.ApprovalRuleBaseConditionsActions)(this.Entity as global::Sungero.Docflow.Client.ApprovalRuleBase).ConditionsActionsHandlers).ChartDeleteCondition);
            }
              private bool CanTakeScreenshot(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfCanExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this);
                return ((Sungero.Docflow.Client.ApprovalRuleBaseActions)(entity as Sungero.Docflow.Client.ApprovalRuleBase).ActionsHandlers).CanTakeScreenshot(args);
              }

              private void TakeScreenshot(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this, entity.Info.Actions.TakeScreenshot);
                ((Sungero.Docflow.Client.ApprovalRuleBaseActions)(entity as Sungero.Docflow.Client.ApprovalRuleBase).ActionsHandlers).TakeScreenshot(args);
              }

              private bool CanCreateVersion(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfCanExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this);
                return ((Sungero.Docflow.Client.ApprovalRuleBaseActions)(entity as Sungero.Docflow.Client.ApprovalRuleBase).ActionsHandlers).CanCreateVersion(args);
              }

              private void CreateVersion(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this, entity.Info.Actions.CreateVersion);
                ((Sungero.Docflow.Client.ApprovalRuleBaseActions)(entity as Sungero.Docflow.Client.ApprovalRuleBase).ActionsHandlers).CreateVersion(args);
              }

              private bool CanDoActive(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfCanExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this);
                return ((Sungero.Docflow.Client.ApprovalRuleBaseActions)(entity as Sungero.Docflow.Client.ApprovalRuleBase).ActionsHandlers).CanDoActive(args);
              }

              private void DoActive(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this, entity.Info.Actions.DoActive);
                ((Sungero.Docflow.Client.ApprovalRuleBaseActions)(entity as Sungero.Docflow.Client.ApprovalRuleBase).ActionsHandlers).DoActive(args);
              }

              private bool CanDoClose(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfCanExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this);
                return ((Sungero.Docflow.Client.ApprovalRuleBaseActions)(entity as Sungero.Docflow.Client.ApprovalRuleBase).ActionsHandlers).CanDoClose(args);
              }

              private void DoClose(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this, entity.Info.Actions.DoClose);
                ((Sungero.Docflow.Client.ApprovalRuleBaseActions)(entity as Sungero.Docflow.Client.ApprovalRuleBase).ActionsHandlers).DoClose(args);
              }

              private bool CanShowAllVersions(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfCanExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this);
                return ((Sungero.Docflow.Client.ApprovalRuleBaseActions)(entity as Sungero.Docflow.Client.ApprovalRuleBase).ActionsHandlers).CanShowAllVersions(args);
              }

              private void ShowAllVersions(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this, entity.Info.Actions.ShowAllVersions);
                ((Sungero.Docflow.Client.ApprovalRuleBaseActions)(entity as Sungero.Docflow.Client.ApprovalRuleBase).ActionsHandlers).ShowAllVersions(args);
              }

              private bool CanPrintApprovalRule(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfCanExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this);
                return ((Sungero.Docflow.Client.ApprovalRuleBaseActions)(entity as Sungero.Docflow.Client.ApprovalRuleBase).ActionsHandlers).CanPrintApprovalRule(args);
              }

              private void PrintApprovalRule(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this, entity.Info.Actions.PrintApprovalRule);
                ((Sungero.Docflow.Client.ApprovalRuleBaseActions)(entity as Sungero.Docflow.Client.ApprovalRuleBase).ActionsHandlers).PrintApprovalRule(args);
              }


    #endregion

    #region Framework events

    protected override void EntityPropertyChangedEventHandler(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
    {
      base.EntityPropertyChangedEventHandler(sender, e);
    }

    #endregion

              protected global::Sungero.Domain.Client.IEntityCollectionPresenter _ParentRuleCollectionPresenter;
              public global::Sungero.Domain.Client.IEntityCollectionPresenter ParentRuleCollectionPresenter
              {
          get { return this._ParentRuleCollectionPresenter; }
        }
              protected global::Sungero.Domain.Client.IEntityCollectionPresenter _ReworkPerformerCollectionPresenter;
              public global::Sungero.Domain.Client.IEntityCollectionPresenter ReworkPerformerCollectionPresenter
              {
          get { return this._ReworkPerformerCollectionPresenter; }
        }
              protected global::Sungero.Domain.Client.IEntityCollectionPresenter _ReworkApprovalRoleCollectionPresenter;
              public global::Sungero.Domain.Client.IEntityCollectionPresenter ReworkApprovalRoleCollectionPresenter
              {
          get { return this._ReworkApprovalRoleCollectionPresenter; }
        }


                          protected global::Sungero.Domain.Client.IEntityCollectionPresenter _DocumentKindsDocumentKindCollectionPresenter;
                          public global::Sungero.Domain.Client.IEntityCollectionPresenter DocumentKindsDocumentKindCollectionPresenter
                          {
                  get { return this._DocumentKindsDocumentKindCollectionPresenter; }
                }

                          protected global::Sungero.Domain.Client.IEntityCollectionPresenter _DepartmentsDepartmentCollectionPresenter;
                          public global::Sungero.Domain.Client.IEntityCollectionPresenter DepartmentsDepartmentCollectionPresenter
                          {
                  get { return this._DepartmentsDepartmentCollectionPresenter; }
                }

                          protected global::Sungero.Domain.Client.IEntityCollectionPresenter _StagesStageCollectionPresenter;
                          public global::Sungero.Domain.Client.IEntityCollectionPresenter StagesStageCollectionPresenter
                          {
                  get { return this._StagesStageCollectionPresenter; }
                }

                          protected global::Sungero.Domain.Client.IEntityCollectionPresenter _BusinessUnitsBusinessUnitCollectionPresenter;
                          public global::Sungero.Domain.Client.IEntityCollectionPresenter BusinessUnitsBusinessUnitCollectionPresenter
                          {
                  get { return this._BusinessUnitsBusinessUnitCollectionPresenter; }
                }

                          protected global::Sungero.Domain.Client.IEntityCollectionPresenter _DocumentGroupsDocumentGroupCollectionPresenter;
                          public global::Sungero.Domain.Client.IEntityCollectionPresenter DocumentGroupsDocumentGroupCollectionPresenter
                          {
                  get { return this._DocumentGroupsDocumentGroupCollectionPresenter; }
                }

                          protected global::Sungero.Domain.Client.IEntityCollectionPresenter _ConditionsConditionCollectionPresenter;
                          public global::Sungero.Domain.Client.IEntityCollectionPresenter ConditionsConditionCollectionPresenter
                          {
                  get { return this._ConditionsConditionCollectionPresenter; }
                }



    #region Constructors

    private void Init()
    {
                  this._ParentRuleCollectionPresenter = this.CreateCollectionPresenterForNavigationProperty<global::Sungero.Docflow.IApprovalRuleBase>(global::System.Guid.Parse("56516769-89ef-4024-8061-600c72a6a18d"));
              this._ParentRuleCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Docflow.IApprovalRuleBase>(() => this.Entity.Id, typeof(T), "ParentRule");

                  this._ReworkPerformerCollectionPresenter = this.CreateCollectionPresenterForNavigationProperty<global::Sungero.CoreEntities.IRecipient>(global::System.Guid.Parse("60fda005-801d-41b1-b9f1-4aca1c81e57b"));
              this._ReworkPerformerCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.CoreEntities.IRecipient>(() => this.Entity.Id, typeof(T), "ReworkPerformer");

                  this._ReworkApprovalRoleCollectionPresenter = this.CreateCollectionPresenterForNavigationProperty<global::Sungero.Docflow.IApprovalRoleBase>(global::System.Guid.Parse("75468725-8752-4266-b393-fe436066c873"));
              this._ReworkApprovalRoleCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationProperty<global::Sungero.Docflow.IApprovalRoleBase>(() => this.Entity, typeof(T), "ReworkApprovalRole");


                          this._DocumentKindsDocumentKindCollectionPresenter = this.CreateCollectionPresenterForNavigationProperty<global::Sungero.Docflow.IDocumentKind>(global::System.Guid.Parse("00cbfe17-d6fe-4eaa-9404-07e7782e0330"));
                        this._DocumentKindsDocumentKindCollectionPresenter
                        .Query = global::Sungero.Domain.Client.Session.GetValuesForChildNavigationProperty<global::Sungero.Docflow.IDocumentKind>(
                          () => this.ChildEntityCollectionPresenters.GetPresenter<global::Sungero.Docflow.IApprovalRuleBaseDocumentKinds>().FocusedEntity,
                          typeof(Sungero.Docflow.IApprovalRuleBaseDocumentKinds),
                          () => this.Entity,
                          "DocumentKind");

                          this._DepartmentsDepartmentCollectionPresenter = this.CreateCollectionPresenterForNavigationProperty<global::Sungero.Company.IDepartment>(global::System.Guid.Parse("34ac0783-193f-40b1-bf99-92c3fd586504"));
                        this._DepartmentsDepartmentCollectionPresenter
                        .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Company.IDepartment>(() => this.Entity.Id, typeof(Sungero.Docflow.IApprovalRuleBaseDepartments), "Department");

                          this._StagesStageCollectionPresenter = this.CreateCollectionPresenterForNavigationProperty<global::Sungero.Docflow.IApprovalStage>(global::System.Guid.Parse("53d11c09-1ed1-464e-879e-82e99a4dc1f4"));
                        this._StagesStageCollectionPresenter
                        .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Docflow.IApprovalStage>(() => this.Entity.Id, typeof(Sungero.Docflow.IApprovalRuleBaseStages), "Stage");

                          this._BusinessUnitsBusinessUnitCollectionPresenter = this.CreateCollectionPresenterForNavigationProperty<global::Sungero.Company.IBusinessUnit>(global::System.Guid.Parse("b35a572f-7c4c-432c-af62-6abb1124e19d"));
                        this._BusinessUnitsBusinessUnitCollectionPresenter
                        .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Company.IBusinessUnit>(() => this.Entity.Id, typeof(Sungero.Docflow.IApprovalRuleBaseBusinessUnits), "BusinessUnit");

                          this._DocumentGroupsDocumentGroupCollectionPresenter = this.CreateCollectionPresenterForNavigationProperty<global::Sungero.Docflow.IDocumentGroupBase>(global::System.Guid.Parse("d93385c2-06bb-425f-97fb-e4d8a83276c8"));
                        this._DocumentGroupsDocumentGroupCollectionPresenter
                        .Query = global::Sungero.Domain.Client.Session.GetValuesForChildNavigationProperty<global::Sungero.Docflow.IDocumentGroupBase>(
                          () => this.ChildEntityCollectionPresenters.GetPresenter<global::Sungero.Docflow.IApprovalRuleBaseDocumentGroups>().FocusedEntity,
                          typeof(Sungero.Docflow.IApprovalRuleBaseDocumentGroups),
                          () => this.Entity,
                          "DocumentGroup");

                          this._ConditionsConditionCollectionPresenter = this.CreateCollectionPresenterForNavigationProperty<global::Sungero.Docflow.IConditionBase>(global::System.Guid.Parse("63c932c6-2d61-4463-a828-219c94b6bc2c"));
                        this._ConditionsConditionCollectionPresenter
                        .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Docflow.IConditionBase>(() => this.Entity.Id, typeof(Sungero.Docflow.IApprovalRuleBaseConditions), "Condition");


    }

    public ApprovalRuleBasePresenter()
    {
      this.Init();
    }

    #endregion
  }
}

// ==================================================================
// ApprovalRuleBaseCollectionPresenter.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Client
{
  public class ApprovalRuleBaseCollectionPresenter<T> : 
    global::Sungero.Domain.Client.EntityCollectionPresenter<T>
    where T: class, global::Sungero.Docflow.IApprovalRuleBase
  {
    #region Actions

          private global::System.Windows.Input.ICommand _ShowApprovalRulesConsolidatedReportCommand;  

          public global::System.Windows.Input.ICommand ShowApprovalRulesConsolidatedReportCommand 
          { 
            get
            { 
              if (this._ShowApprovalRulesConsolidatedReportCommand == null)
                this._ShowApprovalRulesConsolidatedReportCommand = new global::Sungero.Domain.Client.PresenterCommand("ShowApprovalRulesConsolidatedReport", this, this.ShowApprovalRulesConsolidatedReport, this.CanShowApprovalRulesConsolidatedReport);
              return this._ShowApprovalRulesConsolidatedReportCommand; 
            }
          }
          private global::System.Windows.Input.ICommand _PrintApprovalRuleCommand;  

          public global::System.Windows.Input.ICommand PrintApprovalRuleCommand 
          { 
            get
            { 
              if (this._PrintApprovalRuleCommand == null)
                this._PrintApprovalRuleCommand = new global::Sungero.Domain.Client.SingleEntityCommand<T>("PrintApprovalRule", this, this.PrintApprovalRule, this.CanPrintApprovalRule) { IsEmptyParameterAllowed = true };
              return this._PrintApprovalRuleCommand; 
            }
          }



    #endregion

    #region Methods

        protected virtual bool CanShowApprovalRulesConsolidatedReport()
        {
          var args = new global::Sungero.Domain.Client.WpfCanExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Collection, null, this);
          return Sungero.Docflow.Client.ApprovalRuleBaseStaticActions.CanShowApprovalRulesConsolidatedReport(args);
        }

        protected virtual void ShowApprovalRulesConsolidatedReport()
        {
          var args = new global::Sungero.Domain.Client.WpfExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Collection, null, this);
          Sungero.Docflow.Client.ApprovalRuleBaseStaticActions.ShowApprovalRulesConsolidatedReport(args);
        }

        private bool CanPrintApprovalRule(T entity)
        {
          var args = new global::Sungero.Domain.Client.WpfCanExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Collection, entity, this);
          return ((Sungero.Docflow.Client.ApprovalRuleBaseActions)(entity as Sungero.Docflow.Client.ApprovalRuleBase).ActionsHandlers).CanPrintApprovalRule(args);
        }

        private void PrintApprovalRule(T entity)
        {
          var args = new global::Sungero.Domain.Client.WpfExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Collection, entity, this, entity.Info.Actions.PrintApprovalRule);
          ((Sungero.Docflow.Client.ApprovalRuleBaseActions)(entity as Sungero.Docflow.Client.ApprovalRuleBase).ActionsHandlers).PrintApprovalRule(args);
        }



    #endregion

    public ApprovalRuleBaseCollectionPresenter(global::System.Linq.IQueryable<T> query, OnLookup onLookup)
      : base(query, onLookup)
    {
    }

    public ApprovalRuleBaseCollectionPresenter(global::System.Linq.IQueryable<T> query)
      : this(query, null) { }

    public ApprovalRuleBaseCollectionPresenter(OnLookup onLookup)
      : this(null, onLookup) { }

    public ApprovalRuleBaseCollectionPresenter()
      : this(null, null) { }
  }
}

// ==================================================================
// ApprovalRuleBaseRepositoryImplementer.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Client
{ 
  public class ApprovalRuleBaseRepositoryImplementer<T> : 
      global::Sungero.Domain.Client.RepositoryImplementer<T>,
      global::Sungero.Docflow.IApprovalRuleBaseRepositoryImplementer<T>
      where T : global::Sungero.Docflow.IApprovalRuleBase
    {
       public new global::Sungero.Docflow.IApprovalRuleBaseAccessRights AccessRights
       {
          get { return (global::Sungero.Docflow.IApprovalRuleBaseAccessRights)base.AccessRights; }
       }

       public new global::Sungero.Docflow.IApprovalRuleBaseInfo Info
       {
          get { return (global::Sungero.Docflow.IApprovalRuleBaseInfo)base.Info; }
       }

       protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
       {
         return new global::Sungero.Docflow.Client.ApprovalRuleBaseTypeAccessRights(typeof(T));
       }
    }
}

// ==================================================================
// ApprovalRuleBaseAccessRights.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Client
{
  public class ApprovalRuleBaseAccessRights : 
    Sungero.CoreEntities.Client.DatabookEntryAccessRights, Sungero.Docflow.IApprovalRuleBaseAccessRights
  {

    public ApprovalRuleBaseAccessRights(global::Sungero.Domain.Shared.IEntity entity) : base(entity)
    {
    }
  }

  public class ApprovalRuleBaseTypeAccessRights : 
    Sungero.CoreEntities.Client.DatabookEntryTypeAccessRights, Sungero.Docflow.IApprovalRuleBaseAccessRights
  {

    public ApprovalRuleBaseTypeAccessRights(global::System.Type entityType) : base(entityType)
    {
    }
  }
}
