
// ==================================================================
// OutgoingDocumentBase.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Client
{
  public class OutgoingDocumentBase :
    global::Sungero.Docflow.Client.OfficialDocument, global::Sungero.Docflow.IOutgoingDocumentBase
  {
    #region Fields and properties

    public static new readonly global::System.Guid ClassTypeGuid = global::System.Guid.Parse("f5f104fb-52e4-422b-9de1-a36937d85a2d");

    public override global::System.Guid TypeGuid
    {
      get { return global::Sungero.Docflow.Client.OutgoingDocumentBase.ClassTypeGuid; }
    }

    public override string TypeName
    {
      get { return "Sungero.Docflow.IOutgoingDocumentBase, Sungero.Domain.Interfaces"; }
    }

      public override string DisplayValue
      {
        get { return this.Name; }
        set { this.Name = value; }
      }

      public override string DisplayPropertyName
      {
        get { return "Name"; }
      }


    public new global::Sungero.Docflow.IOutgoingDocumentBaseState State
    {
      get
      {
        return (global::Sungero.Docflow.IOutgoingDocumentBaseState)base.State;
      }
    }

    protected override global::Sungero.Domain.Shared.IEntityState CreateState()
    {
      return new global::Sungero.Docflow.Shared.OutgoingDocumentBaseState(this);
    }

    public new global::Sungero.Docflow.IOutgoingDocumentBaseInfo Info
    {
      get
      {
        return (global::Sungero.Docflow.IOutgoingDocumentBaseInfo)base.Info;
      }
    }

    public new global::Sungero.Docflow.IOutgoingDocumentBaseAccessRights AccessRights
    {
      get
      {
        return (global::Sungero.Docflow.IOutgoingDocumentBaseAccessRights)base.AccessRights;
      }
    }

    protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
    {
      return new global::Sungero.Docflow.Client.OutgoingDocumentBaseAccessRights(this);
    }

        protected global::Sungero.Domain.Client.SimpleProperty<global::System.Boolean?> _IsManyAddressees;

        public virtual global::System.Boolean? IsManyAddressees
        {
          get { return this._IsManyAddressees.Value; }
          set { this._IsManyAddressees.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.String> _DistributionCorrespondent;

        public virtual global::System.String DistributionCorrespondent
        {
          get { return this._DistributionCorrespondent.Value; }
          set { this._DistributionCorrespondent.Value = value; }
        }




              protected global::Sungero.Domain.Client.INavigationProperty<global::Sungero.Parties.ICounterparty> _Correspondent;

              public virtual global::Sungero.Parties.ICounterparty Correspondent
              {
              get
              {
                return this._Correspondent.Value as global::Sungero.Parties.ICounterparty;
              }

              set
              {
                (this._Correspondent as global::Sungero.Domain.Client.IProperty).Value = value;
              }
            }



              protected global::Sungero.Domain.Client.INavigationProperty<global::Sungero.Docflow.IIncomingDocumentBase> _InResponseTo;

              public virtual global::Sungero.Docflow.IIncomingDocumentBase InResponseTo
              {
              get
              {
                return this._InResponseTo.Value as global::Sungero.Docflow.IIncomingDocumentBase;
              }

              set
              {
                (this._InResponseTo as global::Sungero.Domain.Client.IProperty).Value = value;
              }
            }



              protected global::Sungero.Domain.Client.INavigationProperty<global::Sungero.Parties.IContact> _Addressee;

              public virtual global::Sungero.Parties.IContact Addressee
              {
              get
              {
                return this._Addressee.Value as global::Sungero.Parties.IContact;
              }

              set
              {
                (this._Addressee as global::Sungero.Domain.Client.IProperty).Value = value;
              }
            }







          protected global::Sungero.Domain.Client.IListProperty<global::Sungero.Docflow.IOutgoingDocumentBaseAddressees> _Addressees;

          virtual public global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Docflow.IOutgoingDocumentBaseAddressees> Addressees
          {
            get { return this._Addressees.Value; }
          }






    private object _AddresseesActionsHandlers;

    public object AddresseesActionsHandlers
    {
      get
      {
        if (this._AddresseesActionsHandlers == null)
          this._AddresseesActionsHandlers = this.CreateAddresseesActionsHandlers();
        return this._AddresseesActionsHandlers;
      }
    }

    private object _AddresseesCollectionActionsHandlers;

    public object AddresseesCollectionActionsHandlers
    {
      get
      {
        if (this._AddresseesCollectionActionsHandlers == null)
          this._AddresseesCollectionActionsHandlers = this.CreateAddresseesCollectionActionsHandlers();
        return this._AddresseesCollectionActionsHandlers;
      }
    }

    #endregion

    #region Methods

    protected virtual object CreateAddresseesActionsHandlers()
    {
      return new global::Sungero.Docflow.Client.OutgoingDocumentBaseAddresseesActions();
    }

    protected virtual object CreateAddresseesCollectionActionsHandlers()
    {
      return new global::Sungero.Docflow.Client.OutgoingDocumentBaseAddresseesCollectionActions();
    }


    protected override global::Sungero.Domain.Client.EntityFunctions CreateClientFunctions()
    {
      return new global::Sungero.Docflow.Client.OutgoingDocumentBaseFunctions(this);
    }

    protected override global::Sungero.Domain.Shared.EntityFunctions CreateSharedFunctions()
    {
      return new global::Sungero.Docflow.Shared.OutgoingDocumentBaseFunctions(this);
    }
    protected override object CreateHandlers() {
      return new global::Sungero.Docflow.OutgoingDocumentBaseClientHandlers(this);
    }
    protected override object CreateSharedHandlers() {
      return new global::Sungero.Docflow.OutgoingDocumentBaseSharedHandlers(this);
    }

    #endregion

    #region Framework events

    protected void CorrespondentChangedHandler()
    {
      var args = new global::Sungero.Docflow.Shared.OutgoingDocumentBaseCorrespondentChangedEventArgs(this.State.Properties.Correspondent, this.Correspondent, this);
     ((global::Sungero.Docflow.OutgoingDocumentBaseSharedHandlers)this.SharedHandlers).CorrespondentChanged(args);
    }

    protected void InResponseToChangedHandler()
    {
      var args = new global::Sungero.Docflow.Shared.OutgoingDocumentBaseInResponseToChangedEventArgs(this.State.Properties.InResponseTo, this.InResponseTo, this);
     ((global::Sungero.Docflow.OutgoingDocumentBaseSharedHandlers)this.SharedHandlers).InResponseToChanged(args);
    }

    protected void AddresseeChangedHandler()
    {
      var args = new global::Sungero.Docflow.Shared.OutgoingDocumentBaseAddresseeChangedEventArgs(this.State.Properties.Addressee, this.Addressee, this);
     ((global::Sungero.Docflow.OutgoingDocumentBaseSharedHandlers)this.SharedHandlers).AddresseeChanged(args);
    }

    protected void IsManyAddresseesChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.BooleanPropertyChangedEventArgs(this.State.Properties.IsManyAddressees, this.IsManyAddressees, this);
     ((global::Sungero.Docflow.OutgoingDocumentBaseSharedHandlers)this.SharedHandlers).IsManyAddresseesChanged(args);
    }

    protected void AddresseesChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.CollectionPropertyChangedEventArgs(this);
     ((global::Sungero.Docflow.OutgoingDocumentBaseSharedHandlers)this.SharedHandlers).AddresseesChanged(args);
    }

    protected void DistributionCorrespondentChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.DistributionCorrespondent, this.DistributionCorrespondent, this);
     ((global::Sungero.Docflow.OutgoingDocumentBaseSharedHandlers)this.SharedHandlers).DistributionCorrespondentChanged(args);
    }





    protected virtual global::Sungero.Docflow.OutgoingDocumentBaseAddresseesSharedCollectionHandlers CreateAddresseesAddedHandler(global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.Docflow.OutgoingDocumentBaseAddresseesSharedCollectionHandlers(this, e.Value, null, e.Source);
    }

    protected virtual global::Sungero.Docflow.OutgoingDocumentBaseAddresseesSharedCollectionHandlers CreateAddresseesDeletedHandler(global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.Docflow.OutgoingDocumentBaseAddresseesSharedCollectionHandlers(this, null, e.Value, null);
    }

    protected virtual void AddresseesAddedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {  
      var collectionHandlers = this.CreateAddresseesAddedHandler(e);
      if (collectionHandlers != null)
      {
        var args = new global::Sungero.Domain.Shared.CollectionPropertyAddedEventArgs(this);
        collectionHandlers.AddresseesAdded(args);
      }
    }

    protected virtual void AddresseesDeletedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {  
      var collectionHandlers = this.CreateAddresseesDeletedHandler(e);
      if (collectionHandlers != null)
      {
        var args = new global::Sungero.Domain.Shared.CollectionPropertyDeletedEventArgs(this);
        collectionHandlers.AddresseesDeleted(args);
      }
    }


  protected global::Sungero.Parties.ICounterparty CorrespondentValueInputHandler(global::Sungero.Parties.ICounterparty value)
  {
    var args = new global::Sungero.Docflow.Client.OutgoingDocumentBaseCorrespondentValueInputEventArgs(this.Correspondent, value, this, this.Info.Properties.Correspondent);
    ((global::Sungero.Docflow.OutgoingDocumentBaseClientHandlers)this.Handlers).CorrespondentValueInput(args);
    return args.NewValue;
  }

  protected global::Sungero.Docflow.IIncomingDocumentBase InResponseToValueInputHandler(global::Sungero.Docflow.IIncomingDocumentBase value)
  {
    var args = new global::Sungero.Docflow.Client.OutgoingDocumentBaseInResponseToValueInputEventArgs(this.InResponseTo, value, this, this.Info.Properties.InResponseTo);
    ((global::Sungero.Docflow.OutgoingDocumentBaseClientHandlers)this.Handlers).InResponseToValueInput(args);
    return args.NewValue;
  }

  protected global::Sungero.Parties.IContact AddresseeValueInputHandler(global::Sungero.Parties.IContact value)
  {
    var args = new global::Sungero.Docflow.Client.OutgoingDocumentBaseAddresseeValueInputEventArgs(this.Addressee, value, this, this.Info.Properties.Addressee);
    ((global::Sungero.Docflow.OutgoingDocumentBaseClientHandlers)this.Handlers).AddresseeValueInput(args);
    return args.NewValue;
  }

  protected global::System.Boolean? IsManyAddresseesValueInputHandler(global::System.Boolean? value)
  {
    var args = new global::Sungero.Presentation.BooleanValueInputEventArgs(this.IsManyAddressees, value, this, this.Info.Properties.IsManyAddressees);
    ((global::Sungero.Docflow.OutgoingDocumentBaseClientHandlers)this.Handlers).IsManyAddresseesValueInput(args);
    return args.NewValue;
  }


  protected global::System.String DistributionCorrespondentValueInputHandler(global::System.String value)
  {
    var args = new global::Sungero.Presentation.StringValueInputEventArgs(this.DistributionCorrespondent, value, this, this.Info.Properties.DistributionCorrespondent);
    ((global::Sungero.Docflow.OutgoingDocumentBaseClientHandlers)this.Handlers).DistributionCorrespondentValueInput(args);
    return args.NewValue;
  }



    #endregion

    #region Constructors




















              protected virtual void InitCorrespondentNavigationProperty()
              {
                this._Correspondent = new global::Sungero.Domain.Client.NavigationProperty<global::Sungero.Parties.ICounterparty>("Correspondent", this);
                this._Correspondent.ValueChanged += (sender, e) => { this.CorrespondentChangedHandler(); };
                this.AddProperty(this._Correspondent as global::Sungero.Domain.Client.IProperty);
              }




              protected virtual void InitInResponseToNavigationProperty()
              {
                this._InResponseTo = new global::Sungero.Domain.Client.NavigationProperty<global::Sungero.Docflow.IIncomingDocumentBase>("InResponseTo", this);
                this._InResponseTo.ValueChanged += (sender, e) => { this.InResponseToChangedHandler(); };
                this.AddProperty(this._InResponseTo as global::Sungero.Domain.Client.IProperty);
              }




              protected virtual void InitAddresseeNavigationProperty()
              {
                this._Addressee = new global::Sungero.Domain.Client.NavigationProperty<global::Sungero.Parties.IContact>("Addressee", this);
                this._Addressee.ValueChanged += (sender, e) => { this.AddresseeChangedHandler(); };
                this.AddProperty(this._Addressee as global::Sungero.Domain.Client.IProperty);
              }



            protected override void InitVersionsCollectionProperty()
            {
              this._Versions = new global::Sungero.Domain.Client.ListProperty<global::Sungero.Docflow.IOutgoingDocumentBaseVersions>("Versions", this);
              this._Versions.ValueChanged += (sender, e) => { this.VersionsChangedHandler(); };
              this.AddProperty((global::Sungero.Domain.Client.IProperty)this._Versions);
              this.SetVersionsEventHandlers();
            }


            protected override void InitTrackingCollectionProperty()
            {
              this._Tracking = new global::Sungero.Domain.Client.ListProperty<global::Sungero.Docflow.IOutgoingDocumentBaseTracking>("Tracking", this);
              this._Tracking.ValueChanged += (sender, e) => { this.TrackingChangedHandler(); };
              this.AddProperty((global::Sungero.Domain.Client.IProperty)this._Tracking);
              this.SetTrackingEventHandlers();
            }

            protected virtual void InitAddresseesCollectionProperty()
            {
              this._Addressees = new global::Sungero.Domain.Client.ListProperty<global::Sungero.Docflow.IOutgoingDocumentBaseAddressees>("Addressees", this);
              this._Addressees.ValueChanged += (sender, e) => { this.AddresseesChangedHandler(); };
              this.AddProperty((global::Sungero.Domain.Client.IProperty)this._Addressees);
              this.SetAddresseesEventHandlers();
            }

            protected void SetAddresseesEventHandlers()
            {
              this._Addressees.ChildEntityAdded += this.AddresseesAddedHandler;
              this._Addressees.ChildEntityDeleted += this.AddresseesDeletedHandler;
            }


    public OutgoingDocumentBase()
    {
            this._IsManyAddressees = new global::Sungero.Domain.Client.SimpleProperty<global::System.Boolean?>("IsManyAddressees", this);
            this._IsManyAddressees.ValueChanged += (sender, e) => { this.IsManyAddresseesChangedHandler(); };
            this.AddProperty(this._IsManyAddressees);

            this._DistributionCorrespondent = new global::Sungero.Domain.Client.SimpleProperty<global::System.String>("DistributionCorrespondent", this);
            this._DistributionCorrespondent.ValueChanged += (sender, e) => { this.DistributionCorrespondentChangedHandler(); };
            this.AddProperty(this._DistributionCorrespondent);

            this.InitCorrespondentNavigationProperty();

            this.InitInResponseToNavigationProperty();

            this.InitAddresseeNavigationProperty();


            this.InitAddresseesCollectionProperty();







    }

    #endregion

  }
}

// ==================================================================
// OutgoingDocumentBasePresenter.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Client
{
  public class OutgoingDocumentBasePresenter<T> :
    global::Sungero.Docflow.Client.OfficialDocumentPresenter<T>
    where T : class, global::Sungero.Docflow.IOutgoingDocumentBase
  {
    #region Fields and properties

          private global::System.Windows.Input.ICommand _PrintEnvelopeCommand;

          public global::System.Windows.Input.ICommand PrintEnvelopeCommand
          {
            get
            {
              if (this._PrintEnvelopeCommand == null)
                  this._PrintEnvelopeCommand = new global::Sungero.Domain.Client.SingleEntityCommand<T>("PrintEnvelope", this, this.PrintEnvelope, this.CanPrintEnvelope) { IsEmptyParameterAllowed = true };
              return this._PrintEnvelopeCommand;
            }
          }
          private global::System.Windows.Input.ICommand _PrintEnvelopeCardCommand;

          public global::System.Windows.Input.ICommand PrintEnvelopeCardCommand
          {
            get
            {
              if (this._PrintEnvelopeCardCommand == null)
                  this._PrintEnvelopeCardCommand = new global::Sungero.Domain.Client.SingleEntityCommand<T>("PrintEnvelopeCard", this, this.PrintEnvelopeCard, this.CanPrintEnvelopeCard) { IsEmptyParameterAllowed = true };
              return this._PrintEnvelopeCardCommand;
            }
          }
          private global::System.Windows.Input.ICommand _SaveToDistributionListCommand;

          public global::System.Windows.Input.ICommand SaveToDistributionListCommand
          {
            get
            {
              if (this._SaveToDistributionListCommand == null)
                  this._SaveToDistributionListCommand = new global::Sungero.Domain.Client.SingleChildEntityCommand<global::Sungero.Docflow.IOutgoingDocumentBaseAddressees>("SaveToDistributionList", this, this.SaveToDistributionList, this.CanSaveToDistributionList) { IsEmptyParameterAllowed = true };
              return this._SaveToDistributionListCommand;
            }
          }
          private global::System.Windows.Input.ICommand _FillFromDistributionListCommand;

          public global::System.Windows.Input.ICommand FillFromDistributionListCommand
          {
            get
            {
              if (this._FillFromDistributionListCommand == null)
                  this._FillFromDistributionListCommand = new global::Sungero.Domain.Client.SingleChildEntityCommand<global::Sungero.Docflow.IOutgoingDocumentBaseAddressees>("FillFromDistributionList", this, this.FillFromDistributionList, this.CanFillFromDistributionList) { IsEmptyParameterAllowed = true };
              return this._FillFromDistributionListCommand;
            }
          }
          private global::System.Windows.Input.ICommand _PrintDistributionSheetCommand;

          public global::System.Windows.Input.ICommand PrintDistributionSheetCommand
          {
            get
            {
              if (this._PrintDistributionSheetCommand == null)
                  this._PrintDistributionSheetCommand = new global::Sungero.Domain.Client.SingleEntityCommand<T>("PrintDistributionSheet", this, this.PrintDistributionSheet, this.CanPrintDistributionSheet) { IsEmptyParameterAllowed = true };
              return this._PrintDistributionSheetCommand;
            }
          }
          private global::System.Windows.Input.ICommand _PrintDistributionSheetChildCommand;

          public global::System.Windows.Input.ICommand PrintDistributionSheetChildCommand
          {
            get
            {
              if (this._PrintDistributionSheetChildCommand == null)
                  this._PrintDistributionSheetChildCommand = new global::Sungero.Domain.Client.SingleChildEntityCommand<global::Sungero.Docflow.IOutgoingDocumentBaseAddressees>("PrintDistributionSheetChild", this, this.PrintDistributionSheetChild, this.CanPrintDistributionSheetChild) { IsEmptyParameterAllowed = true };
              return this._PrintDistributionSheetChildCommand;
            }
          }
          private global::System.Windows.Input.ICommand _ChangeManyAddresseesCommand;

          public global::System.Windows.Input.ICommand ChangeManyAddresseesCommand
          {
            get
            {
              if (this._ChangeManyAddresseesCommand == null)
                  this._ChangeManyAddresseesCommand = new global::Sungero.Domain.Client.SingleEntityCommand<T>("ChangeManyAddressees", this, this.ChangeManyAddressees, this.CanChangeManyAddressees) { IsEmptyParameterAllowed = true };
              return this._ChangeManyAddresseesCommand;
            }
          }




    #endregion

    #region Methods

              private bool CanPrintEnvelope(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfCanExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this);
                var entities = new global::System.Collections.ObjectModel.Collection<T> { entity };
                return global::Sungero.Domain.Client.ActionExecutor.CanExecuteEntityCollectionAction<
                  global::Sungero.Docflow.Client.OutgoingDocumentBaseCollectionActions, global::Sungero.Domain.Client.WpfCanExecuteActionArgs>(entities, args,
                    actionHandlers => (global::System.Func<global::Sungero.Domain.Client.WpfCanExecuteActionArgs, bool>)actionHandlers.CanPrintEnvelope);
              }

              private void PrintEnvelope(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this, entity.Info.Actions.PrintEnvelope);
                var entities = new global::System.Collections.ObjectModel.Collection<T> { entity };
                global::Sungero.Domain.Client.ActionExecutor.ExecuteEntityCollectionAction<
                  global::Sungero.Docflow.Client.OutgoingDocumentBaseCollectionActions, global::Sungero.Domain.Client.WpfExecuteActionArgs>(entities, args,
                    actionHandlers => (global::System.Action<global::Sungero.Domain.Client.WpfExecuteActionArgs>)actionHandlers.PrintEnvelope);
              }

              private bool CanPrintEnvelopeCard(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfCanExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this);
                return ((Sungero.Docflow.Client.OutgoingDocumentBaseActions)(entity as Sungero.Docflow.Client.OutgoingDocumentBase).ActionsHandlers).CanPrintEnvelopeCard(args);
              }

              private void PrintEnvelopeCard(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this, entity.Info.Actions.PrintEnvelopeCard);
                ((Sungero.Docflow.Client.OutgoingDocumentBaseActions)(entity as Sungero.Docflow.Client.OutgoingDocumentBase).ActionsHandlers).PrintEnvelopeCard(args);
              }

            protected virtual bool CanSaveToDistributionList(global::Sungero.Domain.Shared.IChildEntity selectedEntity,
              global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Domain.Shared.IChildEntity> entityCollection)
            {
              var args = new global::Sungero.Domain.Client.WpfCanExecuteChildCollectionActionArgs(this.Entity, this);
              return Sungero.Docflow.Client.OutgoingDocumentBaseAddresseesStaticActions.CanSaveToDistributionList(args);
            }

            protected virtual void SaveToDistributionList(global::Sungero.Domain.Shared.IChildEntity selectedEntity,
              global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Domain.Shared.IChildEntity> entityCollection)
            {
              var args = new global::Sungero.Domain.Client.WpfExecuteChildCollectionActionArgs(this.Entity, this);
    Sungero.Docflow.Client.OutgoingDocumentBaseAddresseesStaticActions.SaveToDistributionList(args);
            }
            protected virtual bool CanFillFromDistributionList(global::Sungero.Domain.Shared.IChildEntity selectedEntity,
              global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Domain.Shared.IChildEntity> entityCollection)
            {
              var args = new global::Sungero.Domain.Client.WpfCanExecuteChildCollectionActionArgs(this.Entity, this);
              return Sungero.Docflow.Client.OutgoingDocumentBaseAddresseesStaticActions.CanFillFromDistributionList(args);
            }

            protected virtual void FillFromDistributionList(global::Sungero.Domain.Shared.IChildEntity selectedEntity,
              global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Domain.Shared.IChildEntity> entityCollection)
            {
              var args = new global::Sungero.Domain.Client.WpfExecuteChildCollectionActionArgs(this.Entity, this);
    Sungero.Docflow.Client.OutgoingDocumentBaseAddresseesStaticActions.FillFromDistributionList(args);
            }
              private bool CanPrintDistributionSheet(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfCanExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this);
                return ((Sungero.Docflow.Client.OutgoingDocumentBaseActions)(entity as Sungero.Docflow.Client.OutgoingDocumentBase).ActionsHandlers).CanPrintDistributionSheet(args);
              }

              private void PrintDistributionSheet(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this, entity.Info.Actions.PrintDistributionSheet);
                ((Sungero.Docflow.Client.OutgoingDocumentBaseActions)(entity as Sungero.Docflow.Client.OutgoingDocumentBase).ActionsHandlers).PrintDistributionSheet(args);
              }

            protected virtual bool CanPrintDistributionSheetChild(global::Sungero.Domain.Shared.IChildEntity selectedEntity,
              global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Domain.Shared.IChildEntity> entityCollection)
            {
              var args = new global::Sungero.Domain.Client.WpfCanExecuteChildCollectionActionArgs(this.Entity, this);
              return Sungero.Docflow.Client.OutgoingDocumentBaseAddresseesStaticActions.CanPrintDistributionSheetChild(args);
            }

            protected virtual void PrintDistributionSheetChild(global::Sungero.Domain.Shared.IChildEntity selectedEntity,
              global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Domain.Shared.IChildEntity> entityCollection)
            {
              var args = new global::Sungero.Domain.Client.WpfExecuteChildCollectionActionArgs(this.Entity, this);
    Sungero.Docflow.Client.OutgoingDocumentBaseAddresseesStaticActions.PrintDistributionSheetChild(args);
            }
              private bool CanChangeManyAddressees(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfCanExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this);
                return ((Sungero.Docflow.Client.OutgoingDocumentBaseActions)(entity as Sungero.Docflow.Client.OutgoingDocumentBase).ActionsHandlers).CanChangeManyAddressees(args);
              }

              private void ChangeManyAddressees(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this, entity.Info.Actions.ChangeManyAddressees);
                ((Sungero.Docflow.Client.OutgoingDocumentBaseActions)(entity as Sungero.Docflow.Client.OutgoingDocumentBase).ActionsHandlers).ChangeManyAddressees(args);
              }


    #endregion

    #region Framework events

    protected override void EntityPropertyChangedEventHandler(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
    {
      base.EntityPropertyChangedEventHandler(sender, e);
    }

    #endregion

              protected global::Sungero.Domain.Client.IEntityCollectionPresenter _CorrespondentCollectionPresenter;
              public global::Sungero.Domain.Client.IEntityCollectionPresenter CorrespondentCollectionPresenter
              {
          get { return this._CorrespondentCollectionPresenter; }
        }
              protected global::Sungero.Domain.Client.IEntityCollectionPresenter _InResponseToCollectionPresenter;
              public global::Sungero.Domain.Client.IEntityCollectionPresenter InResponseToCollectionPresenter
              {
          get { return this._InResponseToCollectionPresenter; }
        }
              protected global::Sungero.Domain.Client.IEntityCollectionPresenter _AddresseeCollectionPresenter;
              public global::Sungero.Domain.Client.IEntityCollectionPresenter AddresseeCollectionPresenter
              {
          get { return this._AddresseeCollectionPresenter; }
        }


                          protected global::Sungero.Domain.Client.IEntityCollectionPresenter _AddresseesCorrespondentCollectionPresenter;
                          public global::Sungero.Domain.Client.IEntityCollectionPresenter AddresseesCorrespondentCollectionPresenter
                          {
                  get { return this._AddresseesCorrespondentCollectionPresenter; }
                }
                          protected global::Sungero.Domain.Client.IEntityCollectionPresenter _AddresseesAddresseeCollectionPresenter;
                          public global::Sungero.Domain.Client.IEntityCollectionPresenter AddresseesAddresseeCollectionPresenter
                          {
                  get { return this._AddresseesAddresseeCollectionPresenter; }
                }
                          protected global::Sungero.Domain.Client.IEntityCollectionPresenter _AddresseesDeliveryMethodCollectionPresenter;
                          public global::Sungero.Domain.Client.IEntityCollectionPresenter AddresseesDeliveryMethodCollectionPresenter
                          {
                  get { return this._AddresseesDeliveryMethodCollectionPresenter; }
                }



    #region Constructors

    private void Init()
    {
              this._StorageCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.CoreEntities.IStorage>(() => this.Entity.Id, typeof(T), "Storage");

              this._ProjectCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Docflow.IProjectBase>(() => this.Entity.Id, typeof(T), "Project");

              this._LeadingDocumentCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Docflow.IOfficialDocument>(() => this.Entity.Id, typeof(T), "LeadingDocument");

              this._PreparedByCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Company.IEmployee>(() => this.Entity.Id, typeof(T), "PreparedBy");

              this._AuthorCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.CoreEntities.IUser>(() => this.Entity.Id, typeof(T), "Author");

              this._AssociatedApplicationCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Content.IAssociatedApplication>(() => this.Entity.Id, typeof(T), "AssociatedApplication");

              this._DocumentRegisterCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationProperty<global::Sungero.Docflow.IDocumentRegister>(() => this.Entity, typeof(T), "DocumentRegister");

              this._DeliveryMethodCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Docflow.IMailDeliveryMethod>(() => this.Entity.Id, typeof(T), "DeliveryMethod");

              this._CaseFileCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Docflow.ICaseFile>(() => this.Entity.Id, typeof(T), "CaseFile");

              this._DeliveredToCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Company.IEmployee>(() => this.Entity.Id, typeof(T), "DeliveredTo");

              this._ResponsibleForReturnEmployeeCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Company.IEmployee>(() => this.Entity.Id, typeof(T), "ResponsibleForReturnEmployee");

              this._DocumentKindCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationProperty<global::Sungero.Docflow.IDocumentKind>(() => this.Entity, typeof(T), "DocumentKind");

              this._BusinessUnitCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Company.IBusinessUnit>(() => this.Entity.Id, typeof(T), "BusinessUnit");

              this._OurSignatoryCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationProperty<global::Sungero.Company.IEmployee>(() => this.Entity, typeof(T), "OurSignatory");

              this._DocumentGroupCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationProperty<global::Sungero.Docflow.IDocumentGroupBase>(() => this.Entity, typeof(T), "DocumentGroup");

              this._AssigneeCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Company.IEmployee>(() => this.Entity.Id, typeof(T), "Assignee");

              this._DepartmentCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Company.IDepartment>(() => this.Entity.Id, typeof(T), "Department");

                  this._CorrespondentCollectionPresenter = this.CreateCollectionPresenterForNavigationProperty<global::Sungero.Parties.ICounterparty>(global::System.Guid.Parse("40e6a5d2-7df6-4ac6-bc85-8c0b5cd139f8"));
              this._CorrespondentCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Parties.ICounterparty>(() => this.Entity.Id, typeof(T), "Correspondent");

                  this._InResponseToCollectionPresenter = this.CreateCollectionPresenterForNavigationProperty<global::Sungero.Docflow.IIncomingDocumentBase>(global::System.Guid.Parse("8d4a139a-91d2-4f56-a937-387ae16fd75e"));
              this._InResponseToCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationProperty<global::Sungero.Docflow.IIncomingDocumentBase>(() => this.Entity, typeof(T), "InResponseTo");

                  this._AddresseeCollectionPresenter = this.CreateCollectionPresenterForNavigationProperty<global::Sungero.Parties.IContact>(global::System.Guid.Parse("b022aa98-a169-4cb2-8c06-1bbc0d0e607c"));
              this._AddresseeCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationProperty<global::Sungero.Parties.IContact>(() => this.Entity, typeof(T), "Addressee");


                        this._VersionsAuthorCollectionPresenter
                        .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.CoreEntities.IUser>(() => this.Entity.Id, typeof(Sungero.Docflow.IOutgoingDocumentBaseVersions), "Author");

                        this._VersionsModifiedByCollectionPresenter
                        .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.CoreEntities.IUser>(() => this.Entity.Id, typeof(Sungero.Docflow.IOutgoingDocumentBaseVersions), "ModifiedBy");

                        this._VersionsAssociatedApplicationCollectionPresenter
                        .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Content.IAssociatedApplication>(() => this.Entity.Id, typeof(Sungero.Docflow.IOutgoingDocumentBaseVersions), "AssociatedApplication");

                        this._VersionsBodyAssociatedApplicationCollectionPresenter
                        .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Content.IAssociatedApplication>(() => this.Entity.Id, typeof(Sungero.Docflow.IOutgoingDocumentBaseVersions), "BodyAssociatedApplication");


                        this._TrackingDeliveredToCollectionPresenter
                        .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Company.IEmployee>(() => this.Entity.Id, typeof(Sungero.Docflow.IOutgoingDocumentBaseTracking), "DeliveredTo");

                        this._TrackingReturnTaskCollectionPresenter
                        .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Workflow.ITask>(() => this.Entity.Id, typeof(Sungero.Docflow.IOutgoingDocumentBaseTracking), "ReturnTask");


                          this._AddresseesCorrespondentCollectionPresenter = this.CreateCollectionPresenterForNavigationProperty<global::Sungero.Parties.ICounterparty>(global::System.Guid.Parse("5be3287f-2fa7-4f34-a5f3-9771528aa6ba"));
                        this._AddresseesCorrespondentCollectionPresenter
                        .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Parties.ICounterparty>(() => this.Entity.Id, typeof(Sungero.Docflow.IOutgoingDocumentBaseAddressees), "Correspondent");

                          this._AddresseesAddresseeCollectionPresenter = this.CreateCollectionPresenterForNavigationProperty<global::Sungero.Parties.IContact>(global::System.Guid.Parse("9091fbcf-4ad5-4256-950e-0e2e674eb648"));
                        this._AddresseesAddresseeCollectionPresenter
                        .Query = global::Sungero.Domain.Client.Session.GetValuesForChildNavigationProperty<global::Sungero.Parties.IContact>(
                          () => this.ChildEntityCollectionPresenters.GetPresenter<global::Sungero.Docflow.IOutgoingDocumentBaseAddressees>().FocusedEntity,
                          typeof(Sungero.Docflow.IOutgoingDocumentBaseAddressees),
                          () => this.Entity,
                          "Addressee");

                          this._AddresseesDeliveryMethodCollectionPresenter = this.CreateCollectionPresenterForNavigationProperty<global::Sungero.Docflow.IMailDeliveryMethod>(global::System.Guid.Parse("de7e27f2-975c-4cd2-91b3-71b7b135a389"));
                        this._AddresseesDeliveryMethodCollectionPresenter
                        .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Docflow.IMailDeliveryMethod>(() => this.Entity.Id, typeof(Sungero.Docflow.IOutgoingDocumentBaseAddressees), "DeliveryMethod");


    }

    public OutgoingDocumentBasePresenter()
    {
      this.Init();
    }

    #endregion
  }
}

// ==================================================================
// OutgoingDocumentBaseCollectionPresenter.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Client
{
  public class OutgoingDocumentBaseCollectionPresenter<T> : 
    global::Sungero.Docflow.Client.OfficialDocumentCollectionPresenter<T>
    where T: class, global::Sungero.Docflow.IOutgoingDocumentBase
  {
    #region Actions

          private global::System.Windows.Input.ICommand _DocumentRegisterCommand;  

          public global::System.Windows.Input.ICommand DocumentRegisterCommand 
          { 
            get
            { 
              if (this._DocumentRegisterCommand == null)
                this._DocumentRegisterCommand = new global::Sungero.Domain.Client.PresenterCommand("DocumentRegister", this, this.DocumentRegister, this.CanDocumentRegister);
              return this._DocumentRegisterCommand; 
            }
          }
          private global::System.Windows.Input.ICommand _PrintEnvelopeCommand;  

          public global::System.Windows.Input.ICommand PrintEnvelopeCommand 
          { 
            get
            { 
              if (this._PrintEnvelopeCommand == null)
                this._PrintEnvelopeCommand = new global::Sungero.Domain.Client.EntityCollectionCommand<T>("PrintEnvelope", this, this.PrintEnvelope, this.CanPrintEnvelope) { IsEmptyParameterAllowed = true };
              return this._PrintEnvelopeCommand; 
            }
          }
          private global::System.Windows.Input.ICommand _MailRegisterCommand;  

          public global::System.Windows.Input.ICommand MailRegisterCommand 
          { 
            get
            { 
              if (this._MailRegisterCommand == null)
                this._MailRegisterCommand = new global::Sungero.Domain.Client.EntityCollectionCommand<T>("MailRegister", this, this.MailRegister, this.CanMailRegister) { IsEmptyParameterAllowed = true };
              return this._MailRegisterCommand; 
            }
          }
          private global::System.Windows.Input.ICommand _PrintDistributionSheetCommand;  

          public global::System.Windows.Input.ICommand PrintDistributionSheetCommand 
          { 
            get
            { 
              if (this._PrintDistributionSheetCommand == null)
                this._PrintDistributionSheetCommand = new global::Sungero.Domain.Client.SingleEntityCommand<T>("PrintDistributionSheet", this, this.PrintDistributionSheet, this.CanPrintDistributionSheet) { IsEmptyParameterAllowed = true };
              return this._PrintDistributionSheetCommand; 
            }
          }



    #endregion

    #region Methods

        protected virtual bool CanDocumentRegister()
        {
          var args = new global::Sungero.Domain.Client.WpfCanExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Collection, null, this);
          return Sungero.Docflow.Client.OutgoingDocumentBaseStaticActions.CanDocumentRegister(args);
        }

        protected virtual void DocumentRegister()
        {
          var args = new global::Sungero.Domain.Client.WpfExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Collection, null, this);
          Sungero.Docflow.Client.OutgoingDocumentBaseStaticActions.DocumentRegister(args);
        }

        private bool CanPrintEnvelope(global::System.Collections.Generic.ICollection<T> entities)
        {
          var args = new global::Sungero.Domain.Client.WpfCanExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Collection, null, this);
          return global::Sungero.Domain.Client.ActionExecutor.CanExecuteEntityCollectionAction<
            global::Sungero.Docflow.Client.OutgoingDocumentBaseCollectionActions, global::Sungero.Domain.Client.WpfCanExecuteActionArgs>(entities, args,
              actionHandlers => (global::System.Func<global::Sungero.Domain.Client.WpfCanExecuteActionArgs, bool>)actionHandlers.CanPrintEnvelope);
        }

        private void PrintEnvelope(global::System.Collections.Generic.ICollection<T> entities)
        {
          var args = new global::Sungero.Domain.Client.WpfExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Collection, null, this);
          global::Sungero.Domain.Client.ActionExecutor.ExecuteEntityCollectionAction<
            global::Sungero.Docflow.Client.OutgoingDocumentBaseCollectionActions, global::Sungero.Domain.Client.WpfExecuteActionArgs>(entities, args,
              actionHandlers => (global::System.Action<global::Sungero.Domain.Client.WpfExecuteActionArgs>)actionHandlers.PrintEnvelope);
        }

        private bool CanMailRegister(global::System.Collections.Generic.ICollection<T> entities)
        {
          var args = new global::Sungero.Domain.Client.WpfCanExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Collection, null, this);
          return global::Sungero.Domain.Client.ActionExecutor.CanExecuteEntityCollectionAction<
            global::Sungero.Docflow.Client.OutgoingDocumentBaseCollectionActions, global::Sungero.Domain.Client.WpfCanExecuteActionArgs>(entities, args,
              actionHandlers => (global::System.Func<global::Sungero.Domain.Client.WpfCanExecuteActionArgs, bool>)actionHandlers.CanMailRegister);
        }

        private void MailRegister(global::System.Collections.Generic.ICollection<T> entities)
        {
          var args = new global::Sungero.Domain.Client.WpfExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Collection, null, this);
          global::Sungero.Domain.Client.ActionExecutor.ExecuteEntityCollectionAction<
            global::Sungero.Docflow.Client.OutgoingDocumentBaseCollectionActions, global::Sungero.Domain.Client.WpfExecuteActionArgs>(entities, args,
              actionHandlers => (global::System.Action<global::Sungero.Domain.Client.WpfExecuteActionArgs>)actionHandlers.MailRegister);
        }

        private bool CanPrintDistributionSheet(T entity)
        {
          var args = new global::Sungero.Domain.Client.WpfCanExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Collection, entity, this);
          return ((Sungero.Docflow.Client.OutgoingDocumentBaseActions)(entity as Sungero.Docflow.Client.OutgoingDocumentBase).ActionsHandlers).CanPrintDistributionSheet(args);
        }

        private void PrintDistributionSheet(T entity)
        {
          var args = new global::Sungero.Domain.Client.WpfExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Collection, entity, this, entity.Info.Actions.PrintDistributionSheet);
          ((Sungero.Docflow.Client.OutgoingDocumentBaseActions)(entity as Sungero.Docflow.Client.OutgoingDocumentBase).ActionsHandlers).PrintDistributionSheet(args);
        }



    #endregion

    public OutgoingDocumentBaseCollectionPresenter(global::System.Linq.IQueryable<T> query, OnLookup onLookup)
      : base(query, onLookup)
    {
    }

    public OutgoingDocumentBaseCollectionPresenter(global::System.Linq.IQueryable<T> query)
      : this(query, null) { }

    public OutgoingDocumentBaseCollectionPresenter(OnLookup onLookup)
      : this(null, onLookup) { }

    public OutgoingDocumentBaseCollectionPresenter()
      : this(null, null) { }
  }
}

// ==================================================================
// OutgoingDocumentBaseRepositoryImplementer.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Client
{ 
  public class OutgoingDocumentBaseRepositoryImplementer<T> : 
      global::Sungero.Docflow.Client.OfficialDocumentRepositoryImplementer<T>,
      global::Sungero.Docflow.IOutgoingDocumentBaseRepositoryImplementer<T>
      where T : global::Sungero.Docflow.IOutgoingDocumentBase
    {
       public new global::Sungero.Docflow.IOutgoingDocumentBaseAccessRights AccessRights
       {
          get { return (global::Sungero.Docflow.IOutgoingDocumentBaseAccessRights)base.AccessRights; }
       }

       public new global::Sungero.Docflow.IOutgoingDocumentBaseInfo Info
       {
          get { return (global::Sungero.Docflow.IOutgoingDocumentBaseInfo)base.Info; }
       }

       protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
       {
         return new global::Sungero.Docflow.Client.OutgoingDocumentBaseTypeAccessRights(typeof(T));
       }
    }
}

// ==================================================================
// OutgoingDocumentBaseAccessRights.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Client
{
  public class OutgoingDocumentBaseAccessRights : 
    Sungero.Docflow.Client.OfficialDocumentAccessRights, Sungero.Docflow.IOutgoingDocumentBaseAccessRights
  {

    public OutgoingDocumentBaseAccessRights(global::Sungero.Domain.Shared.IEntity entity) : base(entity)
    {
    }
  }

  public class OutgoingDocumentBaseTypeAccessRights : 
    Sungero.Docflow.Client.OfficialDocumentTypeAccessRights, Sungero.Docflow.IOutgoingDocumentBaseAccessRights
  {

    public OutgoingDocumentBaseTypeAccessRights(global::System.Type entityType) : base(entityType)
    {
    }
  }
}
