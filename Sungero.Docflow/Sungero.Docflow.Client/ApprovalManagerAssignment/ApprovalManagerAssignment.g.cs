
// ==================================================================
// ApprovalManagerAssignment.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Client
{
  public class ApprovalManagerAssignment :
    global::Sungero.Workflow.Client.Assignment, global::Sungero.Docflow.IApprovalManagerAssignment
  {
    #region Fields and properties

    public static new readonly global::System.Guid ClassTypeGuid = global::System.Guid.Parse("bbb08f45-60c1-4496-9ff6-b32caed44215");

    public override global::System.Guid TypeGuid
    {
      get { return global::Sungero.Docflow.Client.ApprovalManagerAssignment.ClassTypeGuid; }
    }

    public override string TypeName
    {
      get { return "Sungero.Docflow.IApprovalManagerAssignment, Sungero.Domain.Interfaces"; }
    }

      public override string DisplayValue
      {
        get { return this.Subject; }
        set { this.Subject = value; }
      }

      public override string DisplayPropertyName
      {
        get { return "Subject"; }
      }


    public new global::Sungero.Docflow.IApprovalManagerAssignmentState State
    {
      get
      {
        return (global::Sungero.Docflow.IApprovalManagerAssignmentState)base.State;
      }
    }

    protected override global::Sungero.Domain.Shared.IEntityState CreateState()
    {
      return new global::Sungero.Docflow.Shared.ApprovalManagerAssignmentState(this);
    }

    public new global::Sungero.Docflow.IApprovalManagerAssignmentInfo Info
    {
      get
      {
        return (global::Sungero.Docflow.IApprovalManagerAssignmentInfo)base.Info;
      }
    }

    public new global::Sungero.Docflow.IApprovalManagerAssignmentAccessRights AccessRights
    {
      get
      {
        return (global::Sungero.Docflow.IApprovalManagerAssignmentAccessRights)base.AccessRights;
      }
    }

    protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
    {
      return new global::Sungero.Docflow.Client.ApprovalManagerAssignmentAccessRights(this);
    }

        protected global::Sungero.Domain.Client.SimpleProperty<global::System.Int32?> _StageNumber;

        public virtual global::System.Int32? StageNumber
        {
          get { return this._StageNumber.Value; }
          set { this._StageNumber.Value = value; }
        }


        private static global::Sungero.Domain.Shared.EnumerationItems _ResultItems = new global::Sungero.Domain.Shared.EnumerationItems(
          global::Sungero.Workflow.Client.Assignment.ResultItems,
          typeof(global::Sungero.Docflow.ApprovalManagerAssignment.Result),
          typeof(global::Sungero.Docflow.Client.ApprovalManagerAssignment),
          "Result");

        public static new global::Sungero.Domain.Shared.EnumerationItems ResultItems
        {
          get { return global::Sungero.Docflow.Client.ApprovalManagerAssignment._ResultItems; }
        }

        public override global::Sungero.Domain.Shared.EnumerationItems ResultAllowedItems
        {
          get { return global::Sungero.Docflow.Client.ApprovalManagerAssignment.ResultItems; }
        }




              protected global::Sungero.Domain.Client.INavigationProperty<global::Sungero.Company.IEmployee> _Signatory;

              public virtual global::Sungero.Company.IEmployee Signatory
              {
              get
              {
                return this._Signatory.Value as global::Sungero.Company.IEmployee;
              }

              set
              {
                (this._Signatory as global::Sungero.Domain.Client.IProperty).Value = value;
              }
            }



              protected global::Sungero.Domain.Client.INavigationProperty<global::Sungero.Docflow.IApprovalStage> _Stage;

              public virtual global::Sungero.Docflow.IApprovalStage Stage
              {
              get
              {
                return this._Stage.Value as global::Sungero.Docflow.IApprovalStage;
              }

              set
              {
                (this._Stage as global::Sungero.Domain.Client.IProperty).Value = value;
              }
            }



              protected global::Sungero.Domain.Client.INavigationProperty<global::Sungero.Docflow.IApprovalRuleBase> _ApprovalRule;

              public virtual global::Sungero.Docflow.IApprovalRuleBase ApprovalRule
              {
              get
              {
                return this._ApprovalRule.Value as global::Sungero.Docflow.IApprovalRuleBase;
              }

              set
              {
                (this._ApprovalRule as global::Sungero.Domain.Client.IProperty).Value = value;
              }
            }



              protected global::Sungero.Domain.Client.INavigationProperty<global::Sungero.Company.IEmployee> _Addressee;

              public virtual global::Sungero.Company.IEmployee Addressee
              {
              get
              {
                return this._Addressee.Value as global::Sungero.Company.IEmployee;
              }

              set
              {
                (this._Addressee as global::Sungero.Domain.Client.IProperty).Value = value;
              }
            }



              protected global::Sungero.Domain.Client.INavigationProperty<global::Sungero.Docflow.IMailDeliveryMethod> _DeliveryMethod;

              public virtual global::Sungero.Docflow.IMailDeliveryMethod DeliveryMethod
              {
              get
              {
                return this._DeliveryMethod.Value as global::Sungero.Docflow.IMailDeliveryMethod;
              }

              set
              {
                (this._DeliveryMethod as global::Sungero.Domain.Client.IProperty).Value = value;
              }
            }



              protected global::Sungero.Domain.Client.INavigationProperty<global::Sungero.ExchangeCore.IExchangeService> _ExchangeService;

              public virtual global::Sungero.ExchangeCore.IExchangeService ExchangeService
              {
              get
              {
                return this._ExchangeService.Value as global::Sungero.ExchangeCore.IExchangeService;
              }

              set
              {
                (this._ExchangeService as global::Sungero.Domain.Client.IProperty).Value = value;
              }
            }



              protected global::Sungero.Domain.Client.INavigationProperty<global::Sungero.Company.IEmployee> _ReworkPerformer;

              public virtual global::Sungero.Company.IEmployee ReworkPerformer
              {
              get
              {
                return this._ReworkPerformer.Value as global::Sungero.Company.IEmployee;
              }

              set
              {
                (this._ReworkPerformer as global::Sungero.Domain.Client.IProperty).Value = value;
              }
            }







          protected global::Sungero.Domain.Client.IListProperty<global::Sungero.Docflow.IApprovalManagerAssignmentAddApprovers> _AddApprovers;

          virtual public global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Docflow.IApprovalManagerAssignmentAddApprovers> AddApprovers
          {
            get { return this._AddApprovers.Value; }
          }






    private object _AddApproversActionsHandlers;

    public object AddApproversActionsHandlers
    {
      get
      {
        if (this._AddApproversActionsHandlers == null)
          this._AddApproversActionsHandlers = this.CreateAddApproversActionsHandlers();
        return this._AddApproversActionsHandlers;
      }
    }

    private object _AddApproversCollectionActionsHandlers;

    public object AddApproversCollectionActionsHandlers
    {
      get
      {
        if (this._AddApproversCollectionActionsHandlers == null)
          this._AddApproversCollectionActionsHandlers = this.CreateAddApproversCollectionActionsHandlers();
        return this._AddApproversCollectionActionsHandlers;
      }
    }

    #endregion

    #region Methods

    protected override object CreateActionsHandlers()
    {
      return new global::Sungero.Docflow.Client.ApprovalManagerAssignmentActions(this);
    }

    protected override object CreateCollectionActionsHandlers()
    {
      return new global::Sungero.Docflow.Client.ApprovalManagerAssignmentCollectionActions();
    }

    protected override object CreateAnyChildEntityActionsHandlers()
    {
      return new global::Sungero.Docflow.Client.ApprovalManagerAssignmentAnyChildEntityActions();
    }

    protected override object CreateAnyChildEntityCollectionActionsHandlers()
    {
      return new global::Sungero.Docflow.Client.ApprovalManagerAssignmentAnyChildEntityCollectionActions();
    }

    protected object CreateAddApproversActionsHandlers()
    {
      return null;
    }

    protected object CreateAddApproversCollectionActionsHandlers()
    {
      return null;
    }


    protected override global::Sungero.Domain.Client.EntityFunctions CreateClientFunctions()
    {
      return new global::Sungero.Docflow.Client.ApprovalManagerAssignmentFunctions(this);
    }

    protected override global::Sungero.Domain.Shared.EntityFunctions CreateSharedFunctions()
    {
      return new global::Sungero.Docflow.Shared.ApprovalManagerAssignmentFunctions(this);
    }
    protected override object CreateHandlers() {
      return new global::Sungero.Docflow.ApprovalManagerAssignmentClientHandlers(this);
    }
    protected override object CreateSharedHandlers() {
      return new global::Sungero.Docflow.ApprovalManagerAssignmentSharedHandlers(this);
    }

    #endregion

    #region Framework events

    protected void AddApproversChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.CollectionPropertyChangedEventArgs(this);
     ((global::Sungero.Docflow.ApprovalManagerAssignmentSharedHandlers)this.SharedHandlers).AddApproversChanged(args);
    }

    protected void SignatoryChangedHandler()
    {
      var args = new global::Sungero.Docflow.Shared.ApprovalManagerAssignmentSignatoryChangedEventArgs(this.State.Properties.Signatory, this.Signatory, this);
     ((global::Sungero.Docflow.ApprovalManagerAssignmentSharedHandlers)this.SharedHandlers).SignatoryChanged(args);
    }

    protected void StageChangedHandler()
    {
      var args = new global::Sungero.Docflow.Shared.ApprovalManagerAssignmentStageChangedEventArgs(this.State.Properties.Stage, this.Stage, this);
     ((global::Sungero.Docflow.ApprovalManagerAssignmentSharedHandlers)this.SharedHandlers).StageChanged(args);
    }

    protected void ApprovalRuleChangedHandler()
    {
      var args = new global::Sungero.Docflow.Shared.ApprovalManagerAssignmentApprovalRuleChangedEventArgs(this.State.Properties.ApprovalRule, this.ApprovalRule, this);
     ((global::Sungero.Docflow.ApprovalManagerAssignmentSharedHandlers)this.SharedHandlers).ApprovalRuleChanged(args);
    }

    protected void AddresseeChangedHandler()
    {
      var args = new global::Sungero.Docflow.Shared.ApprovalManagerAssignmentAddresseeChangedEventArgs(this.State.Properties.Addressee, this.Addressee, this);
     ((global::Sungero.Docflow.ApprovalManagerAssignmentSharedHandlers)this.SharedHandlers).AddresseeChanged(args);
    }

    protected void StageNumberChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.IntegerPropertyChangedEventArgs(this.State.Properties.StageNumber, this.StageNumber, this);
     ((global::Sungero.Docflow.ApprovalManagerAssignmentSharedHandlers)this.SharedHandlers).StageNumberChanged(args);
    }

    protected void DeliveryMethodChangedHandler()
    {
      var args = new global::Sungero.Docflow.Shared.ApprovalManagerAssignmentDeliveryMethodChangedEventArgs(this.State.Properties.DeliveryMethod, this.DeliveryMethod, this);
     ((global::Sungero.Docflow.ApprovalManagerAssignmentSharedHandlers)this.SharedHandlers).DeliveryMethodChanged(args);
    }

    protected void ExchangeServiceChangedHandler()
    {
      var args = new global::Sungero.Docflow.Shared.ApprovalManagerAssignmentExchangeServiceChangedEventArgs(this.State.Properties.ExchangeService, this.ExchangeService, this);
     ((global::Sungero.Docflow.ApprovalManagerAssignmentSharedHandlers)this.SharedHandlers).ExchangeServiceChanged(args);
    }

    protected void ReworkPerformerChangedHandler()
    {
      var args = new global::Sungero.Docflow.Shared.ApprovalManagerAssignmentReworkPerformerChangedEventArgs(this.State.Properties.ReworkPerformer, this.ReworkPerformer, this);
     ((global::Sungero.Docflow.ApprovalManagerAssignmentSharedHandlers)this.SharedHandlers).ReworkPerformerChanged(args);
    }



    protected virtual global::Sungero.Docflow.ApprovalManagerAssignmentAddApproversSharedCollectionHandlers CreateAddApproversAddedHandler(global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.Docflow.ApprovalManagerAssignmentAddApproversSharedCollectionHandlers(this, e.Value, null, e.Source);
    }

    protected virtual global::Sungero.Docflow.ApprovalManagerAssignmentAddApproversSharedCollectionHandlers CreateAddApproversDeletedHandler(global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.Docflow.ApprovalManagerAssignmentAddApproversSharedCollectionHandlers(this, null, e.Value, null);
    }

    protected virtual void AddApproversAddedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {  
      var collectionHandlers = this.CreateAddApproversAddedHandler(e);
      if (collectionHandlers != null)
      {
        var args = new global::Sungero.Domain.Shared.CollectionPropertyAddedEventArgs(this);
        collectionHandlers.AddApproversAdded(args);
      }
    }

    protected virtual void AddApproversDeletedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {  
      var collectionHandlers = this.CreateAddApproversDeletedHandler(e);
      if (collectionHandlers != null)
      {
        var args = new global::Sungero.Domain.Shared.CollectionPropertyDeletedEventArgs(this);
        collectionHandlers.AddApproversDeleted(args);
      }
    }


  protected global::Sungero.Company.IEmployee SignatoryValueInputHandler(global::Sungero.Company.IEmployee value)
  {
    var args = new global::Sungero.Docflow.Client.ApprovalManagerAssignmentSignatoryValueInputEventArgs(this.Signatory, value, this, this.Info.Properties.Signatory);
    ((global::Sungero.Docflow.ApprovalManagerAssignmentClientHandlers)this.Handlers).SignatoryValueInput(args);
    return args.NewValue;
  }

  protected global::Sungero.Docflow.IApprovalStage StageValueInputHandler(global::Sungero.Docflow.IApprovalStage value)
  {
    var args = new global::Sungero.Docflow.Client.ApprovalManagerAssignmentStageValueInputEventArgs(this.Stage, value, this, this.Info.Properties.Stage);
    ((global::Sungero.Docflow.ApprovalManagerAssignmentClientHandlers)this.Handlers).StageValueInput(args);
    return args.NewValue;
  }

  protected global::Sungero.Docflow.IApprovalRuleBase ApprovalRuleValueInputHandler(global::Sungero.Docflow.IApprovalRuleBase value)
  {
    var args = new global::Sungero.Docflow.Client.ApprovalManagerAssignmentApprovalRuleValueInputEventArgs(this.ApprovalRule, value, this, this.Info.Properties.ApprovalRule);
    ((global::Sungero.Docflow.ApprovalManagerAssignmentClientHandlers)this.Handlers).ApprovalRuleValueInput(args);
    return args.NewValue;
  }

  protected global::Sungero.Company.IEmployee AddresseeValueInputHandler(global::Sungero.Company.IEmployee value)
  {
    var args = new global::Sungero.Docflow.Client.ApprovalManagerAssignmentAddresseeValueInputEventArgs(this.Addressee, value, this, this.Info.Properties.Addressee);
    ((global::Sungero.Docflow.ApprovalManagerAssignmentClientHandlers)this.Handlers).AddresseeValueInput(args);
    return args.NewValue;
  }

  protected global::System.Int32? StageNumberValueInputHandler(global::System.Int32? value)
  {
    var args = new global::Sungero.Presentation.IntegerValueInputEventArgs(this.StageNumber, value, this, this.Info.Properties.StageNumber);
    ((global::Sungero.Docflow.ApprovalManagerAssignmentClientHandlers)this.Handlers).StageNumberValueInput(args);
    return args.NewValue;
  }

  protected global::Sungero.Docflow.IMailDeliveryMethod DeliveryMethodValueInputHandler(global::Sungero.Docflow.IMailDeliveryMethod value)
  {
    var args = new global::Sungero.Docflow.Client.ApprovalManagerAssignmentDeliveryMethodValueInputEventArgs(this.DeliveryMethod, value, this, this.Info.Properties.DeliveryMethod);
    ((global::Sungero.Docflow.ApprovalManagerAssignmentClientHandlers)this.Handlers).DeliveryMethodValueInput(args);
    return args.NewValue;
  }

  protected global::Sungero.ExchangeCore.IExchangeService ExchangeServiceValueInputHandler(global::Sungero.ExchangeCore.IExchangeService value)
  {
    var args = new global::Sungero.Docflow.Client.ApprovalManagerAssignmentExchangeServiceValueInputEventArgs(this.ExchangeService, value, this, this.Info.Properties.ExchangeService);
    ((global::Sungero.Docflow.ApprovalManagerAssignmentClientHandlers)this.Handlers).ExchangeServiceValueInput(args);
    return args.NewValue;
  }

  protected global::Sungero.Company.IEmployee ReworkPerformerValueInputHandler(global::Sungero.Company.IEmployee value)
  {
    var args = new global::Sungero.Docflow.Client.ApprovalManagerAssignmentReworkPerformerValueInputEventArgs(this.ReworkPerformer, value, this, this.Info.Properties.ReworkPerformer);
    ((global::Sungero.Docflow.ApprovalManagerAssignmentClientHandlers)this.Handlers).ReworkPerformerValueInput(args);
    return args.NewValue;
  }



    #endregion

    #region Constructors








              protected virtual void InitSignatoryNavigationProperty()
              {
                this._Signatory = new global::Sungero.Domain.Client.NavigationProperty<global::Sungero.Company.IEmployee>("Signatory", this);
                this._Signatory.ValueChanged += (sender, e) => { this.SignatoryChangedHandler(); };
                this.AddProperty(this._Signatory as global::Sungero.Domain.Client.IProperty);
              }




              protected virtual void InitStageNavigationProperty()
              {
                this._Stage = new global::Sungero.Domain.Client.NavigationProperty<global::Sungero.Docflow.IApprovalStage>("Stage", this);
                this._Stage.ValueChanged += (sender, e) => { this.StageChangedHandler(); };
                this.AddProperty(this._Stage as global::Sungero.Domain.Client.IProperty);
              }




              protected virtual void InitApprovalRuleNavigationProperty()
              {
                this._ApprovalRule = new global::Sungero.Domain.Client.NavigationProperty<global::Sungero.Docflow.IApprovalRuleBase>("ApprovalRule", this);
                this._ApprovalRule.ValueChanged += (sender, e) => { this.ApprovalRuleChangedHandler(); };
                this.AddProperty(this._ApprovalRule as global::Sungero.Domain.Client.IProperty);
              }




              protected virtual void InitAddresseeNavigationProperty()
              {
                this._Addressee = new global::Sungero.Domain.Client.NavigationProperty<global::Sungero.Company.IEmployee>("Addressee", this);
                this._Addressee.ValueChanged += (sender, e) => { this.AddresseeChangedHandler(); };
                this.AddProperty(this._Addressee as global::Sungero.Domain.Client.IProperty);
              }




              protected virtual void InitDeliveryMethodNavigationProperty()
              {
                this._DeliveryMethod = new global::Sungero.Domain.Client.NavigationProperty<global::Sungero.Docflow.IMailDeliveryMethod>("DeliveryMethod", this);
                this._DeliveryMethod.ValueChanged += (sender, e) => { this.DeliveryMethodChangedHandler(); };
                this.AddProperty(this._DeliveryMethod as global::Sungero.Domain.Client.IProperty);
              }




              protected virtual void InitExchangeServiceNavigationProperty()
              {
                this._ExchangeService = new global::Sungero.Domain.Client.NavigationProperty<global::Sungero.ExchangeCore.IExchangeService>("ExchangeService", this);
                this._ExchangeService.ValueChanged += (sender, e) => { this.ExchangeServiceChangedHandler(); };
                this.AddProperty(this._ExchangeService as global::Sungero.Domain.Client.IProperty);
              }




              protected virtual void InitReworkPerformerNavigationProperty()
              {
                this._ReworkPerformer = new global::Sungero.Domain.Client.NavigationProperty<global::Sungero.Company.IEmployee>("ReworkPerformer", this);
                this._ReworkPerformer.ValueChanged += (sender, e) => { this.ReworkPerformerChangedHandler(); };
                this.AddProperty(this._ReworkPerformer as global::Sungero.Domain.Client.IProperty);
              }



            protected virtual void InitAddApproversCollectionProperty()
            {
              this._AddApprovers = new global::Sungero.Domain.Client.ListProperty<global::Sungero.Docflow.IApprovalManagerAssignmentAddApprovers>("AddApprovers", this);
              this._AddApprovers.ValueChanged += (sender, e) => { this.AddApproversChangedHandler(); };
              this.AddProperty((global::Sungero.Domain.Client.IProperty)this._AddApprovers);
              this.SetAddApproversEventHandlers();
            }

            protected void SetAddApproversEventHandlers()
            {
              this._AddApprovers.ChildEntityAdded += this.AddApproversAddedHandler;
              this._AddApprovers.ChildEntityDeleted += this.AddApproversDeletedHandler;
            }


    public ApprovalManagerAssignment()
    {
            this._StageNumber = new global::Sungero.Domain.Client.SimpleProperty<global::System.Int32?>("StageNumber", this);
            this._StageNumber.ValueChanged += (sender, e) => { this.StageNumberChangedHandler(); };
            this.AddProperty(this._StageNumber);

            this.InitSignatoryNavigationProperty();

            this.InitStageNavigationProperty();

            this.InitApprovalRuleNavigationProperty();

            this.InitAddresseeNavigationProperty();

            this.InitDeliveryMethodNavigationProperty();

            this.InitExchangeServiceNavigationProperty();

            this.InitReworkPerformerNavigationProperty();


            this.InitAddApproversCollectionProperty();







      ((global::Sungero.Workflow.Interfaces.IWorkflowEntity)this).AttachmentCreated += this.AttachmentCreatedHandler;
      ((global::Sungero.Workflow.Interfaces.IWorkflowEntity)this).AttachmentAdded += this.AttachmentAddedHandler;
      ((global::Sungero.Workflow.Interfaces.IWorkflowEntity)this).AttachmentDeleted += this.AttachmentDeletedHandler;


    }

    #endregion

    #region Workflow attachments
    public virtual global::Sungero.Docflow.IApprovalManagerAssignmentAddendaGroupAttachments AddendaGroup
    {
      get
      {
        return new global::Sungero.Docflow.Shared.ApprovalManagerAssignmentAddendaGroupAttachments(this);
      }
    }
    public virtual global::Sungero.Docflow.IApprovalManagerAssignmentOtherGroupAttachments OtherGroup
    {
      get
      {
        return new global::Sungero.Docflow.Shared.ApprovalManagerAssignmentOtherGroupAttachments(this);
      }
    }
    public virtual global::Sungero.Docflow.IApprovalManagerAssignmentDocumentGroupAttachments DocumentGroup
    {
      get
      {
        return new global::Sungero.Docflow.Shared.ApprovalManagerAssignmentDocumentGroupAttachments(this);
      }
    }


    private void AttachmentCreatedHandler(object sender, global::Sungero.Workflow.Interfaces.AttachmentCreatedEventArgs e)
    {
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "AddendaGroup")
      {
        ((global::Sungero.Docflow.ApprovalManagerAssignmentSharedHandlers)this.SharedHandlers).AddendaGroupCreated(e);
        return;
      }
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "OtherGroup")
      {
        ((global::Sungero.Docflow.ApprovalManagerAssignmentSharedHandlers)this.SharedHandlers).OtherGroupCreated(e);
        return;
      }
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "DocumentGroup")
      {
        ((global::Sungero.Docflow.ApprovalManagerAssignmentSharedHandlers)this.SharedHandlers).DocumentGroupCreated(e);
        return;
      }

    }

    private void AttachmentAddedHandler(object sender, global::Sungero.Workflow.Interfaces.AttachmentAddedEventArgs e)
    {
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "AddendaGroup")
      {
        ((global::Sungero.Docflow.ApprovalManagerAssignmentSharedHandlers)this.SharedHandlers).AddendaGroupAdded(e);
        return;
      }
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "OtherGroup")
      {
        ((global::Sungero.Docflow.ApprovalManagerAssignmentSharedHandlers)this.SharedHandlers).OtherGroupAdded(e);
        return;
      }
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "DocumentGroup")
      {
        ((global::Sungero.Docflow.ApprovalManagerAssignmentSharedHandlers)this.SharedHandlers).DocumentGroupAdded(e);
        return;
      }

    }

    private void AttachmentDeletedHandler(object sender, global::Sungero.Workflow.Interfaces.AttachmentDeletedEventArgs e)
    {
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "AddendaGroup")
      {
        ((global::Sungero.Docflow.ApprovalManagerAssignmentSharedHandlers)this.SharedHandlers).AddendaGroupDeleted(e);
        return;
      }
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "OtherGroup")
      {
        ((global::Sungero.Docflow.ApprovalManagerAssignmentSharedHandlers)this.SharedHandlers).OtherGroupDeleted(e);
        return;
      }
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "DocumentGroup")
      {
        ((global::Sungero.Docflow.ApprovalManagerAssignmentSharedHandlers)this.SharedHandlers).DocumentGroupDeleted(e);
        return;
      }

    }
    #endregion

  }
}

// ==================================================================
// ApprovalManagerAssignmentPresenter.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Client
{
  public class ApprovalManagerAssignmentPresenter<T> :
    global::Sungero.Workflow.Client.AssignmentPresenter<T>
    where T : class, global::Sungero.Docflow.IApprovalManagerAssignment
  {
    #region Fields and properties

          private global::System.Windows.Input.ICommand _ApprovedCommand;

          public global::System.Windows.Input.ICommand ApprovedCommand
          {
            get
            {
              if (this._ApprovedCommand == null)
                  this._ApprovedCommand = new global::Sungero.Workflow.Client.SingleAssignmentCommand<T>("Approved", this, this.Approved, this.CanApproved) { IsEmptyParameterAllowed = true };
              return this._ApprovedCommand;
            }
          }
          private global::System.Windows.Input.ICommand _ForRevisionCommand;

          public global::System.Windows.Input.ICommand ForRevisionCommand
          {
            get
            {
              if (this._ForRevisionCommand == null)
                  this._ForRevisionCommand = new global::Sungero.Workflow.Client.SingleAssignmentCommand<T>("ForRevision", this, this.ForRevision, this.CanForRevision) { IsEmptyParameterAllowed = true };
              return this._ForRevisionCommand;
            }
          }
          private global::System.Windows.Input.ICommand _ApprovalFormCommand;

          public global::System.Windows.Input.ICommand ApprovalFormCommand
          {
            get
            {
              if (this._ApprovalFormCommand == null)
                  this._ApprovalFormCommand = new global::Sungero.Domain.Client.SingleEntityCommand<T>("ApprovalForm", this, this.ApprovalForm, this.CanApprovalForm) { IsEmptyParameterAllowed = true };
              return this._ApprovalFormCommand;
            }
          }
          private global::System.Windows.Input.ICommand _ExtendDeadlineCommand;

          public global::System.Windows.Input.ICommand ExtendDeadlineCommand
          {
            get
            {
              if (this._ExtendDeadlineCommand == null)
                  this._ExtendDeadlineCommand = new global::Sungero.Domain.Client.SingleEntityCommand<T>("ExtendDeadline", this, this.ExtendDeadline, this.CanExtendDeadline) { IsEmptyParameterAllowed = true };
              return this._ExtendDeadlineCommand;
            }
          }




    #endregion

    #region Methods

              private bool CanApproved(T entity)
              {
                var args = new global::Sungero.Workflow.Client.CanExecuteResultActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity);
                return ((Sungero.Docflow.Client.ApprovalManagerAssignmentActions)(entity as Sungero.Docflow.Client.ApprovalManagerAssignment).ActionsHandlers).CanApproved(args);
              }

              private void Approved(T entity)
              {
                var args = new global::Sungero.Workflow.Client.ExecuteResultActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, entity.Info.Actions.Approved);
                ((Sungero.Docflow.Client.ApprovalManagerAssignmentActions)(entity as Sungero.Docflow.Client.ApprovalManagerAssignment).ActionsHandlers).Approved(args);
              }

              private bool CanForRevision(T entity)
              {
                var args = new global::Sungero.Workflow.Client.CanExecuteResultActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity);
                return ((Sungero.Docflow.Client.ApprovalManagerAssignmentActions)(entity as Sungero.Docflow.Client.ApprovalManagerAssignment).ActionsHandlers).CanForRevision(args);
              }

              private void ForRevision(T entity)
              {
                var args = new global::Sungero.Workflow.Client.ExecuteResultActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, entity.Info.Actions.ForRevision);
                ((Sungero.Docflow.Client.ApprovalManagerAssignmentActions)(entity as Sungero.Docflow.Client.ApprovalManagerAssignment).ActionsHandlers).ForRevision(args);
              }

              private bool CanApprovalForm(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfCanExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this);
                return ((Sungero.Docflow.Client.ApprovalManagerAssignmentActions)(entity as Sungero.Docflow.Client.ApprovalManagerAssignment).ActionsHandlers).CanApprovalForm(args);
              }

              private void ApprovalForm(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this, entity.Info.Actions.ApprovalForm);
                ((Sungero.Docflow.Client.ApprovalManagerAssignmentActions)(entity as Sungero.Docflow.Client.ApprovalManagerAssignment).ActionsHandlers).ApprovalForm(args);
              }

              private bool CanExtendDeadline(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfCanExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this);
                return ((Sungero.Docflow.Client.ApprovalManagerAssignmentActions)(entity as Sungero.Docflow.Client.ApprovalManagerAssignment).ActionsHandlers).CanExtendDeadline(args);
              }

              private void ExtendDeadline(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this, entity.Info.Actions.ExtendDeadline);
                ((Sungero.Docflow.Client.ApprovalManagerAssignmentActions)(entity as Sungero.Docflow.Client.ApprovalManagerAssignment).ActionsHandlers).ExtendDeadline(args);
              }


    #endregion

    #region Framework events

    protected override void EntityPropertyChangedEventHandler(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
    {
      base.EntityPropertyChangedEventHandler(sender, e);
    }

    #endregion

              protected global::Sungero.Domain.Client.IEntityCollectionPresenter _SignatoryCollectionPresenter;
              public global::Sungero.Domain.Client.IEntityCollectionPresenter SignatoryCollectionPresenter
              {
          get { return this._SignatoryCollectionPresenter; }
        }
              protected global::Sungero.Domain.Client.IEntityCollectionPresenter _StageCollectionPresenter;
              public global::Sungero.Domain.Client.IEntityCollectionPresenter StageCollectionPresenter
              {
          get { return this._StageCollectionPresenter; }
        }
              protected global::Sungero.Domain.Client.IEntityCollectionPresenter _ApprovalRuleCollectionPresenter;
              public global::Sungero.Domain.Client.IEntityCollectionPresenter ApprovalRuleCollectionPresenter
              {
          get { return this._ApprovalRuleCollectionPresenter; }
        }
              protected global::Sungero.Domain.Client.IEntityCollectionPresenter _AddresseeCollectionPresenter;
              public global::Sungero.Domain.Client.IEntityCollectionPresenter AddresseeCollectionPresenter
              {
          get { return this._AddresseeCollectionPresenter; }
        }
              protected global::Sungero.Domain.Client.IEntityCollectionPresenter _DeliveryMethodCollectionPresenter;
              public global::Sungero.Domain.Client.IEntityCollectionPresenter DeliveryMethodCollectionPresenter
              {
          get { return this._DeliveryMethodCollectionPresenter; }
        }
              protected global::Sungero.Domain.Client.IEntityCollectionPresenter _ExchangeServiceCollectionPresenter;
              public global::Sungero.Domain.Client.IEntityCollectionPresenter ExchangeServiceCollectionPresenter
              {
          get { return this._ExchangeServiceCollectionPresenter; }
        }
              protected global::Sungero.Domain.Client.IEntityCollectionPresenter _ReworkPerformerCollectionPresenter;
              public global::Sungero.Domain.Client.IEntityCollectionPresenter ReworkPerformerCollectionPresenter
              {
          get { return this._ReworkPerformerCollectionPresenter; }
        }


                          protected global::Sungero.Domain.Client.IEntityCollectionPresenter _AddApproversApproverCollectionPresenter;
                          public global::Sungero.Domain.Client.IEntityCollectionPresenter AddApproversApproverCollectionPresenter
                          {
                  get { return this._AddApproversApproverCollectionPresenter; }
                }



    #region Constructors

    private void Init()
    {
              this._AuthorCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.CoreEntities.IUser>(() => this.Entity.Id, typeof(T), "Author");

              this._PerformerCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.CoreEntities.IUser>(() => this.Entity.Id, typeof(T), "Performer");

              this._TaskCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Workflow.ITask>(() => this.Entity.Id, typeof(T), "Task");

              this._MainTaskCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Workflow.ITask>(() => this.Entity.Id, typeof(T), "MainTask");

              this._CompletedByCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.CoreEntities.IUser>(() => this.Entity.Id, typeof(T), "CompletedBy");

                  this._SignatoryCollectionPresenter = this.CreateCollectionPresenterForNavigationProperty<global::Sungero.Company.IEmployee>(global::System.Guid.Parse("bb450f48-77f5-4c46-a15c-019de9bccc4d"));
              this._SignatoryCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationProperty<global::Sungero.Company.IEmployee>(() => this.Entity, typeof(T), "Signatory");

                  this._StageCollectionPresenter = this.CreateCollectionPresenterForNavigationProperty<global::Sungero.Docflow.IApprovalStage>(global::System.Guid.Parse("277fa755-909e-4fcc-a7cc-d88889f40433"));
              this._StageCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Docflow.IApprovalStage>(() => this.Entity.Id, typeof(T), "Stage");

                  this._ApprovalRuleCollectionPresenter = this.CreateCollectionPresenterForNavigationProperty<global::Sungero.Docflow.IApprovalRuleBase>(global::System.Guid.Parse("950291d3-e3fe-4caf-8a34-ce01d18b78fb"));
              this._ApprovalRuleCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Docflow.IApprovalRuleBase>(() => this.Entity.Id, typeof(T), "ApprovalRule");

                  this._AddresseeCollectionPresenter = this.CreateCollectionPresenterForNavigationProperty<global::Sungero.Company.IEmployee>(global::System.Guid.Parse("04372859-b009-4eaa-bdbe-c3b3c8b60755"));
              this._AddresseeCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Company.IEmployee>(() => this.Entity.Id, typeof(T), "Addressee");

                  this._DeliveryMethodCollectionPresenter = this.CreateCollectionPresenterForNavigationProperty<global::Sungero.Docflow.IMailDeliveryMethod>(global::System.Guid.Parse("89265adb-f431-4f31-ae79-7c78efa3293b"));
              this._DeliveryMethodCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Docflow.IMailDeliveryMethod>(() => this.Entity.Id, typeof(T), "DeliveryMethod");

                  this._ExchangeServiceCollectionPresenter = this.CreateCollectionPresenterForNavigationProperty<global::Sungero.ExchangeCore.IExchangeService>(global::System.Guid.Parse("51f486c9-ce34-4fcd-ba2c-1bfb5ba89774"));
              this._ExchangeServiceCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationProperty<global::Sungero.ExchangeCore.IExchangeService>(() => this.Entity, typeof(T), "ExchangeService");

                  this._ReworkPerformerCollectionPresenter = this.CreateCollectionPresenterForNavigationProperty<global::Sungero.Company.IEmployee>(global::System.Guid.Parse("cb82de80-936e-4504-81ac-8b7fbf23f8eb"));
              this._ReworkPerformerCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationProperty<global::Sungero.Company.IEmployee>(() => this.Entity, typeof(T), "ReworkPerformer");


                          this._AddApproversApproverCollectionPresenter = this.CreateCollectionPresenterForNavigationProperty<global::Sungero.CoreEntities.IRecipient>(global::System.Guid.Parse("0302724b-bbcd-474f-afea-a49e3d99be7c"));
                        this._AddApproversApproverCollectionPresenter
                        .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.CoreEntities.IRecipient>(() => this.Entity.Id, typeof(Sungero.Docflow.IApprovalManagerAssignmentAddApprovers), "Approver");


    }

    public ApprovalManagerAssignmentPresenter()
    {
      this.Init();
    }

    #endregion
  }
}

// ==================================================================
// ApprovalManagerAssignmentCollectionPresenter.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Client
{
  public class ApprovalManagerAssignmentCollectionPresenter<T> : 
    global::Sungero.Workflow.Client.AssignmentCollectionPresenter<T>
    where T: class, global::Sungero.Docflow.IApprovalManagerAssignment
  {
    #region Actions



    #endregion

    #region Methods


    #endregion

    public ApprovalManagerAssignmentCollectionPresenter(global::System.Linq.IQueryable<T> query, OnLookup onLookup)
      : base(query, onLookup)
    {
    }

    public ApprovalManagerAssignmentCollectionPresenter(global::System.Linq.IQueryable<T> query)
      : this(query, null) { }

    public ApprovalManagerAssignmentCollectionPresenter(OnLookup onLookup)
      : this(null, onLookup) { }

    public ApprovalManagerAssignmentCollectionPresenter()
      : this(null, null) { }
  }
}

// ==================================================================
// ApprovalManagerAssignmentRepositoryImplementer.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Client
{ 
  public class ApprovalManagerAssignmentRepositoryImplementer<T> : 
      global::Sungero.Workflow.Client.AssignmentRepositoryImplementer<T>,
      global::Sungero.Docflow.IApprovalManagerAssignmentRepositoryImplementer<T>
      where T : global::Sungero.Docflow.IApprovalManagerAssignment
    {
       public new global::Sungero.Docflow.IApprovalManagerAssignmentAccessRights AccessRights
       {
          get { return (global::Sungero.Docflow.IApprovalManagerAssignmentAccessRights)base.AccessRights; }
       }

       public new global::Sungero.Docflow.IApprovalManagerAssignmentInfo Info
       {
          get { return (global::Sungero.Docflow.IApprovalManagerAssignmentInfo)base.Info; }
       }

       protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
       {
         return new global::Sungero.Docflow.Client.ApprovalManagerAssignmentTypeAccessRights(typeof(T));
       }
    }
}

// ==================================================================
// ApprovalManagerAssignmentAccessRights.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Client
{
  public class ApprovalManagerAssignmentAccessRights : 
    Sungero.Workflow.Client.AssignmentAccessRights, Sungero.Docflow.IApprovalManagerAssignmentAccessRights
  {

    public ApprovalManagerAssignmentAccessRights(global::Sungero.Domain.Shared.IEntity entity) : base(entity)
    {
    }
  }

  public class ApprovalManagerAssignmentTypeAccessRights : 
    Sungero.Workflow.Client.AssignmentTypeAccessRights, Sungero.Docflow.IApprovalManagerAssignmentAccessRights
  {

    public ApprovalManagerAssignmentTypeAccessRights(global::System.Type entityType) : base(entityType)
    {
    }
  }
}
