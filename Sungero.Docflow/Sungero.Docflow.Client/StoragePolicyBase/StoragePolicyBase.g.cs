
// ==================================================================
// StoragePolicyBase.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Client
{
  public class StoragePolicyBase :
    global::Sungero.CoreEntities.Client.DatabookEntry, global::Sungero.Docflow.IStoragePolicyBase
  {
    #region Fields and properties

    public static new readonly global::System.Guid ClassTypeGuid = global::System.Guid.Parse("a745bc15-ae3d-4fdc-a136-3715a923b3d9");

    public override global::System.Guid TypeGuid
    {
      get { return global::Sungero.Docflow.Client.StoragePolicyBase.ClassTypeGuid; }
    }

    public override string TypeName
    {
      get { return "Sungero.Docflow.IStoragePolicyBase, Sungero.Domain.Interfaces"; }
    }

      public override string DisplayValue
      {
        get { return this.Name; }
        set { this.Name = value; }
      }

      public override string DisplayPropertyName
      {
        get { return "Name"; }
      }


    public new global::Sungero.Docflow.IStoragePolicyBaseState State
    {
      get
      {
        return (global::Sungero.Docflow.IStoragePolicyBaseState)base.State;
      }
    }

    protected override global::Sungero.Domain.Shared.IEntityState CreateState()
    {
      return new global::Sungero.Docflow.Shared.StoragePolicyBaseState(this);
    }

    public new global::Sungero.Docflow.IStoragePolicyBaseInfo Info
    {
      get
      {
        return (global::Sungero.Docflow.IStoragePolicyBaseInfo)base.Info;
      }
    }

    public new global::Sungero.Docflow.IStoragePolicyBaseAccessRights AccessRights
    {
      get
      {
        return (global::Sungero.Docflow.IStoragePolicyBaseAccessRights)base.AccessRights;
      }
    }

    protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
    {
      return new global::Sungero.Docflow.Client.StoragePolicyBaseAccessRights(this);
    }

        protected global::Sungero.Domain.Client.SimpleProperty<global::System.Int32?> _Priority;

        public virtual global::System.Int32? Priority
        {
          get { return this._Priority.Value; }
          set { this._Priority.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.String> _Name;

        public virtual global::System.String Name
        {
          get { return this._Name.Value; }
          set { this._Name.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.String> _Note;

        public virtual global::System.String Note
        {
          get { return this._Note.Value; }
          set { this._Note.Value = value; }
        }




              protected global::Sungero.Domain.Client.INavigationProperty<global::Sungero.CoreEntities.IStorage> _Storage;

              public virtual global::Sungero.CoreEntities.IStorage Storage
              {
              get
              {
                return this._Storage.Value as global::Sungero.CoreEntities.IStorage;
              }

              set
              {
                (this._Storage as global::Sungero.Domain.Client.IProperty).Value = value;
              }
            }







          protected global::Sungero.Domain.Client.IListProperty<global::Sungero.Docflow.IStoragePolicyBaseDocumentKinds> _DocumentKinds;

          virtual public global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Docflow.IStoragePolicyBaseDocumentKinds> DocumentKinds
          {
            get { return this._DocumentKinds.Value; }
          }






    private object _DocumentKindsActionsHandlers;

    public object DocumentKindsActionsHandlers
    {
      get
      {
        if (this._DocumentKindsActionsHandlers == null)
          this._DocumentKindsActionsHandlers = this.CreateDocumentKindsActionsHandlers();
        return this._DocumentKindsActionsHandlers;
      }
    }

    private object _DocumentKindsCollectionActionsHandlers;

    public object DocumentKindsCollectionActionsHandlers
    {
      get
      {
        if (this._DocumentKindsCollectionActionsHandlers == null)
          this._DocumentKindsCollectionActionsHandlers = this.CreateDocumentKindsCollectionActionsHandlers();
        return this._DocumentKindsCollectionActionsHandlers;
      }
    }

    #endregion

    #region Methods

    protected virtual object CreateDocumentKindsActionsHandlers()
    {
      return null;
    }

    protected virtual object CreateDocumentKindsCollectionActionsHandlers()
    {
      return null;
    }


    protected override global::Sungero.Domain.Client.EntityFunctions CreateClientFunctions()
    {
      return new global::Sungero.Docflow.Client.StoragePolicyBaseFunctions(this);
    }

    protected override global::Sungero.Domain.Shared.EntityFunctions CreateSharedFunctions()
    {
      return new global::Sungero.Docflow.Shared.StoragePolicyBaseFunctions(this);
    }
    protected override object CreateHandlers() {
      return new global::Sungero.Docflow.StoragePolicyBaseClientHandlers(this);
    }
    protected override object CreateSharedHandlers() {
      return new global::Sungero.Docflow.StoragePolicyBaseSharedHandlers(this);
    }

    #endregion

    #region Framework events

    protected void PriorityChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.IntegerPropertyChangedEventArgs(this.State.Properties.Priority, this.Priority, this);
     ((global::Sungero.Docflow.StoragePolicyBaseSharedHandlers)this.SharedHandlers).PriorityChanged(args);
    }

    protected void StorageChangedHandler()
    {
      var args = new global::Sungero.Docflow.Shared.StoragePolicyBaseStorageChangedEventArgs(this.State.Properties.Storage, this.Storage, this);
     ((global::Sungero.Docflow.StoragePolicyBaseSharedHandlers)this.SharedHandlers).StorageChanged(args);
    }

    protected void NameChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.Name, this.Name, this);
     ((global::Sungero.Docflow.StoragePolicyBaseSharedHandlers)this.SharedHandlers).NameChanged(args);
    }

    protected void DocumentKindsChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.CollectionPropertyChangedEventArgs(this);
     ((global::Sungero.Docflow.StoragePolicyBaseSharedHandlers)this.SharedHandlers).DocumentKindsChanged(args);
    }

    protected void NoteChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.Note, this.Note, this);
     ((global::Sungero.Docflow.StoragePolicyBaseSharedHandlers)this.SharedHandlers).NoteChanged(args);
    }



    protected virtual global::Sungero.Docflow.StoragePolicyBaseDocumentKindsSharedCollectionHandlers CreateDocumentKindsAddedHandler(global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.Docflow.StoragePolicyBaseDocumentKindsSharedCollectionHandlers(this, e.Value, null, e.Source);
    }

    protected virtual global::Sungero.Docflow.StoragePolicyBaseDocumentKindsSharedCollectionHandlers CreateDocumentKindsDeletedHandler(global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.Docflow.StoragePolicyBaseDocumentKindsSharedCollectionHandlers(this, null, e.Value, null);
    }

    protected virtual void DocumentKindsAddedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {  
      var collectionHandlers = this.CreateDocumentKindsAddedHandler(e);
      if (collectionHandlers != null)
      {
        var args = new global::Sungero.Domain.Shared.CollectionPropertyAddedEventArgs(this);
        collectionHandlers.DocumentKindsAdded(args);
      }
    }

    protected virtual void DocumentKindsDeletedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {  
      var collectionHandlers = this.CreateDocumentKindsDeletedHandler(e);
      if (collectionHandlers != null)
      {
        var args = new global::Sungero.Domain.Shared.CollectionPropertyDeletedEventArgs(this);
        collectionHandlers.DocumentKindsDeleted(args);
      }
    }


  protected global::System.Int32? PriorityValueInputHandler(global::System.Int32? value)
  {
    var args = new global::Sungero.Presentation.IntegerValueInputEventArgs(this.Priority, value, this, this.Info.Properties.Priority);
    ((global::Sungero.Docflow.StoragePolicyBaseClientHandlers)this.Handlers).PriorityValueInput(args);
    return args.NewValue;
  }

  protected global::Sungero.CoreEntities.IStorage StorageValueInputHandler(global::Sungero.CoreEntities.IStorage value)
  {
    var args = new global::Sungero.Docflow.Client.StoragePolicyBaseStorageValueInputEventArgs(this.Storage, value, this, this.Info.Properties.Storage);
    ((global::Sungero.Docflow.StoragePolicyBaseClientHandlers)this.Handlers).StorageValueInput(args);
    return args.NewValue;
  }

  protected global::System.String NameValueInputHandler(global::System.String value)
  {
    var args = new global::Sungero.Presentation.StringValueInputEventArgs(this.Name, value, this, this.Info.Properties.Name);
    ((global::Sungero.Docflow.StoragePolicyBaseClientHandlers)this.Handlers).NameValueInput(args);
    return args.NewValue;
  }


  protected global::System.String NoteValueInputHandler(global::System.String value)
  {
    var args = new global::Sungero.Presentation.StringValueInputEventArgs(this.Note, value, this, this.Info.Properties.Note);
    ((global::Sungero.Docflow.StoragePolicyBaseClientHandlers)this.Handlers).NoteValueInput(args);
    return args.NewValue;
  }



    #endregion

    #region Constructors



              protected virtual void InitStorageNavigationProperty()
              {
                this._Storage = new global::Sungero.Domain.Client.NavigationProperty<global::Sungero.CoreEntities.IStorage>("Storage", this);
                this._Storage.ValueChanged += (sender, e) => { this.StorageChangedHandler(); };
                this.AddProperty(this._Storage as global::Sungero.Domain.Client.IProperty);
              }



            protected virtual void InitDocumentKindsCollectionProperty()
            {
              this._DocumentKinds = new global::Sungero.Domain.Client.ListProperty<global::Sungero.Docflow.IStoragePolicyBaseDocumentKinds>("DocumentKinds", this);
              this._DocumentKinds.ValueChanged += (sender, e) => { this.DocumentKindsChangedHandler(); };
              this.AddProperty((global::Sungero.Domain.Client.IProperty)this._DocumentKinds);
              this.SetDocumentKindsEventHandlers();
            }

            protected void SetDocumentKindsEventHandlers()
            {
              this._DocumentKinds.ChildEntityAdded += this.DocumentKindsAddedHandler;
              this._DocumentKinds.ChildEntityDeleted += this.DocumentKindsDeletedHandler;
            }


    public StoragePolicyBase()
    {
            this._Priority = new global::Sungero.Domain.Client.SimpleProperty<global::System.Int32?>("Priority", this);
            this._Priority.ValueChanged += (sender, e) => { this.PriorityChangedHandler(); };
            this.AddProperty(this._Priority);

            this._Name = new global::Sungero.Domain.Client.SimpleProperty<global::System.String>("Name", this);
            this._Name.ValueChanged += (sender, e) => { this.NameChangedHandler(); };
            this.AddProperty(this._Name);

            this._Note = new global::Sungero.Domain.Client.SimpleProperty<global::System.String>("Note", this);
            this._Note.ValueChanged += (sender, e) => { this.NoteChangedHandler(); };
            this.AddProperty(this._Note);

            this.InitStorageNavigationProperty();


            this.InitDocumentKindsCollectionProperty();







    }

    #endregion

  }
}

// ==================================================================
// StoragePolicyBasePresenter.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Client
{
  public class StoragePolicyBasePresenter<T> :
    global::Sungero.Domain.Client.EntityPresenter<T>
    where T : class, global::Sungero.Docflow.IStoragePolicyBase
  {
    #region Fields and properties




    #endregion

    #region Methods

    #endregion

    #region Framework events

    protected override void EntityPropertyChangedEventHandler(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
    {
      base.EntityPropertyChangedEventHandler(sender, e);
    }

    #endregion

              protected global::Sungero.Domain.Client.IEntityCollectionPresenter _StorageCollectionPresenter;
              public global::Sungero.Domain.Client.IEntityCollectionPresenter StorageCollectionPresenter
              {
          get { return this._StorageCollectionPresenter; }
        }


                          protected global::Sungero.Domain.Client.IEntityCollectionPresenter _DocumentKindsDocumentKindCollectionPresenter;
                          public global::Sungero.Domain.Client.IEntityCollectionPresenter DocumentKindsDocumentKindCollectionPresenter
                          {
                  get { return this._DocumentKindsDocumentKindCollectionPresenter; }
                }



    #region Constructors

    private void Init()
    {
                  this._StorageCollectionPresenter = this.CreateCollectionPresenterForNavigationProperty<global::Sungero.CoreEntities.IStorage>(global::System.Guid.Parse("1c8d8c17-271b-4fa3-9912-840f0ac5e7d6"));
              this._StorageCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.CoreEntities.IStorage>(() => this.Entity.Id, typeof(T), "Storage");


                          this._DocumentKindsDocumentKindCollectionPresenter = this.CreateCollectionPresenterForNavigationProperty<global::Sungero.Docflow.IDocumentKind>(global::System.Guid.Parse("530530c5-4bcd-4e5c-b337-b5a84ef8c560"));
                        this._DocumentKindsDocumentKindCollectionPresenter
                        .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Docflow.IDocumentKind>(() => this.Entity.Id, typeof(Sungero.Docflow.IStoragePolicyBaseDocumentKinds), "DocumentKind");


    }

    public StoragePolicyBasePresenter()
    {
      this.Init();
    }

    #endregion
  }
}

// ==================================================================
// StoragePolicyBaseCollectionPresenter.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Client
{
  public class StoragePolicyBaseCollectionPresenter<T> : 
    global::Sungero.Domain.Client.EntityCollectionPresenter<T>
    where T: class, global::Sungero.Docflow.IStoragePolicyBase
  {
    #region Actions



    #endregion

    #region Methods


    #endregion

    public StoragePolicyBaseCollectionPresenter(global::System.Linq.IQueryable<T> query, OnLookup onLookup)
      : base(query, onLookup)
    {
    }

    public StoragePolicyBaseCollectionPresenter(global::System.Linq.IQueryable<T> query)
      : this(query, null) { }

    public StoragePolicyBaseCollectionPresenter(OnLookup onLookup)
      : this(null, onLookup) { }

    public StoragePolicyBaseCollectionPresenter()
      : this(null, null) { }
  }
}

// ==================================================================
// StoragePolicyBaseRepositoryImplementer.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Client
{ 
  public class StoragePolicyBaseRepositoryImplementer<T> : 
      global::Sungero.Domain.Client.RepositoryImplementer<T>,
      global::Sungero.Docflow.IStoragePolicyBaseRepositoryImplementer<T>
      where T : global::Sungero.Docflow.IStoragePolicyBase
    {
       public new global::Sungero.Docflow.IStoragePolicyBaseAccessRights AccessRights
       {
          get { return (global::Sungero.Docflow.IStoragePolicyBaseAccessRights)base.AccessRights; }
       }

       public new global::Sungero.Docflow.IStoragePolicyBaseInfo Info
       {
          get { return (global::Sungero.Docflow.IStoragePolicyBaseInfo)base.Info; }
       }

       protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
       {
         return new global::Sungero.Docflow.Client.StoragePolicyBaseTypeAccessRights(typeof(T));
       }
    }
}

// ==================================================================
// StoragePolicyBaseAccessRights.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Client
{
  public class StoragePolicyBaseAccessRights : 
    Sungero.CoreEntities.Client.DatabookEntryAccessRights, Sungero.Docflow.IStoragePolicyBaseAccessRights
  {

    public StoragePolicyBaseAccessRights(global::Sungero.Domain.Shared.IEntity entity) : base(entity)
    {
    }
  }

  public class StoragePolicyBaseTypeAccessRights : 
    Sungero.CoreEntities.Client.DatabookEntryTypeAccessRights, Sungero.Docflow.IStoragePolicyBaseAccessRights
  {

    public StoragePolicyBaseTypeAccessRights(global::System.Type entityType) : base(entityType)
    {
    }
  }
}
