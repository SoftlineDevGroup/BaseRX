
// ==================================================================
// DocumentType.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Client
{
  public class DocumentType :
    global::Sungero.CoreEntities.Client.DatabookEntry, global::Sungero.Docflow.IDocumentType
  {
    #region Fields and properties

    public static new readonly global::System.Guid ClassTypeGuid = global::System.Guid.Parse("0896aa80-e1da-4a1e-9485-d172f8e242bc");

    public override global::System.Guid TypeGuid
    {
      get { return global::Sungero.Docflow.Client.DocumentType.ClassTypeGuid; }
    }

    public override string TypeName
    {
      get { return "Sungero.Docflow.IDocumentType, Sungero.Domain.Interfaces"; }
    }

      public override string DisplayValue
      {
        get { return this.Name; }
        set { this.Name = value; }
      }

      public override string DisplayPropertyName
      {
        get { return "Name"; }
      }


    public new global::Sungero.Docflow.IDocumentTypeState State
    {
      get
      {
        return (global::Sungero.Docflow.IDocumentTypeState)base.State;
      }
    }

    protected override global::Sungero.Domain.Shared.IEntityState CreateState()
    {
      return new global::Sungero.Docflow.Shared.DocumentTypeState(this);
    }

    public new global::Sungero.Docflow.IDocumentTypeInfo Info
    {
      get
      {
        return (global::Sungero.Docflow.IDocumentTypeInfo)base.Info;
      }
    }

    public new global::Sungero.Docflow.IDocumentTypeAccessRights AccessRights
    {
      get
      {
        return (global::Sungero.Docflow.IDocumentTypeAccessRights)base.AccessRights;
      }
    }

    protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
    {
      return new global::Sungero.Docflow.Client.DocumentTypeAccessRights(this);
    }

        protected global::Sungero.Domain.Client.SimpleProperty<global::System.String> _Name;

        public virtual global::System.String Name
        {
          get { return this._Name.Value; }
          set { this._Name.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.String> _DocumentTypeGuid;

        public virtual global::System.String DocumentTypeGuid
        {
          get { return this._DocumentTypeGuid.Value; }
          set { this._DocumentTypeGuid.Value = value; }
        }
        protected global::Sungero.Domain.Client.EnumSimpleProperty<global::Sungero.Core.Enumeration?> _DocumentFlow;

        public virtual global::Sungero.Core.Enumeration? DocumentFlow
        {
          get { return this._DocumentFlow.Value; }
          set { this._DocumentFlow.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.Boolean?> _IsRegistrationAllowed;

        public virtual global::System.Boolean? IsRegistrationAllowed
        {
          get { return this._IsRegistrationAllowed.Value; }
          set { this._IsRegistrationAllowed.Value = value; }
        }


        private static global::Sungero.Domain.Shared.EnumerationItems _DocumentFlowItems = new global::Sungero.Domain.Shared.EnumerationItems(
          null,
          typeof(global::Sungero.Docflow.DocumentType.DocumentFlow),
          typeof(global::Sungero.Docflow.Client.DocumentType),
          "DocumentFlow");

        public static global::Sungero.Domain.Shared.EnumerationItems DocumentFlowItems
        {
          get { return global::Sungero.Docflow.Client.DocumentType._DocumentFlowItems; }
        }

        public virtual global::Sungero.Domain.Shared.EnumerationItems DocumentFlowAllowedItems
        {
          get { return global::Sungero.Docflow.Client.DocumentType.DocumentFlowItems; }
        }










    #endregion

    #region Methods

    protected override object CreateActionsHandlers()
    {
      return new global::Sungero.Docflow.Client.DocumentTypeActions(this);
    }

    protected override object CreateCollectionActionsHandlers()
    {
      return new global::Sungero.Docflow.Client.DocumentTypeCollectionActions();
    }

    protected override object CreateAnyChildEntityActionsHandlers()
    {
      return new global::Sungero.Docflow.Client.DocumentTypeAnyChildEntityActions();
    }

    protected override object CreateAnyChildEntityCollectionActionsHandlers()
    {
      return new global::Sungero.Docflow.Client.DocumentTypeAnyChildEntityCollectionActions();
    }


    protected override global::Sungero.Domain.Client.EntityFunctions CreateClientFunctions()
    {
      return new global::Sungero.Docflow.Client.DocumentTypeFunctions(this);
    }

    protected override global::Sungero.Domain.Shared.EntityFunctions CreateSharedFunctions()
    {
      return new global::Sungero.Docflow.Shared.DocumentTypeFunctions(this);
    }
    protected override object CreateHandlers() {
      return new global::Sungero.Docflow.DocumentTypeClientHandlers(this);
    }
    protected override object CreateSharedHandlers() {
      return new global::Sungero.Docflow.DocumentTypeSharedHandlers(this);
    }

    #endregion

    #region Framework events

    protected void NameChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.Name, this.Name, this);
     ((global::Sungero.Docflow.DocumentTypeSharedHandlers)this.SharedHandlers).NameChanged(args);
    }

    protected void DocumentTypeGuidChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.DocumentTypeGuid, this.DocumentTypeGuid, this);
     ((global::Sungero.Docflow.DocumentTypeSharedHandlers)this.SharedHandlers).DocumentTypeGuidChanged(args);
    }

    protected void DocumentFlowChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.EnumerationPropertyChangedEventArgs(this.State.Properties.DocumentFlow, this.DocumentFlow, this);
     ((global::Sungero.Docflow.DocumentTypeSharedHandlers)this.SharedHandlers).DocumentFlowChanged(args);
    }

    protected void IsRegistrationAllowedChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.BooleanPropertyChangedEventArgs(this.State.Properties.IsRegistrationAllowed, this.IsRegistrationAllowed, this);
     ((global::Sungero.Docflow.DocumentTypeSharedHandlers)this.SharedHandlers).IsRegistrationAllowedChanged(args);
    }



  protected global::System.String NameValueInputHandler(global::System.String value)
  {
    var args = new global::Sungero.Presentation.StringValueInputEventArgs(this.Name, value, this, this.Info.Properties.Name);
    ((global::Sungero.Docflow.DocumentTypeClientHandlers)this.Handlers).NameValueInput(args);
    return args.NewValue;
  }

  protected global::System.String DocumentTypeGuidValueInputHandler(global::System.String value)
  {
    var args = new global::Sungero.Presentation.StringValueInputEventArgs(this.DocumentTypeGuid, value, this, this.Info.Properties.DocumentTypeGuid);
    ((global::Sungero.Docflow.DocumentTypeClientHandlers)this.Handlers).DocumentTypeGuidValueInput(args);
    return args.NewValue;
  }

  protected global::Sungero.Core.Enumeration? DocumentFlowValueInputHandler(global::Sungero.Core.Enumeration? value)
  {
    var args = new global::Sungero.Presentation.EnumerationValueInputEventArgs(this.DocumentFlow, value, this, this.Info.Properties.DocumentFlow);
    ((global::Sungero.Docflow.DocumentTypeClientHandlers)this.Handlers).DocumentFlowValueInput(args);
    return args.NewValue;
  }

  protected global::System.Boolean? IsRegistrationAllowedValueInputHandler(global::System.Boolean? value)
  {
    var args = new global::Sungero.Presentation.BooleanValueInputEventArgs(this.IsRegistrationAllowed, value, this, this.Info.Properties.IsRegistrationAllowed);
    ((global::Sungero.Docflow.DocumentTypeClientHandlers)this.Handlers).IsRegistrationAllowedValueInput(args);
    return args.NewValue;
  }


  protected global::System.Collections.Generic.IEnumerable<global::Sungero.Core.Enumeration> DocumentFlowFilteringHandler()
  {
    return ((global::Sungero.Docflow.DocumentTypeClientHandlers)this.Handlers).DocumentFlowFiltering(this.DocumentFlowAllowedItems);
  }



    #endregion

    #region Constructors



    public DocumentType()
    {
            this._Name = new global::Sungero.Domain.Client.SimpleProperty<global::System.String>("Name", this);
            this._Name.ValueChanged += (sender, e) => { this.NameChangedHandler(); };
            this.AddProperty(this._Name);

            this._DocumentTypeGuid = new global::Sungero.Domain.Client.SimpleProperty<global::System.String>("DocumentTypeGuid", this);
            this._DocumentTypeGuid.ValueChanged += (sender, e) => { this.DocumentTypeGuidChangedHandler(); };
            this.AddProperty(this._DocumentTypeGuid);

            this._DocumentFlow = new global::Sungero.Domain.Client.EnumSimpleProperty<global::Sungero.Core.Enumeration?>("DocumentFlow", this);
            this._DocumentFlow.ValueChanged += (sender, e) => { this.DocumentFlowChangedHandler(); };
            this.AddProperty(this._DocumentFlow);

            this._IsRegistrationAllowed = new global::Sungero.Domain.Client.SimpleProperty<global::System.Boolean?>("IsRegistrationAllowed", this);
            this._IsRegistrationAllowed.ValueChanged += (sender, e) => { this.IsRegistrationAllowedChangedHandler(); };
            this.AddProperty(this._IsRegistrationAllowed);








    }

    #endregion

  }
}

// ==================================================================
// DocumentTypePresenter.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Client
{
  public class DocumentTypePresenter<T> :
    global::Sungero.Domain.Client.EntityPresenter<T>
    where T : class, global::Sungero.Docflow.IDocumentType
  {
    #region Fields and properties




    #endregion

    #region Methods

    #endregion

    #region Framework events

    protected override void EntityPropertyChangedEventHandler(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
    {
      base.EntityPropertyChangedEventHandler(sender, e);
    }

    #endregion



    #region Constructors

    private void Init()
    {

    }

    public DocumentTypePresenter()
    {
      this.Init();
    }

    #endregion
  }
}

// ==================================================================
// DocumentTypeCollectionPresenter.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Client
{
  public class DocumentTypeCollectionPresenter<T> : 
    global::Sungero.Domain.Client.EntityCollectionPresenter<T>
    where T: class, global::Sungero.Docflow.IDocumentType
  {
    #region Actions



    #endregion

    #region Methods


    #endregion

    public DocumentTypeCollectionPresenter(global::System.Linq.IQueryable<T> query, OnLookup onLookup)
      : base(query, onLookup)
    {
    }

    public DocumentTypeCollectionPresenter(global::System.Linq.IQueryable<T> query)
      : this(query, null) { }

    public DocumentTypeCollectionPresenter(OnLookup onLookup)
      : this(null, onLookup) { }

    public DocumentTypeCollectionPresenter()
      : this(null, null) { }
  }
}

// ==================================================================
// DocumentTypeRepositoryImplementer.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Client
{ 
  public class DocumentTypeRepositoryImplementer<T> : 
      global::Sungero.Domain.Client.RepositoryImplementer<T>,
      global::Sungero.Docflow.IDocumentTypeRepositoryImplementer<T>
      where T : global::Sungero.Docflow.IDocumentType
    {
       public new global::Sungero.Docflow.IDocumentTypeAccessRights AccessRights
       {
          get { return (global::Sungero.Docflow.IDocumentTypeAccessRights)base.AccessRights; }
       }

       public new global::Sungero.Docflow.IDocumentTypeInfo Info
       {
          get { return (global::Sungero.Docflow.IDocumentTypeInfo)base.Info; }
       }

       protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
       {
         return new global::Sungero.Docflow.Client.DocumentTypeTypeAccessRights(typeof(T));
       }
    }
}

// ==================================================================
// DocumentTypeAccessRights.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Client
{
  public class DocumentTypeAccessRights : 
    Sungero.CoreEntities.Client.DatabookEntryAccessRights, Sungero.Docflow.IDocumentTypeAccessRights
  {

    public DocumentTypeAccessRights(global::Sungero.Domain.Shared.IEntity entity) : base(entity)
    {
    }
  }

  public class DocumentTypeTypeAccessRights : 
    Sungero.CoreEntities.Client.DatabookEntryTypeAccessRights, Sungero.Docflow.IDocumentTypeAccessRights
  {

    public DocumentTypeTypeAccessRights(global::System.Type entityType) : base(entityType)
    {
    }
  }
}
