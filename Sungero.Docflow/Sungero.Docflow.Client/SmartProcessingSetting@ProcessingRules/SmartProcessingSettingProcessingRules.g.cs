
// ==================================================================
// SmartProcessingSettingProcessingRules.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Client
{
  public class SmartProcessingSettingProcessingRules :
    global::Sungero.Domain.Client.ChildEntityProxy, global::Sungero.Docflow.ISmartProcessingSettingProcessingRules
  {
    #region Fields and properties

    public static new readonly global::System.Guid ClassTypeGuid = global::System.Guid.Parse("ccdb4976-9dbb-455d-80b7-61047f3c4e5c");

    public override global::System.Guid TypeGuid
    {
      get { return global::Sungero.Docflow.Client.SmartProcessingSettingProcessingRules.ClassTypeGuid; }
    }

    public override string TypeName
    {
      get { return "Sungero.Docflow.ISmartProcessingSettingProcessingRules, Sungero.Domain.Interfaces"; }
    }

    public new global::Sungero.Docflow.ISmartProcessingSettingProcessingRulesState State
    {
      get
      {
        return (global::Sungero.Docflow.ISmartProcessingSettingProcessingRulesState)base.State;
      }
    }

    protected override global::Sungero.Domain.Shared.IEntityState CreateState()
    {
      return new global::Sungero.Docflow.Shared.SmartProcessingSettingProcessingRulesState(this);
    }

    public new global::Sungero.Docflow.ISmartProcessingSettingProcessingRulesInfo Info
    {
      get
      {
        return (global::Sungero.Docflow.ISmartProcessingSettingProcessingRulesInfo)base.Info;
      }
    }

    protected global::Sungero.Domain.Client.NavigationProperty<global::Sungero.Docflow.ISmartProcessingSetting> _SmartProcessingSetting;

    public global::Sungero.Docflow.ISmartProcessingSetting SmartProcessingSetting
    {
      get { return this._SmartProcessingSetting.Value; }
      set { this._SmartProcessingSetting.Value = value; }
    }

    public override global::Sungero.Domain.Shared.IEntity RootEntity
    {
      get { return this.SmartProcessingSetting; }
      set { this.SmartProcessingSetting = (global::Sungero.Docflow.ISmartProcessingSetting)value; }
    }

        protected global::Sungero.Domain.Client.SimpleProperty<global::System.String> _ClassName;

        public virtual global::System.String ClassName
        {
          get { return this._ClassName.Value; }
          set { this._ClassName.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.String> _GrammarName;

        public virtual global::System.String GrammarName
        {
          get { return this._GrammarName.Value; }
          set { this._GrammarName.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.String> _FunctionName;

        public virtual global::System.String FunctionName
        {
          get { return this._FunctionName.Value; }
          set { this._FunctionName.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.String> _ModuleName;

        public virtual global::System.String ModuleName
        {
          get { return this._ModuleName.Value; }
          set { this._ModuleName.Value = value; }
        }










    #endregion

    #region Methods

    protected override object CreateHandlers() {
      return new global::Sungero.Docflow.SmartProcessingSettingProcessingRulesClientHandlers(this);
    }
    protected override object CreateSharedHandlers() {
      return new global::Sungero.Docflow.SmartProcessingSettingProcessingRulesSharedHandlers(this);
    }

    #endregion

    #region Framework events

    protected void ClassNameChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.ClassName, this.ClassName, this);
     ((global::Sungero.Docflow.SmartProcessingSettingProcessingRulesSharedHandlers)this.SharedHandlers).ProcessingRulesClassNameChanged(args);
    }

    protected void GrammarNameChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.GrammarName, this.GrammarName, this);
     ((global::Sungero.Docflow.SmartProcessingSettingProcessingRulesSharedHandlers)this.SharedHandlers).ProcessingRulesGrammarNameChanged(args);
    }

    protected void FunctionNameChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.FunctionName, this.FunctionName, this);
     ((global::Sungero.Docflow.SmartProcessingSettingProcessingRulesSharedHandlers)this.SharedHandlers).ProcessingRulesFunctionNameChanged(args);
    }

    protected void ModuleNameChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.ModuleName, this.ModuleName, this);
     ((global::Sungero.Docflow.SmartProcessingSettingProcessingRulesSharedHandlers)this.SharedHandlers).ProcessingRulesModuleNameChanged(args);
    }



  protected global::System.String ClassNameValueInputHandler(global::System.String value)
  {
    var args = new global::Sungero.Presentation.StringValueInputEventArgs(this.ClassName, value, this, this.Info.Properties.ClassName);
    ((global::Sungero.Docflow.SmartProcessingSettingProcessingRulesClientHandlers)this.Handlers).ProcessingRulesClassNameValueInput(args);
    return args.NewValue;
  }

  protected global::System.String GrammarNameValueInputHandler(global::System.String value)
  {
    var args = new global::Sungero.Presentation.StringValueInputEventArgs(this.GrammarName, value, this, this.Info.Properties.GrammarName);
    ((global::Sungero.Docflow.SmartProcessingSettingProcessingRulesClientHandlers)this.Handlers).ProcessingRulesGrammarNameValueInput(args);
    return args.NewValue;
  }

  protected global::System.String FunctionNameValueInputHandler(global::System.String value)
  {
    var args = new global::Sungero.Presentation.StringValueInputEventArgs(this.FunctionName, value, this, this.Info.Properties.FunctionName);
    ((global::Sungero.Docflow.SmartProcessingSettingProcessingRulesClientHandlers)this.Handlers).ProcessingRulesFunctionNameValueInput(args);
    return args.NewValue;
  }

  protected global::System.String ModuleNameValueInputHandler(global::System.String value)
  {
    var args = new global::Sungero.Presentation.StringValueInputEventArgs(this.ModuleName, value, this, this.Info.Properties.ModuleName);
    ((global::Sungero.Docflow.SmartProcessingSettingProcessingRulesClientHandlers)this.Handlers).ProcessingRulesModuleNameValueInput(args);
    return args.NewValue;
  }



    #endregion

    #region Constructors



    public SmartProcessingSettingProcessingRules()
    {
      this._SmartProcessingSetting = new global::Sungero.Domain.Client.NavigationProperty<global::Sungero.Docflow.ISmartProcessingSetting>("SmartProcessingSetting", this, true);

            this._ClassName = new global::Sungero.Domain.Client.SimpleProperty<global::System.String>("ClassName", this);
            this._ClassName.ValueChanged += (sender, e) => { this.ClassNameChangedHandler(); };
            this.AddProperty(this._ClassName);

            this._GrammarName = new global::Sungero.Domain.Client.SimpleProperty<global::System.String>("GrammarName", this);
            this._GrammarName.ValueChanged += (sender, e) => { this.GrammarNameChangedHandler(); };
            this.AddProperty(this._GrammarName);

            this._FunctionName = new global::Sungero.Domain.Client.SimpleProperty<global::System.String>("FunctionName", this);
            this._FunctionName.ValueChanged += (sender, e) => { this.FunctionNameChangedHandler(); };
            this.AddProperty(this._FunctionName);

            this._ModuleName = new global::Sungero.Domain.Client.SimpleProperty<global::System.String>("ModuleName", this);
            this._ModuleName.ValueChanged += (sender, e) => { this.ModuleNameChangedHandler(); };
            this.AddProperty(this._ModuleName);








    }

    #endregion

  }
}
