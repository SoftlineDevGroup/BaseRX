
// ==================================================================
// FreeApprovalNotification.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Client
{
  public class FreeApprovalNotification :
    global::Sungero.Workflow.Client.Notice, global::Sungero.Docflow.IFreeApprovalNotification
  {
    #region Fields and properties

    public static new readonly global::System.Guid ClassTypeGuid = global::System.Guid.Parse("7d9816f6-1dea-4718-84a5-1a413df81145");

    public override global::System.Guid TypeGuid
    {
      get { return global::Sungero.Docflow.Client.FreeApprovalNotification.ClassTypeGuid; }
    }

    public override string TypeName
    {
      get { return "Sungero.Docflow.IFreeApprovalNotification, Sungero.Domain.Interfaces"; }
    }

      public override string DisplayValue
      {
        get { return this.Subject; }
        set { this.Subject = value; }
      }

      public override string DisplayPropertyName
      {
        get { return "Subject"; }
      }


    public new global::Sungero.Docflow.IFreeApprovalNotificationState State
    {
      get
      {
        return (global::Sungero.Docflow.IFreeApprovalNotificationState)base.State;
      }
    }

    protected override global::Sungero.Domain.Shared.IEntityState CreateState()
    {
      return new global::Sungero.Docflow.Shared.FreeApprovalNotificationState(this);
    }

    public new global::Sungero.Docflow.IFreeApprovalNotificationInfo Info
    {
      get
      {
        return (global::Sungero.Docflow.IFreeApprovalNotificationInfo)base.Info;
      }
    }

    public new global::Sungero.Docflow.IFreeApprovalNotificationAccessRights AccessRights
    {
      get
      {
        return (global::Sungero.Docflow.IFreeApprovalNotificationAccessRights)base.AccessRights;
      }
    }

    protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
    {
      return new global::Sungero.Docflow.Client.FreeApprovalNotificationAccessRights(this);
    }




              protected global::Sungero.Domain.Client.INavigationProperty<global::Sungero.Docflow.IFreeApprovalAssignment> _LinkedFreeApprovalAssignment;

              public virtual global::Sungero.Docflow.IFreeApprovalAssignment LinkedFreeApprovalAssignment
              {
              get
              {
                return this._LinkedFreeApprovalAssignment.Value as global::Sungero.Docflow.IFreeApprovalAssignment;
              }

              set
              {
                (this._LinkedFreeApprovalAssignment as global::Sungero.Domain.Client.IProperty).Value = value;
              }
            }










    #endregion

    #region Methods

    protected override object CreateActionsHandlers()
    {
      return new global::Sungero.Docflow.Client.FreeApprovalNotificationActions(this);
    }

    protected override object CreateCollectionActionsHandlers()
    {
      return new global::Sungero.Docflow.Client.FreeApprovalNotificationCollectionActions();
    }

    protected override object CreateAnyChildEntityActionsHandlers()
    {
      return new global::Sungero.Docflow.Client.FreeApprovalNotificationAnyChildEntityActions();
    }

    protected override object CreateAnyChildEntityCollectionActionsHandlers()
    {
      return new global::Sungero.Docflow.Client.FreeApprovalNotificationAnyChildEntityCollectionActions();
    }


    protected override global::Sungero.Domain.Client.EntityFunctions CreateClientFunctions()
    {
      return new global::Sungero.Docflow.Client.FreeApprovalNotificationFunctions(this);
    }

    protected override global::Sungero.Domain.Shared.EntityFunctions CreateSharedFunctions()
    {
      return new global::Sungero.Docflow.Shared.FreeApprovalNotificationFunctions(this);
    }
    protected override object CreateHandlers() {
      return new global::Sungero.Docflow.FreeApprovalNotificationClientHandlers(this);
    }
    protected override object CreateSharedHandlers() {
      return new global::Sungero.Docflow.FreeApprovalNotificationSharedHandlers(this);
    }

    #endregion

    #region Framework events

    protected void LinkedFreeApprovalAssignmentChangedHandler()
    {
      var args = new global::Sungero.Docflow.Shared.FreeApprovalNotificationLinkedFreeApprovalAssignmentChangedEventArgs(this.State.Properties.LinkedFreeApprovalAssignment, this.LinkedFreeApprovalAssignment, this);
     ((global::Sungero.Docflow.FreeApprovalNotificationSharedHandlers)this.SharedHandlers).LinkedFreeApprovalAssignmentChanged(args);
    }



  protected global::Sungero.Docflow.IFreeApprovalAssignment LinkedFreeApprovalAssignmentValueInputHandler(global::Sungero.Docflow.IFreeApprovalAssignment value)
  {
    var args = new global::Sungero.Docflow.Client.FreeApprovalNotificationLinkedFreeApprovalAssignmentValueInputEventArgs(this.LinkedFreeApprovalAssignment, value, this, this.Info.Properties.LinkedFreeApprovalAssignment);
    ((global::Sungero.Docflow.FreeApprovalNotificationClientHandlers)this.Handlers).LinkedFreeApprovalAssignmentValueInput(args);
    return args.NewValue;
  }



    #endregion

    #region Constructors







              protected virtual void InitLinkedFreeApprovalAssignmentNavigationProperty()
              {
                this._LinkedFreeApprovalAssignment = new global::Sungero.Domain.Client.NavigationProperty<global::Sungero.Docflow.IFreeApprovalAssignment>("LinkedFreeApprovalAssignment", this);
                this._LinkedFreeApprovalAssignment.ValueChanged += (sender, e) => { this.LinkedFreeApprovalAssignmentChangedHandler(); };
                this.AddProperty(this._LinkedFreeApprovalAssignment as global::Sungero.Domain.Client.IProperty);
              }




    public FreeApprovalNotification()
    {

            this.InitLinkedFreeApprovalAssignmentNavigationProperty();








      ((global::Sungero.Workflow.Interfaces.IWorkflowEntity)this).AttachmentCreated += this.AttachmentCreatedHandler;
      ((global::Sungero.Workflow.Interfaces.IWorkflowEntity)this).AttachmentAdded += this.AttachmentAddedHandler;
      ((global::Sungero.Workflow.Interfaces.IWorkflowEntity)this).AttachmentDeleted += this.AttachmentDeletedHandler;


    }

    #endregion

    #region Workflow attachments
    public virtual global::Sungero.Docflow.IFreeApprovalNotificationAddendaGroupAttachments AddendaGroup
    {
      get
      {
        return new global::Sungero.Docflow.Shared.FreeApprovalNotificationAddendaGroupAttachments(this);
      }
    }
    public virtual global::Sungero.Docflow.IFreeApprovalNotificationOtherGroupAttachments OtherGroup
    {
      get
      {
        return new global::Sungero.Docflow.Shared.FreeApprovalNotificationOtherGroupAttachments(this);
      }
    }
    public virtual global::Sungero.Docflow.IFreeApprovalNotificationForApprovalGroupAttachments ForApprovalGroup
    {
      get
      {
        return new global::Sungero.Docflow.Shared.FreeApprovalNotificationForApprovalGroupAttachments(this);
      }
    }


    private void AttachmentCreatedHandler(object sender, global::Sungero.Workflow.Interfaces.AttachmentCreatedEventArgs e)
    {
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "AddendaGroup")
      {
        ((global::Sungero.Docflow.FreeApprovalNotificationSharedHandlers)this.SharedHandlers).AddendaGroupCreated(e);
        return;
      }
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "OtherGroup")
      {
        ((global::Sungero.Docflow.FreeApprovalNotificationSharedHandlers)this.SharedHandlers).OtherGroupCreated(e);
        return;
      }
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "ForApprovalGroup")
      {
        ((global::Sungero.Docflow.FreeApprovalNotificationSharedHandlers)this.SharedHandlers).ForApprovalGroupCreated(e);
        return;
      }

    }

    private void AttachmentAddedHandler(object sender, global::Sungero.Workflow.Interfaces.AttachmentAddedEventArgs e)
    {
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "AddendaGroup")
      {
        ((global::Sungero.Docflow.FreeApprovalNotificationSharedHandlers)this.SharedHandlers).AddendaGroupAdded(e);
        return;
      }
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "OtherGroup")
      {
        ((global::Sungero.Docflow.FreeApprovalNotificationSharedHandlers)this.SharedHandlers).OtherGroupAdded(e);
        return;
      }
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "ForApprovalGroup")
      {
        ((global::Sungero.Docflow.FreeApprovalNotificationSharedHandlers)this.SharedHandlers).ForApprovalGroupAdded(e);
        return;
      }

    }

    private void AttachmentDeletedHandler(object sender, global::Sungero.Workflow.Interfaces.AttachmentDeletedEventArgs e)
    {
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "AddendaGroup")
      {
        ((global::Sungero.Docflow.FreeApprovalNotificationSharedHandlers)this.SharedHandlers).AddendaGroupDeleted(e);
        return;
      }
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "OtherGroup")
      {
        ((global::Sungero.Docflow.FreeApprovalNotificationSharedHandlers)this.SharedHandlers).OtherGroupDeleted(e);
        return;
      }
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "ForApprovalGroup")
      {
        ((global::Sungero.Docflow.FreeApprovalNotificationSharedHandlers)this.SharedHandlers).ForApprovalGroupDeleted(e);
        return;
      }

    }
    #endregion

  }
}

// ==================================================================
// FreeApprovalNotificationPresenter.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Client
{
  public class FreeApprovalNotificationPresenter<T> :
    global::Sungero.Workflow.Client.NoticePresenter<T>
    where T : class, global::Sungero.Docflow.IFreeApprovalNotification
  {
    #region Fields and properties




    #endregion

    #region Methods

    #endregion

    #region Framework events

    protected override void EntityPropertyChangedEventHandler(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
    {
      base.EntityPropertyChangedEventHandler(sender, e);
    }

    #endregion

              protected global::Sungero.Domain.Client.IEntityCollectionPresenter _LinkedFreeApprovalAssignmentCollectionPresenter;
              public global::Sungero.Domain.Client.IEntityCollectionPresenter LinkedFreeApprovalAssignmentCollectionPresenter
              {
          get { return this._LinkedFreeApprovalAssignmentCollectionPresenter; }
        }



    #region Constructors

    private void Init()
    {
              this._AuthorCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.CoreEntities.IUser>(() => this.Entity.Id, typeof(T), "Author");

              this._PerformerCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.CoreEntities.IUser>(() => this.Entity.Id, typeof(T), "Performer");

              this._TaskCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Workflow.ITask>(() => this.Entity.Id, typeof(T), "Task");

              this._MainTaskCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Workflow.ITask>(() => this.Entity.Id, typeof(T), "MainTask");

                  this._LinkedFreeApprovalAssignmentCollectionPresenter = this.CreateCollectionPresenterForNavigationProperty<global::Sungero.Docflow.IFreeApprovalAssignment>(global::System.Guid.Parse("9e68950b-7183-4c1f-a24e-98509541d326"));
              this._LinkedFreeApprovalAssignmentCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Docflow.IFreeApprovalAssignment>(() => this.Entity.Id, typeof(T), "LinkedFreeApprovalAssignment");


    }

    public FreeApprovalNotificationPresenter()
    {
      this.Init();
    }

    #endregion
  }
}

// ==================================================================
// FreeApprovalNotificationCollectionPresenter.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Client
{
  public class FreeApprovalNotificationCollectionPresenter<T> : 
    global::Sungero.Workflow.Client.NoticeCollectionPresenter<T>
    where T: class, global::Sungero.Docflow.IFreeApprovalNotification
  {
    #region Actions



    #endregion

    #region Methods


    #endregion

    public FreeApprovalNotificationCollectionPresenter(global::System.Linq.IQueryable<T> query, OnLookup onLookup)
      : base(query, onLookup)
    {
    }

    public FreeApprovalNotificationCollectionPresenter(global::System.Linq.IQueryable<T> query)
      : this(query, null) { }

    public FreeApprovalNotificationCollectionPresenter(OnLookup onLookup)
      : this(null, onLookup) { }

    public FreeApprovalNotificationCollectionPresenter()
      : this(null, null) { }
  }
}

// ==================================================================
// FreeApprovalNotificationRepositoryImplementer.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Client
{ 
  public class FreeApprovalNotificationRepositoryImplementer<T> : 
      global::Sungero.Workflow.Client.NoticeRepositoryImplementer<T>,
      global::Sungero.Docflow.IFreeApprovalNotificationRepositoryImplementer<T>
      where T : global::Sungero.Docflow.IFreeApprovalNotification
    {
       public new global::Sungero.Docflow.IFreeApprovalNotificationAccessRights AccessRights
       {
          get { return (global::Sungero.Docflow.IFreeApprovalNotificationAccessRights)base.AccessRights; }
       }

       public new global::Sungero.Docflow.IFreeApprovalNotificationInfo Info
       {
          get { return (global::Sungero.Docflow.IFreeApprovalNotificationInfo)base.Info; }
       }

       protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
       {
         return new global::Sungero.Docflow.Client.FreeApprovalNotificationTypeAccessRights(typeof(T));
       }
    }
}

// ==================================================================
// FreeApprovalNotificationAccessRights.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Client
{
  public class FreeApprovalNotificationAccessRights : 
    Sungero.Workflow.Client.NoticeAccessRights, Sungero.Docflow.IFreeApprovalNotificationAccessRights
  {

    public FreeApprovalNotificationAccessRights(global::Sungero.Domain.Shared.IEntity entity) : base(entity)
    {
    }
  }

  public class FreeApprovalNotificationTypeAccessRights : 
    Sungero.Workflow.Client.NoticeTypeAccessRights, Sungero.Docflow.IFreeApprovalNotificationAccessRights
  {

    public FreeApprovalNotificationTypeAccessRights(global::System.Type entityType) : base(entityType)
    {
    }
  }
}
