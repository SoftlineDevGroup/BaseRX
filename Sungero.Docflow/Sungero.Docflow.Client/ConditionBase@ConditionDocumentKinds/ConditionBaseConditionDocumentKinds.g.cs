
// ==================================================================
// ConditionBaseConditionDocumentKinds.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Client
{
  public class ConditionBaseConditionDocumentKinds :
    global::Sungero.Domain.Client.ChildEntityProxy, global::Sungero.Docflow.IConditionBaseConditionDocumentKinds
  {
    #region Fields and properties

    public static new readonly global::System.Guid ClassTypeGuid = global::System.Guid.Parse("28dd7514-8305-4f7f-8a5b-55a98b8fdecb");

    public override global::System.Guid TypeGuid
    {
      get { return global::Sungero.Docflow.Client.ConditionBaseConditionDocumentKinds.ClassTypeGuid; }
    }

    public override string TypeName
    {
      get { return "Sungero.Docflow.IConditionBaseConditionDocumentKinds, Sungero.Domain.Interfaces"; }
    }

    public new global::Sungero.Docflow.IConditionBaseConditionDocumentKindsState State
    {
      get
      {
        return (global::Sungero.Docflow.IConditionBaseConditionDocumentKindsState)base.State;
      }
    }

    protected override global::Sungero.Domain.Shared.IEntityState CreateState()
    {
      return new global::Sungero.Docflow.Shared.ConditionBaseConditionDocumentKindsState(this);
    }

    public new global::Sungero.Docflow.IConditionBaseConditionDocumentKindsInfo Info
    {
      get
      {
        return (global::Sungero.Docflow.IConditionBaseConditionDocumentKindsInfo)base.Info;
      }
    }

    protected global::Sungero.Domain.Client.NavigationProperty<global::Sungero.Docflow.IConditionBase> _ConditionBase;

    public global::Sungero.Docflow.IConditionBase ConditionBase
    {
      get { return this._ConditionBase.Value; }
      set { this._ConditionBase.Value = value; }
    }

    public override global::Sungero.Domain.Shared.IEntity RootEntity
    {
      get { return this.ConditionBase; }
      set { this.ConditionBase = (global::Sungero.Docflow.IConditionBase)value; }
    }




              protected global::Sungero.Domain.Client.INavigationProperty<global::Sungero.Docflow.IDocumentKind> _DocumentKind;

              public virtual global::Sungero.Docflow.IDocumentKind DocumentKind
              {
              get
              {
                return this._DocumentKind.Value as global::Sungero.Docflow.IDocumentKind;
              }

              set
              {
                (this._DocumentKind as global::Sungero.Domain.Client.IProperty).Value = value;
              }
            }










    #endregion

    #region Methods

    protected override object CreateHandlers() {
      return new global::Sungero.Docflow.ConditionBaseConditionDocumentKindsClientHandlers(this);
    }
    protected override object CreateSharedHandlers() {
      return new global::Sungero.Docflow.ConditionBaseConditionDocumentKindsSharedHandlers(this);
    }

    #endregion

    #region Framework events

    protected void DocumentKindChangedHandler()
    {
      var args = new global::Sungero.Docflow.Shared.ConditionBaseConditionDocumentKindsDocumentKindChangedEventArgs(this.State.Properties.DocumentKind, this.DocumentKind, this);
     ((global::Sungero.Docflow.ConditionBaseConditionDocumentKindsSharedHandlers)this.SharedHandlers).ConditionDocumentKindsDocumentKindChanged(args);
    }



  protected global::Sungero.Docflow.IDocumentKind DocumentKindValueInputHandler(global::Sungero.Docflow.IDocumentKind value)
  {
    var args = new global::Sungero.Docflow.Client.ConditionBaseConditionDocumentKindsDocumentKindValueInputEventArgs(this.DocumentKind, value, this, this.Info.Properties.DocumentKind);
    ((global::Sungero.Docflow.ConditionBaseConditionDocumentKindsClientHandlers)this.Handlers).ConditionDocumentKindsDocumentKindValueInput(args);
    return args.NewValue;
  }



    #endregion

    #region Constructors



              protected virtual void InitDocumentKindNavigationProperty()
              {
                this._DocumentKind = new global::Sungero.Domain.Client.NavigationProperty<global::Sungero.Docflow.IDocumentKind>("DocumentKind", this);
                this._DocumentKind.ValueChanged += (sender, e) => { this.DocumentKindChangedHandler(); };
                this.AddProperty(this._DocumentKind as global::Sungero.Domain.Client.IProperty);
              }




    public ConditionBaseConditionDocumentKinds()
    {
      this._ConditionBase = new global::Sungero.Domain.Client.NavigationProperty<global::Sungero.Docflow.IConditionBase>("ConditionBase", this, true);


            this.InitDocumentKindNavigationProperty();








    }

    #endregion

  }
}
