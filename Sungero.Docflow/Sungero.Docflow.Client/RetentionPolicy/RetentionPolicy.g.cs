
// ==================================================================
// RetentionPolicy.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Client
{
  public class RetentionPolicy :
    global::Sungero.Docflow.Client.StoragePolicyBase, global::Sungero.Docflow.IRetentionPolicy
  {
    #region Fields and properties

    public static new readonly global::System.Guid ClassTypeGuid = global::System.Guid.Parse("3af27f75-55f4-41be-802a-9424a8ba9c41");

    public override global::System.Guid TypeGuid
    {
      get { return global::Sungero.Docflow.Client.RetentionPolicy.ClassTypeGuid; }
    }

    public override string TypeName
    {
      get { return "Sungero.Docflow.IRetentionPolicy, Sungero.Domain.Interfaces"; }
    }

      public override string DisplayValue
      {
        get { return this.Name; }
        set { this.Name = value; }
      }

      public override string DisplayPropertyName
      {
        get { return "Name"; }
      }


    public new global::Sungero.Docflow.IRetentionPolicyState State
    {
      get
      {
        return (global::Sungero.Docflow.IRetentionPolicyState)base.State;
      }
    }

    protected override global::Sungero.Domain.Shared.IEntityState CreateState()
    {
      return new global::Sungero.Docflow.Shared.RetentionPolicyState(this);
    }

    public new global::Sungero.Docflow.IRetentionPolicyInfo Info
    {
      get
      {
        return (global::Sungero.Docflow.IRetentionPolicyInfo)base.Info;
      }
    }

    public new global::Sungero.Docflow.IRetentionPolicyAccessRights AccessRights
    {
      get
      {
        return (global::Sungero.Docflow.IRetentionPolicyAccessRights)base.AccessRights;
      }
    }

    protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
    {
      return new global::Sungero.Docflow.Client.RetentionPolicyAccessRights(this);
    }

        protected global::Sungero.Domain.Client.EnumSimpleProperty<global::Sungero.Core.Enumeration?> _DocumentDateType;

        public virtual global::Sungero.Core.Enumeration? DocumentDateType
        {
          get { return this._DocumentDateType.Value; }
          set { this._DocumentDateType.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.Int32?> _DaysToMove;

        public virtual global::System.Int32? DaysToMove
        {
          get { return this._DaysToMove.Value; }
          set { this._DaysToMove.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.DateTime?> _NextRetention;

        public virtual global::System.DateTime? NextRetention
        {
          get { return this._NextRetention.Value; }
          set { this._NextRetention.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.DateTime?> _LastRetention;

        public virtual global::System.DateTime? LastRetention
        {
          get { return this._LastRetention.Value; }
          set { this._LastRetention.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.Int32?> _Interval;

        public virtual global::System.Int32? Interval
        {
          get { return this._Interval.Value; }
          set { this._Interval.Value = value; }
        }
        protected global::Sungero.Domain.Client.EnumSimpleProperty<global::Sungero.Core.Enumeration?> _RepeatType;

        public virtual global::Sungero.Core.Enumeration? RepeatType
        {
          get { return this._RepeatType.Value; }
          set { this._RepeatType.Value = value; }
        }
        protected global::Sungero.Domain.Client.EnumSimpleProperty<global::Sungero.Core.Enumeration?> _IntervalType;

        public virtual global::Sungero.Core.Enumeration? IntervalType
        {
          get { return this._IntervalType.Value; }
          set { this._IntervalType.Value = value; }
        }


        private static global::Sungero.Domain.Shared.EnumerationItems _DocumentDateTypeItems = new global::Sungero.Domain.Shared.EnumerationItems(
          null,
          typeof(global::Sungero.Docflow.RetentionPolicy.DocumentDateType),
          typeof(global::Sungero.Docflow.Client.RetentionPolicy),
          "DocumentDateType");

        public static global::Sungero.Domain.Shared.EnumerationItems DocumentDateTypeItems
        {
          get { return global::Sungero.Docflow.Client.RetentionPolicy._DocumentDateTypeItems; }
        }

        public virtual global::Sungero.Domain.Shared.EnumerationItems DocumentDateTypeAllowedItems
        {
          get { return global::Sungero.Docflow.Client.RetentionPolicy.DocumentDateTypeItems; }
        }

        private static global::Sungero.Domain.Shared.EnumerationItems _RepeatTypeItems = new global::Sungero.Domain.Shared.EnumerationItems(
          null,
          typeof(global::Sungero.Docflow.RetentionPolicy.RepeatType),
          typeof(global::Sungero.Docflow.Client.RetentionPolicy),
          "RepeatType");

        public static global::Sungero.Domain.Shared.EnumerationItems RepeatTypeItems
        {
          get { return global::Sungero.Docflow.Client.RetentionPolicy._RepeatTypeItems; }
        }

        public virtual global::Sungero.Domain.Shared.EnumerationItems RepeatTypeAllowedItems
        {
          get { return global::Sungero.Docflow.Client.RetentionPolicy.RepeatTypeItems; }
        }

        private static global::Sungero.Domain.Shared.EnumerationItems _IntervalTypeItems = new global::Sungero.Domain.Shared.EnumerationItems(
          null,
          typeof(global::Sungero.Docflow.RetentionPolicy.IntervalType),
          typeof(global::Sungero.Docflow.Client.RetentionPolicy),
          "IntervalType");

        public static global::Sungero.Domain.Shared.EnumerationItems IntervalTypeItems
        {
          get { return global::Sungero.Docflow.Client.RetentionPolicy._IntervalTypeItems; }
        }

        public virtual global::Sungero.Domain.Shared.EnumerationItems IntervalTypeAllowedItems
        {
          get { return global::Sungero.Docflow.Client.RetentionPolicy.IntervalTypeItems; }
        }










    #endregion

    #region Methods

    protected override object CreateActionsHandlers()
    {
      return new global::Sungero.Docflow.Client.RetentionPolicyActions(this);
    }

    protected override object CreateCollectionActionsHandlers()
    {
      return new global::Sungero.Docflow.Client.RetentionPolicyCollectionActions();
    }

    protected override object CreateAnyChildEntityActionsHandlers()
    {
      return new global::Sungero.Docflow.Client.RetentionPolicyAnyChildEntityActions();
    }

    protected override object CreateAnyChildEntityCollectionActionsHandlers()
    {
      return new global::Sungero.Docflow.Client.RetentionPolicyAnyChildEntityCollectionActions();
    }


    protected override global::Sungero.Domain.Client.EntityFunctions CreateClientFunctions()
    {
      return new global::Sungero.Docflow.Client.RetentionPolicyFunctions(this);
    }

    protected override global::Sungero.Domain.Shared.EntityFunctions CreateSharedFunctions()
    {
      return new global::Sungero.Docflow.Shared.RetentionPolicyFunctions(this);
    }
    protected override object CreateHandlers() {
      return new global::Sungero.Docflow.RetentionPolicyClientHandlers(this);
    }
    protected override object CreateSharedHandlers() {
      return new global::Sungero.Docflow.RetentionPolicySharedHandlers(this);
    }

    #endregion

    #region Framework events

    protected void DocumentDateTypeChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.EnumerationPropertyChangedEventArgs(this.State.Properties.DocumentDateType, this.DocumentDateType, this);
     ((global::Sungero.Docflow.RetentionPolicySharedHandlers)this.SharedHandlers).DocumentDateTypeChanged(args);
    }

    protected void DaysToMoveChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.IntegerPropertyChangedEventArgs(this.State.Properties.DaysToMove, this.DaysToMove, this);
     ((global::Sungero.Docflow.RetentionPolicySharedHandlers)this.SharedHandlers).DaysToMoveChanged(args);
    }

    protected void NextRetentionChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.DateTimePropertyChangedEventArgs(this.State.Properties.NextRetention, this.NextRetention, this);
     ((global::Sungero.Docflow.RetentionPolicySharedHandlers)this.SharedHandlers).NextRetentionChanged(args);
    }

    protected void LastRetentionChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.DateTimePropertyChangedEventArgs(this.State.Properties.LastRetention, this.LastRetention, this);
     ((global::Sungero.Docflow.RetentionPolicySharedHandlers)this.SharedHandlers).LastRetentionChanged(args);
    }

    protected void IntervalChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.IntegerPropertyChangedEventArgs(this.State.Properties.Interval, this.Interval, this);
     ((global::Sungero.Docflow.RetentionPolicySharedHandlers)this.SharedHandlers).IntervalChanged(args);
    }

    protected void RepeatTypeChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.EnumerationPropertyChangedEventArgs(this.State.Properties.RepeatType, this.RepeatType, this);
     ((global::Sungero.Docflow.RetentionPolicySharedHandlers)this.SharedHandlers).RepeatTypeChanged(args);
    }

    protected void IntervalTypeChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.EnumerationPropertyChangedEventArgs(this.State.Properties.IntervalType, this.IntervalType, this);
     ((global::Sungero.Docflow.RetentionPolicySharedHandlers)this.SharedHandlers).IntervalTypeChanged(args);
    }




  protected global::Sungero.Core.Enumeration? DocumentDateTypeValueInputHandler(global::Sungero.Core.Enumeration? value)
  {
    var args = new global::Sungero.Presentation.EnumerationValueInputEventArgs(this.DocumentDateType, value, this, this.Info.Properties.DocumentDateType);
    ((global::Sungero.Docflow.RetentionPolicyClientHandlers)this.Handlers).DocumentDateTypeValueInput(args);
    return args.NewValue;
  }

  protected global::System.Int32? DaysToMoveValueInputHandler(global::System.Int32? value)
  {
    var args = new global::Sungero.Presentation.IntegerValueInputEventArgs(this.DaysToMove, value, this, this.Info.Properties.DaysToMove);
    ((global::Sungero.Docflow.RetentionPolicyClientHandlers)this.Handlers).DaysToMoveValueInput(args);
    return args.NewValue;
  }

  protected global::System.DateTime? NextRetentionValueInputHandler(global::System.DateTime? value)
  {
    var args = new global::Sungero.Presentation.DateTimeValueInputEventArgs(this.NextRetention, value, this, this.Info.Properties.NextRetention);
    ((global::Sungero.Docflow.RetentionPolicyClientHandlers)this.Handlers).NextRetentionValueInput(args);
    return args.NewValue;
  }

  protected global::System.DateTime? LastRetentionValueInputHandler(global::System.DateTime? value)
  {
    var args = new global::Sungero.Presentation.DateTimeValueInputEventArgs(this.LastRetention, value, this, this.Info.Properties.LastRetention);
    ((global::Sungero.Docflow.RetentionPolicyClientHandlers)this.Handlers).LastRetentionValueInput(args);
    return args.NewValue;
  }

  protected global::System.Int32? IntervalValueInputHandler(global::System.Int32? value)
  {
    var args = new global::Sungero.Presentation.IntegerValueInputEventArgs(this.Interval, value, this, this.Info.Properties.Interval);
    ((global::Sungero.Docflow.RetentionPolicyClientHandlers)this.Handlers).IntervalValueInput(args);
    return args.NewValue;
  }

  protected global::Sungero.Core.Enumeration? RepeatTypeValueInputHandler(global::Sungero.Core.Enumeration? value)
  {
    var args = new global::Sungero.Presentation.EnumerationValueInputEventArgs(this.RepeatType, value, this, this.Info.Properties.RepeatType);
    ((global::Sungero.Docflow.RetentionPolicyClientHandlers)this.Handlers).RepeatTypeValueInput(args);
    return args.NewValue;
  }

  protected global::Sungero.Core.Enumeration? IntervalTypeValueInputHandler(global::Sungero.Core.Enumeration? value)
  {
    var args = new global::Sungero.Presentation.EnumerationValueInputEventArgs(this.IntervalType, value, this, this.Info.Properties.IntervalType);
    ((global::Sungero.Docflow.RetentionPolicyClientHandlers)this.Handlers).IntervalTypeValueInput(args);
    return args.NewValue;
  }


  protected global::System.Collections.Generic.IEnumerable<global::Sungero.Core.Enumeration> DocumentDateTypeFilteringHandler()
  {
    return ((global::Sungero.Docflow.RetentionPolicyClientHandlers)this.Handlers).DocumentDateTypeFiltering(this.DocumentDateTypeAllowedItems);
  }





  protected global::System.Collections.Generic.IEnumerable<global::Sungero.Core.Enumeration> RepeatTypeFilteringHandler()
  {
    return ((global::Sungero.Docflow.RetentionPolicyClientHandlers)this.Handlers).RepeatTypeFiltering(this.RepeatTypeAllowedItems);
  }

  protected global::System.Collections.Generic.IEnumerable<global::Sungero.Core.Enumeration> IntervalTypeFilteringHandler()
  {
    return ((global::Sungero.Docflow.RetentionPolicyClientHandlers)this.Handlers).IntervalTypeFiltering(this.IntervalTypeAllowedItems);
  }


    #endregion

    #region Constructors



            protected override void InitDocumentKindsCollectionProperty()
            {
              this._DocumentKinds = new global::Sungero.Domain.Client.ListProperty<global::Sungero.Docflow.IRetentionPolicyDocumentKinds>("DocumentKinds", this);
              this._DocumentKinds.ValueChanged += (sender, e) => { this.DocumentKindsChangedHandler(); };
              this.AddProperty((global::Sungero.Domain.Client.IProperty)this._DocumentKinds);
              this.SetDocumentKindsEventHandlers();
            }


    public RetentionPolicy()
    {
            this._DocumentDateType = new global::Sungero.Domain.Client.EnumSimpleProperty<global::Sungero.Core.Enumeration?>("DocumentDateType", this);
            this._DocumentDateType.ValueChanged += (sender, e) => { this.DocumentDateTypeChangedHandler(); };
            this.AddProperty(this._DocumentDateType);

            this._DaysToMove = new global::Sungero.Domain.Client.SimpleProperty<global::System.Int32?>("DaysToMove", this);
            this._DaysToMove.ValueChanged += (sender, e) => { this.DaysToMoveChangedHandler(); };
            this.AddProperty(this._DaysToMove);

            this._NextRetention = new global::Sungero.Domain.Client.SimpleProperty<global::System.DateTime?>("NextRetention", this);
            this._NextRetention.ValueChanged += (sender, e) => { this.NextRetentionChangedHandler(); };
            this.AddProperty(this._NextRetention);

            this._LastRetention = new global::Sungero.Domain.Client.SimpleProperty<global::System.DateTime?>("LastRetention", this);
            this._LastRetention.ValueChanged += (sender, e) => { this.LastRetentionChangedHandler(); };
            this.AddProperty(this._LastRetention);

            this._Interval = new global::Sungero.Domain.Client.SimpleProperty<global::System.Int32?>("Interval", this);
            this._Interval.ValueChanged += (sender, e) => { this.IntervalChangedHandler(); };
            this.AddProperty(this._Interval);

            this._RepeatType = new global::Sungero.Domain.Client.EnumSimpleProperty<global::Sungero.Core.Enumeration?>("RepeatType", this);
            this._RepeatType.ValueChanged += (sender, e) => { this.RepeatTypeChangedHandler(); };
            this.AddProperty(this._RepeatType);

            this._IntervalType = new global::Sungero.Domain.Client.EnumSimpleProperty<global::Sungero.Core.Enumeration?>("IntervalType", this);
            this._IntervalType.ValueChanged += (sender, e) => { this.IntervalTypeChangedHandler(); };
            this.AddProperty(this._IntervalType);








    }

    #endregion

  }
}

// ==================================================================
// RetentionPolicyPresenter.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Client
{
  public class RetentionPolicyPresenter<T> :
    global::Sungero.Docflow.Client.StoragePolicyBasePresenter<T>
    where T : class, global::Sungero.Docflow.IRetentionPolicy
  {
    #region Fields and properties




    #endregion

    #region Methods

    #endregion

    #region Framework events

    protected override void EntityPropertyChangedEventHandler(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
    {
      base.EntityPropertyChangedEventHandler(sender, e);
    }

    #endregion



    #region Constructors

    private void Init()
    {
              this._StorageCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.CoreEntities.IStorage>(() => this.Entity.Id, typeof(T), "Storage");


                        this._DocumentKindsDocumentKindCollectionPresenter
                        .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Docflow.IDocumentKind>(() => this.Entity.Id, typeof(Sungero.Docflow.IRetentionPolicyDocumentKinds), "DocumentKind");



    }

    public RetentionPolicyPresenter()
    {
      this.Init();
    }

    #endregion
  }
}

// ==================================================================
// RetentionPolicyCollectionPresenter.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Client
{
  public class RetentionPolicyCollectionPresenter<T> : 
    global::Sungero.Docflow.Client.StoragePolicyBaseCollectionPresenter<T>
    where T: class, global::Sungero.Docflow.IRetentionPolicy
  {
    #region Actions



    #endregion

    #region Methods


    #endregion

    public RetentionPolicyCollectionPresenter(global::System.Linq.IQueryable<T> query, OnLookup onLookup)
      : base(query, onLookup)
    {
    }

    public RetentionPolicyCollectionPresenter(global::System.Linq.IQueryable<T> query)
      : this(query, null) { }

    public RetentionPolicyCollectionPresenter(OnLookup onLookup)
      : this(null, onLookup) { }

    public RetentionPolicyCollectionPresenter()
      : this(null, null) { }
  }
}

// ==================================================================
// RetentionPolicyRepositoryImplementer.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Client
{ 
  public class RetentionPolicyRepositoryImplementer<T> : 
      global::Sungero.Docflow.Client.StoragePolicyBaseRepositoryImplementer<T>,
      global::Sungero.Docflow.IRetentionPolicyRepositoryImplementer<T>
      where T : global::Sungero.Docflow.IRetentionPolicy
    {
       public new global::Sungero.Docflow.IRetentionPolicyAccessRights AccessRights
       {
          get { return (global::Sungero.Docflow.IRetentionPolicyAccessRights)base.AccessRights; }
       }

       public new global::Sungero.Docflow.IRetentionPolicyInfo Info
       {
          get { return (global::Sungero.Docflow.IRetentionPolicyInfo)base.Info; }
       }

       protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
       {
         return new global::Sungero.Docflow.Client.RetentionPolicyTypeAccessRights(typeof(T));
       }
    }
}

// ==================================================================
// RetentionPolicyAccessRights.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Client
{
  public class RetentionPolicyAccessRights : 
    Sungero.Docflow.Client.StoragePolicyBaseAccessRights, Sungero.Docflow.IRetentionPolicyAccessRights
  {

    public RetentionPolicyAccessRights(global::Sungero.Domain.Shared.IEntity entity) : base(entity)
    {
    }
  }

  public class RetentionPolicyTypeAccessRights : 
    Sungero.Docflow.Client.StoragePolicyBaseTypeAccessRights, Sungero.Docflow.IRetentionPolicyAccessRights
  {

    public RetentionPolicyTypeAccessRights(global::System.Type entityType) : base(entityType)
    {
    }
  }
}
