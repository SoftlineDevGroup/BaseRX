
// ==================================================================
// RegistrationSetting.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Client
{
  public class RegistrationSetting :
    global::Sungero.CoreEntities.Client.DatabookEntry, global::Sungero.Docflow.IRegistrationSetting
  {
    #region Fields and properties

    public static new readonly global::System.Guid ClassTypeGuid = global::System.Guid.Parse("ff9c10ff-2c62-43cd-8bcf-d6184359b5b6");

    public override global::System.Guid TypeGuid
    {
      get { return global::Sungero.Docflow.Client.RegistrationSetting.ClassTypeGuid; }
    }

    public override string TypeName
    {
      get { return "Sungero.Docflow.IRegistrationSetting, Sungero.Domain.Interfaces"; }
    }

      public override string DisplayValue
      {
        get { return this.Name; }
        set { this.Name = value; }
      }

      public override string DisplayPropertyName
      {
        get { return "Name"; }
      }


    public new global::Sungero.Docflow.IRegistrationSettingState State
    {
      get
      {
        return (global::Sungero.Docflow.IRegistrationSettingState)base.State;
      }
    }

    protected override global::Sungero.Domain.Shared.IEntityState CreateState()
    {
      return new global::Sungero.Docflow.Shared.RegistrationSettingState(this);
    }

    public new global::Sungero.Docflow.IRegistrationSettingInfo Info
    {
      get
      {
        return (global::Sungero.Docflow.IRegistrationSettingInfo)base.Info;
      }
    }

    public new global::Sungero.Docflow.IRegistrationSettingAccessRights AccessRights
    {
      get
      {
        return (global::Sungero.Docflow.IRegistrationSettingAccessRights)base.AccessRights;
      }
    }

    protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
    {
      return new global::Sungero.Docflow.Client.RegistrationSettingAccessRights(this);
    }

        protected global::Sungero.Domain.Client.SimpleProperty<global::System.String> _Name;

        public virtual global::System.String Name
        {
          get { return this._Name.Value; }
          set { this._Name.Value = value; }
        }
        protected global::Sungero.Domain.Client.EnumSimpleProperty<global::Sungero.Core.Enumeration?> _DocumentFlow;

        public virtual global::Sungero.Core.Enumeration? DocumentFlow
        {
          get { return this._DocumentFlow.Value; }
          set { this._DocumentFlow.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.Int32?> _Priority;

        public virtual global::System.Int32? Priority
        {
          get { return this._Priority.Value; }
          set { this._Priority.Value = value; }
        }
        protected global::Sungero.Domain.Client.EnumSimpleProperty<global::Sungero.Core.Enumeration?> _SettingType;

        public virtual global::Sungero.Core.Enumeration? SettingType
        {
          get { return this._SettingType.Value; }
          set { this._SettingType.Value = value; }
        }


        private static global::Sungero.Domain.Shared.EnumerationItems _DocumentFlowItems = new global::Sungero.Domain.Shared.EnumerationItems(
          null,
          typeof(global::Sungero.Docflow.RegistrationSetting.DocumentFlow),
          typeof(global::Sungero.Docflow.Client.RegistrationSetting),
          "DocumentFlow");

        public static global::Sungero.Domain.Shared.EnumerationItems DocumentFlowItems
        {
          get { return global::Sungero.Docflow.Client.RegistrationSetting._DocumentFlowItems; }
        }

        public virtual global::Sungero.Domain.Shared.EnumerationItems DocumentFlowAllowedItems
        {
          get { return global::Sungero.Docflow.Client.RegistrationSetting.DocumentFlowItems; }
        }

        private static global::Sungero.Domain.Shared.EnumerationItems _SettingTypeItems = new global::Sungero.Domain.Shared.EnumerationItems(
          null,
          typeof(global::Sungero.Docflow.RegistrationSetting.SettingType),
          typeof(global::Sungero.Docflow.Client.RegistrationSetting),
          "SettingType");

        public static global::Sungero.Domain.Shared.EnumerationItems SettingTypeItems
        {
          get { return global::Sungero.Docflow.Client.RegistrationSetting._SettingTypeItems; }
        }

        public virtual global::Sungero.Domain.Shared.EnumerationItems SettingTypeAllowedItems
        {
          get { return global::Sungero.Docflow.Client.RegistrationSetting.SettingTypeItems; }
        }




              protected global::Sungero.Domain.Client.INavigationProperty<global::Sungero.Docflow.IDocumentRegister> _DocumentRegister;

              public virtual global::Sungero.Docflow.IDocumentRegister DocumentRegister
              {
              get
              {
                return this._DocumentRegister.Value as global::Sungero.Docflow.IDocumentRegister;
              }

              set
              {
                (this._DocumentRegister as global::Sungero.Domain.Client.IProperty).Value = value;
              }
            }







          protected global::Sungero.Domain.Client.IListProperty<global::Sungero.Docflow.IRegistrationSettingDocumentKinds> _DocumentKinds;

          virtual public global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Docflow.IRegistrationSettingDocumentKinds> DocumentKinds
          {
            get { return this._DocumentKinds.Value; }
          }


          protected global::Sungero.Domain.Client.IListProperty<global::Sungero.Docflow.IRegistrationSettingBusinessUnits> _BusinessUnits;

          virtual public global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Docflow.IRegistrationSettingBusinessUnits> BusinessUnits
          {
            get { return this._BusinessUnits.Value; }
          }


          protected global::Sungero.Domain.Client.IListProperty<global::Sungero.Docflow.IRegistrationSettingDepartments> _Departments;

          virtual public global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Docflow.IRegistrationSettingDepartments> Departments
          {
            get { return this._Departments.Value; }
          }






    private object _DocumentKindsActionsHandlers;

    public object DocumentKindsActionsHandlers
    {
      get
      {
        if (this._DocumentKindsActionsHandlers == null)
          this._DocumentKindsActionsHandlers = this.CreateDocumentKindsActionsHandlers();
        return this._DocumentKindsActionsHandlers;
      }
    }

    private object _DocumentKindsCollectionActionsHandlers;

    public object DocumentKindsCollectionActionsHandlers
    {
      get
      {
        if (this._DocumentKindsCollectionActionsHandlers == null)
          this._DocumentKindsCollectionActionsHandlers = this.CreateDocumentKindsCollectionActionsHandlers();
        return this._DocumentKindsCollectionActionsHandlers;
      }
    }
    private object _BusinessUnitsActionsHandlers;

    public object BusinessUnitsActionsHandlers
    {
      get
      {
        if (this._BusinessUnitsActionsHandlers == null)
          this._BusinessUnitsActionsHandlers = this.CreateBusinessUnitsActionsHandlers();
        return this._BusinessUnitsActionsHandlers;
      }
    }

    private object _BusinessUnitsCollectionActionsHandlers;

    public object BusinessUnitsCollectionActionsHandlers
    {
      get
      {
        if (this._BusinessUnitsCollectionActionsHandlers == null)
          this._BusinessUnitsCollectionActionsHandlers = this.CreateBusinessUnitsCollectionActionsHandlers();
        return this._BusinessUnitsCollectionActionsHandlers;
      }
    }
    private object _DepartmentsActionsHandlers;

    public object DepartmentsActionsHandlers
    {
      get
      {
        if (this._DepartmentsActionsHandlers == null)
          this._DepartmentsActionsHandlers = this.CreateDepartmentsActionsHandlers();
        return this._DepartmentsActionsHandlers;
      }
    }

    private object _DepartmentsCollectionActionsHandlers;

    public object DepartmentsCollectionActionsHandlers
    {
      get
      {
        if (this._DepartmentsCollectionActionsHandlers == null)
          this._DepartmentsCollectionActionsHandlers = this.CreateDepartmentsCollectionActionsHandlers();
        return this._DepartmentsCollectionActionsHandlers;
      }
    }

    #endregion

    #region Methods

    protected override object CreateActionsHandlers()
    {
      return new global::Sungero.Docflow.Client.RegistrationSettingActions(this);
    }

    protected override object CreateCollectionActionsHandlers()
    {
      return new global::Sungero.Docflow.Client.RegistrationSettingCollectionActions();
    }

    protected override object CreateAnyChildEntityActionsHandlers()
    {
      return new global::Sungero.Docflow.Client.RegistrationSettingAnyChildEntityActions();
    }

    protected override object CreateAnyChildEntityCollectionActionsHandlers()
    {
      return new global::Sungero.Docflow.Client.RegistrationSettingAnyChildEntityCollectionActions();
    }

    protected object CreateDocumentKindsActionsHandlers()
    {
      return null;
    }

    protected object CreateDocumentKindsCollectionActionsHandlers()
    {
      return null;
    }
    protected object CreateBusinessUnitsActionsHandlers()
    {
      return null;
    }

    protected object CreateBusinessUnitsCollectionActionsHandlers()
    {
      return null;
    }
    protected object CreateDepartmentsActionsHandlers()
    {
      return null;
    }

    protected object CreateDepartmentsCollectionActionsHandlers()
    {
      return null;
    }


    protected override global::Sungero.Domain.Client.EntityFunctions CreateClientFunctions()
    {
      return new global::Sungero.Docflow.Client.RegistrationSettingFunctions(this);
    }

    protected override global::Sungero.Domain.Shared.EntityFunctions CreateSharedFunctions()
    {
      return new global::Sungero.Docflow.Shared.RegistrationSettingFunctions(this);
    }
    protected override object CreateHandlers() {
      return new global::Sungero.Docflow.RegistrationSettingClientHandlers(this);
    }
    protected override object CreateSharedHandlers() {
      return new global::Sungero.Docflow.RegistrationSettingSharedHandlers(this);
    }

    #endregion

    #region Framework events

    protected void NameChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.Name, this.Name, this);
     ((global::Sungero.Docflow.RegistrationSettingSharedHandlers)this.SharedHandlers).NameChanged(args);
    }

    protected void DocumentFlowChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.EnumerationPropertyChangedEventArgs(this.State.Properties.DocumentFlow, this.DocumentFlow, this);
     ((global::Sungero.Docflow.RegistrationSettingSharedHandlers)this.SharedHandlers).DocumentFlowChanged(args);
    }

    protected void DocumentKindsChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.CollectionPropertyChangedEventArgs(this);
     ((global::Sungero.Docflow.RegistrationSettingSharedHandlers)this.SharedHandlers).DocumentKindsChanged(args);
    }

    protected void BusinessUnitsChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.CollectionPropertyChangedEventArgs(this);
     ((global::Sungero.Docflow.RegistrationSettingSharedHandlers)this.SharedHandlers).BusinessUnitsChanged(args);
    }

    protected void DepartmentsChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.CollectionPropertyChangedEventArgs(this);
     ((global::Sungero.Docflow.RegistrationSettingSharedHandlers)this.SharedHandlers).DepartmentsChanged(args);
    }

    protected void DocumentRegisterChangedHandler()
    {
      var args = new global::Sungero.Docflow.Shared.RegistrationSettingDocumentRegisterChangedEventArgs(this.State.Properties.DocumentRegister, this.DocumentRegister, this);
     ((global::Sungero.Docflow.RegistrationSettingSharedHandlers)this.SharedHandlers).DocumentRegisterChanged(args);
    }

    protected void PriorityChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.IntegerPropertyChangedEventArgs(this.State.Properties.Priority, this.Priority, this);
     ((global::Sungero.Docflow.RegistrationSettingSharedHandlers)this.SharedHandlers).PriorityChanged(args);
    }

    protected void SettingTypeChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.EnumerationPropertyChangedEventArgs(this.State.Properties.SettingType, this.SettingType, this);
     ((global::Sungero.Docflow.RegistrationSettingSharedHandlers)this.SharedHandlers).SettingTypeChanged(args);
    }



    protected virtual global::Sungero.Docflow.RegistrationSettingDocumentKindsSharedCollectionHandlers CreateDocumentKindsAddedHandler(global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.Docflow.RegistrationSettingDocumentKindsSharedCollectionHandlers(this, e.Value, null, e.Source);
    }

    protected virtual global::Sungero.Docflow.RegistrationSettingDocumentKindsSharedCollectionHandlers CreateDocumentKindsDeletedHandler(global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.Docflow.RegistrationSettingDocumentKindsSharedCollectionHandlers(this, null, e.Value, null);
    }

    protected virtual void DocumentKindsAddedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {  
      var collectionHandlers = this.CreateDocumentKindsAddedHandler(e);
      if (collectionHandlers != null)
      {
        var args = new global::Sungero.Domain.Shared.CollectionPropertyAddedEventArgs(this);
        collectionHandlers.DocumentKindsAdded(args);
      }
    }

    protected virtual void DocumentKindsDeletedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {  
      var collectionHandlers = this.CreateDocumentKindsDeletedHandler(e);
      if (collectionHandlers != null)
      {
        var args = new global::Sungero.Domain.Shared.CollectionPropertyDeletedEventArgs(this);
        collectionHandlers.DocumentKindsDeleted(args);
      }
    }


    protected virtual global::Sungero.Docflow.RegistrationSettingBusinessUnitsSharedCollectionHandlers CreateBusinessUnitsAddedHandler(global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.Docflow.RegistrationSettingBusinessUnitsSharedCollectionHandlers(this, e.Value, null, e.Source);
    }

    protected virtual global::Sungero.Docflow.RegistrationSettingBusinessUnitsSharedCollectionHandlers CreateBusinessUnitsDeletedHandler(global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.Docflow.RegistrationSettingBusinessUnitsSharedCollectionHandlers(this, null, e.Value, null);
    }

    protected virtual void BusinessUnitsAddedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {  
      var collectionHandlers = this.CreateBusinessUnitsAddedHandler(e);
      if (collectionHandlers != null)
      {
        var args = new global::Sungero.Domain.Shared.CollectionPropertyAddedEventArgs(this);
        collectionHandlers.BusinessUnitsAdded(args);
      }
    }

    protected virtual void BusinessUnitsDeletedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {  
      var collectionHandlers = this.CreateBusinessUnitsDeletedHandler(e);
      if (collectionHandlers != null)
      {
        var args = new global::Sungero.Domain.Shared.CollectionPropertyDeletedEventArgs(this);
        collectionHandlers.BusinessUnitsDeleted(args);
      }
    }


    protected virtual global::Sungero.Docflow.RegistrationSettingDepartmentsSharedCollectionHandlers CreateDepartmentsAddedHandler(global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.Docflow.RegistrationSettingDepartmentsSharedCollectionHandlers(this, e.Value, null, e.Source);
    }

    protected virtual global::Sungero.Docflow.RegistrationSettingDepartmentsSharedCollectionHandlers CreateDepartmentsDeletedHandler(global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.Docflow.RegistrationSettingDepartmentsSharedCollectionHandlers(this, null, e.Value, null);
    }

    protected virtual void DepartmentsAddedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {  
      var collectionHandlers = this.CreateDepartmentsAddedHandler(e);
      if (collectionHandlers != null)
      {
        var args = new global::Sungero.Domain.Shared.CollectionPropertyAddedEventArgs(this);
        collectionHandlers.DepartmentsAdded(args);
      }
    }

    protected virtual void DepartmentsDeletedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {  
      var collectionHandlers = this.CreateDepartmentsDeletedHandler(e);
      if (collectionHandlers != null)
      {
        var args = new global::Sungero.Domain.Shared.CollectionPropertyDeletedEventArgs(this);
        collectionHandlers.DepartmentsDeleted(args);
      }
    }


  protected global::System.String NameValueInputHandler(global::System.String value)
  {
    var args = new global::Sungero.Presentation.StringValueInputEventArgs(this.Name, value, this, this.Info.Properties.Name);
    ((global::Sungero.Docflow.RegistrationSettingClientHandlers)this.Handlers).NameValueInput(args);
    return args.NewValue;
  }

  protected global::Sungero.Core.Enumeration? DocumentFlowValueInputHandler(global::Sungero.Core.Enumeration? value)
  {
    var args = new global::Sungero.Presentation.EnumerationValueInputEventArgs(this.DocumentFlow, value, this, this.Info.Properties.DocumentFlow);
    ((global::Sungero.Docflow.RegistrationSettingClientHandlers)this.Handlers).DocumentFlowValueInput(args);
    return args.NewValue;
  }




  protected global::Sungero.Docflow.IDocumentRegister DocumentRegisterValueInputHandler(global::Sungero.Docflow.IDocumentRegister value)
  {
    var args = new global::Sungero.Docflow.Client.RegistrationSettingDocumentRegisterValueInputEventArgs(this.DocumentRegister, value, this, this.Info.Properties.DocumentRegister);
    ((global::Sungero.Docflow.RegistrationSettingClientHandlers)this.Handlers).DocumentRegisterValueInput(args);
    return args.NewValue;
  }

  protected global::System.Int32? PriorityValueInputHandler(global::System.Int32? value)
  {
    var args = new global::Sungero.Presentation.IntegerValueInputEventArgs(this.Priority, value, this, this.Info.Properties.Priority);
    ((global::Sungero.Docflow.RegistrationSettingClientHandlers)this.Handlers).PriorityValueInput(args);
    return args.NewValue;
  }

  protected global::Sungero.Core.Enumeration? SettingTypeValueInputHandler(global::Sungero.Core.Enumeration? value)
  {
    var args = new global::Sungero.Presentation.EnumerationValueInputEventArgs(this.SettingType, value, this, this.Info.Properties.SettingType);
    ((global::Sungero.Docflow.RegistrationSettingClientHandlers)this.Handlers).SettingTypeValueInput(args);
    return args.NewValue;
  }


  protected global::System.Collections.Generic.IEnumerable<global::Sungero.Core.Enumeration> DocumentFlowFilteringHandler()
  {
    return ((global::Sungero.Docflow.RegistrationSettingClientHandlers)this.Handlers).DocumentFlowFiltering(this.DocumentFlowAllowedItems);
  }






  protected global::System.Collections.Generic.IEnumerable<global::Sungero.Core.Enumeration> SettingTypeFilteringHandler()
  {
    return ((global::Sungero.Docflow.RegistrationSettingClientHandlers)this.Handlers).SettingTypeFiltering(this.SettingTypeAllowedItems);
  }


    #endregion

    #region Constructors



              protected virtual void InitDocumentRegisterNavigationProperty()
              {
                this._DocumentRegister = new global::Sungero.Domain.Client.NavigationProperty<global::Sungero.Docflow.IDocumentRegister>("DocumentRegister", this);
                this._DocumentRegister.ValueChanged += (sender, e) => { this.DocumentRegisterChangedHandler(); };
                this.AddProperty(this._DocumentRegister as global::Sungero.Domain.Client.IProperty);
              }



            protected virtual void InitDocumentKindsCollectionProperty()
            {
              this._DocumentKinds = new global::Sungero.Domain.Client.ListProperty<global::Sungero.Docflow.IRegistrationSettingDocumentKinds>("DocumentKinds", this);
              this._DocumentKinds.ValueChanged += (sender, e) => { this.DocumentKindsChangedHandler(); };
              this.AddProperty((global::Sungero.Domain.Client.IProperty)this._DocumentKinds);
              this.SetDocumentKindsEventHandlers();
            }

            protected void SetDocumentKindsEventHandlers()
            {
              this._DocumentKinds.ChildEntityAdded += this.DocumentKindsAddedHandler;
              this._DocumentKinds.ChildEntityDeleted += this.DocumentKindsDeletedHandler;
            }

            protected virtual void InitBusinessUnitsCollectionProperty()
            {
              this._BusinessUnits = new global::Sungero.Domain.Client.ListProperty<global::Sungero.Docflow.IRegistrationSettingBusinessUnits>("BusinessUnits", this);
              this._BusinessUnits.ValueChanged += (sender, e) => { this.BusinessUnitsChangedHandler(); };
              this.AddProperty((global::Sungero.Domain.Client.IProperty)this._BusinessUnits);
              this.SetBusinessUnitsEventHandlers();
            }

            protected void SetBusinessUnitsEventHandlers()
            {
              this._BusinessUnits.ChildEntityAdded += this.BusinessUnitsAddedHandler;
              this._BusinessUnits.ChildEntityDeleted += this.BusinessUnitsDeletedHandler;
            }

            protected virtual void InitDepartmentsCollectionProperty()
            {
              this._Departments = new global::Sungero.Domain.Client.ListProperty<global::Sungero.Docflow.IRegistrationSettingDepartments>("Departments", this);
              this._Departments.ValueChanged += (sender, e) => { this.DepartmentsChangedHandler(); };
              this.AddProperty((global::Sungero.Domain.Client.IProperty)this._Departments);
              this.SetDepartmentsEventHandlers();
            }

            protected void SetDepartmentsEventHandlers()
            {
              this._Departments.ChildEntityAdded += this.DepartmentsAddedHandler;
              this._Departments.ChildEntityDeleted += this.DepartmentsDeletedHandler;
            }


    public RegistrationSetting()
    {
            this._Name = new global::Sungero.Domain.Client.SimpleProperty<global::System.String>("Name", this);
            this._Name.ValueChanged += (sender, e) => { this.NameChangedHandler(); };
            this.AddProperty(this._Name);

            this._DocumentFlow = new global::Sungero.Domain.Client.EnumSimpleProperty<global::Sungero.Core.Enumeration?>("DocumentFlow", this);
            this._DocumentFlow.ValueChanged += (sender, e) => { this.DocumentFlowChangedHandler(); };
            this.AddProperty(this._DocumentFlow);

            this._Priority = new global::Sungero.Domain.Client.SimpleProperty<global::System.Int32?>("Priority", this);
            this._Priority.ValueChanged += (sender, e) => { this.PriorityChangedHandler(); };
            this.AddProperty(this._Priority);

            this._SettingType = new global::Sungero.Domain.Client.EnumSimpleProperty<global::Sungero.Core.Enumeration?>("SettingType", this);
            this._SettingType.ValueChanged += (sender, e) => { this.SettingTypeChangedHandler(); };
            this.AddProperty(this._SettingType);

            this.InitDocumentRegisterNavigationProperty();


            this.InitDocumentKindsCollectionProperty();

            this.InitBusinessUnitsCollectionProperty();

            this.InitDepartmentsCollectionProperty();







    }

    #endregion

  }
}

// ==================================================================
// RegistrationSettingPresenter.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Client
{
  public class RegistrationSettingPresenter<T> :
    global::Sungero.Domain.Client.EntityPresenter<T>
    where T : class, global::Sungero.Docflow.IRegistrationSetting
  {
    #region Fields and properties

          private global::System.Windows.Input.ICommand _ShowDuplicateCommand;

          public global::System.Windows.Input.ICommand ShowDuplicateCommand
          {
            get
            {
              if (this._ShowDuplicateCommand == null)
                  this._ShowDuplicateCommand = new global::Sungero.Domain.Client.SingleEntityCommand<T>("ShowDuplicate", this, this.ShowDuplicate, this.CanShowDuplicate) { IsEmptyParameterAllowed = true };
              return this._ShowDuplicateCommand;
            }
          }
          private global::System.Windows.Input.ICommand _ShowDepartmentsCommand;

          public global::System.Windows.Input.ICommand ShowDepartmentsCommand
          {
            get
            {
              if (this._ShowDepartmentsCommand == null)
                  this._ShowDepartmentsCommand = new global::Sungero.Domain.Client.SingleEntityCommand<T>("ShowDepartments", this, this.ShowDepartments, this.CanShowDepartments) { IsEmptyParameterAllowed = true };
              return this._ShowDepartmentsCommand;
            }
          }
          private global::System.Windows.Input.ICommand _ShowBusinessUnitsCommand;

          public global::System.Windows.Input.ICommand ShowBusinessUnitsCommand
          {
            get
            {
              if (this._ShowBusinessUnitsCommand == null)
                  this._ShowBusinessUnitsCommand = new global::Sungero.Domain.Client.SingleEntityCommand<T>("ShowBusinessUnits", this, this.ShowBusinessUnits, this.CanShowBusinessUnits) { IsEmptyParameterAllowed = true };
              return this._ShowBusinessUnitsCommand;
            }
          }
          private global::System.Windows.Input.ICommand _ShowDocumentKindsCommand;

          public global::System.Windows.Input.ICommand ShowDocumentKindsCommand
          {
            get
            {
              if (this._ShowDocumentKindsCommand == null)
                  this._ShowDocumentKindsCommand = new global::Sungero.Domain.Client.SingleEntityCommand<T>("ShowDocumentKinds", this, this.ShowDocumentKinds, this.CanShowDocumentKinds) { IsEmptyParameterAllowed = true };
              return this._ShowDocumentKindsCommand;
            }
          }




    #endregion

    #region Methods

              private bool CanShowDuplicate(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfCanExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this);
                return ((Sungero.Docflow.Client.RegistrationSettingActions)(entity as Sungero.Docflow.Client.RegistrationSetting).ActionsHandlers).CanShowDuplicate(args);
              }

              private void ShowDuplicate(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this, entity.Info.Actions.ShowDuplicate);
                ((Sungero.Docflow.Client.RegistrationSettingActions)(entity as Sungero.Docflow.Client.RegistrationSetting).ActionsHandlers).ShowDuplicate(args);
              }

              private bool CanShowDepartments(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfCanExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this);
                return ((Sungero.Docflow.Client.RegistrationSettingActions)(entity as Sungero.Docflow.Client.RegistrationSetting).ActionsHandlers).CanShowDepartments(args);
              }

              private void ShowDepartments(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this, entity.Info.Actions.ShowDepartments);
                ((Sungero.Docflow.Client.RegistrationSettingActions)(entity as Sungero.Docflow.Client.RegistrationSetting).ActionsHandlers).ShowDepartments(args);
              }

              private bool CanShowBusinessUnits(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfCanExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this);
                return ((Sungero.Docflow.Client.RegistrationSettingActions)(entity as Sungero.Docflow.Client.RegistrationSetting).ActionsHandlers).CanShowBusinessUnits(args);
              }

              private void ShowBusinessUnits(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this, entity.Info.Actions.ShowBusinessUnits);
                ((Sungero.Docflow.Client.RegistrationSettingActions)(entity as Sungero.Docflow.Client.RegistrationSetting).ActionsHandlers).ShowBusinessUnits(args);
              }

              private bool CanShowDocumentKinds(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfCanExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this);
                return ((Sungero.Docflow.Client.RegistrationSettingActions)(entity as Sungero.Docflow.Client.RegistrationSetting).ActionsHandlers).CanShowDocumentKinds(args);
              }

              private void ShowDocumentKinds(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this, entity.Info.Actions.ShowDocumentKinds);
                ((Sungero.Docflow.Client.RegistrationSettingActions)(entity as Sungero.Docflow.Client.RegistrationSetting).ActionsHandlers).ShowDocumentKinds(args);
              }


    #endregion

    #region Framework events

    protected override void EntityPropertyChangedEventHandler(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
    {
      base.EntityPropertyChangedEventHandler(sender, e);
    }

    #endregion

              protected global::Sungero.Domain.Client.IEntityCollectionPresenter _DocumentRegisterCollectionPresenter;
              public global::Sungero.Domain.Client.IEntityCollectionPresenter DocumentRegisterCollectionPresenter
              {
          get { return this._DocumentRegisterCollectionPresenter; }
        }


                          protected global::Sungero.Domain.Client.IEntityCollectionPresenter _DocumentKindsDocumentKindCollectionPresenter;
                          public global::Sungero.Domain.Client.IEntityCollectionPresenter DocumentKindsDocumentKindCollectionPresenter
                          {
                  get { return this._DocumentKindsDocumentKindCollectionPresenter; }
                }

                          protected global::Sungero.Domain.Client.IEntityCollectionPresenter _BusinessUnitsBusinessUnitCollectionPresenter;
                          public global::Sungero.Domain.Client.IEntityCollectionPresenter BusinessUnitsBusinessUnitCollectionPresenter
                          {
                  get { return this._BusinessUnitsBusinessUnitCollectionPresenter; }
                }

                          protected global::Sungero.Domain.Client.IEntityCollectionPresenter _DepartmentsDepartmentCollectionPresenter;
                          public global::Sungero.Domain.Client.IEntityCollectionPresenter DepartmentsDepartmentCollectionPresenter
                          {
                  get { return this._DepartmentsDepartmentCollectionPresenter; }
                }



    #region Constructors

    private void Init()
    {
                  this._DocumentRegisterCollectionPresenter = this.CreateCollectionPresenterForNavigationProperty<global::Sungero.Docflow.IDocumentRegister>(global::System.Guid.Parse("fecff0ed-f12f-4639-91f1-9dd8c941381c"));
              this._DocumentRegisterCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationProperty<global::Sungero.Docflow.IDocumentRegister>(() => this.Entity, typeof(T), "DocumentRegister");


                          this._DocumentKindsDocumentKindCollectionPresenter = this.CreateCollectionPresenterForNavigationProperty<global::Sungero.Docflow.IDocumentKind>(global::System.Guid.Parse("30655a03-1e8c-436a-9125-9ae8ab7a00da"));
                        this._DocumentKindsDocumentKindCollectionPresenter
                        .Query = global::Sungero.Domain.Client.Session.GetValuesForChildNavigationProperty<global::Sungero.Docflow.IDocumentKind>(
                          () => this.ChildEntityCollectionPresenters.GetPresenter<global::Sungero.Docflow.IRegistrationSettingDocumentKinds>().FocusedEntity,
                          typeof(Sungero.Docflow.IRegistrationSettingDocumentKinds),
                          () => this.Entity,
                          "DocumentKind");

                          this._BusinessUnitsBusinessUnitCollectionPresenter = this.CreateCollectionPresenterForNavigationProperty<global::Sungero.Company.IBusinessUnit>(global::System.Guid.Parse("883cb27d-9a38-477a-9d50-5b8f8643f74c"));
                        this._BusinessUnitsBusinessUnitCollectionPresenter
                        .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Company.IBusinessUnit>(() => this.Entity.Id, typeof(Sungero.Docflow.IRegistrationSettingBusinessUnits), "BusinessUnit");

                          this._DepartmentsDepartmentCollectionPresenter = this.CreateCollectionPresenterForNavigationProperty<global::Sungero.Company.IDepartment>(global::System.Guid.Parse("0ecb6475-ccf4-483a-a06c-2e862d3cf733"));
                        this._DepartmentsDepartmentCollectionPresenter
                        .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Company.IDepartment>(() => this.Entity.Id, typeof(Sungero.Docflow.IRegistrationSettingDepartments), "Department");


    }

    public RegistrationSettingPresenter()
    {
      this.Init();
    }

    #endregion
  }
}

// ==================================================================
// RegistrationSettingCollectionPresenter.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Client
{
  public class RegistrationSettingCollectionPresenter<T> : 
    global::Sungero.Domain.Client.EntityCollectionPresenter<T>
    where T: class, global::Sungero.Docflow.IRegistrationSetting
  {
    #region Actions

          private global::System.Windows.Input.ICommand _ShowRegistrationSettingsListCommand;  

          public global::System.Windows.Input.ICommand ShowRegistrationSettingsListCommand 
          { 
            get
            { 
              if (this._ShowRegistrationSettingsListCommand == null)
                this._ShowRegistrationSettingsListCommand = new global::Sungero.Domain.Client.PresenterCommand("ShowRegistrationSettingsList", this, this.ShowRegistrationSettingsList, this.CanShowRegistrationSettingsList);
              return this._ShowRegistrationSettingsListCommand; 
            }
          }



    #endregion

    #region Methods

        protected virtual bool CanShowRegistrationSettingsList()
        {
          var args = new global::Sungero.Domain.Client.WpfCanExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Collection, null, this);
          return Sungero.Docflow.Client.RegistrationSettingStaticActions.CanShowRegistrationSettingsList(args);
        }

        protected virtual void ShowRegistrationSettingsList()
        {
          var args = new global::Sungero.Domain.Client.WpfExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Collection, null, this);
          Sungero.Docflow.Client.RegistrationSettingStaticActions.ShowRegistrationSettingsList(args);
        }



    #endregion

    public RegistrationSettingCollectionPresenter(global::System.Linq.IQueryable<T> query, OnLookup onLookup)
      : base(query, onLookup)
    {
    }

    public RegistrationSettingCollectionPresenter(global::System.Linq.IQueryable<T> query)
      : this(query, null) { }

    public RegistrationSettingCollectionPresenter(OnLookup onLookup)
      : this(null, onLookup) { }

    public RegistrationSettingCollectionPresenter()
      : this(null, null) { }
  }
}

// ==================================================================
// RegistrationSettingRepositoryImplementer.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Client
{ 
  public class RegistrationSettingRepositoryImplementer<T> : 
      global::Sungero.Domain.Client.RepositoryImplementer<T>,
      global::Sungero.Docflow.IRegistrationSettingRepositoryImplementer<T>
      where T : global::Sungero.Docflow.IRegistrationSetting
    {
       public new global::Sungero.Docflow.IRegistrationSettingAccessRights AccessRights
       {
          get { return (global::Sungero.Docflow.IRegistrationSettingAccessRights)base.AccessRights; }
       }

       public new global::Sungero.Docflow.IRegistrationSettingInfo Info
       {
          get { return (global::Sungero.Docflow.IRegistrationSettingInfo)base.Info; }
       }

       protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
       {
         return new global::Sungero.Docflow.Client.RegistrationSettingTypeAccessRights(typeof(T));
       }
    }
}

// ==================================================================
// RegistrationSettingAccessRights.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Client
{
  public class RegistrationSettingAccessRights : 
    Sungero.CoreEntities.Client.DatabookEntryAccessRights, Sungero.Docflow.IRegistrationSettingAccessRights
  {

    public RegistrationSettingAccessRights(global::Sungero.Domain.Shared.IEntity entity) : base(entity)
    {
    }
  }

  public class RegistrationSettingTypeAccessRights : 
    Sungero.CoreEntities.Client.DatabookEntryTypeAccessRights, Sungero.Docflow.IRegistrationSettingAccessRights
  {

    public RegistrationSettingTypeAccessRights(global::System.Type entityType) : base(entityType)
    {
    }
  }
}
