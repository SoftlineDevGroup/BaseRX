
// ==================================================================
// AccessRightsRule.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Client
{
  public class AccessRightsRule :
    global::Sungero.CoreEntities.Client.DatabookEntry, global::Sungero.Docflow.IAccessRightsRule
  {
    #region Fields and properties

    public static new readonly global::System.Guid ClassTypeGuid = global::System.Guid.Parse("6b57117e-0253-4a46-a3dc-4ed0d5b512ec");

    public override global::System.Guid TypeGuid
    {
      get { return global::Sungero.Docflow.Client.AccessRightsRule.ClassTypeGuid; }
    }

    public override string TypeName
    {
      get { return "Sungero.Docflow.IAccessRightsRule, Sungero.Domain.Interfaces"; }
    }

      public override string DisplayValue
      {
        get { return this.Name; }
        set { this.Name = value; }
      }

      public override string DisplayPropertyName
      {
        get { return "Name"; }
      }


    public new global::Sungero.Docflow.IAccessRightsRuleState State
    {
      get
      {
        return (global::Sungero.Docflow.IAccessRightsRuleState)base.State;
      }
    }

    protected override global::Sungero.Domain.Shared.IEntityState CreateState()
    {
      return new global::Sungero.Docflow.Shared.AccessRightsRuleState(this);
    }

    public new global::Sungero.Docflow.IAccessRightsRuleInfo Info
    {
      get
      {
        return (global::Sungero.Docflow.IAccessRightsRuleInfo)base.Info;
      }
    }

    public new global::Sungero.Docflow.IAccessRightsRuleAccessRights AccessRights
    {
      get
      {
        return (global::Sungero.Docflow.IAccessRightsRuleAccessRights)base.AccessRights;
      }
    }

    protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
    {
      return new global::Sungero.Docflow.Client.AccessRightsRuleAccessRights(this);
    }

        protected global::Sungero.Domain.Client.SimpleProperty<global::System.String> _Name;

        public virtual global::System.String Name
        {
          get { return this._Name.Value; }
          set { this._Name.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.Boolean?> _GrantRightsOnLeadingDocument;

        public virtual global::System.Boolean? GrantRightsOnLeadingDocument
        {
          get { return this._GrantRightsOnLeadingDocument.Value; }
          set { this._GrantRightsOnLeadingDocument.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.String> _Note;

        public virtual global::System.String Note
        {
          get { return this._Note.Value; }
          set { this._Note.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.DateTime?> _Modified;

        public virtual global::System.DateTime? Modified
        {
          get { return this._Modified.Value; }
          set { this._Modified.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.Boolean?> _GrantRightsOnExistingDocuments;

        public virtual global::System.Boolean? GrantRightsOnExistingDocuments
        {
          get { return this._GrantRightsOnExistingDocuments.Value; }
          set { this._GrantRightsOnExistingDocuments.Value = value; }
        }







          protected global::Sungero.Domain.Client.IListProperty<global::Sungero.Docflow.IAccessRightsRuleDocumentKinds> _DocumentKinds;

          virtual public global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Docflow.IAccessRightsRuleDocumentKinds> DocumentKinds
          {
            get { return this._DocumentKinds.Value; }
          }


          protected global::Sungero.Domain.Client.IListProperty<global::Sungero.Docflow.IAccessRightsRuleBusinessUnits> _BusinessUnits;

          virtual public global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Docflow.IAccessRightsRuleBusinessUnits> BusinessUnits
          {
            get { return this._BusinessUnits.Value; }
          }


          protected global::Sungero.Domain.Client.IListProperty<global::Sungero.Docflow.IAccessRightsRuleDepartments> _Departments;

          virtual public global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Docflow.IAccessRightsRuleDepartments> Departments
          {
            get { return this._Departments.Value; }
          }


          protected global::Sungero.Domain.Client.IListProperty<global::Sungero.Docflow.IAccessRightsRuleDocumentGroups> _DocumentGroups;

          virtual public global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Docflow.IAccessRightsRuleDocumentGroups> DocumentGroups
          {
            get { return this._DocumentGroups.Value; }
          }


          protected global::Sungero.Domain.Client.IListProperty<global::Sungero.Docflow.IAccessRightsRuleMembers> _Members;

          virtual public global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Docflow.IAccessRightsRuleMembers> Members
          {
            get { return this._Members.Value; }
          }






    private object _DocumentKindsActionsHandlers;

    public object DocumentKindsActionsHandlers
    {
      get
      {
        if (this._DocumentKindsActionsHandlers == null)
          this._DocumentKindsActionsHandlers = this.CreateDocumentKindsActionsHandlers();
        return this._DocumentKindsActionsHandlers;
      }
    }

    private object _DocumentKindsCollectionActionsHandlers;

    public object DocumentKindsCollectionActionsHandlers
    {
      get
      {
        if (this._DocumentKindsCollectionActionsHandlers == null)
          this._DocumentKindsCollectionActionsHandlers = this.CreateDocumentKindsCollectionActionsHandlers();
        return this._DocumentKindsCollectionActionsHandlers;
      }
    }
    private object _BusinessUnitsActionsHandlers;

    public object BusinessUnitsActionsHandlers
    {
      get
      {
        if (this._BusinessUnitsActionsHandlers == null)
          this._BusinessUnitsActionsHandlers = this.CreateBusinessUnitsActionsHandlers();
        return this._BusinessUnitsActionsHandlers;
      }
    }

    private object _BusinessUnitsCollectionActionsHandlers;

    public object BusinessUnitsCollectionActionsHandlers
    {
      get
      {
        if (this._BusinessUnitsCollectionActionsHandlers == null)
          this._BusinessUnitsCollectionActionsHandlers = this.CreateBusinessUnitsCollectionActionsHandlers();
        return this._BusinessUnitsCollectionActionsHandlers;
      }
    }
    private object _DepartmentsActionsHandlers;

    public object DepartmentsActionsHandlers
    {
      get
      {
        if (this._DepartmentsActionsHandlers == null)
          this._DepartmentsActionsHandlers = this.CreateDepartmentsActionsHandlers();
        return this._DepartmentsActionsHandlers;
      }
    }

    private object _DepartmentsCollectionActionsHandlers;

    public object DepartmentsCollectionActionsHandlers
    {
      get
      {
        if (this._DepartmentsCollectionActionsHandlers == null)
          this._DepartmentsCollectionActionsHandlers = this.CreateDepartmentsCollectionActionsHandlers();
        return this._DepartmentsCollectionActionsHandlers;
      }
    }
    private object _DocumentGroupsActionsHandlers;

    public object DocumentGroupsActionsHandlers
    {
      get
      {
        if (this._DocumentGroupsActionsHandlers == null)
          this._DocumentGroupsActionsHandlers = this.CreateDocumentGroupsActionsHandlers();
        return this._DocumentGroupsActionsHandlers;
      }
    }

    private object _DocumentGroupsCollectionActionsHandlers;

    public object DocumentGroupsCollectionActionsHandlers
    {
      get
      {
        if (this._DocumentGroupsCollectionActionsHandlers == null)
          this._DocumentGroupsCollectionActionsHandlers = this.CreateDocumentGroupsCollectionActionsHandlers();
        return this._DocumentGroupsCollectionActionsHandlers;
      }
    }
    private object _MembersActionsHandlers;

    public object MembersActionsHandlers
    {
      get
      {
        if (this._MembersActionsHandlers == null)
          this._MembersActionsHandlers = this.CreateMembersActionsHandlers();
        return this._MembersActionsHandlers;
      }
    }

    private object _MembersCollectionActionsHandlers;

    public object MembersCollectionActionsHandlers
    {
      get
      {
        if (this._MembersCollectionActionsHandlers == null)
          this._MembersCollectionActionsHandlers = this.CreateMembersCollectionActionsHandlers();
        return this._MembersCollectionActionsHandlers;
      }
    }

    #endregion

    #region Methods

    protected override object CreateActionsHandlers()
    {
      return new global::Sungero.Docflow.Client.AccessRightsRuleActions(this);
    }

    protected override object CreateCollectionActionsHandlers()
    {
      return new global::Sungero.Docflow.Client.AccessRightsRuleCollectionActions();
    }

    protected override object CreateAnyChildEntityActionsHandlers()
    {
      return new global::Sungero.Docflow.Client.AccessRightsRuleAnyChildEntityActions();
    }

    protected override object CreateAnyChildEntityCollectionActionsHandlers()
    {
      return new global::Sungero.Docflow.Client.AccessRightsRuleAnyChildEntityCollectionActions();
    }

    protected object CreateDocumentKindsActionsHandlers()
    {
      return null;
    }

    protected object CreateDocumentKindsCollectionActionsHandlers()
    {
      return null;
    }
    protected object CreateBusinessUnitsActionsHandlers()
    {
      return null;
    }

    protected object CreateBusinessUnitsCollectionActionsHandlers()
    {
      return null;
    }
    protected object CreateDepartmentsActionsHandlers()
    {
      return null;
    }

    protected object CreateDepartmentsCollectionActionsHandlers()
    {
      return null;
    }
    protected object CreateDocumentGroupsActionsHandlers()
    {
      return null;
    }

    protected object CreateDocumentGroupsCollectionActionsHandlers()
    {
      return null;
    }
    protected object CreateMembersActionsHandlers()
    {
      return null;
    }

    protected object CreateMembersCollectionActionsHandlers()
    {
      return null;
    }


    protected override global::Sungero.Domain.Client.EntityFunctions CreateClientFunctions()
    {
      return new global::Sungero.Docflow.Client.AccessRightsRuleFunctions(this);
    }

    protected override global::Sungero.Domain.Shared.EntityFunctions CreateSharedFunctions()
    {
      return new global::Sungero.Docflow.Shared.AccessRightsRuleFunctions(this);
    }
    protected override object CreateHandlers() {
      return new global::Sungero.Docflow.AccessRightsRuleClientHandlers(this);
    }
    protected override object CreateSharedHandlers() {
      return new global::Sungero.Docflow.AccessRightsRuleSharedHandlers(this);
    }

    #endregion

    #region Framework events

    protected void NameChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.Name, this.Name, this);
     ((global::Sungero.Docflow.AccessRightsRuleSharedHandlers)this.SharedHandlers).NameChanged(args);
    }

    protected void DocumentKindsChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.CollectionPropertyChangedEventArgs(this);
     ((global::Sungero.Docflow.AccessRightsRuleSharedHandlers)this.SharedHandlers).DocumentKindsChanged(args);
    }

    protected void BusinessUnitsChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.CollectionPropertyChangedEventArgs(this);
     ((global::Sungero.Docflow.AccessRightsRuleSharedHandlers)this.SharedHandlers).BusinessUnitsChanged(args);
    }

    protected void DepartmentsChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.CollectionPropertyChangedEventArgs(this);
     ((global::Sungero.Docflow.AccessRightsRuleSharedHandlers)this.SharedHandlers).DepartmentsChanged(args);
    }

    protected void DocumentGroupsChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.CollectionPropertyChangedEventArgs(this);
     ((global::Sungero.Docflow.AccessRightsRuleSharedHandlers)this.SharedHandlers).DocumentGroupsChanged(args);
    }

    protected void GrantRightsOnLeadingDocumentChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.BooleanPropertyChangedEventArgs(this.State.Properties.GrantRightsOnLeadingDocument, this.GrantRightsOnLeadingDocument, this);
     ((global::Sungero.Docflow.AccessRightsRuleSharedHandlers)this.SharedHandlers).GrantRightsOnLeadingDocumentChanged(args);
    }

    protected void NoteChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.Note, this.Note, this);
     ((global::Sungero.Docflow.AccessRightsRuleSharedHandlers)this.SharedHandlers).NoteChanged(args);
    }

    protected void MembersChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.CollectionPropertyChangedEventArgs(this);
     ((global::Sungero.Docflow.AccessRightsRuleSharedHandlers)this.SharedHandlers).MembersChanged(args);
    }

    protected void ModifiedChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.DateTimePropertyChangedEventArgs(this.State.Properties.Modified, this.Modified, this);
     ((global::Sungero.Docflow.AccessRightsRuleSharedHandlers)this.SharedHandlers).ModifiedChanged(args);
    }

    protected void GrantRightsOnExistingDocumentsChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.BooleanPropertyChangedEventArgs(this.State.Properties.GrantRightsOnExistingDocuments, this.GrantRightsOnExistingDocuments, this);
     ((global::Sungero.Docflow.AccessRightsRuleSharedHandlers)this.SharedHandlers).GrantRightsOnExistingDocumentsChanged(args);
    }



    protected virtual global::Sungero.Docflow.AccessRightsRuleDocumentKindsSharedCollectionHandlers CreateDocumentKindsAddedHandler(global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.Docflow.AccessRightsRuleDocumentKindsSharedCollectionHandlers(this, e.Value, null, e.Source);
    }

    protected virtual global::Sungero.Docflow.AccessRightsRuleDocumentKindsSharedCollectionHandlers CreateDocumentKindsDeletedHandler(global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.Docflow.AccessRightsRuleDocumentKindsSharedCollectionHandlers(this, null, e.Value, null);
    }

    protected virtual void DocumentKindsAddedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {  
      var collectionHandlers = this.CreateDocumentKindsAddedHandler(e);
      if (collectionHandlers != null)
      {
        var args = new global::Sungero.Domain.Shared.CollectionPropertyAddedEventArgs(this);
        collectionHandlers.DocumentKindsAdded(args);
      }
    }

    protected virtual void DocumentKindsDeletedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {  
      var collectionHandlers = this.CreateDocumentKindsDeletedHandler(e);
      if (collectionHandlers != null)
      {
        var args = new global::Sungero.Domain.Shared.CollectionPropertyDeletedEventArgs(this);
        collectionHandlers.DocumentKindsDeleted(args);
      }
    }


    protected virtual global::Sungero.Docflow.AccessRightsRuleBusinessUnitsSharedCollectionHandlers CreateBusinessUnitsAddedHandler(global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.Docflow.AccessRightsRuleBusinessUnitsSharedCollectionHandlers(this, e.Value, null, e.Source);
    }

    protected virtual global::Sungero.Docflow.AccessRightsRuleBusinessUnitsSharedCollectionHandlers CreateBusinessUnitsDeletedHandler(global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.Docflow.AccessRightsRuleBusinessUnitsSharedCollectionHandlers(this, null, e.Value, null);
    }

    protected virtual void BusinessUnitsAddedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {  
      var collectionHandlers = this.CreateBusinessUnitsAddedHandler(e);
      if (collectionHandlers != null)
      {
        var args = new global::Sungero.Domain.Shared.CollectionPropertyAddedEventArgs(this);
        collectionHandlers.BusinessUnitsAdded(args);
      }
    }

    protected virtual void BusinessUnitsDeletedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {  
      var collectionHandlers = this.CreateBusinessUnitsDeletedHandler(e);
      if (collectionHandlers != null)
      {
        var args = new global::Sungero.Domain.Shared.CollectionPropertyDeletedEventArgs(this);
        collectionHandlers.BusinessUnitsDeleted(args);
      }
    }


    protected virtual global::Sungero.Docflow.AccessRightsRuleDepartmentsSharedCollectionHandlers CreateDepartmentsAddedHandler(global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.Docflow.AccessRightsRuleDepartmentsSharedCollectionHandlers(this, e.Value, null, e.Source);
    }

    protected virtual global::Sungero.Docflow.AccessRightsRuleDepartmentsSharedCollectionHandlers CreateDepartmentsDeletedHandler(global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.Docflow.AccessRightsRuleDepartmentsSharedCollectionHandlers(this, null, e.Value, null);
    }

    protected virtual void DepartmentsAddedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {  
      var collectionHandlers = this.CreateDepartmentsAddedHandler(e);
      if (collectionHandlers != null)
      {
        var args = new global::Sungero.Domain.Shared.CollectionPropertyAddedEventArgs(this);
        collectionHandlers.DepartmentsAdded(args);
      }
    }

    protected virtual void DepartmentsDeletedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {  
      var collectionHandlers = this.CreateDepartmentsDeletedHandler(e);
      if (collectionHandlers != null)
      {
        var args = new global::Sungero.Domain.Shared.CollectionPropertyDeletedEventArgs(this);
        collectionHandlers.DepartmentsDeleted(args);
      }
    }


    protected virtual global::Sungero.Docflow.AccessRightsRuleDocumentGroupsSharedCollectionHandlers CreateDocumentGroupsAddedHandler(global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.Docflow.AccessRightsRuleDocumentGroupsSharedCollectionHandlers(this, e.Value, null, e.Source);
    }

    protected virtual global::Sungero.Docflow.AccessRightsRuleDocumentGroupsSharedCollectionHandlers CreateDocumentGroupsDeletedHandler(global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.Docflow.AccessRightsRuleDocumentGroupsSharedCollectionHandlers(this, null, e.Value, null);
    }

    protected virtual void DocumentGroupsAddedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {  
      var collectionHandlers = this.CreateDocumentGroupsAddedHandler(e);
      if (collectionHandlers != null)
      {
        var args = new global::Sungero.Domain.Shared.CollectionPropertyAddedEventArgs(this);
        collectionHandlers.DocumentGroupsAdded(args);
      }
    }

    protected virtual void DocumentGroupsDeletedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {  
      var collectionHandlers = this.CreateDocumentGroupsDeletedHandler(e);
      if (collectionHandlers != null)
      {
        var args = new global::Sungero.Domain.Shared.CollectionPropertyDeletedEventArgs(this);
        collectionHandlers.DocumentGroupsDeleted(args);
      }
    }


    protected virtual global::Sungero.Docflow.AccessRightsRuleMembersSharedCollectionHandlers CreateMembersAddedHandler(global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.Docflow.AccessRightsRuleMembersSharedCollectionHandlers(this, e.Value, null, e.Source);
    }

    protected virtual global::Sungero.Docflow.AccessRightsRuleMembersSharedCollectionHandlers CreateMembersDeletedHandler(global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.Docflow.AccessRightsRuleMembersSharedCollectionHandlers(this, null, e.Value, null);
    }

    protected virtual void MembersAddedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {  
      var collectionHandlers = this.CreateMembersAddedHandler(e);
      if (collectionHandlers != null)
      {
        var args = new global::Sungero.Domain.Shared.CollectionPropertyAddedEventArgs(this);
        collectionHandlers.MembersAdded(args);
      }
    }

    protected virtual void MembersDeletedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {  
      var collectionHandlers = this.CreateMembersDeletedHandler(e);
      if (collectionHandlers != null)
      {
        var args = new global::Sungero.Domain.Shared.CollectionPropertyDeletedEventArgs(this);
        collectionHandlers.MembersDeleted(args);
      }
    }


  protected global::System.String NameValueInputHandler(global::System.String value)
  {
    var args = new global::Sungero.Presentation.StringValueInputEventArgs(this.Name, value, this, this.Info.Properties.Name);
    ((global::Sungero.Docflow.AccessRightsRuleClientHandlers)this.Handlers).NameValueInput(args);
    return args.NewValue;
  }





  protected global::System.Boolean? GrantRightsOnLeadingDocumentValueInputHandler(global::System.Boolean? value)
  {
    var args = new global::Sungero.Presentation.BooleanValueInputEventArgs(this.GrantRightsOnLeadingDocument, value, this, this.Info.Properties.GrantRightsOnLeadingDocument);
    ((global::Sungero.Docflow.AccessRightsRuleClientHandlers)this.Handlers).GrantRightsOnLeadingDocumentValueInput(args);
    return args.NewValue;
  }

  protected global::System.String NoteValueInputHandler(global::System.String value)
  {
    var args = new global::Sungero.Presentation.StringValueInputEventArgs(this.Note, value, this, this.Info.Properties.Note);
    ((global::Sungero.Docflow.AccessRightsRuleClientHandlers)this.Handlers).NoteValueInput(args);
    return args.NewValue;
  }


  protected global::System.DateTime? ModifiedValueInputHandler(global::System.DateTime? value)
  {
    var args = new global::Sungero.Presentation.DateTimeValueInputEventArgs(this.Modified, value, this, this.Info.Properties.Modified);
    ((global::Sungero.Docflow.AccessRightsRuleClientHandlers)this.Handlers).ModifiedValueInput(args);
    return args.NewValue;
  }

  protected global::System.Boolean? GrantRightsOnExistingDocumentsValueInputHandler(global::System.Boolean? value)
  {
    var args = new global::Sungero.Presentation.BooleanValueInputEventArgs(this.GrantRightsOnExistingDocuments, value, this, this.Info.Properties.GrantRightsOnExistingDocuments);
    ((global::Sungero.Docflow.AccessRightsRuleClientHandlers)this.Handlers).GrantRightsOnExistingDocumentsValueInput(args);
    return args.NewValue;
  }



    #endregion

    #region Constructors


            protected virtual void InitDocumentKindsCollectionProperty()
            {
              this._DocumentKinds = new global::Sungero.Domain.Client.ListProperty<global::Sungero.Docflow.IAccessRightsRuleDocumentKinds>("DocumentKinds", this);
              this._DocumentKinds.ValueChanged += (sender, e) => { this.DocumentKindsChangedHandler(); };
              this.AddProperty((global::Sungero.Domain.Client.IProperty)this._DocumentKinds);
              this.SetDocumentKindsEventHandlers();
            }

            protected void SetDocumentKindsEventHandlers()
            {
              this._DocumentKinds.ChildEntityAdded += this.DocumentKindsAddedHandler;
              this._DocumentKinds.ChildEntityDeleted += this.DocumentKindsDeletedHandler;
            }

            protected virtual void InitBusinessUnitsCollectionProperty()
            {
              this._BusinessUnits = new global::Sungero.Domain.Client.ListProperty<global::Sungero.Docflow.IAccessRightsRuleBusinessUnits>("BusinessUnits", this);
              this._BusinessUnits.ValueChanged += (sender, e) => { this.BusinessUnitsChangedHandler(); };
              this.AddProperty((global::Sungero.Domain.Client.IProperty)this._BusinessUnits);
              this.SetBusinessUnitsEventHandlers();
            }

            protected void SetBusinessUnitsEventHandlers()
            {
              this._BusinessUnits.ChildEntityAdded += this.BusinessUnitsAddedHandler;
              this._BusinessUnits.ChildEntityDeleted += this.BusinessUnitsDeletedHandler;
            }

            protected virtual void InitDepartmentsCollectionProperty()
            {
              this._Departments = new global::Sungero.Domain.Client.ListProperty<global::Sungero.Docflow.IAccessRightsRuleDepartments>("Departments", this);
              this._Departments.ValueChanged += (sender, e) => { this.DepartmentsChangedHandler(); };
              this.AddProperty((global::Sungero.Domain.Client.IProperty)this._Departments);
              this.SetDepartmentsEventHandlers();
            }

            protected void SetDepartmentsEventHandlers()
            {
              this._Departments.ChildEntityAdded += this.DepartmentsAddedHandler;
              this._Departments.ChildEntityDeleted += this.DepartmentsDeletedHandler;
            }

            protected virtual void InitDocumentGroupsCollectionProperty()
            {
              this._DocumentGroups = new global::Sungero.Domain.Client.ListProperty<global::Sungero.Docflow.IAccessRightsRuleDocumentGroups>("DocumentGroups", this);
              this._DocumentGroups.ValueChanged += (sender, e) => { this.DocumentGroupsChangedHandler(); };
              this.AddProperty((global::Sungero.Domain.Client.IProperty)this._DocumentGroups);
              this.SetDocumentGroupsEventHandlers();
            }

            protected void SetDocumentGroupsEventHandlers()
            {
              this._DocumentGroups.ChildEntityAdded += this.DocumentGroupsAddedHandler;
              this._DocumentGroups.ChildEntityDeleted += this.DocumentGroupsDeletedHandler;
            }

            protected virtual void InitMembersCollectionProperty()
            {
              this._Members = new global::Sungero.Domain.Client.ListProperty<global::Sungero.Docflow.IAccessRightsRuleMembers>("Members", this);
              this._Members.ValueChanged += (sender, e) => { this.MembersChangedHandler(); };
              this.AddProperty((global::Sungero.Domain.Client.IProperty)this._Members);
              this.SetMembersEventHandlers();
            }

            protected void SetMembersEventHandlers()
            {
              this._Members.ChildEntityAdded += this.MembersAddedHandler;
              this._Members.ChildEntityDeleted += this.MembersDeletedHandler;
            }


    public AccessRightsRule()
    {
            this._Name = new global::Sungero.Domain.Client.SimpleProperty<global::System.String>("Name", this);
            this._Name.ValueChanged += (sender, e) => { this.NameChangedHandler(); };
            this.AddProperty(this._Name);

            this._GrantRightsOnLeadingDocument = new global::Sungero.Domain.Client.SimpleProperty<global::System.Boolean?>("GrantRightsOnLeadingDocument", this);
            this._GrantRightsOnLeadingDocument.ValueChanged += (sender, e) => { this.GrantRightsOnLeadingDocumentChangedHandler(); };
            this.AddProperty(this._GrantRightsOnLeadingDocument);

            this._Note = new global::Sungero.Domain.Client.SimpleProperty<global::System.String>("Note", this);
            this._Note.ValueChanged += (sender, e) => { this.NoteChangedHandler(); };
            this.AddProperty(this._Note);

            this._Modified = new global::Sungero.Domain.Client.SimpleProperty<global::System.DateTime?>("Modified", this);
            this._Modified.ValueChanged += (sender, e) => { this.ModifiedChangedHandler(); };
            this.AddProperty(this._Modified);

            this._GrantRightsOnExistingDocuments = new global::Sungero.Domain.Client.SimpleProperty<global::System.Boolean?>("GrantRightsOnExistingDocuments", this);
            this._GrantRightsOnExistingDocuments.ValueChanged += (sender, e) => { this.GrantRightsOnExistingDocumentsChangedHandler(); };
            this.AddProperty(this._GrantRightsOnExistingDocuments);


            this.InitDocumentKindsCollectionProperty();

            this.InitBusinessUnitsCollectionProperty();

            this.InitDepartmentsCollectionProperty();

            this.InitDocumentGroupsCollectionProperty();

            this.InitMembersCollectionProperty();







    }

    #endregion

  }
}

// ==================================================================
// AccessRightsRulePresenter.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Client
{
  public class AccessRightsRulePresenter<T> :
    global::Sungero.Domain.Client.EntityPresenter<T>
    where T : class, global::Sungero.Docflow.IAccessRightsRule
  {
    #region Fields and properties




    #endregion

    #region Methods

    #endregion

    #region Framework events

    protected override void EntityPropertyChangedEventHandler(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
    {
      base.EntityPropertyChangedEventHandler(sender, e);
    }

    #endregion


                          protected global::Sungero.Domain.Client.IEntityCollectionPresenter _DocumentKindsDocumentKindCollectionPresenter;
                          public global::Sungero.Domain.Client.IEntityCollectionPresenter DocumentKindsDocumentKindCollectionPresenter
                          {
                  get { return this._DocumentKindsDocumentKindCollectionPresenter; }
                }

                          protected global::Sungero.Domain.Client.IEntityCollectionPresenter _BusinessUnitsBusinessUnitCollectionPresenter;
                          public global::Sungero.Domain.Client.IEntityCollectionPresenter BusinessUnitsBusinessUnitCollectionPresenter
                          {
                  get { return this._BusinessUnitsBusinessUnitCollectionPresenter; }
                }

                          protected global::Sungero.Domain.Client.IEntityCollectionPresenter _DepartmentsDepartmentCollectionPresenter;
                          public global::Sungero.Domain.Client.IEntityCollectionPresenter DepartmentsDepartmentCollectionPresenter
                          {
                  get { return this._DepartmentsDepartmentCollectionPresenter; }
                }

                          protected global::Sungero.Domain.Client.IEntityCollectionPresenter _DocumentGroupsDocumentGroupCollectionPresenter;
                          public global::Sungero.Domain.Client.IEntityCollectionPresenter DocumentGroupsDocumentGroupCollectionPresenter
                          {
                  get { return this._DocumentGroupsDocumentGroupCollectionPresenter; }
                }

                          protected global::Sungero.Domain.Client.IEntityCollectionPresenter _MembersRecipientCollectionPresenter;
                          public global::Sungero.Domain.Client.IEntityCollectionPresenter MembersRecipientCollectionPresenter
                          {
                  get { return this._MembersRecipientCollectionPresenter; }
                }



    #region Constructors

    private void Init()
    {

                          this._DocumentKindsDocumentKindCollectionPresenter = this.CreateCollectionPresenterForNavigationProperty<global::Sungero.Docflow.IDocumentKind>(global::System.Guid.Parse("ea6e30c4-0363-45b5-b8a6-69dd018177cf"));
                        this._DocumentKindsDocumentKindCollectionPresenter
                        .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Docflow.IDocumentKind>(() => this.Entity.Id, typeof(Sungero.Docflow.IAccessRightsRuleDocumentKinds), "DocumentKind");

                          this._BusinessUnitsBusinessUnitCollectionPresenter = this.CreateCollectionPresenterForNavigationProperty<global::Sungero.Company.IBusinessUnit>(global::System.Guid.Parse("eb92db65-37e9-4758-91c1-961932bd3532"));
                        this._BusinessUnitsBusinessUnitCollectionPresenter
                        .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Company.IBusinessUnit>(() => this.Entity.Id, typeof(Sungero.Docflow.IAccessRightsRuleBusinessUnits), "BusinessUnit");

                          this._DepartmentsDepartmentCollectionPresenter = this.CreateCollectionPresenterForNavigationProperty<global::Sungero.Company.IDepartment>(global::System.Guid.Parse("434b3c2f-9da9-474a-ac90-e775fca0a445"));
                        this._DepartmentsDepartmentCollectionPresenter
                        .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Company.IDepartment>(() => this.Entity.Id, typeof(Sungero.Docflow.IAccessRightsRuleDepartments), "Department");

                          this._DocumentGroupsDocumentGroupCollectionPresenter = this.CreateCollectionPresenterForNavigationProperty<global::Sungero.Docflow.IDocumentGroupBase>(global::System.Guid.Parse("ae570a77-987e-47f8-964a-2286e14e21d9"));
                        this._DocumentGroupsDocumentGroupCollectionPresenter
                        .Query = global::Sungero.Domain.Client.Session.GetValuesForChildNavigationProperty<global::Sungero.Docflow.IDocumentGroupBase>(
                          () => this.ChildEntityCollectionPresenters.GetPresenter<global::Sungero.Docflow.IAccessRightsRuleDocumentGroups>().FocusedEntity,
                          typeof(Sungero.Docflow.IAccessRightsRuleDocumentGroups),
                          () => this.Entity,
                          "DocumentGroup");

                          this._MembersRecipientCollectionPresenter = this.CreateCollectionPresenterForNavigationProperty<global::Sungero.CoreEntities.IRecipient>(global::System.Guid.Parse("b246259a-441e-4028-a718-49181ef17697"));
                        this._MembersRecipientCollectionPresenter
                        .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.CoreEntities.IRecipient>(() => this.Entity.Id, typeof(Sungero.Docflow.IAccessRightsRuleMembers), "Recipient");


    }

    public AccessRightsRulePresenter()
    {
      this.Init();
    }

    #endregion
  }
}

// ==================================================================
// AccessRightsRuleCollectionPresenter.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Client
{
  public class AccessRightsRuleCollectionPresenter<T> : 
    global::Sungero.Domain.Client.EntityCollectionPresenter<T>
    where T: class, global::Sungero.Docflow.IAccessRightsRule
  {
    #region Actions



    #endregion

    #region Methods


    #endregion

    public AccessRightsRuleCollectionPresenter(global::System.Linq.IQueryable<T> query, OnLookup onLookup)
      : base(query, onLookup)
    {
    }

    public AccessRightsRuleCollectionPresenter(global::System.Linq.IQueryable<T> query)
      : this(query, null) { }

    public AccessRightsRuleCollectionPresenter(OnLookup onLookup)
      : this(null, onLookup) { }

    public AccessRightsRuleCollectionPresenter()
      : this(null, null) { }
  }
}

// ==================================================================
// AccessRightsRuleRepositoryImplementer.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Client
{ 
  public class AccessRightsRuleRepositoryImplementer<T> : 
      global::Sungero.Domain.Client.RepositoryImplementer<T>,
      global::Sungero.Docflow.IAccessRightsRuleRepositoryImplementer<T>
      where T : global::Sungero.Docflow.IAccessRightsRule
    {
       public new global::Sungero.Docflow.IAccessRightsRuleAccessRights AccessRights
       {
          get { return (global::Sungero.Docflow.IAccessRightsRuleAccessRights)base.AccessRights; }
       }

       public new global::Sungero.Docflow.IAccessRightsRuleInfo Info
       {
          get { return (global::Sungero.Docflow.IAccessRightsRuleInfo)base.Info; }
       }

       protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
       {
         return new global::Sungero.Docflow.Client.AccessRightsRuleTypeAccessRights(typeof(T));
       }
    }
}

// ==================================================================
// AccessRightsRuleAccessRights.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Client
{
  public class AccessRightsRuleAccessRights : 
    Sungero.CoreEntities.Client.DatabookEntryAccessRights, Sungero.Docflow.IAccessRightsRuleAccessRights
  {

    public AccessRightsRuleAccessRights(global::Sungero.Domain.Shared.IEntity entity) : base(entity)
    {
    }
  }

  public class AccessRightsRuleTypeAccessRights : 
    Sungero.CoreEntities.Client.DatabookEntryTypeAccessRights, Sungero.Docflow.IAccessRightsRuleAccessRights
  {

    public AccessRightsRuleTypeAccessRights(global::System.Type entityType) : base(entityType)
    {
    }
  }
}
