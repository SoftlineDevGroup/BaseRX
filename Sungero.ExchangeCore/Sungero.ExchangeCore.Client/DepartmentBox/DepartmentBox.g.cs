
// ==================================================================
// DepartmentBox.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.ExchangeCore.Client
{
  public class DepartmentBox :
    global::Sungero.ExchangeCore.Client.BoxBase, global::Sungero.ExchangeCore.IDepartmentBox
  {
    #region Fields and properties

    public static new readonly global::System.Guid ClassTypeGuid = global::System.Guid.Parse("fd8945e2-e3b6-43f9-aac1-fb7ce4d984c6");

    public override global::System.Guid TypeGuid
    {
      get { return global::Sungero.ExchangeCore.Client.DepartmentBox.ClassTypeGuid; }
    }

    public override string TypeName
    {
      get { return "Sungero.ExchangeCore.IDepartmentBox, Sungero.Domain.Interfaces"; }
    }

      public override string DisplayValue
      {
        get { return this.Name; }
        set { this.Name = value; }
      }

      public override string DisplayPropertyName
      {
        get { return "Name"; }
      }


    public new global::Sungero.ExchangeCore.IDepartmentBoxState State
    {
      get
      {
        return (global::Sungero.ExchangeCore.IDepartmentBoxState)base.State;
      }
    }

    protected override global::Sungero.Domain.Shared.IEntityState CreateState()
    {
      return new global::Sungero.ExchangeCore.Shared.DepartmentBoxState(this);
    }

    public new global::Sungero.ExchangeCore.IDepartmentBoxInfo Info
    {
      get
      {
        return (global::Sungero.ExchangeCore.IDepartmentBoxInfo)base.Info;
      }
    }

    public new global::Sungero.ExchangeCore.IDepartmentBoxAccessRights AccessRights
    {
      get
      {
        return (global::Sungero.ExchangeCore.IDepartmentBoxAccessRights)base.AccessRights;
      }
    }

    protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
    {
      return new global::Sungero.ExchangeCore.Client.DepartmentBoxAccessRights(this);
    }

        protected global::Sungero.Domain.Client.SimpleProperty<global::System.String> _ServiceId;

        public virtual global::System.String ServiceId
        {
          get { return this._ServiceId.Value; }
          set { this._ServiceId.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.Boolean?> _IsDeleted;

        public virtual global::System.Boolean? IsDeleted
        {
          get { return this._IsDeleted.Value; }
          set { this._IsDeleted.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.String> _ServiceName;

        public virtual global::System.String ServiceName
        {
          get { return this._ServiceName.Value; }
          set { this._ServiceName.Value = value; }
        }




              protected global::Sungero.Domain.Client.INavigationProperty<global::Sungero.ExchangeCore.IBoxBase> _ParentBox;

              public virtual global::Sungero.ExchangeCore.IBoxBase ParentBox
              {
              get
              {
                return this._ParentBox.Value as global::Sungero.ExchangeCore.IBoxBase;
              }

              set
              {
                (this._ParentBox as global::Sungero.Domain.Client.IProperty).Value = value;
              }
            }



              protected global::Sungero.Domain.Client.INavigationProperty<global::Sungero.Company.IDepartment> _Department;

              public virtual global::Sungero.Company.IDepartment Department
              {
              get
              {
                return this._Department.Value as global::Sungero.Company.IDepartment;
              }

              set
              {
                (this._Department as global::Sungero.Domain.Client.IProperty).Value = value;
              }
            }



              protected global::Sungero.Domain.Client.INavigationProperty<global::Sungero.ExchangeCore.IBusinessUnitBox> _RootBox;

              public virtual global::Sungero.ExchangeCore.IBusinessUnitBox RootBox
              {
              get
              {
                return this._RootBox.Value as global::Sungero.ExchangeCore.IBusinessUnitBox;
              }

              set
              {
                (this._RootBox as global::Sungero.Domain.Client.IProperty).Value = value;
              }
            }










    #endregion

    #region Methods

    protected override object CreateActionsHandlers()
    {
      return new global::Sungero.ExchangeCore.Client.DepartmentBoxActions(this);
    }

    protected override object CreateCollectionActionsHandlers()
    {
      return new global::Sungero.ExchangeCore.Client.DepartmentBoxCollectionActions();
    }

    protected override object CreateAnyChildEntityActionsHandlers()
    {
      return new global::Sungero.ExchangeCore.Client.DepartmentBoxAnyChildEntityActions();
    }

    protected override object CreateAnyChildEntityCollectionActionsHandlers()
    {
      return new global::Sungero.ExchangeCore.Client.DepartmentBoxAnyChildEntityCollectionActions();
    }


    protected override global::Sungero.Domain.Client.EntityFunctions CreateClientFunctions()
    {
      return new global::Sungero.ExchangeCore.Client.DepartmentBoxFunctions(this);
    }

    protected override global::Sungero.Domain.Shared.EntityFunctions CreateSharedFunctions()
    {
      return new global::Sungero.ExchangeCore.Shared.DepartmentBoxFunctions(this);
    }
    protected override object CreateHandlers() {
      return new global::Sungero.ExchangeCore.DepartmentBoxClientHandlers(this);
    }
    protected override object CreateSharedHandlers() {
      return new global::Sungero.ExchangeCore.DepartmentBoxSharedHandlers(this);
    }

    #endregion

    #region Framework events

    protected void ParentBoxChangedHandler()
    {
      var args = new global::Sungero.ExchangeCore.Shared.DepartmentBoxParentBoxChangedEventArgs(this.State.Properties.ParentBox, this.ParentBox, this);
     ((global::Sungero.ExchangeCore.DepartmentBoxSharedHandlers)this.SharedHandlers).ParentBoxChanged(args);
    }

    protected void DepartmentChangedHandler()
    {
      var args = new global::Sungero.ExchangeCore.Shared.DepartmentBoxDepartmentChangedEventArgs(this.State.Properties.Department, this.Department, this);
     ((global::Sungero.ExchangeCore.DepartmentBoxSharedHandlers)this.SharedHandlers).DepartmentChanged(args);
    }

    protected void RootBoxChangedHandler()
    {
      var args = new global::Sungero.ExchangeCore.Shared.DepartmentBoxRootBoxChangedEventArgs(this.State.Properties.RootBox, this.RootBox, this);
     ((global::Sungero.ExchangeCore.DepartmentBoxSharedHandlers)this.SharedHandlers).RootBoxChanged(args);
    }

    protected void ServiceIdChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.ServiceId, this.ServiceId, this);
     ((global::Sungero.ExchangeCore.DepartmentBoxSharedHandlers)this.SharedHandlers).ServiceIdChanged(args);
    }

    protected void IsDeletedChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.BooleanPropertyChangedEventArgs(this.State.Properties.IsDeleted, this.IsDeleted, this);
     ((global::Sungero.ExchangeCore.DepartmentBoxSharedHandlers)this.SharedHandlers).IsDeletedChanged(args);
    }

    protected void ServiceNameChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.ServiceName, this.ServiceName, this);
     ((global::Sungero.ExchangeCore.DepartmentBoxSharedHandlers)this.SharedHandlers).ServiceNameChanged(args);
    }



  protected global::Sungero.ExchangeCore.IBoxBase ParentBoxValueInputHandler(global::Sungero.ExchangeCore.IBoxBase value)
  {
    var args = new global::Sungero.ExchangeCore.Client.DepartmentBoxParentBoxValueInputEventArgs(this.ParentBox, value, this, this.Info.Properties.ParentBox);
    ((global::Sungero.ExchangeCore.DepartmentBoxClientHandlers)this.Handlers).ParentBoxValueInput(args);
    return args.NewValue;
  }

  protected global::Sungero.Company.IDepartment DepartmentValueInputHandler(global::Sungero.Company.IDepartment value)
  {
    var args = new global::Sungero.ExchangeCore.Client.DepartmentBoxDepartmentValueInputEventArgs(this.Department, value, this, this.Info.Properties.Department);
    ((global::Sungero.ExchangeCore.DepartmentBoxClientHandlers)this.Handlers).DepartmentValueInput(args);
    return args.NewValue;
  }

  protected global::Sungero.ExchangeCore.IBusinessUnitBox RootBoxValueInputHandler(global::Sungero.ExchangeCore.IBusinessUnitBox value)
  {
    var args = new global::Sungero.ExchangeCore.Client.DepartmentBoxRootBoxValueInputEventArgs(this.RootBox, value, this, this.Info.Properties.RootBox);
    ((global::Sungero.ExchangeCore.DepartmentBoxClientHandlers)this.Handlers).RootBoxValueInput(args);
    return args.NewValue;
  }

  protected global::System.String ServiceIdValueInputHandler(global::System.String value)
  {
    var args = new global::Sungero.Presentation.StringValueInputEventArgs(this.ServiceId, value, this, this.Info.Properties.ServiceId);
    ((global::Sungero.ExchangeCore.DepartmentBoxClientHandlers)this.Handlers).ServiceIdValueInput(args);
    return args.NewValue;
  }

  protected global::System.Boolean? IsDeletedValueInputHandler(global::System.Boolean? value)
  {
    var args = new global::Sungero.Presentation.BooleanValueInputEventArgs(this.IsDeleted, value, this, this.Info.Properties.IsDeleted);
    ((global::Sungero.ExchangeCore.DepartmentBoxClientHandlers)this.Handlers).IsDeletedValueInput(args);
    return args.NewValue;
  }

  protected global::System.String ServiceNameValueInputHandler(global::System.String value)
  {
    var args = new global::Sungero.Presentation.StringValueInputEventArgs(this.ServiceName, value, this, this.Info.Properties.ServiceName);
    ((global::Sungero.ExchangeCore.DepartmentBoxClientHandlers)this.Handlers).ServiceNameValueInput(args);
    return args.NewValue;
  }



    #endregion

    #region Constructors




              protected virtual void InitParentBoxNavigationProperty()
              {
                this._ParentBox = new global::Sungero.Domain.Client.NavigationProperty<global::Sungero.ExchangeCore.IBoxBase>("ParentBox", this);
                this._ParentBox.ValueChanged += (sender, e) => { this.ParentBoxChangedHandler(); };
                this.AddProperty(this._ParentBox as global::Sungero.Domain.Client.IProperty);
              }




              protected virtual void InitDepartmentNavigationProperty()
              {
                this._Department = new global::Sungero.Domain.Client.NavigationProperty<global::Sungero.Company.IDepartment>("Department", this);
                this._Department.ValueChanged += (sender, e) => { this.DepartmentChangedHandler(); };
                this.AddProperty(this._Department as global::Sungero.Domain.Client.IProperty);
              }




              protected virtual void InitRootBoxNavigationProperty()
              {
                this._RootBox = new global::Sungero.Domain.Client.NavigationProperty<global::Sungero.ExchangeCore.IBusinessUnitBox>("RootBox", this);
                this._RootBox.ValueChanged += (sender, e) => { this.RootBoxChangedHandler(); };
                this.AddProperty(this._RootBox as global::Sungero.Domain.Client.IProperty);
              }




    public DepartmentBox()
    {
            this._ServiceId = new global::Sungero.Domain.Client.SimpleProperty<global::System.String>("ServiceId", this);
            this._ServiceId.ValueChanged += (sender, e) => { this.ServiceIdChangedHandler(); };
            this.AddProperty(this._ServiceId);

            this._IsDeleted = new global::Sungero.Domain.Client.SimpleProperty<global::System.Boolean?>("IsDeleted", this);
            this._IsDeleted.ValueChanged += (sender, e) => { this.IsDeletedChangedHandler(); };
            this.AddProperty(this._IsDeleted);

            this._ServiceName = new global::Sungero.Domain.Client.SimpleProperty<global::System.String>("ServiceName", this);
            this._ServiceName.ValueChanged += (sender, e) => { this.ServiceNameChangedHandler(); };
            this.AddProperty(this._ServiceName);

            this.InitParentBoxNavigationProperty();

            this.InitDepartmentNavigationProperty();

            this.InitRootBoxNavigationProperty();








    }

    #endregion

  }
}

// ==================================================================
// DepartmentBoxPresenter.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.ExchangeCore.Client
{
  public class DepartmentBoxPresenter<T> :
    global::Sungero.ExchangeCore.Client.BoxBasePresenter<T>
    where T : class, global::Sungero.ExchangeCore.IDepartmentBox
  {
    #region Fields and properties




    #endregion

    #region Methods

    #endregion

    #region Framework events

    protected override void EntityPropertyChangedEventHandler(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
    {
      base.EntityPropertyChangedEventHandler(sender, e);
    }

    #endregion

              protected global::Sungero.Domain.Client.IEntityCollectionPresenter _ParentBoxCollectionPresenter;
              public global::Sungero.Domain.Client.IEntityCollectionPresenter ParentBoxCollectionPresenter
              {
          get { return this._ParentBoxCollectionPresenter; }
        }
              protected global::Sungero.Domain.Client.IEntityCollectionPresenter _DepartmentCollectionPresenter;
              public global::Sungero.Domain.Client.IEntityCollectionPresenter DepartmentCollectionPresenter
              {
          get { return this._DepartmentCollectionPresenter; }
        }
              protected global::Sungero.Domain.Client.IEntityCollectionPresenter _RootBoxCollectionPresenter;
              public global::Sungero.Domain.Client.IEntityCollectionPresenter RootBoxCollectionPresenter
              {
          get { return this._RootBoxCollectionPresenter; }
        }



    #region Constructors

    private void Init()
    {
              this._ResponsibleCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Company.IEmployee>(() => this.Entity.Id, typeof(T), "Responsible");

                  this._ParentBoxCollectionPresenter = this.CreateCollectionPresenterForNavigationProperty<global::Sungero.ExchangeCore.IBoxBase>(global::System.Guid.Parse("7e0bceec-4001-4c59-88bf-a6ab89d47242"));
              this._ParentBoxCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.ExchangeCore.IBoxBase>(() => this.Entity.Id, typeof(T), "ParentBox");

                  this._DepartmentCollectionPresenter = this.CreateCollectionPresenterForNavigationProperty<global::Sungero.Company.IDepartment>(global::System.Guid.Parse("81099d4d-46d0-454a-9930-4d49df5fa900"));
              this._DepartmentCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Company.IDepartment>(() => this.Entity.Id, typeof(T), "Department");

                  this._RootBoxCollectionPresenter = this.CreateCollectionPresenterForNavigationProperty<global::Sungero.ExchangeCore.IBusinessUnitBox>(global::System.Guid.Parse("aa2ade75-1e3f-4b4a-90fd-6ff94d204032"));
              this._RootBoxCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.ExchangeCore.IBusinessUnitBox>(() => this.Entity.Id, typeof(T), "RootBox");


    }

    public DepartmentBoxPresenter()
    {
      this.Init();
    }

    #endregion
  }
}

// ==================================================================
// DepartmentBoxCollectionPresenter.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.ExchangeCore.Client
{
  public class DepartmentBoxCollectionPresenter<T> : 
    global::Sungero.ExchangeCore.Client.BoxBaseCollectionPresenter<T>
    where T: class, global::Sungero.ExchangeCore.IDepartmentBox
  {
    #region Actions



    #endregion

    #region Methods


    #endregion

    public DepartmentBoxCollectionPresenter(global::System.Linq.IQueryable<T> query, OnLookup onLookup)
      : base(query, onLookup)
    {
    }

    public DepartmentBoxCollectionPresenter(global::System.Linq.IQueryable<T> query)
      : this(query, null) { }

    public DepartmentBoxCollectionPresenter(OnLookup onLookup)
      : this(null, onLookup) { }

    public DepartmentBoxCollectionPresenter()
      : this(null, null) { }
  }
}

// ==================================================================
// DepartmentBoxRepositoryImplementer.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.ExchangeCore.Client
{ 
  public class DepartmentBoxRepositoryImplementer<T> : 
      global::Sungero.ExchangeCore.Client.BoxBaseRepositoryImplementer<T>,
      global::Sungero.ExchangeCore.IDepartmentBoxRepositoryImplementer<T>
      where T : global::Sungero.ExchangeCore.IDepartmentBox
    {
       public new global::Sungero.ExchangeCore.IDepartmentBoxAccessRights AccessRights
       {
          get { return (global::Sungero.ExchangeCore.IDepartmentBoxAccessRights)base.AccessRights; }
       }

       public new global::Sungero.ExchangeCore.IDepartmentBoxInfo Info
       {
          get { return (global::Sungero.ExchangeCore.IDepartmentBoxInfo)base.Info; }
       }

       protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
       {
         return new global::Sungero.ExchangeCore.Client.DepartmentBoxTypeAccessRights(typeof(T));
       }
    }
}

// ==================================================================
// DepartmentBoxAccessRights.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.ExchangeCore.Client
{
  public class DepartmentBoxAccessRights : 
    Sungero.ExchangeCore.Client.BoxBaseAccessRights, Sungero.ExchangeCore.IDepartmentBoxAccessRights
  {

    public DepartmentBoxAccessRights(global::Sungero.Domain.Shared.IEntity entity) : base(entity)
    {
    }
  }

  public class DepartmentBoxTypeAccessRights : 
    Sungero.ExchangeCore.Client.BoxBaseTypeAccessRights, Sungero.ExchangeCore.IDepartmentBoxAccessRights
  {

    public DepartmentBoxTypeAccessRights(global::System.Type entityType) : base(entityType)
    {
    }
  }
}
