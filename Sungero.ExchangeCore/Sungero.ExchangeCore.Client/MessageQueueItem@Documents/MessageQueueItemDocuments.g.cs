
// ==================================================================
// MessageQueueItemDocuments.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.ExchangeCore.Client
{
  public class MessageQueueItemDocuments :
    global::Sungero.Domain.Client.ChildEntityProxy, global::Sungero.ExchangeCore.IMessageQueueItemDocuments
  {
    #region Fields and properties

    public static new readonly global::System.Guid ClassTypeGuid = global::System.Guid.Parse("ff5abd47-6495-4a84-9efc-3b08afebc6af");

    public override global::System.Guid TypeGuid
    {
      get { return global::Sungero.ExchangeCore.Client.MessageQueueItemDocuments.ClassTypeGuid; }
    }

    public override string TypeName
    {
      get { return "Sungero.ExchangeCore.IMessageQueueItemDocuments, Sungero.Domain.Interfaces"; }
    }

    public new global::Sungero.ExchangeCore.IMessageQueueItemDocumentsState State
    {
      get
      {
        return (global::Sungero.ExchangeCore.IMessageQueueItemDocumentsState)base.State;
      }
    }

    protected override global::Sungero.Domain.Shared.IEntityState CreateState()
    {
      return new global::Sungero.ExchangeCore.Shared.MessageQueueItemDocumentsState(this);
    }

    public new global::Sungero.ExchangeCore.IMessageQueueItemDocumentsInfo Info
    {
      get
      {
        return (global::Sungero.ExchangeCore.IMessageQueueItemDocumentsInfo)base.Info;
      }
    }

    protected global::Sungero.Domain.Client.NavigationProperty<global::Sungero.ExchangeCore.IMessageQueueItem> _MessageQueueItem;

    public global::Sungero.ExchangeCore.IMessageQueueItem MessageQueueItem
    {
      get { return this._MessageQueueItem.Value; }
      set { this._MessageQueueItem.Value = value; }
    }

    public override global::Sungero.Domain.Shared.IEntity RootEntity
    {
      get { return this.MessageQueueItem; }
      set { this.MessageQueueItem = (global::Sungero.ExchangeCore.IMessageQueueItem)value; }
    }

        protected global::Sungero.Domain.Client.SimpleProperty<global::System.String> _ExternalId;

        public virtual global::System.String ExternalId
        {
          get { return this._ExternalId.Value; }
          set { this._ExternalId.Value = value; }
        }
        protected global::Sungero.Domain.Client.EnumSimpleProperty<global::Sungero.Core.Enumeration?> _Type;

        public virtual global::Sungero.Core.Enumeration? Type
        {
          get { return this._Type.Value; }
          set { this._Type.Value = value; }
        }


        private static global::Sungero.Domain.Shared.EnumerationItems _TypeItems = new global::Sungero.Domain.Shared.EnumerationItems(
          null,
          typeof(global::Sungero.ExchangeCore.MessageQueueItemDocuments.Type),
          typeof(global::Sungero.ExchangeCore.Client.MessageQueueItemDocuments),
          "Type");

        public static global::Sungero.Domain.Shared.EnumerationItems TypeItems
        {
          get { return global::Sungero.ExchangeCore.Client.MessageQueueItemDocuments._TypeItems; }
        }

        public virtual global::Sungero.Domain.Shared.EnumerationItems TypeAllowedItems
        {
          get { return global::Sungero.ExchangeCore.Client.MessageQueueItemDocuments.TypeItems; }
        }










    #endregion

    #region Methods

    protected override object CreateHandlers() {
      return new global::Sungero.ExchangeCore.MessageQueueItemDocumentsClientHandlers(this);
    }
    protected override object CreateSharedHandlers() {
      return new global::Sungero.ExchangeCore.MessageQueueItemDocumentsSharedHandlers(this);
    }

    #endregion

    #region Framework events

    protected void ExternalIdChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.ExternalId, this.ExternalId, this);
     ((global::Sungero.ExchangeCore.MessageQueueItemDocumentsSharedHandlers)this.SharedHandlers).DocumentsExternalIdChanged(args);
    }

    protected void TypeChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.EnumerationPropertyChangedEventArgs(this.State.Properties.Type, this.Type, this);
     ((global::Sungero.ExchangeCore.MessageQueueItemDocumentsSharedHandlers)this.SharedHandlers).DocumentsTypeChanged(args);
    }



  protected global::System.String ExternalIdValueInputHandler(global::System.String value)
  {
    var args = new global::Sungero.Presentation.StringValueInputEventArgs(this.ExternalId, value, this, this.Info.Properties.ExternalId);
    ((global::Sungero.ExchangeCore.MessageQueueItemDocumentsClientHandlers)this.Handlers).DocumentsExternalIdValueInput(args);
    return args.NewValue;
  }

  protected global::Sungero.Core.Enumeration? TypeValueInputHandler(global::Sungero.Core.Enumeration? value)
  {
    var args = new global::Sungero.Presentation.EnumerationValueInputEventArgs(this.Type, value, this, this.Info.Properties.Type);
    ((global::Sungero.ExchangeCore.MessageQueueItemDocumentsClientHandlers)this.Handlers).DocumentsTypeValueInput(args);
    return args.NewValue;
  }


  protected global::System.Collections.Generic.IEnumerable<global::Sungero.Core.Enumeration> TypeFilteringHandler()
  {
    return ((global::Sungero.ExchangeCore.MessageQueueItemDocumentsClientHandlers)this.Handlers).DocumentsTypeFiltering(this.TypeAllowedItems);
  }


    #endregion

    #region Constructors



    public MessageQueueItemDocuments()
    {
      this._MessageQueueItem = new global::Sungero.Domain.Client.NavigationProperty<global::Sungero.ExchangeCore.IMessageQueueItem>("MessageQueueItem", this, true);

            this._ExternalId = new global::Sungero.Domain.Client.SimpleProperty<global::System.String>("ExternalId", this);
            this._ExternalId.ValueChanged += (sender, e) => { this.ExternalIdChangedHandler(); };
            this.AddProperty(this._ExternalId);

            this._Type = new global::Sungero.Domain.Client.EnumSimpleProperty<global::Sungero.Core.Enumeration?>("Type", this);
            this._Type.ValueChanged += (sender, e) => { this.TypeChangedHandler(); };
            this.AddProperty(this._Type);








    }

    #endregion

  }
}
