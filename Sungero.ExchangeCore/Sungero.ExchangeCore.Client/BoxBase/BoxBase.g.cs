
// ==================================================================
// BoxBase.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.ExchangeCore.Client
{
  public class BoxBase :
    global::Sungero.CoreEntities.Client.DatabookEntry, global::Sungero.ExchangeCore.IBoxBase
  {
    #region Fields and properties

    public static new readonly global::System.Guid ClassTypeGuid = global::System.Guid.Parse("f91dcce6-a914-4c04-aba1-0f940475696b");

    public override global::System.Guid TypeGuid
    {
      get { return global::Sungero.ExchangeCore.Client.BoxBase.ClassTypeGuid; }
    }

    public override string TypeName
    {
      get { return "Sungero.ExchangeCore.IBoxBase, Sungero.Domain.Interfaces"; }
    }

      public override string DisplayValue
      {
        get { return this.Name; }
        set { this.Name = value; }
      }

      public override string DisplayPropertyName
      {
        get { return "Name"; }
      }


    public new global::Sungero.ExchangeCore.IBoxBaseState State
    {
      get
      {
        return (global::Sungero.ExchangeCore.IBoxBaseState)base.State;
      }
    }

    protected override global::Sungero.Domain.Shared.IEntityState CreateState()
    {
      return new global::Sungero.ExchangeCore.Shared.BoxBaseState(this);
    }

    public new global::Sungero.ExchangeCore.IBoxBaseInfo Info
    {
      get
      {
        return (global::Sungero.ExchangeCore.IBoxBaseInfo)base.Info;
      }
    }

    public new global::Sungero.ExchangeCore.IBoxBaseAccessRights AccessRights
    {
      get
      {
        return (global::Sungero.ExchangeCore.IBoxBaseAccessRights)base.AccessRights;
      }
    }

    protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
    {
      return new global::Sungero.ExchangeCore.Client.BoxBaseAccessRights(this);
    }

        protected global::Sungero.Domain.Client.SimpleProperty<global::System.String> _Name;

        public virtual global::System.String Name
        {
          get { return this._Name.Value; }
          set { this._Name.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.String> _Note;

        public virtual global::System.String Note
        {
          get { return this._Note.Value; }
          set { this._Note.Value = value; }
        }
        protected global::Sungero.Domain.Client.EnumSimpleProperty<global::Sungero.Core.Enumeration?> _ConnectionStatus;

        public virtual global::Sungero.Core.Enumeration? ConnectionStatus
        {
          get { return this._ConnectionStatus.Value; }
          set { this._ConnectionStatus.Value = value; }
        }
        protected global::Sungero.Domain.Client.EnumSimpleProperty<global::Sungero.Core.Enumeration?> _Routing;

        public virtual global::Sungero.Core.Enumeration? Routing
        {
          get { return this._Routing.Value; }
          set { this._Routing.Value = value; }
        }


        private static global::Sungero.Domain.Shared.EnumerationItems _ConnectionStatusItems = new global::Sungero.Domain.Shared.EnumerationItems(
          null,
          typeof(global::Sungero.ExchangeCore.BoxBase.ConnectionStatus),
          typeof(global::Sungero.ExchangeCore.Client.BoxBase),
          "ConnectionStatus");

        public static global::Sungero.Domain.Shared.EnumerationItems ConnectionStatusItems
        {
          get { return global::Sungero.ExchangeCore.Client.BoxBase._ConnectionStatusItems; }
        }

        public virtual global::Sungero.Domain.Shared.EnumerationItems ConnectionStatusAllowedItems
        {
          get { return global::Sungero.ExchangeCore.Client.BoxBase.ConnectionStatusItems; }
        }

        private static global::Sungero.Domain.Shared.EnumerationItems _RoutingItems = new global::Sungero.Domain.Shared.EnumerationItems(
          null,
          typeof(global::Sungero.ExchangeCore.BoxBase.Routing),
          typeof(global::Sungero.ExchangeCore.Client.BoxBase),
          "Routing");

        public static global::Sungero.Domain.Shared.EnumerationItems RoutingItems
        {
          get { return global::Sungero.ExchangeCore.Client.BoxBase._RoutingItems; }
        }

        public virtual global::Sungero.Domain.Shared.EnumerationItems RoutingAllowedItems
        {
          get { return global::Sungero.ExchangeCore.Client.BoxBase.RoutingItems; }
        }




              protected global::Sungero.Domain.Client.INavigationProperty<global::Sungero.Company.IEmployee> _Responsible;

              public virtual global::Sungero.Company.IEmployee Responsible
              {
              get
              {
                return this._Responsible.Value as global::Sungero.Company.IEmployee;
              }

              set
              {
                (this._Responsible as global::Sungero.Domain.Client.IProperty).Value = value;
              }
            }










    #endregion

    #region Methods


    protected override global::Sungero.Domain.Client.EntityFunctions CreateClientFunctions()
    {
      return new global::Sungero.ExchangeCore.Client.BoxBaseFunctions(this);
    }

    protected override global::Sungero.Domain.Shared.EntityFunctions CreateSharedFunctions()
    {
      return new global::Sungero.ExchangeCore.Shared.BoxBaseFunctions(this);
    }
    protected override object CreateHandlers() {
      return new global::Sungero.ExchangeCore.BoxBaseClientHandlers(this);
    }
    protected override object CreateSharedHandlers() {
      return new global::Sungero.ExchangeCore.BoxBaseSharedHandlers(this);
    }

    #endregion

    #region Framework events

    protected void NameChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.Name, this.Name, this);
     ((global::Sungero.ExchangeCore.BoxBaseSharedHandlers)this.SharedHandlers).NameChanged(args);
    }

    protected void ResponsibleChangedHandler()
    {
      var args = new global::Sungero.ExchangeCore.Shared.BoxBaseResponsibleChangedEventArgs(this.State.Properties.Responsible, this.Responsible, this);
     ((global::Sungero.ExchangeCore.BoxBaseSharedHandlers)this.SharedHandlers).ResponsibleChanged(args);
    }

    protected void NoteChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.Note, this.Note, this);
     ((global::Sungero.ExchangeCore.BoxBaseSharedHandlers)this.SharedHandlers).NoteChanged(args);
    }

    protected void ConnectionStatusChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.EnumerationPropertyChangedEventArgs(this.State.Properties.ConnectionStatus, this.ConnectionStatus, this);
     ((global::Sungero.ExchangeCore.BoxBaseSharedHandlers)this.SharedHandlers).ConnectionStatusChanged(args);
    }

    protected void RoutingChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.EnumerationPropertyChangedEventArgs(this.State.Properties.Routing, this.Routing, this);
     ((global::Sungero.ExchangeCore.BoxBaseSharedHandlers)this.SharedHandlers).RoutingChanged(args);
    }



  protected global::System.String NameValueInputHandler(global::System.String value)
  {
    var args = new global::Sungero.Presentation.StringValueInputEventArgs(this.Name, value, this, this.Info.Properties.Name);
    ((global::Sungero.ExchangeCore.BoxBaseClientHandlers)this.Handlers).NameValueInput(args);
    return args.NewValue;
  }

  protected global::Sungero.Company.IEmployee ResponsibleValueInputHandler(global::Sungero.Company.IEmployee value)
  {
    var args = new global::Sungero.ExchangeCore.Client.BoxBaseResponsibleValueInputEventArgs(this.Responsible, value, this, this.Info.Properties.Responsible);
    ((global::Sungero.ExchangeCore.BoxBaseClientHandlers)this.Handlers).ResponsibleValueInput(args);
    return args.NewValue;
  }

  protected global::System.String NoteValueInputHandler(global::System.String value)
  {
    var args = new global::Sungero.Presentation.StringValueInputEventArgs(this.Note, value, this, this.Info.Properties.Note);
    ((global::Sungero.ExchangeCore.BoxBaseClientHandlers)this.Handlers).NoteValueInput(args);
    return args.NewValue;
  }

  protected global::Sungero.Core.Enumeration? ConnectionStatusValueInputHandler(global::Sungero.Core.Enumeration? value)
  {
    var args = new global::Sungero.Presentation.EnumerationValueInputEventArgs(this.ConnectionStatus, value, this, this.Info.Properties.ConnectionStatus);
    ((global::Sungero.ExchangeCore.BoxBaseClientHandlers)this.Handlers).ConnectionStatusValueInput(args);
    return args.NewValue;
  }

  protected global::Sungero.Core.Enumeration? RoutingValueInputHandler(global::Sungero.Core.Enumeration? value)
  {
    var args = new global::Sungero.Presentation.EnumerationValueInputEventArgs(this.Routing, value, this, this.Info.Properties.Routing);
    ((global::Sungero.ExchangeCore.BoxBaseClientHandlers)this.Handlers).RoutingValueInput(args);
    return args.NewValue;
  }


  protected global::System.Collections.Generic.IEnumerable<global::Sungero.Core.Enumeration> ConnectionStatusFilteringHandler()
  {
    return ((global::Sungero.ExchangeCore.BoxBaseClientHandlers)this.Handlers).ConnectionStatusFiltering(this.ConnectionStatusAllowedItems);
  }

  protected global::System.Collections.Generic.IEnumerable<global::Sungero.Core.Enumeration> RoutingFilteringHandler()
  {
    return ((global::Sungero.ExchangeCore.BoxBaseClientHandlers)this.Handlers).RoutingFiltering(this.RoutingAllowedItems);
  }


    #endregion

    #region Constructors



              protected virtual void InitResponsibleNavigationProperty()
              {
                this._Responsible = new global::Sungero.Domain.Client.NavigationProperty<global::Sungero.Company.IEmployee>("Responsible", this);
                this._Responsible.ValueChanged += (sender, e) => { this.ResponsibleChangedHandler(); };
                this.AddProperty(this._Responsible as global::Sungero.Domain.Client.IProperty);
              }




    public BoxBase()
    {
            this._Name = new global::Sungero.Domain.Client.SimpleProperty<global::System.String>("Name", this);
            this._Name.ValueChanged += (sender, e) => { this.NameChangedHandler(); };
            this.AddProperty(this._Name);

            this._Note = new global::Sungero.Domain.Client.SimpleProperty<global::System.String>("Note", this);
            this._Note.ValueChanged += (sender, e) => { this.NoteChangedHandler(); };
            this.AddProperty(this._Note);

            this._ConnectionStatus = new global::Sungero.Domain.Client.EnumSimpleProperty<global::Sungero.Core.Enumeration?>("ConnectionStatus", this);
            this._ConnectionStatus.ValueChanged += (sender, e) => { this.ConnectionStatusChangedHandler(); };
            this.AddProperty(this._ConnectionStatus);

            this._Routing = new global::Sungero.Domain.Client.EnumSimpleProperty<global::Sungero.Core.Enumeration?>("Routing", this);
            this._Routing.ValueChanged += (sender, e) => { this.RoutingChangedHandler(); };
            this.AddProperty(this._Routing);

            this.InitResponsibleNavigationProperty();








    }

    #endregion

  }
}

// ==================================================================
// BoxBasePresenter.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.ExchangeCore.Client
{
  public class BoxBasePresenter<T> :
    global::Sungero.Domain.Client.EntityPresenter<T>
    where T : class, global::Sungero.ExchangeCore.IBoxBase
  {
    #region Fields and properties

          private global::System.Windows.Input.ICommand _FindActiveChildBoxesCommand;

          public global::System.Windows.Input.ICommand FindActiveChildBoxesCommand
          {
            get
            {
              if (this._FindActiveChildBoxesCommand == null)
                  this._FindActiveChildBoxesCommand = new global::Sungero.Domain.Client.SingleEntityCommand<T>("FindActiveChildBoxes", this, this.FindActiveChildBoxes, this.CanFindActiveChildBoxes) { IsEmptyParameterAllowed = true };
              return this._FindActiveChildBoxesCommand;
            }
          }
          private global::System.Windows.Input.ICommand _FindClosedChildBoxesCommand;

          public global::System.Windows.Input.ICommand FindClosedChildBoxesCommand
          {
            get
            {
              if (this._FindClosedChildBoxesCommand == null)
                  this._FindClosedChildBoxesCommand = new global::Sungero.Domain.Client.SingleEntityCommand<T>("FindClosedChildBoxes", this, this.FindClosedChildBoxes, this.CanFindClosedChildBoxes) { IsEmptyParameterAllowed = true };
              return this._FindClosedChildBoxesCommand;
            }
          }




    #endregion

    #region Methods

              private bool CanFindActiveChildBoxes(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfCanExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this);
                return ((Sungero.ExchangeCore.Client.BoxBaseActions)(entity as Sungero.ExchangeCore.Client.BoxBase).ActionsHandlers).CanFindActiveChildBoxes(args);
              }

              private void FindActiveChildBoxes(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this, entity.Info.Actions.FindActiveChildBoxes);
                ((Sungero.ExchangeCore.Client.BoxBaseActions)(entity as Sungero.ExchangeCore.Client.BoxBase).ActionsHandlers).FindActiveChildBoxes(args);
              }

              private bool CanFindClosedChildBoxes(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfCanExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this);
                return ((Sungero.ExchangeCore.Client.BoxBaseActions)(entity as Sungero.ExchangeCore.Client.BoxBase).ActionsHandlers).CanFindClosedChildBoxes(args);
              }

              private void FindClosedChildBoxes(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this, entity.Info.Actions.FindClosedChildBoxes);
                ((Sungero.ExchangeCore.Client.BoxBaseActions)(entity as Sungero.ExchangeCore.Client.BoxBase).ActionsHandlers).FindClosedChildBoxes(args);
              }


    #endregion

    #region Framework events

    protected override void EntityPropertyChangedEventHandler(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
    {
      base.EntityPropertyChangedEventHandler(sender, e);
    }

    #endregion

              protected global::Sungero.Domain.Client.IEntityCollectionPresenter _ResponsibleCollectionPresenter;
              public global::Sungero.Domain.Client.IEntityCollectionPresenter ResponsibleCollectionPresenter
              {
          get { return this._ResponsibleCollectionPresenter; }
        }



    #region Constructors

    private void Init()
    {
                  this._ResponsibleCollectionPresenter = this.CreateCollectionPresenterForNavigationProperty<global::Sungero.Company.IEmployee>(global::System.Guid.Parse("55366496-0f4a-4ddd-bc15-b2fdd02797c0"));
              this._ResponsibleCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Company.IEmployee>(() => this.Entity.Id, typeof(T), "Responsible");


    }

    public BoxBasePresenter()
    {
      this.Init();
    }

    #endregion
  }
}

// ==================================================================
// BoxBaseCollectionPresenter.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.ExchangeCore.Client
{
  public class BoxBaseCollectionPresenter<T> : 
    global::Sungero.Domain.Client.EntityCollectionPresenter<T>
    where T: class, global::Sungero.ExchangeCore.IBoxBase
  {
    #region Actions



    #endregion

    #region Methods


    #endregion

    public BoxBaseCollectionPresenter(global::System.Linq.IQueryable<T> query, OnLookup onLookup)
      : base(query, onLookup)
    {
    }

    public BoxBaseCollectionPresenter(global::System.Linq.IQueryable<T> query)
      : this(query, null) { }

    public BoxBaseCollectionPresenter(OnLookup onLookup)
      : this(null, onLookup) { }

    public BoxBaseCollectionPresenter()
      : this(null, null) { }
  }
}

// ==================================================================
// BoxBaseRepositoryImplementer.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.ExchangeCore.Client
{ 
  public class BoxBaseRepositoryImplementer<T> : 
      global::Sungero.Domain.Client.RepositoryImplementer<T>,
      global::Sungero.ExchangeCore.IBoxBaseRepositoryImplementer<T>
      where T : global::Sungero.ExchangeCore.IBoxBase
    {
       public new global::Sungero.ExchangeCore.IBoxBaseAccessRights AccessRights
       {
          get { return (global::Sungero.ExchangeCore.IBoxBaseAccessRights)base.AccessRights; }
       }

       public new global::Sungero.ExchangeCore.IBoxBaseInfo Info
       {
          get { return (global::Sungero.ExchangeCore.IBoxBaseInfo)base.Info; }
       }

       protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
       {
         return new global::Sungero.ExchangeCore.Client.BoxBaseTypeAccessRights(typeof(T));
       }
    }
}

// ==================================================================
// BoxBaseAccessRights.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.ExchangeCore.Client
{
  public class BoxBaseAccessRights : 
    Sungero.CoreEntities.Client.DatabookEntryAccessRights, Sungero.ExchangeCore.IBoxBaseAccessRights
  {

    public BoxBaseAccessRights(global::Sungero.Domain.Shared.IEntity entity) : base(entity)
    {
    }
  }

  public class BoxBaseTypeAccessRights : 
    Sungero.CoreEntities.Client.DatabookEntryTypeAccessRights, Sungero.ExchangeCore.IBoxBaseAccessRights
  {

    public BoxBaseTypeAccessRights(global::System.Type entityType) : base(entityType)
    {
    }
  }
}
