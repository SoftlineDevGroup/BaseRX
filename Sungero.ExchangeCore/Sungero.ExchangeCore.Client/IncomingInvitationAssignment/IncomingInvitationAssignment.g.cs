
// ==================================================================
// IncomingInvitationAssignment.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.ExchangeCore.Client
{
  public class IncomingInvitationAssignment :
    global::Sungero.Workflow.Client.Assignment, global::Sungero.ExchangeCore.IIncomingInvitationAssignment
  {
    #region Fields and properties

    public static new readonly global::System.Guid ClassTypeGuid = global::System.Guid.Parse("cf5edde0-03df-4db3-9e1e-15b22cf3198c");

    public override global::System.Guid TypeGuid
    {
      get { return global::Sungero.ExchangeCore.Client.IncomingInvitationAssignment.ClassTypeGuid; }
    }

    public override string TypeName
    {
      get { return "Sungero.ExchangeCore.IIncomingInvitationAssignment, Sungero.Domain.Interfaces"; }
    }

      public override string DisplayValue
      {
        get { return this.Subject; }
        set { this.Subject = value; }
      }

      public override string DisplayPropertyName
      {
        get { return "Subject"; }
      }


    public new global::Sungero.ExchangeCore.IIncomingInvitationAssignmentState State
    {
      get
      {
        return (global::Sungero.ExchangeCore.IIncomingInvitationAssignmentState)base.State;
      }
    }

    protected override global::Sungero.Domain.Shared.IEntityState CreateState()
    {
      return new global::Sungero.ExchangeCore.Shared.IncomingInvitationAssignmentState(this);
    }

    public new global::Sungero.ExchangeCore.IIncomingInvitationAssignmentInfo Info
    {
      get
      {
        return (global::Sungero.ExchangeCore.IIncomingInvitationAssignmentInfo)base.Info;
      }
    }

    public new global::Sungero.ExchangeCore.IIncomingInvitationAssignmentAccessRights AccessRights
    {
      get
      {
        return (global::Sungero.ExchangeCore.IIncomingInvitationAssignmentAccessRights)base.AccessRights;
      }
    }

    protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
    {
      return new global::Sungero.ExchangeCore.Client.IncomingInvitationAssignmentAccessRights(this);
    }


        private static global::Sungero.Domain.Shared.EnumerationItems _ResultItems = new global::Sungero.Domain.Shared.EnumerationItems(
          global::Sungero.Workflow.Client.Assignment.ResultItems,
          typeof(global::Sungero.ExchangeCore.IncomingInvitationAssignment.Result),
          typeof(global::Sungero.ExchangeCore.Client.IncomingInvitationAssignment),
          "Result");

        public static new global::Sungero.Domain.Shared.EnumerationItems ResultItems
        {
          get { return global::Sungero.ExchangeCore.Client.IncomingInvitationAssignment._ResultItems; }
        }

        public override global::Sungero.Domain.Shared.EnumerationItems ResultAllowedItems
        {
          get { return global::Sungero.ExchangeCore.Client.IncomingInvitationAssignment.ResultItems; }
        }




              protected global::Sungero.Domain.Client.INavigationProperty<global::Sungero.ExchangeCore.IBusinessUnitBox> _Box;

              public virtual global::Sungero.ExchangeCore.IBusinessUnitBox Box
              {
              get
              {
                return this._Box.Value as global::Sungero.ExchangeCore.IBusinessUnitBox;
              }

              set
              {
                (this._Box as global::Sungero.Domain.Client.IProperty).Value = value;
              }
            }



              protected global::Sungero.Domain.Client.INavigationProperty<global::Sungero.Parties.ICounterparty> _Counterparty;

              public virtual global::Sungero.Parties.ICounterparty Counterparty
              {
              get
              {
                return this._Counterparty.Value as global::Sungero.Parties.ICounterparty;
              }

              set
              {
                (this._Counterparty as global::Sungero.Domain.Client.IProperty).Value = value;
              }
            }










    #endregion

    #region Methods

    protected override object CreateActionsHandlers()
    {
      return new global::Sungero.ExchangeCore.Client.IncomingInvitationAssignmentActions(this);
    }

    protected override object CreateCollectionActionsHandlers()
    {
      return new global::Sungero.ExchangeCore.Client.IncomingInvitationAssignmentCollectionActions();
    }

    protected override object CreateAnyChildEntityActionsHandlers()
    {
      return new global::Sungero.ExchangeCore.Client.IncomingInvitationAssignmentAnyChildEntityActions();
    }

    protected override object CreateAnyChildEntityCollectionActionsHandlers()
    {
      return new global::Sungero.ExchangeCore.Client.IncomingInvitationAssignmentAnyChildEntityCollectionActions();
    }


    protected override global::Sungero.Domain.Client.EntityFunctions CreateClientFunctions()
    {
      return new global::Sungero.ExchangeCore.Client.IncomingInvitationAssignmentFunctions(this);
    }

    protected override global::Sungero.Domain.Shared.EntityFunctions CreateSharedFunctions()
    {
      return new global::Sungero.ExchangeCore.Shared.IncomingInvitationAssignmentFunctions(this);
    }
    protected override object CreateHandlers() {
      return new global::Sungero.ExchangeCore.IncomingInvitationAssignmentClientHandlers(this);
    }
    protected override object CreateSharedHandlers() {
      return new global::Sungero.ExchangeCore.IncomingInvitationAssignmentSharedHandlers(this);
    }

    #endregion

    #region Framework events

    protected void BoxChangedHandler()
    {
      var args = new global::Sungero.ExchangeCore.Shared.IncomingInvitationAssignmentBoxChangedEventArgs(this.State.Properties.Box, this.Box, this);
     ((global::Sungero.ExchangeCore.IncomingInvitationAssignmentSharedHandlers)this.SharedHandlers).BoxChanged(args);
    }

    protected void CounterpartyChangedHandler()
    {
      var args = new global::Sungero.ExchangeCore.Shared.IncomingInvitationAssignmentCounterpartyChangedEventArgs(this.State.Properties.Counterparty, this.Counterparty, this);
     ((global::Sungero.ExchangeCore.IncomingInvitationAssignmentSharedHandlers)this.SharedHandlers).CounterpartyChanged(args);
    }



  protected global::Sungero.ExchangeCore.IBusinessUnitBox BoxValueInputHandler(global::Sungero.ExchangeCore.IBusinessUnitBox value)
  {
    var args = new global::Sungero.ExchangeCore.Client.IncomingInvitationAssignmentBoxValueInputEventArgs(this.Box, value, this, this.Info.Properties.Box);
    ((global::Sungero.ExchangeCore.IncomingInvitationAssignmentClientHandlers)this.Handlers).BoxValueInput(args);
    return args.NewValue;
  }

  protected global::Sungero.Parties.ICounterparty CounterpartyValueInputHandler(global::Sungero.Parties.ICounterparty value)
  {
    var args = new global::Sungero.ExchangeCore.Client.IncomingInvitationAssignmentCounterpartyValueInputEventArgs(this.Counterparty, value, this, this.Info.Properties.Counterparty);
    ((global::Sungero.ExchangeCore.IncomingInvitationAssignmentClientHandlers)this.Handlers).CounterpartyValueInput(args);
    return args.NewValue;
  }



    #endregion

    #region Constructors








              protected virtual void InitBoxNavigationProperty()
              {
                this._Box = new global::Sungero.Domain.Client.NavigationProperty<global::Sungero.ExchangeCore.IBusinessUnitBox>("Box", this);
                this._Box.ValueChanged += (sender, e) => { this.BoxChangedHandler(); };
                this.AddProperty(this._Box as global::Sungero.Domain.Client.IProperty);
              }




              protected virtual void InitCounterpartyNavigationProperty()
              {
                this._Counterparty = new global::Sungero.Domain.Client.NavigationProperty<global::Sungero.Parties.ICounterparty>("Counterparty", this);
                this._Counterparty.ValueChanged += (sender, e) => { this.CounterpartyChangedHandler(); };
                this.AddProperty(this._Counterparty as global::Sungero.Domain.Client.IProperty);
              }




    public IncomingInvitationAssignment()
    {

            this.InitBoxNavigationProperty();

            this.InitCounterpartyNavigationProperty();








      ((global::Sungero.Workflow.Interfaces.IWorkflowEntity)this).AttachmentCreated += this.AttachmentCreatedHandler;
      ((global::Sungero.Workflow.Interfaces.IWorkflowEntity)this).AttachmentAdded += this.AttachmentAddedHandler;
      ((global::Sungero.Workflow.Interfaces.IWorkflowEntity)this).AttachmentDeleted += this.AttachmentDeletedHandler;


    }

    #endregion

    #region Workflow attachments

    private void AttachmentCreatedHandler(object sender, global::Sungero.Workflow.Interfaces.AttachmentCreatedEventArgs e)
    {
    }

    private void AttachmentAddedHandler(object sender, global::Sungero.Workflow.Interfaces.AttachmentAddedEventArgs e)
    {
    }

    private void AttachmentDeletedHandler(object sender, global::Sungero.Workflow.Interfaces.AttachmentDeletedEventArgs e)
    {
    }
    #endregion

  }
}

// ==================================================================
// IncomingInvitationAssignmentPresenter.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.ExchangeCore.Client
{
  public class IncomingInvitationAssignmentPresenter<T> :
    global::Sungero.Workflow.Client.AssignmentPresenter<T>
    where T : class, global::Sungero.ExchangeCore.IIncomingInvitationAssignment
  {
    #region Fields and properties

          private global::System.Windows.Input.ICommand _AcceptCommand;

          public global::System.Windows.Input.ICommand AcceptCommand
          {
            get
            {
              if (this._AcceptCommand == null)
                  this._AcceptCommand = new global::Sungero.Workflow.Client.SingleAssignmentCommand<T>("Accept", this, this.Accept, this.CanAccept) { IsEmptyParameterAllowed = true };
              return this._AcceptCommand;
            }
          }
          private global::System.Windows.Input.ICommand _RejectCommand;

          public global::System.Windows.Input.ICommand RejectCommand
          {
            get
            {
              if (this._RejectCommand == null)
                  this._RejectCommand = new global::Sungero.Workflow.Client.SingleAssignmentCommand<T>("Reject", this, this.Reject, this.CanReject) { IsEmptyParameterAllowed = true };
              return this._RejectCommand;
            }
          }




    #endregion

    #region Methods

              private bool CanAccept(T entity)
              {
                var args = new global::Sungero.Workflow.Client.CanExecuteResultActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity);
                return ((Sungero.ExchangeCore.Client.IncomingInvitationAssignmentActions)(entity as Sungero.ExchangeCore.Client.IncomingInvitationAssignment).ActionsHandlers).CanAccept(args);
              }

              private void Accept(T entity)
              {
                var args = new global::Sungero.Workflow.Client.ExecuteResultActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, entity.Info.Actions.Accept);
                ((Sungero.ExchangeCore.Client.IncomingInvitationAssignmentActions)(entity as Sungero.ExchangeCore.Client.IncomingInvitationAssignment).ActionsHandlers).Accept(args);
              }

              private bool CanReject(T entity)
              {
                var args = new global::Sungero.Workflow.Client.CanExecuteResultActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity);
                return ((Sungero.ExchangeCore.Client.IncomingInvitationAssignmentActions)(entity as Sungero.ExchangeCore.Client.IncomingInvitationAssignment).ActionsHandlers).CanReject(args);
              }

              private void Reject(T entity)
              {
                var args = new global::Sungero.Workflow.Client.ExecuteResultActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, entity.Info.Actions.Reject);
                ((Sungero.ExchangeCore.Client.IncomingInvitationAssignmentActions)(entity as Sungero.ExchangeCore.Client.IncomingInvitationAssignment).ActionsHandlers).Reject(args);
              }


    #endregion

    #region Framework events

    protected override void EntityPropertyChangedEventHandler(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
    {
      base.EntityPropertyChangedEventHandler(sender, e);
    }

    #endregion

              protected global::Sungero.Domain.Client.IEntityCollectionPresenter _BoxCollectionPresenter;
              public global::Sungero.Domain.Client.IEntityCollectionPresenter BoxCollectionPresenter
              {
          get { return this._BoxCollectionPresenter; }
        }
              protected global::Sungero.Domain.Client.IEntityCollectionPresenter _CounterpartyCollectionPresenter;
              public global::Sungero.Domain.Client.IEntityCollectionPresenter CounterpartyCollectionPresenter
              {
          get { return this._CounterpartyCollectionPresenter; }
        }



    #region Constructors

    private void Init()
    {
              this._AuthorCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.CoreEntities.IUser>(() => this.Entity.Id, typeof(T), "Author");

              this._PerformerCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.CoreEntities.IUser>(() => this.Entity.Id, typeof(T), "Performer");

              this._TaskCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Workflow.ITask>(() => this.Entity.Id, typeof(T), "Task");

              this._MainTaskCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Workflow.ITask>(() => this.Entity.Id, typeof(T), "MainTask");

              this._CompletedByCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.CoreEntities.IUser>(() => this.Entity.Id, typeof(T), "CompletedBy");

                  this._BoxCollectionPresenter = this.CreateCollectionPresenterForNavigationProperty<global::Sungero.ExchangeCore.IBusinessUnitBox>(global::System.Guid.Parse("f7866bbc-d05b-4e93-b695-be5b40edeb80"));
              this._BoxCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.ExchangeCore.IBusinessUnitBox>(() => this.Entity.Id, typeof(T), "Box");

                  this._CounterpartyCollectionPresenter = this.CreateCollectionPresenterForNavigationProperty<global::Sungero.Parties.ICounterparty>(global::System.Guid.Parse("f3a2e1f5-adf2-491e-a78a-13b55b33dfc0"));
              this._CounterpartyCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Parties.ICounterparty>(() => this.Entity.Id, typeof(T), "Counterparty");


    }

    public IncomingInvitationAssignmentPresenter()
    {
      this.Init();
    }

    #endregion
  }
}

// ==================================================================
// IncomingInvitationAssignmentCollectionPresenter.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.ExchangeCore.Client
{
  public class IncomingInvitationAssignmentCollectionPresenter<T> : 
    global::Sungero.Workflow.Client.AssignmentCollectionPresenter<T>
    where T: class, global::Sungero.ExchangeCore.IIncomingInvitationAssignment
  {
    #region Actions



    #endregion

    #region Methods


    #endregion

    public IncomingInvitationAssignmentCollectionPresenter(global::System.Linq.IQueryable<T> query, OnLookup onLookup)
      : base(query, onLookup)
    {
    }

    public IncomingInvitationAssignmentCollectionPresenter(global::System.Linq.IQueryable<T> query)
      : this(query, null) { }

    public IncomingInvitationAssignmentCollectionPresenter(OnLookup onLookup)
      : this(null, onLookup) { }

    public IncomingInvitationAssignmentCollectionPresenter()
      : this(null, null) { }
  }
}

// ==================================================================
// IncomingInvitationAssignmentRepositoryImplementer.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.ExchangeCore.Client
{ 
  public class IncomingInvitationAssignmentRepositoryImplementer<T> : 
      global::Sungero.Workflow.Client.AssignmentRepositoryImplementer<T>,
      global::Sungero.ExchangeCore.IIncomingInvitationAssignmentRepositoryImplementer<T>
      where T : global::Sungero.ExchangeCore.IIncomingInvitationAssignment
    {
       public new global::Sungero.ExchangeCore.IIncomingInvitationAssignmentAccessRights AccessRights
       {
          get { return (global::Sungero.ExchangeCore.IIncomingInvitationAssignmentAccessRights)base.AccessRights; }
       }

       public new global::Sungero.ExchangeCore.IIncomingInvitationAssignmentInfo Info
       {
          get { return (global::Sungero.ExchangeCore.IIncomingInvitationAssignmentInfo)base.Info; }
       }

       protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
       {
         return new global::Sungero.ExchangeCore.Client.IncomingInvitationAssignmentTypeAccessRights(typeof(T));
       }
    }
}

// ==================================================================
// IncomingInvitationAssignmentAccessRights.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.ExchangeCore.Client
{
  public class IncomingInvitationAssignmentAccessRights : 
    Sungero.Workflow.Client.AssignmentAccessRights, Sungero.ExchangeCore.IIncomingInvitationAssignmentAccessRights
  {

    public IncomingInvitationAssignmentAccessRights(global::Sungero.Domain.Shared.IEntity entity) : base(entity)
    {
    }
  }

  public class IncomingInvitationAssignmentTypeAccessRights : 
    Sungero.Workflow.Client.AssignmentTypeAccessRights, Sungero.ExchangeCore.IIncomingInvitationAssignmentAccessRights
  {

    public IncomingInvitationAssignmentTypeAccessRights(global::System.Type entityType) : base(entityType)
    {
    }
  }
}
