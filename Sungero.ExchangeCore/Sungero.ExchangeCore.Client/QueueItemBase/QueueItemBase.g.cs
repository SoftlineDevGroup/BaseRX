
// ==================================================================
// QueueItemBase.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.ExchangeCore.Client
{
  public class QueueItemBase :
    global::Sungero.CoreEntities.Client.DatabookEntry, global::Sungero.ExchangeCore.IQueueItemBase
  {
    #region Fields and properties

    public static new readonly global::System.Guid ClassTypeGuid = global::System.Guid.Parse("4e09273f-8b3a-489e-814e-a4ebfbba3e6c");

    public override global::System.Guid TypeGuid
    {
      get { return global::Sungero.ExchangeCore.Client.QueueItemBase.ClassTypeGuid; }
    }

    public override string TypeName
    {
      get { return "Sungero.ExchangeCore.IQueueItemBase, Sungero.Domain.Interfaces"; }
    }

      public override string DisplayValue
      {
        get { return this.Name; }
        set { this.Name = value; }
      }

      public override string DisplayPropertyName
      {
        get { return "Name"; }
      }


    public new global::Sungero.ExchangeCore.IQueueItemBaseState State
    {
      get
      {
        return (global::Sungero.ExchangeCore.IQueueItemBaseState)base.State;
      }
    }

    protected override global::Sungero.Domain.Shared.IEntityState CreateState()
    {
      return new global::Sungero.ExchangeCore.Shared.QueueItemBaseState(this);
    }

    public new global::Sungero.ExchangeCore.IQueueItemBaseInfo Info
    {
      get
      {
        return (global::Sungero.ExchangeCore.IQueueItemBaseInfo)base.Info;
      }
    }

    public new global::Sungero.ExchangeCore.IQueueItemBaseAccessRights AccessRights
    {
      get
      {
        return (global::Sungero.ExchangeCore.IQueueItemBaseAccessRights)base.AccessRights;
      }
    }

    protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
    {
      return new global::Sungero.ExchangeCore.Client.QueueItemBaseAccessRights(this);
    }

        protected global::Sungero.Domain.Client.SimpleProperty<global::System.String> _Name;

        public virtual global::System.String Name
        {
          get { return this._Name.Value; }
          set { this._Name.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.String> _ExternalId;

        public virtual global::System.String ExternalId
        {
          get { return this._ExternalId.Value; }
          set { this._ExternalId.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.Int32?> _Retries;

        public virtual global::System.Int32? Retries
        {
          get { return this._Retries.Value; }
          set { this._Retries.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.String> _Note;

        public virtual global::System.String Note
        {
          get { return this._Note.Value; }
          set { this._Note.Value = value; }
        }
        protected global::Sungero.Domain.Client.EnumSimpleProperty<global::Sungero.Core.Enumeration?> _ProcessingStatus;

        public virtual global::Sungero.Core.Enumeration? ProcessingStatus
        {
          get { return this._ProcessingStatus.Value; }
          set { this._ProcessingStatus.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.DateTime?> _LastUpdate;

        public virtual global::System.DateTime? LastUpdate
        {
          get { return this._LastUpdate.Value; }
          set { this._LastUpdate.Value = value; }
        }


        private static global::Sungero.Domain.Shared.EnumerationItems _ProcessingStatusItems = new global::Sungero.Domain.Shared.EnumerationItems(
          null,
          typeof(global::Sungero.ExchangeCore.QueueItemBase.ProcessingStatus),
          typeof(global::Sungero.ExchangeCore.Client.QueueItemBase),
          "ProcessingStatus");

        public static global::Sungero.Domain.Shared.EnumerationItems ProcessingStatusItems
        {
          get { return global::Sungero.ExchangeCore.Client.QueueItemBase._ProcessingStatusItems; }
        }

        public virtual global::Sungero.Domain.Shared.EnumerationItems ProcessingStatusAllowedItems
        {
          get { return global::Sungero.ExchangeCore.Client.QueueItemBase.ProcessingStatusItems; }
        }




              protected global::Sungero.Domain.Client.INavigationProperty<global::Sungero.ExchangeCore.IBoxBase> _Box;

              public virtual global::Sungero.ExchangeCore.IBoxBase Box
              {
              get
              {
                return this._Box.Value as global::Sungero.ExchangeCore.IBoxBase;
              }

              set
              {
                (this._Box as global::Sungero.Domain.Client.IProperty).Value = value;
              }
            }



              protected global::Sungero.Domain.Client.INavigationProperty<global::Sungero.ExchangeCore.IBusinessUnitBox> _RootBox;

              public virtual global::Sungero.ExchangeCore.IBusinessUnitBox RootBox
              {
              get
              {
                return this._RootBox.Value as global::Sungero.ExchangeCore.IBusinessUnitBox;
              }

              set
              {
                (this._RootBox as global::Sungero.Domain.Client.IProperty).Value = value;
              }
            }










    #endregion

    #region Methods


    protected override global::Sungero.Domain.Client.EntityFunctions CreateClientFunctions()
    {
      return new global::Sungero.ExchangeCore.Client.QueueItemBaseFunctions(this);
    }

    protected override global::Sungero.Domain.Shared.EntityFunctions CreateSharedFunctions()
    {
      return new global::Sungero.ExchangeCore.Shared.QueueItemBaseFunctions(this);
    }
    protected override object CreateHandlers() {
      return new global::Sungero.ExchangeCore.QueueItemBaseClientHandlers(this);
    }
    protected override object CreateSharedHandlers() {
      return new global::Sungero.ExchangeCore.QueueItemBaseSharedHandlers(this);
    }

    #endregion

    #region Framework events

    protected void NameChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.Name, this.Name, this);
     ((global::Sungero.ExchangeCore.QueueItemBaseSharedHandlers)this.SharedHandlers).NameChanged(args);
    }

    protected void ExternalIdChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.ExternalId, this.ExternalId, this);
     ((global::Sungero.ExchangeCore.QueueItemBaseSharedHandlers)this.SharedHandlers).ExternalIdChanged(args);
    }

    protected void BoxChangedHandler()
    {
      var args = new global::Sungero.ExchangeCore.Shared.QueueItemBaseBoxChangedEventArgs(this.State.Properties.Box, this.Box, this);
     ((global::Sungero.ExchangeCore.QueueItemBaseSharedHandlers)this.SharedHandlers).BoxChanged(args);
    }

    protected void RetriesChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.IntegerPropertyChangedEventArgs(this.State.Properties.Retries, this.Retries, this);
     ((global::Sungero.ExchangeCore.QueueItemBaseSharedHandlers)this.SharedHandlers).RetriesChanged(args);
    }

    protected void NoteChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.Note, this.Note, this);
     ((global::Sungero.ExchangeCore.QueueItemBaseSharedHandlers)this.SharedHandlers).NoteChanged(args);
    }

    protected void ProcessingStatusChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.EnumerationPropertyChangedEventArgs(this.State.Properties.ProcessingStatus, this.ProcessingStatus, this);
     ((global::Sungero.ExchangeCore.QueueItemBaseSharedHandlers)this.SharedHandlers).ProcessingStatusChanged(args);
    }

    protected void LastUpdateChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.DateTimePropertyChangedEventArgs(this.State.Properties.LastUpdate, this.LastUpdate, this);
     ((global::Sungero.ExchangeCore.QueueItemBaseSharedHandlers)this.SharedHandlers).LastUpdateChanged(args);
    }

    protected void RootBoxChangedHandler()
    {
      var args = new global::Sungero.ExchangeCore.Shared.QueueItemBaseRootBoxChangedEventArgs(this.State.Properties.RootBox, this.RootBox, this);
     ((global::Sungero.ExchangeCore.QueueItemBaseSharedHandlers)this.SharedHandlers).RootBoxChanged(args);
    }



  protected global::System.String NameValueInputHandler(global::System.String value)
  {
    var args = new global::Sungero.Presentation.StringValueInputEventArgs(this.Name, value, this, this.Info.Properties.Name);
    ((global::Sungero.ExchangeCore.QueueItemBaseClientHandlers)this.Handlers).NameValueInput(args);
    return args.NewValue;
  }

  protected global::System.String ExternalIdValueInputHandler(global::System.String value)
  {
    var args = new global::Sungero.Presentation.StringValueInputEventArgs(this.ExternalId, value, this, this.Info.Properties.ExternalId);
    ((global::Sungero.ExchangeCore.QueueItemBaseClientHandlers)this.Handlers).ExternalIdValueInput(args);
    return args.NewValue;
  }

  protected global::Sungero.ExchangeCore.IBoxBase BoxValueInputHandler(global::Sungero.ExchangeCore.IBoxBase value)
  {
    var args = new global::Sungero.ExchangeCore.Client.QueueItemBaseBoxValueInputEventArgs(this.Box, value, this, this.Info.Properties.Box);
    ((global::Sungero.ExchangeCore.QueueItemBaseClientHandlers)this.Handlers).BoxValueInput(args);
    return args.NewValue;
  }

  protected global::System.Int32? RetriesValueInputHandler(global::System.Int32? value)
  {
    var args = new global::Sungero.Presentation.IntegerValueInputEventArgs(this.Retries, value, this, this.Info.Properties.Retries);
    ((global::Sungero.ExchangeCore.QueueItemBaseClientHandlers)this.Handlers).RetriesValueInput(args);
    return args.NewValue;
  }

  protected global::System.String NoteValueInputHandler(global::System.String value)
  {
    var args = new global::Sungero.Presentation.StringValueInputEventArgs(this.Note, value, this, this.Info.Properties.Note);
    ((global::Sungero.ExchangeCore.QueueItemBaseClientHandlers)this.Handlers).NoteValueInput(args);
    return args.NewValue;
  }

  protected global::Sungero.Core.Enumeration? ProcessingStatusValueInputHandler(global::Sungero.Core.Enumeration? value)
  {
    var args = new global::Sungero.Presentation.EnumerationValueInputEventArgs(this.ProcessingStatus, value, this, this.Info.Properties.ProcessingStatus);
    ((global::Sungero.ExchangeCore.QueueItemBaseClientHandlers)this.Handlers).ProcessingStatusValueInput(args);
    return args.NewValue;
  }

  protected global::System.DateTime? LastUpdateValueInputHandler(global::System.DateTime? value)
  {
    var args = new global::Sungero.Presentation.DateTimeValueInputEventArgs(this.LastUpdate, value, this, this.Info.Properties.LastUpdate);
    ((global::Sungero.ExchangeCore.QueueItemBaseClientHandlers)this.Handlers).LastUpdateValueInput(args);
    return args.NewValue;
  }

  protected global::Sungero.ExchangeCore.IBusinessUnitBox RootBoxValueInputHandler(global::Sungero.ExchangeCore.IBusinessUnitBox value)
  {
    var args = new global::Sungero.ExchangeCore.Client.QueueItemBaseRootBoxValueInputEventArgs(this.RootBox, value, this, this.Info.Properties.RootBox);
    ((global::Sungero.ExchangeCore.QueueItemBaseClientHandlers)this.Handlers).RootBoxValueInput(args);
    return args.NewValue;
  }


  protected global::System.Collections.Generic.IEnumerable<global::Sungero.Core.Enumeration> ProcessingStatusFilteringHandler()
  {
    return ((global::Sungero.ExchangeCore.QueueItemBaseClientHandlers)this.Handlers).ProcessingStatusFiltering(this.ProcessingStatusAllowedItems);
  }




    #endregion

    #region Constructors



              protected virtual void InitBoxNavigationProperty()
              {
                this._Box = new global::Sungero.Domain.Client.NavigationProperty<global::Sungero.ExchangeCore.IBoxBase>("Box", this);
                this._Box.ValueChanged += (sender, e) => { this.BoxChangedHandler(); };
                this.AddProperty(this._Box as global::Sungero.Domain.Client.IProperty);
              }




              protected virtual void InitRootBoxNavigationProperty()
              {
                this._RootBox = new global::Sungero.Domain.Client.NavigationProperty<global::Sungero.ExchangeCore.IBusinessUnitBox>("RootBox", this);
                this._RootBox.ValueChanged += (sender, e) => { this.RootBoxChangedHandler(); };
                this.AddProperty(this._RootBox as global::Sungero.Domain.Client.IProperty);
              }




    public QueueItemBase()
    {
            this._Name = new global::Sungero.Domain.Client.SimpleProperty<global::System.String>("Name", this);
            this._Name.ValueChanged += (sender, e) => { this.NameChangedHandler(); };
            this.AddProperty(this._Name);

            this._ExternalId = new global::Sungero.Domain.Client.SimpleProperty<global::System.String>("ExternalId", this);
            this._ExternalId.ValueChanged += (sender, e) => { this.ExternalIdChangedHandler(); };
            this.AddProperty(this._ExternalId);

            this._Retries = new global::Sungero.Domain.Client.SimpleProperty<global::System.Int32?>("Retries", this);
            this._Retries.ValueChanged += (sender, e) => { this.RetriesChangedHandler(); };
            this.AddProperty(this._Retries);

            this._Note = new global::Sungero.Domain.Client.SimpleProperty<global::System.String>("Note", this);
            this._Note.ValueChanged += (sender, e) => { this.NoteChangedHandler(); };
            this.AddProperty(this._Note);

            this._ProcessingStatus = new global::Sungero.Domain.Client.EnumSimpleProperty<global::Sungero.Core.Enumeration?>("ProcessingStatus", this);
            this._ProcessingStatus.ValueChanged += (sender, e) => { this.ProcessingStatusChangedHandler(); };
            this.AddProperty(this._ProcessingStatus);

            this._LastUpdate = new global::Sungero.Domain.Client.SimpleProperty<global::System.DateTime?>("LastUpdate", this);
            this._LastUpdate.ValueChanged += (sender, e) => { this.LastUpdateChangedHandler(); };
            this.AddProperty(this._LastUpdate);

            this.InitBoxNavigationProperty();

            this.InitRootBoxNavigationProperty();








    }

    #endregion

  }
}

// ==================================================================
// QueueItemBasePresenter.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.ExchangeCore.Client
{
  public class QueueItemBasePresenter<T> :
    global::Sungero.Domain.Client.EntityPresenter<T>
    where T : class, global::Sungero.ExchangeCore.IQueueItemBase
  {
    #region Fields and properties




    #endregion

    #region Methods

    #endregion

    #region Framework events

    protected override void EntityPropertyChangedEventHandler(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
    {
      base.EntityPropertyChangedEventHandler(sender, e);
    }

    #endregion

              protected global::Sungero.Domain.Client.IEntityCollectionPresenter _BoxCollectionPresenter;
              public global::Sungero.Domain.Client.IEntityCollectionPresenter BoxCollectionPresenter
              {
          get { return this._BoxCollectionPresenter; }
        }
              protected global::Sungero.Domain.Client.IEntityCollectionPresenter _RootBoxCollectionPresenter;
              public global::Sungero.Domain.Client.IEntityCollectionPresenter RootBoxCollectionPresenter
              {
          get { return this._RootBoxCollectionPresenter; }
        }



    #region Constructors

    private void Init()
    {
                  this._BoxCollectionPresenter = this.CreateCollectionPresenterForNavigationProperty<global::Sungero.ExchangeCore.IBoxBase>(global::System.Guid.Parse("2aa2fe09-1441-4ed6-b7c0-56926232b2d3"));
              this._BoxCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.ExchangeCore.IBoxBase>(() => this.Entity.Id, typeof(T), "Box");

                  this._RootBoxCollectionPresenter = this.CreateCollectionPresenterForNavigationProperty<global::Sungero.ExchangeCore.IBusinessUnitBox>(global::System.Guid.Parse("86dd7602-3ca0-45fc-b623-52ebb1efc92e"));
              this._RootBoxCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.ExchangeCore.IBusinessUnitBox>(() => this.Entity.Id, typeof(T), "RootBox");


    }

    public QueueItemBasePresenter()
    {
      this.Init();
    }

    #endregion
  }
}

// ==================================================================
// QueueItemBaseCollectionPresenter.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.ExchangeCore.Client
{
  public class QueueItemBaseCollectionPresenter<T> : 
    global::Sungero.Domain.Client.EntityCollectionPresenter<T>
    where T: class, global::Sungero.ExchangeCore.IQueueItemBase
  {
    #region Actions



    #endregion

    #region Methods


    #endregion

    public QueueItemBaseCollectionPresenter(global::System.Linq.IQueryable<T> query, OnLookup onLookup)
      : base(query, onLookup)
    {
    }

    public QueueItemBaseCollectionPresenter(global::System.Linq.IQueryable<T> query)
      : this(query, null) { }

    public QueueItemBaseCollectionPresenter(OnLookup onLookup)
      : this(null, onLookup) { }

    public QueueItemBaseCollectionPresenter()
      : this(null, null) { }
  }
}

// ==================================================================
// QueueItemBaseRepositoryImplementer.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.ExchangeCore.Client
{ 
  public class QueueItemBaseRepositoryImplementer<T> : 
      global::Sungero.Domain.Client.RepositoryImplementer<T>,
      global::Sungero.ExchangeCore.IQueueItemBaseRepositoryImplementer<T>
      where T : global::Sungero.ExchangeCore.IQueueItemBase
    {
       public new global::Sungero.ExchangeCore.IQueueItemBaseAccessRights AccessRights
       {
          get { return (global::Sungero.ExchangeCore.IQueueItemBaseAccessRights)base.AccessRights; }
       }

       public new global::Sungero.ExchangeCore.IQueueItemBaseInfo Info
       {
          get { return (global::Sungero.ExchangeCore.IQueueItemBaseInfo)base.Info; }
       }

       protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
       {
         return new global::Sungero.ExchangeCore.Client.QueueItemBaseTypeAccessRights(typeof(T));
       }
    }
}

// ==================================================================
// QueueItemBaseAccessRights.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.ExchangeCore.Client
{
  public class QueueItemBaseAccessRights : 
    Sungero.CoreEntities.Client.DatabookEntryAccessRights, Sungero.ExchangeCore.IQueueItemBaseAccessRights
  {

    public QueueItemBaseAccessRights(global::Sungero.Domain.Shared.IEntity entity) : base(entity)
    {
    }
  }

  public class QueueItemBaseTypeAccessRights : 
    Sungero.CoreEntities.Client.DatabookEntryTypeAccessRights, Sungero.ExchangeCore.IQueueItemBaseAccessRights
  {

    public QueueItemBaseTypeAccessRights(global::System.Type entityType) : base(entityType)
    {
    }
  }
}
