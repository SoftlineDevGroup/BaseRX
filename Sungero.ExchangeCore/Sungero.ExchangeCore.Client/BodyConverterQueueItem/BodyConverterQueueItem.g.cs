
// ==================================================================
// BodyConverterQueueItem.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.ExchangeCore.Client
{
  public class BodyConverterQueueItem :
    global::Sungero.ExchangeCore.Client.QueueItemBase, global::Sungero.ExchangeCore.IBodyConverterQueueItem
  {
    #region Fields and properties

    public static new readonly global::System.Guid ClassTypeGuid = global::System.Guid.Parse("2d30e2aa-1d0b-45f0-8e4d-00318b3a5cfd");

    public override global::System.Guid TypeGuid
    {
      get { return global::Sungero.ExchangeCore.Client.BodyConverterQueueItem.ClassTypeGuid; }
    }

    public override string TypeName
    {
      get { return "Sungero.ExchangeCore.IBodyConverterQueueItem, Sungero.Domain.Interfaces"; }
    }

      public override string DisplayValue
      {
        get { return this.Name; }
        set { this.Name = value; }
      }

      public override string DisplayPropertyName
      {
        get { return "Name"; }
      }


    public new global::Sungero.ExchangeCore.IBodyConverterQueueItemState State
    {
      get
      {
        return (global::Sungero.ExchangeCore.IBodyConverterQueueItemState)base.State;
      }
    }

    protected override global::Sungero.Domain.Shared.IEntityState CreateState()
    {
      return new global::Sungero.ExchangeCore.Shared.BodyConverterQueueItemState(this);
    }

    public new global::Sungero.ExchangeCore.IBodyConverterQueueItemInfo Info
    {
      get
      {
        return (global::Sungero.ExchangeCore.IBodyConverterQueueItemInfo)base.Info;
      }
    }

    public new global::Sungero.ExchangeCore.IBodyConverterQueueItemAccessRights AccessRights
    {
      get
      {
        return (global::Sungero.ExchangeCore.IBodyConverterQueueItemAccessRights)base.AccessRights;
      }
    }

    protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
    {
      return new global::Sungero.ExchangeCore.Client.BodyConverterQueueItemAccessRights(this);
    }

        protected global::Sungero.Domain.Client.SimpleProperty<global::System.Int32?> _VersionId;

        public virtual global::System.Int32? VersionId
        {
          get { return this._VersionId.Value; }
          set { this._VersionId.Value = value; }
        }
        protected global::Sungero.Domain.Client.EnumSimpleProperty<global::Sungero.Core.Enumeration?> _ExchangeState;

        public virtual global::Sungero.Core.Enumeration? ExchangeState
        {
          get { return this._ExchangeState.Value; }
          set { this._ExchangeState.Value = value; }
        }


        private static global::Sungero.Domain.Shared.EnumerationItems _ProcessingStatusItems = new global::Sungero.Domain.Shared.EnumerationItems(
          global::Sungero.ExchangeCore.Client.QueueItemBase.ProcessingStatusItems,
          typeof(global::Sungero.ExchangeCore.BodyConverterQueueItem.ProcessingStatus),
          typeof(global::Sungero.ExchangeCore.Client.BodyConverterQueueItem),
          "ProcessingStatus");

        public static new global::Sungero.Domain.Shared.EnumerationItems ProcessingStatusItems
        {
          get { return global::Sungero.ExchangeCore.Client.BodyConverterQueueItem._ProcessingStatusItems; }
        }

        public override global::Sungero.Domain.Shared.EnumerationItems ProcessingStatusAllowedItems
        {
          get { return global::Sungero.ExchangeCore.Client.BodyConverterQueueItem.ProcessingStatusItems; }
        }

        private static global::Sungero.Domain.Shared.EnumerationItems _ExchangeStateItems = new global::Sungero.Domain.Shared.EnumerationItems(
          null,
          typeof(global::Sungero.ExchangeCore.BodyConverterQueueItem.ExchangeState),
          typeof(global::Sungero.ExchangeCore.Client.BodyConverterQueueItem),
          "ExchangeState");

        public static global::Sungero.Domain.Shared.EnumerationItems ExchangeStateItems
        {
          get { return global::Sungero.ExchangeCore.Client.BodyConverterQueueItem._ExchangeStateItems; }
        }

        public virtual global::Sungero.Domain.Shared.EnumerationItems ExchangeStateAllowedItems
        {
          get { return global::Sungero.ExchangeCore.Client.BodyConverterQueueItem.ExchangeStateItems; }
        }




              protected global::Sungero.Domain.Client.INavigationProperty<global::Sungero.Docflow.IOfficialDocument> _Document;

              public virtual global::Sungero.Docflow.IOfficialDocument Document
              {
              get
              {
                return this._Document.Value as global::Sungero.Docflow.IOfficialDocument;
              }

              set
              {
                (this._Document as global::Sungero.Domain.Client.IProperty).Value = value;
              }
            }










    #endregion

    #region Methods

    protected override object CreateActionsHandlers()
    {
      return new global::Sungero.ExchangeCore.Client.BodyConverterQueueItemActions(this);
    }

    protected override object CreateCollectionActionsHandlers()
    {
      return new global::Sungero.ExchangeCore.Client.BodyConverterQueueItemCollectionActions();
    }

    protected override object CreateAnyChildEntityActionsHandlers()
    {
      return new global::Sungero.ExchangeCore.Client.BodyConverterQueueItemAnyChildEntityActions();
    }

    protected override object CreateAnyChildEntityCollectionActionsHandlers()
    {
      return new global::Sungero.ExchangeCore.Client.BodyConverterQueueItemAnyChildEntityCollectionActions();
    }


    protected override global::Sungero.Domain.Client.EntityFunctions CreateClientFunctions()
    {
      return new global::Sungero.ExchangeCore.Client.BodyConverterQueueItemFunctions(this);
    }

    protected override global::Sungero.Domain.Shared.EntityFunctions CreateSharedFunctions()
    {
      return new global::Sungero.ExchangeCore.Shared.BodyConverterQueueItemFunctions(this);
    }
    protected override object CreateHandlers() {
      return new global::Sungero.ExchangeCore.BodyConverterQueueItemClientHandlers(this);
    }
    protected override object CreateSharedHandlers() {
      return new global::Sungero.ExchangeCore.BodyConverterQueueItemSharedHandlers(this);
    }

    #endregion

    #region Framework events

    protected void DocumentChangedHandler()
    {
      var args = new global::Sungero.ExchangeCore.Shared.BodyConverterQueueItemDocumentChangedEventArgs(this.State.Properties.Document, this.Document, this);
     ((global::Sungero.ExchangeCore.BodyConverterQueueItemSharedHandlers)this.SharedHandlers).DocumentChanged(args);
    }

    protected void VersionIdChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.IntegerPropertyChangedEventArgs(this.State.Properties.VersionId, this.VersionId, this);
     ((global::Sungero.ExchangeCore.BodyConverterQueueItemSharedHandlers)this.SharedHandlers).VersionIdChanged(args);
    }

    protected void ExchangeStateChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.EnumerationPropertyChangedEventArgs(this.State.Properties.ExchangeState, this.ExchangeState, this);
     ((global::Sungero.ExchangeCore.BodyConverterQueueItemSharedHandlers)this.SharedHandlers).ExchangeStateChanged(args);
    }



  protected global::Sungero.Docflow.IOfficialDocument DocumentValueInputHandler(global::Sungero.Docflow.IOfficialDocument value)
  {
    var args = new global::Sungero.ExchangeCore.Client.BodyConverterQueueItemDocumentValueInputEventArgs(this.Document, value, this, this.Info.Properties.Document);
    ((global::Sungero.ExchangeCore.BodyConverterQueueItemClientHandlers)this.Handlers).DocumentValueInput(args);
    return args.NewValue;
  }

  protected global::System.Int32? VersionIdValueInputHandler(global::System.Int32? value)
  {
    var args = new global::Sungero.Presentation.IntegerValueInputEventArgs(this.VersionId, value, this, this.Info.Properties.VersionId);
    ((global::Sungero.ExchangeCore.BodyConverterQueueItemClientHandlers)this.Handlers).VersionIdValueInput(args);
    return args.NewValue;
  }

  protected global::Sungero.Core.Enumeration? ExchangeStateValueInputHandler(global::Sungero.Core.Enumeration? value)
  {
    var args = new global::Sungero.Presentation.EnumerationValueInputEventArgs(this.ExchangeState, value, this, this.Info.Properties.ExchangeState);
    ((global::Sungero.ExchangeCore.BodyConverterQueueItemClientHandlers)this.Handlers).ExchangeStateValueInput(args);
    return args.NewValue;
  }


  protected global::System.Collections.Generic.IEnumerable<global::Sungero.Core.Enumeration> ExchangeStateFilteringHandler()
  {
    return ((global::Sungero.ExchangeCore.BodyConverterQueueItemClientHandlers)this.Handlers).ExchangeStateFiltering(this.ExchangeStateAllowedItems);
  }


    #endregion

    #region Constructors





              protected virtual void InitDocumentNavigationProperty()
              {
                this._Document = new global::Sungero.Domain.Client.NavigationProperty<global::Sungero.Docflow.IOfficialDocument>("Document", this);
                this._Document.ValueChanged += (sender, e) => { this.DocumentChangedHandler(); };
                this.AddProperty(this._Document as global::Sungero.Domain.Client.IProperty);
              }




    public BodyConverterQueueItem()
    {
            this._VersionId = new global::Sungero.Domain.Client.SimpleProperty<global::System.Int32?>("VersionId", this);
            this._VersionId.ValueChanged += (sender, e) => { this.VersionIdChangedHandler(); };
            this.AddProperty(this._VersionId);

            this._ExchangeState = new global::Sungero.Domain.Client.EnumSimpleProperty<global::Sungero.Core.Enumeration?>("ExchangeState", this);
            this._ExchangeState.ValueChanged += (sender, e) => { this.ExchangeStateChangedHandler(); };
            this.AddProperty(this._ExchangeState);

            this.InitDocumentNavigationProperty();








    }

    #endregion

  }
}

// ==================================================================
// BodyConverterQueueItemPresenter.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.ExchangeCore.Client
{
  public class BodyConverterQueueItemPresenter<T> :
    global::Sungero.ExchangeCore.Client.QueueItemBasePresenter<T>
    where T : class, global::Sungero.ExchangeCore.IBodyConverterQueueItem
  {
    #region Fields and properties




    #endregion

    #region Methods

    #endregion

    #region Framework events

    protected override void EntityPropertyChangedEventHandler(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
    {
      base.EntityPropertyChangedEventHandler(sender, e);
    }

    #endregion

              protected global::Sungero.Domain.Client.IEntityCollectionPresenter _DocumentCollectionPresenter;
              public global::Sungero.Domain.Client.IEntityCollectionPresenter DocumentCollectionPresenter
              {
          get { return this._DocumentCollectionPresenter; }
        }



    #region Constructors

    private void Init()
    {
              this._BoxCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.ExchangeCore.IBoxBase>(() => this.Entity.Id, typeof(T), "Box");

              this._RootBoxCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.ExchangeCore.IBusinessUnitBox>(() => this.Entity.Id, typeof(T), "RootBox");

                  this._DocumentCollectionPresenter = this.CreateCollectionPresenterForNavigationProperty<global::Sungero.Docflow.IOfficialDocument>(global::System.Guid.Parse("0a8327d9-77ba-4682-8a01-9ed836c610cf"));
              this._DocumentCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Docflow.IOfficialDocument>(() => this.Entity.Id, typeof(T), "Document");


    }

    public BodyConverterQueueItemPresenter()
    {
      this.Init();
    }

    #endregion
  }
}

// ==================================================================
// BodyConverterQueueItemCollectionPresenter.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.ExchangeCore.Client
{
  public class BodyConverterQueueItemCollectionPresenter<T> : 
    global::Sungero.ExchangeCore.Client.QueueItemBaseCollectionPresenter<T>
    where T: class, global::Sungero.ExchangeCore.IBodyConverterQueueItem
  {
    #region Actions



    #endregion

    #region Methods


    #endregion

    public BodyConverterQueueItemCollectionPresenter(global::System.Linq.IQueryable<T> query, OnLookup onLookup)
      : base(query, onLookup)
    {
    }

    public BodyConverterQueueItemCollectionPresenter(global::System.Linq.IQueryable<T> query)
      : this(query, null) { }

    public BodyConverterQueueItemCollectionPresenter(OnLookup onLookup)
      : this(null, onLookup) { }

    public BodyConverterQueueItemCollectionPresenter()
      : this(null, null) { }
  }
}

// ==================================================================
// BodyConverterQueueItemRepositoryImplementer.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.ExchangeCore.Client
{ 
  public class BodyConverterQueueItemRepositoryImplementer<T> : 
      global::Sungero.ExchangeCore.Client.QueueItemBaseRepositoryImplementer<T>,
      global::Sungero.ExchangeCore.IBodyConverterQueueItemRepositoryImplementer<T>
      where T : global::Sungero.ExchangeCore.IBodyConverterQueueItem
    {
       public new global::Sungero.ExchangeCore.IBodyConverterQueueItemAccessRights AccessRights
       {
          get { return (global::Sungero.ExchangeCore.IBodyConverterQueueItemAccessRights)base.AccessRights; }
       }

       public new global::Sungero.ExchangeCore.IBodyConverterQueueItemInfo Info
       {
          get { return (global::Sungero.ExchangeCore.IBodyConverterQueueItemInfo)base.Info; }
       }

       protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
       {
         return new global::Sungero.ExchangeCore.Client.BodyConverterQueueItemTypeAccessRights(typeof(T));
       }
    }
}

// ==================================================================
// BodyConverterQueueItemAccessRights.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.ExchangeCore.Client
{
  public class BodyConverterQueueItemAccessRights : 
    Sungero.ExchangeCore.Client.QueueItemBaseAccessRights, Sungero.ExchangeCore.IBodyConverterQueueItemAccessRights
  {

    public BodyConverterQueueItemAccessRights(global::Sungero.Domain.Shared.IEntity entity) : base(entity)
    {
    }
  }

  public class BodyConverterQueueItemTypeAccessRights : 
    Sungero.ExchangeCore.Client.QueueItemBaseTypeAccessRights, Sungero.ExchangeCore.IBodyConverterQueueItemAccessRights
  {

    public BodyConverterQueueItemTypeAccessRights(global::System.Type entityType) : base(entityType)
    {
    }
  }
}
