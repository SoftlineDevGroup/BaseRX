
// ==================================================================
// IncomingInvitationTaskState.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.ExchangeCore.Shared
{
  public class IncomingInvitationTaskState : 
    global::Sungero.Workflow.Shared.TaskState, global::Sungero.ExchangeCore.IIncomingInvitationTaskState
  {
    public IncomingInvitationTaskState(global::Sungero.ExchangeCore.IIncomingInvitationTask entity) : base(entity) { }

    public new global::Sungero.ExchangeCore.IIncomingInvitationTaskPropertyStates Properties
    {
      get { return (global::Sungero.ExchangeCore.IIncomingInvitationTaskPropertyStates)base.Properties; }
    }

    protected override global::Sungero.Domain.Shared.IEntityPropertyStates CreatePropertyStates(global::Sungero.Domain.Shared.IEntity entity)
    {
      return new global::Sungero.ExchangeCore.Shared.IncomingInvitationTaskPropertyStates(entity);
    }


    public new global::Sungero.ExchangeCore.IIncomingInvitationTaskControlStates Controls
    {
      get { return (global::Sungero.ExchangeCore.IIncomingInvitationTaskControlStates)base.Controls; }
    }

    protected override global::Sungero.Domain.Shared.IEntityControlStates CreateControlStates(global::Sungero.Domain.Shared.IEntity entity)
    {
      return new global::Sungero.ExchangeCore.Shared.IncomingInvitationTaskControlStates(entity);
    }

    public new global::Sungero.ExchangeCore.IIncomingInvitationTaskPageStates Pages
    {
      get { return (global::Sungero.ExchangeCore.IIncomingInvitationTaskPageStates)base.Pages; }
    }

    protected override global::Sungero.Domain.Shared.IEntityPageStates CreatePageStates(global::Sungero.Domain.Shared.IEntity entity)
    {
      return new global::Sungero.ExchangeCore.Shared.IncomingInvitationTaskPageStates(entity);
    }

    #region Workflow attachments extention

    public global::Sungero.ExchangeCore.IIncomingInvitationTaskAttachmentStates Attachments { get { return (global::Sungero.ExchangeCore.IIncomingInvitationTaskAttachmentStates)this.AttachmentStates; }}

      protected override global::Sungero.Workflow.Interfaces.IWorkflowEntityAttachmentStates CreateAttachmentStates(global::Sungero.Workflow.Interfaces.IWorkflowEntity entity) 
      {
        return new IncomingInvitationTaskAttachmentStates(entity);
      }

    #endregion
  }

  #region Workflow attachments extention

    public class IncomingInvitationTaskAttachmentStates :
      global::Sungero.Workflow.Shared.TaskAttachmentStates, global::Sungero.ExchangeCore.IIncomingInvitationTaskAttachmentStates
    {

      protected internal IncomingInvitationTaskAttachmentStates(global::Sungero.Workflow.Interfaces.IWorkflowEntity entity) : base(entity) { }
    }

  #endregion

  public class IncomingInvitationTaskControlStates : 
    global::Sungero.Workflow.Shared.TaskControlStates, global::Sungero.ExchangeCore.IIncomingInvitationTaskControlStates
  {

    protected internal IncomingInvitationTaskControlStates(global::Sungero.Domain.Shared.IEntity entity) : base(entity) { }
  }
  public class IncomingInvitationTaskPageStates : 
    global::Sungero.Workflow.Shared.TaskPageStates, global::Sungero.ExchangeCore.IIncomingInvitationTaskPageStates
  {

    protected internal IncomingInvitationTaskPageStates(global::Sungero.Domain.Shared.IEntity entity) : base(entity) { }
  }

  public class IncomingInvitationTaskPropertyStates : 
    global::Sungero.Workflow.Shared.TaskPropertyStates, global::Sungero.ExchangeCore.IIncomingInvitationTaskPropertyStates
  {
            public global::Sungero.Domain.Shared.IPropertyState<global::Sungero.ExchangeCore.IBusinessUnitBox> Box 
            {
              get { return this.InternalBox; }
            }

            protected virtual global::Sungero.Domain.Shared.IPropertyState<global::Sungero.ExchangeCore.IBusinessUnitBox> InternalBox
            {
              get { return this.GetPropertyState<global::Sungero.ExchangeCore.IBusinessUnitBox>("Box"); }
            }
            public global::Sungero.Domain.Shared.IPropertyState<global::Sungero.Parties.ICounterparty> Counterparty 
            {
              get { return this.InternalCounterparty; }
            }

            protected virtual global::Sungero.Domain.Shared.IPropertyState<global::Sungero.Parties.ICounterparty> InternalCounterparty
            {
              get { return this.GetPropertyState<global::Sungero.Parties.ICounterparty>("Counterparty"); }
            }
            public global::Sungero.Domain.Shared.IPropertyState<global::Sungero.Company.IEmployee> Assignee 
            {
              get { return this.InternalAssignee; }
            }

            protected virtual global::Sungero.Domain.Shared.IPropertyState<global::Sungero.Company.IEmployee> InternalAssignee
            {
              get { return this.GetPropertyState<global::Sungero.Company.IEmployee>("Assignee"); }
            }
            public new global::Sungero.ExchangeCore.IIncomingInvitationTaskObserversCollectionPropertyState<global::Sungero.ExchangeCore.IIncomingInvitationTaskObservers> Observers
            {
              get { return (global::Sungero.ExchangeCore.IIncomingInvitationTaskObserversCollectionPropertyState<global::Sungero.ExchangeCore.IIncomingInvitationTaskObservers>)base.Observers; }
            }

            protected override global::Sungero.Workflow.ITaskObserversCollectionPropertyState<global::Sungero.Workflow.ITaskObservers> CreateObserversState(global::Sungero.Domain.Shared.IEntity entity, string propertyName)
            {
              return new global::Sungero.ExchangeCore.Shared.IncomingInvitationTaskObserversCollectionPropertyState<global::Sungero.ExchangeCore.IIncomingInvitationTaskObservers>(entity, propertyName);
            }
            public global::Sungero.Domain.Shared.IPropertyState<global::System.String> OrganizationId 
            {
              get { return this.GetPropertyState<global::System.String>("OrganizationId"); }
            }


    protected internal IncomingInvitationTaskPropertyStates(global::Sungero.Domain.Shared.IEntity entity) : base(entity) { }
  }

}

// ==================================================================
// IncomingInvitationTaskEventArgs.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.ExchangeCore.Shared
{  
    public class IncomingInvitationTaskBoxChangedEventArgs : global::Sungero.Domain.Shared.PropertyChangedEventArgs<global::Sungero.ExchangeCore.IBusinessUnitBox>
    {
      public IncomingInvitationTaskBoxChangedEventArgs(global::Sungero.Domain.Shared.IPropertyState<global::Sungero.ExchangeCore.IBusinessUnitBox> state, global::Sungero.ExchangeCore.IBusinessUnitBox newValue, global::Sungero.Domain.Shared.IEntity entity): base(state, newValue, entity) { }
    }

    public class IncomingInvitationTaskCounterpartyChangedEventArgs : global::Sungero.Domain.Shared.PropertyChangedEventArgs<global::Sungero.Parties.ICounterparty>
    {
      public IncomingInvitationTaskCounterpartyChangedEventArgs(global::Sungero.Domain.Shared.IPropertyState<global::Sungero.Parties.ICounterparty> state, global::Sungero.Parties.ICounterparty newValue, global::Sungero.Domain.Shared.IEntity entity): base(state, newValue, entity) { }
    }

    public class IncomingInvitationTaskAssigneeChangedEventArgs : global::Sungero.Domain.Shared.PropertyChangedEventArgs<global::Sungero.Company.IEmployee>
    {
      public IncomingInvitationTaskAssigneeChangedEventArgs(global::Sungero.Domain.Shared.IPropertyState<global::Sungero.Company.IEmployee> state, global::Sungero.Company.IEmployee newValue, global::Sungero.Domain.Shared.IEntity entity): base(state, newValue, entity) { }
    }



}

// ==================================================================
// IncomingInvitationTaskInfo.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.ExchangeCore.Shared
{
  public class IncomingInvitationTaskInfo : 
    global::Sungero.Workflow.Shared.TaskInfo, global::Sungero.ExchangeCore.IIncomingInvitationTaskInfo
  {
    public IncomingInvitationTaskInfo(global::System.Type entityType) : base(entityType) { }

    public new global::Sungero.ExchangeCore.IIncomingInvitationTaskPropertiesInfo Properties
    {
      get { return (global::Sungero.ExchangeCore.IIncomingInvitationTaskPropertiesInfo)base.Properties; }
    }

    protected override global::Sungero.Domain.Shared.IEntityPropertiesInfo CreateEntityPropertiesInfo(global::System.Type entityType)
    {
      return new global::Sungero.ExchangeCore.Shared.IncomingInvitationTaskPropertiesInfo(entityType);
    }

  }

  public class IncomingInvitationTaskPropertiesInfo : 
    global::Sungero.Workflow.Shared.TaskPropertiesInfo, global::Sungero.ExchangeCore.IIncomingInvitationTaskPropertiesInfo
  {
        public global::Sungero.Domain.Shared.INavigationPropertyInfo<global::Sungero.ExchangeCore.IBusinessUnitBoxInfo, global::Sungero.ExchangeCore.IBusinessUnitBox> Box 
        {
          get
          {
             var propertyMetadata = this.GetPropertyMetadata<global::Sungero.Metadata.NavigationPropertyMetadata>("Box");
             return new global::Sungero.Domain.Shared.NavigationPropertyInfo<global::Sungero.ExchangeCore.IBusinessUnitBoxInfo, global::Sungero.ExchangeCore.IBusinessUnitBox>(propertyMetadata);
          }
        }
        public global::Sungero.Domain.Shared.INavigationPropertyInfo<global::Sungero.Parties.ICounterpartyInfo, global::Sungero.Parties.ICounterparty> Counterparty 
        {
          get
          {
             var propertyMetadata = this.GetPropertyMetadata<global::Sungero.Metadata.NavigationPropertyMetadata>("Counterparty");
             return new global::Sungero.Domain.Shared.NavigationPropertyInfo<global::Sungero.Parties.ICounterpartyInfo, global::Sungero.Parties.ICounterparty>(propertyMetadata);
          }
        }
        public global::Sungero.Domain.Shared.INavigationPropertyInfo<global::Sungero.Company.IEmployeeInfo, global::Sungero.Company.IEmployee> Assignee 
        {
          get
          {
             var propertyMetadata = this.GetPropertyMetadata<global::Sungero.Metadata.NavigationPropertyMetadata>("Assignee");
             return new global::Sungero.Domain.Shared.NavigationPropertyInfo<global::Sungero.Company.IEmployeeInfo, global::Sungero.Company.IEmployee>(propertyMetadata);
          }
        }
        public new global::Sungero.Domain.Shared.ICollectionPropertyInfo<global::Sungero.ExchangeCore.IIncomingInvitationTaskObserversPropertiesInfo> Observers
        {
          get
          {
             var propertyMetadata = this.GetPropertyMetadata<global::Sungero.Metadata.CollectionPropertyMetadata>("Observers");
             return new global::Sungero.Domain.Shared.CollectionPropertyInfo<global::Sungero.ExchangeCore.IIncomingInvitationTaskObserversPropertiesInfo>(propertyMetadata);
          }
        }
        public global::Sungero.Domain.Shared.IStringPropertyInfo OrganizationId 
        {
          get
          {
             var propertyMetadata = this.GetPropertyMetadata<global::Sungero.Metadata.StringPropertyMetadata>("OrganizationId");
             return new global::Sungero.Domain.Shared.StringPropertyInfo(propertyMetadata);
          }
        }


    protected internal IncomingInvitationTaskPropertiesInfo(global::System.Type entityType) : base(entityType) { }
  }

}

// ==================================================================
// IncomingInvitationTaskHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.ExchangeCore
{
  public partial class IncomingInvitationTaskSharedHandlers : global::Sungero.Workflow.TaskSharedHandlers
  {
    private global::Sungero.ExchangeCore.IIncomingInvitationTask _obj
    {
      get { return (global::Sungero.ExchangeCore.IIncomingInvitationTask)this.Entity; }
    }
    public virtual void BoxChanged(global::Sungero.ExchangeCore.Shared.IncomingInvitationTaskBoxChangedEventArgs e) { }


    public virtual void CounterpartyChanged(global::Sungero.ExchangeCore.Shared.IncomingInvitationTaskCounterpartyChangedEventArgs e) { }


    public virtual void AssigneeChanged(global::Sungero.ExchangeCore.Shared.IncomingInvitationTaskAssigneeChangedEventArgs e) { }



    public virtual void OrganizationIdChanged(global::Sungero.Domain.Shared.StringPropertyChangedEventArgs e) { }



    #region Workflow attachments extention


    #endregion

    public IncomingInvitationTaskSharedHandlers(global::Sungero.ExchangeCore.IIncomingInvitationTask entity) : base(entity)
    {
    }
  }

}

// ==================================================================
// IncomingInvitationTaskResources.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.ExchangeCore.Shared.IncomingInvitationTask
{
  /// <summary>
  /// Represents IncomingInvitationTask resources.
  /// </summary>
  public class IncomingInvitationTaskResources : global::Sungero.Workflow.Shared.Task.TaskResources, global::Sungero.ExchangeCore.IncomingInvitationTask.IIncomingInvitationTaskResources
  {
    public virtual global::CommonLibrary.LocalizedString TaskSubject
    {
      get
      {
        return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.ExchangeCore.IIncomingInvitationTask) , "TaskSubject");
      }
    }

    public virtual global::CommonLibrary.LocalizedString TaskSubjectFormat(params object[] args)
    {
      return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.ExchangeCore.IIncomingInvitationTask), "TaskSubject", false, args);
    }
    public virtual global::CommonLibrary.LocalizedString TaskActiveText
    {
      get
      {
        return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.ExchangeCore.IIncomingInvitationTask) , "TaskActiveText");
      }
    }

    public virtual global::CommonLibrary.LocalizedString TaskActiveTextFormat(params object[] args)
    {
      return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.ExchangeCore.IIncomingInvitationTask), "TaskActiveText", false, args);
    }
    public virtual global::CommonLibrary.LocalizedString AssignmentSubject
    {
      get
      {
        return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.ExchangeCore.IIncomingInvitationTask) , "AssignmentSubject");
      }
    }

    public virtual global::CommonLibrary.LocalizedString AssignmentSubjectFormat(params object[] args)
    {
      return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.ExchangeCore.IIncomingInvitationTask), "AssignmentSubject", false, args);
    }
    public virtual global::CommonLibrary.LocalizedString AssignmentComment
    {
      get
      {
        return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.ExchangeCore.IIncomingInvitationTask) , "AssignmentComment");
      }
    }

    public virtual global::CommonLibrary.LocalizedString AssignmentCommentFormat(params object[] args)
    {
      return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.ExchangeCore.IIncomingInvitationTask), "AssignmentComment", false, args);
    }
    public virtual global::CommonLibrary.LocalizedString CounterpartyBox
    {
      get
      {
        return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.ExchangeCore.IIncomingInvitationTask) , "CounterpartyBox");
      }
    }

    public virtual global::CommonLibrary.LocalizedString CounterpartyBoxFormat(params object[] args)
    {
      return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.ExchangeCore.IIncomingInvitationTask), "CounterpartyBox", false, args);
    }

  }
}

// ==================================================================
// IncomingInvitationTaskSharedFunctions.g.cs
// ==================================================================

namespace Sungero.ExchangeCore.Shared
{
  public partial class IncomingInvitationTaskFunctions : global::Sungero.Workflow.Shared.TaskFunctions
  {
    private global::Sungero.ExchangeCore.IIncomingInvitationTask _obj
    {
      get { return (global::Sungero.ExchangeCore.IIncomingInvitationTask)this.Entity; }
    }

    public IncomingInvitationTaskFunctions(global::Sungero.ExchangeCore.IIncomingInvitationTask entity) : base(entity) { }
  }
}

// ==================================================================
// IncomingInvitationTaskFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.ExchangeCore.Functions
{
  internal static class IncomingInvitationTask
  {
  }
}

// ==================================================================
// IncomingInvitationTaskFilterState.g.cs
// ==================================================================

namespace Sungero.ExchangeCore.Shared.IncomingInvitationTask
{

  public class IncomingInvitationTaskFilterInfo : global::Sungero.Workflow.Shared.Task.TaskFilterInfo,
    global::Sungero.ExchangeCore.IIncomingInvitationTaskFilterInfo
  {
  }

  public class IncomingInvitationTaskFilterState : global::Sungero.Workflow.Shared.Task.TaskFilterState,
    global::Sungero.ExchangeCore.IIncomingInvitationTaskFilterState
  {



    public new Sungero.ExchangeCore.IIncomingInvitationTaskFilterInfo Info
    {
      get
      {
        return (Sungero.ExchangeCore.IIncomingInvitationTaskFilterInfo) base.Info;
      }
    }
    protected override global::Sungero.Domain.Shared.IFilterInfo CreateFilterInfo()
    {
      return new Sungero.ExchangeCore.Shared.IncomingInvitationTask.IncomingInvitationTaskFilterInfo();
    }

  }
}

// ==================================================================
// IncomingInvitationTaskSharedPublicFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.ExchangeCore.Shared
{
  public class IncomingInvitationTaskSharedPublicFunctions : global::Sungero.ExchangeCore.Shared.IIncomingInvitationTaskSharedPublicFunctions
  {
  }
}

// ==================================================================
// IncomingInvitationTaskAttachmentGroups.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.ExchangeCore.Shared
{
}

// ==================================================================
// IncomingInvitationTaskExtendedSchemeVersions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.ExchangeCore.IncomingInvitationTask
{

    /// <summary>
    /// Список версий схемы.
    /// </summary>
    public static class LayerSchemeVersions
    {
      public static readonly global::Sungero.Workflow.Shared.ExtendedSchemeVersion V1 =
        new global::Sungero.Workflow.Shared.ExtendedSchemeVersion(1, global::System.Guid.Parse("0745199f-eaac-4875-8563-40ed1e5ce317"));
}

    public static class TaskExtensions
    {
      /// <summary>
      /// Получить версию схемы запущенной задачи.
      /// </summary>
      /// <param name="task">Задача.</param>
      /// <returns>Версия схемы запущенной задачи.</returns>
      public static global::Sungero.Workflow.Shared.ExtendedSchemeVersion GetStartedSchemeVersion(this global::Sungero.Workflow.ITask task)
      {
        return global::Sungero.Workflow.Shared.OverriddenTaskHelper.FindLayerSchemeVersionForTask(task,
          global::System.Guid.Parse("1e5b11de-bd28-4dc2-a03c-74b8db9ac1c4"));
      }
    }

}
