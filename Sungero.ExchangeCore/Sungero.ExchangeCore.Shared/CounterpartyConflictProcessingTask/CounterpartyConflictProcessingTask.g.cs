
// ==================================================================
// CounterpartyConflictProcessingTaskState.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.ExchangeCore.Shared
{
  public class CounterpartyConflictProcessingTaskState : 
    global::Sungero.Workflow.Shared.TaskState, global::Sungero.ExchangeCore.ICounterpartyConflictProcessingTaskState
  {
    public CounterpartyConflictProcessingTaskState(global::Sungero.ExchangeCore.ICounterpartyConflictProcessingTask entity) : base(entity) { }

    public new global::Sungero.ExchangeCore.ICounterpartyConflictProcessingTaskPropertyStates Properties
    {
      get { return (global::Sungero.ExchangeCore.ICounterpartyConflictProcessingTaskPropertyStates)base.Properties; }
    }

    protected override global::Sungero.Domain.Shared.IEntityPropertyStates CreatePropertyStates(global::Sungero.Domain.Shared.IEntity entity)
    {
      return new global::Sungero.ExchangeCore.Shared.CounterpartyConflictProcessingTaskPropertyStates(entity);
    }


    public new global::Sungero.ExchangeCore.ICounterpartyConflictProcessingTaskControlStates Controls
    {
      get { return (global::Sungero.ExchangeCore.ICounterpartyConflictProcessingTaskControlStates)base.Controls; }
    }

    protected override global::Sungero.Domain.Shared.IEntityControlStates CreateControlStates(global::Sungero.Domain.Shared.IEntity entity)
    {
      return new global::Sungero.ExchangeCore.Shared.CounterpartyConflictProcessingTaskControlStates(entity);
    }

    public new global::Sungero.ExchangeCore.ICounterpartyConflictProcessingTaskPageStates Pages
    {
      get { return (global::Sungero.ExchangeCore.ICounterpartyConflictProcessingTaskPageStates)base.Pages; }
    }

    protected override global::Sungero.Domain.Shared.IEntityPageStates CreatePageStates(global::Sungero.Domain.Shared.IEntity entity)
    {
      return new global::Sungero.ExchangeCore.Shared.CounterpartyConflictProcessingTaskPageStates(entity);
    }

    #region Workflow attachments extention

    public global::Sungero.ExchangeCore.ICounterpartyConflictProcessingTaskAttachmentStates Attachments { get { return (global::Sungero.ExchangeCore.ICounterpartyConflictProcessingTaskAttachmentStates)this.AttachmentStates; }}

      protected override global::Sungero.Workflow.Interfaces.IWorkflowEntityAttachmentStates CreateAttachmentStates(global::Sungero.Workflow.Interfaces.IWorkflowEntity entity) 
      {
        return new CounterpartyConflictProcessingTaskAttachmentStates(entity);
      }

    #endregion
  }

  #region Workflow attachments extention

    public class CounterpartyConflictProcessingTaskAttachmentStates :
      global::Sungero.Workflow.Shared.TaskAttachmentStates, global::Sungero.ExchangeCore.ICounterpartyConflictProcessingTaskAttachmentStates
    {

      protected internal CounterpartyConflictProcessingTaskAttachmentStates(global::Sungero.Workflow.Interfaces.IWorkflowEntity entity) : base(entity) { }
    }

  #endregion

  public class CounterpartyConflictProcessingTaskControlStates : 
    global::Sungero.Workflow.Shared.TaskControlStates, global::Sungero.ExchangeCore.ICounterpartyConflictProcessingTaskControlStates
  {

    protected internal CounterpartyConflictProcessingTaskControlStates(global::Sungero.Domain.Shared.IEntity entity) : base(entity) { }
  }
  public class CounterpartyConflictProcessingTaskPageStates : 
    global::Sungero.Workflow.Shared.TaskPageStates, global::Sungero.ExchangeCore.ICounterpartyConflictProcessingTaskPageStates
  {

    protected internal CounterpartyConflictProcessingTaskPageStates(global::Sungero.Domain.Shared.IEntity entity) : base(entity) { }
  }

  public class CounterpartyConflictProcessingTaskPropertyStates : 
    global::Sungero.Workflow.Shared.TaskPropertyStates, global::Sungero.ExchangeCore.ICounterpartyConflictProcessingTaskPropertyStates
  {
            public global::Sungero.Domain.Shared.IPropertyState<global::Sungero.Company.IEmployee> Assignee 
            {
              get { return this.InternalAssignee; }
            }

            protected virtual global::Sungero.Domain.Shared.IPropertyState<global::Sungero.Company.IEmployee> InternalAssignee
            {
              get { return this.GetPropertyState<global::Sungero.Company.IEmployee>("Assignee"); }
            }
            public new global::Sungero.ExchangeCore.ICounterpartyConflictProcessingTaskObserversCollectionPropertyState<global::Sungero.ExchangeCore.ICounterpartyConflictProcessingTaskObservers> Observers
            {
              get { return (global::Sungero.ExchangeCore.ICounterpartyConflictProcessingTaskObserversCollectionPropertyState<global::Sungero.ExchangeCore.ICounterpartyConflictProcessingTaskObservers>)base.Observers; }
            }

            protected override global::Sungero.Workflow.ITaskObserversCollectionPropertyState<global::Sungero.Workflow.ITaskObservers> CreateObserversState(global::Sungero.Domain.Shared.IEntity entity, string propertyName)
            {
              return new global::Sungero.ExchangeCore.Shared.CounterpartyConflictProcessingTaskObserversCollectionPropertyState<global::Sungero.ExchangeCore.ICounterpartyConflictProcessingTaskObservers>(entity, propertyName);
            }


    protected internal CounterpartyConflictProcessingTaskPropertyStates(global::Sungero.Domain.Shared.IEntity entity) : base(entity) { }
  }

}

// ==================================================================
// CounterpartyConflictProcessingTaskEventArgs.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.ExchangeCore.Shared
{  
    public class CounterpartyConflictProcessingTaskAssigneeChangedEventArgs : global::Sungero.Domain.Shared.PropertyChangedEventArgs<global::Sungero.Company.IEmployee>
    {
      public CounterpartyConflictProcessingTaskAssigneeChangedEventArgs(global::Sungero.Domain.Shared.IPropertyState<global::Sungero.Company.IEmployee> state, global::Sungero.Company.IEmployee newValue, global::Sungero.Domain.Shared.IEntity entity): base(state, newValue, entity) { }
    }


}

// ==================================================================
// CounterpartyConflictProcessingTaskInfo.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.ExchangeCore.Shared
{
  public class CounterpartyConflictProcessingTaskInfo : 
    global::Sungero.Workflow.Shared.TaskInfo, global::Sungero.ExchangeCore.ICounterpartyConflictProcessingTaskInfo
  {
    public CounterpartyConflictProcessingTaskInfo(global::System.Type entityType) : base(entityType) { }

    public new global::Sungero.ExchangeCore.ICounterpartyConflictProcessingTaskPropertiesInfo Properties
    {
      get { return (global::Sungero.ExchangeCore.ICounterpartyConflictProcessingTaskPropertiesInfo)base.Properties; }
    }

    protected override global::Sungero.Domain.Shared.IEntityPropertiesInfo CreateEntityPropertiesInfo(global::System.Type entityType)
    {
      return new global::Sungero.ExchangeCore.Shared.CounterpartyConflictProcessingTaskPropertiesInfo(entityType);
    }

  }

  public class CounterpartyConflictProcessingTaskPropertiesInfo : 
    global::Sungero.Workflow.Shared.TaskPropertiesInfo, global::Sungero.ExchangeCore.ICounterpartyConflictProcessingTaskPropertiesInfo
  {
        public global::Sungero.Domain.Shared.INavigationPropertyInfo<global::Sungero.Company.IEmployeeInfo, global::Sungero.Company.IEmployee> Assignee 
        {
          get
          {
             var propertyMetadata = this.GetPropertyMetadata<global::Sungero.Metadata.NavigationPropertyMetadata>("Assignee");
             return new global::Sungero.Domain.Shared.NavigationPropertyInfo<global::Sungero.Company.IEmployeeInfo, global::Sungero.Company.IEmployee>(propertyMetadata);
          }
        }
        public new global::Sungero.Domain.Shared.ICollectionPropertyInfo<global::Sungero.ExchangeCore.ICounterpartyConflictProcessingTaskObserversPropertiesInfo> Observers
        {
          get
          {
             var propertyMetadata = this.GetPropertyMetadata<global::Sungero.Metadata.CollectionPropertyMetadata>("Observers");
             return new global::Sungero.Domain.Shared.CollectionPropertyInfo<global::Sungero.ExchangeCore.ICounterpartyConflictProcessingTaskObserversPropertiesInfo>(propertyMetadata);
          }
        }


    protected internal CounterpartyConflictProcessingTaskPropertiesInfo(global::System.Type entityType) : base(entityType) { }
  }

}

// ==================================================================
// CounterpartyConflictProcessingTaskHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.ExchangeCore
{
  public partial class CounterpartyConflictProcessingTaskSharedHandlers : global::Sungero.Workflow.TaskSharedHandlers
  {
    private global::Sungero.ExchangeCore.ICounterpartyConflictProcessingTask _obj
    {
      get { return (global::Sungero.ExchangeCore.ICounterpartyConflictProcessingTask)this.Entity; }
    }
    public virtual void AssigneeChanged(global::Sungero.ExchangeCore.Shared.CounterpartyConflictProcessingTaskAssigneeChangedEventArgs e) { }




    #region Workflow attachments extention


    #endregion

    public CounterpartyConflictProcessingTaskSharedHandlers(global::Sungero.ExchangeCore.ICounterpartyConflictProcessingTask entity) : base(entity)
    {
    }
  }

}

// ==================================================================
// CounterpartyConflictProcessingTaskResources.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.ExchangeCore.Shared.CounterpartyConflictProcessingTask
{
  /// <summary>
  /// Represents CounterpartyConflictProcessingTask resources.
  /// </summary>
  public class CounterpartyConflictProcessingTaskResources : global::Sungero.Workflow.Shared.Task.TaskResources, global::Sungero.ExchangeCore.CounterpartyConflictProcessingTask.ICounterpartyConflictProcessingTaskResources
  {
    public virtual global::CommonLibrary.LocalizedString ConflictTaskSubject
    {
      get
      {
        return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.ExchangeCore.ICounterpartyConflictProcessingTask) , "ConflictTaskSubject");
      }
    }

    public virtual global::CommonLibrary.LocalizedString ConflictTaskSubjectFormat(params object[] args)
    {
      return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.ExchangeCore.ICounterpartyConflictProcessingTask), "ConflictTaskSubject", false, args);
    }
    public virtual global::CommonLibrary.LocalizedString ConflictTaskSingle
    {
      get
      {
        return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.ExchangeCore.ICounterpartyConflictProcessingTask) , "ConflictTaskSingle");
      }
    }

    public virtual global::CommonLibrary.LocalizedString ConflictTaskSingleFormat(params object[] args)
    {
      return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.ExchangeCore.ICounterpartyConflictProcessingTask), "ConflictTaskSingle", false, args);
    }
    public virtual global::CommonLibrary.LocalizedString ConflictTaskSingleOgrn
    {
      get
      {
        return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.ExchangeCore.ICounterpartyConflictProcessingTask) , "ConflictTaskSingleOgrn");
      }
    }

    public virtual global::CommonLibrary.LocalizedString ConflictTaskSingleOgrnFormat(params object[] args)
    {
      return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.ExchangeCore.ICounterpartyConflictProcessingTask), "ConflictTaskSingleOgrn", false, args);
    }
    public virtual global::CommonLibrary.LocalizedString ConflictTaskMany
    {
      get
      {
        return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.ExchangeCore.ICounterpartyConflictProcessingTask) , "ConflictTaskMany");
      }
    }

    public virtual global::CommonLibrary.LocalizedString ConflictTaskManyFormat(params object[] args)
    {
      return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.ExchangeCore.ICounterpartyConflictProcessingTask), "ConflictTaskMany", false, args);
    }
    public virtual global::CommonLibrary.LocalizedString ConflictTaskThreadSubject
    {
      get
      {
        return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.ExchangeCore.ICounterpartyConflictProcessingTask) , "ConflictTaskThreadSubject");
      }
    }

    public virtual global::CommonLibrary.LocalizedString ConflictTaskThreadSubjectFormat(params object[] args)
    {
      return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.ExchangeCore.ICounterpartyConflictProcessingTask), "ConflictTaskThreadSubject", false, args);
    }

  }
}

// ==================================================================
// CounterpartyConflictProcessingTaskSharedFunctions.g.cs
// ==================================================================

namespace Sungero.ExchangeCore.Shared
{
  public partial class CounterpartyConflictProcessingTaskFunctions : global::Sungero.Workflow.Shared.TaskFunctions
  {
    private global::Sungero.ExchangeCore.ICounterpartyConflictProcessingTask _obj
    {
      get { return (global::Sungero.ExchangeCore.ICounterpartyConflictProcessingTask)this.Entity; }
    }

    public CounterpartyConflictProcessingTaskFunctions(global::Sungero.ExchangeCore.ICounterpartyConflictProcessingTask entity) : base(entity) { }
  }
}

// ==================================================================
// CounterpartyConflictProcessingTaskFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.ExchangeCore.Functions
{
  internal static class CounterpartyConflictProcessingTask
  {
  }
}

// ==================================================================
// CounterpartyConflictProcessingTaskFilterState.g.cs
// ==================================================================

namespace Sungero.ExchangeCore.Shared.CounterpartyConflictProcessingTask
{

  public class CounterpartyConflictProcessingTaskFilterInfo : global::Sungero.Workflow.Shared.Task.TaskFilterInfo,
    global::Sungero.ExchangeCore.ICounterpartyConflictProcessingTaskFilterInfo
  {
  }

  public class CounterpartyConflictProcessingTaskFilterState : global::Sungero.Workflow.Shared.Task.TaskFilterState,
    global::Sungero.ExchangeCore.ICounterpartyConflictProcessingTaskFilterState
  {



    public new Sungero.ExchangeCore.ICounterpartyConflictProcessingTaskFilterInfo Info
    {
      get
      {
        return (Sungero.ExchangeCore.ICounterpartyConflictProcessingTaskFilterInfo) base.Info;
      }
    }
    protected override global::Sungero.Domain.Shared.IFilterInfo CreateFilterInfo()
    {
      return new Sungero.ExchangeCore.Shared.CounterpartyConflictProcessingTask.CounterpartyConflictProcessingTaskFilterInfo();
    }

  }
}

// ==================================================================
// CounterpartyConflictProcessingTaskSharedPublicFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.ExchangeCore.Shared
{
  public class CounterpartyConflictProcessingTaskSharedPublicFunctions : global::Sungero.ExchangeCore.Shared.ICounterpartyConflictProcessingTaskSharedPublicFunctions
  {
  }
}

// ==================================================================
// CounterpartyConflictProcessingTaskAttachmentGroups.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.ExchangeCore.Shared
{
}

// ==================================================================
// CounterpartyConflictProcessingTaskExtendedSchemeVersions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.ExchangeCore.CounterpartyConflictProcessingTask
{

    /// <summary>
    /// Список версий схемы.
    /// </summary>
    public static class LayerSchemeVersions
    {
      public static readonly global::Sungero.Workflow.Shared.ExtendedSchemeVersion V1 =
        new global::Sungero.Workflow.Shared.ExtendedSchemeVersion(1, global::System.Guid.Parse("0745199f-eaac-4875-8563-40ed1e5ce317"));
}

    public static class TaskExtensions
    {
      /// <summary>
      /// Получить версию схемы запущенной задачи.
      /// </summary>
      /// <param name="task">Задача.</param>
      /// <returns>Версия схемы запущенной задачи.</returns>
      public static global::Sungero.Workflow.Shared.ExtendedSchemeVersion GetStartedSchemeVersion(this global::Sungero.Workflow.ITask task)
      {
        return global::Sungero.Workflow.Shared.OverriddenTaskHelper.FindLayerSchemeVersionForTask(task,
          global::System.Guid.Parse("03a51b42-a322-4574-90bb-212ea03ed71e"));
      }
    }

}
