
// ==================================================================
// ExchangeService.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.ExchangeCore.Server
{
    public class ExchangeServiceFilter<T> :
      global::Sungero.Domain.EntityFilterBase<T>
      where T : class, global::Sungero.ExchangeCore.IExchangeService
    {
      protected new global::Sungero.ExchangeCore.IExchangeServiceFilterState Filter { get; private set; }

      private global::Sungero.ExchangeCore.IExchangeServiceFilterState filter
      {
        get
        {
          return this.Filter;
        }
      }

      protected override global::System.Linq.IQueryable<T> ApplyAppliedFilter(global::System.Linq.IQueryable<T> query)
      {
        return base.ApplyAppliedFilter(query);
      }

      public ExchangeServiceFilter(global::Sungero.ExchangeCore.IExchangeServiceFilterState filter)
      : base()
      {
        this.Filter = filter;
      }

      protected ExchangeServiceFilter()
      {
      }
    }
      public class ExchangeServiceUiFilter<T> :
        global::Sungero.Domain.EntityUiFilterBase<T>
        where T : class, global::Sungero.ExchangeCore.IExchangeService
      {
        protected override global::System.Linq.IQueryable<T> ApplyAppliedFilter(global::System.Linq.IQueryable<T> query)
        {
          return base.ApplyAppliedFilter(query);
        }
      }

    public class ExchangeServiceSearchDialogModel : global::Sungero.CoreEntities.Server.DatabookEntrySearchDialogModel
        {
                  public override global::System.Int32? Id { get; protected set; }



                  public virtual global::System.String Name { get; protected set; }
                  public virtual global::System.String Uri { get; protected set; }
                  public virtual global::System.String Note { get; protected set; }
                  public virtual global::System.String LogonUrl { get; protected set; }


                  public virtual global::System.Collections.Generic.IEnumerable<Sungero.Core.Enumeration> Status { get; protected set; }
                  public virtual global::System.Collections.Generic.IEnumerable<Sungero.Core.Enumeration> ExchangeProvider { get; protected set; }


        }





  [global::Sungero.Domain.Filter(typeof(global::Sungero.ExchangeCore.Server.ExchangeServiceFilter<global::Sungero.ExchangeCore.IExchangeService>))]
  [global::Sungero.Domain.UiFilter(typeof(global::Sungero.ExchangeCore.Server.ExchangeServiceUiFilter<global::Sungero.ExchangeCore.IExchangeService>))]

  public class ExchangeService :
    global::Sungero.CoreEntities.Server.DatabookEntry, global::Sungero.ExchangeCore.IExchangeService
  {
    public static new readonly global::System.Guid ClassTypeGuid = global::System.Guid.Parse("d6c0fcaf-4ac9-4a6a-9e2c-8fed1e35c08a");

    public override global::System.Guid TypeGuid
    {
      get { return global::Sungero.ExchangeCore.Server.ExchangeService.ClassTypeGuid; }
    }

    public override string TypeName
    {
      get { return "Sungero.ExchangeCore.IExchangeService, Sungero.Domain.Interfaces"; }
    }

    public override string DisplayValue
    {
      get { return this.Name; }
      set { this.Name = value; }
    }

    public new virtual global::Sungero.ExchangeCore.IExchangeServiceState State
    {
      get { return (global::Sungero.ExchangeCore.IExchangeServiceState)base.State; }
    }

    protected override global::Sungero.Domain.Shared.IEntityState CreateState()
    {
      return new global::Sungero.ExchangeCore.Shared.ExchangeServiceState(this);
    }

    public new virtual global::Sungero.ExchangeCore.IExchangeServiceInfo Info
    {
      get { return (global::Sungero.ExchangeCore.IExchangeServiceInfo)base.Info; }
    }

    public new virtual global::Sungero.ExchangeCore.IExchangeServiceAccessRights AccessRights
    {
      get { return (global::Sungero.ExchangeCore.IExchangeServiceAccessRights)base.AccessRights; }
    }

    protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
    {
      return new global::Sungero.ExchangeCore.Server.ExchangeServiceAccessRights(this);
    }

    protected override global::Sungero.Domain.EntityFunctions CreateServerFunctions()
    {
      return new global::Sungero.ExchangeCore.Server.ExchangeServiceFunctions(this);
    }

    protected override global::Sungero.Domain.Shared.EntityFunctions CreateSharedFunctions()
    {
      return new global::Sungero.ExchangeCore.Shared.ExchangeServiceFunctions(this);
    }

    protected override object CreateHandlers() {
      return new global::Sungero.ExchangeCore.ExchangeServiceServerHandlers(this);
    }

    protected override object CreateSharedHandlers() {
      return new global::Sungero.ExchangeCore.ExchangeServiceSharedHandlers(this);
    }

    private global::System.String _Name;
    public virtual global::System.String Name
    {
      get
      {
        return this._Name;
      }

      set
      {
        this.SetPropertyValue("Name", this._Name, value, (propertyValue) => { this._Name = propertyValue; }, this.NameChangedHandler);
      }
    }
    private global::System.String _Uri;
    public virtual global::System.String Uri
    {
      get
      {
        return this._Uri;
      }

      set
      {
        this.SetPropertyValue("Uri", this._Uri, value, (propertyValue) => { this._Uri = propertyValue; }, this.UriChangedHandler);
      }
    }
    private global::System.String _Note;
    public virtual global::System.String Note
    {
      get
      {
        return this._Note;
      }

      set
      {
        this.SetPropertyValue("Note", this._Note, value, (propertyValue) => { this._Note = propertyValue; }, this.NoteChangedHandler);
      }
    }
    private global::System.String _LogonUrl;
    public virtual global::System.String LogonUrl
    {
      get
      {
        return this._LogonUrl;
      }

      set
      {
        this.SetPropertyValue("LogonUrl", this._LogonUrl, value, (propertyValue) => { this._LogonUrl = propertyValue; }, this.LogonUrlChangedHandler);
      }
    }






    private static global::Sungero.Domain.Shared.EnumerationItems _ExchangeProviderItems = new global::Sungero.Domain.Shared.EnumerationItems(
      null,
      typeof(global::Sungero.ExchangeCore.ExchangeService.ExchangeProvider),
      typeof(global::Sungero.ExchangeCore.Server.ExchangeService),
      "ExchangeProvider");

    public static global::Sungero.Domain.Shared.EnumerationItems ExchangeProviderItems
    {
      get { return global::Sungero.ExchangeCore.Server.ExchangeService._ExchangeProviderItems; }
    }

    public virtual global::Sungero.Domain.Shared.EnumerationItems ExchangeProviderAllowedItems
    {
      get { return global::Sungero.ExchangeCore.Server.ExchangeService.ExchangeProviderItems; }
    }

    private global::Sungero.Core.Enumeration? _ExchangeProvider;

    public virtual global::Sungero.Core.Enumeration? ExchangeProvider
    {
      get { return this._ExchangeProvider; }
      set { this.SetEnumPropertyValue("ExchangeProvider", this._ExchangeProvider, value, (propertyValue) => { this._ExchangeProvider = propertyValue; }, this.ExchangeProviderChangedHandler, this.ExchangeProviderAllowedItems); }
    }





    protected override global::Sungero.Domain.Shared.EntityCreatingFromServerHandler CreateCreatingFromServerHandler(
      global::Sungero.Domain.Shared.IEntity entitySource)
    {
      return new global::Sungero.ExchangeCore.ExchangeServiceCreatingFromServerHandler((global::Sungero.ExchangeCore.IExchangeService)entitySource, this.Info);
    }

    #region Framework events

    protected void NameChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.Name, this.Name, this);
     ((global::Sungero.ExchangeCore.ExchangeServiceSharedHandlers)this.SharedHandlers).NameChanged(args);
    }

    protected void UriChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.Uri, this.Uri, this);
     ((global::Sungero.ExchangeCore.ExchangeServiceSharedHandlers)this.SharedHandlers).UriChanged(args);
    }

    protected void NoteChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.Note, this.Note, this);
     ((global::Sungero.ExchangeCore.ExchangeServiceSharedHandlers)this.SharedHandlers).NoteChanged(args);
    }

    protected void ExchangeProviderChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.EnumerationPropertyChangedEventArgs(this.State.Properties.ExchangeProvider, this.ExchangeProvider, this);
     ((global::Sungero.ExchangeCore.ExchangeServiceSharedHandlers)this.SharedHandlers).ExchangeProviderChanged(args);
    }

    protected void LogonUrlChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.LogonUrl, this.LogonUrl, this);
     ((global::Sungero.ExchangeCore.ExchangeServiceSharedHandlers)this.SharedHandlers).LogonUrlChanged(args);
    }



    #endregion


    public ExchangeService()
    {
    }

  }
}

// ==================================================================
// ExchangeServiceHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.ExchangeCore
{

  public partial class ExchangeServiceFilteringServerHandler<T>
    : global::Sungero.Domain.EntityFilteringServerHandler<T>  
    where T : class, global::Sungero.ExchangeCore.IExchangeService
  {
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    protected new global::Sungero.ExchangeCore.IExchangeServiceFilterState Filter { get; private set; }

    private global::Sungero.ExchangeCore.IExchangeServiceFilterState _filter
    {
      get
      {
        return this.Filter;
      }
    }

    public ExchangeServiceFilteringServerHandler(global::Sungero.ExchangeCore.IExchangeServiceFilterState filter)
    : base()
    {
      this.Filter = filter;
    }

    protected ExchangeServiceFilteringServerHandler()
    {
    }

    public override global::System.Linq.IQueryable<T> Filtering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.FilteringEventArgs e)
    {
      return query;
    }


  }

  public partial class ExchangeServiceUiFilteringServerHandler<T>
    : global::Sungero.Domain.EntityUiFilteringServerHandler<T>
    where T : class, global::Sungero.ExchangeCore.IExchangeService
  {
    public override global::System.Linq.IQueryable<T> Filtering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.UiFilteringEventArgs e)
    {
      query = base.Filtering(query, e);
            return query;
    }
  }

  public partial class ExchangeServiceSearchDialogServerHandler : global::Sungero.CoreEntities.DatabookEntrySearchDialogServerHandler
   {
     private global::Sungero.ExchangeCore.Server.ExchangeServiceSearchDialogModel _dialog
     {
       get
       {
         return (global::Sungero.ExchangeCore.Server.ExchangeServiceSearchDialogModel)this.Dialog;
       }
     }

     public ExchangeServiceSearchDialogServerHandler(global::Sungero.ExchangeCore.Server.ExchangeServiceSearchDialogModel dialog)
       : base(dialog)
     {
     }
   }

  public partial class ExchangeServiceServerHandlers : global::Sungero.CoreEntities.DatabookEntryServerHandlers
  {
    private global::Sungero.ExchangeCore.IExchangeService _obj
    {
      get { return (global::Sungero.ExchangeCore.IExchangeService)this.Entity; }
    }

    public ExchangeServiceServerHandlers(global::Sungero.ExchangeCore.IExchangeService entity)
      : base(entity)
    {
    }
  }

  public partial class ExchangeServiceCreatingFromServerHandler : global::Sungero.CoreEntities.DatabookEntryCreatingFromServerHandler
  {
    private global::Sungero.ExchangeCore.IExchangeService _source
    {
      get { return (global::Sungero.ExchangeCore.IExchangeService)this.Source; }
    }

    private global::Sungero.ExchangeCore.IExchangeServiceInfo _info
    {
      get { return (global::Sungero.ExchangeCore.IExchangeServiceInfo)this._Info; }
    }

    public ExchangeServiceCreatingFromServerHandler(global::Sungero.ExchangeCore.IExchangeService source, global::Sungero.ExchangeCore.IExchangeServiceInfo info)
      : base(source, info)
    {
    }
  }

}

// ==================================================================
// ExchangeServiceEventArgs.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.ExchangeCore.Server
{
}

// ==================================================================
// ExchangeServiceAccessRights.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.ExchangeCore.Server
{
  public class ExchangeServiceAccessRights : 
    Sungero.CoreEntities.Server.DatabookEntryAccessRights, Sungero.ExchangeCore.IExchangeServiceAccessRights
  {

    public ExchangeServiceAccessRights(global::Sungero.Domain.Shared.IEntity entity) : base(entity)
    {
    }
  }

  public class ExchangeServiceTypeAccessRights : 
    Sungero.CoreEntities.Server.DatabookEntryTypeAccessRights, Sungero.ExchangeCore.IExchangeServiceAccessRights
  {

    public ExchangeServiceTypeAccessRights(global::System.Type entityType) : base(entityType)
    {
    }
  }
}

// ==================================================================
// ExchangeServiceRepositoryImplementer.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.ExchangeCore.Server
{
    public class ExchangeServiceRepositoryImplementer<T> : 
      global::Sungero.Domain.RepositoryImplementer<T>,
      global::Sungero.ExchangeCore.IExchangeServiceRepositoryImplementer<T>
      where T : global::Sungero.ExchangeCore.IExchangeService 
    {
       public new global::Sungero.ExchangeCore.IExchangeServiceAccessRights AccessRights
       {
          get { return (global::Sungero.ExchangeCore.IExchangeServiceAccessRights)base.AccessRights; }
       }

       public new global::Sungero.ExchangeCore.IExchangeServiceInfo Info
       {
          get { return (global::Sungero.ExchangeCore.IExchangeServiceInfo)base.Info; }
       }

       protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
       {
         return new global::Sungero.ExchangeCore.Server.ExchangeServiceTypeAccessRights(typeof(T));
       }
    }
}

// ==================================================================
// ExchangeServicePanelNavigationFilters.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.ExchangeCore.Server
{
}

// ==================================================================
// ExchangeServiceServerFunctions.g.cs
// ==================================================================

namespace Sungero.ExchangeCore.Server
{
  public partial class ExchangeServiceFunctions : global::Sungero.CoreEntities.Server.DatabookEntryFunctions
  {
    private global::Sungero.ExchangeCore.IExchangeService _obj
    {
      get { return (global::Sungero.ExchangeCore.IExchangeService)this.Entity; }
    }

    public ExchangeServiceFunctions(global::Sungero.ExchangeCore.IExchangeService entity) : base(entity) { }
  }
}

// ==================================================================
// ExchangeServiceFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.ExchangeCore.Functions
{
  internal static class ExchangeService
  {
  }
}

// ==================================================================
// ExchangeServiceServerPublicFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.ExchangeCore.Server
{
  public class ExchangeServiceServerPublicFunctions : global::Sungero.ExchangeCore.Server.IExchangeServiceServerPublicFunctions
  {
  }
}

// ==================================================================
// ExchangeServiceQueries.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.ExchangeCore.Queries
{
  public class ExchangeService
  {
    private static global::Sungero.Domain.SqlQueryResolver resolver = new global::Sungero.Domain.SqlQueryResolver("Sungero.ExchangeCore.Server.ExchangeService.ExchangeServiceQueries.xml", System.Reflection.Assembly.GetExecutingAssembly());
  }
}
