
// ==================================================================
// BodyConverterQueueItem.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.ExchangeCore.Server
{
    public class BodyConverterQueueItemFilter<T> :
      global::Sungero.ExchangeCore.Server.QueueItemBaseFilter<T>
      where T : class, global::Sungero.ExchangeCore.IBodyConverterQueueItem
    {
      private global::Sungero.ExchangeCore.IBodyConverterQueueItemFilterState filter
      {
        get
        {
          return (Sungero.ExchangeCore.IBodyConverterQueueItemFilterState)this.Filter;
        }
      }

      protected override global::System.Linq.IQueryable<T> ApplyAppliedFilter(global::System.Linq.IQueryable<T> query)
      {
        return base.ApplyAppliedFilter(query);
      }

      public BodyConverterQueueItemFilter(global::Sungero.ExchangeCore.IBodyConverterQueueItemFilterState filter)
      : base(filter)
      {
      }

      protected BodyConverterQueueItemFilter()
      {
      }
    }
      public class BodyConverterQueueItemUiFilter<T> :
        global::Sungero.ExchangeCore.Server.QueueItemBaseUiFilter<T>
        where T : class, global::Sungero.ExchangeCore.IBodyConverterQueueItem
      {
        protected override global::System.Linq.IQueryable<T> ApplyAppliedFilter(global::System.Linq.IQueryable<T> query)
        {
          return base.ApplyAppliedFilter(query);
        }
      }

    public class BodyConverterQueueItemSearchDialogModel : global::Sungero.ExchangeCore.Server.QueueItemBaseSearchDialogModel
        {
                  public override global::System.Int32? Id { get; protected set; }
                  public override global::System.String Name { get; protected set; }
                  public override global::System.String ExternalId { get; protected set; }
                  public override global::System.Int32? Retries { get; protected set; }
                  public override global::System.String Note { get; protected set; }


                  public override global::System.Collections.Generic.IEnumerable<Sungero.ExchangeCore.IBoxBase> Box { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<CommonLibrary.DateRangeValue> LastUpdate { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<Sungero.ExchangeCore.IBusinessUnitBox> RootBox { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<Sungero.Core.Enumeration> ProcessingStatus { get; protected set; }


                  public virtual global::System.Int32? VersionId { get; protected set; }


                  public virtual global::System.Collections.Generic.IEnumerable<Sungero.Docflow.IOfficialDocument> Document { get; protected set; }
                  public virtual global::System.Collections.Generic.IEnumerable<Sungero.Core.Enumeration> ExchangeState { get; protected set; }


        }




  public class BodyConverterQueueItemFilterForDocument<TQueryEntity, TSourceEntity>
    : global::Sungero.Domain.EntityPropertyFilterBase<TQueryEntity, TSourceEntity>
    where TQueryEntity : class, global::Sungero.Docflow.IOfficialDocument
    where TSourceEntity : class, global::Sungero.ExchangeCore.IBodyConverterQueueItem
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, TSourceEntity sourceEntity)
    {
      var args = new global::Sungero.Domain.PropertyFilteringEventArgs(sourceEntity);
      var result = new global::Sungero.ExchangeCore.BodyConverterQueueItemDocumentPropertyFilteringServerHandler<TQueryEntity>(sourceEntity).DocumentFiltering(query, args);
      if (args.DisableUiFiltering)
        global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public BodyConverterQueueItemFilterForDocument(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class BodyConverterQueueItemSearchFilterForDocument<TQueryEntity>
    : global::Sungero.Domain.SearchDialogPropertyFilter<TQueryEntity>
    where TQueryEntity : class, global::Sungero.Docflow.IOfficialDocument
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, System.Guid entityType)
    {
      var args = new global::Sungero.Domain.PropertySearchDialogFilteringEventArgs(entityType);
      var result = new global::Sungero.ExchangeCore.BodyConverterQueueItemDocumentSearchPropertyFilteringServerHandler<TQueryEntity>().DocumentSearchDialogFiltering(query, args);
      if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public BodyConverterQueueItemSearchFilterForDocument(string propertyName)
      : base(propertyName)
    {
    }
  }



  [global::Sungero.Domain.Filter(typeof(global::Sungero.ExchangeCore.Server.BodyConverterQueueItemFilter<global::Sungero.ExchangeCore.IBodyConverterQueueItem>))]
  [global::Sungero.Domain.UiFilter(typeof(global::Sungero.ExchangeCore.Server.BodyConverterQueueItemUiFilter<global::Sungero.ExchangeCore.IBodyConverterQueueItem>))]
  [global::Sungero.Domain.PropertyFilter(typeof(global::Sungero.ExchangeCore.Server.BodyConverterQueueItemFilterForDocument<global::Sungero.Docflow.IOfficialDocument, global::Sungero.ExchangeCore.IBodyConverterQueueItem>), "Document")]
  [global::Sungero.Domain.SearchPropertyFilter(typeof(global::Sungero.ExchangeCore.Server.BodyConverterQueueItemSearchFilterForDocument<global::Sungero.Docflow.IOfficialDocument>), "Document")]


  public class BodyConverterQueueItem :
    global::Sungero.ExchangeCore.Server.QueueItemBase, global::Sungero.ExchangeCore.IBodyConverterQueueItem
  {
    public static new readonly global::System.Guid ClassTypeGuid = global::System.Guid.Parse("2d30e2aa-1d0b-45f0-8e4d-00318b3a5cfd");

    public override global::System.Guid TypeGuid
    {
      get { return global::Sungero.ExchangeCore.Server.BodyConverterQueueItem.ClassTypeGuid; }
    }

    public override string TypeName
    {
      get { return "Sungero.ExchangeCore.IBodyConverterQueueItem, Sungero.Domain.Interfaces"; }
    }

    public override string DisplayValue
    {
      get { return this.Name; }
      set { this.Name = value; }
    }

    public new virtual global::Sungero.ExchangeCore.IBodyConverterQueueItemState State
    {
      get { return (global::Sungero.ExchangeCore.IBodyConverterQueueItemState)base.State; }
    }

    protected override global::Sungero.Domain.Shared.IEntityState CreateState()
    {
      return new global::Sungero.ExchangeCore.Shared.BodyConverterQueueItemState(this);
    }

    public new virtual global::Sungero.ExchangeCore.IBodyConverterQueueItemInfo Info
    {
      get { return (global::Sungero.ExchangeCore.IBodyConverterQueueItemInfo)base.Info; }
    }

    public new virtual global::Sungero.ExchangeCore.IBodyConverterQueueItemAccessRights AccessRights
    {
      get { return (global::Sungero.ExchangeCore.IBodyConverterQueueItemAccessRights)base.AccessRights; }
    }

    protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
    {
      return new global::Sungero.ExchangeCore.Server.BodyConverterQueueItemAccessRights(this);
    }

    protected override global::Sungero.Domain.EntityFunctions CreateServerFunctions()
    {
      return new global::Sungero.ExchangeCore.Server.BodyConverterQueueItemFunctions(this);
    }

    protected override global::Sungero.Domain.Shared.EntityFunctions CreateSharedFunctions()
    {
      return new global::Sungero.ExchangeCore.Shared.BodyConverterQueueItemFunctions(this);
    }

    protected override object CreateHandlers() {
      return new global::Sungero.ExchangeCore.BodyConverterQueueItemServerHandlers(this);
    }

    protected override object CreateSharedHandlers() {
      return new global::Sungero.ExchangeCore.BodyConverterQueueItemSharedHandlers(this);
    }

    private global::System.Int32? _VersionId;
    public virtual global::System.Int32? VersionId
    {
      get
      {
        return this._VersionId;
      }

      set
      {
        this.SetPropertyValue("VersionId", this._VersionId, value, (propertyValue) => { this._VersionId = propertyValue; }, this.VersionIdChangedHandler);
      }
    }






    private static global::Sungero.Domain.Shared.EnumerationItems _ProcessingStatusItems = new global::Sungero.Domain.Shared.EnumerationItems(
      global::Sungero.ExchangeCore.Server.QueueItemBase.ProcessingStatusItems,
      typeof(global::Sungero.ExchangeCore.BodyConverterQueueItem.ProcessingStatus),
      typeof(global::Sungero.ExchangeCore.Server.BodyConverterQueueItem),
      "ProcessingStatus");

    public static new global::Sungero.Domain.Shared.EnumerationItems ProcessingStatusItems
    {
      get { return global::Sungero.ExchangeCore.Server.BodyConverterQueueItem._ProcessingStatusItems; }
    }

    public override global::Sungero.Domain.Shared.EnumerationItems ProcessingStatusAllowedItems
    {
      get { return global::Sungero.ExchangeCore.Server.BodyConverterQueueItem.ProcessingStatusItems; }
    }

    private static global::Sungero.Domain.Shared.EnumerationItems _ExchangeStateItems = new global::Sungero.Domain.Shared.EnumerationItems(
      null,
      typeof(global::Sungero.ExchangeCore.BodyConverterQueueItem.ExchangeState),
      typeof(global::Sungero.ExchangeCore.Server.BodyConverterQueueItem),
      "ExchangeState");

    public static global::Sungero.Domain.Shared.EnumerationItems ExchangeStateItems
    {
      get { return global::Sungero.ExchangeCore.Server.BodyConverterQueueItem._ExchangeStateItems; }
    }

    public virtual global::Sungero.Domain.Shared.EnumerationItems ExchangeStateAllowedItems
    {
      get { return global::Sungero.ExchangeCore.Server.BodyConverterQueueItem.ExchangeStateItems; }
    }

    private global::Sungero.Core.Enumeration? _ExchangeState;

    public virtual global::Sungero.Core.Enumeration? ExchangeState
    {
      get { return this._ExchangeState; }
      set { this.SetEnumPropertyValue("ExchangeState", this._ExchangeState, value, (propertyValue) => { this._ExchangeState = propertyValue; }, this.ExchangeStateChangedHandler, this.ExchangeStateAllowedItems); }
    }


    private global::Sungero.Docflow.IOfficialDocument _Document;
    public virtual global::Sungero.Docflow.IOfficialDocument Document
    {
      get
      {
        return this._Document;
      }

      set
      {
        this.SetPropertyValue("Document", this._Document, value, (propertyValue) => { this._Document = propertyValue; }, this.DocumentChangedHandler);
      }
    }




    protected override global::Sungero.Domain.Shared.EntityCreatingFromServerHandler CreateCreatingFromServerHandler(
      global::Sungero.Domain.Shared.IEntity entitySource)
    {
      return new global::Sungero.ExchangeCore.BodyConverterQueueItemCreatingFromServerHandler((global::Sungero.ExchangeCore.IBodyConverterQueueItem)entitySource, this.Info);
    }

    #region Framework events

    protected void DocumentChangedHandler()
    {
      var args = new global::Sungero.ExchangeCore.Shared.BodyConverterQueueItemDocumentChangedEventArgs(this.State.Properties.Document, this.Document, this);
     ((global::Sungero.ExchangeCore.BodyConverterQueueItemSharedHandlers)this.SharedHandlers).DocumentChanged(args);
    }

    protected void VersionIdChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.IntegerPropertyChangedEventArgs(this.State.Properties.VersionId, this.VersionId, this);
     ((global::Sungero.ExchangeCore.BodyConverterQueueItemSharedHandlers)this.SharedHandlers).VersionIdChanged(args);
    }

    protected void ExchangeStateChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.EnumerationPropertyChangedEventArgs(this.State.Properties.ExchangeState, this.ExchangeState, this);
     ((global::Sungero.ExchangeCore.BodyConverterQueueItemSharedHandlers)this.SharedHandlers).ExchangeStateChanged(args);
    }



    #endregion


    public BodyConverterQueueItem()
    {
    }

  }
}

// ==================================================================
// BodyConverterQueueItemHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.ExchangeCore
{
  public partial class BodyConverterQueueItemDocumentPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.EntityPropertyFilteringServerHandler
    where T : class, global::Sungero.Docflow.IOfficialDocument
  {
    private global::Sungero.ExchangeCore.IBodyConverterQueueItem _obj
    {
      get { return (global::Sungero.ExchangeCore.IBodyConverterQueueItem)this.Entity; }
    }

    public virtual global::System.Linq.IQueryable<T> DocumentFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertyFilteringEventArgs e)
    {
      return query;
    }

    public BodyConverterQueueItemDocumentPropertyFilteringServerHandler(global::Sungero.ExchangeCore.IBodyConverterQueueItem entity)
      : base(entity)
    {
    }
  }

  public partial class BodyConverterQueueItemDocumentSearchPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.SearchPropertyFilteringServerHandler
    where T : class, global::Sungero.Docflow.IOfficialDocument
  {

    public virtual global::System.Linq.IQueryable<T> DocumentSearchDialogFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertySearchDialogFilteringEventArgs e)
    {
      return query;
    }

    public BodyConverterQueueItemDocumentSearchPropertyFilteringServerHandler()
      : base()
    {
    }
  }



  public partial class BodyConverterQueueItemFilteringServerHandler<T>
    : global::Sungero.ExchangeCore.QueueItemBaseFilteringServerHandler<T>  
    where T : class, global::Sungero.ExchangeCore.IBodyConverterQueueItem
  {
    private global::Sungero.ExchangeCore.IBodyConverterQueueItemFilterState _filter
    {
      get
      {
        return (Sungero.ExchangeCore.IBodyConverterQueueItemFilterState)this.Filter;
      }
    }

    public BodyConverterQueueItemFilteringServerHandler(global::Sungero.ExchangeCore.IBodyConverterQueueItemFilterState filter)
    : base(filter)
    {
    }

    protected BodyConverterQueueItemFilteringServerHandler()
    {
    }

    public override global::System.Linq.IQueryable<T> Filtering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.FilteringEventArgs e)
    {
      query = base.Filtering(query, e);
            return query;
    }


  }

  public partial class BodyConverterQueueItemUiFilteringServerHandler<T>
    : global::Sungero.ExchangeCore.QueueItemBaseUiFilteringServerHandler<T>
    where T : class, global::Sungero.ExchangeCore.IBodyConverterQueueItem
  {
    public override global::System.Linq.IQueryable<T> Filtering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.UiFilteringEventArgs e)
    {
      query = base.Filtering(query, e);
            return query;
    }
  }

  public partial class BodyConverterQueueItemSearchDialogServerHandler : global::Sungero.ExchangeCore.QueueItemBaseSearchDialogServerHandler
   {
     private global::Sungero.ExchangeCore.Server.BodyConverterQueueItemSearchDialogModel _dialog
     {
       get
       {
         return (global::Sungero.ExchangeCore.Server.BodyConverterQueueItemSearchDialogModel)this.Dialog;
       }
     }

     public BodyConverterQueueItemSearchDialogServerHandler(global::Sungero.ExchangeCore.Server.BodyConverterQueueItemSearchDialogModel dialog)
       : base(dialog)
     {
     }
   }

  public partial class BodyConverterQueueItemServerHandlers : global::Sungero.ExchangeCore.QueueItemBaseServerHandlers
  {
    private global::Sungero.ExchangeCore.IBodyConverterQueueItem _obj
    {
      get { return (global::Sungero.ExchangeCore.IBodyConverterQueueItem)this.Entity; }
    }

    public BodyConverterQueueItemServerHandlers(global::Sungero.ExchangeCore.IBodyConverterQueueItem entity)
      : base(entity)
    {
    }
  }

  public partial class BodyConverterQueueItemCreatingFromServerHandler : global::Sungero.ExchangeCore.QueueItemBaseCreatingFromServerHandler
  {
    private global::Sungero.ExchangeCore.IBodyConverterQueueItem _source
    {
      get { return (global::Sungero.ExchangeCore.IBodyConverterQueueItem)this.Source; }
    }

    private global::Sungero.ExchangeCore.IBodyConverterQueueItemInfo _info
    {
      get { return (global::Sungero.ExchangeCore.IBodyConverterQueueItemInfo)this._Info; }
    }

    public BodyConverterQueueItemCreatingFromServerHandler(global::Sungero.ExchangeCore.IBodyConverterQueueItem source, global::Sungero.ExchangeCore.IBodyConverterQueueItemInfo info)
      : base(source, info)
    {
    }
  }

}

// ==================================================================
// BodyConverterQueueItemEventArgs.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.ExchangeCore.Server
{
}

// ==================================================================
// BodyConverterQueueItemAccessRights.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.ExchangeCore.Server
{
  public class BodyConverterQueueItemAccessRights : 
    Sungero.ExchangeCore.Server.QueueItemBaseAccessRights, Sungero.ExchangeCore.IBodyConverterQueueItemAccessRights
  {

    public BodyConverterQueueItemAccessRights(global::Sungero.Domain.Shared.IEntity entity) : base(entity)
    {
    }
  }

  public class BodyConverterQueueItemTypeAccessRights : 
    Sungero.ExchangeCore.Server.QueueItemBaseTypeAccessRights, Sungero.ExchangeCore.IBodyConverterQueueItemAccessRights
  {

    public BodyConverterQueueItemTypeAccessRights(global::System.Type entityType) : base(entityType)
    {
    }
  }
}

// ==================================================================
// BodyConverterQueueItemRepositoryImplementer.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.ExchangeCore.Server
{
    public class BodyConverterQueueItemRepositoryImplementer<T> : 
      global::Sungero.ExchangeCore.Server.QueueItemBaseRepositoryImplementer<T>,
      global::Sungero.ExchangeCore.IBodyConverterQueueItemRepositoryImplementer<T>
      where T : global::Sungero.ExchangeCore.IBodyConverterQueueItem 
    {
       public new global::Sungero.ExchangeCore.IBodyConverterQueueItemAccessRights AccessRights
       {
          get { return (global::Sungero.ExchangeCore.IBodyConverterQueueItemAccessRights)base.AccessRights; }
       }

       public new global::Sungero.ExchangeCore.IBodyConverterQueueItemInfo Info
       {
          get { return (global::Sungero.ExchangeCore.IBodyConverterQueueItemInfo)base.Info; }
       }

       protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
       {
         return new global::Sungero.ExchangeCore.Server.BodyConverterQueueItemTypeAccessRights(typeof(T));
       }
    }
}

// ==================================================================
// BodyConverterQueueItemPanelNavigationFilters.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.ExchangeCore.Server
{
}

// ==================================================================
// BodyConverterQueueItemServerFunctions.g.cs
// ==================================================================

namespace Sungero.ExchangeCore.Server
{
  public partial class BodyConverterQueueItemFunctions : global::Sungero.ExchangeCore.Server.QueueItemBaseFunctions
  {
    private global::Sungero.ExchangeCore.IBodyConverterQueueItem _obj
    {
      get { return (global::Sungero.ExchangeCore.IBodyConverterQueueItem)this.Entity; }
    }

    public BodyConverterQueueItemFunctions(global::Sungero.ExchangeCore.IBodyConverterQueueItem entity) : base(entity) { }
  }
}

// ==================================================================
// BodyConverterQueueItemFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.ExchangeCore.Functions
{
  internal static class BodyConverterQueueItem
  {
  }
}

// ==================================================================
// BodyConverterQueueItemServerPublicFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.ExchangeCore.Server
{
  public class BodyConverterQueueItemServerPublicFunctions : global::Sungero.ExchangeCore.Server.IBodyConverterQueueItemServerPublicFunctions
  {
  }
}

// ==================================================================
// BodyConverterQueueItemQueries.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.ExchangeCore.Queries
{
  public class BodyConverterQueueItem
  {
    private static global::Sungero.Domain.SqlQueryResolver resolver = new global::Sungero.Domain.SqlQueryResolver("Sungero.ExchangeCore.Server.BodyConverterQueueItem.BodyConverterQueueItemQueries.xml", System.Reflection.Assembly.GetExecutingAssembly());
  }
}
