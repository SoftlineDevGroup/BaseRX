
// ==================================================================
// IncomingInvitationTask.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.ExchangeCore.Server
{
    public class IncomingInvitationTaskFilter<T> :
      global::Sungero.Workflow.Server.TaskFilter<T>
      where T : class, global::Sungero.ExchangeCore.IIncomingInvitationTask
    {
      protected new global::Sungero.ExchangeCore.IIncomingInvitationTaskFilterState Filter { get; private set; }

      private global::Sungero.ExchangeCore.IIncomingInvitationTaskFilterState filter
      {
        get
        {
          return this.Filter;
        }
      }

      protected override global::System.Linq.IQueryable<T> ApplyAppliedFilter(global::System.Linq.IQueryable<T> query)
      {
        return base.ApplyAppliedFilter(query);
      }

      public IncomingInvitationTaskFilter(global::Sungero.ExchangeCore.IIncomingInvitationTaskFilterState filter)
      : base()
      {
        this.Filter = filter;
      }

      protected IncomingInvitationTaskFilter()
      {
      }
    }
    public class IncomingInvitationTaskSearchDialogModel : global::Sungero.Workflow.Server.TaskSearchDialogModel
        {
                  public override global::System.Int32? Id { get; protected set; }
                  public override global::System.String Subject { get; protected set; }


                  public override global::System.Collections.Generic.IEnumerable<Sungero.CoreEntities.IRecipient> Author { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<Sungero.Core.Enumeration> Status { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<Sungero.Core.Enumeration> Importance { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<CommonLibrary.DateRangeValue> Started { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<CommonLibrary.DateRangeValue> MaxDeadline { get; protected set; }



                  public virtual global::System.Collections.Generic.IEnumerable<Sungero.ExchangeCore.IBusinessUnitBox> Box { get; protected set; }
                  public virtual global::System.Collections.Generic.IEnumerable<Sungero.Parties.ICounterparty> Counterparty { get; protected set; }
                  public virtual global::System.Collections.Generic.IEnumerable<Sungero.CoreEntities.IRecipient> Assignee { get; protected set; }


                   [Sungero.Domain.Shared.HideInDevStudio()]
                   public new IncomingInvitationTaskObserversModel Observers { get { return (IncomingInvitationTaskObserversModel)base.Observers; } protected set { base.Observers = value; } }

        }

      public class IncomingInvitationTaskObserversModel : global::Sungero.Workflow.Server.TaskObserversModel
          {
                      [Sungero.Domain.Shared.HideInDevStudio()]
                      public override global::System.Int32? Id { get; protected set; }




         }




  public class IncomingInvitationTaskFilterForBox<TQueryEntity, TSourceEntity>
    : global::Sungero.Domain.EntityPropertyFilterBase<TQueryEntity, TSourceEntity>
    where TQueryEntity : class, global::Sungero.ExchangeCore.IBusinessUnitBox
    where TSourceEntity : class, global::Sungero.ExchangeCore.IIncomingInvitationTask
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, TSourceEntity sourceEntity)
    {
      var args = new global::Sungero.Domain.PropertyFilteringEventArgs(sourceEntity);
      var result = new global::Sungero.ExchangeCore.IncomingInvitationTaskBoxPropertyFilteringServerHandler<TQueryEntity>(sourceEntity).BoxFiltering(query, args);
      if (args.DisableUiFiltering)
        global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public IncomingInvitationTaskFilterForBox(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class IncomingInvitationTaskSearchFilterForBox<TQueryEntity>
    : global::Sungero.Domain.SearchDialogPropertyFilter<TQueryEntity>
    where TQueryEntity : class, global::Sungero.ExchangeCore.IBusinessUnitBox
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, System.Guid entityType)
    {
      var args = new global::Sungero.Domain.PropertySearchDialogFilteringEventArgs(entityType);
      var result = new global::Sungero.ExchangeCore.IncomingInvitationTaskBoxSearchPropertyFilteringServerHandler<TQueryEntity>().BoxSearchDialogFiltering(query, args);
      if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public IncomingInvitationTaskSearchFilterForBox(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class IncomingInvitationTaskFilterForCounterparty<TQueryEntity, TSourceEntity>
    : global::Sungero.Domain.EntityPropertyFilterBase<TQueryEntity, TSourceEntity>
    where TQueryEntity : class, global::Sungero.Parties.ICounterparty
    where TSourceEntity : class, global::Sungero.ExchangeCore.IIncomingInvitationTask
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, TSourceEntity sourceEntity)
    {
      var args = new global::Sungero.Domain.PropertyFilteringEventArgs(sourceEntity);
      var result = new global::Sungero.ExchangeCore.IncomingInvitationTaskCounterpartyPropertyFilteringServerHandler<TQueryEntity>(sourceEntity).CounterpartyFiltering(query, args);
      if (args.DisableUiFiltering)
        global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public IncomingInvitationTaskFilterForCounterparty(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class IncomingInvitationTaskSearchFilterForCounterparty<TQueryEntity>
    : global::Sungero.Domain.SearchDialogPropertyFilter<TQueryEntity>
    where TQueryEntity : class, global::Sungero.Parties.ICounterparty
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, System.Guid entityType)
    {
      var args = new global::Sungero.Domain.PropertySearchDialogFilteringEventArgs(entityType);
      var result = new global::Sungero.ExchangeCore.IncomingInvitationTaskCounterpartySearchPropertyFilteringServerHandler<TQueryEntity>().CounterpartySearchDialogFiltering(query, args);
      if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public IncomingInvitationTaskSearchFilterForCounterparty(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class IncomingInvitationTaskFilterForAssignee<TQueryEntity, TSourceEntity>
    : global::Sungero.Domain.EntityPropertyFilterBase<TQueryEntity, TSourceEntity>
    where TQueryEntity : class, global::Sungero.Company.IEmployee
    where TSourceEntity : class, global::Sungero.ExchangeCore.IIncomingInvitationTask
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, TSourceEntity sourceEntity)
    {
      var args = new global::Sungero.Domain.PropertyFilteringEventArgs(sourceEntity);
      var result = new global::Sungero.ExchangeCore.IncomingInvitationTaskAssigneePropertyFilteringServerHandler<TQueryEntity>(sourceEntity).AssigneeFiltering(query, args);
      if (args.DisableUiFiltering)
        global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public IncomingInvitationTaskFilterForAssignee(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class IncomingInvitationTaskSearchFilterForAssignee<TQueryEntity>
    : global::Sungero.Domain.SearchDialogPropertyFilter<TQueryEntity>
    where TQueryEntity : class, global::Sungero.CoreEntities.IRecipient
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, System.Guid entityType)
    {
      var args = new global::Sungero.Domain.PropertySearchDialogFilteringEventArgs(entityType);
      var result = new global::Sungero.ExchangeCore.IncomingInvitationTaskAssigneeSearchPropertyFilteringServerHandler<TQueryEntity>().AssigneeSearchDialogFiltering(query, args);
      if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public IncomingInvitationTaskSearchFilterForAssignee(string propertyName)
      : base(propertyName)
    {
    }
  }



  [global::Sungero.Domain.Filter(typeof(global::Sungero.ExchangeCore.Server.IncomingInvitationTaskFilter<global::Sungero.ExchangeCore.IIncomingInvitationTask>))]
  [global::Sungero.Domain.PropertyFilter(typeof(global::Sungero.ExchangeCore.Server.IncomingInvitationTaskFilterForBox<global::Sungero.ExchangeCore.IBusinessUnitBox, global::Sungero.ExchangeCore.IIncomingInvitationTask>), "Box")]
  [global::Sungero.Domain.SearchPropertyFilter(typeof(global::Sungero.ExchangeCore.Server.IncomingInvitationTaskSearchFilterForBox<global::Sungero.ExchangeCore.IBusinessUnitBox>), "Box")]
  [global::Sungero.Domain.PropertyFilter(typeof(global::Sungero.ExchangeCore.Server.IncomingInvitationTaskFilterForCounterparty<global::Sungero.Parties.ICounterparty, global::Sungero.ExchangeCore.IIncomingInvitationTask>), "Counterparty")]
  [global::Sungero.Domain.SearchPropertyFilter(typeof(global::Sungero.ExchangeCore.Server.IncomingInvitationTaskSearchFilterForCounterparty<global::Sungero.Parties.ICounterparty>), "Counterparty")]
  [global::Sungero.Domain.PropertyFilter(typeof(global::Sungero.ExchangeCore.Server.IncomingInvitationTaskFilterForAssignee<global::Sungero.Company.IEmployee, global::Sungero.ExchangeCore.IIncomingInvitationTask>), "Assignee")]
  [global::Sungero.Domain.SearchPropertyFilter(typeof(global::Sungero.ExchangeCore.Server.IncomingInvitationTaskSearchFilterForAssignee<global::Sungero.CoreEntities.IRecipient>), "Assignee")]


  public class IncomingInvitationTask :
    global::Sungero.Workflow.Server.Task, global::Sungero.ExchangeCore.IIncomingInvitationTask, global::Sungero.Domain.Shared.ISecurableEntity, global::Sungero.Domain.IInternalSecurableEntity
  {
    public static new readonly global::System.Guid ClassTypeGuid = global::System.Guid.Parse("1e5b11de-bd28-4dc2-a03c-74b8db9ac1c4");

    public override global::System.Guid TypeGuid
    {
      get { return global::Sungero.ExchangeCore.Server.IncomingInvitationTask.ClassTypeGuid; }
    }

    public override string TypeName
    {
      get { return "Sungero.ExchangeCore.IIncomingInvitationTask, Sungero.Domain.Interfaces"; }
    }

    public override string DisplayValue
    {
      get { return this.Subject; }
      set { this.Subject = value; }
    }

    public new virtual global::Sungero.ExchangeCore.IIncomingInvitationTaskState State
    {
      get { return (global::Sungero.ExchangeCore.IIncomingInvitationTaskState)base.State; }
    }

    protected override global::Sungero.Domain.Shared.IEntityState CreateState()
    {
      return new global::Sungero.ExchangeCore.Shared.IncomingInvitationTaskState(this);
    }

    public new virtual global::Sungero.ExchangeCore.IIncomingInvitationTaskInfo Info
    {
      get { return (global::Sungero.ExchangeCore.IIncomingInvitationTaskInfo)base.Info; }
    }

    public new virtual global::Sungero.ExchangeCore.IIncomingInvitationTaskAccessRights AccessRights
    {
      get { return (global::Sungero.ExchangeCore.IIncomingInvitationTaskAccessRights)base.AccessRights; }
    }

    protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
    {
      return new global::Sungero.ExchangeCore.Server.IncomingInvitationTaskAccessRights(this);
    }

    protected override global::Sungero.Domain.EntityFunctions CreateServerFunctions()
    {
      return new global::Sungero.ExchangeCore.Server.IncomingInvitationTaskFunctions(this);
    }

    protected override global::Sungero.Domain.Shared.EntityFunctions CreateSharedFunctions()
    {
      return new global::Sungero.ExchangeCore.Shared.IncomingInvitationTaskFunctions(this);
    }

    protected override object CreateHandlers() {
      return new global::Sungero.ExchangeCore.IncomingInvitationTaskServerHandlers(this);
    }

    protected override object CreateSharedHandlers() {
      return new global::Sungero.ExchangeCore.IncomingInvitationTaskSharedHandlers(this);
    }

    private global::System.String _OrganizationId;
    public virtual global::System.String OrganizationId
    {
      get
      {
        return this._OrganizationId;
      }

      set
      {
        this.SetPropertyValue("OrganizationId", this._OrganizationId, value, (propertyValue) => { this._OrganizationId = propertyValue; }, this.OrganizationIdChangedHandler);
      }
    }







    private global::Sungero.ExchangeCore.IBusinessUnitBox _Box;
    public virtual global::Sungero.ExchangeCore.IBusinessUnitBox Box
    {
      get
      {
        return this._Box;
      }

      set
      {
        this.SetPropertyValue("Box", this._Box, value, (propertyValue) => { this._Box = propertyValue; }, this.BoxChangedHandler);
      }
    }
    private global::Sungero.Parties.ICounterparty _Counterparty;
    public virtual global::Sungero.Parties.ICounterparty Counterparty
    {
      get
      {
        return this._Counterparty;
      }

      set
      {
        this.SetPropertyValue("Counterparty", this._Counterparty, value, (propertyValue) => { this._Counterparty = propertyValue; }, this.CounterpartyChangedHandler);
      }
    }
    private global::Sungero.Company.IEmployee _Assignee;
    public virtual global::Sungero.Company.IEmployee Assignee
    {
      get
      {
        return this._Assignee;
      }

      set
      {
        this.SetPropertyValue("Assignee", this._Assignee, value, (propertyValue) => { this._Assignee = propertyValue; }, this.AssigneeChangedHandler);
      }
    }



    protected override global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Workflow.ITaskObservers> CreateObserversCollection()
    {
      return new global::Sungero.Domain.ChildEntityCollection<global::Sungero.ExchangeCore.IIncomingInvitationTaskObservers>() { RootEntity = this };
    }


    protected override global::Sungero.Domain.Shared.EntityCreatingFromServerHandler CreateCreatingFromServerHandler(
      global::Sungero.Domain.Shared.IEntity entitySource)
    {
      return new global::Sungero.ExchangeCore.IncomingInvitationTaskCreatingFromServerHandler((global::Sungero.ExchangeCore.IIncomingInvitationTask)entitySource, this.Info);
    }

    #region Framework events

    protected void BoxChangedHandler()
    {
      var args = new global::Sungero.ExchangeCore.Shared.IncomingInvitationTaskBoxChangedEventArgs(this.State.Properties.Box, this.Box, this);
     ((global::Sungero.ExchangeCore.IncomingInvitationTaskSharedHandlers)this.SharedHandlers).BoxChanged(args);
    }

    protected void CounterpartyChangedHandler()
    {
      var args = new global::Sungero.ExchangeCore.Shared.IncomingInvitationTaskCounterpartyChangedEventArgs(this.State.Properties.Counterparty, this.Counterparty, this);
     ((global::Sungero.ExchangeCore.IncomingInvitationTaskSharedHandlers)this.SharedHandlers).CounterpartyChanged(args);
    }

    protected void AssigneeChangedHandler()
    {
      var args = new global::Sungero.ExchangeCore.Shared.IncomingInvitationTaskAssigneeChangedEventArgs(this.State.Properties.Assignee, this.Assignee, this);
     ((global::Sungero.ExchangeCore.IncomingInvitationTaskSharedHandlers)this.SharedHandlers).AssigneeChanged(args);
    }


    protected void OrganizationIdChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.OrganizationId, this.OrganizationId, this);
     ((global::Sungero.ExchangeCore.IncomingInvitationTaskSharedHandlers)this.SharedHandlers).OrganizationIdChanged(args);
    }




    #endregion


    public IncomingInvitationTask()
    {
      ((global::Sungero.Workflow.Interfaces.IWorkflowEntity)this).AttachmentCreated += this.AttachmentCreatedHandler;
      ((global::Sungero.Workflow.Interfaces.IWorkflowEntity)this).AttachmentAdded += this.AttachmentAddedHandler;
      ((global::Sungero.Workflow.Interfaces.IWorkflowEntity)this).AttachmentDeleted += this.AttachmentDeletedHandler;


    }

    #region Workflow attachments

    private void AttachmentCreatedHandler(object sender, global::Sungero.Workflow.Interfaces.AttachmentCreatedEventArgs e)
    {
    }

    private void AttachmentAddedHandler(object sender, global::Sungero.Workflow.Interfaces.AttachmentAddedEventArgs e)
    {
    }

    private void AttachmentDeletedHandler(object sender, global::Sungero.Workflow.Interfaces.AttachmentDeletedEventArgs e)
    {
    }
    #endregion

  }
}

// ==================================================================
// IncomingInvitationTaskHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.ExchangeCore
{
  public partial class IncomingInvitationTaskBoxPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.EntityPropertyFilteringServerHandler
    where T : class, global::Sungero.ExchangeCore.IBusinessUnitBox
  {
    private global::Sungero.ExchangeCore.IIncomingInvitationTask _obj
    {
      get { return (global::Sungero.ExchangeCore.IIncomingInvitationTask)this.Entity; }
    }

    public virtual global::System.Linq.IQueryable<T> BoxFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertyFilteringEventArgs e)
    {
      return query;
    }

    public IncomingInvitationTaskBoxPropertyFilteringServerHandler(global::Sungero.ExchangeCore.IIncomingInvitationTask entity)
      : base(entity)
    {
    }
  }

  public partial class IncomingInvitationTaskBoxSearchPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.SearchPropertyFilteringServerHandler
    where T : class, global::Sungero.ExchangeCore.IBusinessUnitBox
  {

    public virtual global::System.Linq.IQueryable<T> BoxSearchDialogFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertySearchDialogFilteringEventArgs e)
    {
      return query;
    }

    public IncomingInvitationTaskBoxSearchPropertyFilteringServerHandler()
      : base()
    {
    }
  }

  public partial class IncomingInvitationTaskCounterpartyPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.EntityPropertyFilteringServerHandler
    where T : class, global::Sungero.Parties.ICounterparty
  {
    private global::Sungero.ExchangeCore.IIncomingInvitationTask _obj
    {
      get { return (global::Sungero.ExchangeCore.IIncomingInvitationTask)this.Entity; }
    }

    public virtual global::System.Linq.IQueryable<T> CounterpartyFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertyFilteringEventArgs e)
    {
      return query;
    }

    public IncomingInvitationTaskCounterpartyPropertyFilteringServerHandler(global::Sungero.ExchangeCore.IIncomingInvitationTask entity)
      : base(entity)
    {
    }
  }

  public partial class IncomingInvitationTaskCounterpartySearchPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.SearchPropertyFilteringServerHandler
    where T : class, global::Sungero.Parties.ICounterparty
  {

    public virtual global::System.Linq.IQueryable<T> CounterpartySearchDialogFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertySearchDialogFilteringEventArgs e)
    {
      return query;
    }

    public IncomingInvitationTaskCounterpartySearchPropertyFilteringServerHandler()
      : base()
    {
    }
  }

  public partial class IncomingInvitationTaskAssigneePropertyFilteringServerHandler<T>
    : global::Sungero.Domain.EntityPropertyFilteringServerHandler
    where T : class, global::Sungero.Company.IEmployee
  {
    private global::Sungero.ExchangeCore.IIncomingInvitationTask _obj
    {
      get { return (global::Sungero.ExchangeCore.IIncomingInvitationTask)this.Entity; }
    }

    public virtual global::System.Linq.IQueryable<T> AssigneeFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertyFilteringEventArgs e)
    {
      return query;
    }

    public IncomingInvitationTaskAssigneePropertyFilteringServerHandler(global::Sungero.ExchangeCore.IIncomingInvitationTask entity)
      : base(entity)
    {
    }
  }

  public partial class IncomingInvitationTaskAssigneeSearchPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.SearchPropertyFilteringServerHandler
    where T : class, global::Sungero.CoreEntities.IRecipient
  {

    public virtual global::System.Linq.IQueryable<T> AssigneeSearchDialogFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertySearchDialogFilteringEventArgs e)
    {
      return query;
    }

    public IncomingInvitationTaskAssigneeSearchPropertyFilteringServerHandler()
      : base()
    {
    }
  }



  public partial class IncomingInvitationTaskFilteringServerHandler<T>
    : global::Sungero.Domain.EntityFilteringServerHandler<T>  
    where T : class, global::Sungero.ExchangeCore.IIncomingInvitationTask
  {
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    protected new global::Sungero.ExchangeCore.IIncomingInvitationTaskFilterState Filter { get; private set; }

    private global::Sungero.ExchangeCore.IIncomingInvitationTaskFilterState _filter
    {
      get
      {
        return this.Filter;
      }
    }

    public IncomingInvitationTaskFilteringServerHandler(global::Sungero.ExchangeCore.IIncomingInvitationTaskFilterState filter)
    : base()
    {
      this.Filter = filter;
    }

    protected IncomingInvitationTaskFilteringServerHandler()
    {
    }

    public override global::System.Linq.IQueryable<T> Filtering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.FilteringEventArgs e)
    {
      return query;
    }


  }

  public partial class IncomingInvitationTaskSearchDialogServerHandler : global::Sungero.Workflow.TaskSearchDialogServerHandler
   {
     private global::Sungero.ExchangeCore.Server.IncomingInvitationTaskSearchDialogModel _dialog
     {
       get
       {
         return (global::Sungero.ExchangeCore.Server.IncomingInvitationTaskSearchDialogModel)this.Dialog;
       }
     }

     public IncomingInvitationTaskSearchDialogServerHandler(global::Sungero.ExchangeCore.Server.IncomingInvitationTaskSearchDialogModel dialog)
       : base(dialog)
     {
     }
   }

  public partial class IncomingInvitationTaskServerHandlers : global::Sungero.Workflow.TaskServerHandlers
  {
    private global::Sungero.ExchangeCore.IIncomingInvitationTask _obj
    {
      get { return (global::Sungero.ExchangeCore.IIncomingInvitationTask)this.Entity; }
    }

    public IncomingInvitationTaskServerHandlers(global::Sungero.ExchangeCore.IIncomingInvitationTask entity)
      : base(entity)
    {
    }
  }

  public partial class IncomingInvitationTaskCreatingFromServerHandler : global::Sungero.Workflow.TaskCreatingFromServerHandler
  {
    private global::Sungero.ExchangeCore.IIncomingInvitationTask _source
    {
      get { return (global::Sungero.ExchangeCore.IIncomingInvitationTask)this.Source; }
    }

    private global::Sungero.ExchangeCore.IIncomingInvitationTaskInfo _info
    {
      get { return (global::Sungero.ExchangeCore.IIncomingInvitationTaskInfo)this._Info; }
    }

    public IncomingInvitationTaskCreatingFromServerHandler(global::Sungero.ExchangeCore.IIncomingInvitationTask source, global::Sungero.ExchangeCore.IIncomingInvitationTaskInfo info)
      : base(source, info)
    {
    }
  }

}

// ==================================================================
// IncomingInvitationTaskEventArgs.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.ExchangeCore.Server
{
}

// ==================================================================
// IncomingInvitationTaskAccessRights.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.ExchangeCore.Server
{
  public class IncomingInvitationTaskAccessRights : 
    Sungero.Workflow.Server.TaskAccessRights, Sungero.ExchangeCore.IIncomingInvitationTaskAccessRights
  {

    public IncomingInvitationTaskAccessRights(global::Sungero.Domain.Shared.IEntity entity) : base(entity)
    {
    }
  }

  public class IncomingInvitationTaskTypeAccessRights : 
    Sungero.Workflow.Server.TaskTypeAccessRights, Sungero.ExchangeCore.IIncomingInvitationTaskAccessRights
  {

    public IncomingInvitationTaskTypeAccessRights(global::System.Type entityType) : base(entityType)
    {
    }
  }
}

// ==================================================================
// IncomingInvitationTaskRepositoryImplementer.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.ExchangeCore.Server
{
    public class IncomingInvitationTaskRepositoryImplementer<T> : 
      global::Sungero.Workflow.Server.TaskRepositoryImplementer<T>,
      global::Sungero.ExchangeCore.IIncomingInvitationTaskRepositoryImplementer<T>
      where T : global::Sungero.ExchangeCore.IIncomingInvitationTask 
    {
       public new global::Sungero.ExchangeCore.IIncomingInvitationTaskAccessRights AccessRights
       {
          get { return (global::Sungero.ExchangeCore.IIncomingInvitationTaskAccessRights)base.AccessRights; }
       }

       public new global::Sungero.ExchangeCore.IIncomingInvitationTaskInfo Info
       {
          get { return (global::Sungero.ExchangeCore.IIncomingInvitationTaskInfo)base.Info; }
       }

       protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
       {
         return new global::Sungero.ExchangeCore.Server.IncomingInvitationTaskTypeAccessRights(typeof(T));
       }
    }
}

// ==================================================================
// IncomingInvitationTaskPanelNavigationFilters.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.ExchangeCore.Server
{
}

// ==================================================================
// IncomingInvitationTaskServerFunctions.g.cs
// ==================================================================

namespace Sungero.ExchangeCore.Server
{
  public partial class IncomingInvitationTaskFunctions : global::Sungero.Workflow.Server.TaskFunctions
  {
    private global::Sungero.ExchangeCore.IIncomingInvitationTask _obj
    {
      get { return (global::Sungero.ExchangeCore.IIncomingInvitationTask)this.Entity; }
    }

    public IncomingInvitationTaskFunctions(global::Sungero.ExchangeCore.IIncomingInvitationTask entity) : base(entity) { }
  }
}

// ==================================================================
// IncomingInvitationTaskFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.ExchangeCore.Functions
{
  internal static class IncomingInvitationTask
  {
    /// <redirect project="Sungero.ExchangeCore.Server" type="Sungero.ExchangeCore.Server.IncomingInvitationTaskFunctions" />
    internal static  global::Sungero.ExchangeCore.IIncomingInvitationTask Create(global::Sungero.Parties.ICounterparty counterparty, global::Sungero.ExchangeCore.IBusinessUnitBox box, global::System.String organizationId, global::System.String comment)
    {
      return global::Sungero.ExchangeCore.Server.IncomingInvitationTaskFunctions.Create(counterparty, box, organizationId, comment);
    }

  }
}

// ==================================================================
// IncomingInvitationTaskServerPublicFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.ExchangeCore.Server
{
  public class IncomingInvitationTaskServerPublicFunctions : global::Sungero.ExchangeCore.Server.IIncomingInvitationTaskServerPublicFunctions
  {
  }
}

// ==================================================================
// IncomingInvitationTaskQueries.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.ExchangeCore.Queries
{
  public class IncomingInvitationTask
  {
    private static global::Sungero.Domain.SqlQueryResolver resolver = new global::Sungero.Domain.SqlQueryResolver("Sungero.ExchangeCore.Server.IncomingInvitationTask.IncomingInvitationTaskQueries.xml", System.Reflection.Assembly.GetExecutingAssembly());
  }
}

// ==================================================================
// IncomingInvitationTaskBlock.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.ExchangeCore.Server
{
  public class IncomingInvitationTaskArguments: global::Sungero.Workflow.Server.Route.TaskStartEventArguments<IncomingInvitationTaskBlock, global::Sungero.Workflow.TaskBlock>
  {
    public IncomingInvitationTaskArguments(IncomingInvitationTaskBlock block) : base(block) { }
  }

  public class IncomingInvitationTaskEndBlockEventArguments: global::Sungero.Workflow.Server.Route.TaskEndBlockEventArguments<IncomingInvitationTaskBlock, global::Sungero.Workflow.TaskBlock, Sungero.ExchangeCore.IIncomingInvitationTask> 
  {
    public IncomingInvitationTaskEndBlockEventArguments(IncomingInvitationTaskBlock block) : base(block) { }
  }

  public partial class IncomingInvitationTaskBlock : global::Sungero.Workflow.Blocks.TaskBlockWrapper<global::Sungero.Workflow.TaskBlock>    
  {
    public virtual global::System.String OrganizationId
    {
      get { return this.GetCustomProperty<global::System.String>("OrganizationId"); }
      set { this.SetCustomProperty("OrganizationId", value); }
    }

    public virtual global::Sungero.ExchangeCore.IBusinessUnitBox Box
    {
      get { return this.GetCustomNavigationProperty<global::Sungero.ExchangeCore.IBusinessUnitBox>("Box"); }
      set { this.SetCustomNavigationProperty("Box", value); }
    }
    public virtual global::Sungero.Parties.ICounterparty Counterparty
    {
      get { return this.GetCustomNavigationProperty<global::Sungero.Parties.ICounterparty>("Counterparty"); }
      set { this.SetCustomNavigationProperty("Counterparty", value); }
    }
    public virtual global::Sungero.Company.IEmployee Assignee
    {
      get { return this.GetCustomNavigationProperty<global::Sungero.Company.IEmployee>("Assignee"); }
      set { this.SetCustomNavigationProperty("Assignee", value); }
    }




    public IncomingInvitationTaskBlock(global::Sungero.Workflow.TaskBlock block) : base(block) { }
  }
}

// ==================================================================
// IncomingInvitationTaskChildWrappers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.ExchangeCore.Server
{
}

// ==================================================================
// IncomingInvitationTaskRouteHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.ExchangeCore.Server
{
  public partial class IncomingInvitationTaskRouteHandlers{
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    protected global::Sungero.Workflow.ITask Task { get; private set; }

    private global::Sungero.ExchangeCore.IIncomingInvitationTask _obj
    {
      get { return (global::Sungero.ExchangeCore.IIncomingInvitationTask)this.Task; }
    }


    protected readonly int _schemeVersion;

    public IncomingInvitationTaskRouteHandlers(global::Sungero.ExchangeCore.IIncomingInvitationTask task, int schemeVersion) 
    {
      this.Task = task;
      this._schemeVersion = schemeVersion;
    }


    [global::System.ObsoleteAttribute("Используйте ExtendedSchemeVersions")]
    private static class SchemeVersions
    {
      public static readonly int V1 = 1;
}

    }
}
