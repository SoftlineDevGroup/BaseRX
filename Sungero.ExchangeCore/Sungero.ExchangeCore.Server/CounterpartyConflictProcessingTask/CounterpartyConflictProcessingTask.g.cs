
// ==================================================================
// CounterpartyConflictProcessingTask.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.ExchangeCore.Server
{
    public class CounterpartyConflictProcessingTaskFilter<T> :
      global::Sungero.Workflow.Server.TaskFilter<T>
      where T : class, global::Sungero.ExchangeCore.ICounterpartyConflictProcessingTask
    {
      protected new global::Sungero.ExchangeCore.ICounterpartyConflictProcessingTaskFilterState Filter { get; private set; }

      private global::Sungero.ExchangeCore.ICounterpartyConflictProcessingTaskFilterState filter
      {
        get
        {
          return this.Filter;
        }
      }

      protected override global::System.Linq.IQueryable<T> ApplyAppliedFilter(global::System.Linq.IQueryable<T> query)
      {
        return base.ApplyAppliedFilter(query);
      }

      public CounterpartyConflictProcessingTaskFilter(global::Sungero.ExchangeCore.ICounterpartyConflictProcessingTaskFilterState filter)
      : base()
      {
        this.Filter = filter;
      }

      protected CounterpartyConflictProcessingTaskFilter()
      {
      }
    }
    public class CounterpartyConflictProcessingTaskSearchDialogModel : global::Sungero.Workflow.Server.TaskSearchDialogModel
        {
                  public override global::System.Int32? Id { get; protected set; }
                  public override global::System.String Subject { get; protected set; }


                  public override global::System.Collections.Generic.IEnumerable<Sungero.CoreEntities.IRecipient> Author { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<Sungero.Core.Enumeration> Status { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<Sungero.Core.Enumeration> Importance { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<CommonLibrary.DateRangeValue> Started { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<CommonLibrary.DateRangeValue> MaxDeadline { get; protected set; }



                  public virtual global::System.Collections.Generic.IEnumerable<Sungero.CoreEntities.IRecipient> Assignee { get; protected set; }


                   [Sungero.Domain.Shared.HideInDevStudio()]
                   public new CounterpartyConflictProcessingTaskObserversModel Observers { get { return (CounterpartyConflictProcessingTaskObserversModel)base.Observers; } protected set { base.Observers = value; } }

        }

      public class CounterpartyConflictProcessingTaskObserversModel : global::Sungero.Workflow.Server.TaskObserversModel
          {
                      [Sungero.Domain.Shared.HideInDevStudio()]
                      public override global::System.Int32? Id { get; protected set; }




         }




  public class CounterpartyConflictProcessingTaskFilterForAssignee<TQueryEntity, TSourceEntity>
    : global::Sungero.Domain.EntityPropertyFilterBase<TQueryEntity, TSourceEntity>
    where TQueryEntity : class, global::Sungero.Company.IEmployee
    where TSourceEntity : class, global::Sungero.ExchangeCore.ICounterpartyConflictProcessingTask
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, TSourceEntity sourceEntity)
    {
      var args = new global::Sungero.Domain.PropertyFilteringEventArgs(sourceEntity);
      var result = new global::Sungero.ExchangeCore.CounterpartyConflictProcessingTaskAssigneePropertyFilteringServerHandler<TQueryEntity>(sourceEntity).AssigneeFiltering(query, args);
      if (args.DisableUiFiltering)
        global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public CounterpartyConflictProcessingTaskFilterForAssignee(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class CounterpartyConflictProcessingTaskSearchFilterForAssignee<TQueryEntity>
    : global::Sungero.Domain.SearchDialogPropertyFilter<TQueryEntity>
    where TQueryEntity : class, global::Sungero.CoreEntities.IRecipient
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, System.Guid entityType)
    {
      var args = new global::Sungero.Domain.PropertySearchDialogFilteringEventArgs(entityType);
      var result = new global::Sungero.ExchangeCore.CounterpartyConflictProcessingTaskAssigneeSearchPropertyFilteringServerHandler<TQueryEntity>().AssigneeSearchDialogFiltering(query, args);
      if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public CounterpartyConflictProcessingTaskSearchFilterForAssignee(string propertyName)
      : base(propertyName)
    {
    }
  }



  [global::Sungero.Domain.Filter(typeof(global::Sungero.ExchangeCore.Server.CounterpartyConflictProcessingTaskFilter<global::Sungero.ExchangeCore.ICounterpartyConflictProcessingTask>))]
  [global::Sungero.Domain.PropertyFilter(typeof(global::Sungero.ExchangeCore.Server.CounterpartyConflictProcessingTaskFilterForAssignee<global::Sungero.Company.IEmployee, global::Sungero.ExchangeCore.ICounterpartyConflictProcessingTask>), "Assignee")]
  [global::Sungero.Domain.SearchPropertyFilter(typeof(global::Sungero.ExchangeCore.Server.CounterpartyConflictProcessingTaskSearchFilterForAssignee<global::Sungero.CoreEntities.IRecipient>), "Assignee")]


  public class CounterpartyConflictProcessingTask :
    global::Sungero.Workflow.Server.Task, global::Sungero.ExchangeCore.ICounterpartyConflictProcessingTask, global::Sungero.Domain.Shared.ISecurableEntity, global::Sungero.Domain.IInternalSecurableEntity
  {
    public static new readonly global::System.Guid ClassTypeGuid = global::System.Guid.Parse("03a51b42-a322-4574-90bb-212ea03ed71e");

    public override global::System.Guid TypeGuid
    {
      get { return global::Sungero.ExchangeCore.Server.CounterpartyConflictProcessingTask.ClassTypeGuid; }
    }

    public override string TypeName
    {
      get { return "Sungero.ExchangeCore.ICounterpartyConflictProcessingTask, Sungero.Domain.Interfaces"; }
    }

    public override string DisplayValue
    {
      get { return this.Subject; }
      set { this.Subject = value; }
    }

    public new virtual global::Sungero.ExchangeCore.ICounterpartyConflictProcessingTaskState State
    {
      get { return (global::Sungero.ExchangeCore.ICounterpartyConflictProcessingTaskState)base.State; }
    }

    protected override global::Sungero.Domain.Shared.IEntityState CreateState()
    {
      return new global::Sungero.ExchangeCore.Shared.CounterpartyConflictProcessingTaskState(this);
    }

    public new virtual global::Sungero.ExchangeCore.ICounterpartyConflictProcessingTaskInfo Info
    {
      get { return (global::Sungero.ExchangeCore.ICounterpartyConflictProcessingTaskInfo)base.Info; }
    }

    public new virtual global::Sungero.ExchangeCore.ICounterpartyConflictProcessingTaskAccessRights AccessRights
    {
      get { return (global::Sungero.ExchangeCore.ICounterpartyConflictProcessingTaskAccessRights)base.AccessRights; }
    }

    protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
    {
      return new global::Sungero.ExchangeCore.Server.CounterpartyConflictProcessingTaskAccessRights(this);
    }

    protected override global::Sungero.Domain.EntityFunctions CreateServerFunctions()
    {
      return new global::Sungero.ExchangeCore.Server.CounterpartyConflictProcessingTaskFunctions(this);
    }

    protected override global::Sungero.Domain.Shared.EntityFunctions CreateSharedFunctions()
    {
      return new global::Sungero.ExchangeCore.Shared.CounterpartyConflictProcessingTaskFunctions(this);
    }

    protected override object CreateHandlers() {
      return new global::Sungero.ExchangeCore.CounterpartyConflictProcessingTaskServerHandlers(this);
    }

    protected override object CreateSharedHandlers() {
      return new global::Sungero.ExchangeCore.CounterpartyConflictProcessingTaskSharedHandlers(this);
    }







    private global::Sungero.Company.IEmployee _Assignee;
    public virtual global::Sungero.Company.IEmployee Assignee
    {
      get
      {
        return this._Assignee;
      }

      set
      {
        this.SetPropertyValue("Assignee", this._Assignee, value, (propertyValue) => { this._Assignee = propertyValue; }, this.AssigneeChangedHandler);
      }
    }



    protected override global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Workflow.ITaskObservers> CreateObserversCollection()
    {
      return new global::Sungero.Domain.ChildEntityCollection<global::Sungero.ExchangeCore.ICounterpartyConflictProcessingTaskObservers>() { RootEntity = this };
    }


    protected override global::Sungero.Domain.Shared.EntityCreatingFromServerHandler CreateCreatingFromServerHandler(
      global::Sungero.Domain.Shared.IEntity entitySource)
    {
      return new global::Sungero.ExchangeCore.CounterpartyConflictProcessingTaskCreatingFromServerHandler((global::Sungero.ExchangeCore.ICounterpartyConflictProcessingTask)entitySource, this.Info);
    }

    #region Framework events

    protected void AssigneeChangedHandler()
    {
      var args = new global::Sungero.ExchangeCore.Shared.CounterpartyConflictProcessingTaskAssigneeChangedEventArgs(this.State.Properties.Assignee, this.Assignee, this);
     ((global::Sungero.ExchangeCore.CounterpartyConflictProcessingTaskSharedHandlers)this.SharedHandlers).AssigneeChanged(args);
    }





    #endregion


    public CounterpartyConflictProcessingTask()
    {
      ((global::Sungero.Workflow.Interfaces.IWorkflowEntity)this).AttachmentCreated += this.AttachmentCreatedHandler;
      ((global::Sungero.Workflow.Interfaces.IWorkflowEntity)this).AttachmentAdded += this.AttachmentAddedHandler;
      ((global::Sungero.Workflow.Interfaces.IWorkflowEntity)this).AttachmentDeleted += this.AttachmentDeletedHandler;


    }

    #region Workflow attachments

    private void AttachmentCreatedHandler(object sender, global::Sungero.Workflow.Interfaces.AttachmentCreatedEventArgs e)
    {
    }

    private void AttachmentAddedHandler(object sender, global::Sungero.Workflow.Interfaces.AttachmentAddedEventArgs e)
    {
    }

    private void AttachmentDeletedHandler(object sender, global::Sungero.Workflow.Interfaces.AttachmentDeletedEventArgs e)
    {
    }
    #endregion

  }
}

// ==================================================================
// CounterpartyConflictProcessingTaskHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.ExchangeCore
{
  public partial class CounterpartyConflictProcessingTaskAssigneePropertyFilteringServerHandler<T>
    : global::Sungero.Domain.EntityPropertyFilteringServerHandler
    where T : class, global::Sungero.Company.IEmployee
  {
    private global::Sungero.ExchangeCore.ICounterpartyConflictProcessingTask _obj
    {
      get { return (global::Sungero.ExchangeCore.ICounterpartyConflictProcessingTask)this.Entity; }
    }

    public virtual global::System.Linq.IQueryable<T> AssigneeFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertyFilteringEventArgs e)
    {
      return query;
    }

    public CounterpartyConflictProcessingTaskAssigneePropertyFilteringServerHandler(global::Sungero.ExchangeCore.ICounterpartyConflictProcessingTask entity)
      : base(entity)
    {
    }
  }

  public partial class CounterpartyConflictProcessingTaskAssigneeSearchPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.SearchPropertyFilteringServerHandler
    where T : class, global::Sungero.CoreEntities.IRecipient
  {

    public virtual global::System.Linq.IQueryable<T> AssigneeSearchDialogFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertySearchDialogFilteringEventArgs e)
    {
      return query;
    }

    public CounterpartyConflictProcessingTaskAssigneeSearchPropertyFilteringServerHandler()
      : base()
    {
    }
  }



  public partial class CounterpartyConflictProcessingTaskFilteringServerHandler<T>
    : global::Sungero.Domain.EntityFilteringServerHandler<T>  
    where T : class, global::Sungero.ExchangeCore.ICounterpartyConflictProcessingTask
  {
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    protected new global::Sungero.ExchangeCore.ICounterpartyConflictProcessingTaskFilterState Filter { get; private set; }

    private global::Sungero.ExchangeCore.ICounterpartyConflictProcessingTaskFilterState _filter
    {
      get
      {
        return this.Filter;
      }
    }

    public CounterpartyConflictProcessingTaskFilteringServerHandler(global::Sungero.ExchangeCore.ICounterpartyConflictProcessingTaskFilterState filter)
    : base()
    {
      this.Filter = filter;
    }

    protected CounterpartyConflictProcessingTaskFilteringServerHandler()
    {
    }

    public override global::System.Linq.IQueryable<T> Filtering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.FilteringEventArgs e)
    {
      return query;
    }


  }

  public partial class CounterpartyConflictProcessingTaskSearchDialogServerHandler : global::Sungero.Workflow.TaskSearchDialogServerHandler
   {
     private global::Sungero.ExchangeCore.Server.CounterpartyConflictProcessingTaskSearchDialogModel _dialog
     {
       get
       {
         return (global::Sungero.ExchangeCore.Server.CounterpartyConflictProcessingTaskSearchDialogModel)this.Dialog;
       }
     }

     public CounterpartyConflictProcessingTaskSearchDialogServerHandler(global::Sungero.ExchangeCore.Server.CounterpartyConflictProcessingTaskSearchDialogModel dialog)
       : base(dialog)
     {
     }
   }

  public partial class CounterpartyConflictProcessingTaskServerHandlers : global::Sungero.Workflow.TaskServerHandlers
  {
    private global::Sungero.ExchangeCore.ICounterpartyConflictProcessingTask _obj
    {
      get { return (global::Sungero.ExchangeCore.ICounterpartyConflictProcessingTask)this.Entity; }
    }

    public CounterpartyConflictProcessingTaskServerHandlers(global::Sungero.ExchangeCore.ICounterpartyConflictProcessingTask entity)
      : base(entity)
    {
    }
  }

  public partial class CounterpartyConflictProcessingTaskCreatingFromServerHandler : global::Sungero.Workflow.TaskCreatingFromServerHandler
  {
    private global::Sungero.ExchangeCore.ICounterpartyConflictProcessingTask _source
    {
      get { return (global::Sungero.ExchangeCore.ICounterpartyConflictProcessingTask)this.Source; }
    }

    private global::Sungero.ExchangeCore.ICounterpartyConflictProcessingTaskInfo _info
    {
      get { return (global::Sungero.ExchangeCore.ICounterpartyConflictProcessingTaskInfo)this._Info; }
    }

    public CounterpartyConflictProcessingTaskCreatingFromServerHandler(global::Sungero.ExchangeCore.ICounterpartyConflictProcessingTask source, global::Sungero.ExchangeCore.ICounterpartyConflictProcessingTaskInfo info)
      : base(source, info)
    {
    }
  }

}

// ==================================================================
// CounterpartyConflictProcessingTaskEventArgs.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.ExchangeCore.Server
{
}

// ==================================================================
// CounterpartyConflictProcessingTaskAccessRights.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.ExchangeCore.Server
{
  public class CounterpartyConflictProcessingTaskAccessRights : 
    Sungero.Workflow.Server.TaskAccessRights, Sungero.ExchangeCore.ICounterpartyConflictProcessingTaskAccessRights
  {

    public CounterpartyConflictProcessingTaskAccessRights(global::Sungero.Domain.Shared.IEntity entity) : base(entity)
    {
    }
  }

  public class CounterpartyConflictProcessingTaskTypeAccessRights : 
    Sungero.Workflow.Server.TaskTypeAccessRights, Sungero.ExchangeCore.ICounterpartyConflictProcessingTaskAccessRights
  {

    public CounterpartyConflictProcessingTaskTypeAccessRights(global::System.Type entityType) : base(entityType)
    {
    }
  }
}

// ==================================================================
// CounterpartyConflictProcessingTaskRepositoryImplementer.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.ExchangeCore.Server
{
    public class CounterpartyConflictProcessingTaskRepositoryImplementer<T> : 
      global::Sungero.Workflow.Server.TaskRepositoryImplementer<T>,
      global::Sungero.ExchangeCore.ICounterpartyConflictProcessingTaskRepositoryImplementer<T>
      where T : global::Sungero.ExchangeCore.ICounterpartyConflictProcessingTask 
    {
       public new global::Sungero.ExchangeCore.ICounterpartyConflictProcessingTaskAccessRights AccessRights
       {
          get { return (global::Sungero.ExchangeCore.ICounterpartyConflictProcessingTaskAccessRights)base.AccessRights; }
       }

       public new global::Sungero.ExchangeCore.ICounterpartyConflictProcessingTaskInfo Info
       {
          get { return (global::Sungero.ExchangeCore.ICounterpartyConflictProcessingTaskInfo)base.Info; }
       }

       protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
       {
         return new global::Sungero.ExchangeCore.Server.CounterpartyConflictProcessingTaskTypeAccessRights(typeof(T));
       }
    }
}

// ==================================================================
// CounterpartyConflictProcessingTaskPanelNavigationFilters.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.ExchangeCore.Server
{
}

// ==================================================================
// CounterpartyConflictProcessingTaskServerFunctions.g.cs
// ==================================================================

namespace Sungero.ExchangeCore.Server
{
  public partial class CounterpartyConflictProcessingTaskFunctions : global::Sungero.Workflow.Server.TaskFunctions
  {
    private global::Sungero.ExchangeCore.ICounterpartyConflictProcessingTask _obj
    {
      get { return (global::Sungero.ExchangeCore.ICounterpartyConflictProcessingTask)this.Entity; }
    }

    public CounterpartyConflictProcessingTaskFunctions(global::Sungero.ExchangeCore.ICounterpartyConflictProcessingTask entity) : base(entity) { }
  }
}

// ==================================================================
// CounterpartyConflictProcessingTaskFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.ExchangeCore.Functions
{
  internal static class CounterpartyConflictProcessingTask
  {
    /// <redirect project="Sungero.ExchangeCore.Server" type="Sungero.ExchangeCore.Server.CounterpartyConflictProcessingTaskFunctions" />
    internal static  global::Sungero.ExchangeCore.ICounterpartyConflictProcessingTask Create(global::Sungero.ExchangeCore.IBusinessUnitBox box, NpoComputer.DCX.Common.Organization party, global::System.Collections.Generic.List<global::Sungero.Parties.ICounterparty> parties)
    {
      return global::Sungero.ExchangeCore.Server.CounterpartyConflictProcessingTaskFunctions.Create(box, party, parties);
    }

  }
}

// ==================================================================
// CounterpartyConflictProcessingTaskServerPublicFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.ExchangeCore.Server
{
  public class CounterpartyConflictProcessingTaskServerPublicFunctions : global::Sungero.ExchangeCore.Server.ICounterpartyConflictProcessingTaskServerPublicFunctions
  {
  }
}

// ==================================================================
// CounterpartyConflictProcessingTaskQueries.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.ExchangeCore.Queries
{
  public class CounterpartyConflictProcessingTask
  {
    private static global::Sungero.Domain.SqlQueryResolver resolver = new global::Sungero.Domain.SqlQueryResolver("Sungero.ExchangeCore.Server.CounterpartyConflictProcessingTask.CounterpartyConflictProcessingTaskQueries.xml", System.Reflection.Assembly.GetExecutingAssembly());
  }
}

// ==================================================================
// CounterpartyConflictProcessingTaskBlock.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.ExchangeCore.Server
{
  public class CounterpartyConflictProcessingTaskArguments: global::Sungero.Workflow.Server.Route.TaskStartEventArguments<CounterpartyConflictProcessingTaskBlock, global::Sungero.Workflow.TaskBlock>
  {
    public CounterpartyConflictProcessingTaskArguments(CounterpartyConflictProcessingTaskBlock block) : base(block) { }
  }

  public class CounterpartyConflictProcessingTaskEndBlockEventArguments: global::Sungero.Workflow.Server.Route.TaskEndBlockEventArguments<CounterpartyConflictProcessingTaskBlock, global::Sungero.Workflow.TaskBlock, Sungero.ExchangeCore.ICounterpartyConflictProcessingTask> 
  {
    public CounterpartyConflictProcessingTaskEndBlockEventArguments(CounterpartyConflictProcessingTaskBlock block) : base(block) { }
  }

  public partial class CounterpartyConflictProcessingTaskBlock : global::Sungero.Workflow.Blocks.TaskBlockWrapper<global::Sungero.Workflow.TaskBlock>    
  {
    public virtual global::Sungero.Company.IEmployee Assignee
    {
      get { return this.GetCustomNavigationProperty<global::Sungero.Company.IEmployee>("Assignee"); }
      set { this.SetCustomNavigationProperty("Assignee", value); }
    }




    public CounterpartyConflictProcessingTaskBlock(global::Sungero.Workflow.TaskBlock block) : base(block) { }
  }
}

// ==================================================================
// CounterpartyConflictProcessingTaskChildWrappers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.ExchangeCore.Server
{
}

// ==================================================================
// CounterpartyConflictProcessingTaskRouteHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.ExchangeCore.Server
{
  public partial class CounterpartyConflictProcessingTaskRouteHandlers{
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    protected global::Sungero.Workflow.ITask Task { get; private set; }

    private global::Sungero.ExchangeCore.ICounterpartyConflictProcessingTask _obj
    {
      get { return (global::Sungero.ExchangeCore.ICounterpartyConflictProcessingTask)this.Task; }
    }


    protected readonly int _schemeVersion;

    public CounterpartyConflictProcessingTaskRouteHandlers(global::Sungero.ExchangeCore.ICounterpartyConflictProcessingTask task, int schemeVersion) 
    {
      this.Task = task;
      this._schemeVersion = schemeVersion;
    }


    [global::System.ObsoleteAttribute("Используйте ExtendedSchemeVersions")]
    private static class SchemeVersions
    {
      public static readonly int V1 = 1;
}

    }
}
