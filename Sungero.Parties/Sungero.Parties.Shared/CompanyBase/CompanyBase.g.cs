
// ==================================================================
// CompanyBaseState.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Parties.Shared
{
  public class CompanyBaseState : 
    global::Sungero.Parties.Shared.CounterpartyState, global::Sungero.Parties.ICompanyBaseState
  {
    public CompanyBaseState(global::Sungero.Parties.ICompanyBase entity) : base(entity) { }

    public new global::Sungero.Parties.ICompanyBasePropertyStates Properties
    {
      get { return (global::Sungero.Parties.ICompanyBasePropertyStates)base.Properties; }
    }

    protected override global::Sungero.Domain.Shared.IEntityPropertyStates CreatePropertyStates(global::Sungero.Domain.Shared.IEntity entity)
    {
      return new global::Sungero.Parties.Shared.CompanyBasePropertyStates(entity);
    }


    public new global::Sungero.Parties.ICompanyBaseControlStates Controls
    {
      get { return (global::Sungero.Parties.ICompanyBaseControlStates)base.Controls; }
    }

    protected override global::Sungero.Domain.Shared.IEntityControlStates CreateControlStates(global::Sungero.Domain.Shared.IEntity entity)
    {
      return new global::Sungero.Parties.Shared.CompanyBaseControlStates(entity);
    }

    public new global::Sungero.Parties.ICompanyBasePageStates Pages
    {
      get { return (global::Sungero.Parties.ICompanyBasePageStates)base.Pages; }
    }

    protected override global::Sungero.Domain.Shared.IEntityPageStates CreatePageStates(global::Sungero.Domain.Shared.IEntity entity)
    {
      return new global::Sungero.Parties.Shared.CompanyBasePageStates(entity);
    }

  }


  public class CompanyBaseControlStates : 
    global::Sungero.Parties.Shared.CounterpartyControlStates, global::Sungero.Parties.ICompanyBaseControlStates
  {

    protected internal CompanyBaseControlStates(global::Sungero.Domain.Shared.IEntity entity) : base(entity) { }
  }
  public class CompanyBasePageStates : 
    global::Sungero.Parties.Shared.CounterpartyPageStates, global::Sungero.Parties.ICompanyBasePageStates
  {

    protected internal CompanyBasePageStates(global::Sungero.Domain.Shared.IEntity entity) : base(entity) { }
  }

  public class CompanyBasePropertyStates : 
    global::Sungero.Parties.Shared.CounterpartyPropertyStates, global::Sungero.Parties.ICompanyBasePropertyStates
  {
            public global::Sungero.Domain.Shared.IPropertyState<global::Sungero.Parties.ICompany> HeadCompany 
            {
              get { return this.InternalHeadCompany; }
            }

            protected virtual global::Sungero.Domain.Shared.IPropertyState<global::Sungero.Parties.ICompany> InternalHeadCompany
            {
              get { return this.GetPropertyState<global::Sungero.Parties.ICompany>("HeadCompany"); }
            }
            public global::Sungero.Domain.Shared.IPropertyState<global::System.String> TRRC 
            {
              get { return this.GetPropertyState<global::System.String>("TRRC"); }
            }
            public global::Sungero.Domain.Shared.IPropertyState<global::System.Boolean?> IsCardReadOnly 
            {
              get { return this.GetPropertyState<global::System.Boolean?>("IsCardReadOnly"); }
            }
            public global::Sungero.Domain.Shared.IPropertyState<global::System.String> LegalName 
            {
              get { return this.GetPropertyState<global::System.String>("LegalName"); }
            }
            public new global::Sungero.Parties.ICompanyBaseExchangeBoxesCollectionPropertyState<global::Sungero.Parties.ICompanyBaseExchangeBoxes> ExchangeBoxes
            {
              get { return (global::Sungero.Parties.ICompanyBaseExchangeBoxesCollectionPropertyState<global::Sungero.Parties.ICompanyBaseExchangeBoxes>)base.ExchangeBoxes; }
            }

            protected override global::Sungero.Parties.ICounterpartyExchangeBoxesCollectionPropertyState<global::Sungero.Parties.ICounterpartyExchangeBoxes> CreateExchangeBoxesState(global::Sungero.Domain.Shared.IEntity entity, string propertyName)
            {
              return new global::Sungero.Parties.Shared.CompanyBaseExchangeBoxesCollectionPropertyState<global::Sungero.Parties.ICompanyBaseExchangeBoxes>(entity, propertyName);
            }


    protected internal CompanyBasePropertyStates(global::Sungero.Domain.Shared.IEntity entity) : base(entity) { }
  }

}

// ==================================================================
// CompanyBaseEventArgs.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Parties.Shared
{  
    public class CompanyBaseHeadCompanyChangedEventArgs : global::Sungero.Domain.Shared.PropertyChangedEventArgs<global::Sungero.Parties.ICompany>
    {
      public CompanyBaseHeadCompanyChangedEventArgs(global::Sungero.Domain.Shared.IPropertyState<global::Sungero.Parties.ICompany> state, global::Sungero.Parties.ICompany newValue, global::Sungero.Domain.Shared.IEntity entity): base(state, newValue, entity) { }
    }





}

// ==================================================================
// CompanyBaseInfo.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Parties.Shared
{
  public class CompanyBaseInfo : 
    global::Sungero.Parties.Shared.CounterpartyInfo, global::Sungero.Parties.ICompanyBaseInfo
  {
    public CompanyBaseInfo(global::System.Type entityType) : base(entityType) { }

    public new global::Sungero.Parties.ICompanyBasePropertiesInfo Properties
    {
      get { return (global::Sungero.Parties.ICompanyBasePropertiesInfo)base.Properties; }
    }

    public new global::Sungero.Parties.ICompanyBaseActionsInfo Actions
    {
      get { return (global::Sungero.Parties.ICompanyBaseActionsInfo)base.Actions; }
    }

    protected override global::Sungero.Domain.Shared.IEntityPropertiesInfo CreateEntityPropertiesInfo(global::System.Type entityType)
    {
      return new global::Sungero.Parties.Shared.CompanyBasePropertiesInfo(entityType);
    }

    protected override global::Sungero.Domain.Shared.IEntityActionsInfo CreateEntityActionsInfo(global::System.Type entityType)
    {
      return new global::Sungero.Parties.Shared.CompanyBaseActionsInfo(entityType);
    }
  }

  public class CompanyBasePropertiesInfo : 
    global::Sungero.Parties.Shared.CounterpartyPropertiesInfo, global::Sungero.Parties.ICompanyBasePropertiesInfo
  {
        public global::Sungero.Domain.Shared.INavigationPropertyInfo<global::Sungero.Parties.ICompanyInfo, global::Sungero.Parties.ICompany> HeadCompany 
        {
          get
          {
             var propertyMetadata = this.GetPropertyMetadata<global::Sungero.Metadata.NavigationPropertyMetadata>("HeadCompany");
             return new global::Sungero.Domain.Shared.NavigationPropertyInfo<global::Sungero.Parties.ICompanyInfo, global::Sungero.Parties.ICompany>(propertyMetadata);
          }
        }
        public global::Sungero.Domain.Shared.IStringPropertyInfo TRRC 
        {
          get
          {
             var propertyMetadata = this.GetPropertyMetadata<global::Sungero.Metadata.StringPropertyMetadata>("TRRC");
             return new global::Sungero.Domain.Shared.StringPropertyInfo(propertyMetadata);
          }
        }
        public global::Sungero.Domain.Shared.IBooleanPropertyInfo IsCardReadOnly 
        {
          get
          {
             var propertyMetadata = this.GetPropertyMetadata<global::Sungero.Metadata.BooleanPropertyMetadata>("IsCardReadOnly");
             return new global::Sungero.Domain.Shared.BooleanPropertyInfo(propertyMetadata);
          }
        }
        public global::Sungero.Domain.Shared.IStringPropertyInfo LegalName 
        {
          get
          {
             var propertyMetadata = this.GetPropertyMetadata<global::Sungero.Metadata.StringPropertyMetadata>("LegalName");
             return new global::Sungero.Domain.Shared.StringPropertyInfo(propertyMetadata);
          }
        }
        public new global::Sungero.Domain.Shared.ICollectionPropertyInfo<global::Sungero.Parties.ICompanyBaseExchangeBoxesPropertiesInfo> ExchangeBoxes
        {
          get
          {
             var propertyMetadata = this.GetPropertyMetadata<global::Sungero.Metadata.CollectionPropertyMetadata>("ExchangeBoxes");
             return new global::Sungero.Domain.Shared.CollectionPropertyInfo<global::Sungero.Parties.ICompanyBaseExchangeBoxesPropertiesInfo>(propertyMetadata);
          }
        }


    protected internal CompanyBasePropertiesInfo(global::System.Type entityType) : base(entityType) { }
  }

  public class CompanyBaseActionsInfo : 
    global::Sungero.Parties.Shared.CounterpartyActionsInfo, global::Sungero.Parties.ICompanyBaseActionsInfo
  {
        public global::Sungero.Domain.Shared.IActionInfo OpenContacts 
        {
          get { return new global::Sungero.Domain.Shared.ActionInfo(this.GetActionMetadata("OpenContacts")); }
        }
        public global::Sungero.Domain.Shared.IActionInfo FillFromService 
        {
          get { return new global::Sungero.Domain.Shared.ActionInfo(this.GetActionMetadata("FillFromService")); }
        }
        public global::Sungero.Domain.Shared.IActionInfo OpenOnDueDiligenceWebsite 
        {
          get { return new global::Sungero.Domain.Shared.ActionInfo(this.GetActionMetadata("OpenOnDueDiligenceWebsite")); }
        }


    protected internal CompanyBaseActionsInfo(global::System.Type entityType) : base(entityType) { }
  }
}

// ==================================================================
// CompanyBaseHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Parties
{
  public partial class CompanyBaseSharedHandlers : global::Sungero.Parties.CounterpartySharedHandlers
  {
    private global::Sungero.Parties.ICompanyBase _obj
    {
      get { return (global::Sungero.Parties.ICompanyBase)this.Entity; }
    }
    public virtual void HeadCompanyChanged(global::Sungero.Parties.Shared.CompanyBaseHeadCompanyChangedEventArgs e) { }


    public virtual void TRRCChanged(global::Sungero.Domain.Shared.StringPropertyChangedEventArgs e) { }


    public virtual void IsCardReadOnlyChanged(global::Sungero.Domain.Shared.BooleanPropertyChangedEventArgs e) { }






    public CompanyBaseSharedHandlers(global::Sungero.Parties.ICompanyBase entity) : base(entity)
    {
    }
  }

}

// ==================================================================
// CompanyBaseResources.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Parties.Shared.CompanyBase
{
  /// <summary>
  /// Represents CompanyBase resources.
  /// </summary>
  public class CompanyBaseResources : global::Sungero.Parties.Shared.Counterparty.CounterpartyResources, global::Sungero.Parties.CompanyBase.ICompanyBaseResources
  {
    public virtual global::CommonLibrary.LocalizedString ErrorCantDeleteDependentCompany
    {
      get
      {
        return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Parties.ICompanyBase) , "ErrorCantDeleteDependentCompany");
      }
    }

    public virtual global::CommonLibrary.LocalizedString ErrorCantDeleteDependentCompanyFormat(params object[] args)
    {
      return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Parties.ICompanyBase), "ErrorCantDeleteDependentCompany", false, args);
    }
    public virtual global::CommonLibrary.LocalizedString IncorrectTinLength
    {
      get
      {
        return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Parties.ICompanyBase) , "IncorrectTinLength");
      }
    }

    public virtual global::CommonLibrary.LocalizedString IncorrectTinLengthFormat(params object[] args)
    {
      return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Parties.ICompanyBase), "IncorrectTinLength", false, args);
    }
    public virtual global::CommonLibrary.LocalizedString TinTrrcDuplicate
    {
      get
      {
        return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Parties.ICompanyBase) , "TinTrrcDuplicate");
      }
    }

    public virtual global::CommonLibrary.LocalizedString TinTrrcDuplicateFormat(params object[] args)
    {
      return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Parties.ICompanyBase), "TinTrrcDuplicate", false, args);
    }
    public virtual global::CommonLibrary.LocalizedString IncorrecPsrnLength
    {
      get
      {
        return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Parties.ICompanyBase) , "IncorrecPsrnLength");
      }
    }

    public virtual global::CommonLibrary.LocalizedString IncorrecPsrnLengthFormat(params object[] args)
    {
      return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Parties.ICompanyBase), "IncorrecPsrnLength", false, args);
    }
    public virtual global::CommonLibrary.LocalizedString IncorrecNceoLength
    {
      get
      {
        return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Parties.ICompanyBase) , "IncorrecNceoLength");
      }
    }

    public virtual global::CommonLibrary.LocalizedString IncorrecNceoLengthFormat(params object[] args)
    {
      return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Parties.ICompanyBase), "IncorrecNceoLength", false, args);
    }
    public virtual global::CommonLibrary.LocalizedString HeadCompanyCyclicReference
    {
      get
      {
        return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Parties.ICompanyBase) , "HeadCompanyCyclicReference");
      }
    }

    public virtual global::CommonLibrary.LocalizedString HeadCompanyCyclicReferenceFormat(params object[] args)
    {
      return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Parties.ICompanyBase), "HeadCompanyCyclicReference", false, args);
    }
    public virtual global::CommonLibrary.LocalizedString NeedFillTinAndTrrcForSendInvitation
    {
      get
      {
        return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Parties.ICompanyBase) , "NeedFillTinAndTrrcForSendInvitation");
      }
    }

    public virtual global::CommonLibrary.LocalizedString NeedFillTinAndTrrcForSendInvitationFormat(params object[] args)
    {
      return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Parties.ICompanyBase), "NeedFillTinAndTrrcForSendInvitation", false, args);
    }
    public virtual global::CommonLibrary.LocalizedString NeedFillTinAndTrrcForCanExchange
    {
      get
      {
        return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Parties.ICompanyBase) , "NeedFillTinAndTrrcForCanExchange");
      }
    }

    public virtual global::CommonLibrary.LocalizedString NeedFillTinAndTrrcForCanExchangeFormat(params object[] args)
    {
      return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Parties.ICompanyBase), "NeedFillTinAndTrrcForCanExchange", false, args);
    }
    public virtual global::CommonLibrary.LocalizedString ErrorNeedFillTinPsrnNameForService
    {
      get
      {
        return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Parties.ICompanyBase) , "ErrorNeedFillTinPsrnNameForService");
      }
    }

    public virtual global::CommonLibrary.LocalizedString ErrorNeedFillTinPsrnNameForServiceFormat(params object[] args)
    {
      return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Parties.ICompanyBase), "ErrorNeedFillTinPsrnNameForService", false, args);
    }
    public virtual global::CommonLibrary.LocalizedString ErrorCompanyNotFoundInService
    {
      get
      {
        return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Parties.ICompanyBase) , "ErrorCompanyNotFoundInService");
      }
    }

    public virtual global::CommonLibrary.LocalizedString ErrorCompanyNotFoundInServiceFormat(params object[] args)
    {
      return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Parties.ICompanyBase), "ErrorCompanyNotFoundInService", false, args);
    }
    public virtual global::CommonLibrary.LocalizedString FillFromServiceSuccess
    {
      get
      {
        return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Parties.ICompanyBase) , "FillFromServiceSuccess");
      }
    }

    public virtual global::CommonLibrary.LocalizedString FillFromServiceSuccessFormat(params object[] args)
    {
      return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Parties.ICompanyBase), "FillFromServiceSuccess", false, args);
    }
    public virtual global::CommonLibrary.LocalizedString FoundSeveralCompaniesInService
    {
      get
      {
        return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Parties.ICompanyBase) , "FoundSeveralCompaniesInService");
      }
    }

    public virtual global::CommonLibrary.LocalizedString FoundSeveralCompaniesInServiceFormat(params object[] args)
    {
      return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Parties.ICompanyBase), "FoundSeveralCompaniesInService", false, args);
    }
    public virtual global::CommonLibrary.LocalizedString ChoseCompanyDialogTitle
    {
      get
      {
        return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Parties.ICompanyBase) , "ChoseCompanyDialogTitle");
      }
    }

    public virtual global::CommonLibrary.LocalizedString ChoseCompanyDialogTitleFormat(params object[] args)
    {
      return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Parties.ICompanyBase), "ChoseCompanyDialogTitle", false, args);
    }
    public virtual global::CommonLibrary.LocalizedString NeedFillTinForDueDiligenceWebsite
    {
      get
      {
        return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Parties.ICompanyBase) , "NeedFillTinForDueDiligenceWebsite");
      }
    }

    public virtual global::CommonLibrary.LocalizedString NeedFillTinForDueDiligenceWebsiteFormat(params object[] args)
    {
      return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Parties.ICompanyBase), "NeedFillTinForDueDiligenceWebsite", false, args);
    }
    public virtual global::CommonLibrary.LocalizedString NeedFillPsrnForDueDiligenceWebsite
    {
      get
      {
        return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Parties.ICompanyBase) , "NeedFillPsrnForDueDiligenceWebsite");
      }
    }

    public virtual global::CommonLibrary.LocalizedString NeedFillPsrnForDueDiligenceWebsiteFormat(params object[] args)
    {
      return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Parties.ICompanyBase), "NeedFillPsrnForDueDiligenceWebsite", false, args);
    }
    public virtual global::CommonLibrary.LocalizedString FoundMoreThanNCompaniesInService
    {
      get
      {
        return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Parties.ICompanyBase) , "FoundMoreThanNCompaniesInService");
      }
    }

    public virtual global::CommonLibrary.LocalizedString FoundMoreThanNCompaniesInServiceFormat(params object[] args)
    {
      return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Parties.ICompanyBase), "FoundMoreThanNCompaniesInService", false, args);
    }
    public virtual global::CommonLibrary.LocalizedString FillFrom
    {
      get
      {
        return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Parties.ICompanyBase) , "FillFrom");
      }
    }

    public virtual global::CommonLibrary.LocalizedString FillFromFormat(params object[] args)
    {
      return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Parties.ICompanyBase), "FillFrom", false, args);
    }
    public virtual global::CommonLibrary.LocalizedString ErrorForbidden
    {
      get
      {
        return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Parties.ICompanyBase) , "ErrorForbidden");
      }
    }

    public virtual global::CommonLibrary.LocalizedString ErrorForbiddenFormat(params object[] args)
    {
      return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Parties.ICompanyBase), "ErrorForbidden", false, args);
    }
    public virtual global::CommonLibrary.LocalizedString ErrorNotFound
    {
      get
      {
        return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Parties.ICompanyBase) , "ErrorNotFound");
      }
    }

    public virtual global::CommonLibrary.LocalizedString ErrorNotFoundFormat(params object[] args)
    {
      return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Parties.ICompanyBase), "ErrorNotFound", false, args);
    }
    public virtual global::CommonLibrary.LocalizedString ErrorInService
    {
      get
      {
        return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Parties.ICompanyBase) , "ErrorInService");
      }
    }

    public virtual global::CommonLibrary.LocalizedString ErrorInServiceFormat(params object[] args)
    {
      return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Parties.ICompanyBase), "ErrorInService", false, args);
    }
    public virtual global::CommonLibrary.LocalizedString CompanySelectDialogText
    {
      get
      {
        return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Parties.ICompanyBase) , "CompanySelectDialogText");
      }
    }

    public virtual global::CommonLibrary.LocalizedString CompanySelectDialogTextFormat(params object[] args)
    {
      return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Parties.ICompanyBase), "CompanySelectDialogText", false, args);
    }
    public virtual global::CommonLibrary.LocalizedString ErrorNoLicense
    {
      get
      {
        return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Parties.ICompanyBase) , "ErrorNoLicense");
      }
    }

    public virtual global::CommonLibrary.LocalizedString ErrorNoLicenseFormat(params object[] args)
    {
      return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Parties.ICompanyBase), "ErrorNoLicense", false, args);
    }
    public virtual global::CommonLibrary.LocalizedString CompanySelectDialogTextWithTRRC
    {
      get
      {
        return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Parties.ICompanyBase) , "CompanySelectDialogTextWithTRRC");
      }
    }

    public virtual global::CommonLibrary.LocalizedString CompanySelectDialogTextWithTRRCFormat(params object[] args)
    {
      return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Parties.ICompanyBase), "CompanySelectDialogTextWithTRRC", false, args);
    }
    public virtual global::CommonLibrary.LocalizedString ContactAdministrator
    {
      get
      {
        return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Parties.ICompanyBase) , "ContactAdministrator");
      }
    }

    public virtual global::CommonLibrary.LocalizedString ContactAdministratorFormat(params object[] args)
    {
      return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Parties.ICompanyBase), "ContactAdministrator", false, args);
    }
    public virtual global::CommonLibrary.LocalizedString ErrorUnauthorized
    {
      get
      {
        return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Parties.ICompanyBase) , "ErrorUnauthorized");
      }
    }

    public virtual global::CommonLibrary.LocalizedString ErrorUnauthorizedFormat(params object[] args)
    {
      return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Parties.ICompanyBase), "ErrorUnauthorized", false, args);
    }
    public virtual global::CommonLibrary.LocalizedString ErrorTooManyRequests
    {
      get
      {
        return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Parties.ICompanyBase) , "ErrorTooManyRequests");
      }
    }

    public virtual global::CommonLibrary.LocalizedString ErrorTooManyRequestsFormat(params object[] args)
    {
      return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Parties.ICompanyBase), "ErrorTooManyRequests", false, args);
    }

  }
}

// ==================================================================
// CompanyBaseSharedFunctions.g.cs
// ==================================================================

namespace Sungero.Parties.Shared
{
  public partial class CompanyBaseFunctions : global::Sungero.Parties.Shared.CounterpartyFunctions
  {
    private global::Sungero.Parties.ICompanyBase _obj
    {
      get { return (global::Sungero.Parties.ICompanyBase)this.Entity; }
    }

    public CompanyBaseFunctions(global::Sungero.Parties.ICompanyBase entity) : base(entity) { }
  }
}

// ==================================================================
// CompanyBaseFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Parties.Functions
{
  internal static class CompanyBase
  {
    /// <redirect project="Sungero.Parties.Shared" type="Sungero.Parties.Shared.CompanyBaseFunctions" />
    internal static  global::System.String GetCounterpartyWithSameTinWarning(global::Sungero.Parties.ICompanyBase companyBase)
    {
      var functions = (global::Sungero.Parties.Shared.CompanyBaseFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)companyBase).FunctionsContainer.SharedFunctions;
      return functions.GetCounterpartyWithSameTinWarning();
    }
    /// <redirect project="Sungero.Parties.Shared" type="Sungero.Parties.Shared.CompanyBaseFunctions" />
    internal static  global::System.String GetCounterpartyDuplicatesErrorText(global::Sungero.Parties.ICompanyBase companyBase)
    {
      var functions = (global::Sungero.Parties.Shared.CompanyBaseFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)companyBase).FunctionsContainer.SharedFunctions;
      return functions.GetCounterpartyDuplicatesErrorText();
    }
    /// <redirect project="Sungero.Parties.Shared" type="Sungero.Parties.Shared.CompanyBaseFunctions" />
    internal static  global::System.Collections.Generic.List<global::Sungero.Parties.ICounterparty> GetDuplicates(global::Sungero.Parties.ICompanyBase companyBase, global::System.Boolean excludeClosed)
    {
      var functions = (global::Sungero.Parties.Shared.CompanyBaseFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)companyBase).FunctionsContainer.SharedFunctions;
      return functions.GetDuplicates(excludeClosed);
    }
    /// <redirect project="Sungero.Parties.Shared" type="Sungero.Parties.Shared.CompanyBaseFunctions" />
    internal static  global::System.Boolean IsSelfEmployed(global::Sungero.Parties.ICompanyBase companyBase)
    {
      var functions = (global::Sungero.Parties.Shared.CompanyBaseFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)companyBase).FunctionsContainer.SharedFunctions;
      return functions.IsSelfEmployed();
    }
    /// <redirect project="Sungero.Parties.Shared" type="Sungero.Parties.Shared.CompanyBaseFunctions" />
    internal static  global::System.String CheckPsrnLength(global::Sungero.Parties.ICompanyBase companyBase, global::System.String psrn)
    {
      var functions = (global::Sungero.Parties.Shared.CompanyBaseFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)companyBase).FunctionsContainer.SharedFunctions;
      return functions.CheckPsrnLength(psrn);
    }
    /// <redirect project="Sungero.Parties.Shared" type="Sungero.Parties.Shared.CompanyBaseFunctions" />
    internal static  global::System.String CheckNceoLength(global::Sungero.Parties.ICompanyBase companyBase, global::System.String nceo)
    {
      var functions = (global::Sungero.Parties.Shared.CompanyBaseFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)companyBase).FunctionsContainer.SharedFunctions;
      return functions.CheckNceoLength(nceo);
    }

    internal static class Remote
    {
      /// <redirect project="Sungero.Parties.Server" type="Sungero.Parties.Server.CompanyBaseFunctions" />
      internal static  global::Sungero.Parties.Structures.CompanyBase.FoundCompanies FillFromService(global::Sungero.Parties.ICompanyBase companyBase, global::System.String specifiedPSRN)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::Sungero.Parties.Structures.CompanyBase.FoundCompanies>(
          global::System.Guid.Parse("78278dd7-f0d2-4e35-b543-13d0bd462cd6"),
          "FillFromService(global::Sungero.Parties.ICompanyBase,global::System.String)"
          , companyBase, specifiedPSRN);
      }

    }
  }
}

// ==================================================================
// CompanyBaseFilterState.g.cs
// ==================================================================

namespace Sungero.Parties.Shared.CompanyBase
{

  public class CompanyBaseFilterInfo : global::Sungero.Parties.Shared.Counterparty.CounterpartyFilterInfo,
    global::Sungero.Parties.ICompanyBaseFilterInfo
  {
  }

  public class CompanyBaseFilterState : global::Sungero.Parties.Shared.Counterparty.CounterpartyFilterState,
    global::Sungero.Parties.ICompanyBaseFilterState
  {



    public new Sungero.Parties.ICompanyBaseFilterInfo Info
    {
      get
      {
        return (Sungero.Parties.ICompanyBaseFilterInfo) base.Info;
      }
    }
    protected override global::Sungero.Domain.Shared.IFilterInfo CreateFilterInfo()
    {
      return new Sungero.Parties.Shared.CompanyBase.CompanyBaseFilterInfo();
    }

  }
}

// ==================================================================
// CompanyBaseSharedPublicFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Parties.Shared
{
  public class CompanyBaseSharedPublicFunctions : global::Sungero.Parties.Shared.ICompanyBaseSharedPublicFunctions
  {
  }
}
