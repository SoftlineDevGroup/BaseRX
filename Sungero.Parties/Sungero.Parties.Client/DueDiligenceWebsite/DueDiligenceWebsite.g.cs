
// ==================================================================
// DueDiligenceWebsite.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Parties.Client
{
  public class DueDiligenceWebsite :
    global::Sungero.CoreEntities.Client.DatabookEntry, global::Sungero.Parties.IDueDiligenceWebsite
  {
    #region Fields and properties

    public static new readonly global::System.Guid ClassTypeGuid = global::System.Guid.Parse("977a5b9a-67eb-4820-ade3-4c51a39d3b7b");

    public override global::System.Guid TypeGuid
    {
      get { return global::Sungero.Parties.Client.DueDiligenceWebsite.ClassTypeGuid; }
    }

    public override string TypeName
    {
      get { return "Sungero.Parties.IDueDiligenceWebsite, Sungero.Domain.Interfaces"; }
    }

      public override string DisplayValue
      {
        get { return this.Name; }
        set { this.Name = value; }
      }

      public override string DisplayPropertyName
      {
        get { return "Name"; }
      }


    public new global::Sungero.Parties.IDueDiligenceWebsiteState State
    {
      get
      {
        return (global::Sungero.Parties.IDueDiligenceWebsiteState)base.State;
      }
    }

    protected override global::Sungero.Domain.Shared.IEntityState CreateState()
    {
      return new global::Sungero.Parties.Shared.DueDiligenceWebsiteState(this);
    }

    public new global::Sungero.Parties.IDueDiligenceWebsiteInfo Info
    {
      get
      {
        return (global::Sungero.Parties.IDueDiligenceWebsiteInfo)base.Info;
      }
    }

    public new global::Sungero.Parties.IDueDiligenceWebsiteAccessRights AccessRights
    {
      get
      {
        return (global::Sungero.Parties.IDueDiligenceWebsiteAccessRights)base.AccessRights;
      }
    }

    protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
    {
      return new global::Sungero.Parties.Client.DueDiligenceWebsiteAccessRights(this);
    }

        protected global::Sungero.Domain.Client.SimpleProperty<global::System.String> _Name;

        public virtual global::System.String Name
        {
          get { return this._Name.Value; }
          set { this._Name.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.String> _Url;

        public virtual global::System.String Url
        {
          get { return this._Url.Value; }
          set { this._Url.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.String> _UrlForSelfEmployed;

        public virtual global::System.String UrlForSelfEmployed
        {
          get { return this._UrlForSelfEmployed.Value; }
          set { this._UrlForSelfEmployed.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.Boolean?> _IsDefault;

        public virtual global::System.Boolean? IsDefault
        {
          get { return this._IsDefault.Value; }
          set { this._IsDefault.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.Boolean?> _IsSystem;

        public virtual global::System.Boolean? IsSystem
        {
          get { return this._IsSystem.Value; }
          set { this._IsSystem.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.String> _HomeUrl;

        public virtual global::System.String HomeUrl
        {
          get { return this._HomeUrl.Value; }
          set { this._HomeUrl.Value = value; }
        }








      protected global::Sungero.Domain.Client.TextProperty _Note;

      [global::Sungero.Domain.Shared.DoNotSavePreviousValue]
      public virtual System.String Note
      {
        get { return this._Note.Value; }
        set { this._Note.Value = value; }
      }



    #endregion

    #region Methods

    protected override object CreateActionsHandlers()
    {
      return new global::Sungero.Parties.Client.DueDiligenceWebsiteActions(this);
    }

    protected override object CreateCollectionActionsHandlers()
    {
      return new global::Sungero.Parties.Client.DueDiligenceWebsiteCollectionActions();
    }

    protected override object CreateAnyChildEntityActionsHandlers()
    {
      return new global::Sungero.Parties.Client.DueDiligenceWebsiteAnyChildEntityActions();
    }

    protected override object CreateAnyChildEntityCollectionActionsHandlers()
    {
      return new global::Sungero.Parties.Client.DueDiligenceWebsiteAnyChildEntityCollectionActions();
    }


    protected override global::Sungero.Domain.Client.EntityFunctions CreateClientFunctions()
    {
      return new global::Sungero.Parties.Client.DueDiligenceWebsiteFunctions(this);
    }

    protected override global::Sungero.Domain.Shared.EntityFunctions CreateSharedFunctions()
    {
      return new global::Sungero.Parties.Shared.DueDiligenceWebsiteFunctions(this);
    }
    protected override object CreateHandlers() {
      return new global::Sungero.Parties.DueDiligenceWebsiteClientHandlers(this);
    }
    protected override object CreateSharedHandlers() {
      return new global::Sungero.Parties.DueDiligenceWebsiteSharedHandlers(this);
    }

    #endregion

    #region Framework events

    protected void NameChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.Name, this.Name, this);
     ((global::Sungero.Parties.DueDiligenceWebsiteSharedHandlers)this.SharedHandlers).NameChanged(args);
    }

    protected void UrlChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.Url, this.Url, this);
     ((global::Sungero.Parties.DueDiligenceWebsiteSharedHandlers)this.SharedHandlers).UrlChanged(args);
    }

    protected void UrlForSelfEmployedChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.UrlForSelfEmployed, this.UrlForSelfEmployed, this);
     ((global::Sungero.Parties.DueDiligenceWebsiteSharedHandlers)this.SharedHandlers).UrlForSelfEmployedChanged(args);
    }

    protected void IsDefaultChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.BooleanPropertyChangedEventArgs(this.State.Properties.IsDefault, this.IsDefault, this);
     ((global::Sungero.Parties.DueDiligenceWebsiteSharedHandlers)this.SharedHandlers).IsDefaultChanged(args);
    }

    protected void NoteChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.TextPropertyChangedEventArgs(this.State.Properties.Note, this.Note, this);
     ((global::Sungero.Parties.DueDiligenceWebsiteSharedHandlers)this.SharedHandlers).NoteChanged(args);
    }

    protected void IsSystemChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.BooleanPropertyChangedEventArgs(this.State.Properties.IsSystem, this.IsSystem, this);
     ((global::Sungero.Parties.DueDiligenceWebsiteSharedHandlers)this.SharedHandlers).IsSystemChanged(args);
    }

    protected void HomeUrlChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.HomeUrl, this.HomeUrl, this);
     ((global::Sungero.Parties.DueDiligenceWebsiteSharedHandlers)this.SharedHandlers).HomeUrlChanged(args);
    }



  protected global::System.String NameValueInputHandler(global::System.String value)
  {
    var args = new global::Sungero.Presentation.StringValueInputEventArgs(this.Name, value, this, this.Info.Properties.Name);
    ((global::Sungero.Parties.DueDiligenceWebsiteClientHandlers)this.Handlers).NameValueInput(args);
    return args.NewValue;
  }

  protected global::System.String UrlValueInputHandler(global::System.String value)
  {
    var args = new global::Sungero.Presentation.StringValueInputEventArgs(this.Url, value, this, this.Info.Properties.Url);
    ((global::Sungero.Parties.DueDiligenceWebsiteClientHandlers)this.Handlers).UrlValueInput(args);
    return args.NewValue;
  }

  protected global::System.String UrlForSelfEmployedValueInputHandler(global::System.String value)
  {
    var args = new global::Sungero.Presentation.StringValueInputEventArgs(this.UrlForSelfEmployed, value, this, this.Info.Properties.UrlForSelfEmployed);
    ((global::Sungero.Parties.DueDiligenceWebsiteClientHandlers)this.Handlers).UrlForSelfEmployedValueInput(args);
    return args.NewValue;
  }

  protected global::System.Boolean? IsDefaultValueInputHandler(global::System.Boolean? value)
  {
    var args = new global::Sungero.Presentation.BooleanValueInputEventArgs(this.IsDefault, value, this, this.Info.Properties.IsDefault);
    ((global::Sungero.Parties.DueDiligenceWebsiteClientHandlers)this.Handlers).IsDefaultValueInput(args);
    return args.NewValue;
  }

  protected global::System.String NoteValueInputHandler(global::System.String value)
  {
    var args = new global::Sungero.Presentation.TextValueInputEventArgs(this.Note, value, this, this.Info.Properties.Note);
    ((global::Sungero.Parties.DueDiligenceWebsiteClientHandlers)this.Handlers).NoteValueInput(args);
    return args.NewValue;
  }

  protected global::System.Boolean? IsSystemValueInputHandler(global::System.Boolean? value)
  {
    var args = new global::Sungero.Presentation.BooleanValueInputEventArgs(this.IsSystem, value, this, this.Info.Properties.IsSystem);
    ((global::Sungero.Parties.DueDiligenceWebsiteClientHandlers)this.Handlers).IsSystemValueInput(args);
    return args.NewValue;
  }

  protected global::System.String HomeUrlValueInputHandler(global::System.String value)
  {
    var args = new global::Sungero.Presentation.StringValueInputEventArgs(this.HomeUrl, value, this, this.Info.Properties.HomeUrl);
    ((global::Sungero.Parties.DueDiligenceWebsiteClientHandlers)this.Handlers).HomeUrlValueInput(args);
    return args.NewValue;
  }



    #endregion

    #region Constructors



    public DueDiligenceWebsite()
    {
            this._Name = new global::Sungero.Domain.Client.SimpleProperty<global::System.String>("Name", this);
            this._Name.ValueChanged += (sender, e) => { this.NameChangedHandler(); };
            this.AddProperty(this._Name);

            this._Url = new global::Sungero.Domain.Client.SimpleProperty<global::System.String>("Url", this);
            this._Url.ValueChanged += (sender, e) => { this.UrlChangedHandler(); };
            this.AddProperty(this._Url);

            this._UrlForSelfEmployed = new global::Sungero.Domain.Client.SimpleProperty<global::System.String>("UrlForSelfEmployed", this);
            this._UrlForSelfEmployed.ValueChanged += (sender, e) => { this.UrlForSelfEmployedChangedHandler(); };
            this.AddProperty(this._UrlForSelfEmployed);

            this._IsDefault = new global::Sungero.Domain.Client.SimpleProperty<global::System.Boolean?>("IsDefault", this);
            this._IsDefault.ValueChanged += (sender, e) => { this.IsDefaultChangedHandler(); };
            this.AddProperty(this._IsDefault);

            this._IsSystem = new global::Sungero.Domain.Client.SimpleProperty<global::System.Boolean?>("IsSystem", this);
            this._IsSystem.ValueChanged += (sender, e) => { this.IsSystemChangedHandler(); };
            this.AddProperty(this._IsSystem);

            this._HomeUrl = new global::Sungero.Domain.Client.SimpleProperty<global::System.String>("HomeUrl", this);
            this._HomeUrl.ValueChanged += (sender, e) => { this.HomeUrlChangedHandler(); };
            this.AddProperty(this._HomeUrl);



            this._Note = new global::Sungero.Domain.Client.TextProperty("Note", this);
            this._Note.ValueChanged += (sender, e) => { this.NoteChangedHandler(); };
            this.AddProperty(this._Note);






    }

    #endregion

  }
}

// ==================================================================
// DueDiligenceWebsitePresenter.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Parties.Client
{
  public class DueDiligenceWebsitePresenter<T> :
    global::Sungero.Domain.Client.EntityPresenter<T>
    where T : class, global::Sungero.Parties.IDueDiligenceWebsite
  {
    #region Fields and properties

          private global::System.Windows.Input.ICommand _OpenWebsiteCommand;

          public global::System.Windows.Input.ICommand OpenWebsiteCommand
          {
            get
            {
              if (this._OpenWebsiteCommand == null)
                  this._OpenWebsiteCommand = new global::Sungero.Domain.Client.SingleEntityCommand<T>("OpenWebsite", this, this.OpenWebsite, this.CanOpenWebsite) { IsEmptyParameterAllowed = true };
              return this._OpenWebsiteCommand;
            }
          }




    #endregion

    #region Methods

              private bool CanOpenWebsite(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfCanExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this);
                return ((Sungero.Parties.Client.DueDiligenceWebsiteActions)(entity as Sungero.Parties.Client.DueDiligenceWebsite).ActionsHandlers).CanOpenWebsite(args);
              }

              private void OpenWebsite(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this, entity.Info.Actions.OpenWebsite);
                ((Sungero.Parties.Client.DueDiligenceWebsiteActions)(entity as Sungero.Parties.Client.DueDiligenceWebsite).ActionsHandlers).OpenWebsite(args);
              }


    #endregion

    #region Framework events

    protected override void EntityPropertyChangedEventHandler(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
    {
      base.EntityPropertyChangedEventHandler(sender, e);
    }

    #endregion



    #region Constructors

    private void Init()
    {

    }

    public DueDiligenceWebsitePresenter()
    {
      this.Init();
    }

    #endregion
  }
}

// ==================================================================
// DueDiligenceWebsiteCollectionPresenter.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Parties.Client
{
  public class DueDiligenceWebsiteCollectionPresenter<T> : 
    global::Sungero.Domain.Client.EntityCollectionPresenter<T>
    where T: class, global::Sungero.Parties.IDueDiligenceWebsite
  {
    #region Actions

          private global::System.Windows.Input.ICommand _OpenWebsiteCommand;  

          public global::System.Windows.Input.ICommand OpenWebsiteCommand 
          { 
            get
            { 
              if (this._OpenWebsiteCommand == null)
                this._OpenWebsiteCommand = new global::Sungero.Domain.Client.SingleEntityCommand<T>("OpenWebsite", this, this.OpenWebsite, this.CanOpenWebsite) { IsEmptyParameterAllowed = true };
              return this._OpenWebsiteCommand; 
            }
          }



    #endregion

    #region Methods

        private bool CanOpenWebsite(T entity)
        {
          var args = new global::Sungero.Domain.Client.WpfCanExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Collection, entity, this);
          return ((Sungero.Parties.Client.DueDiligenceWebsiteActions)(entity as Sungero.Parties.Client.DueDiligenceWebsite).ActionsHandlers).CanOpenWebsite(args);
        }

        private void OpenWebsite(T entity)
        {
          var args = new global::Sungero.Domain.Client.WpfExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Collection, entity, this, entity.Info.Actions.OpenWebsite);
          ((Sungero.Parties.Client.DueDiligenceWebsiteActions)(entity as Sungero.Parties.Client.DueDiligenceWebsite).ActionsHandlers).OpenWebsite(args);
        }



    #endregion

    public DueDiligenceWebsiteCollectionPresenter(global::System.Linq.IQueryable<T> query, OnLookup onLookup)
      : base(query, onLookup)
    {
    }

    public DueDiligenceWebsiteCollectionPresenter(global::System.Linq.IQueryable<T> query)
      : this(query, null) { }

    public DueDiligenceWebsiteCollectionPresenter(OnLookup onLookup)
      : this(null, onLookup) { }

    public DueDiligenceWebsiteCollectionPresenter()
      : this(null, null) { }
  }
}

// ==================================================================
// DueDiligenceWebsiteRepositoryImplementer.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Parties.Client
{ 
  public class DueDiligenceWebsiteRepositoryImplementer<T> : 
      global::Sungero.Domain.Client.RepositoryImplementer<T>,
      global::Sungero.Parties.IDueDiligenceWebsiteRepositoryImplementer<T>
      where T : global::Sungero.Parties.IDueDiligenceWebsite
    {
       public new global::Sungero.Parties.IDueDiligenceWebsiteAccessRights AccessRights
       {
          get { return (global::Sungero.Parties.IDueDiligenceWebsiteAccessRights)base.AccessRights; }
       }

       public new global::Sungero.Parties.IDueDiligenceWebsiteInfo Info
       {
          get { return (global::Sungero.Parties.IDueDiligenceWebsiteInfo)base.Info; }
       }

       protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
       {
         return new global::Sungero.Parties.Client.DueDiligenceWebsiteTypeAccessRights(typeof(T));
       }
    }
}

// ==================================================================
// DueDiligenceWebsiteAccessRights.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Parties.Client
{
  public class DueDiligenceWebsiteAccessRights : 
    Sungero.CoreEntities.Client.DatabookEntryAccessRights, Sungero.Parties.IDueDiligenceWebsiteAccessRights
  {

    public DueDiligenceWebsiteAccessRights(global::Sungero.Domain.Shared.IEntity entity) : base(entity)
    {
    }
  }

  public class DueDiligenceWebsiteTypeAccessRights : 
    Sungero.CoreEntities.Client.DatabookEntryTypeAccessRights, Sungero.Parties.IDueDiligenceWebsiteAccessRights
  {

    public DueDiligenceWebsiteTypeAccessRights(global::System.Type entityType) : base(entityType)
    {
    }
  }
}
