
// ==================================================================
// CounterpartyExchangeBoxes.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Parties.Server
{
  public class CounterpartyExchangeBoxesFilterForBox<TQueryEntity, TSourceEntity, TRootEntity>
    : global::Sungero.Domain.ChildEntityPropertyFilterBase<TQueryEntity, TSourceEntity, TRootEntity>
    where TQueryEntity : class, global::Sungero.ExchangeCore.IBusinessUnitBox
    where TSourceEntity : class, global::Sungero.Parties.ICounterpartyExchangeBoxes
    where TRootEntity : class, global::Sungero.Parties.ICounterparty
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, TSourceEntity sourceEntity, TRootEntity rootEntity)
    {
      var args = new global::Sungero.Domain.PropertyFilteringEventArgs(sourceEntity);
      var result = new global::Sungero.Parties.CounterpartyExchangeBoxesBoxPropertyFilteringServerHandler<TQueryEntity>(sourceEntity, rootEntity).ExchangeBoxesBoxFiltering(query, args);
      if (args.DisableUiFiltering)
        global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public CounterpartyExchangeBoxesFilterForBox(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class CounterpartyExchangeBoxesSearchFilterForBox<TQueryEntity>
    : global::Sungero.Domain.SearchDialogPropertyFilter<TQueryEntity>
    where TQueryEntity : class, global::Sungero.ExchangeCore.IBusinessUnitBox
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, System.Guid entityType)
    {
      var args = new global::Sungero.Domain.PropertySearchDialogFilteringEventArgs(entityType);
      var result = new global::Sungero.Parties.CounterpartyExchangeBoxesBoxSearchPropertyFilteringServerHandler<TQueryEntity>().ExchangeBoxesBoxSearchDialogFiltering(query, args);
      if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public CounterpartyExchangeBoxesSearchFilterForBox(string propertyName)
      : base(propertyName)
    {
    }
  }



  [global::Sungero.Domain.PropertyFilter(typeof(global::Sungero.Parties.Server.CounterpartyExchangeBoxesFilterForBox<global::Sungero.ExchangeCore.IBusinessUnitBox, global::Sungero.Parties.ICounterpartyExchangeBoxes, global::Sungero.Parties.ICounterparty>), "Box")]
  [global::Sungero.Domain.SearchPropertyFilter(typeof(global::Sungero.Parties.Server.CounterpartyExchangeBoxesSearchFilterForBox<global::Sungero.ExchangeCore.IBusinessUnitBox>), "Box")]


  public class CounterpartyExchangeBoxes :
    global::Sungero.Domain.ChildEntity, global::Sungero.Parties.ICounterpartyExchangeBoxes
  {
    public static new readonly global::System.Guid ClassTypeGuid = global::System.Guid.Parse("fafa1803-bcd1-4b88-9e07-eb6f1ec341c6");

    public override global::System.Guid TypeGuid
    {
      get { return global::Sungero.Parties.Server.CounterpartyExchangeBoxes.ClassTypeGuid; }
    }

    public override string TypeName
    {
      get { return "Sungero.Parties.ICounterpartyExchangeBoxes, Sungero.Domain.Interfaces"; }
    }

    public new virtual global::Sungero.Parties.ICounterpartyExchangeBoxesState State
    {
      get { return (global::Sungero.Parties.ICounterpartyExchangeBoxesState)base.State; }
    }

    protected override global::Sungero.Domain.Shared.IEntityState CreateState()
    {
      return new global::Sungero.Parties.Shared.CounterpartyExchangeBoxesState(this);
    }

    public new virtual global::Sungero.Parties.ICounterpartyExchangeBoxesInfo Info
    {
      get { return (global::Sungero.Parties.ICounterpartyExchangeBoxesInfo)base.Info; }
    }


    public global::Sungero.Parties.ICounterparty Counterparty { get; set; }

    public override global::Sungero.Domain.Shared.IEntity RootEntity
    {
      get { return this.Counterparty; }
      set { this.Counterparty = (global::Sungero.Parties.ICounterparty)value; }
    }

    protected override object CreateSharedHandlers() {
      return new global::Sungero.Parties.CounterpartyExchangeBoxesSharedHandlers(this);
    }

    private global::System.String _OrganizationId;
    public virtual global::System.String OrganizationId
    {
      get
      {
        return this._OrganizationId;
      }

      set
      {
        this.SetPropertyValue("OrganizationId", this._OrganizationId, value, (propertyValue) => { this._OrganizationId = propertyValue; }, this.OrganizationIdChangedHandler);
      }
    }
    private global::System.String _InvitationText;
    public virtual global::System.String InvitationText
    {
      get
      {
        return this._InvitationText;
      }

      set
      {
        this.SetPropertyValue("InvitationText", this._InvitationText, value, (propertyValue) => { this._InvitationText = propertyValue; }, this.InvitationTextChangedHandler);
      }
    }
    private global::System.Boolean? _IsDefault;
    public virtual global::System.Boolean? IsDefault
    {
      get
      {
        return this._IsDefault;
      }

      set
      {
        this.SetPropertyValue("IsDefault", this._IsDefault, value, (propertyValue) => { this._IsDefault = propertyValue; }, this.IsDefaultChangedHandler);
      }
    }
    private global::System.String _CounterpartyBox;
    public virtual global::System.String CounterpartyBox
    {
      get
      {
        return this._CounterpartyBox;
      }

      set
      {
        this.SetPropertyValue("CounterpartyBox", this._CounterpartyBox, value, (propertyValue) => { this._CounterpartyBox = propertyValue; }, this.CounterpartyBoxChangedHandler);
      }
    }
    private global::System.Boolean? _IsRoaming;
    public virtual global::System.Boolean? IsRoaming
    {
      get
      {
        return this._IsRoaming;
      }

      set
      {
        this.SetPropertyValue("IsRoaming", this._IsRoaming, value, (propertyValue) => { this._IsRoaming = propertyValue; }, this.IsRoamingChangedHandler);
      }
    }
    private global::System.String _FtsId;
    public virtual global::System.String FtsId
    {
      get
      {
        return this._FtsId;
      }

      set
      {
        this.SetPropertyValue("FtsId", this._FtsId, value, (propertyValue) => { this._FtsId = propertyValue; }, this.FtsIdChangedHandler);
      }
    }






    private static global::Sungero.Domain.Shared.EnumerationItems _StatusItems = new global::Sungero.Domain.Shared.EnumerationItems(
      null,
      typeof(global::Sungero.Parties.CounterpartyExchangeBoxes.Status),
      typeof(global::Sungero.Parties.Server.CounterpartyExchangeBoxes),
      "Status");

    public static global::Sungero.Domain.Shared.EnumerationItems StatusItems
    {
      get { return global::Sungero.Parties.Server.CounterpartyExchangeBoxes._StatusItems; }
    }

    public virtual global::Sungero.Domain.Shared.EnumerationItems StatusAllowedItems
    {
      get { return global::Sungero.Parties.Server.CounterpartyExchangeBoxes.StatusItems; }
    }

    private global::Sungero.Core.Enumeration? _Status;

    public virtual global::Sungero.Core.Enumeration? Status
    {
      get { return this._Status; }
      set { this.SetEnumPropertyValue("Status", this._Status, value, (propertyValue) => { this._Status = propertyValue; }, this.StatusChangedHandler, this.StatusAllowedItems); }
    }


    private global::Sungero.ExchangeCore.IBusinessUnitBox _Box;
    public virtual global::Sungero.ExchangeCore.IBusinessUnitBox Box
    {
      get
      {
        return this._Box;
      }

      set
      {
        this.SetPropertyValue("Box", this._Box, value, (propertyValue) => { this._Box = propertyValue; }, this.BoxChangedHandler);
      }
    }




    #region Framework events

    protected void BoxChangedHandler()
    {
      var args = new global::Sungero.Parties.Shared.CounterpartyExchangeBoxesBoxChangedEventArgs(this.State.Properties.Box, this.Box, this);
     ((global::Sungero.Parties.CounterpartyExchangeBoxesSharedHandlers)this.SharedHandlers).ExchangeBoxesBoxChanged(args);
    }

    protected void StatusChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.EnumerationPropertyChangedEventArgs(this.State.Properties.Status, this.Status, this);
     ((global::Sungero.Parties.CounterpartyExchangeBoxesSharedHandlers)this.SharedHandlers).ExchangeBoxesStatusChanged(args);
    }

    protected void OrganizationIdChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.OrganizationId, this.OrganizationId, this);
     ((global::Sungero.Parties.CounterpartyExchangeBoxesSharedHandlers)this.SharedHandlers).ExchangeBoxesOrganizationIdChanged(args);
    }

    protected void InvitationTextChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.InvitationText, this.InvitationText, this);
     ((global::Sungero.Parties.CounterpartyExchangeBoxesSharedHandlers)this.SharedHandlers).ExchangeBoxesInvitationTextChanged(args);
    }

    protected void IsDefaultChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.BooleanPropertyChangedEventArgs(this.State.Properties.IsDefault, this.IsDefault, this);
     ((global::Sungero.Parties.CounterpartyExchangeBoxesSharedHandlers)this.SharedHandlers).ExchangeBoxesIsDefaultChanged(args);
    }

    protected void CounterpartyBoxChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.CounterpartyBox, this.CounterpartyBox, this);
     ((global::Sungero.Parties.CounterpartyExchangeBoxesSharedHandlers)this.SharedHandlers).ExchangeBoxesCounterpartyBoxChanged(args);
    }

    protected void IsRoamingChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.BooleanPropertyChangedEventArgs(this.State.Properties.IsRoaming, this.IsRoaming, this);
     ((global::Sungero.Parties.CounterpartyExchangeBoxesSharedHandlers)this.SharedHandlers).ExchangeBoxesIsRoamingChanged(args);
    }

    protected void FtsIdChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.FtsId, this.FtsId, this);
     ((global::Sungero.Parties.CounterpartyExchangeBoxesSharedHandlers)this.SharedHandlers).ExchangeBoxesFtsIdChanged(args);
    }



    #endregion


    public CounterpartyExchangeBoxes()
    {
    }

  }
}

// ==================================================================
// CounterpartyExchangeBoxesHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Parties
{
  public partial class CounterpartyExchangeBoxesBoxPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.ChildEntityPropertyFilteringServerHandler
    where T : class, global::Sungero.ExchangeCore.IBusinessUnitBox
  {
    private global::Sungero.Parties.ICounterpartyExchangeBoxes _obj
    {
      get { return (global::Sungero.Parties.ICounterpartyExchangeBoxes)this.Entity; }
    }

    private global::Sungero.Parties.ICounterparty _root
    {
      get { return (global::Sungero.Parties.ICounterparty)this.Root; }
    }

    public virtual global::System.Linq.IQueryable<T> ExchangeBoxesBoxFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertyFilteringEventArgs e)
    {
      return query;
    }

    public CounterpartyExchangeBoxesBoxPropertyFilteringServerHandler(global::Sungero.Parties.ICounterpartyExchangeBoxes entity, global::Sungero.Parties.ICounterparty root)
      : base(entity, root)
    {
    }
  }

  public partial class CounterpartyExchangeBoxesBoxSearchPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.SearchPropertyFilteringServerHandler
    where T : class, global::Sungero.ExchangeCore.IBusinessUnitBox
  {

    public virtual global::System.Linq.IQueryable<T> ExchangeBoxesBoxSearchDialogFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertySearchDialogFilteringEventArgs e)
    {
      return query;
    }

    public CounterpartyExchangeBoxesBoxSearchPropertyFilteringServerHandler()
      : base()
    {
    }
  }



}

// ==================================================================
// CounterpartyExchangeBoxesEventArgs.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Parties.Server
{
}
