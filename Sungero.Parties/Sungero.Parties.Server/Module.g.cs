
// ==================================================================
// Module.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Parties.Server
{
  public partial class PartiesModule : global::Sungero.Domain.Shared.ModuleBase
  {
    public override global::System.Guid Id
    {
      get { return global::System.Guid.Parse("243b34ec-8425-4c7e-b66f-27f7b9c8f38d"); }
    }

    public override string Name
    {
      get { return "Sungero.Parties"; }
    }

    public override void RegisterTypes()
    {
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Parties.Server.IModuleServerInitializationFunctions, global::Sungero.Parties.Server.ModuleServerInitializationFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("80c4e311-e95f-449b-984d-1fd540b8f0af"), new Sungero.Parties.Shared.BankInfo(typeof(global::Sungero.Parties.IBank)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Parties.Server.IBankServerPublicFunctions, global::Sungero.Parties.Server.BankServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Parties.Shared.IBankSharedPublicFunctions, global::Sungero.Parties.Shared.BankSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("b28d2948-f8b6-47e1-bdf0-a6f6be05e64c"), new Sungero.Parties.Shared.BankExchangeBoxesInfo(typeof(global::Sungero.Parties.IBankExchangeBoxes)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("593e143c-616c-4d95-9457-fd916c4aa7f8"), new Sungero.Parties.Shared.CompanyInfo(typeof(global::Sungero.Parties.ICompany)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Parties.Server.ICompanyServerPublicFunctions, global::Sungero.Parties.Server.CompanyServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Parties.Shared.ICompanySharedPublicFunctions, global::Sungero.Parties.Shared.CompanySharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("392f91ab-efc1-450c-8604-11bf6c38e0f0"), new Sungero.Parties.Shared.CompanyExchangeBoxesInfo(typeof(global::Sungero.Parties.ICompanyExchangeBoxes)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("78278dd7-f0d2-4e35-b543-13d0bd462cd6"), new Sungero.Parties.Shared.CompanyBaseInfo(typeof(global::Sungero.Parties.ICompanyBase)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Parties.Server.ICompanyBaseServerPublicFunctions, global::Sungero.Parties.Server.CompanyBaseServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Parties.Shared.ICompanyBaseSharedPublicFunctions, global::Sungero.Parties.Shared.CompanyBaseSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("1c002846-60f2-4216-853d-9aa101bdcf82"), new Sungero.Parties.Shared.CompanyBaseExchangeBoxesInfo(typeof(global::Sungero.Parties.ICompanyBaseExchangeBoxes)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("c8daaef9-a679-4a29-ac01-b93c1637c72e"), new Sungero.Parties.Shared.ContactInfo(typeof(global::Sungero.Parties.IContact)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Parties.Server.IContactServerPublicFunctions, global::Sungero.Parties.Server.ContactServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Parties.Shared.IContactSharedPublicFunctions, global::Sungero.Parties.Shared.ContactSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("294767f1-009f-4fbd-80fc-f98c49ddc560"), new Sungero.Parties.Shared.CounterpartyInfo(typeof(global::Sungero.Parties.ICounterparty)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Parties.Server.ICounterpartyServerPublicFunctions, global::Sungero.Parties.Server.CounterpartyServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Parties.Shared.ICounterpartySharedPublicFunctions, global::Sungero.Parties.Shared.CounterpartySharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("fafa1803-bcd1-4b88-9e07-eb6f1ec341c6"), new Sungero.Parties.Shared.CounterpartyExchangeBoxesInfo(typeof(global::Sungero.Parties.ICounterpartyExchangeBoxes)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("977a5b9a-67eb-4820-ade3-4c51a39d3b7b"), new Sungero.Parties.Shared.DueDiligenceWebsiteInfo(typeof(global::Sungero.Parties.IDueDiligenceWebsite)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Parties.Server.IDueDiligenceWebsiteServerPublicFunctions, global::Sungero.Parties.Server.DueDiligenceWebsiteServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Parties.Shared.IDueDiligenceWebsiteSharedPublicFunctions, global::Sungero.Parties.Shared.DueDiligenceWebsiteSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("f5509cdc-ac0c-4507-a4d3-61d7a0a9b6f6"), new Sungero.Parties.Shared.PersonInfo(typeof(global::Sungero.Parties.IPerson)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Parties.Server.IPersonServerPublicFunctions, global::Sungero.Parties.Server.PersonServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Parties.Shared.IPersonSharedPublicFunctions, global::Sungero.Parties.Shared.PersonSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("1c0f1303-3d8f-4376-ae69-4ff22c457eb2"), new Sungero.Parties.Shared.PersonExchangeBoxesInfo(typeof(global::Sungero.Parties.IPersonExchangeBoxes)));


      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Parties.IBankFilterState, global::Sungero.Parties.Shared.Bank.BankFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Parties.ICompanyFilterState, global::Sungero.Parties.Shared.Company.CompanyFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Parties.ICompanyBaseFilterState, global::Sungero.Parties.Shared.CompanyBase.CompanyBaseFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Parties.IContactFilterState, global::Sungero.Parties.Shared.Contact.ContactFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Parties.ICounterpartyFilterState, global::Sungero.Parties.Shared.Counterparty.CounterpartyFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Parties.IDueDiligenceWebsiteFilterState, global::Sungero.Parties.Shared.DueDiligenceWebsite.DueDiligenceWebsiteFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Parties.IPersonFilterState, global::Sungero.Parties.Shared.Person.PersonFilterState>();


      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Parties.FolderFilterState.IBlockedCounterpartiesFilterState, global::Sungero.Parties.Shared.BlockedCounterpartiesFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Parties.FolderFilterState.IInvitedCounterpartiesFilterState, global::Sungero.Parties.Shared.InvitedCounterpartiesFilterState>();


      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Parties.Server.IModuleServerPublicFunctions, global::Sungero.Parties.Server.ModuleServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Parties.Shared.IModuleSharedPublicFunctions, global::Sungero.Parties.Shared.ModuleSharedPublicFunctions>();
    }
  }
}

// ==================================================================
// ModuleHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Parties.Server
{
  public partial class BlockedCounterpartiesFolderHandlers
  {
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    protected global::Sungero.Parties.FolderFilterState.IBlockedCounterpartiesFilterState Filter { get; private set; }

    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    public global::System.Boolean _disableUiFiltering { get; protected set; }

    private global::Sungero.Parties.FolderFilterState.IBlockedCounterpartiesFilterState _filter
    {
      get
      {
        return this.Filter;
      }
    }

    public virtual global::System.Boolean IsBlockedCounterpartiesVisible()
    {
      return true;
    }

    public virtual global::System.Linq.IQueryable<global::Sungero.ExchangeCore.IExchangeService> BlockedCounterpartiesExchangeServiceFiltering(global::System.Linq.IQueryable<global::Sungero.ExchangeCore.IExchangeService> query)
    {
      return query;
    }

    public virtual global::System.Linq.IQueryable<global::Sungero.Company.IBusinessUnit> BlockedCounterpartiesBusinessUnitFiltering(global::System.Linq.IQueryable<global::Sungero.Company.IBusinessUnit> query)
    {
      return query;
    }


    public BlockedCounterpartiesFolderHandlers(global::Sungero.Parties.FolderFilterState.IBlockedCounterpartiesFilterState filter)
    {
      this.Filter = filter;
    }
  }

  public partial class InvitedCounterpartiesFolderHandlers
  {
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    protected global::Sungero.Parties.FolderFilterState.IInvitedCounterpartiesFilterState Filter { get; private set; }

    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    public global::System.Boolean _disableUiFiltering { get; protected set; }

    private global::Sungero.Parties.FolderFilterState.IInvitedCounterpartiesFilterState _filter
    {
      get
      {
        return this.Filter;
      }
    }

    public virtual global::System.Boolean IsInvitedCounterpartiesVisible()
    {
      return true;
    }

    public virtual global::System.Linq.IQueryable<global::Sungero.ExchangeCore.IExchangeService> InvitedCounterpartiesExchangeServiceFiltering(global::System.Linq.IQueryable<global::Sungero.ExchangeCore.IExchangeService> query)
    {
      return query;
    }

    public virtual global::System.Linq.IQueryable<global::Sungero.Company.IBusinessUnit> InvitedCounterpartiesBusinessUnitFiltering(global::System.Linq.IQueryable<global::Sungero.Company.IBusinessUnit> query)
    {
      return query;
    }


    public InvitedCounterpartiesFolderHandlers(global::Sungero.Parties.FolderFilterState.IInvitedCounterpartiesFilterState filter)
    {
      this.Filter = filter;
    }
  }

}

// ==================================================================
// ModuleFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Parties.Functions
{
  internal static partial class Module
  {
    /// <redirect project="Sungero.Parties.Server" type="Sungero.Parties.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static global::Sungero.Parties.ICompany CreateCompany()
    {
        return global::Sungero.Parties.Server.ModuleFunctions.CreateCompany();
    }
    /// <redirect project="Sungero.Parties.Server" type="Sungero.Parties.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static global::Sungero.Parties.IContact CreateContact()
    {
        return global::Sungero.Parties.Server.ModuleFunctions.CreateContact();
    }
    /// <redirect project="Sungero.Parties.Server" type="Sungero.Parties.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static global::Sungero.Parties.IPerson CreatePerson()
    {
        return global::Sungero.Parties.Server.ModuleFunctions.CreatePerson();
    }
    /// <redirect project="Sungero.Parties.Server" type="Sungero.Parties.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static global::System.Linq.IQueryable<global::Sungero.Parties.ICounterparty> CounterpartiesAvailableForExchange()
    {
        return ((global::Sungero.Parties.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server)).CounterpartiesAvailableForExchange();
    }
    /// <redirect project="Sungero.Parties.Server" type="Sungero.Parties.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static global::System.Collections.Generic.List<global::Sungero.Parties.IContact> GetContactsFromCompany(global::Sungero.Parties.ICompanyBase company)
    {
        return global::Sungero.Parties.Server.ModuleFunctions.GetContactsFromCompany(company);
    }
    /// <redirect project="Sungero.Parties.Server" type="Sungero.Parties.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static global::System.String GetEmailByTinTrrc(global::System.String tin, global::System.String trrc)
    {
        return global::Sungero.Parties.Server.ModuleFunctions.GetEmailByTinTrrc(tin, trrc);
    }
    /// <redirect project="Sungero.Parties.Server" type="Sungero.Parties.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static global::System.Collections.Generic.List<global::Sungero.Parties.Structures.Module.CounterpartyFromExchangeService> FindCompanyInExchangeServices(global::System.String tin, global::System.String trrc, global::System.Collections.Generic.List<global::Sungero.ExchangeCore.IBusinessUnitBox> boxes)
    {
        return global::Sungero.Parties.Server.ModuleFunctions.FindCompanyInExchangeServices(tin, trrc, boxes);
    }
    /// <redirect project="Sungero.Parties.Server" type="Sungero.Parties.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static global::Sungero.Parties.ICounterparty FindCounterpartyByOrganizationId(global::Sungero.ExchangeCore.IBusinessUnitBox box, global::System.String organizationId)
    {
        return global::Sungero.Parties.Server.ModuleFunctions.FindCounterpartyByOrganizationId(box, organizationId);
    }
    /// <redirect project="Sungero.Parties.Server" type="Sungero.Parties.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static global::System.Boolean CheckAnyBusinessUnitBoxes()
    {
        return ((global::Sungero.Parties.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server)).CheckAnyBusinessUnitBoxes();
    }
    /// <redirect project="Sungero.Parties.Server" type="Sungero.Parties.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static global::System.Collections.Generic.List<global::Sungero.Parties.ICounterparty> GetDuplicateCounterpartiesFromList(global::System.Collections.Generic.List<global::Sungero.Parties.ICounterparty> counterparties, global::System.String tin, global::System.String trrc, global::System.String name, global::System.Boolean excludeClosed)
    {
        return global::Sungero.Parties.Server.ModuleFunctions.GetDuplicateCounterpartiesFromList(counterparties, tin, trrc, name, excludeClosed);
    }
    /// <redirect project="Sungero.Parties.Server" type="Sungero.Parties.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static global::System.Collections.Generic.List<global::Sungero.Parties.ICounterparty> GetDuplicateCounterparties(global::System.String tin, global::System.String trrc, global::System.String name, global::System.Boolean excludeClosed)
    {
        return global::Sungero.Parties.Server.ModuleFunctions.GetDuplicateCounterparties(tin, trrc, name, excludeClosed);
    }
    /// <redirect project="Sungero.Parties.Server" type="Sungero.Parties.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static global::System.Collections.Generic.List<global::Sungero.Parties.ICounterparty> GetDuplicateCounterparties(global::System.String tin, global::System.String trrc, global::System.String name, global::System.Nullable<global::System.Int32> excludedCounterpartyId, global::System.Boolean excludeClosed)
    {
        return global::Sungero.Parties.Server.ModuleFunctions.GetDuplicateCounterparties(tin, trrc, name, excludedCounterpartyId, excludeClosed);
    }
    /// <redirect project="Sungero.Parties.Server" type="Sungero.Parties.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static global::System.Collections.Generic.List<global::Sungero.Parties.ICounterparty> FindCounterparty(global::System.String uuid, global::System.String tin, global::System.String trrc, global::System.String sysid)
    {
        return global::Sungero.Parties.Server.ModuleFunctions.FindCounterparty(uuid, tin, trrc, sysid);
    }
    /// <redirect project="Sungero.Parties.Server" type="Sungero.Parties.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static global::System.String GetCompanyDataServiceURL()
    {
        return ((global::Sungero.Parties.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server)).GetCompanyDataServiceURL();
    }
    /// <redirect project="Sungero.Parties.Server" type="Sungero.Parties.Server.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<Sungero.Company.Structures.ResponsibilitiesReport.ResponsibilitiesReportTableLine> GetResponsibilitiesReportData(global::Sungero.Company.IEmployee employee)
    {
        return ((global::Sungero.Parties.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server)).GetResponsibilitiesReportData(employee);
    }

    /// <redirect project="Sungero.Parties.Shared" type="Sungero.Parties.Shared.ModuleFunctions" />
    internal static global::System.Boolean EmailIsValid(global::System.String emailAddress)
    {
        return global::Sungero.Parties.Shared.ModuleFunctions.EmailIsValid(emailAddress);
    }

    private static object GetFunctionsContainer()
    {
      return new global::Sungero.Parties.Server.ModuleFunctions();
    }

    private static object GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType projectType)
    {
      var moduleId = new global::System.Guid("243b34ec-8425-4c7e-b66f-27f7b9c8f38d");
      var finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(moduleId));
      var assemblyName = finalModuleMetadatda.GetAssemblyName(projectType);
      var moduleFunctionsType = global::System.Type.GetType(global::System.String.Format("{0}.{1}, {2}", finalModuleMetadatda.FunctionNamespace, "Module", assemblyName));
      return moduleFunctionsType.GetMethod("GetFunctionsContainer", global::System.Reflection.BindingFlags.NonPublic | global::System.Reflection.BindingFlags.Static).Invoke(null, null);
    }
  }
}

// ==================================================================
// ModuleInitializationInstantiation.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Parties.ModuleInitialization
{
  internal static partial class Module
  {
     /// <redirect project="Sungero.Parties.Server" type="Sungero.Parties.Server.ModuleInitializer" />
     internal static void Initializing(Sungero.Domain.ModuleInitializingEventArgs e)
     {
     ((global::Sungero.Parties.Server.ModuleInitializer)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server)).Initializing(e);
     }
     /// <redirect project="Sungero.Parties.Server" type="Sungero.Parties.Server.ModuleInitializer" />
     internal static void CreateDefaultDueDiligenceWebsites()
     {
     global::Sungero.Parties.Server.ModuleInitializer.CreateDefaultDueDiligenceWebsites();
     }
     /// <redirect project="Sungero.Parties.Server" type="Sungero.Parties.Server.ModuleInitializer" />
     internal static void CreateDistributionListCounterparty()
     {
     global::Sungero.Parties.Server.ModuleInitializer.CreateDistributionListCounterparty();
     }
     /// <redirect project="Sungero.Parties.Server" type="Sungero.Parties.Server.ModuleInitializer" />
     internal static void UpdateBanksFromCBR()
     {
     global::Sungero.Parties.Server.ModuleInitializer.UpdateBanksFromCBR();
     }
     /// <redirect project="Sungero.Parties.Server" type="Sungero.Parties.Server.ModuleInitializer" />
     internal static void CreateDueDiligenceWebsite(global::System.Guid entityId, global::System.String name, global::System.String homeUrl, global::System.String url, global::System.Boolean isDefault, global::System.String note, global::System.String selfEmployedUrl)
     {
     global::Sungero.Parties.Server.ModuleInitializer.CreateDueDiligenceWebsite(entityId, name, homeUrl, url, isDefault, note, selfEmployedUrl);
     }
     /// <redirect project="Sungero.Parties.Server" type="Sungero.Parties.Server.ModuleInitializer" />
     internal static void CreateCounterpartyIndices()
     {
     global::Sungero.Parties.Server.ModuleInitializer.CreateCounterpartyIndices();
     }


    private static object GetFunctionsContainer()
    {
      return new global::Sungero.Parties.Server.ModuleInitializer();
    }

    private static object GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType projectType)
    {
      var moduleId = new global::System.Guid("243b34ec-8425-4c7e-b66f-27f7b9c8f38d");
      var finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(moduleId));
      var assemblyName = finalModuleMetadatda.GetAssemblyName(projectType);
      var moduleFunctionsType = global::System.Type.GetType(global::System.String.Format("{0}.{1}, {2}", finalModuleMetadatda.ModuleInitializationNamespace, "Module", assemblyName));
      return moduleFunctionsType.GetMethod("GetFunctionsContainer", global::System.Reflection.BindingFlags.NonPublic | global::System.Reflection.BindingFlags.Static).Invoke(null, null);
    }

  }
}


// ==================================================================
// ModuleEventArgs.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Parties.Server
{
  public class BlockedCounterpartiesExchangeServicePanelNavigationFilter : global::Sungero.Domain.PanelNavigationFilterBase
  {
    public override global::System.Linq.IQueryable Apply(global::System.Linq.IQueryable query)
    {
      var typedQuery = (global::System.Linq.IQueryable<global::Sungero.ExchangeCore.IExchangeService>)query;
      var typedState = (global::Sungero.Parties.FolderFilterState.IBlockedCounterpartiesFilterState)this.State;
      var handlers = new global::Sungero.Parties.Server.BlockedCounterpartiesFolderHandlers(typedState);
      var result = handlers.BlockedCounterpartiesExchangeServiceFiltering(typedQuery);
      if (handlers._disableUiFiltering)
         global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<global::Sungero.ExchangeCore.IExchangeService>();
      return result;
    }
  }

  public class BlockedCounterpartiesBusinessUnitPanelNavigationFilter : global::Sungero.Domain.PanelNavigationFilterBase
  {
    public override global::System.Linq.IQueryable Apply(global::System.Linq.IQueryable query)
    {
      var typedQuery = (global::System.Linq.IQueryable<global::Sungero.Company.IBusinessUnit>)query;
      var typedState = (global::Sungero.Parties.FolderFilterState.IBlockedCounterpartiesFilterState)this.State;
      var handlers = new global::Sungero.Parties.Server.BlockedCounterpartiesFolderHandlers(typedState);
      var result = handlers.BlockedCounterpartiesBusinessUnitFiltering(typedQuery);
      if (handlers._disableUiFiltering)
         global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<global::Sungero.Company.IBusinessUnit>();
      return result;
    }
  }


  public class InvitedCounterpartiesExchangeServicePanelNavigationFilter : global::Sungero.Domain.PanelNavigationFilterBase
  {
    public override global::System.Linq.IQueryable Apply(global::System.Linq.IQueryable query)
    {
      var typedQuery = (global::System.Linq.IQueryable<global::Sungero.ExchangeCore.IExchangeService>)query;
      var typedState = (global::Sungero.Parties.FolderFilterState.IInvitedCounterpartiesFilterState)this.State;
      var handlers = new global::Sungero.Parties.Server.InvitedCounterpartiesFolderHandlers(typedState);
      var result = handlers.InvitedCounterpartiesExchangeServiceFiltering(typedQuery);
      if (handlers._disableUiFiltering)
         global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<global::Sungero.ExchangeCore.IExchangeService>();
      return result;
    }
  }

  public class InvitedCounterpartiesBusinessUnitPanelNavigationFilter : global::Sungero.Domain.PanelNavigationFilterBase
  {
    public override global::System.Linq.IQueryable Apply(global::System.Linq.IQueryable query)
    {
      var typedQuery = (global::System.Linq.IQueryable<global::Sungero.Company.IBusinessUnit>)query;
      var typedState = (global::Sungero.Parties.FolderFilterState.IInvitedCounterpartiesFilterState)this.State;
      var handlers = new global::Sungero.Parties.Server.InvitedCounterpartiesFolderHandlers(typedState);
      var result = handlers.InvitedCounterpartiesBusinessUnitFiltering(typedQuery);
      if (handlers._disableUiFiltering)
         global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<global::Sungero.Company.IBusinessUnit>();
      return result;
    }
  }


}

// ==================================================================
// ModuleServerPublicFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Parties.Server
{
  public partial class ModuleServerPublicFunctions : global::Sungero.Parties.Server.IModuleServerPublicFunctions
  {
    public global::System.Collections.Generic.List<Sungero.Company.Structures.ResponsibilitiesReport.ResponsibilitiesReportTableLine> GetResponsibilitiesReportData(global::Sungero.Company.IEmployee employee)
    {
      return global::Sungero.Parties.Functions.Module.GetResponsibilitiesReportData(employee);
    }
  }
}

namespace Sungero.Parties.Server
{
  public partial class ModuleServerPublicFunctions : global::Sungero.Parties.Server.IModuleServerPublicFunctions
  {

  }
}

// ==================================================================
// ModuleServerInitializationFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Parties.Server
{
  public partial class ModuleServerInitializationFunctions : global::Sungero.Parties.Server.IModuleServerInitializationFunctions
  {
  }
}


// ==================================================================
// ModuleWidgetHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Parties.Server
{
}

// ==================================================================
// ModuleQueries.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Parties.Queries
{
  public class Module
  {
    private static global::Sungero.Domain.SqlQueryResolver resolver = new global::Sungero.Domain.SqlQueryResolver("Sungero.Parties.Server.ModuleQueries.xml", System.Reflection.Assembly.GetExecutingAssembly());
    public static string SelectCompanyDataService
    {
       get { return resolver.GetQuery("SelectCompanyDataService"); }
    }
    public static string UpdateBanksFromCBR
    {
       get { return resolver.GetQuery("UpdateBanksFromCBR"); }
    }
    public static string PrepareBanksUpdate
    {
       get { return resolver.GetQuery("PrepareBanksUpdate"); }
    }
    public static string GetNewCountBanks
    {
       get { return resolver.GetQuery("GetNewCountBanks"); }
    }
    public static string CreateBanksFromCBR
    {
       get { return resolver.GetQuery("CreateBanksFromCBR"); }
    }
    public static string CleanTempTablesAfterUpdateBanks
    {
       get { return resolver.GetQuery("CleanTempTablesAfterUpdateBanks"); }
    }
    public static string SungeroCounterpartyIndicesNameQuery
    {
       get { return resolver.GetQuery("SungeroCounterpartyIndicesNameQuery"); }
    }
    public static string SungeroCounterpartyIndexQuery
    {
       get { return resolver.GetQuery("SungeroCounterpartyIndexQuery"); }
    }
  }
}

// ==================================================================
// ModuleInitializer.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Parties.Server
{
  public partial class ModuleInitializer : global::Sungero.Domain.AppliedModuleInitializer
  {
  }
}

