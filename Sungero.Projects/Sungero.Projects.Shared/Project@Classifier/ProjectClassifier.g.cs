
// ==================================================================
// ProjectClassifierState.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Projects.Shared
{
  public class ProjectClassifierState : 
    global::Sungero.Domain.Shared.ChildEntityState, global::Sungero.Projects.IProjectClassifierState
  {
    public ProjectClassifierState(global::Sungero.Projects.IProjectClassifier entity) : base(entity) { }

    public new global::Sungero.Projects.IProjectClassifierPropertyStates Properties
    {
      get { return (global::Sungero.Projects.IProjectClassifierPropertyStates)base.Properties; }
    }

    protected override global::Sungero.Domain.Shared.IEntityPropertyStates CreatePropertyStates(global::Sungero.Domain.Shared.IEntity entity)
    {
      return new global::Sungero.Projects.Shared.ProjectClassifierPropertyStates(entity);
    }


  }


  public class ProjectClassifierPropertyStates : 
    global::Sungero.Domain.Shared.ChildEntityPropertyStates, global::Sungero.Projects.IProjectClassifierPropertyStates
  {
            public global::Sungero.Domain.Shared.IPropertyState<global::Sungero.Projects.IProject> Project 
            {
              get { return this.InternalProject; }
            }

            protected virtual global::Sungero.Domain.Shared.IPropertyState<global::Sungero.Projects.IProject> InternalProject
            {
              get { return this.GetPropertyState<global::Sungero.Projects.IProject>("Project"); }
            }
            public global::Sungero.Domain.Shared.IPropertyState<global::System.String> FolderName 
            {
              get { return this.GetPropertyState<global::System.String>("FolderName"); }
            }
            public global::Sungero.Domain.Shared.IPropertyState<global::Sungero.Docflow.IDocumentKind> DocumentKind 
            {
              get { return this.InternalDocumentKind; }
            }

            protected virtual global::Sungero.Domain.Shared.IPropertyState<global::Sungero.Docflow.IDocumentKind> InternalDocumentKind
            {
              get { return this.GetPropertyState<global::Sungero.Docflow.IDocumentKind>("DocumentKind"); }
            }
            public global::Sungero.Domain.Shared.IPropertyState<global::Sungero.CoreEntities.IFolder> Folder 
            {
              get { return this.InternalFolder; }
            }

            protected virtual global::Sungero.Domain.Shared.IPropertyState<global::Sungero.CoreEntities.IFolder> InternalFolder
            {
              get { return this.GetPropertyState<global::Sungero.CoreEntities.IFolder>("Folder"); }
            }


    protected internal ProjectClassifierPropertyStates(global::Sungero.Domain.Shared.IEntity entity) : base(entity) { }
  }

  public class ProjectClassifierCollectionPropertyState<T> :
    global::Sungero.Domain.Shared.ChildEntityCollectionPropertyState<T>, global::Sungero.Projects.IProjectClassifierCollectionPropertyState<T>
    where T : global::Sungero.Projects.IProjectClassifier
  {
    public new global::Sungero.Projects.IProjectClassifierCollectionPropertyStates Properties
    {
      get { return (global::Sungero.Projects.IProjectClassifierCollectionPropertyStates)base.Properties; }
    }

    protected override global::Sungero.Domain.Shared.IChildEntityCollectionPropertyStates CreatePropertyStates()
    {
      return new global::Sungero.Projects.Shared.ProjectClassifierCollectionPropertyStates(this.ChildEntityMetadata);
    }

    protected internal ProjectClassifierCollectionPropertyState(global::Sungero.Domain.Shared.IEntity entity, string propertyName) : base(entity, propertyName) { }
  }

  public class ProjectClassifierCollectionPropertyStates :
    global::Sungero.Domain.Shared.ChildEntityCollectionPropertyStates, global::Sungero.Projects.IProjectClassifierCollectionPropertyStates
  {
        public global::Sungero.Domain.Shared.IChildPropertySummaryState Project
        {
          get { return this.GetChildPropertySummaryState("Project"); }
        }
        public global::Sungero.Domain.Shared.IChildPropertySummaryState FolderName
        {
          get { return this.GetChildPropertySummaryState("FolderName"); }
        }
        public global::Sungero.Domain.Shared.IChildPropertySummaryState DocumentKind
        {
          get { return this.GetChildPropertySummaryState("DocumentKind"); }
        }
        public global::Sungero.Domain.Shared.IChildPropertySummaryState Folder
        {
          get { return this.GetChildPropertySummaryState("Folder"); }
        }


    protected internal ProjectClassifierCollectionPropertyStates(global::Sungero.Metadata.EntityMetadata childEntityMetadata) : base(childEntityMetadata) { }
  }
}

// ==================================================================
// ProjectClassifierEventArgs.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Projects.Shared
{  
    public class ProjectClassifierDocumentKindChangedEventArgs : global::Sungero.Domain.Shared.PropertyChangedEventArgs<global::Sungero.Docflow.IDocumentKind>
    {
      public ProjectClassifierDocumentKindChangedEventArgs(global::Sungero.Domain.Shared.IPropertyState<global::Sungero.Docflow.IDocumentKind> state, global::Sungero.Docflow.IDocumentKind newValue, global::Sungero.Domain.Shared.IEntity entity): base(state, newValue, entity) { }
    }

    public class ProjectClassifierFolderChangedEventArgs : global::Sungero.Domain.Shared.PropertyChangedEventArgs<global::Sungero.CoreEntities.IFolder>
    {
      public ProjectClassifierFolderChangedEventArgs(global::Sungero.Domain.Shared.IPropertyState<global::Sungero.CoreEntities.IFolder> state, global::Sungero.CoreEntities.IFolder newValue, global::Sungero.Domain.Shared.IEntity entity): base(state, newValue, entity) { }
    }

}

// ==================================================================
// ProjectClassifierInfo.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Projects.Shared
{
  public class ProjectClassifierInfo : 
    global::Sungero.Domain.Shared.ChildEntityInfo, global::Sungero.Projects.IProjectClassifierInfo
  {
    public ProjectClassifierInfo(global::System.Type entityType) : base(entityType) { }

    public new global::Sungero.Projects.IProjectClassifierPropertiesInfo Properties
    {
      get { return (global::Sungero.Projects.IProjectClassifierPropertiesInfo)base.Properties; }
    }

    protected override global::Sungero.Domain.Shared.IEntityPropertiesInfo CreateEntityPropertiesInfo(global::System.Type entityType)
    {
      return new global::Sungero.Projects.Shared.ProjectClassifierPropertiesInfo(entityType);
    }

  }

  public class ProjectClassifierPropertiesInfo : 
    global::Sungero.Domain.Shared.ChildEntityPropertiesInfo, global::Sungero.Projects.IProjectClassifierPropertiesInfo
  {
        public global::Sungero.Domain.Shared.INavigationPropertyInfo<global::Sungero.Projects.IProjectInfo, global::Sungero.Projects.IProject> Project 
        {
          get
          {
             var propertyMetadata = this.GetPropertyMetadata<global::Sungero.Metadata.NavigationPropertyMetadata>("Project");
             return new global::Sungero.Domain.Shared.NavigationPropertyInfo<global::Sungero.Projects.IProjectInfo, global::Sungero.Projects.IProject>(propertyMetadata);
          }
        }
        public global::Sungero.Domain.Shared.IStringPropertyInfo FolderName 
        {
          get
          {
             var propertyMetadata = this.GetPropertyMetadata<global::Sungero.Metadata.StringPropertyMetadata>("FolderName");
             return new global::Sungero.Domain.Shared.StringPropertyInfo(propertyMetadata);
          }
        }
        public global::Sungero.Domain.Shared.INavigationPropertyInfo<global::Sungero.Docflow.IDocumentKindInfo, global::Sungero.Docflow.IDocumentKind> DocumentKind 
        {
          get
          {
             var propertyMetadata = this.GetPropertyMetadata<global::Sungero.Metadata.NavigationPropertyMetadata>("DocumentKind");
             return new global::Sungero.Domain.Shared.NavigationPropertyInfo<global::Sungero.Docflow.IDocumentKindInfo, global::Sungero.Docflow.IDocumentKind>(propertyMetadata);
          }
        }
        public global::Sungero.Domain.Shared.INavigationPropertyInfo<global::Sungero.CoreEntities.IFolderInfo, global::Sungero.CoreEntities.IFolder> Folder 
        {
          get
          {
             var propertyMetadata = this.GetPropertyMetadata<global::Sungero.Metadata.NavigationPropertyMetadata>("Folder");
             return new global::Sungero.Domain.Shared.NavigationPropertyInfo<global::Sungero.CoreEntities.IFolderInfo, global::Sungero.CoreEntities.IFolder>(propertyMetadata);
          }
        }


    protected internal ProjectClassifierPropertiesInfo(global::System.Type entityType) : base(entityType) { }
  }

}
