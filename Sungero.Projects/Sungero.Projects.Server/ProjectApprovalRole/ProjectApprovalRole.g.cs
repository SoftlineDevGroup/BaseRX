
// ==================================================================
// ProjectApprovalRole.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Projects.Server
{
    public class ProjectApprovalRoleFilter<T> :
      global::Sungero.Docflow.Server.ApprovalRoleBaseFilter<T>
      where T : class, global::Sungero.Projects.IProjectApprovalRole
    {
      private global::Sungero.Projects.IProjectApprovalRoleFilterState filter
      {
        get
        {
          return (Sungero.Projects.IProjectApprovalRoleFilterState)this.Filter;
        }
      }

      protected override global::System.Linq.IQueryable<T> ApplyAppliedFilter(global::System.Linq.IQueryable<T> query)
      {
        return base.ApplyAppliedFilter(query);
      }

      public ProjectApprovalRoleFilter(global::Sungero.Projects.IProjectApprovalRoleFilterState filter)
      : base(filter)
      {
      }

      protected ProjectApprovalRoleFilter()
      {
      }
    }
      public class ProjectApprovalRoleUiFilter<T> :
        global::Sungero.Docflow.Server.ApprovalRoleBaseUiFilter<T>
        where T : class, global::Sungero.Projects.IProjectApprovalRole
      {
        protected override global::System.Linq.IQueryable<T> ApplyAppliedFilter(global::System.Linq.IQueryable<T> query)
        {
          return base.ApplyAppliedFilter(query);
        }
      }

    public class ProjectApprovalRoleSearchDialogModel : global::Sungero.Docflow.Server.ApprovalRoleBaseSearchDialogModel
        {
                  public override global::System.Int32? Id { get; protected set; }
                  public override global::System.String Name { get; protected set; }
                  public override global::System.String Description { get; protected set; }


                  public override global::System.Collections.Generic.IEnumerable<Sungero.Core.Enumeration> Status { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<Sungero.Core.Enumeration> Type { get; protected set; }




        }





  [global::Sungero.Domain.Filter(typeof(global::Sungero.Projects.Server.ProjectApprovalRoleFilter<global::Sungero.Projects.IProjectApprovalRole>))]
  [global::Sungero.Domain.UiFilter(typeof(global::Sungero.Projects.Server.ProjectApprovalRoleUiFilter<global::Sungero.Projects.IProjectApprovalRole>))]

  public class ProjectApprovalRole :
    global::Sungero.Docflow.Server.ApprovalRoleBase, global::Sungero.Projects.IProjectApprovalRole
  {
    public static new readonly global::System.Guid ClassTypeGuid = global::System.Guid.Parse("b9d8afd2-0f9e-4d40-8d61-1a9feee5754a");

    public override global::System.Guid TypeGuid
    {
      get { return global::Sungero.Projects.Server.ProjectApprovalRole.ClassTypeGuid; }
    }

    public override string TypeName
    {
      get { return "Sungero.Projects.IProjectApprovalRole, Sungero.Domain.Interfaces"; }
    }

    public override string DisplayValue
    {
      get { return this.Name; }
      set { this.Name = value; }
    }

    public new virtual global::Sungero.Projects.IProjectApprovalRoleState State
    {
      get { return (global::Sungero.Projects.IProjectApprovalRoleState)base.State; }
    }

    protected override global::Sungero.Domain.Shared.IEntityState CreateState()
    {
      return new global::Sungero.Projects.Shared.ProjectApprovalRoleState(this);
    }

    public new virtual global::Sungero.Projects.IProjectApprovalRoleInfo Info
    {
      get { return (global::Sungero.Projects.IProjectApprovalRoleInfo)base.Info; }
    }

    public new virtual global::Sungero.Projects.IProjectApprovalRoleAccessRights AccessRights
    {
      get { return (global::Sungero.Projects.IProjectApprovalRoleAccessRights)base.AccessRights; }
    }

    protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
    {
      return new global::Sungero.Projects.Server.ProjectApprovalRoleAccessRights(this);
    }

    protected override global::Sungero.Domain.EntityFunctions CreateServerFunctions()
    {
      return new global::Sungero.Projects.Server.ProjectApprovalRoleFunctions(this);
    }

    protected override global::Sungero.Domain.Shared.EntityFunctions CreateSharedFunctions()
    {
      return new global::Sungero.Projects.Shared.ProjectApprovalRoleFunctions(this);
    }

    protected override object CreateHandlers() {
      return new global::Sungero.Projects.ProjectApprovalRoleServerHandlers(this);
    }

    protected override object CreateSharedHandlers() {
      return new global::Sungero.Projects.ProjectApprovalRoleSharedHandlers(this);
    }










    protected override global::Sungero.Domain.Shared.EntityCreatingFromServerHandler CreateCreatingFromServerHandler(
      global::Sungero.Domain.Shared.IEntity entitySource)
    {
      return new global::Sungero.Projects.ProjectApprovalRoleCreatingFromServerHandler((global::Sungero.Projects.IProjectApprovalRole)entitySource, this.Info);
    }

    #region Framework events



    #endregion


    public ProjectApprovalRole()
    {
    }

  }
}

// ==================================================================
// ProjectApprovalRoleHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Projects
{

  public partial class ProjectApprovalRoleFilteringServerHandler<T>
    : global::Sungero.Docflow.ApprovalRoleBaseFilteringServerHandler<T>  
    where T : class, global::Sungero.Projects.IProjectApprovalRole
  {
    private global::Sungero.Projects.IProjectApprovalRoleFilterState _filter
    {
      get
      {
        return (Sungero.Projects.IProjectApprovalRoleFilterState)this.Filter;
      }
    }

    public ProjectApprovalRoleFilteringServerHandler(global::Sungero.Projects.IProjectApprovalRoleFilterState filter)
    : base(filter)
    {
    }

    protected ProjectApprovalRoleFilteringServerHandler()
    {
    }

    public override global::System.Linq.IQueryable<T> Filtering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.FilteringEventArgs e)
    {
      query = base.Filtering(query, e);
            return query;
    }


  }

  public partial class ProjectApprovalRoleUiFilteringServerHandler<T>
    : global::Sungero.Docflow.ApprovalRoleBaseUiFilteringServerHandler<T>
    where T : class, global::Sungero.Projects.IProjectApprovalRole
  {
    public override global::System.Linq.IQueryable<T> Filtering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.UiFilteringEventArgs e)
    {
      query = base.Filtering(query, e);
            return query;
    }
  }

  public partial class ProjectApprovalRoleSearchDialogServerHandler : global::Sungero.Docflow.ApprovalRoleBaseSearchDialogServerHandler
   {
     private global::Sungero.Projects.Server.ProjectApprovalRoleSearchDialogModel _dialog
     {
       get
       {
         return (global::Sungero.Projects.Server.ProjectApprovalRoleSearchDialogModel)this.Dialog;
       }
     }

     public ProjectApprovalRoleSearchDialogServerHandler(global::Sungero.Projects.Server.ProjectApprovalRoleSearchDialogModel dialog)
       : base(dialog)
     {
     }
   }

  public partial class ProjectApprovalRoleServerHandlers : global::Sungero.Docflow.ApprovalRoleBaseServerHandlers
  {
    private global::Sungero.Projects.IProjectApprovalRole _obj
    {
      get { return (global::Sungero.Projects.IProjectApprovalRole)this.Entity; }
    }

    public ProjectApprovalRoleServerHandlers(global::Sungero.Projects.IProjectApprovalRole entity)
      : base(entity)
    {
    }
  }

  public partial class ProjectApprovalRoleCreatingFromServerHandler : global::Sungero.Docflow.ApprovalRoleBaseCreatingFromServerHandler
  {
    private global::Sungero.Projects.IProjectApprovalRole _source
    {
      get { return (global::Sungero.Projects.IProjectApprovalRole)this.Source; }
    }

    private global::Sungero.Projects.IProjectApprovalRoleInfo _info
    {
      get { return (global::Sungero.Projects.IProjectApprovalRoleInfo)this._Info; }
    }

    public ProjectApprovalRoleCreatingFromServerHandler(global::Sungero.Projects.IProjectApprovalRole source, global::Sungero.Projects.IProjectApprovalRoleInfo info)
      : base(source, info)
    {
    }
  }

}

// ==================================================================
// ProjectApprovalRoleEventArgs.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Projects.Server
{
}

// ==================================================================
// ProjectApprovalRoleAccessRights.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Projects.Server
{
  public class ProjectApprovalRoleAccessRights : 
    Sungero.Docflow.Server.ApprovalRoleBaseAccessRights, Sungero.Projects.IProjectApprovalRoleAccessRights
  {

    public ProjectApprovalRoleAccessRights(global::Sungero.Domain.Shared.IEntity entity) : base(entity)
    {
    }
  }

  public class ProjectApprovalRoleTypeAccessRights : 
    Sungero.Docflow.Server.ApprovalRoleBaseTypeAccessRights, Sungero.Projects.IProjectApprovalRoleAccessRights
  {

    public ProjectApprovalRoleTypeAccessRights(global::System.Type entityType) : base(entityType)
    {
    }
  }
}

// ==================================================================
// ProjectApprovalRoleRepositoryImplementer.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Projects.Server
{
    public class ProjectApprovalRoleRepositoryImplementer<T> : 
      global::Sungero.Docflow.Server.ApprovalRoleBaseRepositoryImplementer<T>,
      global::Sungero.Projects.IProjectApprovalRoleRepositoryImplementer<T>
      where T : global::Sungero.Projects.IProjectApprovalRole 
    {
       public new global::Sungero.Projects.IProjectApprovalRoleAccessRights AccessRights
       {
          get { return (global::Sungero.Projects.IProjectApprovalRoleAccessRights)base.AccessRights; }
       }

       public new global::Sungero.Projects.IProjectApprovalRoleInfo Info
       {
          get { return (global::Sungero.Projects.IProjectApprovalRoleInfo)base.Info; }
       }

       protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
       {
         return new global::Sungero.Projects.Server.ProjectApprovalRoleTypeAccessRights(typeof(T));
       }
    }
}

// ==================================================================
// ProjectApprovalRolePanelNavigationFilters.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Projects.Server
{
}

// ==================================================================
// ProjectApprovalRoleServerFunctions.g.cs
// ==================================================================

namespace Sungero.Projects.Server
{
  public partial class ProjectApprovalRoleFunctions : global::Sungero.Docflow.Server.ApprovalRoleBaseFunctions
  {
    private global::Sungero.Projects.IProjectApprovalRole _obj
    {
      get { return (global::Sungero.Projects.IProjectApprovalRole)this.Entity; }
    }

    public ProjectApprovalRoleFunctions(global::Sungero.Projects.IProjectApprovalRole entity) : base(entity) { }
  }
}

// ==================================================================
// ProjectApprovalRoleFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Projects.Functions
{
  internal static class ProjectApprovalRole
  {
    /// <redirect project="Sungero.Projects.Server" type="Sungero.Projects.Server.ProjectApprovalRoleFunctions" />
    internal static  global::Sungero.Company.IEmployee GetRolePerformer(global::Sungero.Projects.IProjectApprovalRole projectApprovalRole, global::Sungero.Docflow.IApprovalTask task)
    {
      var functions = (global::Sungero.Projects.Server.ProjectApprovalRoleFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)projectApprovalRole).FunctionsContainer.ServerFunctions;
      return functions.GetRolePerformer(task);
    }

    /// <redirect project="Sungero.Projects.Shared" type="Sungero.Projects.Shared.ProjectApprovalRoleFunctions" />
    internal static  global::System.Collections.Generic.List<global::Sungero.Docflow.IDocumentKind> Filter(global::Sungero.Projects.IProjectApprovalRole projectApprovalRole, global::System.Collections.Generic.List<global::Sungero.Docflow.IDocumentKind> kinds)
    {
      var functions = (global::Sungero.Projects.Shared.ProjectApprovalRoleFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)projectApprovalRole).FunctionsContainer.SharedFunctions;
      return functions.Filter(kinds);
    }

  }
}

// ==================================================================
// ProjectApprovalRoleServerPublicFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Projects.Server
{
  public class ProjectApprovalRoleServerPublicFunctions : global::Sungero.Projects.Server.IProjectApprovalRoleServerPublicFunctions
  {
  }
}

// ==================================================================
// ProjectApprovalRoleQueries.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Projects.Queries
{
  public class ProjectApprovalRole
  {
    private static global::Sungero.Domain.SqlQueryResolver resolver = new global::Sungero.Domain.SqlQueryResolver("Sungero.Projects.Server.ProjectApprovalRole.ProjectApprovalRoleQueries.xml", System.Reflection.Assembly.GetExecutingAssembly());
  }
}
