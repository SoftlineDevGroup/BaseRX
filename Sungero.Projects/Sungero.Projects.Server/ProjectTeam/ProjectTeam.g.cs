
// ==================================================================
// ProjectTeam.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Projects.Server
{
    public class ProjectTeamFilter<T> :
      global::Sungero.CoreEntities.Server.GroupFilter<T>
      where T : class, global::Sungero.Projects.IProjectTeam
    {
      protected new global::Sungero.Projects.IProjectTeamFilterState Filter { get; private set; }

      private global::Sungero.Projects.IProjectTeamFilterState filter
      {
        get
        {
          return this.Filter;
        }
      }

      protected override global::System.Linq.IQueryable<T> ApplyAppliedFilter(global::System.Linq.IQueryable<T> query)
      {
        return base.ApplyAppliedFilter(query);
      }

      public ProjectTeamFilter(global::Sungero.Projects.IProjectTeamFilterState filter)
      : base()
      {
        this.Filter = filter;
      }

      protected ProjectTeamFilter()
      {
      }
    }
      public class ProjectTeamUiFilter<T> :
        global::Sungero.Domain.EntityUiFilterBase<T>
        where T : class, global::Sungero.Projects.IProjectTeam
      {
        protected override global::System.Linq.IQueryable<T> ApplyAppliedFilter(global::System.Linq.IQueryable<T> query)
        {
          return base.ApplyAppliedFilter(query);
        }
      }

    public class ProjectTeamSearchDialogModel : global::Sungero.CoreEntities.Server.GroupSearchDialogModel
        {
                  public override global::System.Int32? Id { get; protected set; }
                  public override global::System.Boolean? IsSystem { get; protected set; }
                  public override global::System.String Name { get; protected set; }


                  public override global::System.Collections.Generic.IEnumerable<Sungero.CoreEntities.IGroup> Parent { get; protected set; }




                   [Sungero.Domain.Shared.HideInDevStudio()]
                   public new ProjectTeamRecipientLinksModel RecipientLinks { get { return (ProjectTeamRecipientLinksModel)base.RecipientLinks; } protected set { base.RecipientLinks = value; } }

        }

      public class ProjectTeamRecipientLinksModel : global::Sungero.CoreEntities.Server.GroupRecipientLinksModel
          {
                      [Sungero.Domain.Shared.HideInDevStudio()]
                      public override global::System.Int32? Id { get; protected set; }




         }





  [global::Sungero.Domain.Filter(typeof(global::Sungero.Projects.Server.ProjectTeamFilter<global::Sungero.Projects.IProjectTeam>))]
  [global::Sungero.Domain.UiFilter(typeof(global::Sungero.Projects.Server.ProjectTeamUiFilter<global::Sungero.Projects.IProjectTeam>))]

  public class ProjectTeam :
    global::Sungero.CoreEntities.Server.Group, global::Sungero.Projects.IProjectTeam, global::Sungero.Domain.Shared.ISecurableEntity, global::Sungero.Domain.IInternalSecurableEntity
  {
    public static new readonly global::System.Guid ClassTypeGuid = global::System.Guid.Parse("c5bd2267-3ce0-4f4b-a891-cce8638a24fa");

    public override global::System.Guid TypeGuid
    {
      get { return global::Sungero.Projects.Server.ProjectTeam.ClassTypeGuid; }
    }

    public override string TypeName
    {
      get { return "Sungero.Projects.IProjectTeam, Sungero.Domain.Interfaces"; }
    }

    public override string DisplayValue
    {
      get { return this.Name; }
      set { this.Name = value; }
    }

    public new virtual global::Sungero.Projects.IProjectTeamState State
    {
      get { return (global::Sungero.Projects.IProjectTeamState)base.State; }
    }

    protected override global::Sungero.Domain.Shared.IEntityState CreateState()
    {
      return new global::Sungero.Projects.Shared.ProjectTeamState(this);
    }

    public new virtual global::Sungero.Projects.IProjectTeamInfo Info
    {
      get { return (global::Sungero.Projects.IProjectTeamInfo)base.Info; }
    }

    public new virtual global::Sungero.Projects.IProjectTeamAccessRights AccessRights
    {
      get { return (global::Sungero.Projects.IProjectTeamAccessRights)base.AccessRights; }
    }

    protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
    {
      return new global::Sungero.Projects.Server.ProjectTeamAccessRights(this);
    }

    protected override global::Sungero.Domain.EntityFunctions CreateServerFunctions()
    {
      return new global::Sungero.Projects.Server.ProjectTeamFunctions(this);
    }

    protected override global::Sungero.Domain.Shared.EntityFunctions CreateSharedFunctions()
    {
      return new global::Sungero.Projects.Shared.ProjectTeamFunctions(this);
    }

    protected override object CreateHandlers() {
      return new global::Sungero.Projects.ProjectTeamServerHandlers(this);
    }

    protected override object CreateSharedHandlers() {
      return new global::Sungero.Projects.ProjectTeamSharedHandlers(this);
    }









    protected override global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.CoreEntities.IGroupRecipientLinks> CreateRecipientLinksCollection()
    {
      return new global::Sungero.Domain.ChildEntityCollection<global::Sungero.Projects.IProjectTeamRecipientLinks>() { RootEntity = this };
    }


    protected override global::Sungero.Domain.Shared.EntityCreatingFromServerHandler CreateCreatingFromServerHandler(
      global::Sungero.Domain.Shared.IEntity entitySource)
    {
      return new global::Sungero.Projects.ProjectTeamCreatingFromServerHandler((global::Sungero.Projects.IProjectTeam)entitySource, this.Info);
    }

    #region Framework events




    #endregion


    public ProjectTeam()
    {
    }

  }
}

// ==================================================================
// ProjectTeamHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Projects
{

  public partial class ProjectTeamFilteringServerHandler<T>
    : global::Sungero.Domain.EntityFilteringServerHandler<T>  
    where T : class, global::Sungero.Projects.IProjectTeam
  {
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    protected new global::Sungero.Projects.IProjectTeamFilterState Filter { get; private set; }

    private global::Sungero.Projects.IProjectTeamFilterState _filter
    {
      get
      {
        return this.Filter;
      }
    }

    public ProjectTeamFilteringServerHandler(global::Sungero.Projects.IProjectTeamFilterState filter)
    : base()
    {
      this.Filter = filter;
    }

    protected ProjectTeamFilteringServerHandler()
    {
    }

    public override global::System.Linq.IQueryable<T> Filtering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.FilteringEventArgs e)
    {
      return query;
    }


  }

  public partial class ProjectTeamUiFilteringServerHandler<T>
    : global::Sungero.Domain.EntityUiFilteringServerHandler<T>
    where T : class, global::Sungero.Projects.IProjectTeam
  {
    public override global::System.Linq.IQueryable<T> Filtering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.UiFilteringEventArgs e)
    {
      query = base.Filtering(query, e);
            return query;
    }
  }

  public partial class ProjectTeamSearchDialogServerHandler : global::Sungero.CoreEntities.GroupSearchDialogServerHandler
   {
     private global::Sungero.Projects.Server.ProjectTeamSearchDialogModel _dialog
     {
       get
       {
         return (global::Sungero.Projects.Server.ProjectTeamSearchDialogModel)this.Dialog;
       }
     }

     public ProjectTeamSearchDialogServerHandler(global::Sungero.Projects.Server.ProjectTeamSearchDialogModel dialog)
       : base(dialog)
     {
     }
   }

  public partial class ProjectTeamServerHandlers : global::Sungero.CoreEntities.GroupServerHandlers
  {
    private global::Sungero.Projects.IProjectTeam _obj
    {
      get { return (global::Sungero.Projects.IProjectTeam)this.Entity; }
    }

    public ProjectTeamServerHandlers(global::Sungero.Projects.IProjectTeam entity)
      : base(entity)
    {
    }
  }

  public partial class ProjectTeamCreatingFromServerHandler : global::Sungero.CoreEntities.GroupCreatingFromServerHandler
  {
    private global::Sungero.Projects.IProjectTeam _source
    {
      get { return (global::Sungero.Projects.IProjectTeam)this.Source; }
    }

    private global::Sungero.Projects.IProjectTeamInfo _info
    {
      get { return (global::Sungero.Projects.IProjectTeamInfo)this._Info; }
    }

    public ProjectTeamCreatingFromServerHandler(global::Sungero.Projects.IProjectTeam source, global::Sungero.Projects.IProjectTeamInfo info)
      : base(source, info)
    {
    }
  }

}

// ==================================================================
// ProjectTeamEventArgs.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Projects.Server
{
}

// ==================================================================
// ProjectTeamAccessRights.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Projects.Server
{
  public class ProjectTeamAccessRights : 
    Sungero.CoreEntities.Server.GroupAccessRights, Sungero.Projects.IProjectTeamAccessRights
  {

    public ProjectTeamAccessRights(global::Sungero.Domain.Shared.IEntity entity) : base(entity)
    {
    }
  }

  public class ProjectTeamTypeAccessRights : 
    Sungero.CoreEntities.Server.GroupTypeAccessRights, Sungero.Projects.IProjectTeamAccessRights
  {

    public ProjectTeamTypeAccessRights(global::System.Type entityType) : base(entityType)
    {
    }
  }
}

// ==================================================================
// ProjectTeamRepositoryImplementer.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Projects.Server
{
    public class ProjectTeamRepositoryImplementer<T> : 
      global::Sungero.CoreEntities.Server.GroupRepositoryImplementer<T>,
      global::Sungero.Projects.IProjectTeamRepositoryImplementer<T>
      where T : global::Sungero.Projects.IProjectTeam 
    {
       public new global::Sungero.Projects.IProjectTeamAccessRights AccessRights
       {
          get { return (global::Sungero.Projects.IProjectTeamAccessRights)base.AccessRights; }
       }

       public new global::Sungero.Projects.IProjectTeamInfo Info
       {
          get { return (global::Sungero.Projects.IProjectTeamInfo)base.Info; }
       }

       protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
       {
         return new global::Sungero.Projects.Server.ProjectTeamTypeAccessRights(typeof(T));
       }
    }
}

// ==================================================================
// ProjectTeamPanelNavigationFilters.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Projects.Server
{
}

// ==================================================================
// ProjectTeamServerFunctions.g.cs
// ==================================================================

namespace Sungero.Projects.Server
{
  public partial class ProjectTeamFunctions : global::Sungero.CoreEntities.Server.GroupFunctions
  {
    private global::Sungero.Projects.IProjectTeam _obj
    {
      get { return (global::Sungero.Projects.IProjectTeam)this.Entity; }
    }

    public ProjectTeamFunctions(global::Sungero.Projects.IProjectTeam entity) : base(entity) { }
  }
}

// ==================================================================
// ProjectTeamFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Projects.Functions
{
  internal static class ProjectTeam
  {
  }
}

// ==================================================================
// ProjectTeamServerPublicFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Projects.Server
{
  public class ProjectTeamServerPublicFunctions : global::Sungero.Projects.Server.IProjectTeamServerPublicFunctions
  {
  }
}

// ==================================================================
// ProjectTeamQueries.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Projects.Queries
{
  public class ProjectTeam
  {
    private static global::Sungero.Domain.SqlQueryResolver resolver = new global::Sungero.Domain.SqlQueryResolver("Sungero.Projects.Server.ProjectTeam.ProjectTeamQueries.xml", System.Reflection.Assembly.GetExecutingAssembly());
  }
}
