
// ==================================================================
// ProjectDocument.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Projects.Server
{
    public class ProjectDocumentFilter<T> :
      global::Sungero.Docflow.Server.InternalDocumentBaseFilter<T>
      where T : class, global::Sungero.Projects.IProjectDocument
    {
      private global::Sungero.Projects.IProjectDocumentFilterState filter
      {
        get
        {
          return (Sungero.Projects.IProjectDocumentFilterState)this.Filter;
        }
      }

      protected override global::System.Linq.IQueryable<T> ApplyAppliedFilter(global::System.Linq.IQueryable<T> query)
      {
        return base.ApplyAppliedFilter(query);
      }

      public ProjectDocumentFilter(global::Sungero.Projects.IProjectDocumentFilterState filter)
      : base(filter)
      {
      }

      protected ProjectDocumentFilter()
      {
      }
    }
    public class ProjectDocumentSearchDialogModel : global::Sungero.Docflow.Server.InternalDocumentBaseSearchDialogModel
        {
                  public override global::System.Int32? Id { get; protected set; }
                  public override global::System.String Name { get; protected set; }
                  public override global::System.String Subject { get; protected set; }


                  public override global::System.Collections.Generic.IEnumerable<Sungero.Core.Enumeration> VerificationState { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<Sungero.Docflow.IDocumentKind> DocumentKind { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<Sungero.Content.IAssociatedApplication> AssociatedApplication { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<Sungero.CoreEntities.IRecipient> PreparedBy { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<Sungero.CoreEntities.IRecipient> Author { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<CommonLibrary.DateRangeValue> Created { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<Sungero.Company.IBusinessUnit> BusinessUnit { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<Sungero.CoreEntities.IRecipient> OurSignatory { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<Sungero.Company.IDepartment> Department { get; protected set; }



                  public virtual global::System.Collections.Generic.IEnumerable<Sungero.Docflow.IProjectBase> Project { get; protected set; }


                   public new ProjectDocumentVersionsModel Versions { get { return (ProjectDocumentVersionsModel)base.Versions; } protected set { base.Versions = value; } }
                   [Sungero.Domain.Shared.HideInDevStudio()]
                   public new ProjectDocumentTrackingModel Tracking { get { return (ProjectDocumentTrackingModel)base.Tracking; } protected set { base.Tracking = value; } }

        }

      public class ProjectDocumentVersionsModel : global::Sungero.Docflow.Server.InternalDocumentBaseVersionsModel
          {
                      [Sungero.Domain.Shared.HideInDevStudio()]
                      public override global::System.Int32? Id { get; protected set; }
                      public override global::System.String Body { get; protected set; }




         }
      public class ProjectDocumentTrackingModel : global::Sungero.Docflow.Server.InternalDocumentBaseTrackingModel
          {
                      [Sungero.Domain.Shared.HideInDevStudio()]
                      public override global::System.Int32? Id { get; protected set; }




         }





  [global::Sungero.Domain.Filter(typeof(global::Sungero.Projects.Server.ProjectDocumentFilter<global::Sungero.Projects.IProjectDocument>))]

  public class ProjectDocument :
    global::Sungero.Docflow.Server.InternalDocumentBase, global::Sungero.Projects.IProjectDocument, global::Sungero.Domain.Shared.ISecurableEntity, global::Sungero.Domain.IInternalSecurableEntity
  {
    public static new readonly global::System.Guid ClassTypeGuid = global::System.Guid.Parse("56df80b3-a795-4378-ace5-c20a2b1fb6d9");

    public override global::System.Guid TypeGuid
    {
      get { return global::Sungero.Projects.Server.ProjectDocument.ClassTypeGuid; }
    }

    public override string TypeName
    {
      get { return "Sungero.Projects.IProjectDocument, Sungero.Domain.Interfaces"; }
    }

    public override string DisplayValue
    {
      get { return this.Name; }
      set { this.Name = value; }
    }

    public new virtual global::Sungero.Projects.IProjectDocumentState State
    {
      get { return (global::Sungero.Projects.IProjectDocumentState)base.State; }
    }

    protected override global::Sungero.Domain.Shared.IEntityState CreateState()
    {
      return new global::Sungero.Projects.Shared.ProjectDocumentState(this);
    }

    public new virtual global::Sungero.Projects.IProjectDocumentInfo Info
    {
      get { return (global::Sungero.Projects.IProjectDocumentInfo)base.Info; }
    }

    public new virtual global::Sungero.Projects.IProjectDocumentAccessRights AccessRights
    {
      get { return (global::Sungero.Projects.IProjectDocumentAccessRights)base.AccessRights; }
    }

    protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
    {
      return new global::Sungero.Projects.Server.ProjectDocumentAccessRights(this);
    }

    protected override global::Sungero.Domain.EntityFunctions CreateServerFunctions()
    {
      return new global::Sungero.Projects.Server.ProjectDocumentFunctions(this);
    }

    protected override global::Sungero.Domain.Shared.EntityFunctions CreateSharedFunctions()
    {
      return new global::Sungero.Projects.Shared.ProjectDocumentFunctions(this);
    }

    protected override object CreateHandlers() {
      return new global::Sungero.Projects.ProjectDocumentServerHandlers(this);
    }

    protected override object CreateSharedHandlers() {
      return new global::Sungero.Projects.ProjectDocumentSharedHandlers(this);
    }









    protected override global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Content.IElectronicDocumentVersions> CreateVersionsCollection()
    {
      return new global::Sungero.Domain.ChildEntityCollection<global::Sungero.Projects.IProjectDocumentVersions>() { RootEntity = this };
    }
    protected override global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Docflow.IOfficialDocumentTracking> CreateTrackingCollection()
    {
      return new global::Sungero.Domain.ChildEntityCollection<global::Sungero.Projects.IProjectDocumentTracking>() { RootEntity = this };
    }


    protected override global::Sungero.Domain.Shared.EntityCreatingFromServerHandler CreateCreatingFromServerHandler(
      global::Sungero.Domain.Shared.IEntity entitySource)
    {
      return new global::Sungero.Projects.ProjectDocumentCreatingFromServerHandler((global::Sungero.Projects.IProjectDocument)entitySource, this.Info);
    }

    #region Framework events





    #endregion


    public ProjectDocument()
    {
    }

    protected override global::Sungero.Domain.Shared.EntityConvertingFromServerHandler CreateConvertingFromServerHandler(   
      global::Sungero.Domain.Shared.IEntity entitySource)
    {
      return new global::Sungero.Projects.ProjectDocumentConvertingFromServerHandler((global::Sungero.Content.IElectronicDocument)entitySource, this.Info);
    }

  }
}

// ==================================================================
// ProjectDocumentHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Projects
{

  public partial class ProjectDocumentFilteringServerHandler<T>
    : global::Sungero.Docflow.InternalDocumentBaseFilteringServerHandler<T>  
    where T : class, global::Sungero.Projects.IProjectDocument
  {
    private global::Sungero.Projects.IProjectDocumentFilterState _filter
    {
      get
      {
        return (Sungero.Projects.IProjectDocumentFilterState)this.Filter;
      }
    }

    public ProjectDocumentFilteringServerHandler(global::Sungero.Projects.IProjectDocumentFilterState filter)
    : base(filter)
    {
    }

    protected ProjectDocumentFilteringServerHandler()
    {
    }

    public override global::System.Linq.IQueryable<T> Filtering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.FilteringEventArgs e)
    {
      query = base.Filtering(query, e);
            return query;
    }

      public override global::System.Linq.IQueryable<Sungero.Docflow.IDocumentRegister> DocumentRegisterFiltering(global::System.Linq.IQueryable<Sungero.Docflow.IDocumentRegister> query, global::Sungero.Domain.FilteringEventArgs e)
      {
        query = base.DocumentRegisterFiltering(query, e);
              return query;
      }

      public override global::System.Linq.IQueryable<Sungero.Docflow.IDocumentKind> DocumentKindFiltering(global::System.Linq.IQueryable<Sungero.Docflow.IDocumentKind> query, global::Sungero.Domain.FilteringEventArgs e)
      {
        query = base.DocumentKindFiltering(query, e);
              return query;
      }

      public override global::System.Linq.IQueryable<Sungero.Company.IBusinessUnit> BusinessUnitFiltering(global::System.Linq.IQueryable<Sungero.Company.IBusinessUnit> query, global::Sungero.Domain.FilteringEventArgs e)
      {
        query = base.BusinessUnitFiltering(query, e);
              return query;
      }

      public override global::System.Linq.IQueryable<Sungero.Company.IDepartment> DepartmentFiltering(global::System.Linq.IQueryable<Sungero.Company.IDepartment> query, global::Sungero.Domain.FilteringEventArgs e)
      {
        query = base.DepartmentFiltering(query, e);
              return query;
      }


  }

  public partial class ProjectDocumentSearchDialogServerHandler : global::Sungero.Docflow.InternalDocumentBaseSearchDialogServerHandler
   {
     private global::Sungero.Projects.Server.ProjectDocumentSearchDialogModel _dialog
     {
       get
       {
         return (global::Sungero.Projects.Server.ProjectDocumentSearchDialogModel)this.Dialog;
       }
     }

     public ProjectDocumentSearchDialogServerHandler(global::Sungero.Projects.Server.ProjectDocumentSearchDialogModel dialog)
       : base(dialog)
     {
     }
   }

  public partial class ProjectDocumentServerHandlers : global::Sungero.Docflow.InternalDocumentBaseServerHandlers
  {
    private global::Sungero.Projects.IProjectDocument _obj
    {
      get { return (global::Sungero.Projects.IProjectDocument)this.Entity; }
    }

    public ProjectDocumentServerHandlers(global::Sungero.Projects.IProjectDocument entity)
      : base(entity)
    {
    }
  }

  public partial class ProjectDocumentCreatingFromServerHandler : global::Sungero.Docflow.InternalDocumentBaseCreatingFromServerHandler
  {
    private global::Sungero.Projects.IProjectDocument _source
    {
      get { return (global::Sungero.Projects.IProjectDocument)this.Source; }
    }

    private global::Sungero.Projects.IProjectDocumentInfo _info
    {
      get { return (global::Sungero.Projects.IProjectDocumentInfo)this._Info; }
    }

    public ProjectDocumentCreatingFromServerHandler(global::Sungero.Projects.IProjectDocument source, global::Sungero.Projects.IProjectDocumentInfo info)
      : base(source, info)
    {
    }
  }

}

// ==================================================================
// ProjectDocumentEventArgs.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Projects.Server
{
}

// ==================================================================
// ProjectDocumentAccessRights.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Projects.Server
{
  public class ProjectDocumentAccessRights : 
    Sungero.Docflow.Server.InternalDocumentBaseAccessRights, Sungero.Projects.IProjectDocumentAccessRights
  {

    public ProjectDocumentAccessRights(global::Sungero.Domain.Shared.IEntity entity) : base(entity)
    {
    }
  }

  public class ProjectDocumentTypeAccessRights : 
    Sungero.Docflow.Server.InternalDocumentBaseTypeAccessRights, Sungero.Projects.IProjectDocumentAccessRights
  {

    public ProjectDocumentTypeAccessRights(global::System.Type entityType) : base(entityType)
    {
    }
  }
}

// ==================================================================
// ProjectDocumentRepositoryImplementer.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Projects.Server
{
    public class ProjectDocumentRepositoryImplementer<T> : 
      global::Sungero.Docflow.Server.InternalDocumentBaseRepositoryImplementer<T>,
      global::Sungero.Projects.IProjectDocumentRepositoryImplementer<T>
      where T : global::Sungero.Projects.IProjectDocument 
    {
       public new global::Sungero.Projects.IProjectDocumentAccessRights AccessRights
       {
          get { return (global::Sungero.Projects.IProjectDocumentAccessRights)base.AccessRights; }
       }

       public new global::Sungero.Projects.IProjectDocumentInfo Info
       {
          get { return (global::Sungero.Projects.IProjectDocumentInfo)base.Info; }
       }

       protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
       {
         return new global::Sungero.Projects.Server.ProjectDocumentTypeAccessRights(typeof(T));
       }
    }
}

// ==================================================================
// ProjectDocumentPanelNavigationFilters.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Projects.Server
{
    public class ProjectDocumentDocumentRegisterPanelNavigationFilter : global::Sungero.Docflow.Server.InternalDocumentBaseDocumentRegisterPanelNavigationFilter
    {
      private global::System.Linq.IQueryable Apply<T>(global::System.Linq.IQueryable query) where T: class, global::Sungero.Projects.IProjectDocument
      {
        var typedQuery = (global::System.Linq.IQueryable<global::Sungero.Docflow.IDocumentRegister>)query;
        var typedState = (global::Sungero.Projects.IProjectDocumentFilterState)this.State;
        var handlers = new global::Sungero.Projects.ProjectDocumentFilteringServerHandler<T>(typedState);
        var args = new global::Sungero.Domain.FilteringEventArgs();
        var result = handlers.DocumentRegisterFiltering(typedQuery, args);
        if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<global::Sungero.Docflow.IDocumentRegister>();
        return result;
      }

      public override global::System.Linq.IQueryable Apply(global::System.Linq.IQueryable query)
      {
        return this.Apply<global::Sungero.Projects.IProjectDocument>(query);
      }
    }

    public class ProjectDocumentDocumentKindPanelNavigationFilter : global::Sungero.Docflow.Server.InternalDocumentBaseDocumentKindPanelNavigationFilter
    {
      private global::System.Linq.IQueryable Apply<T>(global::System.Linq.IQueryable query) where T: class, global::Sungero.Projects.IProjectDocument
      {
        var typedQuery = (global::System.Linq.IQueryable<global::Sungero.Docflow.IDocumentKind>)query;
        var typedState = (global::Sungero.Projects.IProjectDocumentFilterState)this.State;
        var handlers = new global::Sungero.Projects.ProjectDocumentFilteringServerHandler<T>(typedState);
        var args = new global::Sungero.Domain.FilteringEventArgs();
        var result = handlers.DocumentKindFiltering(typedQuery, args);
        if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<global::Sungero.Docflow.IDocumentKind>();
        return result;
      }

      public override global::System.Linq.IQueryable Apply(global::System.Linq.IQueryable query)
      {
        return this.Apply<global::Sungero.Projects.IProjectDocument>(query);
      }
    }

    public class ProjectDocumentBusinessUnitPanelNavigationFilter : global::Sungero.Docflow.Server.InternalDocumentBaseBusinessUnitPanelNavigationFilter
    {
      private global::System.Linq.IQueryable Apply<T>(global::System.Linq.IQueryable query) where T: class, global::Sungero.Projects.IProjectDocument
      {
        var typedQuery = (global::System.Linq.IQueryable<global::Sungero.Company.IBusinessUnit>)query;
        var typedState = (global::Sungero.Projects.IProjectDocumentFilterState)this.State;
        var handlers = new global::Sungero.Projects.ProjectDocumentFilteringServerHandler<T>(typedState);
        var args = new global::Sungero.Domain.FilteringEventArgs();
        var result = handlers.BusinessUnitFiltering(typedQuery, args);
        if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<global::Sungero.Company.IBusinessUnit>();
        return result;
      }

      public override global::System.Linq.IQueryable Apply(global::System.Linq.IQueryable query)
      {
        return this.Apply<global::Sungero.Projects.IProjectDocument>(query);
      }
    }

    public class ProjectDocumentDepartmentPanelNavigationFilter : global::Sungero.Docflow.Server.InternalDocumentBaseDepartmentPanelNavigationFilter
    {
      private global::System.Linq.IQueryable Apply<T>(global::System.Linq.IQueryable query) where T: class, global::Sungero.Projects.IProjectDocument
      {
        var typedQuery = (global::System.Linq.IQueryable<global::Sungero.Company.IDepartment>)query;
        var typedState = (global::Sungero.Projects.IProjectDocumentFilterState)this.State;
        var handlers = new global::Sungero.Projects.ProjectDocumentFilteringServerHandler<T>(typedState);
        var args = new global::Sungero.Domain.FilteringEventArgs();
        var result = handlers.DepartmentFiltering(typedQuery, args);
        if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<global::Sungero.Company.IDepartment>();
        return result;
      }

      public override global::System.Linq.IQueryable Apply(global::System.Linq.IQueryable query)
      {
        return this.Apply<global::Sungero.Projects.IProjectDocument>(query);
      }
    }

}

// ==================================================================
// ProjectDocumentServerFunctions.g.cs
// ==================================================================

namespace Sungero.Projects.Server
{
  public partial class ProjectDocumentFunctions : global::Sungero.Docflow.Server.InternalDocumentBaseFunctions
  {
    private global::Sungero.Projects.IProjectDocument _obj
    {
      get { return (global::Sungero.Projects.IProjectDocument)this.Entity; }
    }

    public ProjectDocumentFunctions(global::Sungero.Projects.IProjectDocument entity) : base(entity) { }
  }
}

// ==================================================================
// ProjectDocumentFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Projects.Functions
{
  internal static class ProjectDocument
  {
    /// <redirect project="Sungero.Projects.Shared" type="Sungero.Projects.Shared.ProjectDocumentFunctions" />
    internal static  void FillName(global::Sungero.Projects.IProjectDocument projectDocument)
    {
      var functions = (global::Sungero.Projects.Shared.ProjectDocumentFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)projectDocument).FunctionsContainer.SharedFunctions;
    functions.FillName();
    }
    /// <redirect project="Sungero.Projects.Shared" type="Sungero.Projects.Shared.ProjectDocumentFunctions" />
    internal static  void RefreshDocumentForm(global::Sungero.Projects.IProjectDocument projectDocument)
    {
      var functions = (global::Sungero.Projects.Shared.ProjectDocumentFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)projectDocument).FunctionsContainer.SharedFunctions;
    functions.RefreshDocumentForm();
    }
    /// <redirect project="Sungero.Projects.Shared" type="Sungero.Projects.Shared.ProjectDocumentFunctions" />
    internal static  void SetRequiredProperties(global::Sungero.Projects.IProjectDocument projectDocument)
    {
      var functions = (global::Sungero.Projects.Shared.ProjectDocumentFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)projectDocument).FunctionsContainer.SharedFunctions;
    functions.SetRequiredProperties();
    }
    /// <redirect project="Sungero.Projects.Shared" type="Sungero.Projects.Shared.ProjectDocumentFunctions" />
    internal static  global::System.Boolean NeedClearProject(global::Sungero.Projects.IProjectDocument projectDocument, Sungero.Docflow.Shared.OfficialDocumentDocumentKindChangedEventArgs e)
    {
      var functions = (global::Sungero.Projects.Shared.ProjectDocumentFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)projectDocument).FunctionsContainer.SharedFunctions;
      return functions.NeedClearProject(e);
    }
    /// <redirect project="Sungero.Projects.Shared" type="Sungero.Projects.Shared.ProjectDocumentFunctions" />
    internal static  global::Sungero.Company.IEmployee GetDefaultSignatory(global::Sungero.Projects.IProjectDocument projectDocument, global::System.Collections.Generic.List<Docflow.Structures.SignatureSetting.Signatory> signatories)
    {
      var functions = (global::Sungero.Projects.Shared.ProjectDocumentFunctions)((global::Sungero.Domain.Shared.IEntityFunctions)projectDocument).FunctionsContainer.SharedFunctions;
      return functions.GetDefaultSignatory(signatories);
    }

  }
}

// ==================================================================
// ProjectDocumentServerPublicFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Projects.Server
{
  public class ProjectDocumentServerPublicFunctions : global::Sungero.Projects.Server.IProjectDocumentServerPublicFunctions
  {
  }
}

// ==================================================================
// ProjectDocumentQueries.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Projects.Queries
{
  public class ProjectDocument
  {
    private static global::Sungero.Domain.SqlQueryResolver resolver = new global::Sungero.Domain.SqlQueryResolver("Sungero.Projects.Server.ProjectDocument.ProjectDocumentQueries.xml", System.Reflection.Assembly.GetExecutingAssembly());
  }
}

// ==================================================================
// ProjectDocumentServerHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Projects
{
  public partial class ProjectDocumentConvertingFromServerHandler : global::Sungero.Docflow.InternalDocumentBaseConvertingFromServerHandler
  { 
    private global::Sungero.Projects.IProjectDocumentInfo _info
    {
      get { return (global::Sungero.Projects.IProjectDocumentInfo)this._Info; }
    }

    public ProjectDocumentConvertingFromServerHandler(global::Sungero.Content.IElectronicDocument source, global::Sungero.Projects.IProjectDocumentInfo info)
      : base(source, info)
    {
    }
  }
}
