
// ==================================================================
// ProjectDocumentRightsQueueItem.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Projects.Client
{
  public class ProjectDocumentRightsQueueItem :
    global::Sungero.Projects.Client.ProjectQueueItemBase, global::Sungero.Projects.IProjectDocumentRightsQueueItem
  {
    #region Fields and properties

    public static new readonly global::System.Guid ClassTypeGuid = global::System.Guid.Parse("aa042ddf-a9fb-4dea-883c-d0024b9574da");

    public override global::System.Guid TypeGuid
    {
      get { return global::Sungero.Projects.Client.ProjectDocumentRightsQueueItem.ClassTypeGuid; }
    }

    public override string TypeName
    {
      get { return "Sungero.Projects.IProjectDocumentRightsQueueItem, Sungero.Domain.Interfaces"; }
    }

      public override string DisplayValue
      {
        get { return this.Name; }
        set { this.Name = value; }
      }

      public override string DisplayPropertyName
      {
        get { return "Name"; }
      }


    public new global::Sungero.Projects.IProjectDocumentRightsQueueItemState State
    {
      get
      {
        return (global::Sungero.Projects.IProjectDocumentRightsQueueItemState)base.State;
      }
    }

    protected override global::Sungero.Domain.Shared.IEntityState CreateState()
    {
      return new global::Sungero.Projects.Shared.ProjectDocumentRightsQueueItemState(this);
    }

    public new global::Sungero.Projects.IProjectDocumentRightsQueueItemInfo Info
    {
      get
      {
        return (global::Sungero.Projects.IProjectDocumentRightsQueueItemInfo)base.Info;
      }
    }

    public new global::Sungero.Projects.IProjectDocumentRightsQueueItemAccessRights AccessRights
    {
      get
      {
        return (global::Sungero.Projects.IProjectDocumentRightsQueueItemAccessRights)base.AccessRights;
      }
    }

    protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
    {
      return new global::Sungero.Projects.Client.ProjectDocumentRightsQueueItemAccessRights(this);
    }

        protected global::Sungero.Domain.Client.SimpleProperty<global::System.Int32?> _DocumentId;

        public virtual global::System.Int32? DocumentId
        {
          get { return this._DocumentId.Value; }
          set { this._DocumentId.Value = value; }
        }










    #endregion

    #region Methods

    protected override object CreateActionsHandlers()
    {
      return new global::Sungero.Projects.Client.ProjectDocumentRightsQueueItemActions(this);
    }

    protected override object CreateCollectionActionsHandlers()
    {
      return new global::Sungero.Projects.Client.ProjectDocumentRightsQueueItemCollectionActions();
    }

    protected override object CreateAnyChildEntityActionsHandlers()
    {
      return new global::Sungero.Projects.Client.ProjectDocumentRightsQueueItemAnyChildEntityActions();
    }

    protected override object CreateAnyChildEntityCollectionActionsHandlers()
    {
      return new global::Sungero.Projects.Client.ProjectDocumentRightsQueueItemAnyChildEntityCollectionActions();
    }


    protected override global::Sungero.Domain.Client.EntityFunctions CreateClientFunctions()
    {
      return new global::Sungero.Projects.Client.ProjectDocumentRightsQueueItemFunctions(this);
    }

    protected override global::Sungero.Domain.Shared.EntityFunctions CreateSharedFunctions()
    {
      return new global::Sungero.Projects.Shared.ProjectDocumentRightsQueueItemFunctions(this);
    }
    protected override object CreateHandlers() {
      return new global::Sungero.Projects.ProjectDocumentRightsQueueItemClientHandlers(this);
    }
    protected override object CreateSharedHandlers() {
      return new global::Sungero.Projects.ProjectDocumentRightsQueueItemSharedHandlers(this);
    }

    #endregion

    #region Framework events

    protected void DocumentIdChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.IntegerPropertyChangedEventArgs(this.State.Properties.DocumentId, this.DocumentId, this);
     ((global::Sungero.Projects.ProjectDocumentRightsQueueItemSharedHandlers)this.SharedHandlers).DocumentIdChanged(args);
    }



  protected global::System.Int32? DocumentIdValueInputHandler(global::System.Int32? value)
  {
    var args = new global::Sungero.Presentation.IntegerValueInputEventArgs(this.DocumentId, value, this, this.Info.Properties.DocumentId);
    ((global::Sungero.Projects.ProjectDocumentRightsQueueItemClientHandlers)this.Handlers).DocumentIdValueInput(args);
    return args.NewValue;
  }



    #endregion

    #region Constructors





    public ProjectDocumentRightsQueueItem()
    {
            this._DocumentId = new global::Sungero.Domain.Client.SimpleProperty<global::System.Int32?>("DocumentId", this);
            this._DocumentId.ValueChanged += (sender, e) => { this.DocumentIdChangedHandler(); };
            this.AddProperty(this._DocumentId);








    }

    #endregion

  }
}

// ==================================================================
// ProjectDocumentRightsQueueItemPresenter.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Projects.Client
{
  public class ProjectDocumentRightsQueueItemPresenter<T> :
    global::Sungero.Projects.Client.ProjectQueueItemBasePresenter<T>
    where T : class, global::Sungero.Projects.IProjectDocumentRightsQueueItem
  {
    #region Fields and properties




    #endregion

    #region Methods

    #endregion

    #region Framework events

    protected override void EntityPropertyChangedEventHandler(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
    {
      base.EntityPropertyChangedEventHandler(sender, e);
    }

    #endregion



    #region Constructors

    private void Init()
    {
              this._BoxCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.ExchangeCore.IBoxBase>(() => this.Entity.Id, typeof(T), "Box");

              this._RootBoxCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.ExchangeCore.IBusinessUnitBox>(() => this.Entity.Id, typeof(T), "RootBox");


    }

    public ProjectDocumentRightsQueueItemPresenter()
    {
      this.Init();
    }

    #endregion
  }
}

// ==================================================================
// ProjectDocumentRightsQueueItemCollectionPresenter.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Projects.Client
{
  public class ProjectDocumentRightsQueueItemCollectionPresenter<T> : 
    global::Sungero.Projects.Client.ProjectQueueItemBaseCollectionPresenter<T>
    where T: class, global::Sungero.Projects.IProjectDocumentRightsQueueItem
  {
    #region Actions



    #endregion

    #region Methods


    #endregion

    public ProjectDocumentRightsQueueItemCollectionPresenter(global::System.Linq.IQueryable<T> query, OnLookup onLookup)
      : base(query, onLookup)
    {
    }

    public ProjectDocumentRightsQueueItemCollectionPresenter(global::System.Linq.IQueryable<T> query)
      : this(query, null) { }

    public ProjectDocumentRightsQueueItemCollectionPresenter(OnLookup onLookup)
      : this(null, onLookup) { }

    public ProjectDocumentRightsQueueItemCollectionPresenter()
      : this(null, null) { }
  }
}

// ==================================================================
// ProjectDocumentRightsQueueItemRepositoryImplementer.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Projects.Client
{ 
  public class ProjectDocumentRightsQueueItemRepositoryImplementer<T> : 
      global::Sungero.Projects.Client.ProjectQueueItemBaseRepositoryImplementer<T>,
      global::Sungero.Projects.IProjectDocumentRightsQueueItemRepositoryImplementer<T>
      where T : global::Sungero.Projects.IProjectDocumentRightsQueueItem
    {
       public new global::Sungero.Projects.IProjectDocumentRightsQueueItemAccessRights AccessRights
       {
          get { return (global::Sungero.Projects.IProjectDocumentRightsQueueItemAccessRights)base.AccessRights; }
       }

       public new global::Sungero.Projects.IProjectDocumentRightsQueueItemInfo Info
       {
          get { return (global::Sungero.Projects.IProjectDocumentRightsQueueItemInfo)base.Info; }
       }

       protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
       {
         return new global::Sungero.Projects.Client.ProjectDocumentRightsQueueItemTypeAccessRights(typeof(T));
       }
    }
}

// ==================================================================
// ProjectDocumentRightsQueueItemAccessRights.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Projects.Client
{
  public class ProjectDocumentRightsQueueItemAccessRights : 
    Sungero.Projects.Client.ProjectQueueItemBaseAccessRights, Sungero.Projects.IProjectDocumentRightsQueueItemAccessRights
  {

    public ProjectDocumentRightsQueueItemAccessRights(global::Sungero.Domain.Shared.IEntity entity) : base(entity)
    {
    }
  }

  public class ProjectDocumentRightsQueueItemTypeAccessRights : 
    Sungero.Projects.Client.ProjectQueueItemBaseTypeAccessRights, Sungero.Projects.IProjectDocumentRightsQueueItemAccessRights
  {

    public ProjectDocumentRightsQueueItemTypeAccessRights(global::System.Type entityType) : base(entityType)
    {
    }
  }
}
