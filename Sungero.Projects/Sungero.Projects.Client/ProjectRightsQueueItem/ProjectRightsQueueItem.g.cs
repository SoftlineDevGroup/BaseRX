
// ==================================================================
// ProjectRightsQueueItem.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Projects.Client
{
  public class ProjectRightsQueueItem :
    global::Sungero.Projects.Client.ProjectQueueItemBase, global::Sungero.Projects.IProjectRightsQueueItem
  {
    #region Fields and properties

    public static new readonly global::System.Guid ClassTypeGuid = global::System.Guid.Parse("5ec13d1f-de94-43a3-a51a-1bef325d9dad");

    public override global::System.Guid TypeGuid
    {
      get { return global::Sungero.Projects.Client.ProjectRightsQueueItem.ClassTypeGuid; }
    }

    public override string TypeName
    {
      get { return "Sungero.Projects.IProjectRightsQueueItem, Sungero.Domain.Interfaces"; }
    }

      public override string DisplayValue
      {
        get { return this.Name; }
        set { this.Name = value; }
      }

      public override string DisplayPropertyName
      {
        get { return "Name"; }
      }


    public new global::Sungero.Projects.IProjectRightsQueueItemState State
    {
      get
      {
        return (global::Sungero.Projects.IProjectRightsQueueItemState)base.State;
      }
    }

    protected override global::Sungero.Domain.Shared.IEntityState CreateState()
    {
      return new global::Sungero.Projects.Shared.ProjectRightsQueueItemState(this);
    }

    public new global::Sungero.Projects.IProjectRightsQueueItemInfo Info
    {
      get
      {
        return (global::Sungero.Projects.IProjectRightsQueueItemInfo)base.Info;
      }
    }

    public new global::Sungero.Projects.IProjectRightsQueueItemAccessRights AccessRights
    {
      get
      {
        return (global::Sungero.Projects.IProjectRightsQueueItemAccessRights)base.AccessRights;
      }
    }

    protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
    {
      return new global::Sungero.Projects.Client.ProjectRightsQueueItemAccessRights(this);
    }

        protected global::Sungero.Domain.Client.SimpleProperty<global::System.Int32?> _FolderId;

        public virtual global::System.Int32? FolderId
        {
          get { return this._FolderId.Value; }
          set { this._FolderId.Value = value; }
        }










    #endregion

    #region Methods

    protected override object CreateActionsHandlers()
    {
      return new global::Sungero.Projects.Client.ProjectRightsQueueItemActions(this);
    }

    protected override object CreateCollectionActionsHandlers()
    {
      return new global::Sungero.Projects.Client.ProjectRightsQueueItemCollectionActions();
    }

    protected override object CreateAnyChildEntityActionsHandlers()
    {
      return new global::Sungero.Projects.Client.ProjectRightsQueueItemAnyChildEntityActions();
    }

    protected override object CreateAnyChildEntityCollectionActionsHandlers()
    {
      return new global::Sungero.Projects.Client.ProjectRightsQueueItemAnyChildEntityCollectionActions();
    }


    protected override global::Sungero.Domain.Client.EntityFunctions CreateClientFunctions()
    {
      return new global::Sungero.Projects.Client.ProjectRightsQueueItemFunctions(this);
    }

    protected override global::Sungero.Domain.Shared.EntityFunctions CreateSharedFunctions()
    {
      return new global::Sungero.Projects.Shared.ProjectRightsQueueItemFunctions(this);
    }
    protected override object CreateHandlers() {
      return new global::Sungero.Projects.ProjectRightsQueueItemClientHandlers(this);
    }
    protected override object CreateSharedHandlers() {
      return new global::Sungero.Projects.ProjectRightsQueueItemSharedHandlers(this);
    }

    #endregion

    #region Framework events

    protected void FolderIdChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.IntegerPropertyChangedEventArgs(this.State.Properties.FolderId, this.FolderId, this);
     ((global::Sungero.Projects.ProjectRightsQueueItemSharedHandlers)this.SharedHandlers).FolderIdChanged(args);
    }



  protected global::System.Int32? FolderIdValueInputHandler(global::System.Int32? value)
  {
    var args = new global::Sungero.Presentation.IntegerValueInputEventArgs(this.FolderId, value, this, this.Info.Properties.FolderId);
    ((global::Sungero.Projects.ProjectRightsQueueItemClientHandlers)this.Handlers).FolderIdValueInput(args);
    return args.NewValue;
  }



    #endregion

    #region Constructors





    public ProjectRightsQueueItem()
    {
            this._FolderId = new global::Sungero.Domain.Client.SimpleProperty<global::System.Int32?>("FolderId", this);
            this._FolderId.ValueChanged += (sender, e) => { this.FolderIdChangedHandler(); };
            this.AddProperty(this._FolderId);








    }

    #endregion

  }
}

// ==================================================================
// ProjectRightsQueueItemPresenter.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Projects.Client
{
  public class ProjectRightsQueueItemPresenter<T> :
    global::Sungero.Projects.Client.ProjectQueueItemBasePresenter<T>
    where T : class, global::Sungero.Projects.IProjectRightsQueueItem
  {
    #region Fields and properties




    #endregion

    #region Methods

    #endregion

    #region Framework events

    protected override void EntityPropertyChangedEventHandler(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
    {
      base.EntityPropertyChangedEventHandler(sender, e);
    }

    #endregion



    #region Constructors

    private void Init()
    {
              this._BoxCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.ExchangeCore.IBoxBase>(() => this.Entity.Id, typeof(T), "Box");

              this._RootBoxCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.ExchangeCore.IBusinessUnitBox>(() => this.Entity.Id, typeof(T), "RootBox");


    }

    public ProjectRightsQueueItemPresenter()
    {
      this.Init();
    }

    #endregion
  }
}

// ==================================================================
// ProjectRightsQueueItemCollectionPresenter.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Projects.Client
{
  public class ProjectRightsQueueItemCollectionPresenter<T> : 
    global::Sungero.Projects.Client.ProjectQueueItemBaseCollectionPresenter<T>
    where T: class, global::Sungero.Projects.IProjectRightsQueueItem
  {
    #region Actions



    #endregion

    #region Methods


    #endregion

    public ProjectRightsQueueItemCollectionPresenter(global::System.Linq.IQueryable<T> query, OnLookup onLookup)
      : base(query, onLookup)
    {
    }

    public ProjectRightsQueueItemCollectionPresenter(global::System.Linq.IQueryable<T> query)
      : this(query, null) { }

    public ProjectRightsQueueItemCollectionPresenter(OnLookup onLookup)
      : this(null, onLookup) { }

    public ProjectRightsQueueItemCollectionPresenter()
      : this(null, null) { }
  }
}

// ==================================================================
// ProjectRightsQueueItemRepositoryImplementer.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Projects.Client
{ 
  public class ProjectRightsQueueItemRepositoryImplementer<T> : 
      global::Sungero.Projects.Client.ProjectQueueItemBaseRepositoryImplementer<T>,
      global::Sungero.Projects.IProjectRightsQueueItemRepositoryImplementer<T>
      where T : global::Sungero.Projects.IProjectRightsQueueItem
    {
       public new global::Sungero.Projects.IProjectRightsQueueItemAccessRights AccessRights
       {
          get { return (global::Sungero.Projects.IProjectRightsQueueItemAccessRights)base.AccessRights; }
       }

       public new global::Sungero.Projects.IProjectRightsQueueItemInfo Info
       {
          get { return (global::Sungero.Projects.IProjectRightsQueueItemInfo)base.Info; }
       }

       protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
       {
         return new global::Sungero.Projects.Client.ProjectRightsQueueItemTypeAccessRights(typeof(T));
       }
    }
}

// ==================================================================
// ProjectRightsQueueItemAccessRights.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Projects.Client
{
  public class ProjectRightsQueueItemAccessRights : 
    Sungero.Projects.Client.ProjectQueueItemBaseAccessRights, Sungero.Projects.IProjectRightsQueueItemAccessRights
  {

    public ProjectRightsQueueItemAccessRights(global::Sungero.Domain.Shared.IEntity entity) : base(entity)
    {
    }
  }

  public class ProjectRightsQueueItemTypeAccessRights : 
    Sungero.Projects.Client.ProjectQueueItemBaseTypeAccessRights, Sungero.Projects.IProjectRightsQueueItemAccessRights
  {

    public ProjectRightsQueueItemTypeAccessRights(global::System.Type entityType) : base(entityType)
    {
    }
  }
}
