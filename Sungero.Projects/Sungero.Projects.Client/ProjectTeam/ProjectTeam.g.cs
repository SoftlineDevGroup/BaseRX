
// ==================================================================
// ProjectTeam.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Projects.Client
{
  public class ProjectTeam :
    global::Sungero.CoreEntities.Client.Group, global::Sungero.Projects.IProjectTeam
  {
    #region Fields and properties

    public static new readonly global::System.Guid ClassTypeGuid = global::System.Guid.Parse("c5bd2267-3ce0-4f4b-a891-cce8638a24fa");

    public override global::System.Guid TypeGuid
    {
      get { return global::Sungero.Projects.Client.ProjectTeam.ClassTypeGuid; }
    }

    public override string TypeName
    {
      get { return "Sungero.Projects.IProjectTeam, Sungero.Domain.Interfaces"; }
    }

      public override string DisplayValue
      {
        get { return this.Name; }
        set { this.Name = value; }
      }

      public override string DisplayPropertyName
      {
        get { return "Name"; }
      }


    public new global::Sungero.Projects.IProjectTeamState State
    {
      get
      {
        return (global::Sungero.Projects.IProjectTeamState)base.State;
      }
    }

    protected override global::Sungero.Domain.Shared.IEntityState CreateState()
    {
      return new global::Sungero.Projects.Shared.ProjectTeamState(this);
    }

    public new global::Sungero.Projects.IProjectTeamInfo Info
    {
      get
      {
        return (global::Sungero.Projects.IProjectTeamInfo)base.Info;
      }
    }

    public new global::Sungero.Projects.IProjectTeamAccessRights AccessRights
    {
      get
      {
        return (global::Sungero.Projects.IProjectTeamAccessRights)base.AccessRights;
      }
    }

    protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
    {
      return new global::Sungero.Projects.Client.ProjectTeamAccessRights(this);
    }










    #endregion

    #region Methods

    protected override object CreateActionsHandlers()
    {
      return new global::Sungero.Projects.Client.ProjectTeamActions(this);
    }

    protected override object CreateCollectionActionsHandlers()
    {
      return new global::Sungero.Projects.Client.ProjectTeamCollectionActions();
    }

    protected override object CreateAnyChildEntityActionsHandlers()
    {
      return new global::Sungero.Projects.Client.ProjectTeamAnyChildEntityActions();
    }

    protected override object CreateAnyChildEntityCollectionActionsHandlers()
    {
      return new global::Sungero.Projects.Client.ProjectTeamAnyChildEntityCollectionActions();
    }


    protected override global::Sungero.Domain.Client.EntityFunctions CreateClientFunctions()
    {
      return new global::Sungero.Projects.Client.ProjectTeamFunctions(this);
    }

    protected override global::Sungero.Domain.Shared.EntityFunctions CreateSharedFunctions()
    {
      return new global::Sungero.Projects.Shared.ProjectTeamFunctions(this);
    }
    protected override object CreateHandlers() {
      return new global::Sungero.Projects.ProjectTeamClientHandlers(this);
    }
    protected override object CreateSharedHandlers() {
      return new global::Sungero.Projects.ProjectTeamSharedHandlers(this);
    }

    #endregion

    #region Framework events






    #endregion

    #region Constructors



            protected override void InitRecipientLinksCollectionProperty()
            {
              this._RecipientLinks = new global::Sungero.Domain.Client.ListProperty<global::Sungero.Projects.IProjectTeamRecipientLinks>("RecipientLinks", this);
              this._RecipientLinks.ValueChanged += (sender, e) => { this.RecipientLinksChangedHandler(); };
              this.AddProperty((global::Sungero.Domain.Client.IProperty)this._RecipientLinks);
              this.SetRecipientLinksEventHandlers();
            }


    public ProjectTeam()
    {








    }

    #endregion

  }
}

// ==================================================================
// ProjectTeamPresenter.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Projects.Client
{
  public class ProjectTeamPresenter<T> :
    global::Sungero.CoreEntities.Client.GroupPresenter<T>
    where T : class, global::Sungero.Projects.IProjectTeam
  {
    #region Fields and properties




    #endregion

    #region Methods

    #endregion

    #region Framework events

    protected override void EntityPropertyChangedEventHandler(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
    {
      base.EntityPropertyChangedEventHandler(sender, e);
    }

    #endregion



    #region Constructors

    private void Init()
    {
              this._ParentCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationProperty<global::Sungero.CoreEntities.IGroup>(() => this.Entity, typeof(T), "Parent");


                        this._RecipientLinksMemberCollectionPresenter
                        .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.CoreEntities.IRecipient>(() => this.Entity.Id, typeof(Sungero.Projects.IProjectTeamRecipientLinks), "Member");



    }

    public ProjectTeamPresenter()
    {
      this.Init();
    }

    #endregion
  }
}

// ==================================================================
// ProjectTeamCollectionPresenter.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Projects.Client
{
  public class ProjectTeamCollectionPresenter<T> : 
    global::Sungero.CoreEntities.Client.GroupCollectionPresenter<T>
    where T: class, global::Sungero.Projects.IProjectTeam
  {
    #region Actions



    #endregion

    #region Methods


    #endregion

    public ProjectTeamCollectionPresenter(global::System.Linq.IQueryable<T> query, OnLookup onLookup)
      : base(query, onLookup)
    {
    }

    public ProjectTeamCollectionPresenter(global::System.Linq.IQueryable<T> query)
      : this(query, null) { }

    public ProjectTeamCollectionPresenter(OnLookup onLookup)
      : this(null, onLookup) { }

    public ProjectTeamCollectionPresenter()
      : this(null, null) { }
  }
}

// ==================================================================
// ProjectTeamRepositoryImplementer.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Projects.Client
{ 
  public class ProjectTeamRepositoryImplementer<T> : 
      global::Sungero.CoreEntities.Client.GroupRepositoryImplementer<T>,
      global::Sungero.Projects.IProjectTeamRepositoryImplementer<T>
      where T : global::Sungero.Projects.IProjectTeam
    {
       public new global::Sungero.Projects.IProjectTeamAccessRights AccessRights
       {
          get { return (global::Sungero.Projects.IProjectTeamAccessRights)base.AccessRights; }
       }

       public new global::Sungero.Projects.IProjectTeamInfo Info
       {
          get { return (global::Sungero.Projects.IProjectTeamInfo)base.Info; }
       }

       protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
       {
         return new global::Sungero.Projects.Client.ProjectTeamTypeAccessRights(typeof(T));
       }
    }
}

// ==================================================================
// ProjectTeamAccessRights.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Projects.Client
{
  public class ProjectTeamAccessRights : 
    Sungero.CoreEntities.Client.GroupAccessRights, Sungero.Projects.IProjectTeamAccessRights
  {

    public ProjectTeamAccessRights(global::Sungero.Domain.Shared.IEntity entity) : base(entity)
    {
    }
  }

  public class ProjectTeamTypeAccessRights : 
    Sungero.CoreEntities.Client.GroupTypeAccessRights, Sungero.Projects.IProjectTeamAccessRights
  {

    public ProjectTeamTypeAccessRights(global::System.Type entityType) : base(entityType)
    {
    }
  }
}
