
// ==================================================================
// Project.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Projects.Client
{
  public class Project :
    global::Sungero.Docflow.Client.ProjectBase, global::Sungero.Projects.IProject
  {
    #region Fields and properties

    public static new readonly global::System.Guid ClassTypeGuid = global::System.Guid.Parse("4383f2ff-56e6-46f4-b4ef-cc17e6aeef40");

    public override global::System.Guid TypeGuid
    {
      get { return global::Sungero.Projects.Client.Project.ClassTypeGuid; }
    }

    public override string TypeName
    {
      get { return "Sungero.Projects.IProject, Sungero.Domain.Interfaces"; }
    }

      public override string DisplayValue
      {
        get { return this.Name; }
        set { this.Name = value; }
      }

      public override string DisplayPropertyName
      {
        get { return "Name"; }
      }


    public new global::Sungero.Projects.IProjectState State
    {
      get
      {
        return (global::Sungero.Projects.IProjectState)base.State;
      }
    }

    protected override global::Sungero.Domain.Shared.IEntityState CreateState()
    {
      return new global::Sungero.Projects.Shared.ProjectState(this);
    }

    public new global::Sungero.Projects.IProjectInfo Info
    {
      get
      {
        return (global::Sungero.Projects.IProjectInfo)base.Info;
      }
    }

    public new global::Sungero.Projects.IProjectAccessRights AccessRights
    {
      get
      {
        return (global::Sungero.Projects.IProjectAccessRights)base.AccessRights;
      }
    }

    protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
    {
      return new global::Sungero.Projects.Client.ProjectAccessRights(this);
    }

        protected global::Sungero.Domain.Client.SimpleProperty<global::System.String> _ShortName;

        public virtual global::System.String ShortName
        {
          get { return this._ShortName.Value; }
          set { this._ShortName.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.DateTime?> _StartDate;

        public virtual global::System.DateTime? StartDate
        {
          get { return this._StartDate.Value; }
          set { this._StartDate.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.DateTime?> _EndDate;

        public virtual global::System.DateTime? EndDate
        {
          get { return this._EndDate.Value; }
          set { this._EndDate.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.String> _Note;

        public virtual global::System.String Note
        {
          get { return this._Note.Value; }
          set { this._Note.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.DateTime?> _ActualStartDate;

        public virtual global::System.DateTime? ActualStartDate
        {
          get { return this._ActualStartDate.Value; }
          set { this._ActualStartDate.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.DateTime?> _ActualFinishDate;

        public virtual global::System.DateTime? ActualFinishDate
        {
          get { return this._ActualFinishDate.Value; }
          set { this._ActualFinishDate.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.Int32?> _ExecutionPercent;

        public virtual global::System.Int32? ExecutionPercent
        {
          get { return this._ExecutionPercent.Value; }
          set { this._ExecutionPercent.Value = value; }
        }
        protected global::Sungero.Domain.Client.EnumSimpleProperty<global::Sungero.Core.Enumeration?> _Stage;

        public virtual global::Sungero.Core.Enumeration? Stage
        {
          get { return this._Stage.Value; }
          set { this._Stage.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.DateTime?> _Modified;

        public virtual global::System.DateTime? Modified
        {
          get { return this._Modified.Value; }
          set { this._Modified.Value = value; }
        }


        private static global::Sungero.Domain.Shared.EnumerationItems _StageItems = new global::Sungero.Domain.Shared.EnumerationItems(
          null,
          typeof(global::Sungero.Projects.Project.Stage),
          typeof(global::Sungero.Projects.Client.Project),
          "Stage");

        public static global::Sungero.Domain.Shared.EnumerationItems StageItems
        {
          get { return global::Sungero.Projects.Client.Project._StageItems; }
        }

        public virtual global::Sungero.Domain.Shared.EnumerationItems StageAllowedItems
        {
          get { return global::Sungero.Projects.Client.Project.StageItems; }
        }




              protected global::Sungero.Domain.Client.INavigationProperty<global::Sungero.Projects.IProjectKind> _ProjectKind;

              public virtual global::Sungero.Projects.IProjectKind ProjectKind
              {
              get
              {
                return this._ProjectKind.Value as global::Sungero.Projects.IProjectKind;
              }

              set
              {
                (this._ProjectKind as global::Sungero.Domain.Client.IProperty).Value = value;
              }
            }



              protected global::Sungero.Domain.Client.INavigationProperty<global::Sungero.Company.IEmployee> _InternalCustomer;

              public virtual global::Sungero.Company.IEmployee InternalCustomer
              {
              get
              {
                return this._InternalCustomer.Value as global::Sungero.Company.IEmployee;
              }

              set
              {
                (this._InternalCustomer as global::Sungero.Domain.Client.IProperty).Value = value;
              }
            }



              protected global::Sungero.Domain.Client.INavigationProperty<global::Sungero.Parties.ICounterparty> _ExternalCustomer;

              public virtual global::Sungero.Parties.ICounterparty ExternalCustomer
              {
              get
              {
                return this._ExternalCustomer.Value as global::Sungero.Parties.ICounterparty;
              }

              set
              {
                (this._ExternalCustomer as global::Sungero.Domain.Client.IProperty).Value = value;
              }
            }



              protected global::Sungero.Domain.Client.INavigationProperty<global::Sungero.Company.IEmployee> _Manager;

              public virtual global::Sungero.Company.IEmployee Manager
              {
              get
              {
                return this._Manager.Value as global::Sungero.Company.IEmployee;
              }

              set
              {
                (this._Manager as global::Sungero.Domain.Client.IProperty).Value = value;
              }
            }



              protected global::Sungero.Domain.Client.INavigationProperty<global::Sungero.CoreEntities.IFolder> _Folder;

              public virtual global::Sungero.CoreEntities.IFolder Folder
              {
              get
              {
                return this._Folder.Value as global::Sungero.CoreEntities.IFolder;
              }

              set
              {
                (this._Folder as global::Sungero.Domain.Client.IProperty).Value = value;
              }
            }



              protected global::Sungero.Domain.Client.INavigationProperty<global::Sungero.Projects.IProject> _LeadingProject;

              public virtual global::Sungero.Projects.IProject LeadingProject
              {
              get
              {
                return this._LeadingProject.Value as global::Sungero.Projects.IProject;
              }

              set
              {
                (this._LeadingProject as global::Sungero.Domain.Client.IProperty).Value = value;
              }
            }



              protected global::Sungero.Domain.Client.INavigationProperty<global::Sungero.Company.IEmployee> _Administrator;

              public virtual global::Sungero.Company.IEmployee Administrator
              {
              get
              {
                return this._Administrator.Value as global::Sungero.Company.IEmployee;
              }

              set
              {
                (this._Administrator as global::Sungero.Domain.Client.IProperty).Value = value;
              }
            }







          protected global::Sungero.Domain.Client.IListProperty<global::Sungero.Projects.IProjectTeamMembers> _TeamMembers;

          virtual public global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Projects.IProjectTeamMembers> TeamMembers
          {
            get { return this._TeamMembers.Value; }
          }


          protected global::Sungero.Domain.Client.IListProperty<global::Sungero.Projects.IProjectClassifier> _Classifier;

          virtual public global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Projects.IProjectClassifier> Classifier
          {
            get { return this._Classifier.Value; }
          }






    private object _TeamMembersActionsHandlers;

    public object TeamMembersActionsHandlers
    {
      get
      {
        if (this._TeamMembersActionsHandlers == null)
          this._TeamMembersActionsHandlers = this.CreateTeamMembersActionsHandlers();
        return this._TeamMembersActionsHandlers;
      }
    }

    private object _TeamMembersCollectionActionsHandlers;

    public object TeamMembersCollectionActionsHandlers
    {
      get
      {
        if (this._TeamMembersCollectionActionsHandlers == null)
          this._TeamMembersCollectionActionsHandlers = this.CreateTeamMembersCollectionActionsHandlers();
        return this._TeamMembersCollectionActionsHandlers;
      }
    }
    private object _ClassifierActionsHandlers;

    public object ClassifierActionsHandlers
    {
      get
      {
        if (this._ClassifierActionsHandlers == null)
          this._ClassifierActionsHandlers = this.CreateClassifierActionsHandlers();
        return this._ClassifierActionsHandlers;
      }
    }

    private object _ClassifierCollectionActionsHandlers;

    public object ClassifierCollectionActionsHandlers
    {
      get
      {
        if (this._ClassifierCollectionActionsHandlers == null)
          this._ClassifierCollectionActionsHandlers = this.CreateClassifierCollectionActionsHandlers();
        return this._ClassifierCollectionActionsHandlers;
      }
    }

    #endregion

    #region Methods

    protected override object CreateActionsHandlers()
    {
      return new global::Sungero.Projects.Client.ProjectActions(this);
    }

    protected override object CreateCollectionActionsHandlers()
    {
      return new global::Sungero.Projects.Client.ProjectCollectionActions();
    }

    protected override object CreateAnyChildEntityActionsHandlers()
    {
      return new global::Sungero.Projects.Client.ProjectAnyChildEntityActions();
    }

    protected override object CreateAnyChildEntityCollectionActionsHandlers()
    {
      return new global::Sungero.Projects.Client.ProjectAnyChildEntityCollectionActions();
    }

    protected object CreateTeamMembersActionsHandlers()
    {
      return null;
    }

    protected object CreateTeamMembersCollectionActionsHandlers()
    {
      return null;
    }
    protected object CreateClassifierActionsHandlers()
    {
      return null;
    }

    protected object CreateClassifierCollectionActionsHandlers()
    {
      return null;
    }


    protected override global::Sungero.Domain.Client.EntityFunctions CreateClientFunctions()
    {
      return new global::Sungero.Projects.Client.ProjectFunctions(this);
    }

    protected override global::Sungero.Domain.Shared.EntityFunctions CreateSharedFunctions()
    {
      return new global::Sungero.Projects.Shared.ProjectFunctions(this);
    }
    protected override object CreateHandlers() {
      return new global::Sungero.Projects.ProjectClientHandlers(this);
    }
    protected override object CreateSharedHandlers() {
      return new global::Sungero.Projects.ProjectSharedHandlers(this);
    }

    #endregion

    #region Framework events

    protected void ProjectKindChangedHandler()
    {
      var args = new global::Sungero.Projects.Shared.ProjectProjectKindChangedEventArgs(this.State.Properties.ProjectKind, this.ProjectKind, this);
     ((global::Sungero.Projects.ProjectSharedHandlers)this.SharedHandlers).ProjectKindChanged(args);
    }

    protected void ShortNameChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.ShortName, this.ShortName, this);
     ((global::Sungero.Projects.ProjectSharedHandlers)this.SharedHandlers).ShortNameChanged(args);
    }

    protected void InternalCustomerChangedHandler()
    {
      var args = new global::Sungero.Projects.Shared.ProjectInternalCustomerChangedEventArgs(this.State.Properties.InternalCustomer, this.InternalCustomer, this);
     ((global::Sungero.Projects.ProjectSharedHandlers)this.SharedHandlers).InternalCustomerChanged(args);
    }

    protected void ExternalCustomerChangedHandler()
    {
      var args = new global::Sungero.Projects.Shared.ProjectExternalCustomerChangedEventArgs(this.State.Properties.ExternalCustomer, this.ExternalCustomer, this);
     ((global::Sungero.Projects.ProjectSharedHandlers)this.SharedHandlers).ExternalCustomerChanged(args);
    }

    protected void StartDateChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.DateTimePropertyChangedEventArgs(this.State.Properties.StartDate, this.StartDate, this);
     ((global::Sungero.Projects.ProjectSharedHandlers)this.SharedHandlers).StartDateChanged(args);
    }

    protected void EndDateChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.DateTimePropertyChangedEventArgs(this.State.Properties.EndDate, this.EndDate, this);
     ((global::Sungero.Projects.ProjectSharedHandlers)this.SharedHandlers).EndDateChanged(args);
    }

    protected void NoteChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.Note, this.Note, this);
     ((global::Sungero.Projects.ProjectSharedHandlers)this.SharedHandlers).NoteChanged(args);
    }

    protected void TeamMembersChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.CollectionPropertyChangedEventArgs(this);
     ((global::Sungero.Projects.ProjectSharedHandlers)this.SharedHandlers).TeamMembersChanged(args);
    }

    protected void ManagerChangedHandler()
    {
      var args = new global::Sungero.Projects.Shared.ProjectManagerChangedEventArgs(this.State.Properties.Manager, this.Manager, this);
     ((global::Sungero.Projects.ProjectSharedHandlers)this.SharedHandlers).ManagerChanged(args);
    }

    protected void FolderChangedHandler()
    {
      var args = new global::Sungero.Projects.Shared.ProjectFolderChangedEventArgs(this.State.Properties.Folder, this.Folder, this);
     ((global::Sungero.Projects.ProjectSharedHandlers)this.SharedHandlers).FolderChanged(args);
    }

    protected void ClassifierChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.CollectionPropertyChangedEventArgs(this);
     ((global::Sungero.Projects.ProjectSharedHandlers)this.SharedHandlers).ClassifierChanged(args);
    }

    protected void LeadingProjectChangedHandler()
    {
      var args = new global::Sungero.Projects.Shared.ProjectLeadingProjectChangedEventArgs(this.State.Properties.LeadingProject, this.LeadingProject, this);
     ((global::Sungero.Projects.ProjectSharedHandlers)this.SharedHandlers).LeadingProjectChanged(args);
    }

    protected void AdministratorChangedHandler()
    {
      var args = new global::Sungero.Projects.Shared.ProjectAdministratorChangedEventArgs(this.State.Properties.Administrator, this.Administrator, this);
     ((global::Sungero.Projects.ProjectSharedHandlers)this.SharedHandlers).AdministratorChanged(args);
    }

    protected void ActualStartDateChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.DateTimePropertyChangedEventArgs(this.State.Properties.ActualStartDate, this.ActualStartDate, this);
     ((global::Sungero.Projects.ProjectSharedHandlers)this.SharedHandlers).ActualStartDateChanged(args);
    }

    protected void ActualFinishDateChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.DateTimePropertyChangedEventArgs(this.State.Properties.ActualFinishDate, this.ActualFinishDate, this);
     ((global::Sungero.Projects.ProjectSharedHandlers)this.SharedHandlers).ActualFinishDateChanged(args);
    }

    protected void ExecutionPercentChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.IntegerPropertyChangedEventArgs(this.State.Properties.ExecutionPercent, this.ExecutionPercent, this);
     ((global::Sungero.Projects.ProjectSharedHandlers)this.SharedHandlers).ExecutionPercentChanged(args);
    }

    protected void StageChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.EnumerationPropertyChangedEventArgs(this.State.Properties.Stage, this.Stage, this);
     ((global::Sungero.Projects.ProjectSharedHandlers)this.SharedHandlers).StageChanged(args);
    }

    protected void ModifiedChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.DateTimePropertyChangedEventArgs(this.State.Properties.Modified, this.Modified, this);
     ((global::Sungero.Projects.ProjectSharedHandlers)this.SharedHandlers).ModifiedChanged(args);
    }



    protected virtual global::Sungero.Projects.ProjectTeamMembersSharedCollectionHandlers CreateTeamMembersAddedHandler(global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.Projects.ProjectTeamMembersSharedCollectionHandlers(this, e.Value, null, e.Source);
    }

    protected virtual global::Sungero.Projects.ProjectTeamMembersSharedCollectionHandlers CreateTeamMembersDeletedHandler(global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.Projects.ProjectTeamMembersSharedCollectionHandlers(this, null, e.Value, null);
    }

    protected virtual void TeamMembersAddedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {  
      var collectionHandlers = this.CreateTeamMembersAddedHandler(e);
      if (collectionHandlers != null)
      {
        var args = new global::Sungero.Domain.Shared.CollectionPropertyAddedEventArgs(this);
        collectionHandlers.TeamMembersAdded(args);
      }
    }

    protected virtual void TeamMembersDeletedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {  
      var collectionHandlers = this.CreateTeamMembersDeletedHandler(e);
      if (collectionHandlers != null)
      {
        var args = new global::Sungero.Domain.Shared.CollectionPropertyDeletedEventArgs(this);
        collectionHandlers.TeamMembersDeleted(args);
      }
    }


    protected virtual global::Sungero.Projects.ProjectClassifierSharedCollectionHandlers CreateClassifierAddedHandler(global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.Projects.ProjectClassifierSharedCollectionHandlers(this, e.Value, null, e.Source);
    }

    protected virtual global::Sungero.Projects.ProjectClassifierSharedCollectionHandlers CreateClassifierDeletedHandler(global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.Projects.ProjectClassifierSharedCollectionHandlers(this, null, e.Value, null);
    }

    protected virtual void ClassifierAddedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {  
      var collectionHandlers = this.CreateClassifierAddedHandler(e);
      if (collectionHandlers != null)
      {
        var args = new global::Sungero.Domain.Shared.CollectionPropertyAddedEventArgs(this);
        collectionHandlers.ClassifierAdded(args);
      }
    }

    protected virtual void ClassifierDeletedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {  
      var collectionHandlers = this.CreateClassifierDeletedHandler(e);
      if (collectionHandlers != null)
      {
        var args = new global::Sungero.Domain.Shared.CollectionPropertyDeletedEventArgs(this);
        collectionHandlers.ClassifierDeleted(args);
      }
    }


  protected global::Sungero.Projects.IProjectKind ProjectKindValueInputHandler(global::Sungero.Projects.IProjectKind value)
  {
    var args = new global::Sungero.Projects.Client.ProjectProjectKindValueInputEventArgs(this.ProjectKind, value, this, this.Info.Properties.ProjectKind);
    ((global::Sungero.Projects.ProjectClientHandlers)this.Handlers).ProjectKindValueInput(args);
    return args.NewValue;
  }

  protected global::System.String ShortNameValueInputHandler(global::System.String value)
  {
    var args = new global::Sungero.Presentation.StringValueInputEventArgs(this.ShortName, value, this, this.Info.Properties.ShortName);
    ((global::Sungero.Projects.ProjectClientHandlers)this.Handlers).ShortNameValueInput(args);
    return args.NewValue;
  }

  protected global::Sungero.Company.IEmployee InternalCustomerValueInputHandler(global::Sungero.Company.IEmployee value)
  {
    var args = new global::Sungero.Projects.Client.ProjectInternalCustomerValueInputEventArgs(this.InternalCustomer, value, this, this.Info.Properties.InternalCustomer);
    ((global::Sungero.Projects.ProjectClientHandlers)this.Handlers).InternalCustomerValueInput(args);
    return args.NewValue;
  }

  protected global::Sungero.Parties.ICounterparty ExternalCustomerValueInputHandler(global::Sungero.Parties.ICounterparty value)
  {
    var args = new global::Sungero.Projects.Client.ProjectExternalCustomerValueInputEventArgs(this.ExternalCustomer, value, this, this.Info.Properties.ExternalCustomer);
    ((global::Sungero.Projects.ProjectClientHandlers)this.Handlers).ExternalCustomerValueInput(args);
    return args.NewValue;
  }

  protected global::System.DateTime? StartDateValueInputHandler(global::System.DateTime? value)
  {
    var args = new global::Sungero.Presentation.DateTimeValueInputEventArgs(this.StartDate, value, this, this.Info.Properties.StartDate);
    ((global::Sungero.Projects.ProjectClientHandlers)this.Handlers).StartDateValueInput(args);
    return args.NewValue;
  }

  protected global::System.DateTime? EndDateValueInputHandler(global::System.DateTime? value)
  {
    var args = new global::Sungero.Presentation.DateTimeValueInputEventArgs(this.EndDate, value, this, this.Info.Properties.EndDate);
    ((global::Sungero.Projects.ProjectClientHandlers)this.Handlers).EndDateValueInput(args);
    return args.NewValue;
  }

  protected global::System.String NoteValueInputHandler(global::System.String value)
  {
    var args = new global::Sungero.Presentation.StringValueInputEventArgs(this.Note, value, this, this.Info.Properties.Note);
    ((global::Sungero.Projects.ProjectClientHandlers)this.Handlers).NoteValueInput(args);
    return args.NewValue;
  }


  protected global::Sungero.Company.IEmployee ManagerValueInputHandler(global::Sungero.Company.IEmployee value)
  {
    var args = new global::Sungero.Projects.Client.ProjectManagerValueInputEventArgs(this.Manager, value, this, this.Info.Properties.Manager);
    ((global::Sungero.Projects.ProjectClientHandlers)this.Handlers).ManagerValueInput(args);
    return args.NewValue;
  }

  protected global::Sungero.CoreEntities.IFolder FolderValueInputHandler(global::Sungero.CoreEntities.IFolder value)
  {
    var args = new global::Sungero.Projects.Client.ProjectFolderValueInputEventArgs(this.Folder, value, this, this.Info.Properties.Folder);
    ((global::Sungero.Projects.ProjectClientHandlers)this.Handlers).FolderValueInput(args);
    return args.NewValue;
  }


  protected global::Sungero.Projects.IProject LeadingProjectValueInputHandler(global::Sungero.Projects.IProject value)
  {
    var args = new global::Sungero.Projects.Client.ProjectLeadingProjectValueInputEventArgs(this.LeadingProject, value, this, this.Info.Properties.LeadingProject);
    ((global::Sungero.Projects.ProjectClientHandlers)this.Handlers).LeadingProjectValueInput(args);
    return args.NewValue;
  }

  protected global::Sungero.Company.IEmployee AdministratorValueInputHandler(global::Sungero.Company.IEmployee value)
  {
    var args = new global::Sungero.Projects.Client.ProjectAdministratorValueInputEventArgs(this.Administrator, value, this, this.Info.Properties.Administrator);
    ((global::Sungero.Projects.ProjectClientHandlers)this.Handlers).AdministratorValueInput(args);
    return args.NewValue;
  }

  protected global::System.DateTime? ActualStartDateValueInputHandler(global::System.DateTime? value)
  {
    var args = new global::Sungero.Presentation.DateTimeValueInputEventArgs(this.ActualStartDate, value, this, this.Info.Properties.ActualStartDate);
    ((global::Sungero.Projects.ProjectClientHandlers)this.Handlers).ActualStartDateValueInput(args);
    return args.NewValue;
  }

  protected global::System.DateTime? ActualFinishDateValueInputHandler(global::System.DateTime? value)
  {
    var args = new global::Sungero.Presentation.DateTimeValueInputEventArgs(this.ActualFinishDate, value, this, this.Info.Properties.ActualFinishDate);
    ((global::Sungero.Projects.ProjectClientHandlers)this.Handlers).ActualFinishDateValueInput(args);
    return args.NewValue;
  }

  protected global::System.Int32? ExecutionPercentValueInputHandler(global::System.Int32? value)
  {
    var args = new global::Sungero.Presentation.IntegerValueInputEventArgs(this.ExecutionPercent, value, this, this.Info.Properties.ExecutionPercent);
    ((global::Sungero.Projects.ProjectClientHandlers)this.Handlers).ExecutionPercentValueInput(args);
    return args.NewValue;
  }

  protected global::Sungero.Core.Enumeration? StageValueInputHandler(global::Sungero.Core.Enumeration? value)
  {
    var args = new global::Sungero.Presentation.EnumerationValueInputEventArgs(this.Stage, value, this, this.Info.Properties.Stage);
    ((global::Sungero.Projects.ProjectClientHandlers)this.Handlers).StageValueInput(args);
    return args.NewValue;
  }

  protected global::System.DateTime? ModifiedValueInputHandler(global::System.DateTime? value)
  {
    var args = new global::Sungero.Presentation.DateTimeValueInputEventArgs(this.Modified, value, this, this.Info.Properties.Modified);
    ((global::Sungero.Projects.ProjectClientHandlers)this.Handlers).ModifiedValueInput(args);
    return args.NewValue;
  }


  protected global::System.Collections.Generic.IEnumerable<global::Sungero.Core.Enumeration> StageFilteringHandler()
  {
    return ((global::Sungero.Projects.ProjectClientHandlers)this.Handlers).StageFiltering(this.StageAllowedItems);
  }



    #endregion

    #region Constructors



              protected virtual void InitProjectKindNavigationProperty()
              {
                this._ProjectKind = new global::Sungero.Domain.Client.NavigationProperty<global::Sungero.Projects.IProjectKind>("ProjectKind", this);
                this._ProjectKind.ValueChanged += (sender, e) => { this.ProjectKindChangedHandler(); };
                this.AddProperty(this._ProjectKind as global::Sungero.Domain.Client.IProperty);
              }




              protected virtual void InitInternalCustomerNavigationProperty()
              {
                this._InternalCustomer = new global::Sungero.Domain.Client.NavigationProperty<global::Sungero.Company.IEmployee>("InternalCustomer", this);
                this._InternalCustomer.ValueChanged += (sender, e) => { this.InternalCustomerChangedHandler(); };
                this.AddProperty(this._InternalCustomer as global::Sungero.Domain.Client.IProperty);
              }




              protected virtual void InitExternalCustomerNavigationProperty()
              {
                this._ExternalCustomer = new global::Sungero.Domain.Client.NavigationProperty<global::Sungero.Parties.ICounterparty>("ExternalCustomer", this);
                this._ExternalCustomer.ValueChanged += (sender, e) => { this.ExternalCustomerChangedHandler(); };
                this.AddProperty(this._ExternalCustomer as global::Sungero.Domain.Client.IProperty);
              }




              protected virtual void InitManagerNavigationProperty()
              {
                this._Manager = new global::Sungero.Domain.Client.NavigationProperty<global::Sungero.Company.IEmployee>("Manager", this);
                this._Manager.ValueChanged += (sender, e) => { this.ManagerChangedHandler(); };
                this.AddProperty(this._Manager as global::Sungero.Domain.Client.IProperty);
              }




              protected virtual void InitFolderNavigationProperty()
              {
                this._Folder = new global::Sungero.Domain.Client.NavigationProperty<global::Sungero.CoreEntities.IFolder>("Folder", this);
                this._Folder.ValueChanged += (sender, e) => { this.FolderChangedHandler(); };
                this.AddProperty(this._Folder as global::Sungero.Domain.Client.IProperty);
              }




              protected virtual void InitLeadingProjectNavigationProperty()
              {
                this._LeadingProject = new global::Sungero.Domain.Client.NavigationProperty<global::Sungero.Projects.IProject>("LeadingProject", this);
                this._LeadingProject.ValueChanged += (sender, e) => { this.LeadingProjectChangedHandler(); };
                this.AddProperty(this._LeadingProject as global::Sungero.Domain.Client.IProperty);
              }




              protected virtual void InitAdministratorNavigationProperty()
              {
                this._Administrator = new global::Sungero.Domain.Client.NavigationProperty<global::Sungero.Company.IEmployee>("Administrator", this);
                this._Administrator.ValueChanged += (sender, e) => { this.AdministratorChangedHandler(); };
                this.AddProperty(this._Administrator as global::Sungero.Domain.Client.IProperty);
              }



            protected virtual void InitTeamMembersCollectionProperty()
            {
              this._TeamMembers = new global::Sungero.Domain.Client.ListProperty<global::Sungero.Projects.IProjectTeamMembers>("TeamMembers", this);
              this._TeamMembers.ValueChanged += (sender, e) => { this.TeamMembersChangedHandler(); };
              this.AddProperty((global::Sungero.Domain.Client.IProperty)this._TeamMembers);
              this.SetTeamMembersEventHandlers();
            }

            protected void SetTeamMembersEventHandlers()
            {
              this._TeamMembers.ChildEntityAdded += this.TeamMembersAddedHandler;
              this._TeamMembers.ChildEntityDeleted += this.TeamMembersDeletedHandler;
            }

            protected virtual void InitClassifierCollectionProperty()
            {
              this._Classifier = new global::Sungero.Domain.Client.ListProperty<global::Sungero.Projects.IProjectClassifier>("Classifier", this);
              this._Classifier.ValueChanged += (sender, e) => { this.ClassifierChangedHandler(); };
              this.AddProperty((global::Sungero.Domain.Client.IProperty)this._Classifier);
              this.SetClassifierEventHandlers();
            }

            protected void SetClassifierEventHandlers()
            {
              this._Classifier.ChildEntityAdded += this.ClassifierAddedHandler;
              this._Classifier.ChildEntityDeleted += this.ClassifierDeletedHandler;
            }


    public Project()
    {
            this._ShortName = new global::Sungero.Domain.Client.SimpleProperty<global::System.String>("ShortName", this);
            this._ShortName.ValueChanged += (sender, e) => { this.ShortNameChangedHandler(); };
            this.AddProperty(this._ShortName);

            this._StartDate = new global::Sungero.Domain.Client.SimpleProperty<global::System.DateTime?>("StartDate", this);
            this._StartDate.ValueChanged += (sender, e) => { this.StartDateChangedHandler(); };
            this.AddProperty(this._StartDate);

            this._EndDate = new global::Sungero.Domain.Client.SimpleProperty<global::System.DateTime?>("EndDate", this);
            this._EndDate.ValueChanged += (sender, e) => { this.EndDateChangedHandler(); };
            this.AddProperty(this._EndDate);

            this._Note = new global::Sungero.Domain.Client.SimpleProperty<global::System.String>("Note", this);
            this._Note.ValueChanged += (sender, e) => { this.NoteChangedHandler(); };
            this.AddProperty(this._Note);

            this._ActualStartDate = new global::Sungero.Domain.Client.SimpleProperty<global::System.DateTime?>("ActualStartDate", this);
            this._ActualStartDate.ValueChanged += (sender, e) => { this.ActualStartDateChangedHandler(); };
            this.AddProperty(this._ActualStartDate);

            this._ActualFinishDate = new global::Sungero.Domain.Client.SimpleProperty<global::System.DateTime?>("ActualFinishDate", this);
            this._ActualFinishDate.ValueChanged += (sender, e) => { this.ActualFinishDateChangedHandler(); };
            this.AddProperty(this._ActualFinishDate);

            this._ExecutionPercent = new global::Sungero.Domain.Client.SimpleProperty<global::System.Int32?>("ExecutionPercent", this);
            this._ExecutionPercent.ValueChanged += (sender, e) => { this.ExecutionPercentChangedHandler(); };
            this.AddProperty(this._ExecutionPercent);

            this._Stage = new global::Sungero.Domain.Client.EnumSimpleProperty<global::Sungero.Core.Enumeration?>("Stage", this);
            this._Stage.ValueChanged += (sender, e) => { this.StageChangedHandler(); };
            this.AddProperty(this._Stage);

            this._Modified = new global::Sungero.Domain.Client.SimpleProperty<global::System.DateTime?>("Modified", this);
            this._Modified.ValueChanged += (sender, e) => { this.ModifiedChangedHandler(); };
            this.AddProperty(this._Modified);

            this.InitProjectKindNavigationProperty();

            this.InitInternalCustomerNavigationProperty();

            this.InitExternalCustomerNavigationProperty();

            this.InitManagerNavigationProperty();

            this.InitFolderNavigationProperty();

            this.InitLeadingProjectNavigationProperty();

            this.InitAdministratorNavigationProperty();


            this.InitTeamMembersCollectionProperty();

            this.InitClassifierCollectionProperty();







    }

    #endregion

  }
}

// ==================================================================
// ProjectPresenter.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Projects.Client
{
  public class ProjectPresenter<T> :
    global::Sungero.Docflow.Client.ProjectBasePresenter<T>
    where T : class, global::Sungero.Projects.IProject
  {
    #region Fields and properties

          private global::System.Windows.Input.ICommand _ShowFolderCommand;

          public global::System.Windows.Input.ICommand ShowFolderCommand
          {
            get
            {
              if (this._ShowFolderCommand == null)
                  this._ShowFolderCommand = new global::Sungero.Domain.Client.SingleEntityCommand<T>("ShowFolder", this, this.ShowFolder, this.CanShowFolder) { IsEmptyParameterAllowed = true };
              return this._ShowFolderCommand;
            }
          }
          private global::System.Windows.Input.ICommand _CreateProjectDocumentCommand;

          public global::System.Windows.Input.ICommand CreateProjectDocumentCommand
          {
            get
            {
              if (this._CreateProjectDocumentCommand == null)
                  this._CreateProjectDocumentCommand = new global::Sungero.Domain.Client.SingleEntityCommand<T>("CreateProjectDocument", this, this.CreateProjectDocument, this.CanCreateProjectDocument) { IsEmptyParameterAllowed = true };
              return this._CreateProjectDocumentCommand;
            }
          }
          private global::System.Windows.Input.ICommand _CloseProjectCommand;

          public global::System.Windows.Input.ICommand CloseProjectCommand
          {
            get
            {
              if (this._CloseProjectCommand == null)
                  this._CloseProjectCommand = new global::Sungero.Domain.Client.SingleEntityCommand<T>("CloseProject", this, this.CloseProject, this.CanCloseProject) { IsEmptyParameterAllowed = true };
              return this._CloseProjectCommand;
            }
          }
          private global::System.Windows.Input.ICommand _ReopenProjectCommand;

          public global::System.Windows.Input.ICommand ReopenProjectCommand
          {
            get
            {
              if (this._ReopenProjectCommand == null)
                  this._ReopenProjectCommand = new global::Sungero.Domain.Client.SingleEntityCommand<T>("ReopenProject", this, this.ReopenProject, this.CanReopenProject) { IsEmptyParameterAllowed = true };
              return this._ReopenProjectCommand;
            }
          }
          private global::System.Windows.Input.ICommand _ShowDocumentsCommand;

          public global::System.Windows.Input.ICommand ShowDocumentsCommand
          {
            get
            {
              if (this._ShowDocumentsCommand == null)
                  this._ShowDocumentsCommand = new global::Sungero.Domain.Client.SingleEntityCommand<T>("ShowDocuments", this, this.ShowDocuments, this.CanShowDocuments) { IsEmptyParameterAllowed = true };
              return this._ShowDocumentsCommand;
            }
          }




    #endregion

    #region Methods

              private bool CanShowFolder(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfCanExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this);
                return ((Sungero.Projects.Client.ProjectActions)(entity as Sungero.Projects.Client.Project).ActionsHandlers).CanShowFolder(args);
              }

              private void ShowFolder(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this, entity.Info.Actions.ShowFolder);
                ((Sungero.Projects.Client.ProjectActions)(entity as Sungero.Projects.Client.Project).ActionsHandlers).ShowFolder(args);
              }

              private bool CanCreateProjectDocument(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfCanExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this);
                return ((Sungero.Projects.Client.ProjectActions)(entity as Sungero.Projects.Client.Project).ActionsHandlers).CanCreateProjectDocument(args);
              }

              private void CreateProjectDocument(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this, entity.Info.Actions.CreateProjectDocument);
                ((Sungero.Projects.Client.ProjectActions)(entity as Sungero.Projects.Client.Project).ActionsHandlers).CreateProjectDocument(args);
              }

              private bool CanCloseProject(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfCanExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this);
                return ((Sungero.Projects.Client.ProjectActions)(entity as Sungero.Projects.Client.Project).ActionsHandlers).CanCloseProject(args);
              }

              private void CloseProject(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this, entity.Info.Actions.CloseProject);
                ((Sungero.Projects.Client.ProjectActions)(entity as Sungero.Projects.Client.Project).ActionsHandlers).CloseProject(args);
              }

              private bool CanReopenProject(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfCanExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this);
                return ((Sungero.Projects.Client.ProjectActions)(entity as Sungero.Projects.Client.Project).ActionsHandlers).CanReopenProject(args);
              }

              private void ReopenProject(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this, entity.Info.Actions.ReopenProject);
                ((Sungero.Projects.Client.ProjectActions)(entity as Sungero.Projects.Client.Project).ActionsHandlers).ReopenProject(args);
              }

              private bool CanShowDocuments(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfCanExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this);
                return ((Sungero.Projects.Client.ProjectActions)(entity as Sungero.Projects.Client.Project).ActionsHandlers).CanShowDocuments(args);
              }

              private void ShowDocuments(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this, entity.Info.Actions.ShowDocuments);
                ((Sungero.Projects.Client.ProjectActions)(entity as Sungero.Projects.Client.Project).ActionsHandlers).ShowDocuments(args);
              }


    #endregion

    #region Framework events

    protected override void EntityPropertyChangedEventHandler(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
    {
      base.EntityPropertyChangedEventHandler(sender, e);
    }

    #endregion

              protected global::Sungero.Domain.Client.IEntityCollectionPresenter _ProjectKindCollectionPresenter;
              public global::Sungero.Domain.Client.IEntityCollectionPresenter ProjectKindCollectionPresenter
              {
          get { return this._ProjectKindCollectionPresenter; }
        }
              protected global::Sungero.Domain.Client.IEntityCollectionPresenter _InternalCustomerCollectionPresenter;
              public global::Sungero.Domain.Client.IEntityCollectionPresenter InternalCustomerCollectionPresenter
              {
          get { return this._InternalCustomerCollectionPresenter; }
        }
              protected global::Sungero.Domain.Client.IEntityCollectionPresenter _ExternalCustomerCollectionPresenter;
              public global::Sungero.Domain.Client.IEntityCollectionPresenter ExternalCustomerCollectionPresenter
              {
          get { return this._ExternalCustomerCollectionPresenter; }
        }
              protected global::Sungero.Domain.Client.IEntityCollectionPresenter _ManagerCollectionPresenter;
              public global::Sungero.Domain.Client.IEntityCollectionPresenter ManagerCollectionPresenter
              {
          get { return this._ManagerCollectionPresenter; }
        }
              protected global::Sungero.Domain.Client.IEntityCollectionPresenter _FolderCollectionPresenter;
              public global::Sungero.Domain.Client.IEntityCollectionPresenter FolderCollectionPresenter
              {
          get { return this._FolderCollectionPresenter; }
        }
              protected global::Sungero.Domain.Client.IEntityCollectionPresenter _LeadingProjectCollectionPresenter;
              public global::Sungero.Domain.Client.IEntityCollectionPresenter LeadingProjectCollectionPresenter
              {
          get { return this._LeadingProjectCollectionPresenter; }
        }
              protected global::Sungero.Domain.Client.IEntityCollectionPresenter _AdministratorCollectionPresenter;
              public global::Sungero.Domain.Client.IEntityCollectionPresenter AdministratorCollectionPresenter
              {
          get { return this._AdministratorCollectionPresenter; }
        }


                          protected global::Sungero.Domain.Client.IEntityCollectionPresenter _TeamMembersMemberCollectionPresenter;
                          public global::Sungero.Domain.Client.IEntityCollectionPresenter TeamMembersMemberCollectionPresenter
                          {
                  get { return this._TeamMembersMemberCollectionPresenter; }
                }

                          protected global::Sungero.Domain.Client.IEntityCollectionPresenter _ClassifierDocumentKindCollectionPresenter;
                          public global::Sungero.Domain.Client.IEntityCollectionPresenter ClassifierDocumentKindCollectionPresenter
                          {
                  get { return this._ClassifierDocumentKindCollectionPresenter; }
                }
                          protected global::Sungero.Domain.Client.IEntityCollectionPresenter _ClassifierFolderCollectionPresenter;
                          public global::Sungero.Domain.Client.IEntityCollectionPresenter ClassifierFolderCollectionPresenter
                          {
                  get { return this._ClassifierFolderCollectionPresenter; }
                }



    #region Constructors

    private void Init()
    {
                  this._ProjectKindCollectionPresenter = this.CreateCollectionPresenterForNavigationProperty<global::Sungero.Projects.IProjectKind>(global::System.Guid.Parse("1861dcc3-4361-41c9-a683-a811bf826a79"));
              this._ProjectKindCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Projects.IProjectKind>(() => this.Entity.Id, typeof(T), "ProjectKind");

                  this._InternalCustomerCollectionPresenter = this.CreateCollectionPresenterForNavigationProperty<global::Sungero.Company.IEmployee>(global::System.Guid.Parse("2bbfe897-7595-40c4-882b-fdcf3a710559"));
              this._InternalCustomerCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Company.IEmployee>(() => this.Entity.Id, typeof(T), "InternalCustomer");

                  this._ExternalCustomerCollectionPresenter = this.CreateCollectionPresenterForNavigationProperty<global::Sungero.Parties.ICounterparty>(global::System.Guid.Parse("e0f636e3-2ccd-488f-ba82-60ca58b56b54"));
              this._ExternalCustomerCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Parties.ICounterparty>(() => this.Entity.Id, typeof(T), "ExternalCustomer");

                  this._ManagerCollectionPresenter = this.CreateCollectionPresenterForNavigationProperty<global::Sungero.Company.IEmployee>(global::System.Guid.Parse("ccfd3f3e-a9d6-46a6-b5f7-1b59574a17fc"));
              this._ManagerCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Company.IEmployee>(() => this.Entity.Id, typeof(T), "Manager");

                  this._FolderCollectionPresenter = this.CreateCollectionPresenterForNavigationProperty<global::Sungero.CoreEntities.IFolder>(global::System.Guid.Parse("5abe18ff-07ae-43a1-9f11-d49dd208f997"));
              this._FolderCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.CoreEntities.IFolder>(() => this.Entity.Id, typeof(T), "Folder");

                  this._LeadingProjectCollectionPresenter = this.CreateCollectionPresenterForNavigationProperty<global::Sungero.Projects.IProject>(global::System.Guid.Parse("ba219d5d-9cc5-42bb-91c7-105347289c28"));
              this._LeadingProjectCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationProperty<global::Sungero.Projects.IProject>(() => this.Entity, typeof(T), "LeadingProject");

                  this._AdministratorCollectionPresenter = this.CreateCollectionPresenterForNavigationProperty<global::Sungero.Company.IEmployee>(global::System.Guid.Parse("2c827d42-7e09-4462-b97f-1aa807c8ea85"));
              this._AdministratorCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Company.IEmployee>(() => this.Entity.Id, typeof(T), "Administrator");


                          this._TeamMembersMemberCollectionPresenter = this.CreateCollectionPresenterForNavigationProperty<global::Sungero.CoreEntities.IRecipient>(global::System.Guid.Parse("c15c01ad-e4c4-42ea-8e67-44d52c06b5ce"));
                        this._TeamMembersMemberCollectionPresenter
                        .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.CoreEntities.IRecipient>(() => this.Entity.Id, typeof(Sungero.Projects.IProjectTeamMembers), "Member");

                          this._ClassifierDocumentKindCollectionPresenter = this.CreateCollectionPresenterForNavigationProperty<global::Sungero.Docflow.IDocumentKind>(global::System.Guid.Parse("29b2e089-5ce8-40e5-9314-e4b7af9aba8f"));
                        this._ClassifierDocumentKindCollectionPresenter
                        .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Docflow.IDocumentKind>(() => this.Entity.Id, typeof(Sungero.Projects.IProjectClassifier), "DocumentKind");

                          this._ClassifierFolderCollectionPresenter = this.CreateCollectionPresenterForNavigationProperty<global::Sungero.CoreEntities.IFolder>(global::System.Guid.Parse("ff7da1f8-d5c1-48a1-bd1f-a611d4234f58"));
                        this._ClassifierFolderCollectionPresenter
                        .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.CoreEntities.IFolder>(() => this.Entity.Id, typeof(Sungero.Projects.IProjectClassifier), "Folder");


    }

    public ProjectPresenter()
    {
      this.Init();
    }

    #endregion
  }
}

// ==================================================================
// ProjectCollectionPresenter.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Projects.Client
{
  public class ProjectCollectionPresenter<T> : 
    global::Sungero.Docflow.Client.ProjectBaseCollectionPresenter<T>
    where T: class, global::Sungero.Projects.IProject
  {
    #region Actions



    #endregion

    #region Methods


    #endregion

    public ProjectCollectionPresenter(global::System.Linq.IQueryable<T> query, OnLookup onLookup)
      : base(query, onLookup)
    {
    }

    public ProjectCollectionPresenter(global::System.Linq.IQueryable<T> query)
      : this(query, null) { }

    public ProjectCollectionPresenter(OnLookup onLookup)
      : this(null, onLookup) { }

    public ProjectCollectionPresenter()
      : this(null, null) { }
  }
}

// ==================================================================
// ProjectRepositoryImplementer.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Projects.Client
{ 
  public class ProjectRepositoryImplementer<T> : 
      global::Sungero.Docflow.Client.ProjectBaseRepositoryImplementer<T>,
      global::Sungero.Projects.IProjectRepositoryImplementer<T>
      where T : global::Sungero.Projects.IProject
    {
       public new global::Sungero.Projects.IProjectAccessRights AccessRights
       {
          get { return (global::Sungero.Projects.IProjectAccessRights)base.AccessRights; }
       }

       public new global::Sungero.Projects.IProjectInfo Info
       {
          get { return (global::Sungero.Projects.IProjectInfo)base.Info; }
       }

       protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
       {
         return new global::Sungero.Projects.Client.ProjectTypeAccessRights(typeof(T));
       }
    }
}

// ==================================================================
// ProjectAccessRights.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Projects.Client
{
  public class ProjectAccessRights : 
    Sungero.Docflow.Client.ProjectBaseAccessRights, Sungero.Projects.IProjectAccessRights
  {

    public ProjectAccessRights(global::Sungero.Domain.Shared.IEntity entity) : base(entity)
    {
    }
  }

  public class ProjectTypeAccessRights : 
    Sungero.Docflow.Client.ProjectBaseTypeAccessRights, Sungero.Projects.IProjectAccessRights
  {

    public ProjectTypeAccessRights(global::System.Type entityType) : base(entityType)
    {
    }
  }
}
